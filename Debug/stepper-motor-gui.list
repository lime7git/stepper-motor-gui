
stepper-motor-gui.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00021b00  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001794  08021cd0  08021cd0  00022cd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  08023464  08023464  00024464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802360c  0802360c  0002460c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000010  08023624  08023624  00024624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08023634  08023634  00025460  2**0
                  CONTENTS
  7 .ARM          00000008  08023634  08023634  00024634  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  0802363c  0802363c  00025460  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0802363c  0802363c  0002463c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .fini_array   00000008  08023650  08023650  00024650  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .data         00000258  20000000  08023658  00025000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000260  080238b0  00025260  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000360  080239b0  00025360  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00002444  20000460  08023ab0  00025460  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  200028a4  08023ab0  000258a4  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  00025460  2**0
                  CONTENTS, READONLY
 17 BufferSection 0007f800  c0000000  c0000000  00026000  2**2
                  ALLOC
 18 .debug_info   0007b765  00000000  00000000  00025490  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0000f469  00000000  00000000  000a0bf5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003378  00000000  00000000  000b0060  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 0000269a  00000000  00000000  000b33d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00032866  00000000  00000000  000b5a72  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0003e477  00000000  00000000  000e82d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    001205f5  00000000  00000000  0012674f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  00246d44  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000e0f0  00000000  00000000  00246e08  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006a  00000000  00000000  00254ef8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000460 	.word	0x20000460
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08021cb8 	.word	0x08021cb8

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000464 	.word	0x20000464
 800020c:	08021cb8 	.word	0x08021cb8

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 80005a0:	b580      	push	{r7, lr}
 80005a2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80005a4:	4b0d      	ldr	r3, [pc, #52]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005a6:	4a0e      	ldr	r2, [pc, #56]	@ (80005e0 <MX_CRC_Init+0x40>)
 80005a8:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80005aa:	4b0c      	ldr	r3, [pc, #48]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005ac:	2200      	movs	r2, #0
 80005ae:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 80005b0:	4b0a      	ldr	r3, [pc, #40]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005b2:	2200      	movs	r2, #0
 80005b4:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80005b6:	4b09      	ldr	r3, [pc, #36]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005b8:	2200      	movs	r2, #0
 80005ba:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80005bc:	4b07      	ldr	r3, [pc, #28]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005be:	2200      	movs	r2, #0
 80005c0:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005c2:	4b06      	ldr	r3, [pc, #24]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005c4:	2201      	movs	r2, #1
 80005c6:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005c8:	4804      	ldr	r0, [pc, #16]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005ca:	f004 f873 	bl	80046b4 <HAL_CRC_Init>
 80005ce:	4603      	mov	r3, r0
 80005d0:	2b00      	cmp	r3, #0
 80005d2:	d001      	beq.n	80005d8 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80005d4:	f000 fe61 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80005d8:	bf00      	nop
 80005da:	bd80      	pop	{r7, pc}
 80005dc:	2000047c 	.word	0x2000047c
 80005e0:	40023000 	.word	0x40023000

080005e4 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80005e4:	b480      	push	{r7}
 80005e6:	b085      	sub	sp, #20
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a0a      	ldr	r2, [pc, #40]	@ (800061c <HAL_CRC_MspInit+0x38>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d10b      	bne.n	800060e <HAL_CRC_MspInit+0x2a>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80005f6:	4b0a      	ldr	r3, [pc, #40]	@ (8000620 <HAL_CRC_MspInit+0x3c>)
 80005f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005fa:	4a09      	ldr	r2, [pc, #36]	@ (8000620 <HAL_CRC_MspInit+0x3c>)
 80005fc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000600:	6313      	str	r3, [r2, #48]	@ 0x30
 8000602:	4b07      	ldr	r3, [pc, #28]	@ (8000620 <HAL_CRC_MspInit+0x3c>)
 8000604:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000606:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800060a:	60fb      	str	r3, [r7, #12]
 800060c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 800060e:	bf00      	nop
 8000610:	3714      	adds	r7, #20
 8000612:	46bd      	mov	sp, r7
 8000614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000618:	4770      	bx	lr
 800061a:	bf00      	nop
 800061c:	40023000 	.word	0x40023000
 8000620:	40023800 	.word	0x40023800

08000624 <MX_DMA2D_Init>:

DMA2D_HandleTypeDef hdma2d;

/* DMA2D init function */
void MX_DMA2D_Init(void)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8000628:	4b15      	ldr	r3, [pc, #84]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800062a:	4a16      	ldr	r2, [pc, #88]	@ (8000684 <MX_DMA2D_Init+0x60>)
 800062c:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 800062e:	4b14      	ldr	r3, [pc, #80]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000630:	2200      	movs	r2, #0
 8000632:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 8000634:	4b12      	ldr	r3, [pc, #72]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000636:	2200      	movs	r2, #0
 8000638:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 800063a:	4b11      	ldr	r3, [pc, #68]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800063c:	2200      	movs	r2, #0
 800063e:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8000640:	4b0f      	ldr	r3, [pc, #60]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000642:	2200      	movs	r2, #0
 8000644:	629a      	str	r2, [r3, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000646:	4b0e      	ldr	r3, [pc, #56]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000648:	2200      	movs	r2, #0
 800064a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800064c:	4b0c      	ldr	r3, [pc, #48]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800064e:	2200      	movs	r2, #0
 8000650:	631a      	str	r2, [r3, #48]	@ 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000652:	4b0b      	ldr	r3, [pc, #44]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000654:	2200      	movs	r2, #0
 8000656:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000658:	4809      	ldr	r0, [pc, #36]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800065a:	f004 f91d 	bl	8004898 <HAL_DMA2D_Init>
 800065e:	4603      	mov	r3, r0
 8000660:	2b00      	cmp	r3, #0
 8000662:	d001      	beq.n	8000668 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 8000664:	f000 fe19 	bl	800129a <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000668:	2101      	movs	r1, #1
 800066a:	4805      	ldr	r0, [pc, #20]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800066c:	f004 fa6e 	bl	8004b4c <HAL_DMA2D_ConfigLayer>
 8000670:	4603      	mov	r3, r0
 8000672:	2b00      	cmp	r3, #0
 8000674:	d001      	beq.n	800067a <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8000676:	f000 fe10 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 800067a:	bf00      	nop
 800067c:	bd80      	pop	{r7, pc}
 800067e:	bf00      	nop
 8000680:	200004a0 	.word	0x200004a0
 8000684:	4002b000 	.word	0x4002b000

08000688 <HAL_DMA2D_MspInit>:

void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 8000688:	b580      	push	{r7, lr}
 800068a:	b084      	sub	sp, #16
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]

  if(dma2dHandle->Instance==DMA2D)
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	4a0d      	ldr	r2, [pc, #52]	@ (80006cc <HAL_DMA2D_MspInit+0x44>)
 8000696:	4293      	cmp	r3, r2
 8000698:	d113      	bne.n	80006c2 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* DMA2D clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800069a:	4b0d      	ldr	r3, [pc, #52]	@ (80006d0 <HAL_DMA2D_MspInit+0x48>)
 800069c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800069e:	4a0c      	ldr	r2, [pc, #48]	@ (80006d0 <HAL_DMA2D_MspInit+0x48>)
 80006a0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80006a4:	6313      	str	r3, [r2, #48]	@ 0x30
 80006a6:	4b0a      	ldr	r3, [pc, #40]	@ (80006d0 <HAL_DMA2D_MspInit+0x48>)
 80006a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006aa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80006ae:	60fb      	str	r3, [r7, #12]
 80006b0:	68fb      	ldr	r3, [r7, #12]

    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 80006b2:	2200      	movs	r2, #0
 80006b4:	2100      	movs	r1, #0
 80006b6:	205a      	movs	r0, #90	@ 0x5a
 80006b8:	f003 ff4d 	bl	8004556 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80006bc:	205a      	movs	r0, #90	@ 0x5a
 80006be:	f003 ff66 	bl	800458e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }
}
 80006c2:	bf00      	nop
 80006c4:	3710      	adds	r7, #16
 80006c6:	46bd      	mov	sp, r7
 80006c8:	bd80      	pop	{r7, pc}
 80006ca:	bf00      	nop
 80006cc:	4002b000 	.word	0x4002b000
 80006d0:	40023800 	.word	0x40023800

080006d4 <MX_FMC_Init>:

SDRAM_HandleTypeDef hsdram1;

/* FMC initialization function */
void MX_FMC_Init(void)
{
 80006d4:	b580      	push	{r7, lr}
 80006d6:	b088      	sub	sp, #32
 80006d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 80006da:	1d3b      	adds	r3, r7, #4
 80006dc:	2200      	movs	r2, #0
 80006de:	601a      	str	r2, [r3, #0]
 80006e0:	605a      	str	r2, [r3, #4]
 80006e2:	609a      	str	r2, [r3, #8]
 80006e4:	60da      	str	r2, [r3, #12]
 80006e6:	611a      	str	r2, [r3, #16]
 80006e8:	615a      	str	r2, [r3, #20]
 80006ea:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80006ec:	4b4c      	ldr	r3, [pc, #304]	@ (8000820 <MX_FMC_Init+0x14c>)
 80006ee:	4a4d      	ldr	r2, [pc, #308]	@ (8000824 <MX_FMC_Init+0x150>)
 80006f0:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80006f2:	4b4b      	ldr	r3, [pc, #300]	@ (8000820 <MX_FMC_Init+0x14c>)
 80006f4:	2200      	movs	r2, #0
 80006f6:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80006f8:	4b49      	ldr	r3, [pc, #292]	@ (8000820 <MX_FMC_Init+0x14c>)
 80006fa:	2200      	movs	r2, #0
 80006fc:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80006fe:	4b48      	ldr	r3, [pc, #288]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000700:	2204      	movs	r2, #4
 8000702:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000704:	4b46      	ldr	r3, [pc, #280]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000706:	2210      	movs	r2, #16
 8000708:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800070a:	4b45      	ldr	r3, [pc, #276]	@ (8000820 <MX_FMC_Init+0x14c>)
 800070c:	2240      	movs	r2, #64	@ 0x40
 800070e:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000710:	4b43      	ldr	r3, [pc, #268]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000712:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8000716:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000718:	4b41      	ldr	r3, [pc, #260]	@ (8000820 <MX_FMC_Init+0x14c>)
 800071a:	2200      	movs	r2, #0
 800071c:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800071e:	4b40      	ldr	r3, [pc, #256]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000720:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000724:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000726:	4b3e      	ldr	r3, [pc, #248]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000728:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800072c:	625a      	str	r2, [r3, #36]	@ 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 800072e:	4b3c      	ldr	r3, [pc, #240]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000730:	2200      	movs	r2, #0
 8000732:	629a      	str	r2, [r3, #40]	@ 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000734:	2302      	movs	r3, #2
 8000736:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000738:	2307      	movs	r3, #7
 800073a:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 800073c:	2304      	movs	r3, #4
 800073e:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8000740:	2307      	movs	r3, #7
 8000742:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8000744:	2303      	movs	r3, #3
 8000746:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000748:	2302      	movs	r3, #2
 800074a:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 800074c:	2302      	movs	r3, #2
 800074e:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000750:	1d3b      	adds	r3, r7, #4
 8000752:	4619      	mov	r1, r3
 8000754:	4832      	ldr	r0, [pc, #200]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000756:	f006 fae5 	bl	8006d24 <HAL_SDRAM_Init>
 800075a:	4603      	mov	r3, r0
 800075c:	2b00      	cmp	r3, #0
 800075e:	d001      	beq.n	8000764 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8000760:	f000 fd9b 	bl	800129a <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */
  __IO uint32_t tmpmrd = 0;
 8000764:	2300      	movs	r3, #0
 8000766:	603b      	str	r3, [r7, #0]

      /* Step 1: Configure a clock configuration enable command */
      Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000768:	4b2f      	ldr	r3, [pc, #188]	@ (8000828 <MX_FMC_Init+0x154>)
 800076a:	2201      	movs	r2, #1
 800076c:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 800076e:	4b2e      	ldr	r3, [pc, #184]	@ (8000828 <MX_FMC_Init+0x154>)
 8000770:	2210      	movs	r2, #16
 8000772:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 1;
 8000774:	4b2c      	ldr	r3, [pc, #176]	@ (8000828 <MX_FMC_Init+0x154>)
 8000776:	2201      	movs	r2, #1
 8000778:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = 0;
 800077a:	4b2b      	ldr	r3, [pc, #172]	@ (8000828 <MX_FMC_Init+0x154>)
 800077c:	2200      	movs	r2, #0
 800077e:	60da      	str	r2, [r3, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000780:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000784:	4928      	ldr	r1, [pc, #160]	@ (8000828 <MX_FMC_Init+0x154>)
 8000786:	4826      	ldr	r0, [pc, #152]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000788:	f006 fb00 	bl	8006d8c <HAL_SDRAM_SendCommand>

      /* Step 2: Insert 100 us minimum delay */
      /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
      HAL_Delay(1);
 800078c:	2001      	movs	r0, #1
 800078e:	f003 fde3 	bl	8004358 <HAL_Delay>

      /* Step 3: Configure a PALL (precharge all) command */
      Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8000792:	4b25      	ldr	r3, [pc, #148]	@ (8000828 <MX_FMC_Init+0x154>)
 8000794:	2202      	movs	r2, #2
 8000796:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000798:	4b23      	ldr	r3, [pc, #140]	@ (8000828 <MX_FMC_Init+0x154>)
 800079a:	2210      	movs	r2, #16
 800079c:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 1;
 800079e:	4b22      	ldr	r3, [pc, #136]	@ (8000828 <MX_FMC_Init+0x154>)
 80007a0:	2201      	movs	r2, #1
 80007a2:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = 0;
 80007a4:	4b20      	ldr	r3, [pc, #128]	@ (8000828 <MX_FMC_Init+0x154>)
 80007a6:	2200      	movs	r2, #0
 80007a8:	60da      	str	r2, [r3, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80007aa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80007ae:	491e      	ldr	r1, [pc, #120]	@ (8000828 <MX_FMC_Init+0x154>)
 80007b0:	481b      	ldr	r0, [pc, #108]	@ (8000820 <MX_FMC_Init+0x14c>)
 80007b2:	f006 faeb 	bl	8006d8c <HAL_SDRAM_SendCommand>

      /* Step 4: Configure an Auto Refresh command */
      Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80007b6:	4b1c      	ldr	r3, [pc, #112]	@ (8000828 <MX_FMC_Init+0x154>)
 80007b8:	2203      	movs	r2, #3
 80007ba:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80007bc:	4b1a      	ldr	r3, [pc, #104]	@ (8000828 <MX_FMC_Init+0x154>)
 80007be:	2210      	movs	r2, #16
 80007c0:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 8;
 80007c2:	4b19      	ldr	r3, [pc, #100]	@ (8000828 <MX_FMC_Init+0x154>)
 80007c4:	2208      	movs	r2, #8
 80007c6:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = 0;
 80007c8:	4b17      	ldr	r3, [pc, #92]	@ (8000828 <MX_FMC_Init+0x154>)
 80007ca:	2200      	movs	r2, #0
 80007cc:	60da      	str	r2, [r3, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80007ce:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80007d2:	4915      	ldr	r1, [pc, #84]	@ (8000828 <MX_FMC_Init+0x154>)
 80007d4:	4812      	ldr	r0, [pc, #72]	@ (8000820 <MX_FMC_Init+0x14c>)
 80007d6:	f006 fad9 	bl	8006d8c <HAL_SDRAM_SendCommand>

      /* Step 5: Program the external memory mode register */
      tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80007da:	f44f 730c 	mov.w	r3, #560	@ 0x230
 80007de:	603b      	str	r3, [r7, #0]
               SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL    | \
               SDRAM_MODEREG_CAS_LATENCY_3            | \
               SDRAM_MODEREG_OPERATING_MODE_STANDARD  | \
               SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

      Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80007e0:	4b11      	ldr	r3, [pc, #68]	@ (8000828 <MX_FMC_Init+0x154>)
 80007e2:	2204      	movs	r2, #4
 80007e4:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80007e6:	4b10      	ldr	r3, [pc, #64]	@ (8000828 <MX_FMC_Init+0x154>)
 80007e8:	2210      	movs	r2, #16
 80007ea:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 1;
 80007ec:	4b0e      	ldr	r3, [pc, #56]	@ (8000828 <MX_FMC_Init+0x154>)
 80007ee:	2201      	movs	r2, #1
 80007f0:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = tmpmrd;
 80007f2:	683b      	ldr	r3, [r7, #0]
 80007f4:	4a0c      	ldr	r2, [pc, #48]	@ (8000828 <MX_FMC_Init+0x154>)
 80007f6:	60d3      	str	r3, [r2, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80007f8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80007fc:	490a      	ldr	r1, [pc, #40]	@ (8000828 <MX_FMC_Init+0x154>)
 80007fe:	4808      	ldr	r0, [pc, #32]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000800:	f006 fac4 	bl	8006d8c <HAL_SDRAM_SendCommand>

      /* Step 6: Set the refresh rate counter */
      /* Set the device refresh rate */
      HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8000804:	f240 712b 	movw	r1, #1835	@ 0x72b
 8000808:	4805      	ldr	r0, [pc, #20]	@ (8000820 <MX_FMC_Init+0x14c>)
 800080a:	f006 faf4 	bl	8006df6 <HAL_SDRAM_ProgramRefreshRate>

      //Deactivate speculative/cache access to first FMC Bank to save FMC bandwidth
      FMC_Bank1->BTCR[0] = 0x000030D2;
 800080e:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 8000812:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8000816:	601a      	str	r2, [r3, #0]
  /* USER CODE END FMC_Init 2 */
}
 8000818:	bf00      	nop
 800081a:	3720      	adds	r7, #32
 800081c:	46bd      	mov	sp, r7
 800081e:	bd80      	pop	{r7, pc}
 8000820:	200004f0 	.word	0x200004f0
 8000824:	a0000140 	.word	0xa0000140
 8000828:	200004e0 	.word	0x200004e0

0800082c <HAL_FMC_MspInit>:

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 800082c:	b580      	push	{r7, lr}
 800082e:	b086      	sub	sp, #24
 8000830:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000832:	1d3b      	adds	r3, r7, #4
 8000834:	2200      	movs	r2, #0
 8000836:	601a      	str	r2, [r3, #0]
 8000838:	605a      	str	r2, [r3, #4]
 800083a:	609a      	str	r2, [r3, #8]
 800083c:	60da      	str	r2, [r3, #12]
 800083e:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8000840:	4b3a      	ldr	r3, [pc, #232]	@ (800092c <HAL_FMC_MspInit+0x100>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	2b00      	cmp	r3, #0
 8000846:	d16d      	bne.n	8000924 <HAL_FMC_MspInit+0xf8>
    return;
  }
  FMC_Initialized = 1;
 8000848:	4b38      	ldr	r3, [pc, #224]	@ (800092c <HAL_FMC_MspInit+0x100>)
 800084a:	2201      	movs	r2, #1
 800084c:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 800084e:	4b38      	ldr	r3, [pc, #224]	@ (8000930 <HAL_FMC_MspInit+0x104>)
 8000850:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000852:	4a37      	ldr	r2, [pc, #220]	@ (8000930 <HAL_FMC_MspInit+0x104>)
 8000854:	f043 0301 	orr.w	r3, r3, #1
 8000858:	6393      	str	r3, [r2, #56]	@ 0x38
 800085a:	4b35      	ldr	r3, [pc, #212]	@ (8000930 <HAL_FMC_MspInit+0x104>)
 800085c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800085e:	f003 0301 	and.w	r3, r3, #1
 8000862:	603b      	str	r3, [r7, #0]
 8000864:	683b      	ldr	r3, [r7, #0]
  PE12   ------> FMC_D9
  PE15   ------> FMC_D12
  PE13   ------> FMC_D10
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8000866:	f64f 7383 	movw	r3, #65411	@ 0xff83
 800086a:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_14|GPIO_PIN_7|GPIO_PIN_10
                          |GPIO_PIN_12|GPIO_PIN_15|GPIO_PIN_13;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800086c:	2302      	movs	r3, #2
 800086e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000870:	2300      	movs	r3, #0
 8000872:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000874:	2303      	movs	r3, #3
 8000876:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000878:	230c      	movs	r3, #12
 800087a:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800087c:	1d3b      	adds	r3, r7, #4
 800087e:	4619      	mov	r1, r3
 8000880:	482c      	ldr	r0, [pc, #176]	@ (8000934 <HAL_FMC_MspInit+0x108>)
 8000882:	f004 f9f5 	bl	8004c70 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8000886:	f248 1333 	movw	r3, #33075	@ 0x8133
 800088a:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_5|GPIO_PIN_4;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800088c:	2302      	movs	r3, #2
 800088e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000890:	2300      	movs	r3, #0
 8000892:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000894:	2303      	movs	r3, #3
 8000896:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000898:	230c      	movs	r3, #12
 800089a:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800089c:	1d3b      	adds	r3, r7, #4
 800089e:	4619      	mov	r1, r3
 80008a0:	4825      	ldr	r0, [pc, #148]	@ (8000938 <HAL_FMC_MspInit+0x10c>)
 80008a2:	f004 f9e5 	bl	8004c70 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80008a6:	f24c 7303 	movw	r3, #50947	@ 0xc703
 80008aa:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_14|GPIO_PIN_9|GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008ac:	2302      	movs	r3, #2
 80008ae:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008b0:	2300      	movs	r3, #0
 80008b2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008b4:	2303      	movs	r3, #3
 80008b6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80008b8:	230c      	movs	r3, #12
 80008ba:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80008bc:	1d3b      	adds	r3, r7, #4
 80008be:	4619      	mov	r1, r3
 80008c0:	481e      	ldr	r0, [pc, #120]	@ (800093c <HAL_FMC_MspInit+0x110>)
 80008c2:	f004 f9d5 	bl	8004c70 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80008c6:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80008ca:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_12|GPIO_PIN_15
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_11;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008cc:	2302      	movs	r3, #2
 80008ce:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008d0:	2300      	movs	r3, #0
 80008d2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008d4:	2303      	movs	r3, #3
 80008d6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80008d8:	230c      	movs	r3, #12
 80008da:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80008dc:	1d3b      	adds	r3, r7, #4
 80008de:	4619      	mov	r1, r3
 80008e0:	4817      	ldr	r0, [pc, #92]	@ (8000940 <HAL_FMC_MspInit+0x114>)
 80008e2:	f004 f9c5 	bl	8004c70 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 80008e6:	2328      	movs	r3, #40	@ 0x28
 80008e8:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008ea:	2302      	movs	r3, #2
 80008ec:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008ee:	2300      	movs	r3, #0
 80008f0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008f2:	2303      	movs	r3, #3
 80008f4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80008f6:	230c      	movs	r3, #12
 80008f8:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80008fa:	1d3b      	adds	r3, r7, #4
 80008fc:	4619      	mov	r1, r3
 80008fe:	4811      	ldr	r0, [pc, #68]	@ (8000944 <HAL_FMC_MspInit+0x118>)
 8000900:	f004 f9b6 	bl	8004c70 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000904:	2308      	movs	r3, #8
 8000906:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000908:	2302      	movs	r3, #2
 800090a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800090c:	2300      	movs	r3, #0
 800090e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000910:	2303      	movs	r3, #3
 8000912:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000914:	230c      	movs	r3, #12
 8000916:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000918:	1d3b      	adds	r3, r7, #4
 800091a:	4619      	mov	r1, r3
 800091c:	480a      	ldr	r0, [pc, #40]	@ (8000948 <HAL_FMC_MspInit+0x11c>)
 800091e:	f004 f9a7 	bl	8004c70 <HAL_GPIO_Init>
 8000922:	e000      	b.n	8000926 <HAL_FMC_MspInit+0xfa>
    return;
 8000924:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8000926:	3718      	adds	r7, #24
 8000928:	46bd      	mov	sp, r7
 800092a:	bd80      	pop	{r7, pc}
 800092c:	20000524 	.word	0x20000524
 8000930:	40023800 	.word	0x40023800
 8000934:	40021000 	.word	0x40021000
 8000938:	40021800 	.word	0x40021800
 800093c:	40020c00 	.word	0x40020c00
 8000940:	40021400 	.word	0x40021400
 8000944:	40021c00 	.word	0x40021c00
 8000948:	40020800 	.word	0x40020800

0800094c <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* sdramHandle){
 800094c:	b580      	push	{r7, lr}
 800094e:	b082      	sub	sp, #8
 8000950:	af00      	add	r7, sp, #0
 8000952:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8000954:	f7ff ff6a 	bl	800082c <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8000958:	bf00      	nop
 800095a:	3708      	adds	r7, #8
 800095c:	46bd      	mov	sp, r7
 800095e:	bd80      	pop	{r7, pc}

08000960 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000960:	b580      	push	{r7, lr}
 8000962:	b090      	sub	sp, #64	@ 0x40
 8000964:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000966:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800096a:	2200      	movs	r2, #0
 800096c:	601a      	str	r2, [r3, #0]
 800096e:	605a      	str	r2, [r3, #4]
 8000970:	609a      	str	r2, [r3, #8]
 8000972:	60da      	str	r2, [r3, #12]
 8000974:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000976:	4b7a      	ldr	r3, [pc, #488]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000978:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800097a:	4a79      	ldr	r2, [pc, #484]	@ (8000b60 <MX_GPIO_Init+0x200>)
 800097c:	f043 0310 	orr.w	r3, r3, #16
 8000980:	6313      	str	r3, [r2, #48]	@ 0x30
 8000982:	4b77      	ldr	r3, [pc, #476]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000984:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000986:	f003 0310 	and.w	r3, r3, #16
 800098a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800098c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800098e:	4b74      	ldr	r3, [pc, #464]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000990:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000992:	4a73      	ldr	r2, [pc, #460]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000994:	f043 0301 	orr.w	r3, r3, #1
 8000998:	6313      	str	r3, [r2, #48]	@ 0x30
 800099a:	4b71      	ldr	r3, [pc, #452]	@ (8000b60 <MX_GPIO_Init+0x200>)
 800099c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800099e:	f003 0301 	and.w	r3, r3, #1
 80009a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80009a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009a6:	4b6e      	ldr	r3, [pc, #440]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009aa:	4a6d      	ldr	r2, [pc, #436]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009ac:	f043 0302 	orr.w	r3, r3, #2
 80009b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80009b2:	4b6b      	ldr	r3, [pc, #428]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009b6:	f003 0302 	and.w	r3, r3, #2
 80009ba:	623b      	str	r3, [r7, #32]
 80009bc:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80009be:	4b68      	ldr	r3, [pc, #416]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009c2:	4a67      	ldr	r2, [pc, #412]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80009c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80009ca:	4b65      	ldr	r3, [pc, #404]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009ce:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80009d2:	61fb      	str	r3, [r7, #28]
 80009d4:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80009d6:	4b62      	ldr	r3, [pc, #392]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009da:	4a61      	ldr	r2, [pc, #388]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009dc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80009e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80009e2:	4b5f      	ldr	r3, [pc, #380]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009e6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80009ea:	61bb      	str	r3, [r7, #24]
 80009ec:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009ee:	4b5c      	ldr	r3, [pc, #368]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009f2:	4a5b      	ldr	r2, [pc, #364]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009f4:	f043 0308 	orr.w	r3, r3, #8
 80009f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80009fa:	4b59      	ldr	r3, [pc, #356]	@ (8000b60 <MX_GPIO_Init+0x200>)
 80009fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009fe:	f003 0308 	and.w	r3, r3, #8
 8000a02:	617b      	str	r3, [r7, #20]
 8000a04:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000a06:	4b56      	ldr	r3, [pc, #344]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a0a:	4a55      	ldr	r2, [pc, #340]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a0c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000a10:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a12:	4b53      	ldr	r3, [pc, #332]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a16:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000a1a:	613b      	str	r3, [r7, #16]
 8000a1c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a1e:	4b50      	ldr	r3, [pc, #320]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a22:	4a4f      	ldr	r2, [pc, #316]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a24:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000a28:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a2a:	4b4d      	ldr	r3, [pc, #308]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a2e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a32:	60fb      	str	r3, [r7, #12]
 8000a34:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a36:	4b4a      	ldr	r3, [pc, #296]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a3a:	4a49      	ldr	r2, [pc, #292]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a3c:	f043 0320 	orr.w	r3, r3, #32
 8000a40:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a42:	4b47      	ldr	r3, [pc, #284]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a46:	f003 0320 	and.w	r3, r3, #32
 8000a4a:	60bb      	str	r3, [r7, #8]
 8000a4c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000a4e:	4b44      	ldr	r3, [pc, #272]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a52:	4a43      	ldr	r2, [pc, #268]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a54:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000a58:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a5a:	4b41      	ldr	r3, [pc, #260]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000a62:	607b      	str	r3, [r7, #4]
 8000a64:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a66:	4b3e      	ldr	r3, [pc, #248]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a6a:	4a3d      	ldr	r2, [pc, #244]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a6c:	f043 0304 	orr.w	r3, r3, #4
 8000a70:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a72:	4b3b      	ldr	r3, [pc, #236]	@ (8000b60 <MX_GPIO_Init+0x200>)
 8000a74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a76:	f003 0304 	and.w	r3, r3, #4
 8000a7a:	603b      	str	r3, [r7, #0]
 8000a7c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_2|GPIO_PIN_12, GPIO_PIN_RESET);
 8000a7e:	2200      	movs	r2, #0
 8000a80:	f241 0104 	movw	r1, #4100	@ 0x1004
 8000a84:	4837      	ldr	r0, [pc, #220]	@ (8000b64 <MX_GPIO_Init+0x204>)
 8000a86:	f004 fab7 	bl	8004ff8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_RESET);
 8000a8a:	2200      	movs	r2, #0
 8000a8c:	2108      	movs	r1, #8
 8000a8e:	4836      	ldr	r0, [pc, #216]	@ (8000b68 <MX_GPIO_Init+0x208>)
 8000a90:	f004 fab2 	bl	8004ff8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000a94:	2201      	movs	r2, #1
 8000a96:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000a9a:	4834      	ldr	r0, [pc, #208]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a9c:	f004 faac 	bl	8004ff8 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PI2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000aa0:	2304      	movs	r3, #4
 8000aa2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000aa4:	2301      	movs	r3, #1
 8000aa6:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aa8:	2300      	movs	r3, #0
 8000aaa:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8000aac:	2301      	movs	r3, #1
 8000aae:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000ab0:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000ab4:	4619      	mov	r1, r3
 8000ab6:	482b      	ldr	r0, [pc, #172]	@ (8000b64 <MX_GPIO_Init+0x204>)
 8000ab8:	f004 f8da 	bl	8004c70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000abc:	2308      	movs	r3, #8
 8000abe:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ac0:	2301      	movs	r3, #1
 8000ac2:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ac8:	2300      	movs	r3, #0
 8000aca:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000acc:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4825      	ldr	r0, [pc, #148]	@ (8000b68 <MX_GPIO_Init+0x208>)
 8000ad4:	f004 f8cc 	bl	8004c70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PI12 */
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ad8:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000adc:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ade:	2301      	movs	r3, #1
 8000ae0:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ae6:	2300      	movs	r3, #0
 8000ae8:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000aea:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000aee:	4619      	mov	r1, r3
 8000af0:	481c      	ldr	r0, [pc, #112]	@ (8000b64 <MX_GPIO_Init+0x204>)
 8000af2:	f004 f8bd 	bl	8004c70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000af6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000afa:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000afc:	2301      	movs	r3, #1
 8000afe:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b00:	2300      	movs	r3, #0
 8000b02:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8000b04:	2301      	movs	r3, #1
 8000b06:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b08:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000b0c:	4619      	mov	r1, r3
 8000b0e:	4817      	ldr	r0, [pc, #92]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000b10:	f004 f8ae 	bl	8004c70 <HAL_GPIO_Init>

  /*Configure GPIO pin : PI13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000b14:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b18:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b1a:	2300      	movs	r3, #0
 8000b1c:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b1e:	2300      	movs	r3, #0
 8000b20:	637b      	str	r3, [r7, #52]	@ 0x34
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000b22:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000b26:	4619      	mov	r1, r3
 8000b28:	480e      	ldr	r0, [pc, #56]	@ (8000b64 <MX_GPIO_Init+0x204>)
 8000b2a:	f004 f8a1 	bl	8004c70 <HAL_GPIO_Init>

  /*Configure GPIO pins : PG7 PG6 */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 8000b2e:	23c0      	movs	r3, #192	@ 0xc0
 8000b30:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000b32:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8000b36:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000b38:	2301      	movs	r3, #1
 8000b3a:	637b      	str	r3, [r7, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000b3c:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000b40:	4619      	mov	r1, r3
 8000b42:	480b      	ldr	r0, [pc, #44]	@ (8000b70 <MX_GPIO_Init+0x210>)
 8000b44:	f004 f894 	bl	8004c70 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8000b48:	2200      	movs	r2, #0
 8000b4a:	2100      	movs	r1, #0
 8000b4c:	2017      	movs	r0, #23
 8000b4e:	f003 fd02 	bl	8004556 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000b52:	2017      	movs	r0, #23
 8000b54:	f003 fd1b 	bl	800458e <HAL_NVIC_EnableIRQ>

}
 8000b58:	bf00      	nop
 8000b5a:	3740      	adds	r7, #64	@ 0x40
 8000b5c:	46bd      	mov	sp, r7
 8000b5e:	bd80      	pop	{r7, pc}
 8000b60:	40023800 	.word	0x40023800
 8000b64:	40022000 	.word	0x40022000
 8000b68:	40022800 	.word	0x40022800
 8000b6c:	40020000 	.word	0x40020000
 8000b70:	40021800 	.word	0x40021800

08000b74 <MX_I2C3_Init>:

I2C_HandleTypeDef hi2c3;

/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8000b74:	b580      	push	{r7, lr}
 8000b76:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000b78:	4b1b      	ldr	r3, [pc, #108]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b7a:	4a1c      	ldr	r2, [pc, #112]	@ (8000bec <MX_I2C3_Init+0x78>)
 8000b7c:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x20404768;
 8000b7e:	4b1a      	ldr	r3, [pc, #104]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b80:	4a1b      	ldr	r2, [pc, #108]	@ (8000bf0 <MX_I2C3_Init+0x7c>)
 8000b82:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 8000b84:	4b18      	ldr	r3, [pc, #96]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b86:	2200      	movs	r2, #0
 8000b88:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b8a:	4b17      	ldr	r3, [pc, #92]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b8c:	2201      	movs	r2, #1
 8000b8e:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b90:	4b15      	ldr	r3, [pc, #84]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b92:	2200      	movs	r2, #0
 8000b94:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 8000b96:	4b14      	ldr	r3, [pc, #80]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b98:	2200      	movs	r2, #0
 8000b9a:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000b9c:	4b12      	ldr	r3, [pc, #72]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000ba2:	4b11      	ldr	r3, [pc, #68]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000ba8:	4b0f      	ldr	r3, [pc, #60]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000baa:	2200      	movs	r2, #0
 8000bac:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000bae:	480e      	ldr	r0, [pc, #56]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000bb0:	f004 fa60 	bl	8005074 <HAL_I2C_Init>
 8000bb4:	4603      	mov	r3, r0
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	d001      	beq.n	8000bbe <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 8000bba:	f000 fb6e 	bl	800129a <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000bbe:	2100      	movs	r1, #0
 8000bc0:	4809      	ldr	r0, [pc, #36]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000bc2:	f004 faf3 	bl	80051ac <HAL_I2CEx_ConfigAnalogFilter>
 8000bc6:	4603      	mov	r3, r0
 8000bc8:	2b00      	cmp	r3, #0
 8000bca:	d001      	beq.n	8000bd0 <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 8000bcc:	f000 fb65 	bl	800129a <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000bd0:	2100      	movs	r1, #0
 8000bd2:	4805      	ldr	r0, [pc, #20]	@ (8000be8 <MX_I2C3_Init+0x74>)
 8000bd4:	f004 fb35 	bl	8005242 <HAL_I2CEx_ConfigDigitalFilter>
 8000bd8:	4603      	mov	r3, r0
 8000bda:	2b00      	cmp	r3, #0
 8000bdc:	d001      	beq.n	8000be2 <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 8000bde:	f000 fb5c 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000be2:	bf00      	nop
 8000be4:	bd80      	pop	{r7, pc}
 8000be6:	bf00      	nop
 8000be8:	20000528 	.word	0x20000528
 8000bec:	40005c00 	.word	0x40005c00
 8000bf0:	20404768 	.word	0x20404768

08000bf4 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000bf4:	b580      	push	{r7, lr}
 8000bf6:	b0aa      	sub	sp, #168	@ 0xa8
 8000bf8:	af00      	add	r7, sp, #0
 8000bfa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bfc:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8000c00:	2200      	movs	r2, #0
 8000c02:	601a      	str	r2, [r3, #0]
 8000c04:	605a      	str	r2, [r3, #4]
 8000c06:	609a      	str	r2, [r3, #8]
 8000c08:	60da      	str	r2, [r3, #12]
 8000c0a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c0c:	f107 0310 	add.w	r3, r7, #16
 8000c10:	2284      	movs	r2, #132	@ 0x84
 8000c12:	2100      	movs	r1, #0
 8000c14:	4618      	mov	r0, r3
 8000c16:	f020 fa44 	bl	80210a2 <memset>
  if(i2cHandle->Instance==I2C3)
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	681b      	ldr	r3, [r3, #0]
 8000c1e:	4a22      	ldr	r2, [pc, #136]	@ (8000ca8 <HAL_I2C_MspInit+0xb4>)
 8000c20:	4293      	cmp	r3, r2
 8000c22:	d13c      	bne.n	8000c9e <HAL_I2C_MspInit+0xaa>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000c24:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000c28:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8000c2a:	2300      	movs	r3, #0
 8000c2c:	67fb      	str	r3, [r7, #124]	@ 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000c2e:	f107 0310 	add.w	r3, r7, #16
 8000c32:	4618      	mov	r0, r3
 8000c34:	f005 fc86 	bl	8006544 <HAL_RCCEx_PeriphCLKConfig>
 8000c38:	4603      	mov	r3, r0
 8000c3a:	2b00      	cmp	r3, #0
 8000c3c:	d001      	beq.n	8000c42 <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 8000c3e:	f000 fb2c 	bl	800129a <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c42:	4b1a      	ldr	r3, [pc, #104]	@ (8000cac <HAL_I2C_MspInit+0xb8>)
 8000c44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c46:	4a19      	ldr	r2, [pc, #100]	@ (8000cac <HAL_I2C_MspInit+0xb8>)
 8000c48:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c4c:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c4e:	4b17      	ldr	r3, [pc, #92]	@ (8000cac <HAL_I2C_MspInit+0xb8>)
 8000c50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c52:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c56:	60fb      	str	r3, [r7, #12]
 8000c58:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 8000c5a:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000c5e:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c62:	2312      	movs	r3, #18
 8000c64:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c68:	2300      	movs	r3, #0
 8000c6a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c6e:	2303      	movs	r3, #3
 8000c70:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000c74:	2304      	movs	r3, #4
 8000c76:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000c7a:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8000c7e:	4619      	mov	r1, r3
 8000c80:	480b      	ldr	r0, [pc, #44]	@ (8000cb0 <HAL_I2C_MspInit+0xbc>)
 8000c82:	f003 fff5 	bl	8004c70 <HAL_GPIO_Init>

    /* I2C3 clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000c86:	4b09      	ldr	r3, [pc, #36]	@ (8000cac <HAL_I2C_MspInit+0xb8>)
 8000c88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c8a:	4a08      	ldr	r2, [pc, #32]	@ (8000cac <HAL_I2C_MspInit+0xb8>)
 8000c8c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000c90:	6413      	str	r3, [r2, #64]	@ 0x40
 8000c92:	4b06      	ldr	r3, [pc, #24]	@ (8000cac <HAL_I2C_MspInit+0xb8>)
 8000c94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c96:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000c9a:	60bb      	str	r3, [r7, #8]
 8000c9c:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8000c9e:	bf00      	nop
 8000ca0:	37a8      	adds	r7, #168	@ 0xa8
 8000ca2:	46bd      	mov	sp, r7
 8000ca4:	bd80      	pop	{r7, pc}
 8000ca6:	bf00      	nop
 8000ca8:	40005c00 	.word	0x40005c00
 8000cac:	40023800 	.word	0x40023800
 8000cb0:	40021c00 	.word	0x40021c00

08000cb4 <MX_LTDC_Init>:

LTDC_HandleTypeDef hltdc;

/* LTDC init function */
void MX_LTDC_Init(void)
{
 8000cb4:	b580      	push	{r7, lr}
 8000cb6:	b08e      	sub	sp, #56	@ 0x38
 8000cb8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000cba:	1d3b      	adds	r3, r7, #4
 8000cbc:	2234      	movs	r2, #52	@ 0x34
 8000cbe:	2100      	movs	r1, #0
 8000cc0:	4618      	mov	r0, r3
 8000cc2:	f020 f9ee 	bl	80210a2 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000cc6:	4b3a      	ldr	r3, [pc, #232]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cc8:	4a3a      	ldr	r2, [pc, #232]	@ (8000db4 <MX_LTDC_Init+0x100>)
 8000cca:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000ccc:	4b38      	ldr	r3, [pc, #224]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cce:	2200      	movs	r2, #0
 8000cd0:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000cd2:	4b37      	ldr	r3, [pc, #220]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cd4:	2200      	movs	r2, #0
 8000cd6:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000cd8:	4b35      	ldr	r3, [pc, #212]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cda:	2200      	movs	r2, #0
 8000cdc:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000cde:	4b34      	ldr	r3, [pc, #208]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000ce0:	2200      	movs	r2, #0
 8000ce2:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 40;
 8000ce4:	4b32      	ldr	r3, [pc, #200]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000ce6:	2228      	movs	r2, #40	@ 0x28
 8000ce8:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 9;
 8000cea:	4b31      	ldr	r3, [pc, #196]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cec:	2209      	movs	r2, #9
 8000cee:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 53;
 8000cf0:	4b2f      	ldr	r3, [pc, #188]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cf2:	2235      	movs	r2, #53	@ 0x35
 8000cf4:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 8000cf6:	4b2e      	ldr	r3, [pc, #184]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cf8:	220b      	movs	r2, #11
 8000cfa:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 533;
 8000cfc:	4b2c      	ldr	r3, [pc, #176]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000cfe:	f240 2215 	movw	r2, #533	@ 0x215
 8000d02:	625a      	str	r2, [r3, #36]	@ 0x24
  hltdc.Init.AccumulatedActiveH = 283;
 8000d04:	4b2a      	ldr	r3, [pc, #168]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d06:	f240 121b 	movw	r2, #283	@ 0x11b
 8000d0a:	629a      	str	r2, [r3, #40]	@ 0x28
  hltdc.Init.TotalWidth = 565;
 8000d0c:	4b28      	ldr	r3, [pc, #160]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d0e:	f240 2235 	movw	r2, #565	@ 0x235
 8000d12:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc.Init.TotalHeigh = 285;
 8000d14:	4b26      	ldr	r3, [pc, #152]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d16:	f240 121d 	movw	r2, #285	@ 0x11d
 8000d1a:	631a      	str	r2, [r3, #48]	@ 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8000d1c:	4b24      	ldr	r3, [pc, #144]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d1e:	2200      	movs	r2, #0
 8000d20:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000d24:	4b22      	ldr	r3, [pc, #136]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d26:	2200      	movs	r2, #0
 8000d28:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
  hltdc.Init.Backcolor.Red = 0;
 8000d2c:	4b20      	ldr	r3, [pc, #128]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d2e:	2200      	movs	r2, #0
 8000d30:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000d34:	481e      	ldr	r0, [pc, #120]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d36:	f004 fad1 	bl	80052dc <HAL_LTDC_Init>
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	2b00      	cmp	r3, #0
 8000d3e:	d001      	beq.n	8000d44 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8000d40:	f000 faab 	bl	800129a <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000d44:	2300      	movs	r3, #0
 8000d46:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 480;
 8000d48:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000d4c:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000d4e:	2300      	movs	r3, #0
 8000d50:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 272;
 8000d52:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8000d56:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000d58:	2302      	movs	r3, #2
 8000d5a:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000d5c:	23ff      	movs	r3, #255	@ 0xff
 8000d5e:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000d60:	2300      	movs	r3, #0
 8000d62:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000d64:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000d68:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000d6a:	2305      	movs	r3, #5
 8000d6c:	627b      	str	r3, [r7, #36]	@ 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000d6e:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8000d72:	62bb      	str	r3, [r7, #40]	@ 0x28
  pLayerCfg.ImageWidth = 480;
 8000d74:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000d78:	62fb      	str	r3, [r7, #44]	@ 0x2c
  pLayerCfg.ImageHeight = 272;
 8000d7a:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8000d7e:	633b      	str	r3, [r7, #48]	@ 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000d80:	2300      	movs	r3, #0
 8000d82:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000d86:	2300      	movs	r3, #0
 8000d88:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000d8c:	2300      	movs	r3, #0
 8000d8e:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000d92:	1d3b      	adds	r3, r7, #4
 8000d94:	2200      	movs	r2, #0
 8000d96:	4619      	mov	r1, r3
 8000d98:	4805      	ldr	r0, [pc, #20]	@ (8000db0 <MX_LTDC_Init+0xfc>)
 8000d9a:	f004 fc27 	bl	80055ec <HAL_LTDC_ConfigLayer>
 8000d9e:	4603      	mov	r3, r0
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d001      	beq.n	8000da8 <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8000da4:	f000 fa79 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000da8:	bf00      	nop
 8000daa:	3738      	adds	r7, #56	@ 0x38
 8000dac:	46bd      	mov	sp, r7
 8000dae:	bd80      	pop	{r7, pc}
 8000db0:	2000057c 	.word	0x2000057c
 8000db4:	40016800 	.word	0x40016800

08000db8 <HAL_LTDC_MspInit>:

void HAL_LTDC_MspInit(LTDC_HandleTypeDef* ltdcHandle)
{
 8000db8:	b580      	push	{r7, lr}
 8000dba:	b0ae      	sub	sp, #184	@ 0xb8
 8000dbc:	af00      	add	r7, sp, #0
 8000dbe:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000dc0:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000dc4:	2200      	movs	r2, #0
 8000dc6:	601a      	str	r2, [r3, #0]
 8000dc8:	605a      	str	r2, [r3, #4]
 8000dca:	609a      	str	r2, [r3, #8]
 8000dcc:	60da      	str	r2, [r3, #12]
 8000dce:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000dd0:	f107 0320 	add.w	r3, r7, #32
 8000dd4:	2284      	movs	r2, #132	@ 0x84
 8000dd6:	2100      	movs	r1, #0
 8000dd8:	4618      	mov	r0, r3
 8000dda:	f020 f962 	bl	80210a2 <memset>
  if(ltdcHandle->Instance==LTDC)
 8000dde:	687b      	ldr	r3, [r7, #4]
 8000de0:	681b      	ldr	r3, [r3, #0]
 8000de2:	4a6f      	ldr	r2, [pc, #444]	@ (8000fa0 <HAL_LTDC_MspInit+0x1e8>)
 8000de4:	4293      	cmp	r3, r2
 8000de6:	f040 80d6 	bne.w	8000f96 <HAL_LTDC_MspInit+0x1de>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000dea:	2308      	movs	r3, #8
 8000dec:	623b      	str	r3, [r7, #32]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000dee:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000df2:	637b      	str	r3, [r7, #52]	@ 0x34
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8000df4:	2305      	movs	r3, #5
 8000df6:	63fb      	str	r3, [r7, #60]	@ 0x3c
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000df8:	2302      	movs	r3, #2
 8000dfa:	63bb      	str	r3, [r7, #56]	@ 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	643b      	str	r3, [r7, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAIDivQ = 1;
 8000e00:	2301      	movs	r3, #1
 8000e02:	64bb      	str	r3, [r7, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e04:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8000e08:	64fb      	str	r3, [r7, #76]	@ 0x4c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e0a:	f107 0320 	add.w	r3, r7, #32
 8000e0e:	4618      	mov	r0, r3
 8000e10:	f005 fb98 	bl	8006544 <HAL_RCCEx_PeriphCLKConfig>
 8000e14:	4603      	mov	r3, r0
 8000e16:	2b00      	cmp	r3, #0
 8000e18:	d001      	beq.n	8000e1e <HAL_LTDC_MspInit+0x66>
    {
      Error_Handler();
 8000e1a:	f000 fa3e 	bl	800129a <Error_Handler>
    }

    /* LTDC clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e1e:	4b61      	ldr	r3, [pc, #388]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e20:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000e22:	4a60      	ldr	r2, [pc, #384]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e24:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000e28:	6453      	str	r3, [r2, #68]	@ 0x44
 8000e2a:	4b5e      	ldr	r3, [pc, #376]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e2c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000e2e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8000e32:	61fb      	str	r3, [r7, #28]
 8000e34:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e36:	4b5b      	ldr	r3, [pc, #364]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e3a:	4a5a      	ldr	r2, [pc, #360]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e3c:	f043 0310 	orr.w	r3, r3, #16
 8000e40:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e42:	4b58      	ldr	r3, [pc, #352]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e46:	f003 0310 	and.w	r3, r3, #16
 8000e4a:	61bb      	str	r3, [r7, #24]
 8000e4c:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000e4e:	4b55      	ldr	r3, [pc, #340]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e52:	4a54      	ldr	r2, [pc, #336]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e54:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000e58:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e5a:	4b52      	ldr	r3, [pc, #328]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e5e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8000e62:	617b      	str	r3, [r7, #20]
 8000e64:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000e66:	4b4f      	ldr	r3, [pc, #316]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e6a:	4a4e      	ldr	r2, [pc, #312]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e6c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000e70:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e72:	4b4c      	ldr	r3, [pc, #304]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e76:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000e7a:	613b      	str	r3, [r7, #16]
 8000e7c:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000e7e:	4b49      	ldr	r3, [pc, #292]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e82:	4a48      	ldr	r2, [pc, #288]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e84:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e88:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e8a:	4b46      	ldr	r3, [pc, #280]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e8c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e8e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000e92:	60fb      	str	r3, [r7, #12]
 8000e94:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000e96:	4b43      	ldr	r3, [pc, #268]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e9a:	4a42      	ldr	r2, [pc, #264]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000e9c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ea0:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ea2:	4b40      	ldr	r3, [pc, #256]	@ (8000fa4 <HAL_LTDC_MspInit+0x1ec>)
 8000ea4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ea6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000eaa:	60bb      	str	r3, [r7, #8]
 8000eac:	68bb      	ldr	r3, [r7, #8]
    PJ3     ------> LTDC_R4
    PJ2     ------> LTDC_R3
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000eae:	2310      	movs	r3, #16
 8000eb0:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000eb4:	2302      	movs	r3, #2
 8000eb6:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000eba:	2300      	movs	r3, #0
 8000ebc:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ec6:	230e      	movs	r3, #14
 8000ec8:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000ecc:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000ed0:	4619      	mov	r1, r3
 8000ed2:	4835      	ldr	r0, [pc, #212]	@ (8000fa8 <HAL_LTDC_MspInit+0x1f0>)
 8000ed4:	f003 fecc 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000ed8:	f64e 73ff 	movw	r3, #61439	@ 0xefff
 8000edc:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
                          |GPIO_PIN_8|GPIO_PIN_10|GPIO_PIN_7|GPIO_PIN_9
                          |GPIO_PIN_6|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_3
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000ee0:	2302      	movs	r3, #2
 8000ee2:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000eec:	2300      	movs	r3, #0
 8000eee:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ef2:	230e      	movs	r3, #14
 8000ef4:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000ef8:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000efc:	4619      	mov	r1, r3
 8000efe:	482b      	ldr	r0, [pc, #172]	@ (8000fac <HAL_LTDC_MspInit+0x1f4>)
 8000f00:	f003 feb6 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000f04:	23f7      	movs	r3, #247	@ 0xf7
 8000f06:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f0a:	2302      	movs	r3, #2
 8000f0c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f10:	2300      	movs	r3, #0
 8000f12:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f16:	2300      	movs	r3, #0
 8000f18:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f1c:	230e      	movs	r3, #14
 8000f1e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f22:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000f26:	4619      	mov	r1, r3
 8000f28:	4821      	ldr	r0, [pc, #132]	@ (8000fb0 <HAL_LTDC_MspInit+0x1f8>)
 8000f2a:	f003 fea1 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000f2e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f32:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f36:	2302      	movs	r3, #2
 8000f38:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f42:	2300      	movs	r3, #0
 8000f44:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000f48:	2309      	movs	r3, #9
 8000f4a:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f4e:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000f52:	4619      	mov	r1, r3
 8000f54:	4817      	ldr	r0, [pc, #92]	@ (8000fb4 <HAL_LTDC_MspInit+0x1fc>)
 8000f56:	f003 fe8b 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000f5a:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
 8000f5e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f62:	2302      	movs	r3, #2
 8000f64:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f68:	2300      	movs	r3, #0
 8000f6a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f6e:	2300      	movs	r3, #0
 8000f70:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f74:	230e      	movs	r3, #14
 8000f76:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000f7a:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000f7e:	4619      	mov	r1, r3
 8000f80:	480d      	ldr	r0, [pc, #52]	@ (8000fb8 <HAL_LTDC_MspInit+0x200>)
 8000f82:	f003 fe75 	bl	8004c70 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 8000f86:	2200      	movs	r2, #0
 8000f88:	2100      	movs	r1, #0
 8000f8a:	2058      	movs	r0, #88	@ 0x58
 8000f8c:	f003 fae3 	bl	8004556 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000f90:	2058      	movs	r0, #88	@ 0x58
 8000f92:	f003 fafc 	bl	800458e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }
}
 8000f96:	bf00      	nop
 8000f98:	37b8      	adds	r7, #184	@ 0xb8
 8000f9a:	46bd      	mov	sp, r7
 8000f9c:	bd80      	pop	{r7, pc}
 8000f9e:	bf00      	nop
 8000fa0:	40016800 	.word	0x40016800
 8000fa4:	40023800 	.word	0x40023800
 8000fa8:	40021000 	.word	0x40021000
 8000fac:	40022400 	.word	0x40022400
 8000fb0:	40022800 	.word	0x40022800
 8000fb4:	40021800 	.word	0x40021800
 8000fb8:	40022000 	.word	0x40022000

08000fbc <SCB_EnableICache>:
/**
  \brief   Enable I-Cache
  \details Turns on I-Cache
  */
__STATIC_INLINE void SCB_EnableICache (void)
{
 8000fbc:	b480      	push	{r7}
 8000fbe:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000fc0:	f3bf 8f4f 	dsb	sy
}
 8000fc4:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000fc6:	f3bf 8f6f 	isb	sy
}
 8000fca:	bf00      	nop
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 8000fcc:	4b0d      	ldr	r3, [pc, #52]	@ (8001004 <SCB_EnableICache+0x48>)
 8000fce:	2200      	movs	r2, #0
 8000fd0:	f8c3 2250 	str.w	r2, [r3, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8000fd4:	f3bf 8f4f 	dsb	sy
}
 8000fd8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000fda:	f3bf 8f6f 	isb	sy
}
 8000fde:	bf00      	nop
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8000fe0:	4b08      	ldr	r3, [pc, #32]	@ (8001004 <SCB_EnableICache+0x48>)
 8000fe2:	695b      	ldr	r3, [r3, #20]
 8000fe4:	4a07      	ldr	r2, [pc, #28]	@ (8001004 <SCB_EnableICache+0x48>)
 8000fe6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000fea:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8000fec:	f3bf 8f4f 	dsb	sy
}
 8000ff0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8000ff2:	f3bf 8f6f 	isb	sy
}
 8000ff6:	bf00      	nop
    __DSB();
    __ISB();
  #endif
}
 8000ff8:	bf00      	nop
 8000ffa:	46bd      	mov	sp, r7
 8000ffc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001000:	4770      	bx	lr
 8001002:	bf00      	nop
 8001004:	e000ed00 	.word	0xe000ed00

08001008 <SCB_EnableDCache>:
/**
  \brief   Enable D-Cache
  \details Turns on D-Cache
  */
__STATIC_INLINE void SCB_EnableDCache (void)
{
 8001008:	b480      	push	{r7}
 800100a:	b085      	sub	sp, #20
 800100c:	af00      	add	r7, sp, #0
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800100e:	4b1f      	ldr	r3, [pc, #124]	@ (800108c <SCB_EnableDCache+0x84>)
 8001010:	2200      	movs	r2, #0
 8001012:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001016:	f3bf 8f4f 	dsb	sy
}
 800101a:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
 800101c:	4b1b      	ldr	r3, [pc, #108]	@ (800108c <SCB_EnableDCache+0x84>)
 800101e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001022:	607b      	str	r3, [r7, #4]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	0b5b      	lsrs	r3, r3, #13
 8001028:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800102c:	60fb      	str	r3, [r7, #12]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	08db      	lsrs	r3, r3, #3
 8001032:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001036:	60bb      	str	r3, [r7, #8]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001038:	68fb      	ldr	r3, [r7, #12]
 800103a:	015a      	lsls	r2, r3, #5
 800103c:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 8001040:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 8001042:	68ba      	ldr	r2, [r7, #8]
 8001044:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001046:	4911      	ldr	r1, [pc, #68]	@ (800108c <SCB_EnableDCache+0x84>)
 8001048:	4313      	orrs	r3, r2
 800104a:	f8c1 3260 	str.w	r3, [r1, #608]	@ 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800104e:	68bb      	ldr	r3, [r7, #8]
 8001050:	1e5a      	subs	r2, r3, #1
 8001052:	60ba      	str	r2, [r7, #8]
 8001054:	2b00      	cmp	r3, #0
 8001056:	d1ef      	bne.n	8001038 <SCB_EnableDCache+0x30>
    } while(sets-- != 0U);
 8001058:	68fb      	ldr	r3, [r7, #12]
 800105a:	1e5a      	subs	r2, r3, #1
 800105c:	60fa      	str	r2, [r7, #12]
 800105e:	2b00      	cmp	r3, #0
 8001060:	d1e5      	bne.n	800102e <SCB_EnableDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 8001062:	f3bf 8f4f 	dsb	sy
}
 8001066:	bf00      	nop
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 8001068:	4b08      	ldr	r3, [pc, #32]	@ (800108c <SCB_EnableDCache+0x84>)
 800106a:	695b      	ldr	r3, [r3, #20]
 800106c:	4a07      	ldr	r2, [pc, #28]	@ (800108c <SCB_EnableDCache+0x84>)
 800106e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001072:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 8001074:	f3bf 8f4f 	dsb	sy
}
 8001078:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800107a:	f3bf 8f6f 	isb	sy
}
 800107e:	bf00      	nop

    __DSB();
    __ISB();
  #endif
}
 8001080:	bf00      	nop
 8001082:	3714      	adds	r7, #20
 8001084:	46bd      	mov	sp, r7
 8001086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800108a:	4770      	bx	lr
 800108c:	e000ed00 	.word	0xe000ed00

08001090 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001090:	b580      	push	{r7, lr}
 8001092:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 8001094:	f000 f8ca 	bl	800122c <MPU_Config>

  /* Enable the CPU Cache */

  /* Enable I-Cache---------------------------------------------------------*/
  SCB_EnableICache();
 8001098:	f7ff ff90 	bl	8000fbc <SCB_EnableICache>

  /* Enable D-Cache---------------------------------------------------------*/
  SCB_EnableDCache();
 800109c:	f7ff ffb4 	bl	8001008 <SCB_EnableDCache>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80010a0:	f003 f8f4 	bl	800428c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80010a4:	f000 f834 	bl	8001110 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80010a8:	f7ff fc5a 	bl	8000960 <MX_GPIO_Init>
  MX_SPI2_Init();
 80010ac:	f000 f9b8 	bl	8001420 <MX_SPI2_Init>
  MX_TIM2_Init();
 80010b0:	f000 fbaa 	bl	8001808 <MX_TIM2_Init>
  MX_USART2_UART_Init();
 80010b4:	f000 fc78 	bl	80019a8 <MX_USART2_UART_Init>
  MX_DMA2D_Init();
 80010b8:	f7ff fab4 	bl	8000624 <MX_DMA2D_Init>
  MX_LTDC_Init();
 80010bc:	f7ff fdfa 	bl	8000cb4 <MX_LTDC_Init>
  MX_FMC_Init();
 80010c0:	f7ff fb08 	bl	80006d4 <MX_FMC_Init>
  MX_I2C3_Init();
 80010c4:	f7ff fd56 	bl	8000b74 <MX_I2C3_Init>
  MX_CRC_Init();
 80010c8:	f7ff fa6a 	bl	80005a0 <MX_CRC_Init>
  MX_QUADSPI_Init();
 80010cc:	f000 f8ec 	bl	80012a8 <MX_QUADSPI_Init>
  MX_TouchGFX_Init();
 80010d0:	f008 fcf2 	bl	8009ab8 <MX_TouchGFX_Init>
//  	    // Display a character on the specified line and column using the BSP_LCD_DisplayChar() function or a complete string line using the BSP_LCD_DisplayStringAtLine() function.
//  	    BSP_LCD_DisplayStringAt(0, 0, "TEST", CENTER_MODE);

  	//HAL_Delay(2000);

	BSP_MotorControl_SetNbDevices(BSP_MOTOR_CONTROL_BOARD_ID_POWERSTEP01, 1);
 80010d4:	2101      	movs	r1, #1
 80010d6:	2001      	movs	r0, #1
 80010d8:	f003 f84a 	bl	8004170 <BSP_MotorControl_SetNbDevices>
	BSP_MotorControl_Init(BSP_MOTOR_CONTROL_BOARD_ID_POWERSTEP01, NULL);
 80010dc:	2100      	movs	r1, #0
 80010de:	2001      	movs	r0, #1
 80010e0:	f002 ffbc 	bl	800405c <BSP_MotorControl_Init>
	BSP_MotorControl_AttachFlagInterrupt(MyFlagInterruptHandler);
 80010e4:	4807      	ldr	r0, [pc, #28]	@ (8001104 <main+0x74>)
 80010e6:	f002 ff5f 	bl	8003fa8 <BSP_MotorControl_AttachFlagInterrupt>
	BSP_MotorControl_AttachBusyInterrupt(MyBusyInterruptHandler);
 80010ea:	4807      	ldr	r0, [pc, #28]	@ (8001108 <main+0x78>)
 80010ec:	f002 ff7a 	bl	8003fe4 <BSP_MotorControl_AttachBusyInterrupt>
	BSP_MotorControl_AttachErrorHandler(Error_Handler);
 80010f0:	4806      	ldr	r0, [pc, #24]	@ (800110c <main+0x7c>)
 80010f2:	f002 ff3b 	bl	8003f6c <BSP_MotorControl_AttachErrorHandler>
	//BSP_MotorControl_Move(0, BACKWARD, 1600);

	/* Wait for the motor of device 0 ends moving */
	//BSP_MotorControl_WaitWhileActive(0);

	BSP_MotorControl_CmdSoftHiZ(0);
 80010f6:	2000      	movs	r0, #0
 80010f8:	f003 f818 	bl	800412c <BSP_MotorControl_CmdSoftHiZ>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80010fc:	f008 fce4 	bl	8009ac8 <MX_TouchGFX_Process>
 8001100:	e7fc      	b.n	80010fc <main+0x6c>
 8001102:	bf00      	nop
 8001104:	080011ed 	.word	0x080011ed
 8001108:	08001221 	.word	0x08001221
 800110c:	0800129b 	.word	0x0800129b

08001110 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001110:	b580      	push	{r7, lr}
 8001112:	b094      	sub	sp, #80	@ 0x50
 8001114:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001116:	f107 0320 	add.w	r3, r7, #32
 800111a:	2230      	movs	r2, #48	@ 0x30
 800111c:	2100      	movs	r1, #0
 800111e:	4618      	mov	r0, r3
 8001120:	f01f ffbf 	bl	80210a2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001124:	f107 030c 	add.w	r3, r7, #12
 8001128:	2200      	movs	r2, #0
 800112a:	601a      	str	r2, [r3, #0]
 800112c:	605a      	str	r2, [r3, #4]
 800112e:	609a      	str	r2, [r3, #8]
 8001130:	60da      	str	r2, [r3, #12]
 8001132:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001134:	4b2b      	ldr	r3, [pc, #172]	@ (80011e4 <SystemClock_Config+0xd4>)
 8001136:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001138:	4a2a      	ldr	r2, [pc, #168]	@ (80011e4 <SystemClock_Config+0xd4>)
 800113a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800113e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001140:	4b28      	ldr	r3, [pc, #160]	@ (80011e4 <SystemClock_Config+0xd4>)
 8001142:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001144:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001148:	60bb      	str	r3, [r7, #8]
 800114a:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800114c:	4b26      	ldr	r3, [pc, #152]	@ (80011e8 <SystemClock_Config+0xd8>)
 800114e:	681b      	ldr	r3, [r3, #0]
 8001150:	4a25      	ldr	r2, [pc, #148]	@ (80011e8 <SystemClock_Config+0xd8>)
 8001152:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001156:	6013      	str	r3, [r2, #0]
 8001158:	4b23      	ldr	r3, [pc, #140]	@ (80011e8 <SystemClock_Config+0xd8>)
 800115a:	681b      	ldr	r3, [r3, #0]
 800115c:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001160:	607b      	str	r3, [r7, #4]
 8001162:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001164:	2301      	movs	r3, #1
 8001166:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001168:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 800116c:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800116e:	2302      	movs	r3, #2
 8001170:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001172:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001176:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 8001178:	2319      	movs	r3, #25
 800117a:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 432;
 800117c:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
 8001180:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001182:	2302      	movs	r3, #2
 8001184:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001186:	2302      	movs	r3, #2
 8001188:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800118a:	f107 0320 	add.w	r3, r7, #32
 800118e:	4618      	mov	r0, r3
 8001190:	f004 fd4e 	bl	8005c30 <HAL_RCC_OscConfig>
 8001194:	4603      	mov	r3, r0
 8001196:	2b00      	cmp	r3, #0
 8001198:	d001      	beq.n	800119e <SystemClock_Config+0x8e>
  {
    Error_Handler();
 800119a:	f000 f87e 	bl	800129a <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800119e:	f004 fc35 	bl	8005a0c <HAL_PWREx_EnableOverDrive>
 80011a2:	4603      	mov	r3, r0
 80011a4:	2b00      	cmp	r3, #0
 80011a6:	d001      	beq.n	80011ac <SystemClock_Config+0x9c>
  {
    Error_Handler();
 80011a8:	f000 f877 	bl	800129a <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011ac:	230f      	movs	r3, #15
 80011ae:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011b0:	2302      	movs	r3, #2
 80011b2:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011b4:	2300      	movs	r3, #0
 80011b6:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80011b8:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80011bc:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011be:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011c2:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 80011c4:	f107 030c 	add.w	r3, r7, #12
 80011c8:	2107      	movs	r1, #7
 80011ca:	4618      	mov	r0, r3
 80011cc:	f004 ffd4 	bl	8006178 <HAL_RCC_ClockConfig>
 80011d0:	4603      	mov	r3, r0
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	d001      	beq.n	80011da <SystemClock_Config+0xca>
  {
    Error_Handler();
 80011d6:	f000 f860 	bl	800129a <Error_Handler>
  }
}
 80011da:	bf00      	nop
 80011dc:	3750      	adds	r7, #80	@ 0x50
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}
 80011e2:	bf00      	nop
 80011e4:	40023800 	.word	0x40023800
 80011e8:	40007000 	.word	0x40007000

080011ec <MyFlagInterruptHandler>:
  * @brief  This function is the User handler for the flag interrupt
  * @param  None
  * @retval None
  */
void MyFlagInterruptHandler(void)
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	b082      	sub	sp, #8
 80011f0:	af00      	add	r7, sp, #0
  /* Get the value of the status register via the command GET_STATUS */
  uint16_t statusRegister = BSP_MotorControl_CmdGetStatus(0);
 80011f2:	2000      	movs	r0, #0
 80011f4:	f002 ff52 	bl	800409c <BSP_MotorControl_CmdGetStatus>
 80011f8:	4603      	mov	r3, r0
 80011fa:	80fb      	strh	r3, [r7, #6]
  }
  else
  {
    // FORWARD
  }
  if ((statusRegister & POWERSTEP01_STATUS_MOT_STATUS) == POWERSTEP01_STATUS_MOT_STATUS_STOPPED )
 80011fc:	88fb      	ldrh	r3, [r7, #6]
 80011fe:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8001202:	2b00      	cmp	r3, #0
 8001204:	d008      	beq.n	8001218 <MyFlagInterruptHandler+0x2c>
  {
       // MOTOR STOPPED
  }
  else  if ((statusRegister & POWERSTEP01_STATUS_MOT_STATUS) == POWERSTEP01_STATUS_MOT_STATUS_ACCELERATION )
 8001206:	88fb      	ldrh	r3, [r7, #6]
 8001208:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800120c:	2b20      	cmp	r3, #32
 800120e:	d003      	beq.n	8001218 <MyFlagInterruptHandler+0x2c>
  {
           // MOTOR ACCELERATION
  }
  else  if ((statusRegister & POWERSTEP01_STATUS_MOT_STATUS) == POWERSTEP01_STATUS_MOT_STATUS_DECELERATION )
 8001210:	88fb      	ldrh	r3, [r7, #6]
 8001212:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8001216:	2b40      	cmp	r3, #64	@ 0x40
  if ((statusRegister & POWERSTEP01_STATUS_STALL_B) == 0)
  {
    //overcurrent detection
  }

}
 8001218:	bf00      	nop
 800121a:	3708      	adds	r7, #8
 800121c:	46bd      	mov	sp, r7
 800121e:	bd80      	pop	{r7, pc}

08001220 <MyBusyInterruptHandler>:
  * @brief  This function is the User handler for the busy interrupt
  * @param  None
  * @retval None
  */
void MyBusyInterruptHandler(void)
{
 8001220:	b580      	push	{r7, lr}
 8001222:	af00      	add	r7, sp, #0

   if (BSP_MotorControl_CheckBusyHw())
 8001224:	f002 ff60 	bl	80040e8 <BSP_MotorControl_CheckBusyHw>
   }
   else
   {
     /* To be customized (for example Switch off a LED) */
   }
}
 8001228:	bf00      	nop
 800122a:	bd80      	pop	{r7, pc}

0800122c <MPU_Config>:
/* USER CODE END 4 */

 /* MPU Configuration */

void MPU_Config(void)
{
 800122c:	b580      	push	{r7, lr}
 800122e:	b084      	sub	sp, #16
 8001230:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8001232:	463b      	mov	r3, r7
 8001234:	2200      	movs	r2, #0
 8001236:	601a      	str	r2, [r3, #0]
 8001238:	605a      	str	r2, [r3, #4]
 800123a:	609a      	str	r2, [r3, #8]
 800123c:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 800123e:	f003 f9c1 	bl	80045c4 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 8001242:	2301      	movs	r3, #1
 8001244:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 8001246:	2300      	movs	r3, #0
 8001248:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x90000000;
 800124a:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
 800124e:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 8001250:	231b      	movs	r3, #27
 8001252:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x0;
 8001254:	2300      	movs	r3, #0
 8001256:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 8001258:	2300      	movs	r3, #0
 800125a:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 800125c:	2303      	movs	r3, #3
 800125e:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 8001260:	2300      	movs	r3, #0
 8001262:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 8001264:	2300      	movs	r3, #0
 8001266:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 8001268:	2300      	movs	r3, #0
 800126a:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 800126c:	2300      	movs	r3, #0
 800126e:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001270:	463b      	mov	r3, r7
 8001272:	4618      	mov	r0, r3
 8001274:	f003 f9de 	bl	8004634 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 8001278:	2301      	movs	r3, #1
 800127a:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 800127c:	2317      	movs	r3, #23
 800127e:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 8001280:	2301      	movs	r3, #1
 8001282:	73bb      	strb	r3, [r7, #14]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001284:	463b      	mov	r3, r7
 8001286:	4618      	mov	r0, r3
 8001288:	f003 f9d4 	bl	8004634 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 800128c:	2004      	movs	r0, #4
 800128e:	f003 f9b1 	bl	80045f4 <HAL_MPU_Enable>

}
 8001292:	bf00      	nop
 8001294:	3710      	adds	r7, #16
 8001296:	46bd      	mov	sp, r7
 8001298:	bd80      	pop	{r7, pc}

0800129a <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800129a:	b480      	push	{r7}
 800129c:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 800129e:	b672      	cpsid	i
}
 80012a0:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80012a2:	bf00      	nop
 80012a4:	e7fd      	b.n	80012a2 <Error_Handler+0x8>
	...

080012a8 <MX_QUADSPI_Init>:

QSPI_HandleTypeDef hqspi;

/* QUADSPI init function */
void MX_QUADSPI_Init(void)
{
 80012a8:	b580      	push	{r7, lr}
 80012aa:	af00      	add	r7, sp, #0
  /* USER CODE END QUADSPI_Init 0 */

  /* USER CODE BEGIN QUADSPI_Init 1 */

  /* USER CODE END QUADSPI_Init 1 */
  hqspi.Instance = QUADSPI;
 80012ac:	4b12      	ldr	r3, [pc, #72]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012ae:	4a13      	ldr	r2, [pc, #76]	@ (80012fc <MX_QUADSPI_Init+0x54>)
 80012b0:	601a      	str	r2, [r3, #0]
  hqspi.Init.ClockPrescaler = 1;
 80012b2:	4b11      	ldr	r3, [pc, #68]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012b4:	2201      	movs	r2, #1
 80012b6:	605a      	str	r2, [r3, #4]
  hqspi.Init.FifoThreshold = 4;
 80012b8:	4b0f      	ldr	r3, [pc, #60]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012ba:	2204      	movs	r2, #4
 80012bc:	609a      	str	r2, [r3, #8]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80012be:	4b0e      	ldr	r3, [pc, #56]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012c0:	2210      	movs	r2, #16
 80012c2:	60da      	str	r2, [r3, #12]
  hqspi.Init.FlashSize = 24;
 80012c4:	4b0c      	ldr	r3, [pc, #48]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012c6:	2218      	movs	r2, #24
 80012c8:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 80012ca:	4b0b      	ldr	r3, [pc, #44]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012cc:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 80012d0:	615a      	str	r2, [r3, #20]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 80012d2:	4b09      	ldr	r3, [pc, #36]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	619a      	str	r2, [r3, #24]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80012d8:	4b07      	ldr	r3, [pc, #28]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012da:	2200      	movs	r2, #0
 80012dc:	61da      	str	r2, [r3, #28]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80012de:	4b06      	ldr	r3, [pc, #24]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	621a      	str	r2, [r3, #32]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80012e4:	4804      	ldr	r0, [pc, #16]	@ (80012f8 <MX_QUADSPI_Init+0x50>)
 80012e6:	f004 fbe1 	bl	8005aac <HAL_QSPI_Init>
 80012ea:	4603      	mov	r3, r0
 80012ec:	2b00      	cmp	r3, #0
 80012ee:	d001      	beq.n	80012f4 <MX_QUADSPI_Init+0x4c>
  {
    Error_Handler();
 80012f0:	f7ff ffd3 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN QUADSPI_Init 2 */

  /* USER CODE END QUADSPI_Init 2 */

}
 80012f4:	bf00      	nop
 80012f6:	bd80      	pop	{r7, pc}
 80012f8:	20000624 	.word	0x20000624
 80012fc:	a0001000 	.word	0xa0001000

08001300 <HAL_QSPI_MspInit>:

void HAL_QSPI_MspInit(QSPI_HandleTypeDef* qspiHandle)
{
 8001300:	b580      	push	{r7, lr}
 8001302:	b08c      	sub	sp, #48	@ 0x30
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001308:	f107 031c 	add.w	r3, r7, #28
 800130c:	2200      	movs	r2, #0
 800130e:	601a      	str	r2, [r3, #0]
 8001310:	605a      	str	r2, [r3, #4]
 8001312:	609a      	str	r2, [r3, #8]
 8001314:	60da      	str	r2, [r3, #12]
 8001316:	611a      	str	r2, [r3, #16]
  if(qspiHandle->Instance==QUADSPI)
 8001318:	687b      	ldr	r3, [r7, #4]
 800131a:	681b      	ldr	r3, [r3, #0]
 800131c:	4a3b      	ldr	r2, [pc, #236]	@ (800140c <HAL_QSPI_MspInit+0x10c>)
 800131e:	4293      	cmp	r3, r2
 8001320:	d170      	bne.n	8001404 <HAL_QSPI_MspInit+0x104>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* QUADSPI clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001322:	4b3b      	ldr	r3, [pc, #236]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001324:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001326:	4a3a      	ldr	r2, [pc, #232]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001328:	f043 0302 	orr.w	r3, r3, #2
 800132c:	6393      	str	r3, [r2, #56]	@ 0x38
 800132e:	4b38      	ldr	r3, [pc, #224]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001330:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001332:	f003 0302 	and.w	r3, r3, #2
 8001336:	61bb      	str	r3, [r7, #24]
 8001338:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800133a:	4b35      	ldr	r3, [pc, #212]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 800133c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800133e:	4a34      	ldr	r2, [pc, #208]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001340:	f043 0310 	orr.w	r3, r3, #16
 8001344:	6313      	str	r3, [r2, #48]	@ 0x30
 8001346:	4b32      	ldr	r3, [pc, #200]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001348:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800134a:	f003 0310 	and.w	r3, r3, #16
 800134e:	617b      	str	r3, [r7, #20]
 8001350:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001352:	4b2f      	ldr	r3, [pc, #188]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001356:	4a2e      	ldr	r2, [pc, #184]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001358:	f043 0302 	orr.w	r3, r3, #2
 800135c:	6313      	str	r3, [r2, #48]	@ 0x30
 800135e:	4b2c      	ldr	r3, [pc, #176]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001362:	f003 0302 	and.w	r3, r3, #2
 8001366:	613b      	str	r3, [r7, #16]
 8001368:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800136a:	4b29      	ldr	r3, [pc, #164]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 800136c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800136e:	4a28      	ldr	r2, [pc, #160]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001370:	f043 0308 	orr.w	r3, r3, #8
 8001374:	6313      	str	r3, [r2, #48]	@ 0x30
 8001376:	4b26      	ldr	r3, [pc, #152]	@ (8001410 <HAL_QSPI_MspInit+0x110>)
 8001378:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800137a:	f003 0308 	and.w	r3, r3, #8
 800137e:	60fb      	str	r3, [r7, #12]
 8001380:	68fb      	ldr	r3, [r7, #12]
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001382:	2304      	movs	r3, #4
 8001384:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001386:	2302      	movs	r3, #2
 8001388:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800138a:	2300      	movs	r3, #0
 800138c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800138e:	2303      	movs	r3, #3
 8001390:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001392:	2309      	movs	r3, #9
 8001394:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001396:	f107 031c 	add.w	r3, r7, #28
 800139a:	4619      	mov	r1, r3
 800139c:	481d      	ldr	r0, [pc, #116]	@ (8001414 <HAL_QSPI_MspInit+0x114>)
 800139e:	f003 fc67 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80013a2:	2340      	movs	r3, #64	@ 0x40
 80013a4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013a6:	2302      	movs	r3, #2
 80013a8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013aa:	2300      	movs	r3, #0
 80013ac:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013ae:	2303      	movs	r3, #3
 80013b0:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 80013b2:	230a      	movs	r3, #10
 80013b4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80013b6:	f107 031c 	add.w	r3, r7, #28
 80013ba:	4619      	mov	r1, r3
 80013bc:	4816      	ldr	r0, [pc, #88]	@ (8001418 <HAL_QSPI_MspInit+0x118>)
 80013be:	f003 fc57 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80013c2:	2304      	movs	r3, #4
 80013c4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013c6:	2302      	movs	r3, #2
 80013c8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013ca:	2300      	movs	r3, #0
 80013cc:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013ce:	2303      	movs	r3, #3
 80013d0:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80013d2:	2309      	movs	r3, #9
 80013d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80013d6:	f107 031c 	add.w	r3, r7, #28
 80013da:	4619      	mov	r1, r3
 80013dc:	480e      	ldr	r0, [pc, #56]	@ (8001418 <HAL_QSPI_MspInit+0x118>)
 80013de:	f003 fc47 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 80013e2:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
 80013e6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013e8:	2302      	movs	r3, #2
 80013ea:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013ec:	2300      	movs	r3, #0
 80013ee:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013f0:	2303      	movs	r3, #3
 80013f2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80013f4:	2309      	movs	r3, #9
 80013f6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80013f8:	f107 031c 	add.w	r3, r7, #28
 80013fc:	4619      	mov	r1, r3
 80013fe:	4807      	ldr	r0, [pc, #28]	@ (800141c <HAL_QSPI_MspInit+0x11c>)
 8001400:	f003 fc36 	bl	8004c70 <HAL_GPIO_Init>

  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }
}
 8001404:	bf00      	nop
 8001406:	3730      	adds	r7, #48	@ 0x30
 8001408:	46bd      	mov	sp, r7
 800140a:	bd80      	pop	{r7, pc}
 800140c:	a0001000 	.word	0xa0001000
 8001410:	40023800 	.word	0x40023800
 8001414:	40021000 	.word	0x40021000
 8001418:	40020400 	.word	0x40020400
 800141c:	40020c00 	.word	0x40020c00

08001420 <MX_SPI2_Init>:

SPI_HandleTypeDef hspi2;

/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8001420:	b580      	push	{r7, lr}
 8001422:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8001424:	4b1b      	ldr	r3, [pc, #108]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001426:	4a1c      	ldr	r2, [pc, #112]	@ (8001498 <MX_SPI2_Init+0x78>)
 8001428:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800142a:	4b1a      	ldr	r3, [pc, #104]	@ (8001494 <MX_SPI2_Init+0x74>)
 800142c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001430:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001432:	4b18      	ldr	r3, [pc, #96]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001434:	2200      	movs	r2, #0
 8001436:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001438:	4b16      	ldr	r3, [pc, #88]	@ (8001494 <MX_SPI2_Init+0x74>)
 800143a:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 800143e:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 8001440:	4b14      	ldr	r3, [pc, #80]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001442:	2202      	movs	r2, #2
 8001444:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 8001446:	4b13      	ldr	r3, [pc, #76]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001448:	2201      	movs	r2, #1
 800144a:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800144c:	4b11      	ldr	r3, [pc, #68]	@ (8001494 <MX_SPI2_Init+0x74>)
 800144e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001452:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 8001454:	4b0f      	ldr	r3, [pc, #60]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001456:	2220      	movs	r2, #32
 8001458:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800145a:	4b0e      	ldr	r3, [pc, #56]	@ (8001494 <MX_SPI2_Init+0x74>)
 800145c:	2200      	movs	r2, #0
 800145e:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8001460:	4b0c      	ldr	r3, [pc, #48]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001462:	2200      	movs	r2, #0
 8001464:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001466:	4b0b      	ldr	r3, [pc, #44]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001468:	2200      	movs	r2, #0
 800146a:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 7;
 800146c:	4b09      	ldr	r3, [pc, #36]	@ (8001494 <MX_SPI2_Init+0x74>)
 800146e:	2207      	movs	r2, #7
 8001470:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8001472:	4b08      	ldr	r3, [pc, #32]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001474:	2200      	movs	r2, #0
 8001476:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 8001478:	4b06      	ldr	r3, [pc, #24]	@ (8001494 <MX_SPI2_Init+0x74>)
 800147a:	2200      	movs	r2, #0
 800147c:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 800147e:	4805      	ldr	r0, [pc, #20]	@ (8001494 <MX_SPI2_Init+0x74>)
 8001480:	f005 fce2 	bl	8006e48 <HAL_SPI_Init>
 8001484:	4603      	mov	r3, r0
 8001486:	2b00      	cmp	r3, #0
 8001488:	d001      	beq.n	800148e <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 800148a:	f7ff ff06 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 800148e:	bf00      	nop
 8001490:	bd80      	pop	{r7, pc}
 8001492:	bf00      	nop
 8001494:	20000670 	.word	0x20000670
 8001498:	40003800 	.word	0x40003800

0800149c <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 800149c:	b580      	push	{r7, lr}
 800149e:	b08a      	sub	sp, #40	@ 0x28
 80014a0:	af00      	add	r7, sp, #0
 80014a2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014a4:	f107 0314 	add.w	r3, r7, #20
 80014a8:	2200      	movs	r2, #0
 80014aa:	601a      	str	r2, [r3, #0]
 80014ac:	605a      	str	r2, [r3, #4]
 80014ae:	609a      	str	r2, [r3, #8]
 80014b0:	60da      	str	r2, [r3, #12]
 80014b2:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI2)
 80014b4:	687b      	ldr	r3, [r7, #4]
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	4a25      	ldr	r2, [pc, #148]	@ (8001550 <HAL_SPI_MspInit+0xb4>)
 80014ba:	4293      	cmp	r3, r2
 80014bc:	d144      	bne.n	8001548 <HAL_SPI_MspInit+0xac>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* SPI2 clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 80014be:	4b25      	ldr	r3, [pc, #148]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014c2:	4a24      	ldr	r2, [pc, #144]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014c4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80014c8:	6413      	str	r3, [r2, #64]	@ 0x40
 80014ca:	4b22      	ldr	r3, [pc, #136]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014ce:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80014d2:	613b      	str	r3, [r7, #16]
 80014d4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOI_CLK_ENABLE();
 80014d6:	4b1f      	ldr	r3, [pc, #124]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014da:	4a1e      	ldr	r2, [pc, #120]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014dc:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80014e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80014e2:	4b1c      	ldr	r3, [pc, #112]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80014ea:	60fb      	str	r3, [r7, #12]
 80014ec:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80014ee:	4b19      	ldr	r3, [pc, #100]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014f2:	4a18      	ldr	r2, [pc, #96]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014f4:	f043 0302 	orr.w	r3, r3, #2
 80014f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80014fa:	4b16      	ldr	r3, [pc, #88]	@ (8001554 <HAL_SPI_MspInit+0xb8>)
 80014fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80014fe:	f003 0302 	and.w	r3, r3, #2
 8001502:	60bb      	str	r3, [r7, #8]
 8001504:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PI1     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001506:	2302      	movs	r3, #2
 8001508:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800150a:	2302      	movs	r3, #2
 800150c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800150e:	2300      	movs	r3, #0
 8001510:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001512:	2303      	movs	r3, #3
 8001514:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001516:	2305      	movs	r3, #5
 8001518:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800151a:	f107 0314 	add.w	r3, r7, #20
 800151e:	4619      	mov	r1, r3
 8001520:	480d      	ldr	r0, [pc, #52]	@ (8001558 <HAL_SPI_MspInit+0xbc>)
 8001522:	f003 fba5 	bl	8004c70 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001526:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 800152a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800152c:	2302      	movs	r3, #2
 800152e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001530:	2300      	movs	r3, #0
 8001532:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001534:	2303      	movs	r3, #3
 8001536:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001538:	2305      	movs	r3, #5
 800153a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800153c:	f107 0314 	add.w	r3, r7, #20
 8001540:	4619      	mov	r1, r3
 8001542:	4806      	ldr	r0, [pc, #24]	@ (800155c <HAL_SPI_MspInit+0xc0>)
 8001544:	f003 fb94 	bl	8004c70 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 8001548:	bf00      	nop
 800154a:	3728      	adds	r7, #40	@ 0x28
 800154c:	46bd      	mov	sp, r7
 800154e:	bd80      	pop	{r7, pc}
 8001550:	40003800 	.word	0x40003800
 8001554:	40023800 	.word	0x40023800
 8001558:	40022000 	.word	0x40022000
 800155c:	40020400 	.word	0x40020400

08001560 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001560:	b480      	push	{r7}
 8001562:	b083      	sub	sp, #12
 8001564:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 8001566:	4b0f      	ldr	r3, [pc, #60]	@ (80015a4 <HAL_MspInit+0x44>)
 8001568:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800156a:	4a0e      	ldr	r2, [pc, #56]	@ (80015a4 <HAL_MspInit+0x44>)
 800156c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001570:	6413      	str	r3, [r2, #64]	@ 0x40
 8001572:	4b0c      	ldr	r3, [pc, #48]	@ (80015a4 <HAL_MspInit+0x44>)
 8001574:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001576:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800157a:	607b      	str	r3, [r7, #4]
 800157c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800157e:	4b09      	ldr	r3, [pc, #36]	@ (80015a4 <HAL_MspInit+0x44>)
 8001580:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001582:	4a08      	ldr	r2, [pc, #32]	@ (80015a4 <HAL_MspInit+0x44>)
 8001584:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001588:	6453      	str	r3, [r2, #68]	@ 0x44
 800158a:	4b06      	ldr	r3, [pc, #24]	@ (80015a4 <HAL_MspInit+0x44>)
 800158c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800158e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001592:	603b      	str	r3, [r7, #0]
 8001594:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001596:	bf00      	nop
 8001598:	370c      	adds	r7, #12
 800159a:	46bd      	mov	sp, r7
 800159c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a0:	4770      	bx	lr
 80015a2:	bf00      	nop
 80015a4:	40023800 	.word	0x40023800

080015a8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80015a8:	b480      	push	{r7}
 80015aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 80015ac:	bf00      	nop
 80015ae:	e7fd      	b.n	80015ac <NMI_Handler+0x4>

080015b0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80015b0:	b480      	push	{r7}
 80015b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80015b4:	bf00      	nop
 80015b6:	e7fd      	b.n	80015b4 <HardFault_Handler+0x4>

080015b8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 80015b8:	b480      	push	{r7}
 80015ba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80015bc:	bf00      	nop
 80015be:	e7fd      	b.n	80015bc <MemManage_Handler+0x4>

080015c0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80015c0:	b480      	push	{r7}
 80015c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80015c4:	bf00      	nop
 80015c6:	e7fd      	b.n	80015c4 <BusFault_Handler+0x4>

080015c8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80015c8:	b480      	push	{r7}
 80015ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80015cc:	bf00      	nop
 80015ce:	e7fd      	b.n	80015cc <UsageFault_Handler+0x4>

080015d0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80015d0:	b480      	push	{r7}
 80015d2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80015d4:	bf00      	nop
 80015d6:	46bd      	mov	sp, r7
 80015d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015dc:	4770      	bx	lr

080015de <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80015de:	b480      	push	{r7}
 80015e0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80015e2:	bf00      	nop
 80015e4:	46bd      	mov	sp, r7
 80015e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015ea:	4770      	bx	lr

080015ec <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80015ec:	b480      	push	{r7}
 80015ee:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80015f0:	bf00      	nop
 80015f2:	46bd      	mov	sp, r7
 80015f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f8:	4770      	bx	lr

080015fa <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80015fa:	b580      	push	{r7, lr}
 80015fc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80015fe:	f002 fe8b 	bl	8004318 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001602:	bf00      	nop
 8001604:	bd80      	pop	{r7, pc}

08001606 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001606:	b580      	push	{r7, lr}
 8001608:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 800160a:	2040      	movs	r0, #64	@ 0x40
 800160c:	f003 fd0e 	bl	800502c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 8001610:	2080      	movs	r0, #128	@ 0x80
 8001612:	f003 fd0b 	bl	800502c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001616:	bf00      	nop
 8001618:	bd80      	pop	{r7, pc}
	...

0800161c <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001620:	4802      	ldr	r0, [pc, #8]	@ (800162c <TIM2_IRQHandler+0x10>)
 8001622:	f006 fbd5 	bl	8007dd0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 8001626:	bf00      	nop
 8001628:	bd80      	pop	{r7, pc}
 800162a:	bf00      	nop
 800162c:	20000700 	.word	0x20000700

08001630 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001630:	b580      	push	{r7, lr}
 8001632:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001634:	4802      	ldr	r0, [pc, #8]	@ (8001640 <LTDC_IRQHandler+0x10>)
 8001636:	f003 ff21 	bl	800547c <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 800163a:	bf00      	nop
 800163c:	bd80      	pop	{r7, pc}
 800163e:	bf00      	nop
 8001640:	2000057c 	.word	0x2000057c

08001644 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 8001644:	b580      	push	{r7, lr}
 8001646:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001648:	4802      	ldr	r0, [pc, #8]	@ (8001654 <DMA2D_IRQHandler+0x10>)
 800164a:	f003 f96f 	bl	800492c <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 800164e:	bf00      	nop
 8001650:	bd80      	pop	{r7, pc}
 8001652:	bf00      	nop
 8001654:	200004a0 	.word	0x200004a0

08001658 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001658:	b480      	push	{r7}
 800165a:	af00      	add	r7, sp, #0
  return 1;
 800165c:	2301      	movs	r3, #1
}
 800165e:	4618      	mov	r0, r3
 8001660:	46bd      	mov	sp, r7
 8001662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001666:	4770      	bx	lr

08001668 <_kill>:

int _kill(int pid, int sig)
{
 8001668:	b580      	push	{r7, lr}
 800166a:	b082      	sub	sp, #8
 800166c:	af00      	add	r7, sp, #0
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001672:	f01f fdb9 	bl	80211e8 <__errno>
 8001676:	4603      	mov	r3, r0
 8001678:	2216      	movs	r2, #22
 800167a:	601a      	str	r2, [r3, #0]
  return -1;
 800167c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001680:	4618      	mov	r0, r3
 8001682:	3708      	adds	r7, #8
 8001684:	46bd      	mov	sp, r7
 8001686:	bd80      	pop	{r7, pc}

08001688 <_exit>:

void _exit (int status)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	b082      	sub	sp, #8
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001690:	f04f 31ff 	mov.w	r1, #4294967295
 8001694:	6878      	ldr	r0, [r7, #4]
 8001696:	f7ff ffe7 	bl	8001668 <_kill>
  while (1) {}    /* Make sure we hang here */
 800169a:	bf00      	nop
 800169c:	e7fd      	b.n	800169a <_exit+0x12>

0800169e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800169e:	b580      	push	{r7, lr}
 80016a0:	b086      	sub	sp, #24
 80016a2:	af00      	add	r7, sp, #0
 80016a4:	60f8      	str	r0, [r7, #12]
 80016a6:	60b9      	str	r1, [r7, #8]
 80016a8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016aa:	2300      	movs	r3, #0
 80016ac:	617b      	str	r3, [r7, #20]
 80016ae:	e00a      	b.n	80016c6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80016b0:	f3af 8000 	nop.w
 80016b4:	4601      	mov	r1, r0
 80016b6:	68bb      	ldr	r3, [r7, #8]
 80016b8:	1c5a      	adds	r2, r3, #1
 80016ba:	60ba      	str	r2, [r7, #8]
 80016bc:	b2ca      	uxtb	r2, r1
 80016be:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016c0:	697b      	ldr	r3, [r7, #20]
 80016c2:	3301      	adds	r3, #1
 80016c4:	617b      	str	r3, [r7, #20]
 80016c6:	697a      	ldr	r2, [r7, #20]
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	429a      	cmp	r2, r3
 80016cc:	dbf0      	blt.n	80016b0 <_read+0x12>
  }

  return len;
 80016ce:	687b      	ldr	r3, [r7, #4]
}
 80016d0:	4618      	mov	r0, r3
 80016d2:	3718      	adds	r7, #24
 80016d4:	46bd      	mov	sp, r7
 80016d6:	bd80      	pop	{r7, pc}

080016d8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80016d8:	b580      	push	{r7, lr}
 80016da:	b086      	sub	sp, #24
 80016dc:	af00      	add	r7, sp, #0
 80016de:	60f8      	str	r0, [r7, #12]
 80016e0:	60b9      	str	r1, [r7, #8]
 80016e2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016e4:	2300      	movs	r3, #0
 80016e6:	617b      	str	r3, [r7, #20]
 80016e8:	e009      	b.n	80016fe <_write+0x26>
  {
    __io_putchar(*ptr++);
 80016ea:	68bb      	ldr	r3, [r7, #8]
 80016ec:	1c5a      	adds	r2, r3, #1
 80016ee:	60ba      	str	r2, [r7, #8]
 80016f0:	781b      	ldrb	r3, [r3, #0]
 80016f2:	4618      	mov	r0, r3
 80016f4:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016f8:	697b      	ldr	r3, [r7, #20]
 80016fa:	3301      	adds	r3, #1
 80016fc:	617b      	str	r3, [r7, #20]
 80016fe:	697a      	ldr	r2, [r7, #20]
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	429a      	cmp	r2, r3
 8001704:	dbf1      	blt.n	80016ea <_write+0x12>
  }
  return len;
 8001706:	687b      	ldr	r3, [r7, #4]
}
 8001708:	4618      	mov	r0, r3
 800170a:	3718      	adds	r7, #24
 800170c:	46bd      	mov	sp, r7
 800170e:	bd80      	pop	{r7, pc}

08001710 <_close>:

int _close(int file)
{
 8001710:	b480      	push	{r7}
 8001712:	b083      	sub	sp, #12
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001718:	f04f 33ff 	mov.w	r3, #4294967295
}
 800171c:	4618      	mov	r0, r3
 800171e:	370c      	adds	r7, #12
 8001720:	46bd      	mov	sp, r7
 8001722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001726:	4770      	bx	lr

08001728 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001728:	b480      	push	{r7}
 800172a:	b083      	sub	sp, #12
 800172c:	af00      	add	r7, sp, #0
 800172e:	6078      	str	r0, [r7, #4]
 8001730:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001732:	683b      	ldr	r3, [r7, #0]
 8001734:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001738:	605a      	str	r2, [r3, #4]
  return 0;
 800173a:	2300      	movs	r3, #0
}
 800173c:	4618      	mov	r0, r3
 800173e:	370c      	adds	r7, #12
 8001740:	46bd      	mov	sp, r7
 8001742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001746:	4770      	bx	lr

08001748 <_isatty>:

int _isatty(int file)
{
 8001748:	b480      	push	{r7}
 800174a:	b083      	sub	sp, #12
 800174c:	af00      	add	r7, sp, #0
 800174e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001750:	2301      	movs	r3, #1
}
 8001752:	4618      	mov	r0, r3
 8001754:	370c      	adds	r7, #12
 8001756:	46bd      	mov	sp, r7
 8001758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800175c:	4770      	bx	lr

0800175e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800175e:	b480      	push	{r7}
 8001760:	b085      	sub	sp, #20
 8001762:	af00      	add	r7, sp, #0
 8001764:	60f8      	str	r0, [r7, #12]
 8001766:	60b9      	str	r1, [r7, #8]
 8001768:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800176a:	2300      	movs	r3, #0
}
 800176c:	4618      	mov	r0, r3
 800176e:	3714      	adds	r7, #20
 8001770:	46bd      	mov	sp, r7
 8001772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001776:	4770      	bx	lr

08001778 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001778:	b580      	push	{r7, lr}
 800177a:	b086      	sub	sp, #24
 800177c:	af00      	add	r7, sp, #0
 800177e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001780:	4a14      	ldr	r2, [pc, #80]	@ (80017d4 <_sbrk+0x5c>)
 8001782:	4b15      	ldr	r3, [pc, #84]	@ (80017d8 <_sbrk+0x60>)
 8001784:	1ad3      	subs	r3, r2, r3
 8001786:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001788:	697b      	ldr	r3, [r7, #20]
 800178a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800178c:	4b13      	ldr	r3, [pc, #76]	@ (80017dc <_sbrk+0x64>)
 800178e:	681b      	ldr	r3, [r3, #0]
 8001790:	2b00      	cmp	r3, #0
 8001792:	d102      	bne.n	800179a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001794:	4b11      	ldr	r3, [pc, #68]	@ (80017dc <_sbrk+0x64>)
 8001796:	4a12      	ldr	r2, [pc, #72]	@ (80017e0 <_sbrk+0x68>)
 8001798:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800179a:	4b10      	ldr	r3, [pc, #64]	@ (80017dc <_sbrk+0x64>)
 800179c:	681a      	ldr	r2, [r3, #0]
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	4413      	add	r3, r2
 80017a2:	693a      	ldr	r2, [r7, #16]
 80017a4:	429a      	cmp	r2, r3
 80017a6:	d207      	bcs.n	80017b8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80017a8:	f01f fd1e 	bl	80211e8 <__errno>
 80017ac:	4603      	mov	r3, r0
 80017ae:	220c      	movs	r2, #12
 80017b0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80017b2:	f04f 33ff 	mov.w	r3, #4294967295
 80017b6:	e009      	b.n	80017cc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80017b8:	4b08      	ldr	r3, [pc, #32]	@ (80017dc <_sbrk+0x64>)
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80017be:	4b07      	ldr	r3, [pc, #28]	@ (80017dc <_sbrk+0x64>)
 80017c0:	681a      	ldr	r2, [r3, #0]
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	4413      	add	r3, r2
 80017c6:	4a05      	ldr	r2, [pc, #20]	@ (80017dc <_sbrk+0x64>)
 80017c8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80017ca:	68fb      	ldr	r3, [r7, #12]
}
 80017cc:	4618      	mov	r0, r3
 80017ce:	3718      	adds	r7, #24
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd80      	pop	{r7, pc}
 80017d4:	20050000 	.word	0x20050000
 80017d8:	00000a00 	.word	0x00000a00
 80017dc:	200006fc 	.word	0x200006fc
 80017e0:	200028a8 	.word	0x200028a8

080017e4 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80017e4:	b480      	push	{r7}
 80017e6:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80017e8:	4b06      	ldr	r3, [pc, #24]	@ (8001804 <SystemInit+0x20>)
 80017ea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80017ee:	4a05      	ldr	r2, [pc, #20]	@ (8001804 <SystemInit+0x20>)
 80017f0:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80017f4:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80017f8:	bf00      	nop
 80017fa:	46bd      	mov	sp, r7
 80017fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001800:	4770      	bx	lr
 8001802:	bf00      	nop
 8001804:	e000ed00 	.word	0xe000ed00

08001808 <MX_TIM2_Init>:

TIM_HandleTypeDef htim2;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 8001808:	b580      	push	{r7, lr}
 800180a:	b08e      	sub	sp, #56	@ 0x38
 800180c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800180e:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001812:	2200      	movs	r2, #0
 8001814:	601a      	str	r2, [r3, #0]
 8001816:	605a      	str	r2, [r3, #4]
 8001818:	609a      	str	r2, [r3, #8]
 800181a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800181c:	f107 031c 	add.w	r3, r7, #28
 8001820:	2200      	movs	r2, #0
 8001822:	601a      	str	r2, [r3, #0]
 8001824:	605a      	str	r2, [r3, #4]
 8001826:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001828:	463b      	mov	r3, r7
 800182a:	2200      	movs	r2, #0
 800182c:	601a      	str	r2, [r3, #0]
 800182e:	605a      	str	r2, [r3, #4]
 8001830:	609a      	str	r2, [r3, #8]
 8001832:	60da      	str	r2, [r3, #12]
 8001834:	611a      	str	r2, [r3, #16]
 8001836:	615a      	str	r2, [r3, #20]
 8001838:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800183a:	4b2d      	ldr	r3, [pc, #180]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 800183c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001840:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001842:	4b2b      	ldr	r3, [pc, #172]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 8001844:	2200      	movs	r2, #0
 8001846:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001848:	4b29      	ldr	r3, [pc, #164]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 800184a:	2200      	movs	r2, #0
 800184c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 0;
 800184e:	4b28      	ldr	r3, [pc, #160]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 8001850:	2200      	movs	r2, #0
 8001852:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001854:	4b26      	ldr	r3, [pc, #152]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 8001856:	2200      	movs	r2, #0
 8001858:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800185a:	4b25      	ldr	r3, [pc, #148]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 800185c:	2200      	movs	r2, #0
 800185e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8001860:	4823      	ldr	r0, [pc, #140]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 8001862:	f005 ffcd 	bl	8007800 <HAL_TIM_Base_Init>
 8001866:	4603      	mov	r3, r0
 8001868:	2b00      	cmp	r3, #0
 800186a:	d001      	beq.n	8001870 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 800186c:	f7ff fd15 	bl	800129a <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8001870:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001874:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 8001876:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800187a:	4619      	mov	r1, r3
 800187c:	481c      	ldr	r0, [pc, #112]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 800187e:	f006 fce5 	bl	800824c <HAL_TIM_ConfigClockSource>
 8001882:	4603      	mov	r3, r0
 8001884:	2b00      	cmp	r3, #0
 8001886:	d001      	beq.n	800188c <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 8001888:	f7ff fd07 	bl	800129a <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 800188c:	4818      	ldr	r0, [pc, #96]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 800188e:	f006 f81b 	bl	80078c8 <HAL_TIM_PWM_Init>
 8001892:	4603      	mov	r3, r0
 8001894:	2b00      	cmp	r3, #0
 8001896:	d001      	beq.n	800189c <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 8001898:	f7ff fcff 	bl	800129a <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800189c:	2300      	movs	r3, #0
 800189e:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80018a0:	2300      	movs	r3, #0
 80018a2:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80018a4:	f107 031c 	add.w	r3, r7, #28
 80018a8:	4619      	mov	r1, r3
 80018aa:	4811      	ldr	r0, [pc, #68]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 80018ac:	f007 fa24 	bl	8008cf8 <HAL_TIMEx_MasterConfigSynchronization>
 80018b0:	4603      	mov	r3, r0
 80018b2:	2b00      	cmp	r3, #0
 80018b4:	d001      	beq.n	80018ba <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80018b6:	f7ff fcf0 	bl	800129a <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80018ba:	2360      	movs	r3, #96	@ 0x60
 80018bc:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80018be:	2300      	movs	r3, #0
 80018c0:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80018c2:	2300      	movs	r3, #0
 80018c4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80018c6:	2300      	movs	r3, #0
 80018c8:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80018ca:	463b      	mov	r3, r7
 80018cc:	2200      	movs	r2, #0
 80018ce:	4619      	mov	r1, r3
 80018d0:	4807      	ldr	r0, [pc, #28]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 80018d2:	f006 fba7 	bl	8008024 <HAL_TIM_PWM_ConfigChannel>
 80018d6:	4603      	mov	r3, r0
 80018d8:	2b00      	cmp	r3, #0
 80018da:	d001      	beq.n	80018e0 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 80018dc:	f7ff fcdd 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80018e0:	4803      	ldr	r0, [pc, #12]	@ (80018f0 <MX_TIM2_Init+0xe8>)
 80018e2:	f000 f82b 	bl	800193c <HAL_TIM_MspPostInit>

}
 80018e6:	bf00      	nop
 80018e8:	3738      	adds	r7, #56	@ 0x38
 80018ea:	46bd      	mov	sp, r7
 80018ec:	bd80      	pop	{r7, pc}
 80018ee:	bf00      	nop
 80018f0:	20000700 	.word	0x20000700

080018f4 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b084      	sub	sp, #16
 80018f8:	af00      	add	r7, sp, #0
 80018fa:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	681b      	ldr	r3, [r3, #0]
 8001900:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001904:	d113      	bne.n	800192e <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001906:	4b0c      	ldr	r3, [pc, #48]	@ (8001938 <HAL_TIM_Base_MspInit+0x44>)
 8001908:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800190a:	4a0b      	ldr	r2, [pc, #44]	@ (8001938 <HAL_TIM_Base_MspInit+0x44>)
 800190c:	f043 0301 	orr.w	r3, r3, #1
 8001910:	6413      	str	r3, [r2, #64]	@ 0x40
 8001912:	4b09      	ldr	r3, [pc, #36]	@ (8001938 <HAL_TIM_Base_MspInit+0x44>)
 8001914:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001916:	f003 0301 	and.w	r3, r3, #1
 800191a:	60fb      	str	r3, [r7, #12]
 800191c:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 800191e:	2200      	movs	r2, #0
 8001920:	2100      	movs	r1, #0
 8001922:	201c      	movs	r0, #28
 8001924:	f002 fe17 	bl	8004556 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8001928:	201c      	movs	r0, #28
 800192a:	f002 fe30 	bl	800458e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 800192e:	bf00      	nop
 8001930:	3710      	adds	r7, #16
 8001932:	46bd      	mov	sp, r7
 8001934:	bd80      	pop	{r7, pc}
 8001936:	bf00      	nop
 8001938:	40023800 	.word	0x40023800

0800193c <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 800193c:	b580      	push	{r7, lr}
 800193e:	b088      	sub	sp, #32
 8001940:	af00      	add	r7, sp, #0
 8001942:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001944:	f107 030c 	add.w	r3, r7, #12
 8001948:	2200      	movs	r2, #0
 800194a:	601a      	str	r2, [r3, #0]
 800194c:	605a      	str	r2, [r3, #4]
 800194e:	609a      	str	r2, [r3, #8]
 8001950:	60da      	str	r2, [r3, #12]
 8001952:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM2)
 8001954:	687b      	ldr	r3, [r7, #4]
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800195c:	d11c      	bne.n	8001998 <HAL_TIM_MspPostInit+0x5c>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800195e:	4b10      	ldr	r3, [pc, #64]	@ (80019a0 <HAL_TIM_MspPostInit+0x64>)
 8001960:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001962:	4a0f      	ldr	r2, [pc, #60]	@ (80019a0 <HAL_TIM_MspPostInit+0x64>)
 8001964:	f043 0301 	orr.w	r3, r3, #1
 8001968:	6313      	str	r3, [r2, #48]	@ 0x30
 800196a:	4b0d      	ldr	r3, [pc, #52]	@ (80019a0 <HAL_TIM_MspPostInit+0x64>)
 800196c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800196e:	f003 0301 	and.w	r3, r3, #1
 8001972:	60bb      	str	r3, [r7, #8]
 8001974:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8001976:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800197a:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800197c:	2302      	movs	r3, #2
 800197e:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001980:	2300      	movs	r3, #0
 8001982:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001984:	2300      	movs	r3, #0
 8001986:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001988:	2301      	movs	r3, #1
 800198a:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800198c:	f107 030c 	add.w	r3, r7, #12
 8001990:	4619      	mov	r1, r3
 8001992:	4804      	ldr	r0, [pc, #16]	@ (80019a4 <HAL_TIM_MspPostInit+0x68>)
 8001994:	f003 f96c 	bl	8004c70 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001998:	bf00      	nop
 800199a:	3720      	adds	r7, #32
 800199c:	46bd      	mov	sp, r7
 800199e:	bd80      	pop	{r7, pc}
 80019a0:	40023800 	.word	0x40023800
 80019a4:	40020000 	.word	0x40020000

080019a8 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 80019a8:	b580      	push	{r7, lr}
 80019aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80019ac:	4b14      	ldr	r3, [pc, #80]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019ae:	4a15      	ldr	r2, [pc, #84]	@ (8001a04 <MX_USART2_UART_Init+0x5c>)
 80019b0:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80019b2:	4b13      	ldr	r3, [pc, #76]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019b4:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80019b8:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80019ba:	4b11      	ldr	r3, [pc, #68]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019bc:	2200      	movs	r2, #0
 80019be:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80019c0:	4b0f      	ldr	r3, [pc, #60]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019c2:	2200      	movs	r2, #0
 80019c4:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80019c6:	4b0e      	ldr	r3, [pc, #56]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019c8:	2200      	movs	r2, #0
 80019ca:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80019cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019ce:	220c      	movs	r2, #12
 80019d0:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80019d2:	4b0b      	ldr	r3, [pc, #44]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019d4:	2200      	movs	r2, #0
 80019d6:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80019d8:	4b09      	ldr	r3, [pc, #36]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019da:	2200      	movs	r2, #0
 80019dc:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80019de:	4b08      	ldr	r3, [pc, #32]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019e0:	2200      	movs	r2, #0
 80019e2:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 80019e4:	4b06      	ldr	r3, [pc, #24]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019e6:	2200      	movs	r2, #0
 80019e8:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80019ea:	4805      	ldr	r0, [pc, #20]	@ (8001a00 <MX_USART2_UART_Init+0x58>)
 80019ec:	f007 fa3a 	bl	8008e64 <HAL_UART_Init>
 80019f0:	4603      	mov	r3, r0
 80019f2:	2b00      	cmp	r3, #0
 80019f4:	d001      	beq.n	80019fa <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 80019f6:	f7ff fc50 	bl	800129a <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 80019fa:	bf00      	nop
 80019fc:	bd80      	pop	{r7, pc}
 80019fe:	bf00      	nop
 8001a00:	200007bc 	.word	0x200007bc
 8001a04:	40004400 	.word	0x40004400

08001a08 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001a08:	b580      	push	{r7, lr}
 8001a0a:	b0aa      	sub	sp, #168	@ 0xa8
 8001a0c:	af00      	add	r7, sp, #0
 8001a0e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a10:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001a14:	2200      	movs	r2, #0
 8001a16:	601a      	str	r2, [r3, #0]
 8001a18:	605a      	str	r2, [r3, #4]
 8001a1a:	609a      	str	r2, [r3, #8]
 8001a1c:	60da      	str	r2, [r3, #12]
 8001a1e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a20:	f107 0310 	add.w	r3, r7, #16
 8001a24:	2284      	movs	r2, #132	@ 0x84
 8001a26:	2100      	movs	r1, #0
 8001a28:	4618      	mov	r0, r3
 8001a2a:	f01f fb3a 	bl	80210a2 <memset>
  if(uartHandle->Instance==USART2)
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	4a21      	ldr	r2, [pc, #132]	@ (8001ab8 <HAL_UART_MspInit+0xb0>)
 8001a34:	4293      	cmp	r3, r2
 8001a36:	d13a      	bne.n	8001aae <HAL_UART_MspInit+0xa6>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8001a38:	2380      	movs	r3, #128	@ 0x80
 8001a3a:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8001a3c:	2300      	movs	r3, #0
 8001a3e:	65bb      	str	r3, [r7, #88]	@ 0x58
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001a40:	f107 0310 	add.w	r3, r7, #16
 8001a44:	4618      	mov	r0, r3
 8001a46:	f004 fd7d 	bl	8006544 <HAL_RCCEx_PeriphCLKConfig>
 8001a4a:	4603      	mov	r3, r0
 8001a4c:	2b00      	cmp	r3, #0
 8001a4e:	d001      	beq.n	8001a54 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001a50:	f7ff fc23 	bl	800129a <Error_Handler>
    }

    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001a54:	4b19      	ldr	r3, [pc, #100]	@ (8001abc <HAL_UART_MspInit+0xb4>)
 8001a56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a58:	4a18      	ldr	r2, [pc, #96]	@ (8001abc <HAL_UART_MspInit+0xb4>)
 8001a5a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001a5e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a60:	4b16      	ldr	r3, [pc, #88]	@ (8001abc <HAL_UART_MspInit+0xb4>)
 8001a62:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a64:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001a68:	60fb      	str	r3, [r7, #12]
 8001a6a:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001a6c:	4b13      	ldr	r3, [pc, #76]	@ (8001abc <HAL_UART_MspInit+0xb4>)
 8001a6e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a70:	4a12      	ldr	r2, [pc, #72]	@ (8001abc <HAL_UART_MspInit+0xb4>)
 8001a72:	f043 0308 	orr.w	r3, r3, #8
 8001a76:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a78:	4b10      	ldr	r3, [pc, #64]	@ (8001abc <HAL_UART_MspInit+0xb4>)
 8001a7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a7c:	f003 0308 	and.w	r3, r3, #8
 8001a80:	60bb      	str	r3, [r7, #8]
 8001a82:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PD6     ------> USART2_RX
    PD5     ------> USART2_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_5;
 8001a84:	2360      	movs	r3, #96	@ 0x60
 8001a86:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a8a:	2302      	movs	r3, #2
 8001a8c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a90:	2300      	movs	r3, #0
 8001a92:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a96:	2303      	movs	r3, #3
 8001a98:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001a9c:	2307      	movs	r3, #7
 8001a9e:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001aa2:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001aa6:	4619      	mov	r1, r3
 8001aa8:	4805      	ldr	r0, [pc, #20]	@ (8001ac0 <HAL_UART_MspInit+0xb8>)
 8001aaa:	f003 f8e1 	bl	8004c70 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8001aae:	bf00      	nop
 8001ab0:	37a8      	adds	r7, #168	@ 0xa8
 8001ab2:	46bd      	mov	sp, r7
 8001ab4:	bd80      	pop	{r7, pc}
 8001ab6:	bf00      	nop
 8001ab8:	40004400 	.word	0x40004400
 8001abc:	40023800 	.word	0x40023800
 8001ac0:	40020c00 	.word	0x40020c00

08001ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001afc <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001ac8:	f7ff fe8c 	bl	80017e4 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001acc:	480c      	ldr	r0, [pc, #48]	@ (8001b00 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001ace:	490d      	ldr	r1, [pc, #52]	@ (8001b04 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001ad0:	4a0d      	ldr	r2, [pc, #52]	@ (8001b08 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001ad2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001ad4:	e002      	b.n	8001adc <LoopCopyDataInit>

08001ad6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001ad6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001ad8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001ada:	3304      	adds	r3, #4

08001adc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001adc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001ade:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001ae0:	d3f9      	bcc.n	8001ad6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001ae2:	4a0a      	ldr	r2, [pc, #40]	@ (8001b0c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001ae4:	4c0a      	ldr	r4, [pc, #40]	@ (8001b10 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001ae6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001ae8:	e001      	b.n	8001aee <LoopFillZerobss>

08001aea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001aea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001aec:	3204      	adds	r2, #4

08001aee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001aee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001af0:	d3fb      	bcc.n	8001aea <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 8001af2:	f01f fb7f 	bl	80211f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001af6:	f7ff facb 	bl	8001090 <main>
  bx  lr    
 8001afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001afc:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8001b00:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001b04:	20000258 	.word	0x20000258
  ldr r2, =_sidata
 8001b08:	08023658 	.word	0x08023658
  ldr r2, =_sbss
 8001b0c:	20000460 	.word	0x20000460
  ldr r4, =_ebss
 8001b10:	200028a4 	.word	0x200028a4

08001b14 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b14:	e7fe      	b.n	8001b14 <ADC_IRQHandler>
	...

08001b18 <Powerstep01_AttachErrorHandler>:
 * @param[in] callback Name of the callback to attach 
 * to the error Hanlder
 * @retval None
 **********************************************************/
void Powerstep01_AttachErrorHandler(void (*callback)(uint16_t))
{
 8001b18:	b480      	push	{r7}
 8001b1a:	b083      	sub	sp, #12
 8001b1c:	af00      	add	r7, sp, #0
 8001b1e:	6078      	str	r0, [r7, #4]
  errorHandlerCallback = (void (*)(uint16_t))callback;
 8001b20:	4a04      	ldr	r2, [pc, #16]	@ (8001b34 <Powerstep01_AttachErrorHandler+0x1c>)
 8001b22:	687b      	ldr	r3, [r7, #4]
 8001b24:	6013      	str	r3, [r2, #0]
}
 8001b26:	bf00      	nop
 8001b28:	370c      	adds	r7, #12
 8001b2a:	46bd      	mov	sp, r7
 8001b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b30:	4770      	bx	lr
 8001b32:	bf00      	nop
 8001b34:	20000878 	.word	0x20000878

08001b38 <Powerstep01_AttachFlagInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Flag Interrupt
 * @retval None
 **********************************************************/
void Powerstep01_AttachFlagInterrupt(void (*callback)(void))
{
 8001b38:	b480      	push	{r7}
 8001b3a:	b083      	sub	sp, #12
 8001b3c:	af00      	add	r7, sp, #0
 8001b3e:	6078      	str	r0, [r7, #4]
  flagInterruptCallback = (void (*)())callback;
 8001b40:	4a04      	ldr	r2, [pc, #16]	@ (8001b54 <Powerstep01_AttachFlagInterrupt+0x1c>)
 8001b42:	687b      	ldr	r3, [r7, #4]
 8001b44:	6013      	str	r3, [r2, #0]
}
 8001b46:	bf00      	nop
 8001b48:	370c      	adds	r7, #12
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b50:	4770      	bx	lr
 8001b52:	bf00      	nop
 8001b54:	20000874 	.word	0x20000874

08001b58 <Powerstep01_AttachBusyInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Busy Interrupt
 * @retval None
 **********************************************************/
void Powerstep01_AttachBusyInterrupt(void (*callback)(void))
{
 8001b58:	b480      	push	{r7}
 8001b5a:	b083      	sub	sp, #12
 8001b5c:	af00      	add	r7, sp, #0
 8001b5e:	6078      	str	r0, [r7, #4]
  busyInterruptCallback = (void (*)())callback;
 8001b60:	4a04      	ldr	r2, [pc, #16]	@ (8001b74 <Powerstep01_AttachBusyInterrupt+0x1c>)
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	6013      	str	r3, [r2, #0]
}
 8001b66:	bf00      	nop
 8001b68:	370c      	adds	r7, #12
 8001b6a:	46bd      	mov	sp, r7
 8001b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b70:	4770      	bx	lr
 8001b72:	bf00      	nop
 8001b74:	20000870 	.word	0x20000870

08001b78 <Powerstep01_ReadId>:
/******************************************************//**
 * @brief Read id
 * @retval Id of the powerSTEP01 Driver Instance
 **********************************************************/
uint16_t Powerstep01_ReadId(void)
{
 8001b78:	b480      	push	{r7}
 8001b7a:	af00      	add	r7, sp, #0
  return(powerstep01DriverInstance);
 8001b7c:	4b03      	ldr	r3, [pc, #12]	@ (8001b8c <Powerstep01_ReadId+0x14>)
 8001b7e:	881b      	ldrh	r3, [r3, #0]
}
 8001b80:	4618      	mov	r0, r3
 8001b82:	46bd      	mov	sp, r7
 8001b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b88:	4770      	bx	lr
 8001b8a:	bf00      	nop
 8001b8c:	2000088a 	.word	0x2000088a

08001b90 <Powerstep01_Init>:
 * @brief Starts the Powerstep01 library
 * @param[in] pInit pointer to the initialization data
 * @retval None
 **********************************************************/
void Powerstep01_Init(void* pInit)
{ 
 8001b90:	b580      	push	{r7, lr}
 8001b92:	b082      	sub	sp, #8
 8001b94:	af00      	add	r7, sp, #0
 8001b96:	6078      	str	r0, [r7, #4]
  /* Initialise the GPIOs of the just added device */
  Powerstep01_Board_GpioInit(powerstep01DriverInstance);
 8001b98:	4b1e      	ldr	r3, [pc, #120]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001b9a:	881b      	ldrh	r3, [r3, #0]
 8001b9c:	b2db      	uxtb	r3, r3
 8001b9e:	4618      	mov	r0, r3
 8001ba0:	f001 fff4 	bl	8003b8c <Powerstep01_Board_GpioInit>
  
  if(Powerstep01_Board_SpiInit() != 0)
 8001ba4:	f002 f91e 	bl	8003de4 <Powerstep01_Board_SpiInit>
 8001ba8:	4603      	mov	r3, r0
 8001baa:	2b00      	cmp	r3, #0
 8001bac:	d003      	beq.n	8001bb6 <Powerstep01_Init+0x26>
  {
    /* Initialization Error */
    Powerstep01_ErrorHandler(POWERSTEP01_ERROR_0);
 8001bae:	f44f 4030 	mov.w	r0, #45056	@ 0xb000
 8001bb2:	f001 f90b 	bl	8002dcc <Powerstep01_ErrorHandler>
  } 
  
  /* configure the step clock */
  Powerstep01_Board_StepClockInit();
 8001bb6:	f002 f887 	bl	8003cc8 <Powerstep01_Board_StepClockInit>
  
  /* Standby-reset deactivation */
  Powerstep01_Board_ReleaseReset(powerstep01DriverInstance);
 8001bba:	4b16      	ldr	r3, [pc, #88]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001bbc:	881b      	ldrh	r3, [r3, #0]
 8001bbe:	b2db      	uxtb	r3, r3
 8001bc0:	4618      	mov	r0, r3
 8001bc2:	f002 f8ef 	bl	8003da4 <Powerstep01_Board_ReleaseReset>
  
  /* Let a delay after reset */
  Powerstep01_Board_Delay(1);
 8001bc6:	2001      	movs	r0, #1
 8001bc8:	f001 ffc2 	bl	8003b50 <Powerstep01_Board_Delay>

  if (pInit == 0)
 8001bcc:	687b      	ldr	r3, [r7, #4]
 8001bce:	2b00      	cmp	r3, #0
 8001bd0:	d106      	bne.n	8001be0 <Powerstep01_Init+0x50>
  {
    // Set all registers to their predefined values from powerstep01_target_config.h 
    Powerstep01_SetRegisterToPredefinedValues(powerstep01DriverInstance);
 8001bd2:	4b10      	ldr	r3, [pc, #64]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001bd4:	881b      	ldrh	r3, [r3, #0]
 8001bd6:	b2db      	uxtb	r3, r3
 8001bd8:	4618      	mov	r0, r3
 8001bda:	f001 f9e7 	bl	8002fac <Powerstep01_SetRegisterToPredefinedValues>
 8001bde:	e006      	b.n	8001bee <Powerstep01_Init+0x5e>
  }
  else
  {
    Powerstep01_SetDeviceParamsToGivenValues(powerstep01DriverInstance, pInit);
 8001be0:	4b0c      	ldr	r3, [pc, #48]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001be2:	881b      	ldrh	r3, [r3, #0]
 8001be4:	b2db      	uxtb	r3, r3
 8001be6:	6879      	ldr	r1, [r7, #4]
 8001be8:	4618      	mov	r0, r3
 8001bea:	f001 fb31 	bl	8003250 <Powerstep01_SetDeviceParamsToGivenValues>
  }
  
  // Put the Powerstep01 in HiZ state
  Powerstep01_CmdHardHiZ(powerstep01DriverInstance);
 8001bee:	4b09      	ldr	r3, [pc, #36]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001bf0:	881b      	ldrh	r3, [r3, #0]
 8001bf2:	b2db      	uxtb	r3, r3
 8001bf4:	4618      	mov	r0, r3
 8001bf6:	f000 fa00 	bl	8001ffa <Powerstep01_CmdHardHiZ>
  
  Powerstep01_FetchAndClearAllStatus();
 8001bfa:	f000 fb8f 	bl	800231c <Powerstep01_FetchAndClearAllStatus>
  
  powerstep01DriverInstance++;
 8001bfe:	4b05      	ldr	r3, [pc, #20]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001c00:	881b      	ldrh	r3, [r3, #0]
 8001c02:	3301      	adds	r3, #1
 8001c04:	b29a      	uxth	r2, r3
 8001c06:	4b03      	ldr	r3, [pc, #12]	@ (8001c14 <Powerstep01_Init+0x84>)
 8001c08:	801a      	strh	r2, [r3, #0]
}
 8001c0a:	bf00      	nop
 8001c0c:	3708      	adds	r7, #8
 8001c0e:	46bd      	mov	sp, r7
 8001c10:	bd80      	pop	{r7, pc}
 8001c12:	bf00      	nop
 8001c14:	2000088a 	.word	0x2000088a

08001c18 <Powerstep01_CheckBusyHw>:
 * busy pin position. 
 * The busy pin is shared between all devices.
 * @retval One if at least one Powerstep01 is busy, otherwise zero
 **********************************************************/
uint8_t Powerstep01_CheckBusyHw(void)
{
 8001c18:	b580      	push	{r7, lr}
 8001c1a:	af00      	add	r7, sp, #0
	if(!(Powerstep01_Board_BUSY_PIN_GetState()))
 8001c1c:	f002 f956 	bl	8003ecc <Powerstep01_Board_BUSY_PIN_GetState>
 8001c20:	4603      	mov	r3, r0
 8001c22:	2b00      	cmp	r3, #0
 8001c24:	d101      	bne.n	8001c2a <Powerstep01_CheckBusyHw+0x12>
  {
    return 0x01;
 8001c26:	2301      	movs	r3, #1
 8001c28:	e000      	b.n	8001c2c <Powerstep01_CheckBusyHw+0x14>
  }
	else 
  {
    return 0x00;
 8001c2a:	2300      	movs	r3, #0
  }
}
 8001c2c:	4618      	mov	r0, r3
 8001c2e:	bd80      	pop	{r7, pc}

08001c30 <Powerstep01_CheckStatusHw>:
 * The flag pin is shared between all devices.
 * @retval One if at least one Powerstep01 has an alarm flag set ,
 * otherwise zero
 **********************************************************/
uint8_t Powerstep01_CheckStatusHw(void)
{
 8001c30:	b580      	push	{r7, lr}
 8001c32:	af00      	add	r7, sp, #0
	if(!(Powerstep01_Board_FLAG_PIN_GetState()))
 8001c34:	f002 f956 	bl	8003ee4 <Powerstep01_Board_FLAG_PIN_GetState>
 8001c38:	4603      	mov	r3, r0
 8001c3a:	2b00      	cmp	r3, #0
 8001c3c:	d101      	bne.n	8001c42 <Powerstep01_CheckStatusHw+0x12>
  {
    return 0x01;
 8001c3e:	2301      	movs	r3, #1
 8001c40:	e000      	b.n	8001c44 <Powerstep01_CheckStatusHw+0x14>
  }
	else 
  {
    return 0x00;
 8001c42:	2300      	movs	r3, #0
  }
}
 8001c44:	4618      	mov	r0, r3
 8001c46:	bd80      	pop	{r7, pc}

08001c48 <Powerstep01_CmdGetParam>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] param PowerStep01 register address
 * @retval Register value - 1 to 3 bytes (depends on register)
 *********************************************************/
uint32_t Powerstep01_CmdGetParam(uint8_t deviceId, uint32_t param)
{
 8001c48:	b580      	push	{r7, lr}
 8001c4a:	b086      	sub	sp, #24
 8001c4c:	af00      	add	r7, sp, #0
 8001c4e:	4603      	mov	r3, r0
 8001c50:	6039      	str	r1, [r7, #0]
 8001c52:	71fb      	strb	r3, [r7, #7]
  uint32_t spiRxData = 0;
 8001c54:	2300      	movs	r3, #0
 8001c56:	617b      	str	r3, [r7, #20]

  if (numberOfDevices > deviceId)
 8001c58:	4b67      	ldr	r3, [pc, #412]	@ (8001df8 <Powerstep01_CmdGetParam+0x1b0>)
 8001c5a:	781b      	ldrb	r3, [r3, #0]
 8001c5c:	b2db      	uxtb	r3, r3
 8001c5e:	79fa      	ldrb	r2, [r7, #7]
 8001c60:	429a      	cmp	r2, r3
 8001c62:	f080 80c4 	bcs.w	8001dee <Powerstep01_CmdGetParam+0x1a6>
  {
    uint32_t loop;
    uint8_t maxArgumentNbBytes = 0;
 8001c66:	2300      	movs	r3, #0
 8001c68:	73fb      	strb	r3, [r7, #15]
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8001c6a:	4b63      	ldr	r3, [pc, #396]	@ (8001df8 <Powerstep01_CmdGetParam+0x1b0>)
 8001c6c:	781b      	ldrb	r3, [r3, #0]
 8001c6e:	b2da      	uxtb	r2, r3
 8001c70:	79fb      	ldrb	r3, [r7, #7]
 8001c72:	1ad3      	subs	r3, r2, r3
 8001c74:	b2db      	uxtb	r3, r3
 8001c76:	3b01      	subs	r3, #1
 8001c78:	737b      	strb	r3, [r7, #13]
    bool itDisable = FALSE;
 8001c7a:	2300      	movs	r3, #0
 8001c7c:	73bb      	strb	r3, [r7, #14]
    
    do
    {
      spiPreemtionByIsr = FALSE;
 8001c7e:	4b5f      	ldr	r3, [pc, #380]	@ (8001dfc <Powerstep01_CmdGetParam+0x1b4>)
 8001c80:	2200      	movs	r2, #0
 8001c82:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 8001c84:	7bbb      	ldrb	r3, [r7, #14]
 8001c86:	2b00      	cmp	r3, #0
 8001c88:	d003      	beq.n	8001c92 <Powerstep01_CmdGetParam+0x4a>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 8001c8a:	f001 ff75 	bl	8003b78 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 8001c8e:	2300      	movs	r3, #0
 8001c90:	73bb      	strb	r3, [r7, #14]
      }
      for (loop = 0; loop < numberOfDevices; loop++)
 8001c92:	2300      	movs	r3, #0
 8001c94:	613b      	str	r3, [r7, #16]
 8001c96:	e030      	b.n	8001cfa <Powerstep01_CmdGetParam+0xb2>
      {
        spiTxBursts[0][loop] = POWERSTEP01_NOP;
 8001c98:	4a59      	ldr	r2, [pc, #356]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001c9a:	693b      	ldr	r3, [r7, #16]
 8001c9c:	4413      	add	r3, r2
 8001c9e:	2200      	movs	r2, #0
 8001ca0:	701a      	strb	r2, [r3, #0]
        spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8001ca2:	4a57      	ldr	r2, [pc, #348]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001ca4:	693b      	ldr	r3, [r7, #16]
 8001ca6:	4413      	add	r3, r2
 8001ca8:	3301      	adds	r3, #1
 8001caa:	2200      	movs	r2, #0
 8001cac:	701a      	strb	r2, [r3, #0]
        spiTxBursts[2][loop] = POWERSTEP01_NOP;
 8001cae:	4a54      	ldr	r2, [pc, #336]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001cb0:	693b      	ldr	r3, [r7, #16]
 8001cb2:	4413      	add	r3, r2
 8001cb4:	3302      	adds	r3, #2
 8001cb6:	2200      	movs	r2, #0
 8001cb8:	701a      	strb	r2, [r3, #0]
        spiTxBursts[3][loop] = POWERSTEP01_NOP;
 8001cba:	4a51      	ldr	r2, [pc, #324]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001cbc:	693b      	ldr	r3, [r7, #16]
 8001cbe:	4413      	add	r3, r2
 8001cc0:	3303      	adds	r3, #3
 8001cc2:	2200      	movs	r2, #0
 8001cc4:	701a      	strb	r2, [r3, #0]
        spiRxBursts[0][loop] = 0;
 8001cc6:	4a4f      	ldr	r2, [pc, #316]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001cc8:	693b      	ldr	r3, [r7, #16]
 8001cca:	4413      	add	r3, r2
 8001ccc:	2200      	movs	r2, #0
 8001cce:	701a      	strb	r2, [r3, #0]
        spiRxBursts[1][loop] = 0;
 8001cd0:	4a4c      	ldr	r2, [pc, #304]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001cd2:	693b      	ldr	r3, [r7, #16]
 8001cd4:	4413      	add	r3, r2
 8001cd6:	3301      	adds	r3, #1
 8001cd8:	2200      	movs	r2, #0
 8001cda:	701a      	strb	r2, [r3, #0]
        spiRxBursts[2][loop] = 0;
 8001cdc:	4a49      	ldr	r2, [pc, #292]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001cde:	693b      	ldr	r3, [r7, #16]
 8001ce0:	4413      	add	r3, r2
 8001ce2:	3302      	adds	r3, #2
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	701a      	strb	r2, [r3, #0]
        spiRxBursts[3][loop] = 0;    
 8001ce8:	4a46      	ldr	r2, [pc, #280]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001cea:	693b      	ldr	r3, [r7, #16]
 8001cec:	4413      	add	r3, r2
 8001cee:	3303      	adds	r3, #3
 8001cf0:	2200      	movs	r2, #0
 8001cf2:	701a      	strb	r2, [r3, #0]
      for (loop = 0; loop < numberOfDevices; loop++)
 8001cf4:	693b      	ldr	r3, [r7, #16]
 8001cf6:	3301      	adds	r3, #1
 8001cf8:	613b      	str	r3, [r7, #16]
 8001cfa:	4b3f      	ldr	r3, [pc, #252]	@ (8001df8 <Powerstep01_CmdGetParam+0x1b0>)
 8001cfc:	781b      	ldrb	r3, [r3, #0]
 8001cfe:	b2db      	uxtb	r3, r3
 8001d00:	461a      	mov	r2, r3
 8001d02:	693b      	ldr	r3, [r7, #16]
 8001d04:	4293      	cmp	r3, r2
 8001d06:	d3c7      	bcc.n	8001c98 <Powerstep01_CmdGetParam+0x50>
      }
      switch (param)
 8001d08:	683b      	ldr	r3, [r7, #0]
 8001d0a:	2b1b      	cmp	r3, #27
 8001d0c:	bf8c      	ite	hi
 8001d0e:	2301      	movhi	r3, #1
 8001d10:	2300      	movls	r3, #0
 8001d12:	b2db      	uxtb	r3, r3
 8001d14:	2b00      	cmp	r3, #0
 8001d16:	d12c      	bne.n	8001d72 <Powerstep01_CmdGetParam+0x12a>
 8001d18:	2201      	movs	r2, #1
 8001d1a:	683b      	ldr	r3, [r7, #0]
 8001d1c:	409a      	lsls	r2, r3
 8001d1e:	4b3a      	ldr	r3, [pc, #232]	@ (8001e08 <Powerstep01_CmdGetParam+0x1c0>)
 8001d20:	4013      	ands	r3, r2
 8001d22:	2b00      	cmp	r3, #0
 8001d24:	bf14      	ite	ne
 8001d26:	2301      	movne	r3, #1
 8001d28:	2300      	moveq	r3, #0
 8001d2a:	b2db      	uxtb	r3, r3
 8001d2c:	2b00      	cmp	r3, #0
 8001d2e:	d113      	bne.n	8001d58 <Powerstep01_CmdGetParam+0x110>
 8001d30:	f002 031a 	and.w	r3, r2, #26
 8001d34:	2b00      	cmp	r3, #0
 8001d36:	bf14      	ite	ne
 8001d38:	2301      	movne	r3, #1
 8001d3a:	2300      	moveq	r3, #0
 8001d3c:	b2db      	uxtb	r3, r3
 8001d3e:	2b00      	cmp	r3, #0
 8001d40:	d017      	beq.n	8001d72 <Powerstep01_CmdGetParam+0x12a>
      {
        case POWERSTEP01_ABS_POS: 
        case POWERSTEP01_MARK:
        case POWERSTEP01_SPEED:
          spiTxBursts[0][spiIndex] = ((uint8_t)POWERSTEP01_GET_PARAM )| (param);
 8001d42:	683b      	ldr	r3, [r7, #0]
 8001d44:	b2da      	uxtb	r2, r3
 8001d46:	7b7b      	ldrb	r3, [r7, #13]
 8001d48:	f042 0220 	orr.w	r2, r2, #32
 8001d4c:	b2d1      	uxtb	r1, r2
 8001d4e:	4a2c      	ldr	r2, [pc, #176]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001d50:	54d1      	strb	r1, [r2, r3]
          maxArgumentNbBytes = 3;
 8001d52:	2303      	movs	r3, #3
 8001d54:	73fb      	strb	r3, [r7, #15]
          break;
 8001d56:	e018      	b.n	8001d8a <Powerstep01_CmdGetParam+0x142>
        case POWERSTEP01_FS_SPD:
        case POWERSTEP01_INT_SPD:
        case POWERSTEP01_CONFIG:
        case POWERSTEP01_GATECFG1:
        case POWERSTEP01_STATUS:
          spiTxBursts[1][spiIndex] = ((uint8_t)POWERSTEP01_GET_PARAM )| (param);
 8001d58:	683b      	ldr	r3, [r7, #0]
 8001d5a:	b2da      	uxtb	r2, r3
 8001d5c:	7b7b      	ldrb	r3, [r7, #13]
 8001d5e:	f042 0220 	orr.w	r2, r2, #32
 8001d62:	b2d1      	uxtb	r1, r2
 8001d64:	4a26      	ldr	r2, [pc, #152]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001d66:	4413      	add	r3, r2
 8001d68:	460a      	mov	r2, r1
 8001d6a:	705a      	strb	r2, [r3, #1]
          maxArgumentNbBytes = 2;
 8001d6c:	2302      	movs	r3, #2
 8001d6e:	73fb      	strb	r3, [r7, #15]
          break;
 8001d70:	e00b      	b.n	8001d8a <Powerstep01_CmdGetParam+0x142>
      default:
          spiTxBursts[2][spiIndex] = ((uint8_t)POWERSTEP01_GET_PARAM )| (param);
 8001d72:	683b      	ldr	r3, [r7, #0]
 8001d74:	b2da      	uxtb	r2, r3
 8001d76:	7b7b      	ldrb	r3, [r7, #13]
 8001d78:	f042 0220 	orr.w	r2, r2, #32
 8001d7c:	b2d1      	uxtb	r1, r2
 8001d7e:	4a20      	ldr	r2, [pc, #128]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001d80:	4413      	add	r3, r2
 8001d82:	460a      	mov	r2, r1
 8001d84:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 1;
 8001d86:	2301      	movs	r3, #1
 8001d88:	73fb      	strb	r3, [r7, #15]
      }
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 8001d8a:	f001 feec 	bl	8003b66 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 8001d8e:	2301      	movs	r3, #1
 8001d90:	73bb      	strb	r3, [r7, #14]
    } while (spiPreemtionByIsr); // check pre-emption by ISR
 8001d92:	4b1a      	ldr	r3, [pc, #104]	@ (8001dfc <Powerstep01_CmdGetParam+0x1b4>)
 8001d94:	781b      	ldrb	r3, [r3, #0]
 8001d96:	b2db      	uxtb	r3, r3
 8001d98:	2b00      	cmp	r3, #0
 8001d9a:	f47f af70 	bne.w	8001c7e <Powerstep01_CmdGetParam+0x36>
    for (loop = POWERSTEP01_CMD_ARG_MAX_NB_BYTES-1-maxArgumentNbBytes;
 8001d9e:	7bfb      	ldrb	r3, [r7, #15]
 8001da0:	f1c3 0303 	rsb	r3, r3, #3
 8001da4:	613b      	str	r3, [r7, #16]
 8001da6:	e00c      	b.n	8001dc2 <Powerstep01_CmdGetParam+0x17a>
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
         loop++)
    {
       Powerstep01_WriteBytes(&spiTxBursts[loop][0],
 8001da8:	693b      	ldr	r3, [r7, #16]
 8001daa:	4a15      	ldr	r2, [pc, #84]	@ (8001e00 <Powerstep01_CmdGetParam+0x1b8>)
 8001dac:	441a      	add	r2, r3
 8001dae:	693b      	ldr	r3, [r7, #16]
 8001db0:	4914      	ldr	r1, [pc, #80]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001db2:	440b      	add	r3, r1
 8001db4:	4619      	mov	r1, r3
 8001db6:	4610      	mov	r0, r2
 8001db8:	f001 fc46 	bl	8003648 <Powerstep01_WriteBytes>
         loop++)
 8001dbc:	693b      	ldr	r3, [r7, #16]
 8001dbe:	3301      	adds	r3, #1
 8001dc0:	613b      	str	r3, [r7, #16]
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
 8001dc2:	693b      	ldr	r3, [r7, #16]
 8001dc4:	2b03      	cmp	r3, #3
 8001dc6:	d9ef      	bls.n	8001da8 <Powerstep01_CmdGetParam+0x160>
                             &spiRxBursts[loop][0]);
    }
    spiRxData = ((uint32_t)spiRxBursts[1][spiIndex] << 16)|
 8001dc8:	7b7b      	ldrb	r3, [r7, #13]
 8001dca:	4a0e      	ldr	r2, [pc, #56]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001dcc:	4413      	add	r3, r2
 8001dce:	785b      	ldrb	r3, [r3, #1]
 8001dd0:	041a      	lsls	r2, r3, #16
                 (spiRxBursts[2][spiIndex] << 8) |
 8001dd2:	7b7b      	ldrb	r3, [r7, #13]
 8001dd4:	490b      	ldr	r1, [pc, #44]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001dd6:	440b      	add	r3, r1
 8001dd8:	789b      	ldrb	r3, [r3, #2]
 8001dda:	021b      	lsls	r3, r3, #8
    spiRxData = ((uint32_t)spiRxBursts[1][spiIndex] << 16)|
 8001ddc:	4313      	orrs	r3, r2
                 (spiRxBursts[3][spiIndex]);    
 8001dde:	7b7a      	ldrb	r2, [r7, #13]
 8001de0:	4908      	ldr	r1, [pc, #32]	@ (8001e04 <Powerstep01_CmdGetParam+0x1bc>)
 8001de2:	440a      	add	r2, r1
 8001de4:	78d2      	ldrb	r2, [r2, #3]
    spiRxData = ((uint32_t)spiRxBursts[1][spiIndex] << 16)|
 8001de6:	4313      	orrs	r3, r2
 8001de8:	617b      	str	r3, [r7, #20]
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();
 8001dea:	f001 fec5 	bl	8003b78 <Powerstep01_Board_EnableIrq>
  }

  return (spiRxData);
 8001dee:	697b      	ldr	r3, [r7, #20]
}
 8001df0:	4618      	mov	r0, r3
 8001df2:	3718      	adds	r7, #24
 8001df4:	46bd      	mov	sp, r7
 8001df6:	bd80      	pop	{r7, pc}
 8001df8:	2000087c 	.word	0x2000087c
 8001dfc:	20000888 	.word	0x20000888
 8001e00:	20000880 	.word	0x20000880
 8001e04:	20000884 	.word	0x20000884
 8001e08:	0d2021e4 	.word	0x0d2021e4

08001e0c <Powerstep01_CmdGetStatus>:
 * @brief Issues PowerStep01 Get Status command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval Status Register content
 *********************************************************/
uint16_t Powerstep01_CmdGetStatus(uint8_t deviceId)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	b086      	sub	sp, #24
 8001e10:	af00      	add	r7, sp, #0
 8001e12:	4603      	mov	r3, r0
 8001e14:	71fb      	strb	r3, [r7, #7]
  uint16_t status = 0;
 8001e16:	2300      	movs	r3, #0
 8001e18:	82fb      	strh	r3, [r7, #22]
  if (numberOfDevices > deviceId)
 8001e1a:	4b45      	ldr	r3, [pc, #276]	@ (8001f30 <Powerstep01_CmdGetStatus+0x124>)
 8001e1c:	781b      	ldrb	r3, [r3, #0]
 8001e1e:	b2db      	uxtb	r3, r3
 8001e20:	79fa      	ldrb	r2, [r7, #7]
 8001e22:	429a      	cmp	r2, r3
 8001e24:	d27e      	bcs.n	8001f24 <Powerstep01_CmdGetStatus+0x118>
  {
    uint32_t loop;
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8001e26:	4b42      	ldr	r3, [pc, #264]	@ (8001f30 <Powerstep01_CmdGetStatus+0x124>)
 8001e28:	781b      	ldrb	r3, [r3, #0]
 8001e2a:	b2da      	uxtb	r2, r3
 8001e2c:	79fb      	ldrb	r3, [r7, #7]
 8001e2e:	1ad3      	subs	r3, r2, r3
 8001e30:	b2db      	uxtb	r3, r3
 8001e32:	3b01      	subs	r3, #1
 8001e34:	73bb      	strb	r3, [r7, #14]
    bool itDisable = FALSE; 
 8001e36:	2300      	movs	r3, #0
 8001e38:	73fb      	strb	r3, [r7, #15]
 
    do
    {
      spiPreemtionByIsr = FALSE;
 8001e3a:	4b3e      	ldr	r3, [pc, #248]	@ (8001f34 <Powerstep01_CmdGetStatus+0x128>)
 8001e3c:	2200      	movs	r2, #0
 8001e3e:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 8001e40:	7bfb      	ldrb	r3, [r7, #15]
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d003      	beq.n	8001e4e <Powerstep01_CmdGetStatus+0x42>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 8001e46:	f001 fe97 	bl	8003b78 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 8001e4a:	2300      	movs	r3, #0
 8001e4c:	73fb      	strb	r3, [r7, #15]
      }    
      for (loop = 0; loop < numberOfDevices; loop++)
 8001e4e:	2300      	movs	r3, #0
 8001e50:	613b      	str	r3, [r7, #16]
 8001e52:	e030      	b.n	8001eb6 <Powerstep01_CmdGetStatus+0xaa>
      {
         spiTxBursts[0][loop] = POWERSTEP01_NOP;
 8001e54:	4a38      	ldr	r2, [pc, #224]	@ (8001f38 <Powerstep01_CmdGetStatus+0x12c>)
 8001e56:	693b      	ldr	r3, [r7, #16]
 8001e58:	4413      	add	r3, r2
 8001e5a:	2200      	movs	r2, #0
 8001e5c:	701a      	strb	r2, [r3, #0]
         spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8001e5e:	4a36      	ldr	r2, [pc, #216]	@ (8001f38 <Powerstep01_CmdGetStatus+0x12c>)
 8001e60:	693b      	ldr	r3, [r7, #16]
 8001e62:	4413      	add	r3, r2
 8001e64:	3301      	adds	r3, #1
 8001e66:	2200      	movs	r2, #0
 8001e68:	701a      	strb	r2, [r3, #0]
         spiTxBursts[2][loop] = POWERSTEP01_NOP;
 8001e6a:	4a33      	ldr	r2, [pc, #204]	@ (8001f38 <Powerstep01_CmdGetStatus+0x12c>)
 8001e6c:	693b      	ldr	r3, [r7, #16]
 8001e6e:	4413      	add	r3, r2
 8001e70:	3302      	adds	r3, #2
 8001e72:	2200      	movs	r2, #0
 8001e74:	701a      	strb	r2, [r3, #0]
         spiTxBursts[3][loop] = POWERSTEP01_NOP;
 8001e76:	4a30      	ldr	r2, [pc, #192]	@ (8001f38 <Powerstep01_CmdGetStatus+0x12c>)
 8001e78:	693b      	ldr	r3, [r7, #16]
 8001e7a:	4413      	add	r3, r2
 8001e7c:	3303      	adds	r3, #3
 8001e7e:	2200      	movs	r2, #0
 8001e80:	701a      	strb	r2, [r3, #0]
         spiRxBursts[0][loop] = 0;
 8001e82:	4a2e      	ldr	r2, [pc, #184]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001e84:	693b      	ldr	r3, [r7, #16]
 8001e86:	4413      	add	r3, r2
 8001e88:	2200      	movs	r2, #0
 8001e8a:	701a      	strb	r2, [r3, #0]
         spiRxBursts[1][loop] = 0;
 8001e8c:	4a2b      	ldr	r2, [pc, #172]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001e8e:	693b      	ldr	r3, [r7, #16]
 8001e90:	4413      	add	r3, r2
 8001e92:	3301      	adds	r3, #1
 8001e94:	2200      	movs	r2, #0
 8001e96:	701a      	strb	r2, [r3, #0]
         spiRxBursts[2][loop] = 0;
 8001e98:	4a28      	ldr	r2, [pc, #160]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001e9a:	693b      	ldr	r3, [r7, #16]
 8001e9c:	4413      	add	r3, r2
 8001e9e:	3302      	adds	r3, #2
 8001ea0:	2200      	movs	r2, #0
 8001ea2:	701a      	strb	r2, [r3, #0]
         spiRxBursts[3][loop] = 0;       
 8001ea4:	4a25      	ldr	r2, [pc, #148]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001ea6:	693b      	ldr	r3, [r7, #16]
 8001ea8:	4413      	add	r3, r2
 8001eaa:	3303      	adds	r3, #3
 8001eac:	2200      	movs	r2, #0
 8001eae:	701a      	strb	r2, [r3, #0]
      for (loop = 0; loop < numberOfDevices; loop++)
 8001eb0:	693b      	ldr	r3, [r7, #16]
 8001eb2:	3301      	adds	r3, #1
 8001eb4:	613b      	str	r3, [r7, #16]
 8001eb6:	4b1e      	ldr	r3, [pc, #120]	@ (8001f30 <Powerstep01_CmdGetStatus+0x124>)
 8001eb8:	781b      	ldrb	r3, [r3, #0]
 8001eba:	b2db      	uxtb	r3, r3
 8001ebc:	461a      	mov	r2, r3
 8001ebe:	693b      	ldr	r3, [r7, #16]
 8001ec0:	4293      	cmp	r3, r2
 8001ec2:	d3c7      	bcc.n	8001e54 <Powerstep01_CmdGetStatus+0x48>
      }
      spiTxBursts[0][spiIndex] = POWERSTEP01_GET_STATUS;
 8001ec4:	7bbb      	ldrb	r3, [r7, #14]
 8001ec6:	4a1c      	ldr	r2, [pc, #112]	@ (8001f38 <Powerstep01_CmdGetStatus+0x12c>)
 8001ec8:	21d0      	movs	r1, #208	@ 0xd0
 8001eca:	54d1      	strb	r1, [r2, r3]
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 8001ecc:	f001 fe4b 	bl	8003b66 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 8001ed0:	2301      	movs	r3, #1
 8001ed2:	73fb      	strb	r3, [r7, #15]
    } while (spiPreemtionByIsr); // check pre-emption by ISR  
 8001ed4:	4b17      	ldr	r3, [pc, #92]	@ (8001f34 <Powerstep01_CmdGetStatus+0x128>)
 8001ed6:	781b      	ldrb	r3, [r3, #0]
 8001ed8:	b2db      	uxtb	r3, r3
 8001eda:	2b00      	cmp	r3, #0
 8001edc:	d1ad      	bne.n	8001e3a <Powerstep01_CmdGetStatus+0x2e>
    for (loop = 0; loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + POWERSTEP01_RSP_NB_BYTES_GET_STATUS; loop++)
 8001ede:	2300      	movs	r3, #0
 8001ee0:	613b      	str	r3, [r7, #16]
 8001ee2:	e00c      	b.n	8001efe <Powerstep01_CmdGetStatus+0xf2>
    {
       Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 8001ee4:	693b      	ldr	r3, [r7, #16]
 8001ee6:	4a14      	ldr	r2, [pc, #80]	@ (8001f38 <Powerstep01_CmdGetStatus+0x12c>)
 8001ee8:	441a      	add	r2, r3
 8001eea:	693b      	ldr	r3, [r7, #16]
 8001eec:	4913      	ldr	r1, [pc, #76]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001eee:	440b      	add	r3, r1
 8001ef0:	4619      	mov	r1, r3
 8001ef2:	4610      	mov	r0, r2
 8001ef4:	f001 fba8 	bl	8003648 <Powerstep01_WriteBytes>
    for (loop = 0; loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + POWERSTEP01_RSP_NB_BYTES_GET_STATUS; loop++)
 8001ef8:	693b      	ldr	r3, [r7, #16]
 8001efa:	3301      	adds	r3, #1
 8001efc:	613b      	str	r3, [r7, #16]
 8001efe:	693b      	ldr	r3, [r7, #16]
 8001f00:	2b02      	cmp	r3, #2
 8001f02:	d9ef      	bls.n	8001ee4 <Powerstep01_CmdGetStatus+0xd8>
    }
    status = (spiRxBursts[1][spiIndex] << 8) | (spiRxBursts[2][spiIndex]);
 8001f04:	7bbb      	ldrb	r3, [r7, #14]
 8001f06:	4a0d      	ldr	r2, [pc, #52]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001f08:	4413      	add	r3, r2
 8001f0a:	785b      	ldrb	r3, [r3, #1]
 8001f0c:	021b      	lsls	r3, r3, #8
 8001f0e:	b21a      	sxth	r2, r3
 8001f10:	7bbb      	ldrb	r3, [r7, #14]
 8001f12:	490a      	ldr	r1, [pc, #40]	@ (8001f3c <Powerstep01_CmdGetStatus+0x130>)
 8001f14:	440b      	add	r3, r1
 8001f16:	789b      	ldrb	r3, [r3, #2]
 8001f18:	b21b      	sxth	r3, r3
 8001f1a:	4313      	orrs	r3, r2
 8001f1c:	b21b      	sxth	r3, r3
 8001f1e:	82fb      	strh	r3, [r7, #22]
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();    
 8001f20:	f001 fe2a 	bl	8003b78 <Powerstep01_Board_EnableIrq>
  }
  return (status);
 8001f24:	8afb      	ldrh	r3, [r7, #22]
}
 8001f26:	4618      	mov	r0, r3
 8001f28:	3718      	adds	r7, #24
 8001f2a:	46bd      	mov	sp, r7
 8001f2c:	bd80      	pop	{r7, pc}
 8001f2e:	bf00      	nop
 8001f30:	2000087c 	.word	0x2000087c
 8001f34:	20000888 	.word	0x20000888
 8001f38:	20000880 	.word	0x20000880
 8001f3c:	20000884 	.word	0x20000884

08001f40 <Powerstep01_CmdGoHome>:
 * @brief Issues PowerStep01 Go Home command (Shortest path to zero position)
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoHome(uint8_t deviceId)
{
 8001f40:	b580      	push	{r7, lr}
 8001f42:	b082      	sub	sp, #8
 8001f44:	af00      	add	r7, sp, #0
 8001f46:	4603      	mov	r3, r0
 8001f48:	71fb      	strb	r3, [r7, #7]
   Powerstep01_SendCommand(deviceId, POWERSTEP01_GO_HOME, 0);   
 8001f4a:	79fb      	ldrb	r3, [r7, #7]
 8001f4c:	2200      	movs	r2, #0
 8001f4e:	2170      	movs	r1, #112	@ 0x70
 8001f50:	4618      	mov	r0, r3
 8001f52:	f000 ff67 	bl	8002e24 <Powerstep01_SendCommand>
}
 8001f56:	bf00      	nop
 8001f58:	3708      	adds	r7, #8
 8001f5a:	46bd      	mov	sp, r7
 8001f5c:	bd80      	pop	{r7, pc}

08001f5e <Powerstep01_CmdGoMark>:
 * @brief Issues PowerStep01 Go Mark command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoMark(uint8_t deviceId)
{
 8001f5e:	b580      	push	{r7, lr}
 8001f60:	b082      	sub	sp, #8
 8001f62:	af00      	add	r7, sp, #0
 8001f64:	4603      	mov	r3, r0
 8001f66:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_GO_MARK, 0);     
 8001f68:	79fb      	ldrb	r3, [r7, #7]
 8001f6a:	2200      	movs	r2, #0
 8001f6c:	2178      	movs	r1, #120	@ 0x78
 8001f6e:	4618      	mov	r0, r3
 8001f70:	f000 ff58 	bl	8002e24 <Powerstep01_SendCommand>
}
 8001f74:	bf00      	nop
 8001f76:	3708      	adds	r7, #8
 8001f78:	46bd      	mov	sp, r7
 8001f7a:	bd80      	pop	{r7, pc}

08001f7c <Powerstep01_CmdGoTo>:
 * @param[in] abs_pos absolute position in steps in agreement
 * with the step mode where requested to move
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoTo(uint8_t deviceId, int32_t abs_pos)
{
 8001f7c:	b580      	push	{r7, lr}
 8001f7e:	b082      	sub	sp, #8
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	4603      	mov	r3, r0
 8001f84:	6039      	str	r1, [r7, #0]
 8001f86:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_GO_TO, abs_pos);  
 8001f88:	683a      	ldr	r2, [r7, #0]
 8001f8a:	79fb      	ldrb	r3, [r7, #7]
 8001f8c:	2160      	movs	r1, #96	@ 0x60
 8001f8e:	4618      	mov	r0, r3
 8001f90:	f000 ff48 	bl	8002e24 <Powerstep01_SendCommand>
}
 8001f94:	bf00      	nop
 8001f96:	3708      	adds	r7, #8
 8001f98:	46bd      	mov	sp, r7
 8001f9a:	bd80      	pop	{r7, pc}

08001f9c <Powerstep01_CmdGoToDir>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoToDir(uint8_t deviceId, 
                            motorDir_t direction,
                            int32_t abs_pos)
{
 8001f9c:	b580      	push	{r7, lr}
 8001f9e:	b082      	sub	sp, #8
 8001fa0:	af00      	add	r7, sp, #0
 8001fa2:	4603      	mov	r3, r0
 8001fa4:	603a      	str	r2, [r7, #0]
 8001fa6:	71fb      	strb	r3, [r7, #7]
 8001fa8:	460b      	mov	r3, r1
 8001faa:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 8001fac:	79bb      	ldrb	r3, [r7, #6]
 8001fae:	f043 0368 	orr.w	r3, r3, #104	@ 0x68
 8001fb2:	b2d9      	uxtb	r1, r3
 8001fb4:	683a      	ldr	r2, [r7, #0]
 8001fb6:	79fb      	ldrb	r3, [r7, #7]
 8001fb8:	4618      	mov	r0, r3
 8001fba:	f000 ff33 	bl	8002e24 <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_GO_TO_DIR | 
                          (uint8_t)direction, abs_pos);  
}
 8001fbe:	bf00      	nop
 8001fc0:	3708      	adds	r7, #8
 8001fc2:	46bd      	mov	sp, r7
 8001fc4:	bd80      	pop	{r7, pc}

08001fc6 <Powerstep01_CmdGoUntil>:
 *********************************************************/
void Powerstep01_CmdGoUntil(uint8_t deviceId, 
                           motorAction_t action, 
                           motorDir_t direction, 
                           uint32_t speed)
{
 8001fc6:	b580      	push	{r7, lr}
 8001fc8:	b082      	sub	sp, #8
 8001fca:	af00      	add	r7, sp, #0
 8001fcc:	603b      	str	r3, [r7, #0]
 8001fce:	4603      	mov	r3, r0
 8001fd0:	71fb      	strb	r3, [r7, #7]
 8001fd2:	460b      	mov	r3, r1
 8001fd4:	71bb      	strb	r3, [r7, #6]
 8001fd6:	4613      	mov	r3, r2
 8001fd8:	717b      	strb	r3, [r7, #5]
  Powerstep01_SendCommand(deviceId,
 8001fda:	79ba      	ldrb	r2, [r7, #6]
 8001fdc:	797b      	ldrb	r3, [r7, #5]
 8001fde:	4313      	orrs	r3, r2
 8001fe0:	b2db      	uxtb	r3, r3
 8001fe2:	f063 037d 	orn	r3, r3, #125	@ 0x7d
 8001fe6:	b2d9      	uxtb	r1, r3
 8001fe8:	79fb      	ldrb	r3, [r7, #7]
 8001fea:	683a      	ldr	r2, [r7, #0]
 8001fec:	4618      	mov	r0, r3
 8001fee:	f000 ff19 	bl	8002e24 <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_GO_UNTIL | (uint8_t)action | (uint8_t)direction,
                          speed); 
}
 8001ff2:	bf00      	nop
 8001ff4:	3708      	adds	r7, #8
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	bd80      	pop	{r7, pc}

08001ffa <Powerstep01_CmdHardHiZ>:
 * When the motor is stopped, a HardHiZ command forces the bridges 
 * to enter high impedance state.
 * This command can be given anytime and is immediately executed.
 *********************************************************/
void Powerstep01_CmdHardHiZ(uint8_t deviceId)
{
 8001ffa:	b580      	push	{r7, lr}
 8001ffc:	b082      	sub	sp, #8
 8001ffe:	af00      	add	r7, sp, #0
 8002000:	4603      	mov	r3, r0
 8002002:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_HARD_HIZ, 0);    
 8002004:	79fb      	ldrb	r3, [r7, #7]
 8002006:	2200      	movs	r2, #0
 8002008:	21a8      	movs	r1, #168	@ 0xa8
 800200a:	4618      	mov	r0, r3
 800200c:	f000 ff0a 	bl	8002e24 <Powerstep01_SendCommand>
}
 8002010:	bf00      	nop
 8002012:	3708      	adds	r7, #8
 8002014:	46bd      	mov	sp, r7
 8002016:	bd80      	pop	{r7, pc}

08002018 <Powerstep01_CmdHardStop>:
 * forces the bridges to exit high impedance state; no motion is performed.
 * This command can be given anytime and is immediately executed.
 * This command keeps the BUSY flag low until the motor is stopped.
 *********************************************************/
void Powerstep01_CmdHardStop(uint8_t deviceId)
{
 8002018:	b580      	push	{r7, lr}
 800201a:	b082      	sub	sp, #8
 800201c:	af00      	add	r7, sp, #0
 800201e:	4603      	mov	r3, r0
 8002020:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_HARD_STOP, 0);         
 8002022:	79fb      	ldrb	r3, [r7, #7]
 8002024:	2200      	movs	r2, #0
 8002026:	21b8      	movs	r1, #184	@ 0xb8
 8002028:	4618      	mov	r0, r3
 800202a:	f000 fefb 	bl	8002e24 <Powerstep01_SendCommand>
}
 800202e:	bf00      	nop
 8002030:	3708      	adds	r7, #8
 8002032:	46bd      	mov	sp, r7
 8002034:	bd80      	pop	{r7, pc}

08002036 <Powerstep01_CmdMove>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdMove(uint8_t deviceId, 
                         motorDir_t direction, 
                         uint32_t n_step)
{
 8002036:	b580      	push	{r7, lr}
 8002038:	b082      	sub	sp, #8
 800203a:	af00      	add	r7, sp, #0
 800203c:	4603      	mov	r3, r0
 800203e:	603a      	str	r2, [r7, #0]
 8002040:	71fb      	strb	r3, [r7, #7]
 8002042:	460b      	mov	r3, r1
 8002044:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 8002046:	79bb      	ldrb	r3, [r7, #6]
 8002048:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800204c:	b2d9      	uxtb	r1, r3
 800204e:	79fb      	ldrb	r3, [r7, #7]
 8002050:	683a      	ldr	r2, [r7, #0]
 8002052:	4618      	mov	r0, r3
 8002054:	f000 fee6 	bl	8002e24 <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_MOVE | 
                          (uint8_t)direction, n_step);  
}
 8002058:	bf00      	nop
 800205a:	3708      	adds	r7, #8
 800205c:	46bd      	mov	sp, r7
 800205e:	bd80      	pop	{r7, pc}

08002060 <Powerstep01_CmdNop>:
 * @brief Issues PowerStep01 NOP command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdNop(uint8_t deviceId)
{
 8002060:	b580      	push	{r7, lr}
 8002062:	b082      	sub	sp, #8
 8002064:	af00      	add	r7, sp, #0
 8002066:	4603      	mov	r3, r0
 8002068:	71fb      	strb	r3, [r7, #7]
  /* Send NOP operation code to PowerStep01 */
  Powerstep01_SendCommand(deviceId, POWERSTEP01_NOP, 0);
 800206a:	79fb      	ldrb	r3, [r7, #7]
 800206c:	2200      	movs	r2, #0
 800206e:	2100      	movs	r1, #0
 8002070:	4618      	mov	r0, r3
 8002072:	f000 fed7 	bl	8002e24 <Powerstep01_SendCommand>
}
 8002076:	bf00      	nop
 8002078:	3708      	adds	r7, #8
 800207a:	46bd      	mov	sp, r7
 800207c:	bd80      	pop	{r7, pc}

0800207e <Powerstep01_CmdReleaseSw>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdReleaseSw(uint8_t deviceId, 
                             motorAction_t action, 
                             motorDir_t direction)
{
 800207e:	b580      	push	{r7, lr}
 8002080:	b082      	sub	sp, #8
 8002082:	af00      	add	r7, sp, #0
 8002084:	4603      	mov	r3, r0
 8002086:	71fb      	strb	r3, [r7, #7]
 8002088:	460b      	mov	r3, r1
 800208a:	71bb      	strb	r3, [r7, #6]
 800208c:	4613      	mov	r3, r2
 800208e:	717b      	strb	r3, [r7, #5]
   Powerstep01_SendCommand(deviceId, 
 8002090:	79ba      	ldrb	r2, [r7, #6]
 8002092:	797b      	ldrb	r3, [r7, #5]
 8002094:	4313      	orrs	r3, r2
 8002096:	b2db      	uxtb	r3, r3
 8002098:	f063 036d 	orn	r3, r3, #109	@ 0x6d
 800209c:	b2d9      	uxtb	r1, r3
 800209e:	79fb      	ldrb	r3, [r7, #7]
 80020a0:	2200      	movs	r2, #0
 80020a2:	4618      	mov	r0, r3
 80020a4:	f000 febe 	bl	8002e24 <Powerstep01_SendCommand>
                           (uint8_t)POWERSTEP01_RELEASE_SW | 
                           (uint8_t)action | 
                           (uint8_t)direction, 
                           0); 
}
 80020a8:	bf00      	nop
 80020aa:	3708      	adds	r7, #8
 80020ac:	46bd      	mov	sp, r7
 80020ae:	bd80      	pop	{r7, pc}

080020b0 <Powerstep01_CmdResetDevice>:
 * @brief Issues PowerStep01 Reset Device command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdResetDevice(uint8_t deviceId)
{
 80020b0:	b580      	push	{r7, lr}
 80020b2:	b082      	sub	sp, #8
 80020b4:	af00      	add	r7, sp, #0
 80020b6:	4603      	mov	r3, r0
 80020b8:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_RESET_DEVICE, 0);         
 80020ba:	79fb      	ldrb	r3, [r7, #7]
 80020bc:	2200      	movs	r2, #0
 80020be:	21c0      	movs	r1, #192	@ 0xc0
 80020c0:	4618      	mov	r0, r3
 80020c2:	f000 feaf 	bl	8002e24 <Powerstep01_SendCommand>
}
 80020c6:	bf00      	nop
 80020c8:	3708      	adds	r7, #8
 80020ca:	46bd      	mov	sp, r7
 80020cc:	bd80      	pop	{r7, pc}

080020ce <Powerstep01_CmdResetPos>:
 * @brief Issues PowerStep01 Reset Pos command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdResetPos(uint8_t deviceId)
{
 80020ce:	b580      	push	{r7, lr}
 80020d0:	b082      	sub	sp, #8
 80020d2:	af00      	add	r7, sp, #0
 80020d4:	4603      	mov	r3, r0
 80020d6:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_RESET_POS, 0);       
 80020d8:	79fb      	ldrb	r3, [r7, #7]
 80020da:	2200      	movs	r2, #0
 80020dc:	21d8      	movs	r1, #216	@ 0xd8
 80020de:	4618      	mov	r0, r3
 80020e0:	f000 fea0 	bl	8002e24 <Powerstep01_SendCommand>
}
 80020e4:	bf00      	nop
 80020e6:	3708      	adds	r7, #8
 80020e8:	46bd      	mov	sp, r7
 80020ea:	bd80      	pop	{r7, pc}

080020ec <Powerstep01_CmdRun>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdRun(uint8_t deviceId, 
                       motorDir_t direction,
                       uint32_t speed)
{
 80020ec:	b580      	push	{r7, lr}
 80020ee:	b082      	sub	sp, #8
 80020f0:	af00      	add	r7, sp, #0
 80020f2:	4603      	mov	r3, r0
 80020f4:	603a      	str	r2, [r7, #0]
 80020f6:	71fb      	strb	r3, [r7, #7]
 80020f8:	460b      	mov	r3, r1
 80020fa:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 80020fc:	79bb      	ldrb	r3, [r7, #6]
 80020fe:	f043 0350 	orr.w	r3, r3, #80	@ 0x50
 8002102:	b2d9      	uxtb	r1, r3
 8002104:	79fb      	ldrb	r3, [r7, #7]
 8002106:	683a      	ldr	r2, [r7, #0]
 8002108:	4618      	mov	r0, r3
 800210a:	f000 fe8b 	bl	8002e24 <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_RUN|(uint8_t)direction,
                          speed);
}
 800210e:	bf00      	nop
 8002110:	3708      	adds	r7, #8
 8002112:	46bd      	mov	sp, r7
 8002114:	bd80      	pop	{r7, pc}
	...

08002118 <Powerstep01_CmdSetParam>:
 * @param[in] param Register adress (POWERSTEP01_ABS_POS, POWERSTEP01_MARK,...)
 * @param[in] value Value to set in the register
 * @retval None
 *********************************************************/
void Powerstep01_CmdSetParam(uint8_t deviceId, uint32_t param, uint32_t value)
{
 8002118:	b580      	push	{r7, lr}
 800211a:	b086      	sub	sp, #24
 800211c:	af00      	add	r7, sp, #0
 800211e:	4603      	mov	r3, r0
 8002120:	60b9      	str	r1, [r7, #8]
 8002122:	607a      	str	r2, [r7, #4]
 8002124:	73fb      	strb	r3, [r7, #15]

  if (numberOfDevices > deviceId)
 8002126:	4b5e      	ldr	r3, [pc, #376]	@ (80022a0 <Powerstep01_CmdSetParam+0x188>)
 8002128:	781b      	ldrb	r3, [r3, #0]
 800212a:	b2db      	uxtb	r3, r3
 800212c:	7bfa      	ldrb	r2, [r7, #15]
 800212e:	429a      	cmp	r2, r3
 8002130:	f080 80b2 	bcs.w	8002298 <Powerstep01_CmdSetParam+0x180>
  {
    uint32_t loop;
    uint8_t maxArgumentNbBytes = 0;
 8002134:	2300      	movs	r3, #0
 8002136:	74fb      	strb	r3, [r7, #19]
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8002138:	4b59      	ldr	r3, [pc, #356]	@ (80022a0 <Powerstep01_CmdSetParam+0x188>)
 800213a:	781b      	ldrb	r3, [r3, #0]
 800213c:	b2da      	uxtb	r2, r3
 800213e:	7bfb      	ldrb	r3, [r7, #15]
 8002140:	1ad3      	subs	r3, r2, r3
 8002142:	b2db      	uxtb	r3, r3
 8002144:	3b01      	subs	r3, #1
 8002146:	747b      	strb	r3, [r7, #17]
    bool itDisable = FALSE;
 8002148:	2300      	movs	r3, #0
 800214a:	74bb      	strb	r3, [r7, #18]
    
    do
    {
      spiPreemtionByIsr = FALSE;
 800214c:	4b55      	ldr	r3, [pc, #340]	@ (80022a4 <Powerstep01_CmdSetParam+0x18c>)
 800214e:	2200      	movs	r2, #0
 8002150:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 8002152:	7cbb      	ldrb	r3, [r7, #18]
 8002154:	2b00      	cmp	r3, #0
 8002156:	d003      	beq.n	8002160 <Powerstep01_CmdSetParam+0x48>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 8002158:	f001 fd0e 	bl	8003b78 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 800215c:	2300      	movs	r3, #0
 800215e:	74bb      	strb	r3, [r7, #18]
      }  
      for (loop = 0;loop < numberOfDevices; loop++)
 8002160:	2300      	movs	r3, #0
 8002162:	617b      	str	r3, [r7, #20]
 8002164:	e019      	b.n	800219a <Powerstep01_CmdSetParam+0x82>
      {
        spiTxBursts[0][loop] = POWERSTEP01_NOP;
 8002166:	4a50      	ldr	r2, [pc, #320]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 8002168:	697b      	ldr	r3, [r7, #20]
 800216a:	4413      	add	r3, r2
 800216c:	2200      	movs	r2, #0
 800216e:	701a      	strb	r2, [r3, #0]
        spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8002170:	4a4d      	ldr	r2, [pc, #308]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 8002172:	697b      	ldr	r3, [r7, #20]
 8002174:	4413      	add	r3, r2
 8002176:	3301      	adds	r3, #1
 8002178:	2200      	movs	r2, #0
 800217a:	701a      	strb	r2, [r3, #0]
        spiTxBursts[2][loop] = POWERSTEP01_NOP;
 800217c:	4a4a      	ldr	r2, [pc, #296]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 800217e:	697b      	ldr	r3, [r7, #20]
 8002180:	4413      	add	r3, r2
 8002182:	3302      	adds	r3, #2
 8002184:	2200      	movs	r2, #0
 8002186:	701a      	strb	r2, [r3, #0]
        spiTxBursts[3][loop] = POWERSTEP01_NOP;
 8002188:	4a47      	ldr	r2, [pc, #284]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 800218a:	697b      	ldr	r3, [r7, #20]
 800218c:	4413      	add	r3, r2
 800218e:	3303      	adds	r3, #3
 8002190:	2200      	movs	r2, #0
 8002192:	701a      	strb	r2, [r3, #0]
      for (loop = 0;loop < numberOfDevices; loop++)
 8002194:	697b      	ldr	r3, [r7, #20]
 8002196:	3301      	adds	r3, #1
 8002198:	617b      	str	r3, [r7, #20]
 800219a:	4b41      	ldr	r3, [pc, #260]	@ (80022a0 <Powerstep01_CmdSetParam+0x188>)
 800219c:	781b      	ldrb	r3, [r3, #0]
 800219e:	b2db      	uxtb	r3, r3
 80021a0:	461a      	mov	r2, r3
 80021a2:	697b      	ldr	r3, [r7, #20]
 80021a4:	4293      	cmp	r3, r2
 80021a6:	d3de      	bcc.n	8002166 <Powerstep01_CmdSetParam+0x4e>
      }
      switch (param)
 80021a8:	68bb      	ldr	r3, [r7, #8]
 80021aa:	2b1a      	cmp	r3, #26
 80021ac:	bf8c      	ite	hi
 80021ae:	2301      	movhi	r3, #1
 80021b0:	2300      	movls	r3, #0
 80021b2:	b2db      	uxtb	r3, r3
 80021b4:	2b00      	cmp	r3, #0
 80021b6:	d13e      	bne.n	8002236 <Powerstep01_CmdSetParam+0x11e>
 80021b8:	2201      	movs	r2, #1
 80021ba:	68bb      	ldr	r3, [r7, #8]
 80021bc:	409a      	lsls	r2, r3
 80021be:	4b3b      	ldr	r3, [pc, #236]	@ (80022ac <Powerstep01_CmdSetParam+0x194>)
 80021c0:	4013      	ands	r3, r2
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	bf14      	ite	ne
 80021c6:	2301      	movne	r3, #1
 80021c8:	2300      	moveq	r3, #0
 80021ca:	b2db      	uxtb	r3, r3
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d120      	bne.n	8002212 <Powerstep01_CmdSetParam+0xfa>
 80021d0:	f002 030a 	and.w	r3, r2, #10
 80021d4:	2b00      	cmp	r3, #0
 80021d6:	bf14      	ite	ne
 80021d8:	2301      	movne	r3, #1
 80021da:	2300      	moveq	r3, #0
 80021dc:	b2db      	uxtb	r3, r3
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d029      	beq.n	8002236 <Powerstep01_CmdSetParam+0x11e>
      {
        case POWERSTEP01_ABS_POS: ;
        case POWERSTEP01_MARK:
          spiTxBursts[0][spiIndex] = ((uint8_t)POWERSTEP01_SET_PARAM )| (param);
 80021e2:	7c7b      	ldrb	r3, [r7, #17]
 80021e4:	68ba      	ldr	r2, [r7, #8]
 80021e6:	b2d1      	uxtb	r1, r2
 80021e8:	4a2f      	ldr	r2, [pc, #188]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 80021ea:	54d1      	strb	r1, [r2, r3]
          spiTxBursts[1][spiIndex] = (uint8_t)(value >> 16);
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	0c1a      	lsrs	r2, r3, #16
 80021f0:	7c7b      	ldrb	r3, [r7, #17]
 80021f2:	b2d1      	uxtb	r1, r2
 80021f4:	4a2c      	ldr	r2, [pc, #176]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 80021f6:	4413      	add	r3, r2
 80021f8:	460a      	mov	r2, r1
 80021fa:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	0a1a      	lsrs	r2, r3, #8
 8002200:	7c7b      	ldrb	r3, [r7, #17]
 8002202:	b2d1      	uxtb	r1, r2
 8002204:	4a28      	ldr	r2, [pc, #160]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 8002206:	4413      	add	r3, r2
 8002208:	460a      	mov	r2, r1
 800220a:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 3;
 800220c:	2303      	movs	r3, #3
 800220e:	74fb      	strb	r3, [r7, #19]
          break;
 8002210:	e01a      	b.n	8002248 <Powerstep01_CmdSetParam+0x130>
        case POWERSTEP01_MIN_SPEED:
        case POWERSTEP01_FS_SPD:
        case POWERSTEP01_INT_SPD:
        case POWERSTEP01_CONFIG:
        case POWERSTEP01_GATECFG1:
          spiTxBursts[1][spiIndex] = ((uint8_t)POWERSTEP01_SET_PARAM )| (param);
 8002212:	7c7b      	ldrb	r3, [r7, #17]
 8002214:	68ba      	ldr	r2, [r7, #8]
 8002216:	b2d1      	uxtb	r1, r2
 8002218:	4a23      	ldr	r2, [pc, #140]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 800221a:	4413      	add	r3, r2
 800221c:	460a      	mov	r2, r1
 800221e:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 8002220:	687b      	ldr	r3, [r7, #4]
 8002222:	0a1a      	lsrs	r2, r3, #8
 8002224:	7c7b      	ldrb	r3, [r7, #17]
 8002226:	b2d1      	uxtb	r1, r2
 8002228:	4a1f      	ldr	r2, [pc, #124]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 800222a:	4413      	add	r3, r2
 800222c:	460a      	mov	r2, r1
 800222e:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 2;
 8002230:	2302      	movs	r3, #2
 8002232:	74fb      	strb	r3, [r7, #19]
          break;
 8002234:	e008      	b.n	8002248 <Powerstep01_CmdSetParam+0x130>
        default:
          spiTxBursts[2][spiIndex] = ((uint8_t)POWERSTEP01_SET_PARAM )| (param);
 8002236:	7c7b      	ldrb	r3, [r7, #17]
 8002238:	68ba      	ldr	r2, [r7, #8]
 800223a:	b2d1      	uxtb	r1, r2
 800223c:	4a1a      	ldr	r2, [pc, #104]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 800223e:	4413      	add	r3, r2
 8002240:	460a      	mov	r2, r1
 8002242:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 1;
 8002244:	2301      	movs	r3, #1
 8002246:	74fb      	strb	r3, [r7, #19]
      }
      spiTxBursts[3][spiIndex] = (uint8_t)(value);
 8002248:	7c7b      	ldrb	r3, [r7, #17]
 800224a:	687a      	ldr	r2, [r7, #4]
 800224c:	b2d1      	uxtb	r1, r2
 800224e:	4a16      	ldr	r2, [pc, #88]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 8002250:	4413      	add	r3, r2
 8002252:	460a      	mov	r2, r1
 8002254:	70da      	strb	r2, [r3, #3]
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 8002256:	f001 fc86 	bl	8003b66 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 800225a:	2301      	movs	r3, #1
 800225c:	74bb      	strb	r3, [r7, #18]
    } while (spiPreemtionByIsr); // check pre-emption by ISR  
 800225e:	4b11      	ldr	r3, [pc, #68]	@ (80022a4 <Powerstep01_CmdSetParam+0x18c>)
 8002260:	781b      	ldrb	r3, [r3, #0]
 8002262:	b2db      	uxtb	r3, r3
 8002264:	2b00      	cmp	r3, #0
 8002266:	f47f af71 	bne.w	800214c <Powerstep01_CmdSetParam+0x34>
    /* SPI transfer */
    for (loop = POWERSTEP01_CMD_ARG_MAX_NB_BYTES - 1 - maxArgumentNbBytes;
 800226a:	7cfb      	ldrb	r3, [r7, #19]
 800226c:	f1c3 0303 	rsb	r3, r3, #3
 8002270:	617b      	str	r3, [r7, #20]
 8002272:	e00c      	b.n	800228e <Powerstep01_CmdSetParam+0x176>
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
         loop++)
    {
      Powerstep01_WriteBytes(&spiTxBursts[loop][0],&spiRxBursts[loop][0]);
 8002274:	697b      	ldr	r3, [r7, #20]
 8002276:	4a0c      	ldr	r2, [pc, #48]	@ (80022a8 <Powerstep01_CmdSetParam+0x190>)
 8002278:	441a      	add	r2, r3
 800227a:	697b      	ldr	r3, [r7, #20]
 800227c:	490c      	ldr	r1, [pc, #48]	@ (80022b0 <Powerstep01_CmdSetParam+0x198>)
 800227e:	440b      	add	r3, r1
 8002280:	4619      	mov	r1, r3
 8002282:	4610      	mov	r0, r2
 8002284:	f001 f9e0 	bl	8003648 <Powerstep01_WriteBytes>
         loop++)
 8002288:	697b      	ldr	r3, [r7, #20]
 800228a:	3301      	adds	r3, #1
 800228c:	617b      	str	r3, [r7, #20]
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
 800228e:	697b      	ldr	r3, [r7, #20]
 8002290:	2b03      	cmp	r3, #3
 8002292:	d9ef      	bls.n	8002274 <Powerstep01_CmdSetParam+0x15c>
    }
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();
 8002294:	f001 fc70 	bl	8003b78 <Powerstep01_Board_EnableIrq>
  }
}
 8002298:	bf00      	nop
 800229a:	3718      	adds	r7, #24
 800229c:	46bd      	mov	sp, r7
 800229e:	bd80      	pop	{r7, pc}
 80022a0:	2000087c 	.word	0x2000087c
 80022a4:	20000888 	.word	0x20000888
 80022a8:	20000880 	.word	0x20000880
 80022ac:	052021e4 	.word	0x052021e4
 80022b0:	20000884 	.word	0x20000884

080022b4 <Powerstep01_CmdSoftHiZ>:
 * to enter high impedance state.
 * This command can be given anytime and is immediately executed.
 * This command keeps the BUSY flag low until the motor is stopped.
 *********************************************************/
void Powerstep01_CmdSoftHiZ(uint8_t deviceId)
{
 80022b4:	b580      	push	{r7, lr}
 80022b6:	b082      	sub	sp, #8
 80022b8:	af00      	add	r7, sp, #0
 80022ba:	4603      	mov	r3, r0
 80022bc:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_SOFT_HIZ, 0);           
 80022be:	79fb      	ldrb	r3, [r7, #7]
 80022c0:	2200      	movs	r2, #0
 80022c2:	21a0      	movs	r1, #160	@ 0xa0
 80022c4:	4618      	mov	r0, r3
 80022c6:	f000 fdad 	bl	8002e24 <Powerstep01_SendCommand>
}
 80022ca:	bf00      	nop
 80022cc:	3708      	adds	r7, #8
 80022ce:	46bd      	mov	sp, r7
 80022d0:	bd80      	pop	{r7, pc}

080022d2 <Powerstep01_CmdSoftStop>:
 * No motion is performed.
 * This command can be given anytime and is immediately executed.
 * This command keeps the BUSY flag low until the motor is stopped.
 *********************************************************/
void Powerstep01_CmdSoftStop(uint8_t deviceId)
{
 80022d2:	b580      	push	{r7, lr}
 80022d4:	b082      	sub	sp, #8
 80022d6:	af00      	add	r7, sp, #0
 80022d8:	4603      	mov	r3, r0
 80022da:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_SOFT_STOP, 0);         
 80022dc:	79fb      	ldrb	r3, [r7, #7]
 80022de:	2200      	movs	r2, #0
 80022e0:	21b0      	movs	r1, #176	@ 0xb0
 80022e2:	4618      	mov	r0, r3
 80022e4:	f000 fd9e 	bl	8002e24 <Powerstep01_SendCommand>
}
 80022e8:	bf00      	nop
 80022ea:	3708      	adds	r7, #8
 80022ec:	46bd      	mov	sp, r7
 80022ee:	bd80      	pop	{r7, pc}

080022f0 <Powerstep01_CmdStepClock>:
 * @param[in] direction Movement direction (FORWARD, BACKWARD)
 * @retval None
 *********************************************************/
void Powerstep01_CmdStepClock(uint8_t deviceId,
                             motorDir_t direction)
{
 80022f0:	b580      	push	{r7, lr}
 80022f2:	b082      	sub	sp, #8
 80022f4:	af00      	add	r7, sp, #0
 80022f6:	4603      	mov	r3, r0
 80022f8:	460a      	mov	r2, r1
 80022fa:	71fb      	strb	r3, [r7, #7]
 80022fc:	4613      	mov	r3, r2
 80022fe:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 8002300:	79bb      	ldrb	r3, [r7, #6]
 8002302:	f043 0358 	orr.w	r3, r3, #88	@ 0x58
 8002306:	b2d9      	uxtb	r1, r3
 8002308:	79fb      	ldrb	r3, [r7, #7]
 800230a:	2200      	movs	r2, #0
 800230c:	4618      	mov	r0, r3
 800230e:	f000 fd89 	bl	8002e24 <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_STEP_CLOCK | (uint8_t)direction,
                          0);  
}
 8002312:	bf00      	nop
 8002314:	3708      	adds	r7, #8
 8002316:	46bd      	mov	sp, r7
 8002318:	bd80      	pop	{r7, pc}
	...

0800231c <Powerstep01_FetchAndClearAllStatus>:
 * provided there is no other calls to functions which 
 * use the SPI in between.
 * @retval None
 *********************************************************/
void Powerstep01_FetchAndClearAllStatus(void)
{
 800231c:	b580      	push	{r7, lr}
 800231e:	b082      	sub	sp, #8
 8002320:	af00      	add	r7, sp, #0
  uint8_t loop;

  for (loop = 0; loop < numberOfDevices; loop++)
 8002322:	2300      	movs	r3, #0
 8002324:	71fb      	strb	r3, [r7, #7]
 8002326:	e028      	b.n	800237a <Powerstep01_FetchAndClearAllStatus+0x5e>
  {
     spiTxBursts[0][loop] = POWERSTEP01_GET_STATUS;
 8002328:	79fb      	ldrb	r3, [r7, #7]
 800232a:	4a23      	ldr	r2, [pc, #140]	@ (80023b8 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 800232c:	21d0      	movs	r1, #208	@ 0xd0
 800232e:	54d1      	strb	r1, [r2, r3]
     spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8002330:	79fb      	ldrb	r3, [r7, #7]
 8002332:	4a21      	ldr	r2, [pc, #132]	@ (80023b8 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 8002334:	4413      	add	r3, r2
 8002336:	2200      	movs	r2, #0
 8002338:	705a      	strb	r2, [r3, #1]
     spiTxBursts[2][loop] = POWERSTEP01_NOP;
 800233a:	79fb      	ldrb	r3, [r7, #7]
 800233c:	4a1e      	ldr	r2, [pc, #120]	@ (80023b8 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 800233e:	4413      	add	r3, r2
 8002340:	2200      	movs	r2, #0
 8002342:	709a      	strb	r2, [r3, #2]
     spiTxBursts[3][loop] = POWERSTEP01_NOP;
 8002344:	79fb      	ldrb	r3, [r7, #7]
 8002346:	4a1c      	ldr	r2, [pc, #112]	@ (80023b8 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 8002348:	4413      	add	r3, r2
 800234a:	2200      	movs	r2, #0
 800234c:	70da      	strb	r2, [r3, #3]
     spiRxBursts[0][loop] = 0;
 800234e:	79fb      	ldrb	r3, [r7, #7]
 8002350:	4a1a      	ldr	r2, [pc, #104]	@ (80023bc <Powerstep01_FetchAndClearAllStatus+0xa0>)
 8002352:	2100      	movs	r1, #0
 8002354:	54d1      	strb	r1, [r2, r3]
     spiRxBursts[1][loop] = 0;
 8002356:	79fb      	ldrb	r3, [r7, #7]
 8002358:	4a18      	ldr	r2, [pc, #96]	@ (80023bc <Powerstep01_FetchAndClearAllStatus+0xa0>)
 800235a:	4413      	add	r3, r2
 800235c:	2200      	movs	r2, #0
 800235e:	705a      	strb	r2, [r3, #1]
     spiRxBursts[2][loop] = 0;
 8002360:	79fb      	ldrb	r3, [r7, #7]
 8002362:	4a16      	ldr	r2, [pc, #88]	@ (80023bc <Powerstep01_FetchAndClearAllStatus+0xa0>)
 8002364:	4413      	add	r3, r2
 8002366:	2200      	movs	r2, #0
 8002368:	709a      	strb	r2, [r3, #2]
     spiRxBursts[3][loop] = 0;
 800236a:	79fb      	ldrb	r3, [r7, #7]
 800236c:	4a13      	ldr	r2, [pc, #76]	@ (80023bc <Powerstep01_FetchAndClearAllStatus+0xa0>)
 800236e:	4413      	add	r3, r2
 8002370:	2200      	movs	r2, #0
 8002372:	70da      	strb	r2, [r3, #3]
  for (loop = 0; loop < numberOfDevices; loop++)
 8002374:	79fb      	ldrb	r3, [r7, #7]
 8002376:	3301      	adds	r3, #1
 8002378:	71fb      	strb	r3, [r7, #7]
 800237a:	4b11      	ldr	r3, [pc, #68]	@ (80023c0 <Powerstep01_FetchAndClearAllStatus+0xa4>)
 800237c:	781b      	ldrb	r3, [r3, #0]
 800237e:	b2db      	uxtb	r3, r3
 8002380:	79fa      	ldrb	r2, [r7, #7]
 8002382:	429a      	cmp	r2, r3
 8002384:	d3d0      	bcc.n	8002328 <Powerstep01_FetchAndClearAllStatus+0xc>
  }
  for (loop = 0; 
 8002386:	2300      	movs	r3, #0
 8002388:	71fb      	strb	r3, [r7, #7]
 800238a:	e00c      	b.n	80023a6 <Powerstep01_FetchAndClearAllStatus+0x8a>
       loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + 
              POWERSTEP01_RSP_NB_BYTES_GET_STATUS; 
       loop++)
  {
     Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 800238c:	79fb      	ldrb	r3, [r7, #7]
 800238e:	4a0a      	ldr	r2, [pc, #40]	@ (80023b8 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 8002390:	441a      	add	r2, r3
 8002392:	79fb      	ldrb	r3, [r7, #7]
 8002394:	4909      	ldr	r1, [pc, #36]	@ (80023bc <Powerstep01_FetchAndClearAllStatus+0xa0>)
 8002396:	440b      	add	r3, r1
 8002398:	4619      	mov	r1, r3
 800239a:	4610      	mov	r0, r2
 800239c:	f001 f954 	bl	8003648 <Powerstep01_WriteBytes>
       loop++)
 80023a0:	79fb      	ldrb	r3, [r7, #7]
 80023a2:	3301      	adds	r3, #1
 80023a4:	71fb      	strb	r3, [r7, #7]
       loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + 
 80023a6:	79fb      	ldrb	r3, [r7, #7]
 80023a8:	2b02      	cmp	r3, #2
 80023aa:	d9ef      	bls.n	800238c <Powerstep01_FetchAndClearAllStatus+0x70>
  }
}
 80023ac:	bf00      	nop
 80023ae:	bf00      	nop
 80023b0:	3708      	adds	r7, #8
 80023b2:	46bd      	mov	sp, r7
 80023b4:	bd80      	pop	{r7, pc}
 80023b6:	bf00      	nop
 80023b8:	20000880 	.word	0x20000880
 80023bc:	20000884 	.word	0x20000884
 80023c0:	2000087c 	.word	0x2000087c

080023c4 <Powerstep01_GetFetchedStatus>:
 * no other calls to functions which use the SPI.
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval Last fetched value of the STATUS register
 *********************************************************/
uint16_t Powerstep01_GetFetchedStatus(uint8_t deviceId)
{
 80023c4:	b480      	push	{r7}
 80023c6:	b085      	sub	sp, #20
 80023c8:	af00      	add	r7, sp, #0
 80023ca:	4603      	mov	r3, r0
 80023cc:	71fb      	strb	r3, [r7, #7]
  uint16_t status = 0;
 80023ce:	2300      	movs	r3, #0
 80023d0:	81fb      	strh	r3, [r7, #14]
  if (numberOfDevices > deviceId)
 80023d2:	4b11      	ldr	r3, [pc, #68]	@ (8002418 <Powerstep01_GetFetchedStatus+0x54>)
 80023d4:	781b      	ldrb	r3, [r3, #0]
 80023d6:	b2db      	uxtb	r3, r3
 80023d8:	79fa      	ldrb	r2, [r7, #7]
 80023da:	429a      	cmp	r2, r3
 80023dc:	d215      	bcs.n	800240a <Powerstep01_GetFetchedStatus+0x46>
  {
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 80023de:	4b0e      	ldr	r3, [pc, #56]	@ (8002418 <Powerstep01_GetFetchedStatus+0x54>)
 80023e0:	781b      	ldrb	r3, [r3, #0]
 80023e2:	b2da      	uxtb	r2, r3
 80023e4:	79fb      	ldrb	r3, [r7, #7]
 80023e6:	1ad3      	subs	r3, r2, r3
 80023e8:	b2db      	uxtb	r3, r3
 80023ea:	3b01      	subs	r3, #1
 80023ec:	737b      	strb	r3, [r7, #13]
    status = (spiRxBursts[1][spiIndex] << 8) | (spiRxBursts[2][spiIndex]);
 80023ee:	7b7b      	ldrb	r3, [r7, #13]
 80023f0:	4a0a      	ldr	r2, [pc, #40]	@ (800241c <Powerstep01_GetFetchedStatus+0x58>)
 80023f2:	4413      	add	r3, r2
 80023f4:	785b      	ldrb	r3, [r3, #1]
 80023f6:	021b      	lsls	r3, r3, #8
 80023f8:	b21a      	sxth	r2, r3
 80023fa:	7b7b      	ldrb	r3, [r7, #13]
 80023fc:	4907      	ldr	r1, [pc, #28]	@ (800241c <Powerstep01_GetFetchedStatus+0x58>)
 80023fe:	440b      	add	r3, r1
 8002400:	789b      	ldrb	r3, [r3, #2]
 8002402:	b21b      	sxth	r3, r3
 8002404:	4313      	orrs	r3, r2
 8002406:	b21b      	sxth	r3, r3
 8002408:	81fb      	strh	r3, [r7, #14]
  }
  return (status);
 800240a:	89fb      	ldrh	r3, [r7, #14]
}
 800240c:	4618      	mov	r0, r3
 800240e:	3714      	adds	r7, #20
 8002410:	46bd      	mov	sp, r7
 8002412:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002416:	4770      	bx	lr
 8002418:	2000087c 	.word	0x2000087c
 800241c:	20000884 	.word	0x20000884

08002420 <Powerstep01_GetMotorHandle>:
/******************************************************//**
 * @brief Return motor handle (pointer to the powerSTEP01 motor driver structure)
 * @retval Pointer to the motorDrv_t structure
 **********************************************************/
motorDrv_t* Powerstep01_GetMotorHandle(void)
{
 8002420:	b480      	push	{r7}
 8002422:	af00      	add	r7, sp, #0
  return (&powerstep01Drv);
 8002424:	4b02      	ldr	r3, [pc, #8]	@ (8002430 <Powerstep01_GetMotorHandle+0x10>)
}
 8002426:	4618      	mov	r0, r3
 8002428:	46bd      	mov	sp, r7
 800242a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800242e:	4770      	bx	lr
 8002430:	20000008 	.word	0x20000008

08002434 <Powerstep01_GetFwVersion>:
/******************************************************//**
 * @brief Returns the FW version of the library
 * @retval POWERSTEP01_FW_VERSION
 **********************************************************/
uint32_t Powerstep01_GetFwVersion(void)
{
 8002434:	b480      	push	{r7}
 8002436:	af00      	add	r7, sp, #0
  return (POWERSTEP01_FW_VERSION);
 8002438:	4b02      	ldr	r3, [pc, #8]	@ (8002444 <Powerstep01_GetFwVersion+0x10>)
}
 800243a:	4618      	mov	r0, r3
 800243c:	46bd      	mov	sp, r7
 800243e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002442:	4770      	bx	lr
 8002444:	00010500 	.word	0x00010500

08002448 <Powerstep01_GetMark>:
 * @brief  Returns the mark position  of the specified device
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval Mark register value converted in a 32b signed integer 
 **********************************************************/
int32_t Powerstep01_GetMark(uint8_t deviceId)
{
 8002448:	b580      	push	{r7, lr}
 800244a:	b082      	sub	sp, #8
 800244c:	af00      	add	r7, sp, #0
 800244e:	4603      	mov	r3, r0
 8002450:	71fb      	strb	r3, [r7, #7]
  return Powerstep01_ConvertPosition(Powerstep01_CmdGetParam(deviceId, POWERSTEP01_MARK));
 8002452:	79fb      	ldrb	r3, [r7, #7]
 8002454:	2103      	movs	r1, #3
 8002456:	4618      	mov	r0, r3
 8002458:	f7ff fbf6 	bl	8001c48 <Powerstep01_CmdGetParam>
 800245c:	4603      	mov	r3, r0
 800245e:	4618      	mov	r0, r3
 8002460:	f000 fc7e 	bl	8002d60 <Powerstep01_ConvertPosition>
 8002464:	4603      	mov	r3, r0
}
 8002466:	4618      	mov	r0, r3
 8002468:	3708      	adds	r7, #8
 800246a:	46bd      	mov	sp, r7
 800246c:	bd80      	pop	{r7, pc}
	...

08002470 <Powerstep01_GetNbDevices>:
/******************************************************//**
 * @brief Return the number of devices in the daisy chain 
 * @retval number of devices from 1 to MAX_NUMBER_OF_DEVICES
 *********************************************************/
uint8_t Powerstep01_GetNbDevices(void)
{
 8002470:	b480      	push	{r7}
 8002472:	af00      	add	r7, sp, #0
    return (numberOfDevices);
 8002474:	4b03      	ldr	r3, [pc, #12]	@ (8002484 <Powerstep01_GetNbDevices+0x14>)
 8002476:	781b      	ldrb	r3, [r3, #0]
 8002478:	b2db      	uxtb	r3, r3
}
 800247a:	4618      	mov	r0, r3
 800247c:	46bd      	mov	sp, r7
 800247e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002482:	4770      	bx	lr
 8002484:	2000087c 	.word	0x2000087c

08002488 <Powerstep01_GetAnalogValue>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] param PowerStep01 register address
 * @retval Register value - 1 to 3 bytes (depends on register)
 *********************************************************/
float Powerstep01_GetAnalogValue(uint8_t deviceId, uint32_t param)
{
 8002488:	b580      	push	{r7, lr}
 800248a:	b086      	sub	sp, #24
 800248c:	af00      	add	r7, sp, #0
 800248e:	4603      	mov	r3, r0
 8002490:	6039      	str	r1, [r7, #0]
 8002492:	71fb      	strb	r3, [r7, #7]
  bool voltageMode = ((POWERSTEP01_CM_VM_CURRENT&Powerstep01_CmdGetParam(deviceId,POWERSTEP01_STEP_MODE))==0);
 8002494:	79fb      	ldrb	r3, [r7, #7]
 8002496:	2116      	movs	r1, #22
 8002498:	4618      	mov	r0, r3
 800249a:	f7ff fbd5 	bl	8001c48 <Powerstep01_CmdGetParam>
 800249e:	4603      	mov	r3, r0
 80024a0:	f003 0308 	and.w	r3, r3, #8
 80024a4:	2b00      	cmp	r3, #0
 80024a6:	bf0c      	ite	eq
 80024a8:	2301      	moveq	r3, #1
 80024aa:	2300      	movne	r3, #0
 80024ac:	b2db      	uxtb	r3, r3
 80024ae:	74fb      	strb	r3, [r7, #19]
  uint32_t registerValue = Powerstep01_CmdGetParam(deviceId, param);
 80024b0:	79fb      	ldrb	r3, [r7, #7]
 80024b2:	6839      	ldr	r1, [r7, #0]
 80024b4:	4618      	mov	r0, r3
 80024b6:	f7ff fbc7 	bl	8001c48 <Powerstep01_CmdGetParam>
 80024ba:	60f8      	str	r0, [r7, #12]
  float value;
  switch (param)
 80024bc:	683b      	ldr	r3, [r7, #0]
 80024be:	3b01      	subs	r3, #1
 80024c0:	2b14      	cmp	r3, #20
 80024c2:	f200 8090 	bhi.w	80025e6 <Powerstep01_GetAnalogValue+0x15e>
 80024c6:	a201      	add	r2, pc, #4	@ (adr r2, 80024cc <Powerstep01_GetAnalogValue+0x44>)
 80024c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80024cc:	08002521 	.word	0x08002521
 80024d0:	080025e7 	.word	0x080025e7
 80024d4:	08002521 	.word	0x08002521
 80024d8:	08002541 	.word	0x08002541
 80024dc:	08002535 	.word	0x08002535
 80024e0:	08002535 	.word	0x08002535
 80024e4:	0800254d 	.word	0x0800254d
 80024e8:	08002559 	.word	0x08002559
 80024ec:	080025a5 	.word	0x080025a5
 80024f0:	080025a5 	.word	0x080025a5
 80024f4:	080025a5 	.word	0x080025a5
 80024f8:	080025a5 	.word	0x080025a5
 80024fc:	08002581 	.word	0x08002581
 8002500:	080025c3 	.word	0x080025c3
 8002504:	080025c9 	.word	0x080025c9
 8002508:	080025c9 	.word	0x080025c9
 800250c:	0800258d 	.word	0x0800258d
 8002510:	080025e7 	.word	0x080025e7
 8002514:	08002599 	.word	0x08002599
 8002518:	08002599 	.word	0x08002599
 800251c:	0800256d 	.word	0x0800256d
  {
    case POWERSTEP01_ABS_POS:
    case POWERSTEP01_MARK:
      value = (float) Powerstep01_ConvertPosition(registerValue);
 8002520:	68f8      	ldr	r0, [r7, #12]
 8002522:	f000 fc1d 	bl	8002d60 <Powerstep01_ConvertPosition>
 8002526:	ee07 0a90 	vmov	s15, r0
 800252a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800252e:	edc7 7a05 	vstr	s15, [r7, #20]
      break;
 8002532:	e061      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_ACC:
    case POWERSTEP01_DEC:
      value = Powerstep01_AccDec_RegVal_to_Steps_s2(registerValue);
 8002534:	68f8      	ldr	r0, [r7, #12]
 8002536:	f001 f8c9 	bl	80036cc <Powerstep01_AccDec_RegVal_to_Steps_s2>
 800253a:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 800253e:	e05b      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_SPEED:
      value = Powerstep01_Speed_RegVal_to_Steps_s(registerValue);
 8002540:	68f8      	ldr	r0, [r7, #12]
 8002542:	f001 fa45 	bl	80039d0 <Powerstep01_Speed_RegVal_to_Steps_s>
 8002546:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 800254a:	e055      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_MAX_SPEED:
      value = Powerstep01_MaxSpd_RegVal_to_Steps_s(registerValue);
 800254c:	68f8      	ldr	r0, [r7, #12]
 800254e:	f001 f9f7 	bl	8003940 <Powerstep01_MaxSpd_RegVal_to_Steps_s>
 8002552:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 8002556:	e04f      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_MIN_SPEED:
      registerValue &= POWERSTEP01_MIN_SPEED_MASK;
 8002558:	68fb      	ldr	r3, [r7, #12]
 800255a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800255e:	60fb      	str	r3, [r7, #12]
      value = Powerstep01_MinSpd_RegVal_to_Steps_s(registerValue);
 8002560:	68f8      	ldr	r0, [r7, #12]
 8002562:	f001 fa1f 	bl	80039a4 <Powerstep01_MinSpd_RegVal_to_Steps_s>
 8002566:	ed87 0a05 	vstr	s0, [r7, #20]
      break;      
 800256a:	e045      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_FS_SPD:
      registerValue &= POWERSTEP01_FS_SPD_MASK;
 800256c:	68fb      	ldr	r3, [r7, #12]
 800256e:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8002572:	60fb      	str	r3, [r7, #12]
      value = Powerstep01_FSSpd_RegVal_to_Steps_s(registerValue);
 8002574:	68f8      	ldr	r0, [r7, #12]
 8002576:	f001 f90b 	bl	8003790 <Powerstep01_FSSpd_RegVal_to_Steps_s>
 800257a:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 800257e:	e03b      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_INT_SPD:
      value = Powerstep01_IntSpd_RegVal_to_Steps_s(registerValue);
 8002580:	68f8      	ldr	r0, [r7, #12]
 8002582:	f001 f93d 	bl	8003800 <Powerstep01_IntSpd_RegVal_to_Steps_s>
 8002586:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 800258a:	e035      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_K_THERM:
      value = Powerstep01_KTherm_RegVal_to_Comp(registerValue);
 800258c:	68f8      	ldr	r0, [r7, #12]
 800258e:	f001 f96f 	bl	8003870 <Powerstep01_KTherm_RegVal_to_Comp>
 8002592:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 8002596:	e02f      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_OCD_TH:
    case POWERSTEP01_STALL_TH:
      value = Powerstep01_StallOcd_RegVal_to_Th(registerValue);
 8002598:	68f8      	ldr	r0, [r7, #12]
 800259a:	f001 fa53 	bl	8003a44 <Powerstep01_StallOcd_RegVal_to_Th>
 800259e:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80025a2:	e029      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_KVAL_HOLD:  //POWERSTEP01_TVAL_HOLD
    case POWERSTEP01_KVAL_RUN:   //POWERSTEP01_TVAL_RUN
    case POWERSTEP01_KVAL_ACC:   //POWERSTEP01_TVAL_ACC
    case POWERSTEP01_KVAL_DEC:   //POWERSTEP01_TVAL_DEC
      if (voltageMode!=FALSE)  value = Powerstep01_Kval_RegVal_to_Perc(registerValue);
 80025a4:	7cfb      	ldrb	r3, [r7, #19]
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	d005      	beq.n	80025b6 <Powerstep01_GetAnalogValue+0x12e>
 80025aa:	68f8      	ldr	r0, [r7, #12]
 80025ac:	f001 f998 	bl	80038e0 <Powerstep01_Kval_RegVal_to_Perc>
 80025b0:	ed87 0a05 	vstr	s0, [r7, #20]
      else value = Powerstep01_Tval_RegVal_to_RefVoltage(registerValue);     
      break;
 80025b4:	e020      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
      else value = Powerstep01_Tval_RegVal_to_RefVoltage(registerValue);     
 80025b6:	68f8      	ldr	r0, [r7, #12]
 80025b8:	f001 fa80 	bl	8003abc <Powerstep01_Tval_RegVal_to_RefVoltage>
 80025bc:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80025c0:	e01a      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_ST_SLP:
      if (voltageMode==FALSE) 
 80025c2:	7cfb      	ldrb	r3, [r7, #19]
 80025c4:	2b00      	cmp	r3, #0
 80025c6:	d016      	beq.n	80025f6 <Powerstep01_GetAnalogValue+0x16e>
      {
        break;
      }      
    case POWERSTEP01_FN_SLP_ACC: //POWERSTEP01_TON_MIN
    case POWERSTEP01_FN_SLP_DEC: //POWERSTEP01_TOFF_MIN
      if (voltageMode!=FALSE) value = Powerstep01_BEMFslope_RegVal_to_Perc(registerValue);
 80025c8:	7cfb      	ldrb	r3, [r7, #19]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	d005      	beq.n	80025da <Powerstep01_GetAnalogValue+0x152>
 80025ce:	68f8      	ldr	r0, [r7, #12]
 80025d0:	f001 f8b0 	bl	8003734 <Powerstep01_BEMFslope_RegVal_to_Perc>
 80025d4:	ed87 0a05 	vstr	s0, [r7, #20]
      else value = Powerstep01_Tmin_RegVal_to_Time(registerValue);
      break;
 80025d8:	e00e      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
      else value = Powerstep01_Tmin_RegVal_to_Time(registerValue);
 80025da:	68f8      	ldr	r0, [r7, #12]
 80025dc:	f001 faa3 	bl	8003b26 <Powerstep01_Tmin_RegVal_to_Time>
 80025e0:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80025e4:	e008      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
    default:
      value = (float) registerValue;
 80025e6:	68fb      	ldr	r3, [r7, #12]
 80025e8:	ee07 3a90 	vmov	s15, r3
 80025ec:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80025f0:	edc7 7a05 	vstr	s15, [r7, #20]
 80025f4:	e000      	b.n	80025f8 <Powerstep01_GetAnalogValue+0x170>
        break;
 80025f6:	bf00      	nop
  }
  return value;
 80025f8:	697b      	ldr	r3, [r7, #20]
 80025fa:	ee07 3a90 	vmov	s15, r3
}
 80025fe:	eeb0 0a67 	vmov.f32	s0, s15
 8002602:	3718      	adds	r7, #24
 8002604:	46bd      	mov	sp, r7
 8002606:	bd80      	pop	{r7, pc}

08002608 <Powerstep01_GetPosition>:
 * @brief  Returns the ABS_POSITION of the specified device
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval ABS_POSITION register value converted in a 32b signed integer
 **********************************************************/
int32_t Powerstep01_GetPosition(uint8_t deviceId)
{
 8002608:	b580      	push	{r7, lr}
 800260a:	b082      	sub	sp, #8
 800260c:	af00      	add	r7, sp, #0
 800260e:	4603      	mov	r3, r0
 8002610:	71fb      	strb	r3, [r7, #7]
  return Powerstep01_ConvertPosition(Powerstep01_CmdGetParam(deviceId, POWERSTEP01_ABS_POS));
 8002612:	79fb      	ldrb	r3, [r7, #7]
 8002614:	2101      	movs	r1, #1
 8002616:	4618      	mov	r0, r3
 8002618:	f7ff fb16 	bl	8001c48 <Powerstep01_CmdGetParam>
 800261c:	4603      	mov	r3, r0
 800261e:	4618      	mov	r0, r3
 8002620:	f000 fb9e 	bl	8002d60 <Powerstep01_ConvertPosition>
 8002624:	4603      	mov	r3, r0
}
 8002626:	4618      	mov	r0, r3
 8002628:	3708      	adds	r7, #8
 800262a:	46bd      	mov	sp, r7
 800262c:	bd80      	pop	{r7, pc}

0800262e <Powerstep01_IsDeviceBusy>:
 * by reading the Busy flag bit ot its status Register
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval true if device is busy, false zero
 *********************************************************/
bool Powerstep01_IsDeviceBusy(uint8_t deviceId)
{
 800262e:	b580      	push	{r7, lr}
 8002630:	b082      	sub	sp, #8
 8002632:	af00      	add	r7, sp, #0
 8002634:	4603      	mov	r3, r0
 8002636:	71fb      	strb	r3, [r7, #7]
  if(!(Powerstep01_CmdGetStatus(deviceId) & POWERSTEP01_STATUS_BUSY)) 
 8002638:	79fb      	ldrb	r3, [r7, #7]
 800263a:	4618      	mov	r0, r3
 800263c:	f7ff fbe6 	bl	8001e0c <Powerstep01_CmdGetStatus>
 8002640:	4603      	mov	r3, r0
 8002642:	f003 0302 	and.w	r3, r3, #2
 8002646:	2b00      	cmp	r3, #0
 8002648:	d101      	bne.n	800264e <Powerstep01_IsDeviceBusy+0x20>
  {
    return TRUE;
 800264a:	2301      	movs	r3, #1
 800264c:	e000      	b.n	8002650 <Powerstep01_IsDeviceBusy+0x22>
  }
  else 
  {
    return FALSE;
 800264e:	2300      	movs	r3, #0
  }
}
 8002650:	4618      	mov	r0, r3
 8002652:	3708      	adds	r7, #8
 8002654:	46bd      	mov	sp, r7
 8002656:	bd80      	pop	{r7, pc}

08002658 <Powerstep01_QueueCommands>:
 * POWERSTEP01_GET_STATUS)
 * @param[in] value argument of the command to queue
 * @retval None
 *********************************************************/
void Powerstep01_QueueCommands(uint8_t deviceId, uint8_t command, int32_t value)
{
 8002658:	b480      	push	{r7}
 800265a:	b085      	sub	sp, #20
 800265c:	af00      	add	r7, sp, #0
 800265e:	4603      	mov	r3, r0
 8002660:	603a      	str	r2, [r7, #0]
 8002662:	71fb      	strb	r3, [r7, #7]
 8002664:	460b      	mov	r3, r1
 8002666:	71bb      	strb	r3, [r7, #6]
  if (numberOfDevices > deviceId)
 8002668:	4b31      	ldr	r3, [pc, #196]	@ (8002730 <Powerstep01_QueueCommands+0xd8>)
 800266a:	781b      	ldrb	r3, [r3, #0]
 800266c:	b2db      	uxtb	r3, r3
 800266e:	79fa      	ldrb	r2, [r7, #7]
 8002670:	429a      	cmp	r2, r3
 8002672:	d257      	bcs.n	8002724 <Powerstep01_QueueCommands+0xcc>
  {
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8002674:	4b2e      	ldr	r3, [pc, #184]	@ (8002730 <Powerstep01_QueueCommands+0xd8>)
 8002676:	781b      	ldrb	r3, [r3, #0]
 8002678:	b2da      	uxtb	r2, r3
 800267a:	79fb      	ldrb	r3, [r7, #7]
 800267c:	1ad3      	subs	r3, r2, r3
 800267e:	b2db      	uxtb	r3, r3
 8002680:	3b01      	subs	r3, #1
 8002682:	73fb      	strb	r3, [r7, #15]
    
    switch (command & DAISY_CHAIN_COMMAND_MASK)
 8002684:	79bb      	ldrb	r3, [r7, #6]
 8002686:	f003 03fa 	and.w	r3, r3, #250	@ 0xfa
 800268a:	2b8a      	cmp	r3, #138	@ 0x8a
 800268c:	d01a      	beq.n	80026c4 <Powerstep01_QueueCommands+0x6c>
 800268e:	2b8a      	cmp	r3, #138	@ 0x8a
 8002690:	dc35      	bgt.n	80026fe <Powerstep01_QueueCommands+0xa6>
 8002692:	2b82      	cmp	r3, #130	@ 0x82
 8002694:	d016      	beq.n	80026c4 <Powerstep01_QueueCommands+0x6c>
 8002696:	2b82      	cmp	r3, #130	@ 0x82
 8002698:	dc31      	bgt.n	80026fe <Powerstep01_QueueCommands+0xa6>
 800269a:	2b40      	cmp	r3, #64	@ 0x40
 800269c:	d012      	beq.n	80026c4 <Powerstep01_QueueCommands+0x6c>
 800269e:	2b40      	cmp	r3, #64	@ 0x40
 80026a0:	db2d      	blt.n	80026fe <Powerstep01_QueueCommands+0xa6>
 80026a2:	2b68      	cmp	r3, #104	@ 0x68
 80026a4:	dc2b      	bgt.n	80026fe <Powerstep01_QueueCommands+0xa6>
 80026a6:	2b50      	cmp	r3, #80	@ 0x50
 80026a8:	db29      	blt.n	80026fe <Powerstep01_QueueCommands+0xa6>
 80026aa:	3b50      	subs	r3, #80	@ 0x50
 80026ac:	4a21      	ldr	r2, [pc, #132]	@ (8002734 <Powerstep01_QueueCommands+0xdc>)
 80026ae:	fa22 f303 	lsr.w	r3, r2, r3
 80026b2:	f003 0301 	and.w	r3, r3, #1
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	bf14      	ite	ne
 80026ba:	2301      	movne	r3, #1
 80026bc:	2300      	moveq	r3, #0
 80026be:	b2db      	uxtb	r3, r3
 80026c0:	2b00      	cmp	r3, #0
 80026c2:	d01c      	beq.n	80026fe <Powerstep01_QueueCommands+0xa6>
      case POWERSTEP01_MOVE: ;
      case POWERSTEP01_GO_TO: ;
      case POWERSTEP01_GO_TO_DIR: ;
      case POWERSTEP01_GO_UNTIL: ;
      case POWERSTEP01_GO_UNTIL_ACT_CPY:
       spiTxBursts[0][spiIndex] = command;
 80026c4:	7bfb      	ldrb	r3, [r7, #15]
 80026c6:	491c      	ldr	r1, [pc, #112]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 80026c8:	79ba      	ldrb	r2, [r7, #6]
 80026ca:	54ca      	strb	r2, [r1, r3]
       spiTxBursts[1][spiIndex] = (uint8_t)(value >> 16);
 80026cc:	683b      	ldr	r3, [r7, #0]
 80026ce:	141a      	asrs	r2, r3, #16
 80026d0:	7bfb      	ldrb	r3, [r7, #15]
 80026d2:	b2d1      	uxtb	r1, r2
 80026d4:	4a18      	ldr	r2, [pc, #96]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 80026d6:	4413      	add	r3, r2
 80026d8:	460a      	mov	r2, r1
 80026da:	705a      	strb	r2, [r3, #1]
       spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 80026dc:	683b      	ldr	r3, [r7, #0]
 80026de:	121a      	asrs	r2, r3, #8
 80026e0:	7bfb      	ldrb	r3, [r7, #15]
 80026e2:	b2d1      	uxtb	r1, r2
 80026e4:	4a14      	ldr	r2, [pc, #80]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 80026e6:	4413      	add	r3, r2
 80026e8:	460a      	mov	r2, r1
 80026ea:	709a      	strb	r2, [r3, #2]
       spiTxBursts[3][spiIndex] = (uint8_t)(value);
 80026ec:	7bfb      	ldrb	r3, [r7, #15]
 80026ee:	683a      	ldr	r2, [r7, #0]
 80026f0:	b2d1      	uxtb	r1, r2
 80026f2:	4a11      	ldr	r2, [pc, #68]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 80026f4:	4413      	add	r3, r2
 80026f6:	460a      	mov	r2, r1
 80026f8:	70da      	strb	r2, [r3, #3]
       break;
 80026fa:	bf00      	nop
       spiTxBursts[1][spiIndex] = POWERSTEP01_NOP;
       spiTxBursts[2][spiIndex] = POWERSTEP01_NOP;
       spiTxBursts[3][spiIndex] = command;
    }
  }
}
 80026fc:	e012      	b.n	8002724 <Powerstep01_QueueCommands+0xcc>
       spiTxBursts[0][spiIndex] = POWERSTEP01_NOP;
 80026fe:	7bfb      	ldrb	r3, [r7, #15]
 8002700:	4a0d      	ldr	r2, [pc, #52]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 8002702:	2100      	movs	r1, #0
 8002704:	54d1      	strb	r1, [r2, r3]
       spiTxBursts[1][spiIndex] = POWERSTEP01_NOP;
 8002706:	7bfb      	ldrb	r3, [r7, #15]
 8002708:	4a0b      	ldr	r2, [pc, #44]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 800270a:	4413      	add	r3, r2
 800270c:	2200      	movs	r2, #0
 800270e:	705a      	strb	r2, [r3, #1]
       spiTxBursts[2][spiIndex] = POWERSTEP01_NOP;
 8002710:	7bfb      	ldrb	r3, [r7, #15]
 8002712:	4a09      	ldr	r2, [pc, #36]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 8002714:	4413      	add	r3, r2
 8002716:	2200      	movs	r2, #0
 8002718:	709a      	strb	r2, [r3, #2]
       spiTxBursts[3][spiIndex] = command;
 800271a:	7bfb      	ldrb	r3, [r7, #15]
 800271c:	4a06      	ldr	r2, [pc, #24]	@ (8002738 <Powerstep01_QueueCommands+0xe0>)
 800271e:	4413      	add	r3, r2
 8002720:	79ba      	ldrb	r2, [r7, #6]
 8002722:	70da      	strb	r2, [r3, #3]
}
 8002724:	bf00      	nop
 8002726:	3714      	adds	r7, #20
 8002728:	46bd      	mov	sp, r7
 800272a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800272e:	4770      	bx	lr
 8002730:	2000087c 	.word	0x2000087c
 8002734:	01010001 	.word	0x01010001
 8002738:	20000880 	.word	0x20000880

0800273c <Powerstep01_ReadStatusRegister>:
 * @retval Status register value
 * @note The status register flags are not cleared 
 * at the difference with Powerstep01_CmdGetStatus()
 **********************************************************/
uint16_t Powerstep01_ReadStatusRegister(uint8_t deviceId)
{
 800273c:	b580      	push	{r7, lr}
 800273e:	b082      	sub	sp, #8
 8002740:	af00      	add	r7, sp, #0
 8002742:	4603      	mov	r3, r0
 8002744:	71fb      	strb	r3, [r7, #7]
  return (Powerstep01_CmdGetParam(deviceId, POWERSTEP01_STATUS));
 8002746:	79fb      	ldrb	r3, [r7, #7]
 8002748:	211b      	movs	r1, #27
 800274a:	4618      	mov	r0, r3
 800274c:	f7ff fa7c 	bl	8001c48 <Powerstep01_CmdGetParam>
 8002750:	4603      	mov	r3, r0
 8002752:	b29b      	uxth	r3, r3
}
 8002754:	4618      	mov	r0, r3
 8002756:	3708      	adds	r7, #8
 8002758:	46bd      	mov	sp, r7
 800275a:	bd80      	pop	{r7, pc}

0800275c <Powerstep01_ReleaseReset>:
 * @brief  Releases the Powerstep01 reset (pin set to High) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_ReleaseReset(uint8_t deviceId)
{ 
 800275c:	b580      	push	{r7, lr}
 800275e:	b082      	sub	sp, #8
 8002760:	af00      	add	r7, sp, #0
 8002762:	4603      	mov	r3, r0
 8002764:	71fb      	strb	r3, [r7, #7]
  Powerstep01_Board_ReleaseReset(deviceId); 
 8002766:	79fb      	ldrb	r3, [r7, #7]
 8002768:	4618      	mov	r0, r3
 800276a:	f001 fb1b 	bl	8003da4 <Powerstep01_Board_ReleaseReset>
}
 800276e:	bf00      	nop
 8002770:	3708      	adds	r7, #8
 8002772:	46bd      	mov	sp, r7
 8002774:	bd80      	pop	{r7, pc}

08002776 <Powerstep01_Reset>:
 * @brief  Resets the Powerstep01 (reset pin set to low) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_Reset(uint8_t deviceId)
{
 8002776:	b580      	push	{r7, lr}
 8002778:	b082      	sub	sp, #8
 800277a:	af00      	add	r7, sp, #0
 800277c:	4603      	mov	r3, r0
 800277e:	71fb      	strb	r3, [r7, #7]
  Powerstep01_Board_Reset(deviceId); 
 8002780:	79fb      	ldrb	r3, [r7, #7]
 8002782:	4618      	mov	r0, r3
 8002784:	f001 fb1e 	bl	8003dc4 <Powerstep01_Board_Reset>
}
 8002788:	bf00      	nop
 800278a:	3708      	adds	r7, #8
 800278c:	46bd      	mov	sp, r7
 800278e:	bd80      	pop	{r7, pc}

08002790 <Powerstep01_SelectStepMode>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] stepMode from full step to 1/128 microstep as specified in enum motorStepMode_t
 * @retval TRUE if successfull, FALSE if failure
 **********************************************************/
bool Powerstep01_SelectStepMode(uint8_t deviceId, motorStepMode_t stepMode)
{
 8002790:	b580      	push	{r7, lr}
 8002792:	b084      	sub	sp, #16
 8002794:	af00      	add	r7, sp, #0
 8002796:	4603      	mov	r3, r0
 8002798:	460a      	mov	r2, r1
 800279a:	71fb      	strb	r3, [r7, #7]
 800279c:	4613      	mov	r3, r2
 800279e:	71bb      	strb	r3, [r7, #6]
  uint8_t stepModeRegister;
  powerstep01_StepSel_t powerstep01StepMode;

  switch (stepMode)
 80027a0:	79bb      	ldrb	r3, [r7, #6]
 80027a2:	2b07      	cmp	r3, #7
 80027a4:	d82a      	bhi.n	80027fc <Powerstep01_SelectStepMode+0x6c>
 80027a6:	a201      	add	r2, pc, #4	@ (adr r2, 80027ac <Powerstep01_SelectStepMode+0x1c>)
 80027a8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80027ac:	080027cd 	.word	0x080027cd
 80027b0:	080027d3 	.word	0x080027d3
 80027b4:	080027d9 	.word	0x080027d9
 80027b8:	080027df 	.word	0x080027df
 80027bc:	080027e5 	.word	0x080027e5
 80027c0:	080027eb 	.word	0x080027eb
 80027c4:	080027f1 	.word	0x080027f1
 80027c8:	080027f7 	.word	0x080027f7
  {
    case STEP_MODE_FULL:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1;
 80027cc:	2300      	movs	r3, #0
 80027ce:	73fb      	strb	r3, [r7, #15]
      break;
 80027d0:	e016      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_HALF:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_2;
 80027d2:	2301      	movs	r3, #1
 80027d4:	73fb      	strb	r3, [r7, #15]
      break;    
 80027d6:	e013      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_4:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_4;
 80027d8:	2302      	movs	r3, #2
 80027da:	73fb      	strb	r3, [r7, #15]
      break;        
 80027dc:	e010      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_8:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_8;
 80027de:	2303      	movs	r3, #3
 80027e0:	73fb      	strb	r3, [r7, #15]
      break;
 80027e2:	e00d      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_16:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_16;
 80027e4:	2304      	movs	r3, #4
 80027e6:	73fb      	strb	r3, [r7, #15]
      break;        
 80027e8:	e00a      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_32:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_32;
 80027ea:	2305      	movs	r3, #5
 80027ec:	73fb      	strb	r3, [r7, #15]
      break;
 80027ee:	e007      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_64:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_64;
 80027f0:	2306      	movs	r3, #6
 80027f2:	73fb      	strb	r3, [r7, #15]
      break;
 80027f4:	e004      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_128:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_128;
 80027f6:	2307      	movs	r3, #7
 80027f8:	73fb      	strb	r3, [r7, #15]
      break;
 80027fa:	e001      	b.n	8002800 <Powerstep01_SelectStepMode+0x70>
    default:
      return FALSE;     
 80027fc:	2300      	movs	r3, #0
 80027fe:	e01c      	b.n	800283a <Powerstep01_SelectStepMode+0xaa>
  }
  
  /* Set the powerstep01 in HiZ state */
  Powerstep01_CmdHardHiZ(deviceId);  
 8002800:	79fb      	ldrb	r3, [r7, #7]
 8002802:	4618      	mov	r0, r3
 8002804:	f7ff fbf9 	bl	8001ffa <Powerstep01_CmdHardHiZ>
  
  /* Read Step mode register and clear STEP_SEL field */
  stepModeRegister = (uint8_t)(0xF8 & Powerstep01_CmdGetParam(deviceId,POWERSTEP01_STEP_MODE)) ;
 8002808:	79fb      	ldrb	r3, [r7, #7]
 800280a:	2116      	movs	r1, #22
 800280c:	4618      	mov	r0, r3
 800280e:	f7ff fa1b 	bl	8001c48 <Powerstep01_CmdGetParam>
 8002812:	4603      	mov	r3, r0
 8002814:	b2db      	uxtb	r3, r3
 8002816:	f023 0307 	bic.w	r3, r3, #7
 800281a:	73bb      	strb	r3, [r7, #14]
  
  /* Apply new step mode */
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE, stepModeRegister | (uint8_t)powerstep01StepMode);
 800281c:	7bba      	ldrb	r2, [r7, #14]
 800281e:	7bfb      	ldrb	r3, [r7, #15]
 8002820:	4313      	orrs	r3, r2
 8002822:	b2db      	uxtb	r3, r3
 8002824:	461a      	mov	r2, r3
 8002826:	79fb      	ldrb	r3, [r7, #7]
 8002828:	2116      	movs	r1, #22
 800282a:	4618      	mov	r0, r3
 800282c:	f7ff fc74 	bl	8002118 <Powerstep01_CmdSetParam>

  /* Reset abs pos register */
  Powerstep01_CmdResetPos(deviceId);
 8002830:	79fb      	ldrb	r3, [r7, #7]
 8002832:	4618      	mov	r0, r3
 8002834:	f7ff fc4b 	bl	80020ce <Powerstep01_CmdResetPos>
  
  return TRUE;
 8002838:	2301      	movs	r3, #1
}
 800283a:	4618      	mov	r0, r3
 800283c:	3710      	adds	r7, #16
 800283e:	46bd      	mov	sp, r7
 8002840:	bd80      	pop	{r7, pc}
 8002842:	bf00      	nop

08002844 <Powerstep01_SendQueuedCommands>:
 * @brief Sends commands stored previously in the queue by 
 * Powerstep01_QueueCommands
 * @retval None
 *********************************************************/
void Powerstep01_SendQueuedCommands(void)
{
 8002844:	b580      	push	{r7, lr}
 8002846:	b082      	sub	sp, #8
 8002848:	af00      	add	r7, sp, #0
  uint8_t loop;
  
  for (loop = 0; 
 800284a:	2300      	movs	r3, #0
 800284c:	71fb      	strb	r3, [r7, #7]
 800284e:	e00c      	b.n	800286a <Powerstep01_SendQueuedCommands+0x26>
       loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
       loop++)
  {
     Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 8002850:	79fb      	ldrb	r3, [r7, #7]
 8002852:	4a0a      	ldr	r2, [pc, #40]	@ (800287c <Powerstep01_SendQueuedCommands+0x38>)
 8002854:	441a      	add	r2, r3
 8002856:	79fb      	ldrb	r3, [r7, #7]
 8002858:	4909      	ldr	r1, [pc, #36]	@ (8002880 <Powerstep01_SendQueuedCommands+0x3c>)
 800285a:	440b      	add	r3, r1
 800285c:	4619      	mov	r1, r3
 800285e:	4610      	mov	r0, r2
 8002860:	f000 fef2 	bl	8003648 <Powerstep01_WriteBytes>
       loop++)
 8002864:	79fb      	ldrb	r3, [r7, #7]
 8002866:	3301      	adds	r3, #1
 8002868:	71fb      	strb	r3, [r7, #7]
       loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
 800286a:	79fb      	ldrb	r3, [r7, #7]
 800286c:	2b03      	cmp	r3, #3
 800286e:	d9ef      	bls.n	8002850 <Powerstep01_SendQueuedCommands+0xc>
  }
}
 8002870:	bf00      	nop
 8002872:	bf00      	nop
 8002874:	3708      	adds	r7, #8
 8002876:	46bd      	mov	sp, r7
 8002878:	bd80      	pop	{r7, pc}
 800287a:	bf00      	nop
 800287c:	20000880 	.word	0x20000880
 8002880:	20000884 	.word	0x20000884

08002884 <Powerstep01_SetHome>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] homePos new home position
 * @retval None
 **********************************************************/
void Powerstep01_SetHome(uint8_t deviceId, int32_t homePos)
{
 8002884:	b580      	push	{r7, lr}
 8002886:	b084      	sub	sp, #16
 8002888:	af00      	add	r7, sp, #0
 800288a:	4603      	mov	r3, r0
 800288c:	6039      	str	r1, [r7, #0]
 800288e:	71fb      	strb	r3, [r7, #7]
  uint32_t currentPos = Powerstep01_CmdGetParam(deviceId, POWERSTEP01_ABS_POS);
 8002890:	79fb      	ldrb	r3, [r7, #7]
 8002892:	2101      	movs	r1, #1
 8002894:	4618      	mov	r0, r3
 8002896:	f7ff f9d7 	bl	8001c48 <Powerstep01_CmdGetParam>
 800289a:	60f8      	str	r0, [r7, #12]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ABS_POS, currentPos- homePos);
 800289c:	683b      	ldr	r3, [r7, #0]
 800289e:	68fa      	ldr	r2, [r7, #12]
 80028a0:	1ad2      	subs	r2, r2, r3
 80028a2:	79fb      	ldrb	r3, [r7, #7]
 80028a4:	2101      	movs	r1, #1
 80028a6:	4618      	mov	r0, r3
 80028a8:	f7ff fc36 	bl	8002118 <Powerstep01_CmdSetParam>
}
 80028ac:	bf00      	nop
 80028ae:	3710      	adds	r7, #16
 80028b0:	46bd      	mov	sp, r7
 80028b2:	bd80      	pop	{r7, pc}

080028b4 <Powerstep01_SetMark>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] markPos new mark position
 * @retval None
 **********************************************************/
void Powerstep01_SetMark(uint8_t deviceId, int32_t markPos)
{
 80028b4:	b580      	push	{r7, lr}
 80028b6:	b082      	sub	sp, #8
 80028b8:	af00      	add	r7, sp, #0
 80028ba:	4603      	mov	r3, r0
 80028bc:	6039      	str	r1, [r7, #0]
 80028be:	71fb      	strb	r3, [r7, #7]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MARK, markPos);
 80028c0:	683a      	ldr	r2, [r7, #0]
 80028c2:	79fb      	ldrb	r3, [r7, #7]
 80028c4:	2103      	movs	r1, #3
 80028c6:	4618      	mov	r0, r3
 80028c8:	f7ff fc26 	bl	8002118 <Powerstep01_CmdSetParam>
}
 80028cc:	bf00      	nop
 80028ce:	3708      	adds	r7, #8
 80028d0:	46bd      	mov	sp, r7
 80028d2:	bd80      	pop	{r7, pc}

080028d4 <Powerstep01_SetNbDevices>:
 * @param[in] nbDevices (from 1 to MAX_NUMBER_OF_DEVICES)
 * @retval TRUE if successfull, FALSE if failure, attempt to set a number of 
 * devices greater than MAX_NUMBER_OF_DEVICES
 **********************************************************/
bool Powerstep01_SetNbDevices(uint8_t nbDevices)
{
 80028d4:	b480      	push	{r7}
 80028d6:	b083      	sub	sp, #12
 80028d8:	af00      	add	r7, sp, #0
 80028da:	4603      	mov	r3, r0
 80028dc:	71fb      	strb	r3, [r7, #7]
  if (nbDevices <= MAX_NUMBER_OF_DEVICES)
 80028de:	79fb      	ldrb	r3, [r7, #7]
 80028e0:	2b01      	cmp	r3, #1
 80028e2:	d804      	bhi.n	80028ee <Powerstep01_SetNbDevices+0x1a>
  {
    numberOfDevices = nbDevices;
 80028e4:	4a05      	ldr	r2, [pc, #20]	@ (80028fc <Powerstep01_SetNbDevices+0x28>)
 80028e6:	79fb      	ldrb	r3, [r7, #7]
 80028e8:	7013      	strb	r3, [r2, #0]
    return TRUE;
 80028ea:	2301      	movs	r3, #1
 80028ec:	e000      	b.n	80028f0 <Powerstep01_SetNbDevices+0x1c>
  }
  else
  {
    return FALSE;
 80028ee:	2300      	movs	r3, #0
  }
}
 80028f0:	4618      	mov	r0, r3
 80028f2:	370c      	adds	r7, #12
 80028f4:	46bd      	mov	sp, r7
 80028f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028fa:	4770      	bx	lr
 80028fc:	2000087c 	.word	0x2000087c

08002900 <Powerstep01_SetAnalogValue>:
 * @param[in] param Register adress (POWERSTEP01_ABS_POS, POWERSTEP01_MARK,...)
 * @param[in] value Floating point value to convert and set into the register
 * @retval TRUE if param and value are valid, FALSE otherwise
 *********************************************************/
bool Powerstep01_SetAnalogValue(uint8_t deviceId, uint32_t param, float value)
{
 8002900:	b590      	push	{r4, r7, lr}
 8002902:	b087      	sub	sp, #28
 8002904:	af00      	add	r7, sp, #0
 8002906:	4603      	mov	r3, r0
 8002908:	60b9      	str	r1, [r7, #8]
 800290a:	ed87 0a01 	vstr	s0, [r7, #4]
 800290e:	73fb      	strb	r3, [r7, #15]
  uint32_t registerValue;
  bool result = TRUE;
 8002910:	2301      	movs	r3, #1
 8002912:	74fb      	strb	r3, [r7, #19]
  bool voltageMode = ((POWERSTEP01_CM_VM_CURRENT&Powerstep01_CmdGetParam(deviceId,POWERSTEP01_STEP_MODE))==0);
 8002914:	7bfb      	ldrb	r3, [r7, #15]
 8002916:	2116      	movs	r1, #22
 8002918:	4618      	mov	r0, r3
 800291a:	f7ff f995 	bl	8001c48 <Powerstep01_CmdGetParam>
 800291e:	4603      	mov	r3, r0
 8002920:	f003 0308 	and.w	r3, r3, #8
 8002924:	2b00      	cmp	r3, #0
 8002926:	bf0c      	ite	eq
 8002928:	2301      	moveq	r3, #1
 800292a:	2300      	movne	r3, #0
 800292c:	b2db      	uxtb	r3, r3
 800292e:	74bb      	strb	r3, [r7, #18]
  if ((value < 0)&&((param != POWERSTEP01_ABS_POS)&&(param != POWERSTEP01_MARK)))
 8002930:	edd7 7a01 	vldr	s15, [r7, #4]
 8002934:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002938:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800293c:	d507      	bpl.n	800294e <Powerstep01_SetAnalogValue+0x4e>
 800293e:	68bb      	ldr	r3, [r7, #8]
 8002940:	2b01      	cmp	r3, #1
 8002942:	d004      	beq.n	800294e <Powerstep01_SetAnalogValue+0x4e>
 8002944:	68bb      	ldr	r3, [r7, #8]
 8002946:	2b03      	cmp	r3, #3
 8002948:	d001      	beq.n	800294e <Powerstep01_SetAnalogValue+0x4e>
  {
    result = FALSE;
 800294a:	2300      	movs	r3, #0
 800294c:	74fb      	strb	r3, [r7, #19]
  }
  switch (param)
 800294e:	68bb      	ldr	r3, [r7, #8]
 8002950:	3b01      	subs	r3, #1
 8002952:	2b14      	cmp	r3, #20
 8002954:	f200 8191 	bhi.w	8002c7a <Powerstep01_SetAnalogValue+0x37a>
 8002958:	a201      	add	r2, pc, #4	@ (adr r2, 8002960 <Powerstep01_SetAnalogValue+0x60>)
 800295a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800295e:	bf00      	nop
 8002960:	08002a1b 	.word	0x08002a1b
 8002964:	080029b5 	.word	0x080029b5
 8002968:	08002a1b 	.word	0x08002a1b
 800296c:	08002c7b 	.word	0x08002c7b
 8002970:	08002a8f 	.word	0x08002a8f
 8002974:	08002a8f 	.word	0x08002a8f
 8002978:	08002ab5 	.word	0x08002ab5
 800297c:	08002adb 	.word	0x08002adb
 8002980:	08002bcf 	.word	0x08002bcf
 8002984:	08002bcf 	.word	0x08002bcf
 8002988:	08002bcf 	.word	0x08002bcf
 800298c:	08002bcf 	.word	0x08002bcf
 8002990:	08002b4b 	.word	0x08002b4b
 8002994:	08002c1d 	.word	0x08002c1d
 8002998:	08002c29 	.word	0x08002c29
 800299c:	08002c29 	.word	0x08002c29
 80029a0:	08002b71 	.word	0x08002b71
 80029a4:	08002c7b 	.word	0x08002c7b
 80029a8:	08002ba9 	.word	0x08002ba9
 80029ac:	08002ba9 	.word	0x08002ba9
 80029b0:	08002b13 	.word	0x08002b13
  {
    case POWERSTEP01_EL_POS:
      if ((value > (POWERSTEP01_ELPOS_STEP_MASK|POWERSTEP01_ELPOS_MICROSTEP_MASK))||
 80029b4:	edd7 7a01 	vldr	s15, [r7, #4]
 80029b8:	ed9f 7ab8 	vldr	s14, [pc, #736]	@ 8002c9c <Powerstep01_SetAnalogValue+0x39c>
 80029bc:	eef4 7ac7 	vcmpe.f32	s15, s14
 80029c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029c4:	dc1c      	bgt.n	8002a00 <Powerstep01_SetAnalogValue+0x100>
 80029c6:	edd7 7a01 	vldr	s15, [r7, #4]
 80029ca:	eef5 7a40 	vcmp.f32	s15, #0.0
 80029ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029d2:	d018      	beq.n	8002a06 <Powerstep01_SetAnalogValue+0x106>
          ((value!=0)&&(value < (1<<(7-(POWERSTEP01_STEP_MODE_STEP_SEL&Powerstep01_CmdGetParam(0,POWERSTEP01_STEP_MODE))))))) result = FALSE;
 80029d4:	2116      	movs	r1, #22
 80029d6:	2000      	movs	r0, #0
 80029d8:	f7ff f936 	bl	8001c48 <Powerstep01_CmdGetParam>
 80029dc:	4603      	mov	r3, r0
 80029de:	43db      	mvns	r3, r3
 80029e0:	f003 0307 	and.w	r3, r3, #7
 80029e4:	2201      	movs	r2, #1
 80029e6:	fa02 f303 	lsl.w	r3, r2, r3
 80029ea:	ee07 3a90 	vmov	s15, r3
 80029ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80029f2:	ed97 7a01 	vldr	s14, [r7, #4]
 80029f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80029fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029fe:	d502      	bpl.n	8002a06 <Powerstep01_SetAnalogValue+0x106>
 8002a00:	2300      	movs	r3, #0
 8002a02:	74fb      	strb	r3, [r7, #19]
      else registerValue = ((uint32_t) value)&(POWERSTEP01_ELPOS_STEP_MASK|POWERSTEP01_ELPOS_MICROSTEP_MASK);
      break;        
 8002a04:	e13b      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = ((uint32_t) value)&(POWERSTEP01_ELPOS_STEP_MASK|POWERSTEP01_ELPOS_MICROSTEP_MASK);
 8002a06:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a0a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a0e:	ee17 3a90 	vmov	r3, s15
 8002a12:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002a16:	617b      	str	r3, [r7, #20]
      break;        
 8002a18:	e131      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_ABS_POS:
    case POWERSTEP01_MARK:
      if (value < 0)
 8002a1a:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002a22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a26:	d51c      	bpl.n	8002a62 <Powerstep01_SetAnalogValue+0x162>
      {
        value=-value;
 8002a28:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a2c:	eef1 7a67 	vneg.f32	s15, s15
 8002a30:	edc7 7a01 	vstr	s15, [r7, #4]
        if (((uint32_t)value)<=(POWERSTEP01_MAX_POSITION+1))
 8002a34:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a38:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a3c:	ee17 3a90 	vmov	r3, s15
 8002a40:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8002a44:	d80a      	bhi.n	8002a5c <Powerstep01_SetAnalogValue+0x15c>
          registerValue = (POWERSTEP01_ABS_POS_VALUE_MASK+1-(uint32_t)value)&POWERSTEP01_ABS_POS_VALUE_MASK;
 8002a46:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a4a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a4e:	ee17 3a90 	vmov	r3, s15
 8002a52:	425b      	negs	r3, r3
 8002a54:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002a58:	617b      	str	r3, [r7, #20]
      {
        if (((uint32_t)value)<=POWERSTEP01_MAX_POSITION)
          registerValue = ((uint32_t) value)&POWERSTEP01_ABS_POS_VALUE_MASK;
        else result = FALSE; 
      }
      break;
 8002a5a:	e110      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        else result = FALSE;  
 8002a5c:	2300      	movs	r3, #0
 8002a5e:	74fb      	strb	r3, [r7, #19]
      break;
 8002a60:	e10d      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        if (((uint32_t)value)<=POWERSTEP01_MAX_POSITION)
 8002a62:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a66:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a6a:	ee17 3a90 	vmov	r3, s15
 8002a6e:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8002a72:	d209      	bcs.n	8002a88 <Powerstep01_SetAnalogValue+0x188>
          registerValue = ((uint32_t) value)&POWERSTEP01_ABS_POS_VALUE_MASK;
 8002a74:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a78:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002a7c:	ee17 3a90 	vmov	r3, s15
 8002a80:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002a84:	617b      	str	r3, [r7, #20]
      break;
 8002a86:	e0fa      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        else result = FALSE; 
 8002a88:	2300      	movs	r3, #0
 8002a8a:	74fb      	strb	r3, [r7, #19]
      break;
 8002a8c:	e0f7      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_ACC:
    case POWERSTEP01_DEC:
      if (value > POWERSTEP01_ACC_DEC_MAX_VALUE) result = FALSE;
 8002a8e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002a92:	ed9f 7a83 	vldr	s14, [pc, #524]	@ 8002ca0 <Powerstep01_SetAnalogValue+0x3a0>
 8002a96:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a9e:	dd02      	ble.n	8002aa6 <Powerstep01_SetAnalogValue+0x1a6>
 8002aa0:	2300      	movs	r3, #0
 8002aa2:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_AccDec_Steps_s2_to_RegVal(value);
      break;
 8002aa4:	e0eb      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_AccDec_Steps_s2_to_RegVal(value);
 8002aa6:	ed97 0a01 	vldr	s0, [r7, #4]
 8002aaa:	f000 fdf3 	bl	8003694 <Powerstep01_AccDec_Steps_s2_to_RegVal>
 8002aae:	4603      	mov	r3, r0
 8002ab0:	617b      	str	r3, [r7, #20]
      break;
 8002ab2:	e0e4      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_MAX_SPEED:
      if (value > POWERSTEP01_MAX_SPEED_MAX_VALUE) result = FALSE;
 8002ab4:	edd7 7a01 	vldr	s15, [r7, #4]
 8002ab8:	ed9f 7a7a 	vldr	s14, [pc, #488]	@ 8002ca4 <Powerstep01_SetAnalogValue+0x3a4>
 8002abc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002ac0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ac4:	dd02      	ble.n	8002acc <Powerstep01_SetAnalogValue+0x1cc>
 8002ac6:	2300      	movs	r3, #0
 8002ac8:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_MaxSpd_Steps_s_to_RegVal(value);
      break;
 8002aca:	e0d8      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_MaxSpd_Steps_s_to_RegVal(value);
 8002acc:	ed97 0a01 	vldr	s0, [r7, #4]
 8002ad0:	f000 ff1a 	bl	8003908 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 8002ad4:	4603      	mov	r3, r0
 8002ad6:	617b      	str	r3, [r7, #20]
      break;
 8002ad8:	e0d1      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_MIN_SPEED:
      if (value > POWERSTEP01_MIN_SPEED_MAX_VALUE) result = FALSE;
 8002ada:	edd7 7a01 	vldr	s15, [r7, #4]
 8002ade:	ed9f 7a72 	vldr	s14, [pc, #456]	@ 8002ca8 <Powerstep01_SetAnalogValue+0x3a8>
 8002ae2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002ae6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002aea:	dd02      	ble.n	8002af2 <Powerstep01_SetAnalogValue+0x1f2>
 8002aec:	2300      	movs	r3, #0
 8002aee:	74fb      	strb	r3, [r7, #19]
      else registerValue = (POWERSTEP01_LSPD_OPT&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_MinSpd_Steps_s_to_RegVal(value);
      break;      
 8002af0:	e0c5      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = (POWERSTEP01_LSPD_OPT&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_MinSpd_Steps_s_to_RegVal(value);
 8002af2:	7bfb      	ldrb	r3, [r7, #15]
 8002af4:	68b9      	ldr	r1, [r7, #8]
 8002af6:	4618      	mov	r0, r3
 8002af8:	f7ff f8a6 	bl	8001c48 <Powerstep01_CmdGetParam>
 8002afc:	4603      	mov	r3, r0
 8002afe:	f403 5480 	and.w	r4, r3, #4096	@ 0x1000
 8002b02:	ed97 0a01 	vldr	s0, [r7, #4]
 8002b06:	f000 ff31 	bl	800396c <Powerstep01_MinSpd_Steps_s_to_RegVal>
 8002b0a:	4603      	mov	r3, r0
 8002b0c:	4323      	orrs	r3, r4
 8002b0e:	617b      	str	r3, [r7, #20]
      break;      
 8002b10:	e0b5      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_FS_SPD:
      if (value > POWERSTEP01_FS_SPD_MAX_VALUE) result = FALSE;
 8002b12:	edd7 7a01 	vldr	s15, [r7, #4]
 8002b16:	ed9f 7a65 	vldr	s14, [pc, #404]	@ 8002cac <Powerstep01_SetAnalogValue+0x3ac>
 8002b1a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002b1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b22:	dd02      	ble.n	8002b2a <Powerstep01_SetAnalogValue+0x22a>
 8002b24:	2300      	movs	r3, #0
 8002b26:	74fb      	strb	r3, [r7, #19]
      else registerValue = (POWERSTEP01_BOOST_MODE&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_FSSpd_Steps_s_to_RegVal(value);
      break;
 8002b28:	e0a9      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = (POWERSTEP01_BOOST_MODE&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_FSSpd_Steps_s_to_RegVal(value);
 8002b2a:	7bfb      	ldrb	r3, [r7, #15]
 8002b2c:	68b9      	ldr	r1, [r7, #8]
 8002b2e:	4618      	mov	r0, r3
 8002b30:	f7ff f88a 	bl	8001c48 <Powerstep01_CmdGetParam>
 8002b34:	4603      	mov	r3, r0
 8002b36:	f403 6480 	and.w	r4, r3, #1024	@ 0x400
 8002b3a:	ed97 0a01 	vldr	s0, [r7, #4]
 8002b3e:	f000 fe0f 	bl	8003760 <Powerstep01_FSSpd_Steps_s_to_RegVal>
 8002b42:	4603      	mov	r3, r0
 8002b44:	4323      	orrs	r3, r4
 8002b46:	617b      	str	r3, [r7, #20]
      break;
 8002b48:	e099      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_INT_SPD:
      if (value > POWERSTEP01_INT_SPD_MAX_VALUE) result = FALSE;
 8002b4a:	edd7 7a01 	vldr	s15, [r7, #4]
 8002b4e:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 8002cb0 <Powerstep01_SetAnalogValue+0x3b0>
 8002b52:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002b56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b5a:	dd02      	ble.n	8002b62 <Powerstep01_SetAnalogValue+0x262>
 8002b5c:	2300      	movs	r3, #0
 8002b5e:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_IntSpd_Steps_s_to_RegVal(value);
      break;
 8002b60:	e08d      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_IntSpd_Steps_s_to_RegVal(value);
 8002b62:	ed97 0a01 	vldr	s0, [r7, #4]
 8002b66:	f000 fe2f 	bl	80037c8 <Powerstep01_IntSpd_Steps_s_to_RegVal>
 8002b6a:	4603      	mov	r3, r0
 8002b6c:	617b      	str	r3, [r7, #20]
      break;
 8002b6e:	e086      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_K_THERM:
      if ((value < POWERSTEP01_K_THERM_MIN_VALUE)||
 8002b70:	edd7 7a01 	vldr	s15, [r7, #4]
 8002b74:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002b78:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002b7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b80:	d408      	bmi.n	8002b94 <Powerstep01_SetAnalogValue+0x294>
 8002b82:	edd7 7a01 	vldr	s15, [r7, #4]
 8002b86:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 8002cb4 <Powerstep01_SetAnalogValue+0x3b4>
 8002b8a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002b8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002b92:	dd02      	ble.n	8002b9a <Powerstep01_SetAnalogValue+0x29a>
          (value > POWERSTEP01_K_THERM_MAX_VALUE)) result = FALSE;
 8002b94:	2300      	movs	r3, #0
 8002b96:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_KTherm_Comp_to_RegVal(value);
      break;
 8002b98:	e071      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_KTherm_Comp_to_RegVal(value);
 8002b9a:	ed97 0a01 	vldr	s0, [r7, #4]
 8002b9e:	f000 fe45 	bl	800382c <Powerstep01_KTherm_Comp_to_RegVal>
 8002ba2:	4603      	mov	r3, r0
 8002ba4:	617b      	str	r3, [r7, #20]
      break;
 8002ba6:	e06a      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_OCD_TH:
    case POWERSTEP01_STALL_TH:
      if (value > POWERSTEP01_STALL_OCD_TH_MAX_VALUE) result = FALSE;
 8002ba8:	edd7 7a01 	vldr	s15, [r7, #4]
 8002bac:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8002cb8 <Powerstep01_SetAnalogValue+0x3b8>
 8002bb0:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002bb8:	dd02      	ble.n	8002bc0 <Powerstep01_SetAnalogValue+0x2c0>
 8002bba:	2300      	movs	r3, #0
 8002bbc:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_StallOcd_Th_to_RegVal(value);
      break;
 8002bbe:	e05e      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_StallOcd_Th_to_RegVal(value);
 8002bc0:	ed97 0a01 	vldr	s0, [r7, #4]
 8002bc4:	f000 ff1a 	bl	80039fc <Powerstep01_StallOcd_Th_to_RegVal>
 8002bc8:	4603      	mov	r3, r0
 8002bca:	617b      	str	r3, [r7, #20]
      break;
 8002bcc:	e057      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_KVAL_HOLD:  //POWERSTEP01_TVAL_HOLD
    case POWERSTEP01_KVAL_RUN:   //POWERSTEP01_TVAL_RUN
    case POWERSTEP01_KVAL_ACC:   //POWERSTEP01_TVAL_ACC
    case POWERSTEP01_KVAL_DEC:   //POWERSTEP01_TVAL_DEC
      if (voltageMode==FALSE)
 8002bce:	7cbb      	ldrb	r3, [r7, #18]
 8002bd0:	2b00      	cmp	r3, #0
 8002bd2:	d112      	bne.n	8002bfa <Powerstep01_SetAnalogValue+0x2fa>
      {
        if (value > POWERSTEP01_TVAL_MAX_VALUE) result = FALSE;
 8002bd4:	edd7 7a01 	vldr	s15, [r7, #4]
 8002bd8:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 8002cb8 <Powerstep01_SetAnalogValue+0x3b8>
 8002bdc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002be0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002be4:	dd02      	ble.n	8002bec <Powerstep01_SetAnalogValue+0x2ec>
 8002be6:	2300      	movs	r3, #0
 8002be8:	74fb      	strb	r3, [r7, #19]
      else
      {
        if (value > POWERSTEP01_KVAL_MAX_VALUE) result = FALSE;
        else registerValue = Powerstep01_Kval_Perc_to_RegVal(value);
      }
      break;
 8002bea:	e048      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_Tval_RefVoltage_to_RegVal(value);
 8002bec:	ed97 0a01 	vldr	s0, [r7, #4]
 8002bf0:	f000 ff40 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 8002bf4:	4603      	mov	r3, r0
 8002bf6:	617b      	str	r3, [r7, #20]
      break;
 8002bf8:	e041      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        if (value > POWERSTEP01_KVAL_MAX_VALUE) result = FALSE;
 8002bfa:	edd7 7a01 	vldr	s15, [r7, #4]
 8002bfe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002c02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c06:	dd02      	ble.n	8002c0e <Powerstep01_SetAnalogValue+0x30e>
 8002c08:	2300      	movs	r3, #0
 8002c0a:	74fb      	strb	r3, [r7, #19]
      break;
 8002c0c:	e037      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_Kval_Perc_to_RegVal(value);
 8002c0e:	ed97 0a01 	vldr	s0, [r7, #4]
 8002c12:	f000 fe47 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 8002c16:	4603      	mov	r3, r0
 8002c18:	617b      	str	r3, [r7, #20]
      break;
 8002c1a:	e030      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_ST_SLP:
      if (voltageMode==FALSE) 
 8002c1c:	7cbb      	ldrb	r3, [r7, #18]
 8002c1e:	2b00      	cmp	r3, #0
 8002c20:	d102      	bne.n	8002c28 <Powerstep01_SetAnalogValue+0x328>
      {
        result = FALSE;
 8002c22:	2300      	movs	r3, #0
 8002c24:	74fb      	strb	r3, [r7, #19]
        break;
 8002c26:	e02a      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
      }
    case POWERSTEP01_FN_SLP_ACC: //POWERSTEP01_TON_MIN
    case POWERSTEP01_FN_SLP_DEC: //POWERSTEP01_TOFF_MIN
      if (voltageMode==FALSE)
 8002c28:	7cbb      	ldrb	r3, [r7, #18]
 8002c2a:	2b00      	cmp	r3, #0
 8002c2c:	d112      	bne.n	8002c54 <Powerstep01_SetAnalogValue+0x354>
      {
        if (value>POWERSTEP01_TOFF_TON_MIN_MAX_VALUE) result = FALSE;
 8002c2e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002c32:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 8002cbc <Powerstep01_SetAnalogValue+0x3bc>
 8002c36:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002c3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c3e:	dd02      	ble.n	8002c46 <Powerstep01_SetAnalogValue+0x346>
 8002c40:	2300      	movs	r3, #0
 8002c42:	74fb      	strb	r3, [r7, #19]
      else
      {
        if (value > POWERSTEP01_SLP_MAX_VALUE) result = FALSE;
        else registerValue = Powerstep01_BEMFslope_Perc_to_RegVal(value);
      }
      break;
 8002c44:	e01b      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_Tmin_Time_to_RegVal(value);
 8002c46:	ed97 0a01 	vldr	s0, [r7, #4]
 8002c4a:	f000 ff4f 	bl	8003aec <Powerstep01_Tmin_Time_to_RegVal>
 8002c4e:	4603      	mov	r3, r0
 8002c50:	617b      	str	r3, [r7, #20]
      break;
 8002c52:	e014      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        if (value > POWERSTEP01_SLP_MAX_VALUE) result = FALSE;
 8002c54:	edd7 7a01 	vldr	s15, [r7, #4]
 8002c58:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 8002cc0 <Powerstep01_SetAnalogValue+0x3c0>
 8002c5c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002c60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002c64:	dd02      	ble.n	8002c6c <Powerstep01_SetAnalogValue+0x36c>
 8002c66:	2300      	movs	r3, #0
 8002c68:	74fb      	strb	r3, [r7, #19]
      break;
 8002c6a:	e008      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_BEMFslope_Perc_to_RegVal(value);
 8002c6c:	ed97 0a01 	vldr	s0, [r7, #4]
 8002c70:	f000 fd42 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 8002c74:	4603      	mov	r3, r0
 8002c76:	617b      	str	r3, [r7, #20]
      break;
 8002c78:	e001      	b.n	8002c7e <Powerstep01_SetAnalogValue+0x37e>
    default:
      result = FALSE;
 8002c7a:	2300      	movs	r3, #0
 8002c7c:	74fb      	strb	r3, [r7, #19]
  }
  if (result!=FALSE)
 8002c7e:	7cfb      	ldrb	r3, [r7, #19]
 8002c80:	2b00      	cmp	r3, #0
 8002c82:	d005      	beq.n	8002c90 <Powerstep01_SetAnalogValue+0x390>
  {
    Powerstep01_CmdSetParam(deviceId, param, registerValue);
 8002c84:	7bfb      	ldrb	r3, [r7, #15]
 8002c86:	697a      	ldr	r2, [r7, #20]
 8002c88:	68b9      	ldr	r1, [r7, #8]
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	f7ff fa44 	bl	8002118 <Powerstep01_CmdSetParam>
  }
  return result;
 8002c90:	7cfb      	ldrb	r3, [r7, #19]
}
 8002c92:	4618      	mov	r0, r3
 8002c94:	371c      	adds	r7, #28
 8002c96:	46bd      	mov	sp, r7
 8002c98:	bd90      	pop	{r4, r7, pc}
 8002c9a:	bf00      	nop
 8002c9c:	43ff8000 	.word	0x43ff8000
 8002ca0:	4768c600 	.word	0x4768c600
 8002ca4:	4673e800 	.word	0x4673e800
 8002ca8:	44741333 	.word	0x44741333
 8002cac:	46742400 	.word	0x46742400
 8002cb0:	44742000 	.word	0x44742000
 8002cb4:	3fbc0000 	.word	0x3fbc0000
 8002cb8:	447a0000 	.word	0x447a0000
 8002cbc:	42800000 	.word	0x42800000
 8002cc0:	3ecccccd 	.word	0x3ecccccd

08002cc4 <Powerstep01_StartStepClock>:
 * @param[in] newFreq in Hz of the step clock
 * @retval None
 * @note The frequency is directly the current speed of the device
 **********************************************************/
void Powerstep01_StartStepClock(uint16_t newFreq)
{
 8002cc4:	b580      	push	{r7, lr}
 8002cc6:	b082      	sub	sp, #8
 8002cc8:	af00      	add	r7, sp, #0
 8002cca:	4603      	mov	r3, r0
 8002ccc:	80fb      	strh	r3, [r7, #6]
  Powerstep01_Board_StartStepClock(newFreq);
 8002cce:	88fb      	ldrh	r3, [r7, #6]
 8002cd0:	4618      	mov	r0, r3
 8002cd2:	f001 f837 	bl	8003d44 <Powerstep01_Board_StartStepClock>
}
 8002cd6:	bf00      	nop
 8002cd8:	3708      	adds	r7, #8
 8002cda:	46bd      	mov	sp, r7
 8002cdc:	bd80      	pop	{r7, pc}

08002cde <Powerstep01_StopStepClock>:
/******************************************************//**
 * @brief  Stops the PWM uses for the step clock
 * @retval None
 **********************************************************/
void Powerstep01_StopStepClock(void)
{
 8002cde:	b580      	push	{r7, lr}
 8002ce0:	af00      	add	r7, sp, #0
  Powerstep01_Board_StopStepClock();
 8002ce2:	f001 f855 	bl	8003d90 <Powerstep01_Board_StopStepClock>
}
 8002ce6:	bf00      	nop
 8002ce8:	bd80      	pop	{r7, pc}
	...

08002cec <Powerstep01_WaitForAllDevicesNotBusy>:
/******************************************************//**
 * @brief  Locks until all devices become not busy
 * @retval None
 **********************************************************/
void Powerstep01_WaitForAllDevicesNotBusy(void)
{
 8002cec:	b580      	push	{r7, lr}
 8002cee:	b082      	sub	sp, #8
 8002cf0:	af00      	add	r7, sp, #0
  bool busy = TRUE;
 8002cf2:	2301      	movs	r3, #1
 8002cf4:	71fb      	strb	r3, [r7, #7]
  uint8_t loop;
	
  /* Wait while at least one is active */
  while (busy)
 8002cf6:	e016      	b.n	8002d26 <Powerstep01_WaitForAllDevicesNotBusy+0x3a>
  {
    busy = FALSE;
 8002cf8:	2300      	movs	r3, #0
 8002cfa:	71fb      	strb	r3, [r7, #7]
    for (loop = 0; loop < numberOfDevices; loop++)
 8002cfc:	2300      	movs	r3, #0
 8002cfe:	71bb      	strb	r3, [r7, #6]
 8002d00:	e00b      	b.n	8002d1a <Powerstep01_WaitForAllDevicesNotBusy+0x2e>
    {
      busy  |= Powerstep01_IsDeviceBusy(loop);
 8002d02:	79bb      	ldrb	r3, [r7, #6]
 8002d04:	4618      	mov	r0, r3
 8002d06:	f7ff fc92 	bl	800262e <Powerstep01_IsDeviceBusy>
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	461a      	mov	r2, r3
 8002d0e:	79fb      	ldrb	r3, [r7, #7]
 8002d10:	4313      	orrs	r3, r2
 8002d12:	71fb      	strb	r3, [r7, #7]
    for (loop = 0; loop < numberOfDevices; loop++)
 8002d14:	79bb      	ldrb	r3, [r7, #6]
 8002d16:	3301      	adds	r3, #1
 8002d18:	71bb      	strb	r3, [r7, #6]
 8002d1a:	4b07      	ldr	r3, [pc, #28]	@ (8002d38 <Powerstep01_WaitForAllDevicesNotBusy+0x4c>)
 8002d1c:	781b      	ldrb	r3, [r3, #0]
 8002d1e:	b2db      	uxtb	r3, r3
 8002d20:	79ba      	ldrb	r2, [r7, #6]
 8002d22:	429a      	cmp	r2, r3
 8002d24:	d3ed      	bcc.n	8002d02 <Powerstep01_WaitForAllDevicesNotBusy+0x16>
  while (busy)
 8002d26:	79fb      	ldrb	r3, [r7, #7]
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	d1e5      	bne.n	8002cf8 <Powerstep01_WaitForAllDevicesNotBusy+0xc>
    }   
  }
}
 8002d2c:	bf00      	nop
 8002d2e:	bf00      	nop
 8002d30:	3708      	adds	r7, #8
 8002d32:	46bd      	mov	sp, r7
 8002d34:	bd80      	pop	{r7, pc}
 8002d36:	bf00      	nop
 8002d38:	2000087c 	.word	0x2000087c

08002d3c <Powerstep01_WaitWhileActive>:
 * @brief  Locks until the device becomes not busy
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_WaitWhileActive(uint8_t deviceId)
 {
 8002d3c:	b580      	push	{r7, lr}
 8002d3e:	b082      	sub	sp, #8
 8002d40:	af00      	add	r7, sp, #0
 8002d42:	4603      	mov	r3, r0
 8002d44:	71fb      	strb	r3, [r7, #7]
	/* Wait while motor is running */
	while (Powerstep01_IsDeviceBusy(deviceId) != 0);
 8002d46:	bf00      	nop
 8002d48:	79fb      	ldrb	r3, [r7, #7]
 8002d4a:	4618      	mov	r0, r3
 8002d4c:	f7ff fc6f 	bl	800262e <Powerstep01_IsDeviceBusy>
 8002d50:	4603      	mov	r3, r0
 8002d52:	2b00      	cmp	r3, #0
 8002d54:	d1f8      	bne.n	8002d48 <Powerstep01_WaitWhileActive+0xc>
}
 8002d56:	bf00      	nop
 8002d58:	bf00      	nop
 8002d5a:	3708      	adds	r7, #8
 8002d5c:	46bd      	mov	sp, r7
 8002d5e:	bd80      	pop	{r7, pc}

08002d60 <Powerstep01_ConvertPosition>:
 * @brief  Converts the ABS_POSITION register value to a 32b signed integer
 * @param[in] abs_position_reg value of the ABS_POSITION register
 * @retval operation_result 32b signed integer corresponding to the absolute position 
 **********************************************************/
int32_t Powerstep01_ConvertPosition(uint32_t abs_position_reg)
{
 8002d60:	b480      	push	{r7}
 8002d62:	b085      	sub	sp, #20
 8002d64:	af00      	add	r7, sp, #0
 8002d66:	6078      	str	r0, [r7, #4]
	int32_t operation_result;

  if (abs_position_reg & POWERSTEP01_ABS_POS_SIGN_BIT_MASK) 
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8002d6e:	2b00      	cmp	r3, #0
 8002d70:	d00d      	beq.n	8002d8e <Powerstep01_ConvertPosition+0x2e>
  {
		/* Negative register value */
		abs_position_reg = ~abs_position_reg;
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	43db      	mvns	r3, r3
 8002d76:	607b      	str	r3, [r7, #4]
		abs_position_reg += 1;
 8002d78:	687b      	ldr	r3, [r7, #4]
 8002d7a:	3301      	adds	r3, #1
 8002d7c:	607b      	str	r3, [r7, #4]

		operation_result = (int32_t) (abs_position_reg & POWERSTEP01_ABS_POS_VALUE_MASK);
 8002d7e:	687b      	ldr	r3, [r7, #4]
 8002d80:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002d84:	60fb      	str	r3, [r7, #12]
		operation_result = -operation_result;
 8002d86:	68fb      	ldr	r3, [r7, #12]
 8002d88:	425b      	negs	r3, r3
 8002d8a:	60fb      	str	r3, [r7, #12]
 8002d8c:	e001      	b.n	8002d92 <Powerstep01_ConvertPosition+0x32>
  } 
  else 
  {
		operation_result = (int32_t) abs_position_reg;
 8002d8e:	687b      	ldr	r3, [r7, #4]
 8002d90:	60fb      	str	r3, [r7, #12]
	}
	return operation_result;
 8002d92:	68fb      	ldr	r3, [r7, #12]
}
 8002d94:	4618      	mov	r0, r3
 8002d96:	3714      	adds	r7, #20
 8002d98:	46bd      	mov	sp, r7
 8002d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d9e:	4770      	bx	lr

08002da0 <Powerstep01_BusyInterruptHandler>:
/******************************************************//**
 * @brief  Handlers of the busy interrupt which calls the user callback (if defined)
 * @retval None
 **********************************************************/
void Powerstep01_BusyInterruptHandler(void)
{
 8002da0:	b580      	push	{r7, lr}
 8002da2:	af00      	add	r7, sp, #0
  if (busyInterruptCallback != 0)
 8002da4:	4b07      	ldr	r3, [pc, #28]	@ (8002dc4 <Powerstep01_BusyInterruptHandler+0x24>)
 8002da6:	681b      	ldr	r3, [r3, #0]
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	d008      	beq.n	8002dbe <Powerstep01_BusyInterruptHandler+0x1e>
  {
    /* Set isr flag */
    isrFlag = TRUE;
 8002dac:	4b06      	ldr	r3, [pc, #24]	@ (8002dc8 <Powerstep01_BusyInterruptHandler+0x28>)
 8002dae:	2201      	movs	r2, #1
 8002db0:	701a      	strb	r2, [r3, #0]
    
    busyInterruptCallback();
 8002db2:	4b04      	ldr	r3, [pc, #16]	@ (8002dc4 <Powerstep01_BusyInterruptHandler+0x24>)
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	4798      	blx	r3
    
    /* Reset isr flag */
    isrFlag = FALSE;   
 8002db8:	4b03      	ldr	r3, [pc, #12]	@ (8002dc8 <Powerstep01_BusyInterruptHandler+0x28>)
 8002dba:	2200      	movs	r2, #0
 8002dbc:	701a      	strb	r2, [r3, #0]
  }
}
 8002dbe:	bf00      	nop
 8002dc0:	bd80      	pop	{r7, pc}
 8002dc2:	bf00      	nop
 8002dc4:	20000870 	.word	0x20000870
 8002dc8:	20000889 	.word	0x20000889

08002dcc <Powerstep01_ErrorHandler>:
 * @brief Error handler which calls the user callback (if defined)
 * @param[in] error Number of the error
 * @retval None
 **********************************************************/
void Powerstep01_ErrorHandler(uint16_t error)
{
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b082      	sub	sp, #8
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	4603      	mov	r3, r0
 8002dd4:	80fb      	strh	r3, [r7, #6]
  if (errorHandlerCallback != 0)
 8002dd6:	4b07      	ldr	r3, [pc, #28]	@ (8002df4 <Powerstep01_ErrorHandler+0x28>)
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	d005      	beq.n	8002dea <Powerstep01_ErrorHandler+0x1e>
  {
    errorHandlerCallback(error);
 8002dde:	4b05      	ldr	r3, [pc, #20]	@ (8002df4 <Powerstep01_ErrorHandler+0x28>)
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	88fa      	ldrh	r2, [r7, #6]
 8002de4:	4610      	mov	r0, r2
 8002de6:	4798      	blx	r3
    while(1)
    {
      /* Infinite loop */
    }
  }
}
 8002de8:	e000      	b.n	8002dec <Powerstep01_ErrorHandler+0x20>
    while(1)
 8002dea:	e7fe      	b.n	8002dea <Powerstep01_ErrorHandler+0x1e>
}
 8002dec:	3708      	adds	r7, #8
 8002dee:	46bd      	mov	sp, r7
 8002df0:	bd80      	pop	{r7, pc}
 8002df2:	bf00      	nop
 8002df4:	20000878 	.word	0x20000878

08002df8 <Powerstep01_FlagInterruptHandler>:
/******************************************************//**
 * @brief  Handlers of the flag interrupt which calls the user callback (if defined)
 * @retval None
 **********************************************************/
void Powerstep01_FlagInterruptHandler(void)
{
 8002df8:	b580      	push	{r7, lr}
 8002dfa:	af00      	add	r7, sp, #0
  if (flagInterruptCallback != 0)
 8002dfc:	4b07      	ldr	r3, [pc, #28]	@ (8002e1c <Powerstep01_FlagInterruptHandler+0x24>)
 8002dfe:	681b      	ldr	r3, [r3, #0]
 8002e00:	2b00      	cmp	r3, #0
 8002e02:	d008      	beq.n	8002e16 <Powerstep01_FlagInterruptHandler+0x1e>
  {
    /* Set isr flag */
    isrFlag = TRUE;
 8002e04:	4b06      	ldr	r3, [pc, #24]	@ (8002e20 <Powerstep01_FlagInterruptHandler+0x28>)
 8002e06:	2201      	movs	r2, #1
 8002e08:	701a      	strb	r2, [r3, #0]
    
    flagInterruptCallback();
 8002e0a:	4b04      	ldr	r3, [pc, #16]	@ (8002e1c <Powerstep01_FlagInterruptHandler+0x24>)
 8002e0c:	681b      	ldr	r3, [r3, #0]
 8002e0e:	4798      	blx	r3
    
    /* Reset isr flag */
    isrFlag = FALSE;   
 8002e10:	4b03      	ldr	r3, [pc, #12]	@ (8002e20 <Powerstep01_FlagInterruptHandler+0x28>)
 8002e12:	2200      	movs	r2, #0
 8002e14:	701a      	strb	r2, [r3, #0]
  }
}
 8002e16:	bf00      	nop
 8002e18:	bd80      	pop	{r7, pc}
 8002e1a:	bf00      	nop
 8002e1c:	20000874 	.word	0x20000874
 8002e20:	20000889 	.word	0x20000889

08002e24 <Powerstep01_SendCommand>:
 * POWERSTEP01_GET_STATUS)
 * @param[in] value arguments to send on 32 bits
 * @retval None
 **********************************************************/
void Powerstep01_SendCommand(uint8_t deviceId, uint8_t param, uint32_t value)
{
 8002e24:	b580      	push	{r7, lr}
 8002e26:	b084      	sub	sp, #16
 8002e28:	af00      	add	r7, sp, #0
 8002e2a:	4603      	mov	r3, r0
 8002e2c:	603a      	str	r2, [r7, #0]
 8002e2e:	71fb      	strb	r3, [r7, #7]
 8002e30:	460b      	mov	r3, r1
 8002e32:	71bb      	strb	r3, [r7, #6]
  if (numberOfDevices > deviceId)
 8002e34:	4b59      	ldr	r3, [pc, #356]	@ (8002f9c <Powerstep01_SendCommand+0x178>)
 8002e36:	781b      	ldrb	r3, [r3, #0]
 8002e38:	b2db      	uxtb	r3, r3
 8002e3a:	79fa      	ldrb	r2, [r7, #7]
 8002e3c:	429a      	cmp	r2, r3
 8002e3e:	f080 80a8 	bcs.w	8002f92 <Powerstep01_SendCommand+0x16e>
  {
    uint32_t loop;
    uint8_t maxArgumentNbBytes = 0;
 8002e42:	2300      	movs	r3, #0
 8002e44:	72fb      	strb	r3, [r7, #11]
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8002e46:	4b55      	ldr	r3, [pc, #340]	@ (8002f9c <Powerstep01_SendCommand+0x178>)
 8002e48:	781b      	ldrb	r3, [r3, #0]
 8002e4a:	b2da      	uxtb	r2, r3
 8002e4c:	79fb      	ldrb	r3, [r7, #7]
 8002e4e:	1ad3      	subs	r3, r2, r3
 8002e50:	b2db      	uxtb	r3, r3
 8002e52:	3b01      	subs	r3, #1
 8002e54:	727b      	strb	r3, [r7, #9]
    bool itDisable = FALSE; 
 8002e56:	2300      	movs	r3, #0
 8002e58:	72bb      	strb	r3, [r7, #10]
    
    do
    {
      spiPreemtionByIsr = FALSE;
 8002e5a:	4b51      	ldr	r3, [pc, #324]	@ (8002fa0 <Powerstep01_SendCommand+0x17c>)
 8002e5c:	2200      	movs	r2, #0
 8002e5e:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 8002e60:	7abb      	ldrb	r3, [r7, #10]
 8002e62:	2b00      	cmp	r3, #0
 8002e64:	d003      	beq.n	8002e6e <Powerstep01_SendCommand+0x4a>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 8002e66:	f000 fe87 	bl	8003b78 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	72bb      	strb	r3, [r7, #10]
      }    
      for (loop = 0; loop < numberOfDevices; loop++)
 8002e6e:	2300      	movs	r3, #0
 8002e70:	60fb      	str	r3, [r7, #12]
 8002e72:	e019      	b.n	8002ea8 <Powerstep01_SendCommand+0x84>
      {
          spiTxBursts[0][loop] = POWERSTEP01_NOP;
 8002e74:	4a4b      	ldr	r2, [pc, #300]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002e76:	68fb      	ldr	r3, [r7, #12]
 8002e78:	4413      	add	r3, r2
 8002e7a:	2200      	movs	r2, #0
 8002e7c:	701a      	strb	r2, [r3, #0]
          spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8002e7e:	4a49      	ldr	r2, [pc, #292]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002e80:	68fb      	ldr	r3, [r7, #12]
 8002e82:	4413      	add	r3, r2
 8002e84:	3301      	adds	r3, #1
 8002e86:	2200      	movs	r2, #0
 8002e88:	701a      	strb	r2, [r3, #0]
          spiTxBursts[2][loop] = POWERSTEP01_NOP;
 8002e8a:	4a46      	ldr	r2, [pc, #280]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002e8c:	68fb      	ldr	r3, [r7, #12]
 8002e8e:	4413      	add	r3, r2
 8002e90:	3302      	adds	r3, #2
 8002e92:	2200      	movs	r2, #0
 8002e94:	701a      	strb	r2, [r3, #0]
          spiTxBursts[3][loop] = POWERSTEP01_NOP;   
 8002e96:	4a43      	ldr	r2, [pc, #268]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002e98:	68fb      	ldr	r3, [r7, #12]
 8002e9a:	4413      	add	r3, r2
 8002e9c:	3303      	adds	r3, #3
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	701a      	strb	r2, [r3, #0]
      for (loop = 0; loop < numberOfDevices; loop++)
 8002ea2:	68fb      	ldr	r3, [r7, #12]
 8002ea4:	3301      	adds	r3, #1
 8002ea6:	60fb      	str	r3, [r7, #12]
 8002ea8:	4b3c      	ldr	r3, [pc, #240]	@ (8002f9c <Powerstep01_SendCommand+0x178>)
 8002eaa:	781b      	ldrb	r3, [r3, #0]
 8002eac:	b2db      	uxtb	r3, r3
 8002eae:	461a      	mov	r2, r3
 8002eb0:	68fb      	ldr	r3, [r7, #12]
 8002eb2:	4293      	cmp	r3, r2
 8002eb4:	d3de      	bcc.n	8002e74 <Powerstep01_SendCommand+0x50>
      }
      switch (param & DAISY_CHAIN_COMMAND_MASK)
 8002eb6:	79bb      	ldrb	r3, [r7, #6]
 8002eb8:	f003 03fa 	and.w	r3, r3, #250	@ 0xfa
 8002ebc:	2b8a      	cmp	r3, #138	@ 0x8a
 8002ebe:	d016      	beq.n	8002eee <Powerstep01_SendCommand+0xca>
 8002ec0:	2b8a      	cmp	r3, #138	@ 0x8a
 8002ec2:	dc32      	bgt.n	8002f2a <Powerstep01_SendCommand+0x106>
 8002ec4:	2b82      	cmp	r3, #130	@ 0x82
 8002ec6:	d012      	beq.n	8002eee <Powerstep01_SendCommand+0xca>
 8002ec8:	2b82      	cmp	r3, #130	@ 0x82
 8002eca:	dc2e      	bgt.n	8002f2a <Powerstep01_SendCommand+0x106>
 8002ecc:	2b68      	cmp	r3, #104	@ 0x68
 8002ece:	d00a      	beq.n	8002ee6 <Powerstep01_SendCommand+0xc2>
 8002ed0:	2b68      	cmp	r3, #104	@ 0x68
 8002ed2:	dc2a      	bgt.n	8002f2a <Powerstep01_SendCommand+0x106>
 8002ed4:	2b60      	cmp	r3, #96	@ 0x60
 8002ed6:	d006      	beq.n	8002ee6 <Powerstep01_SendCommand+0xc2>
 8002ed8:	2b60      	cmp	r3, #96	@ 0x60
 8002eda:	dc26      	bgt.n	8002f2a <Powerstep01_SendCommand+0x106>
 8002edc:	2b40      	cmp	r3, #64	@ 0x40
 8002ede:	d006      	beq.n	8002eee <Powerstep01_SendCommand+0xca>
 8002ee0:	2b50      	cmp	r3, #80	@ 0x50
 8002ee2:	d004      	beq.n	8002eee <Powerstep01_SendCommand+0xca>
 8002ee4:	e021      	b.n	8002f2a <Powerstep01_SendCommand+0x106>
      {
        case POWERSTEP01_GO_TO:
        case POWERSTEP01_GO_TO_DIR:
          value = value & POWERSTEP01_ABS_POS_VALUE_MASK;
 8002ee6:	683b      	ldr	r3, [r7, #0]
 8002ee8:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002eec:	603b      	str	r3, [r7, #0]
        case POWERSTEP01_RUN:
        case POWERSTEP01_MOVE:
        case POWERSTEP01_GO_UNTIL:
        case POWERSTEP01_GO_UNTIL_ACT_CPY:
          spiTxBursts[0][spiIndex] = param;
 8002eee:	7a7b      	ldrb	r3, [r7, #9]
 8002ef0:	492c      	ldr	r1, [pc, #176]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002ef2:	79ba      	ldrb	r2, [r7, #6]
 8002ef4:	54ca      	strb	r2, [r1, r3]
          spiTxBursts[1][spiIndex] = (uint8_t)(value >> 16);
 8002ef6:	683b      	ldr	r3, [r7, #0]
 8002ef8:	0c1a      	lsrs	r2, r3, #16
 8002efa:	7a7b      	ldrb	r3, [r7, #9]
 8002efc:	b2d1      	uxtb	r1, r2
 8002efe:	4a29      	ldr	r2, [pc, #164]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f00:	4413      	add	r3, r2
 8002f02:	460a      	mov	r2, r1
 8002f04:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 8002f06:	683b      	ldr	r3, [r7, #0]
 8002f08:	0a1a      	lsrs	r2, r3, #8
 8002f0a:	7a7b      	ldrb	r3, [r7, #9]
 8002f0c:	b2d1      	uxtb	r1, r2
 8002f0e:	4a25      	ldr	r2, [pc, #148]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f10:	4413      	add	r3, r2
 8002f12:	460a      	mov	r2, r1
 8002f14:	709a      	strb	r2, [r3, #2]
          spiTxBursts[3][spiIndex] = (uint8_t)(value);
 8002f16:	7a7b      	ldrb	r3, [r7, #9]
 8002f18:	683a      	ldr	r2, [r7, #0]
 8002f1a:	b2d1      	uxtb	r1, r2
 8002f1c:	4a21      	ldr	r2, [pc, #132]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f1e:	4413      	add	r3, r2
 8002f20:	460a      	mov	r2, r1
 8002f22:	70da      	strb	r2, [r3, #3]
          maxArgumentNbBytes = 3;
 8002f24:	2303      	movs	r3, #3
 8002f26:	72fb      	strb	r3, [r7, #11]
          break;
 8002f28:	e012      	b.n	8002f50 <Powerstep01_SendCommand+0x12c>
      default:
          spiTxBursts[0][spiIndex] = POWERSTEP01_NOP;
 8002f2a:	7a7b      	ldrb	r3, [r7, #9]
 8002f2c:	4a1d      	ldr	r2, [pc, #116]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f2e:	2100      	movs	r1, #0
 8002f30:	54d1      	strb	r1, [r2, r3]
          spiTxBursts[1][spiIndex] = POWERSTEP01_NOP;
 8002f32:	7a7b      	ldrb	r3, [r7, #9]
 8002f34:	4a1b      	ldr	r2, [pc, #108]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f36:	4413      	add	r3, r2
 8002f38:	2200      	movs	r2, #0
 8002f3a:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = POWERSTEP01_NOP;
 8002f3c:	7a7b      	ldrb	r3, [r7, #9]
 8002f3e:	4a19      	ldr	r2, [pc, #100]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f40:	4413      	add	r3, r2
 8002f42:	2200      	movs	r2, #0
 8002f44:	709a      	strb	r2, [r3, #2]
          spiTxBursts[3][spiIndex] = param;
 8002f46:	7a7b      	ldrb	r3, [r7, #9]
 8002f48:	4a16      	ldr	r2, [pc, #88]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f4a:	4413      	add	r3, r2
 8002f4c:	79ba      	ldrb	r2, [r7, #6]
 8002f4e:	70da      	strb	r2, [r3, #3]
      }
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 8002f50:	f000 fe09 	bl	8003b66 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 8002f54:	2301      	movs	r3, #1
 8002f56:	72bb      	strb	r3, [r7, #10]
    } while (spiPreemtionByIsr); // check pre-emption by ISR
 8002f58:	4b11      	ldr	r3, [pc, #68]	@ (8002fa0 <Powerstep01_SendCommand+0x17c>)
 8002f5a:	781b      	ldrb	r3, [r3, #0]
 8002f5c:	b2db      	uxtb	r3, r3
 8002f5e:	2b00      	cmp	r3, #0
 8002f60:	f47f af7b 	bne.w	8002e5a <Powerstep01_SendCommand+0x36>
    for (loop = POWERSTEP01_CMD_ARG_MAX_NB_BYTES - 1 - maxArgumentNbBytes; 
 8002f64:	7afb      	ldrb	r3, [r7, #11]
 8002f66:	f1c3 0303 	rsb	r3, r3, #3
 8002f6a:	60fb      	str	r3, [r7, #12]
 8002f6c:	e00c      	b.n	8002f88 <Powerstep01_SendCommand+0x164>
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
         loop++)
    {
       Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 8002f6e:	68fb      	ldr	r3, [r7, #12]
 8002f70:	4a0c      	ldr	r2, [pc, #48]	@ (8002fa4 <Powerstep01_SendCommand+0x180>)
 8002f72:	441a      	add	r2, r3
 8002f74:	68fb      	ldr	r3, [r7, #12]
 8002f76:	490c      	ldr	r1, [pc, #48]	@ (8002fa8 <Powerstep01_SendCommand+0x184>)
 8002f78:	440b      	add	r3, r1
 8002f7a:	4619      	mov	r1, r3
 8002f7c:	4610      	mov	r0, r2
 8002f7e:	f000 fb63 	bl	8003648 <Powerstep01_WriteBytes>
         loop++)
 8002f82:	68fb      	ldr	r3, [r7, #12]
 8002f84:	3301      	adds	r3, #1
 8002f86:	60fb      	str	r3, [r7, #12]
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
 8002f88:	68fb      	ldr	r3, [r7, #12]
 8002f8a:	2b03      	cmp	r3, #3
 8002f8c:	d9ef      	bls.n	8002f6e <Powerstep01_SendCommand+0x14a>
    }
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();
 8002f8e:	f000 fdf3 	bl	8003b78 <Powerstep01_Board_EnableIrq>
  }
}
 8002f92:	bf00      	nop
 8002f94:	3710      	adds	r7, #16
 8002f96:	46bd      	mov	sp, r7
 8002f98:	bd80      	pop	{r7, pc}
 8002f9a:	bf00      	nop
 8002f9c:	2000087c 	.word	0x2000087c
 8002fa0:	20000888 	.word	0x20000888
 8002fa4:	20000880 	.word	0x20000880
 8002fa8:	20000884 	.word	0x20000884

08002fac <Powerstep01_SetRegisterToPredefinedValues>:
 * from powerstep01_target_config.h
 * @param[in] deviceId (from 0 to 2)
 * @retval None
 **********************************************************/
void Powerstep01_SetRegisterToPredefinedValues(uint8_t deviceId)
{  
 8002fac:	b580      	push	{r7, lr}
 8002fae:	b084      	sub	sp, #16
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	4603      	mov	r3, r0
 8002fb4:	71fb      	strb	r3, [r7, #7]
  powerstep01_CmVm_t cmVm;
  
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ABS_POS, 0);
 8002fb6:	79fb      	ldrb	r3, [r7, #7]
 8002fb8:	2200      	movs	r2, #0
 8002fba:	2101      	movs	r1, #1
 8002fbc:	4618      	mov	r0, r3
 8002fbe:	f7ff f8ab 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_EL_POS, 0);
 8002fc2:	79fb      	ldrb	r3, [r7, #7]
 8002fc4:	2200      	movs	r2, #0
 8002fc6:	2102      	movs	r1, #2
 8002fc8:	4618      	mov	r0, r3
 8002fca:	f7ff f8a5 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MARK, 0);
 8002fce:	79fb      	ldrb	r3, [r7, #7]
 8002fd0:	2200      	movs	r2, #0
 8002fd2:	2103      	movs	r1, #3
 8002fd4:	4618      	mov	r0, r3
 8002fd6:	f7ff f89f 	bl	8002118 <Powerstep01_CmdSetParam>
  
  switch (deviceId)
 8002fda:	79fb      	ldrb	r3, [r7, #7]
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	f040 8120 	bne.w	8003222 <Powerstep01_SetRegisterToPredefinedValues+0x276>
  {
    case 0:
      cmVm = POWERSTEP01_CONF_PARAM_CM_VM_DEVICE_0;
 8002fe2:	2308      	movs	r3, #8
 8002fe4:	73fb      	strb	r3, [r7, #15]
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
        Powerstep01_AccDec_Steps_s2_to_RegVal(
 8002fe6:	ed9f 0a91 	vldr	s0, [pc, #580]	@ 800322c <Powerstep01_SetRegisterToPredefinedValues+0x280>
 8002fea:	f000 fb53 	bl	8003694 <Powerstep01_AccDec_Steps_s2_to_RegVal>
 8002fee:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
 8002ff0:	461a      	mov	r2, r3
 8002ff2:	79fb      	ldrb	r3, [r7, #7]
 8002ff4:	2105      	movs	r1, #5
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	f7ff f88e 	bl	8002118 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_ACC_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
        Powerstep01_AccDec_Steps_s2_to_RegVal(
 8002ffc:	ed9f 0a8b 	vldr	s0, [pc, #556]	@ 800322c <Powerstep01_SetRegisterToPredefinedValues+0x280>
 8003000:	f000 fb48 	bl	8003694 <Powerstep01_AccDec_Steps_s2_to_RegVal>
 8003004:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
 8003006:	461a      	mov	r2, r3
 8003008:	79fb      	ldrb	r3, [r7, #7]
 800300a:	2106      	movs	r1, #6
 800300c:	4618      	mov	r0, r3
 800300e:	f7ff f883 	bl	8002118 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_DEC_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
        Powerstep01_MaxSpd_Steps_s_to_RegVal(
 8003012:	ed9f 0a86 	vldr	s0, [pc, #536]	@ 800322c <Powerstep01_SetRegisterToPredefinedValues+0x280>
 8003016:	f000 fc77 	bl	8003908 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 800301a:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
 800301c:	461a      	mov	r2, r3
 800301e:	79fb      	ldrb	r3, [r7, #7]
 8003020:	2107      	movs	r1, #7
 8003022:	4618      	mov	r0, r3
 8003024:	f7ff f878 	bl	8002118 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_MAX_SPEED_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
        POWERSTEP01_CONF_PARAM_LSPD_BIT_DEVICE_0|
        Powerstep01_MinSpd_Steps_s_to_RegVal(
 8003028:	ed9f 0a81 	vldr	s0, [pc, #516]	@ 8003230 <Powerstep01_SetRegisterToPredefinedValues+0x284>
 800302c:	f000 fc9e 	bl	800396c <Powerstep01_MinSpd_Steps_s_to_RegVal>
 8003030:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
 8003032:	461a      	mov	r2, r3
 8003034:	79fb      	ldrb	r3, [r7, #7]
 8003036:	2108      	movs	r1, #8
 8003038:	4618      	mov	r0, r3
 800303a:	f7ff f86d 	bl	8002118 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_MIN_SPEED_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
        POWERSTEP01_CONF_PARAM_BOOST_MODE_DEVICE_0|
        Powerstep01_FSSpd_Steps_s_to_RegVal(
 800303e:	ed9f 0a7d 	vldr	s0, [pc, #500]	@ 8003234 <Powerstep01_SetRegisterToPredefinedValues+0x288>
 8003042:	f000 fb8d 	bl	8003760 <Powerstep01_FSSpd_Steps_s_to_RegVal>
 8003046:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
 8003048:	461a      	mov	r2, r3
 800304a:	79fb      	ldrb	r3, [r7, #7]
 800304c:	2115      	movs	r1, #21
 800304e:	4618      	mov	r0, r3
 8003050:	f7ff f862 	bl	8002118 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_FS_SPD_DEVICE_0)); 
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_OCD_TH,
 8003054:	79fb      	ldrb	r3, [r7, #7]
 8003056:	2208      	movs	r2, #8
 8003058:	2113      	movs	r1, #19
 800305a:	4618      	mov	r0, r3
 800305c:	f7ff f85c 	bl	8002118 <Powerstep01_CmdSetParam>
        (uint8_t)POWERSTEP01_CONF_PARAM_OCD_TH_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
 8003060:	79fb      	ldrb	r3, [r7, #7]
 8003062:	220b      	movs	r2, #11
 8003064:	2116      	movs	r1, #22
 8003066:	4618      	mov	r0, r3
 8003068:	f7ff f856 	bl	8002118 <Powerstep01_CmdSetParam>
        (uint8_t)POWERSTEP01_CONF_PARAM_SYNC_MODE_DEVICE_0 |
        (uint8_t)POWERSTEP01_CONF_PARAM_CM_VM_DEVICE_0|
        (uint8_t)POWERSTEP01_CONF_PARAM_STEP_MODE_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ALARM_EN,
 800306c:	79fb      	ldrb	r3, [r7, #7]
 800306e:	22ef      	movs	r2, #239	@ 0xef
 8003070:	2117      	movs	r1, #23
 8003072:	4618      	mov	r0, r3
 8003074:	f7ff f850 	bl	8002118 <Powerstep01_CmdSetParam>
        POWERSTEP01_CONF_PARAM_ALARM_EN_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG1,
 8003078:	79fb      	ldrb	r3, [r7, #7]
 800307a:	22c3      	movs	r2, #195	@ 0xc3
 800307c:	2118      	movs	r1, #24
 800307e:	4618      	mov	r0, r3
 8003080:	f7ff f84a 	bl	8002118 <Powerstep01_CmdSetParam>
        (uint16_t)POWERSTEP01_CONF_PARAM_IGATE_DEVICE_0 | 
        (uint16_t)POWERSTEP01_CONF_PARAM_TCC_DEVICE_0   | 
        (uint16_t)POWERSTEP01_CONF_PARAM_TBOOST_DEVICE_0|
        (uint16_t)POWERSTEP01_CONF_PARAM_WD_EN_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG2,
 8003084:	79fb      	ldrb	r3, [r7, #7]
 8003086:	2240      	movs	r2, #64	@ 0x40
 8003088:	2119      	movs	r1, #25
 800308a:	4618      	mov	r0, r3
 800308c:	f7ff f844 	bl	8002118 <Powerstep01_CmdSetParam>
        (uint16_t)POWERSTEP01_CONF_PARAM_TBLANK_DEVICE_0 | 
        (uint16_t)POWERSTEP01_CONF_PARAM_TDT_DEVICE_0);
      // Voltage mode
      if (cmVm == POWERSTEP01_CM_VM_VOLTAGE)
 8003090:	7bfb      	ldrb	r3, [r7, #15]
 8003092:	2b00      	cmp	r3, #0
 8003094:	d175      	bne.n	8003182 <Powerstep01_SetRegisterToPredefinedValues+0x1d6>
      {
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
          Powerstep01_IntSpd_Steps_s_to_RegVal(
 8003096:	ed9f 0a68 	vldr	s0, [pc, #416]	@ 8003238 <Powerstep01_SetRegisterToPredefinedValues+0x28c>
 800309a:	f000 fb95 	bl	80037c8 <Powerstep01_IntSpd_Steps_s_to_RegVal>
 800309e:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
 80030a0:	461a      	mov	r2, r3
 80030a2:	79fb      	ldrb	r3, [r7, #7]
 80030a4:	210d      	movs	r1, #13
 80030a6:	4618      	mov	r0, r3
 80030a8:	f7ff f836 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_INT_SPD_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
          Powerstep01_KTherm_Comp_to_RegVal(
 80030ac:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80030b0:	f000 fbbc 	bl	800382c <Powerstep01_KTherm_Comp_to_RegVal>
 80030b4:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
 80030b6:	461a      	mov	r2, r3
 80030b8:	79fb      	ldrb	r3, [r7, #7]
 80030ba:	2111      	movs	r1, #17
 80030bc:	4618      	mov	r0, r3
 80030be:	f7ff f82b 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_K_THERM_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
          Powerstep01_StallOcd_Th_to_RegVal(
 80030c2:	ed9f 0a5e 	vldr	s0, [pc, #376]	@ 800323c <Powerstep01_SetRegisterToPredefinedValues+0x290>
 80030c6:	f000 fc99 	bl	80039fc <Powerstep01_StallOcd_Th_to_RegVal>
 80030ca:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
 80030cc:	461a      	mov	r2, r3
 80030ce:	79fb      	ldrb	r3, [r7, #7]
 80030d0:	2114      	movs	r1, #20
 80030d2:	4618      	mov	r0, r3
 80030d4:	f7ff f820 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_STALL_TH_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
          Powerstep01_Kval_Perc_to_RegVal(
 80030d8:	ed9f 0a59 	vldr	s0, [pc, #356]	@ 8003240 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 80030dc:	f000 fbe2 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 80030e0:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
 80030e2:	461a      	mov	r2, r3
 80030e4:	79fb      	ldrb	r3, [r7, #7]
 80030e6:	2109      	movs	r1, #9
 80030e8:	4618      	mov	r0, r3
 80030ea:	f7ff f815 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_HOLD_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
          Powerstep01_Kval_Perc_to_RegVal(
 80030ee:	ed9f 0a54 	vldr	s0, [pc, #336]	@ 8003240 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 80030f2:	f000 fbd7 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 80030f6:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
 80030f8:	461a      	mov	r2, r3
 80030fa:	79fb      	ldrb	r3, [r7, #7]
 80030fc:	210a      	movs	r1, #10
 80030fe:	4618      	mov	r0, r3
 8003100:	f7ff f80a 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_RUN_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
          Powerstep01_Kval_Perc_to_RegVal(
 8003104:	ed9f 0a4e 	vldr	s0, [pc, #312]	@ 8003240 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 8003108:	f000 fbcc 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 800310c:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
 800310e:	461a      	mov	r2, r3
 8003110:	79fb      	ldrb	r3, [r7, #7]
 8003112:	210b      	movs	r1, #11
 8003114:	4618      	mov	r0, r3
 8003116:	f7fe ffff 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_ACC_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
          Powerstep01_Kval_Perc_to_RegVal(
 800311a:	ed9f 0a49 	vldr	s0, [pc, #292]	@ 8003240 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 800311e:	f000 fbc1 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 8003122:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
 8003124:	461a      	mov	r2, r3
 8003126:	79fb      	ldrb	r3, [r7, #7]
 8003128:	210c      	movs	r1, #12
 800312a:	4618      	mov	r0, r3
 800312c:	f7fe fff4 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_DEC_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
          Powerstep01_BEMFslope_Perc_to_RegVal(
 8003130:	ed9f 0a44 	vldr	s0, [pc, #272]	@ 8003244 <Powerstep01_SetRegisterToPredefinedValues+0x298>
 8003134:	f000 fae0 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 8003138:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
 800313a:	461a      	mov	r2, r3
 800313c:	79fb      	ldrb	r3, [r7, #7]
 800313e:	210e      	movs	r1, #14
 8003140:	4618      	mov	r0, r3
 8003142:	f7fe ffe9 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_ST_SLP_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
          Powerstep01_BEMFslope_Perc_to_RegVal(
 8003146:	ed9f 0a40 	vldr	s0, [pc, #256]	@ 8003248 <Powerstep01_SetRegisterToPredefinedValues+0x29c>
 800314a:	f000 fad5 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 800314e:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
 8003150:	461a      	mov	r2, r3
 8003152:	79fb      	ldrb	r3, [r7, #7]
 8003154:	210f      	movs	r1, #15
 8003156:	4618      	mov	r0, r3
 8003158:	f7fe ffde 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_FN_SLP_ACC_DEVICE_0));  
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
          Powerstep01_BEMFslope_Perc_to_RegVal(
 800315c:	ed9f 0a3a 	vldr	s0, [pc, #232]	@ 8003248 <Powerstep01_SetRegisterToPredefinedValues+0x29c>
 8003160:	f000 faca 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 8003164:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
 8003166:	461a      	mov	r2, r3
 8003168:	79fb      	ldrb	r3, [r7, #7]
 800316a:	2110      	movs	r1, #16
 800316c:	4618      	mov	r0, r3
 800316e:	f7fe ffd3 	bl	8002118 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_FN_SLP_DEC_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 8003172:	79fb      	ldrb	r3, [r7, #7]
 8003174:	f642 6208 	movw	r2, #11784	@ 0x2e08
 8003178:	211a      	movs	r1, #26
 800317a:	4618      	mov	r0, r3
 800317c:	f7fe ffcc 	bl	8002118 <Powerstep01_CmdSetParam>
          (uint16_t)POWERSTEP01_CONF_PARAM_UVLOVAL_DEVICE_0       | 
          (uint16_t)POWERSTEP01_CONF_PARAM_VCCVAL_DEVICE_0        | 
          (uint16_t)POWERSTEP01_CONF_PARAM_TSW_DEVICE_0           |
          (uint16_t)POWERSTEP01_CONF_PARAM_PRED_DEVICE_0);          
      }
      break;
 8003180:	e04e      	b.n	8003220 <Powerstep01_SetRegisterToPredefinedValues+0x274>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 8003182:	ed9f 0a32 	vldr	s0, [pc, #200]	@ 800324c <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 8003186:	f000 fc75 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 800318a:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_HOLD,
 800318c:	461a      	mov	r2, r3
 800318e:	79fb      	ldrb	r3, [r7, #7]
 8003190:	2109      	movs	r1, #9
 8003192:	4618      	mov	r0, r3
 8003194:	f7fe ffc0 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 8003198:	ed9f 0a2c 	vldr	s0, [pc, #176]	@ 800324c <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 800319c:	f000 fc6a 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 80031a0:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_RUN,
 80031a2:	461a      	mov	r2, r3
 80031a4:	79fb      	ldrb	r3, [r7, #7]
 80031a6:	210a      	movs	r1, #10
 80031a8:	4618      	mov	r0, r3
 80031aa:	f7fe ffb5 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 80031ae:	ed9f 0a27 	vldr	s0, [pc, #156]	@ 800324c <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 80031b2:	f000 fc5f 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 80031b6:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_ACC,
 80031b8:	461a      	mov	r2, r3
 80031ba:	79fb      	ldrb	r3, [r7, #7]
 80031bc:	210b      	movs	r1, #11
 80031be:	4618      	mov	r0, r3
 80031c0:	f7fe ffaa 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 80031c4:	ed9f 0a21 	vldr	s0, [pc, #132]	@ 800324c <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 80031c8:	f000 fc54 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 80031cc:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_DEC,
 80031ce:	461a      	mov	r2, r3
 80031d0:	79fb      	ldrb	r3, [r7, #7]
 80031d2:	210c      	movs	r1, #12
 80031d4:	4618      	mov	r0, r3
 80031d6:	f7fe ff9f 	bl	8002118 <Powerstep01_CmdSetParam>
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_T_FAST,
 80031da:	79fb      	ldrb	r3, [r7, #7]
 80031dc:	2235      	movs	r2, #53	@ 0x35
 80031de:	210e      	movs	r1, #14
 80031e0:	4618      	mov	r0, r3
 80031e2:	f7fe ff99 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80031e6:	eeb0 0a08 	vmov.f32	s0, #8	@ 0x40400000  3.0
 80031ea:	f000 fc7f 	bl	8003aec <Powerstep01_Tmin_Time_to_RegVal>
 80031ee:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TON_MIN,
 80031f0:	461a      	mov	r2, r3
 80031f2:	79fb      	ldrb	r3, [r7, #7]
 80031f4:	210f      	movs	r1, #15
 80031f6:	4618      	mov	r0, r3
 80031f8:	f7fe ff8e 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80031fc:	eeb3 0a05 	vmov.f32	s0, #53	@ 0x41a80000  21.0
 8003200:	f000 fc74 	bl	8003aec <Powerstep01_Tmin_Time_to_RegVal>
 8003204:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TOFF_MIN,
 8003206:	461a      	mov	r2, r3
 8003208:	79fb      	ldrb	r3, [r7, #7]
 800320a:	2110      	movs	r1, #16
 800320c:	4618      	mov	r0, r3
 800320e:	f7fe ff83 	bl	8002118 <Powerstep01_CmdSetParam>
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 8003212:	79fb      	ldrb	r3, [r7, #7]
 8003214:	f243 2208 	movw	r2, #12808	@ 0x3208
 8003218:	211a      	movs	r1, #26
 800321a:	4618      	mov	r0, r3
 800321c:	f7fe ff7c 	bl	8002118 <Powerstep01_CmdSetParam>
      break;
 8003220:	bf00      	nop
      }
      break;
#endif
    default: ;
  }
}
 8003222:	bf00      	nop
 8003224:	3710      	adds	r7, #16
 8003226:	46bd      	mov	sp, r7
 8003228:	bd80      	pop	{r7, pc}
 800322a:	bf00      	nop
 800322c:	44c80000 	.word	0x44c80000
 8003230:	00000000 	.word	0x00000000
 8003234:	451c4000 	.word	0x451c4000
 8003238:	42760c4a 	.word	0x42760c4a
 800323c:	4404d000 	.word	0x4404d000
 8003240:	418028f6 	.word	0x418028f6
 8003244:	3d1c432d 	.word	0x3d1c432d
 8003248:	3d801f75 	.word	0x3d801f75
 800324c:	43a40f5c 	.word	0x43a40f5c

08003250 <Powerstep01_SetDeviceParamsToGivenValues>:
 * parameters
 * @retval None
 **********************************************************/
void Powerstep01_SetDeviceParamsToGivenValues(uint8_t deviceId,
                                              powerstep01_Init_u_t *initPrm)
{
 8003250:	b590      	push	{r4, r7, lr}
 8003252:	b083      	sub	sp, #12
 8003254:	af00      	add	r7, sp, #0
 8003256:	4603      	mov	r3, r0
 8003258:	6039      	str	r1, [r7, #0]
 800325a:	71fb      	strb	r3, [r7, #7]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ABS_POS, 0);
 800325c:	79fb      	ldrb	r3, [r7, #7]
 800325e:	2200      	movs	r2, #0
 8003260:	2101      	movs	r1, #1
 8003262:	4618      	mov	r0, r3
 8003264:	f7fe ff58 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_EL_POS, 0);
 8003268:	79fb      	ldrb	r3, [r7, #7]
 800326a:	2200      	movs	r2, #0
 800326c:	2102      	movs	r1, #2
 800326e:	4618      	mov	r0, r3
 8003270:	f7fe ff52 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MARK, 0);
 8003274:	79fb      	ldrb	r3, [r7, #7]
 8003276:	2200      	movs	r2, #0
 8003278:	2103      	movs	r1, #3
 800327a:	4618      	mov	r0, r3
 800327c:	f7fe ff4c 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
    Powerstep01_AccDec_Steps_s2_to_RegVal(initPrm->cm.cp.acceleration));
 8003280:	683b      	ldr	r3, [r7, #0]
 8003282:	edd3 7a01 	vldr	s15, [r3, #4]
 8003286:	eeb0 0a67 	vmov.f32	s0, s15
 800328a:	f000 fa03 	bl	8003694 <Powerstep01_AccDec_Steps_s2_to_RegVal>
 800328e:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
 8003290:	461a      	mov	r2, r3
 8003292:	79fb      	ldrb	r3, [r7, #7]
 8003294:	2105      	movs	r1, #5
 8003296:	4618      	mov	r0, r3
 8003298:	f7fe ff3e 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
    Powerstep01_AccDec_Steps_s2_to_RegVal(initPrm->cm.cp.deceleration));
 800329c:	683b      	ldr	r3, [r7, #0]
 800329e:	edd3 7a02 	vldr	s15, [r3, #8]
 80032a2:	eeb0 0a67 	vmov.f32	s0, s15
 80032a6:	f000 f9f5 	bl	8003694 <Powerstep01_AccDec_Steps_s2_to_RegVal>
 80032aa:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
 80032ac:	461a      	mov	r2, r3
 80032ae:	79fb      	ldrb	r3, [r7, #7]
 80032b0:	2106      	movs	r1, #6
 80032b2:	4618      	mov	r0, r3
 80032b4:	f7fe ff30 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
    Powerstep01_MaxSpd_Steps_s_to_RegVal(initPrm->cm.cp.maxSpeed));
 80032b8:	683b      	ldr	r3, [r7, #0]
 80032ba:	edd3 7a03 	vldr	s15, [r3, #12]
 80032be:	eeb0 0a67 	vmov.f32	s0, s15
 80032c2:	f000 fb21 	bl	8003908 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 80032c6:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
 80032c8:	461a      	mov	r2, r3
 80032ca:	79fb      	ldrb	r3, [r7, #7]
 80032cc:	2107      	movs	r1, #7
 80032ce:	4618      	mov	r0, r3
 80032d0:	f7fe ff22 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
    initPrm->cm.cp.lowSpeedOptimization|
 80032d4:	683b      	ldr	r3, [r7, #0]
 80032d6:	8a9c      	ldrh	r4, [r3, #20]
    Powerstep01_MaxSpd_Steps_s_to_RegVal(initPrm->cm.cp.minSpeed));
 80032d8:	683b      	ldr	r3, [r7, #0]
 80032da:	edd3 7a04 	vldr	s15, [r3, #16]
 80032de:	eeb0 0a67 	vmov.f32	s0, s15
 80032e2:	f000 fb11 	bl	8003908 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 80032e6:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
 80032e8:	4323      	orrs	r3, r4
 80032ea:	b29b      	uxth	r3, r3
 80032ec:	461a      	mov	r2, r3
 80032ee:	79fb      	ldrb	r3, [r7, #7]
 80032f0:	2108      	movs	r1, #8
 80032f2:	4618      	mov	r0, r3
 80032f4:	f7fe ff10 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
    initPrm->cm.cp.boostMode|
 80032f8:	683b      	ldr	r3, [r7, #0]
 80032fa:	8b9c      	ldrh	r4, [r3, #28]
    Powerstep01_FSSpd_Steps_s_to_RegVal(initPrm->cm.cp.fullStepSpeed));
 80032fc:	683b      	ldr	r3, [r7, #0]
 80032fe:	edd3 7a06 	vldr	s15, [r3, #24]
 8003302:	eeb0 0a67 	vmov.f32	s0, s15
 8003306:	f000 fa2b 	bl	8003760 <Powerstep01_FSSpd_Steps_s_to_RegVal>
 800330a:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
 800330c:	4323      	orrs	r3, r4
 800330e:	b29b      	uxth	r3, r3
 8003310:	461a      	mov	r2, r3
 8003312:	79fb      	ldrb	r3, [r7, #7]
 8003314:	2115      	movs	r1, #21
 8003316:	4618      	mov	r0, r3
 8003318:	f7fe fefe 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_OCD_TH,
    Powerstep01_StallOcd_Th_to_RegVal(initPrm->cm.cp.ocdThreshold));
 800331c:	683b      	ldr	r3, [r7, #0]
 800331e:	edd3 7a08 	vldr	s15, [r3, #32]
 8003322:	eeb0 0a67 	vmov.f32	s0, s15
 8003326:	f000 fb69 	bl	80039fc <Powerstep01_StallOcd_Th_to_RegVal>
 800332a:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_OCD_TH,
 800332c:	461a      	mov	r2, r3
 800332e:	79fb      	ldrb	r3, [r7, #7]
 8003330:	2113      	movs	r1, #19
 8003332:	4618      	mov	r0, r3
 8003334:	f7fe fef0 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
    (uint8_t)initPrm->cm.cp.syncClockSelection|
 8003338:	683b      	ldr	r3, [r7, #0]
 800333a:	f893 2025 	ldrb.w	r2, [r3, #37]	@ 0x25
    (uint8_t)initPrm->cm.cp.cmVmSelection|
 800333e:	683b      	ldr	r3, [r7, #0]
 8003340:	781b      	ldrb	r3, [r3, #0]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
 8003342:	4313      	orrs	r3, r2
 8003344:	b2da      	uxtb	r2, r3
    (uint8_t)(uint8_t)initPrm->cm.cp.stepMode);
 8003346:	683b      	ldr	r3, [r7, #0]
 8003348:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
 800334c:	4313      	orrs	r3, r2
 800334e:	b2db      	uxtb	r3, r3
 8003350:	461a      	mov	r2, r3
 8003352:	79fb      	ldrb	r3, [r7, #7]
 8003354:	2116      	movs	r1, #22
 8003356:	4618      	mov	r0, r3
 8003358:	f7fe fede 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ALARM_EN,
    initPrm->cm.cp.alarmsSelection);
 800335c:	683b      	ldr	r3, [r7, #0]
 800335e:	f893 3026 	ldrb.w	r3, [r3, #38]	@ 0x26
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ALARM_EN,
 8003362:	461a      	mov	r2, r3
 8003364:	79fb      	ldrb	r3, [r7, #7]
 8003366:	2117      	movs	r1, #23
 8003368:	4618      	mov	r0, r3
 800336a:	f7fe fed5 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG1,
    (uint16_t)initPrm->cm.cp.iGate|
 800336e:	683b      	ldr	r3, [r7, #0]
 8003370:	f893 2027 	ldrb.w	r2, [r3, #39]	@ 0x27
    (uint16_t)initPrm->cm.cp.tcc|
 8003374:	683b      	ldr	r3, [r7, #0]
 8003376:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
    (uint16_t)initPrm->cm.cp.iGate|
 800337a:	4313      	orrs	r3, r2
 800337c:	b2db      	uxtb	r3, r3
 800337e:	461a      	mov	r2, r3
    (uint16_t)initPrm->cm.cp.tBoost|
 8003380:	683b      	ldr	r3, [r7, #0]
 8003382:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
    (uint16_t)initPrm->cm.cp.tcc|
 8003384:	4313      	orrs	r3, r2
    (uint16_t)initPrm->cm.cp.wdEn);
 8003386:	683a      	ldr	r2, [r7, #0]
 8003388:	8d92      	ldrh	r2, [r2, #44]	@ 0x2c
    (uint16_t)initPrm->cm.cp.tBoost|
 800338a:	4313      	orrs	r3, r2
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG1,
 800338c:	461a      	mov	r2, r3
 800338e:	79fb      	ldrb	r3, [r7, #7]
 8003390:	2118      	movs	r1, #24
 8003392:	4618      	mov	r0, r3
 8003394:	f7fe fec0 	bl	8002118 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG2,
    (uint16_t)initPrm->cm.cp.tBlank|
 8003398:	683b      	ldr	r3, [r7, #0]
 800339a:	f893 202e 	ldrb.w	r2, [r3, #46]	@ 0x2e
    (uint16_t)initPrm->cm.cp.tdt);  
 800339e:	683b      	ldr	r3, [r7, #0]
 80033a0:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG2,
 80033a4:	4313      	orrs	r3, r2
 80033a6:	b2db      	uxtb	r3, r3
 80033a8:	461a      	mov	r2, r3
 80033aa:	79fb      	ldrb	r3, [r7, #7]
 80033ac:	2119      	movs	r1, #25
 80033ae:	4618      	mov	r0, r3
 80033b0:	f7fe feb2 	bl	8002118 <Powerstep01_CmdSetParam>
  if (initPrm->cm.cp.cmVmSelection == POWERSTEP01_CM_VM_VOLTAGE)
 80033b4:	683b      	ldr	r3, [r7, #0]
 80033b6:	781b      	ldrb	r3, [r3, #0]
 80033b8:	2b00      	cmp	r3, #0
 80033ba:	f040 80b6 	bne.w	800352a <Powerstep01_SetDeviceParamsToGivenValues+0x2da>
  {
    //Voltage mode
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
      Powerstep01_IntSpd_Steps_s_to_RegVal(
 80033be:	683b      	ldr	r3, [r7, #0]
 80033c0:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 80033c4:	eeb0 0a67 	vmov.f32	s0, s15
 80033c8:	f000 f9fe 	bl	80037c8 <Powerstep01_IntSpd_Steps_s_to_RegVal>
 80033cc:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
 80033ce:	461a      	mov	r2, r3
 80033d0:	79fb      	ldrb	r3, [r7, #7]
 80033d2:	210d      	movs	r1, #13
 80033d4:	4618      	mov	r0, r3
 80033d6:	f7fe fe9f 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.intersectSpeed));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
      Powerstep01_KTherm_Comp_to_RegVal(
 80033da:	683b      	ldr	r3, [r7, #0]
 80033dc:	edd3 7a14 	vldr	s15, [r3, #80]	@ 0x50
 80033e0:	eeb0 0a67 	vmov.f32	s0, s15
 80033e4:	f000 fa22 	bl	800382c <Powerstep01_KTherm_Comp_to_RegVal>
 80033e8:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
 80033ea:	461a      	mov	r2, r3
 80033ec:	79fb      	ldrb	r3, [r7, #7]
 80033ee:	2111      	movs	r1, #17
 80033f0:	4618      	mov	r0, r3
 80033f2:	f7fe fe91 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.thermalCompensationFactor)); 
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
      Powerstep01_StallOcd_Th_to_RegVal(
 80033f6:	683b      	ldr	r3, [r7, #0]
 80033f8:	edd3 7a15 	vldr	s15, [r3, #84]	@ 0x54
 80033fc:	eeb0 0a67 	vmov.f32	s0, s15
 8003400:	f000 fafc 	bl	80039fc <Powerstep01_StallOcd_Th_to_RegVal>
 8003404:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
 8003406:	461a      	mov	r2, r3
 8003408:	79fb      	ldrb	r3, [r7, #7]
 800340a:	2114      	movs	r1, #20
 800340c:	4618      	mov	r0, r3
 800340e:	f7fe fe83 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.stallThreshold));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
      Powerstep01_Kval_Perc_to_RegVal(
 8003412:	683b      	ldr	r3, [r7, #0]
 8003414:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8003418:	eeb0 0a67 	vmov.f32	s0, s15
 800341c:	f000 fa42 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 8003420:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
 8003422:	461a      	mov	r2, r3
 8003424:	79fb      	ldrb	r3, [r7, #7]
 8003426:	2109      	movs	r1, #9
 8003428:	4618      	mov	r0, r3
 800342a:	f7fe fe75 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalHold));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
      Powerstep01_Kval_Perc_to_RegVal(
 800342e:	683b      	ldr	r3, [r7, #0]
 8003430:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8003434:	eeb0 0a67 	vmov.f32	s0, s15
 8003438:	f000 fa34 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 800343c:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
 800343e:	461a      	mov	r2, r3
 8003440:	79fb      	ldrb	r3, [r7, #7]
 8003442:	210a      	movs	r1, #10
 8003444:	4618      	mov	r0, r3
 8003446:	f7fe fe67 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalRun));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
      Powerstep01_Kval_Perc_to_RegVal(
 800344a:	683b      	ldr	r3, [r7, #0]
 800344c:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8003450:	eeb0 0a67 	vmov.f32	s0, s15
 8003454:	f000 fa26 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 8003458:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
 800345a:	461a      	mov	r2, r3
 800345c:	79fb      	ldrb	r3, [r7, #7]
 800345e:	210b      	movs	r1, #11
 8003460:	4618      	mov	r0, r3
 8003462:	f7fe fe59 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalAcc));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
      Powerstep01_Kval_Perc_to_RegVal(
 8003466:	683b      	ldr	r3, [r7, #0]
 8003468:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 800346c:	eeb0 0a67 	vmov.f32	s0, s15
 8003470:	f000 fa18 	bl	80038a4 <Powerstep01_Kval_Perc_to_RegVal>
 8003474:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
 8003476:	461a      	mov	r2, r3
 8003478:	79fb      	ldrb	r3, [r7, #7]
 800347a:	210c      	movs	r1, #12
 800347c:	4618      	mov	r0, r3
 800347e:	f7fe fe4b 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalDec));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
      Powerstep01_BEMFslope_Perc_to_RegVal(
 8003482:	683b      	ldr	r3, [r7, #0]
 8003484:	edd3 7a11 	vldr	s15, [r3, #68]	@ 0x44
 8003488:	eeb0 0a67 	vmov.f32	s0, s15
 800348c:	f000 f934 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 8003490:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
 8003492:	461a      	mov	r2, r3
 8003494:	79fb      	ldrb	r3, [r7, #7]
 8003496:	210e      	movs	r1, #14
 8003498:	4618      	mov	r0, r3
 800349a:	f7fe fe3d 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.startSlope));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
      Powerstep01_BEMFslope_Perc_to_RegVal(
 800349e:	683b      	ldr	r3, [r7, #0]
 80034a0:	edd3 7a12 	vldr	s15, [r3, #72]	@ 0x48
 80034a4:	eeb0 0a67 	vmov.f32	s0, s15
 80034a8:	f000 f926 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 80034ac:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
 80034ae:	461a      	mov	r2, r3
 80034b0:	79fb      	ldrb	r3, [r7, #7]
 80034b2:	210f      	movs	r1, #15
 80034b4:	4618      	mov	r0, r3
 80034b6:	f7fe fe2f 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.accelerationFinalSlope));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
      Powerstep01_BEMFslope_Perc_to_RegVal(
 80034ba:	683b      	ldr	r3, [r7, #0]
 80034bc:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 80034c0:	eeb0 0a67 	vmov.f32	s0, s15
 80034c4:	f000 f918 	bl	80036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>
 80034c8:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
 80034ca:	461a      	mov	r2, r3
 80034cc:	79fb      	ldrb	r3, [r7, #7]
 80034ce:	2110      	movs	r1, #16
 80034d0:	4618      	mov	r0, r3
 80034d2:	f7fe fe21 	bl	8002118 <Powerstep01_CmdSetParam>
        initPrm->vm.decelerationFinalSlope));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
      (uint16_t)initPrm->vm.oscClkSel| 
 80034d6:	683b      	ldr	r3, [r7, #0]
 80034d8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
      (uint16_t)initPrm->vm.swMode | 
 80034dc:	683b      	ldr	r3, [r7, #0]
 80034de:	f893 3059 	ldrb.w	r3, [r3, #89]	@ 0x59
      (uint16_t)initPrm->vm.enVsComp| 
 80034e2:	4313      	orrs	r3, r2
 80034e4:	b2da      	uxtb	r2, r3
 80034e6:	683b      	ldr	r3, [r7, #0]
 80034e8:	f893 305a 	ldrb.w	r3, [r3, #90]	@ 0x5a
 80034ec:	4313      	orrs	r3, r2
 80034ee:	b2da      	uxtb	r2, r3
      (uint16_t)initPrm->vm.ocSd| 
 80034f0:	683b      	ldr	r3, [r7, #0]
 80034f2:	f893 305b 	ldrb.w	r3, [r3, #91]	@ 0x5b
      (uint16_t)initPrm->vm.enVsComp| 
 80034f6:	4313      	orrs	r3, r2
 80034f8:	b2db      	uxtb	r3, r3
 80034fa:	461a      	mov	r2, r3
      (uint16_t)initPrm->vm.uvloVal| 
 80034fc:	683b      	ldr	r3, [r7, #0]
 80034fe:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
      (uint16_t)initPrm->vm.ocSd| 
 8003502:	4313      	orrs	r3, r2
      (uint16_t)initPrm->vm.vccVal| 
 8003504:	683a      	ldr	r2, [r7, #0]
 8003506:	f8b2 205e 	ldrh.w	r2, [r2, #94]	@ 0x5e
      (uint16_t)initPrm->vm.uvloVal| 
 800350a:	4313      	orrs	r3, r2
      (uint16_t)initPrm->vm.fPwmInt| 
 800350c:	683a      	ldr	r2, [r7, #0]
 800350e:	f8b2 2060 	ldrh.w	r2, [r2, #96]	@ 0x60
      (uint16_t)initPrm->vm.vccVal| 
 8003512:	4313      	orrs	r3, r2
      (uint16_t)initPrm->vm.fPwmDec);
 8003514:	683a      	ldr	r2, [r7, #0]
 8003516:	f8b2 2062 	ldrh.w	r2, [r2, #98]	@ 0x62
      (uint16_t)initPrm->vm.fPwmInt| 
 800351a:	4313      	orrs	r3, r2
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 800351c:	461a      	mov	r2, r3
 800351e:	79fb      	ldrb	r3, [r7, #7]
 8003520:	211a      	movs	r1, #26
 8003522:	4618      	mov	r0, r3
 8003524:	f7fe fdf8 	bl	8002118 <Powerstep01_CmdSetParam>
          (uint16_t)initPrm->cm.uvloVal| 
          (uint16_t)initPrm->cm.vccVal|
          (uint16_t)initPrm->cm.tsw|
          (uint16_t)initPrm->cm.predEn);
  }
}
 8003528:	e08a      	b.n	8003640 <Powerstep01_SetDeviceParamsToGivenValues+0x3f0>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 800352a:	683b      	ldr	r3, [r7, #0]
 800352c:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8003530:	eeb0 0a67 	vmov.f32	s0, s15
 8003534:	f000 fa9e 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 8003538:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_HOLD,
 800353a:	461a      	mov	r2, r3
 800353c:	79fb      	ldrb	r3, [r7, #7]
 800353e:	2109      	movs	r1, #9
 8003540:	4618      	mov	r0, r3
 8003542:	f7fe fde9 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 8003546:	683b      	ldr	r3, [r7, #0]
 8003548:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 800354c:	eeb0 0a67 	vmov.f32	s0, s15
 8003550:	f000 fa90 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 8003554:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_RUN,
 8003556:	461a      	mov	r2, r3
 8003558:	79fb      	ldrb	r3, [r7, #7]
 800355a:	210a      	movs	r1, #10
 800355c:	4618      	mov	r0, r3
 800355e:	f7fe fddb 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 8003562:	683b      	ldr	r3, [r7, #0]
 8003564:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8003568:	eeb0 0a67 	vmov.f32	s0, s15
 800356c:	f000 fa82 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 8003570:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_ACC,
 8003572:	461a      	mov	r2, r3
 8003574:	79fb      	ldrb	r3, [r7, #7]
 8003576:	210b      	movs	r1, #11
 8003578:	4618      	mov	r0, r3
 800357a:	f7fe fdcd 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 800357e:	683b      	ldr	r3, [r7, #0]
 8003580:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 8003584:	eeb0 0a67 	vmov.f32	s0, s15
 8003588:	f000 fa74 	bl	8003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>
 800358c:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_DEC,
 800358e:	461a      	mov	r2, r3
 8003590:	79fb      	ldrb	r3, [r7, #7]
 8003592:	210c      	movs	r1, #12
 8003594:	4618      	mov	r0, r3
 8003596:	f7fe fdbf 	bl	8002118 <Powerstep01_CmdSetParam>
          (uint8_t)initPrm->cm.toffFast|
 800359a:	683b      	ldr	r3, [r7, #0]
 800359c:	f893 2040 	ldrb.w	r2, [r3, #64]	@ 0x40
          (uint8_t)initPrm->cm.fastStep);
 80035a0:	683b      	ldr	r3, [r7, #0]
 80035a2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_T_FAST,
 80035a6:	4313      	orrs	r3, r2
 80035a8:	b2db      	uxtb	r3, r3
 80035aa:	461a      	mov	r2, r3
 80035ac:	79fb      	ldrb	r3, [r7, #7]
 80035ae:	210e      	movs	r1, #14
 80035b0:	4618      	mov	r0, r3
 80035b2:	f7fe fdb1 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80035b6:	683b      	ldr	r3, [r7, #0]
 80035b8:	edd3 7a11 	vldr	s15, [r3, #68]	@ 0x44
 80035bc:	eeb0 0a67 	vmov.f32	s0, s15
 80035c0:	f000 fa94 	bl	8003aec <Powerstep01_Tmin_Time_to_RegVal>
 80035c4:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TON_MIN,
 80035c6:	461a      	mov	r2, r3
 80035c8:	79fb      	ldrb	r3, [r7, #7]
 80035ca:	210f      	movs	r1, #15
 80035cc:	4618      	mov	r0, r3
 80035ce:	f7fe fda3 	bl	8002118 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80035d2:	683b      	ldr	r3, [r7, #0]
 80035d4:	edd3 7a12 	vldr	s15, [r3, #72]	@ 0x48
 80035d8:	eeb0 0a67 	vmov.f32	s0, s15
 80035dc:	f000 fa86 	bl	8003aec <Powerstep01_Tmin_Time_to_RegVal>
 80035e0:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TOFF_MIN,
 80035e2:	461a      	mov	r2, r3
 80035e4:	79fb      	ldrb	r3, [r7, #7]
 80035e6:	2110      	movs	r1, #16
 80035e8:	4618      	mov	r0, r3
 80035ea:	f7fe fd95 	bl	8002118 <Powerstep01_CmdSetParam>
          (uint16_t)initPrm->cm.oscClkSel| 
 80035ee:	683b      	ldr	r3, [r7, #0]
 80035f0:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
          (uint16_t)initPrm->cm.swMode| 
 80035f4:	683b      	ldr	r3, [r7, #0]
 80035f6:	f893 304d 	ldrb.w	r3, [r3, #77]	@ 0x4d
          (uint16_t)initPrm->cm.tqReg| 
 80035fa:	4313      	orrs	r3, r2
 80035fc:	b2da      	uxtb	r2, r3
 80035fe:	683b      	ldr	r3, [r7, #0]
 8003600:	f893 304e 	ldrb.w	r3, [r3, #78]	@ 0x4e
 8003604:	4313      	orrs	r3, r2
 8003606:	b2da      	uxtb	r2, r3
          (uint16_t)initPrm->cm.ocSd| 
 8003608:	683b      	ldr	r3, [r7, #0]
 800360a:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
          (uint16_t)initPrm->cm.tqReg| 
 800360e:	4313      	orrs	r3, r2
 8003610:	b2db      	uxtb	r3, r3
 8003612:	461a      	mov	r2, r3
          (uint16_t)initPrm->cm.uvloVal| 
 8003614:	683b      	ldr	r3, [r7, #0]
 8003616:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
          (uint16_t)initPrm->cm.ocSd| 
 800361a:	4313      	orrs	r3, r2
          (uint16_t)initPrm->cm.vccVal|
 800361c:	683a      	ldr	r2, [r7, #0]
 800361e:	f8b2 2054 	ldrh.w	r2, [r2, #84]	@ 0x54
          (uint16_t)initPrm->cm.uvloVal| 
 8003622:	4313      	orrs	r3, r2
          (uint16_t)initPrm->cm.tsw|
 8003624:	683a      	ldr	r2, [r7, #0]
 8003626:	f8b2 2056 	ldrh.w	r2, [r2, #86]	@ 0x56
          (uint16_t)initPrm->cm.vccVal|
 800362a:	4313      	orrs	r3, r2
          (uint16_t)initPrm->cm.predEn);
 800362c:	683a      	ldr	r2, [r7, #0]
 800362e:	f8b2 2058 	ldrh.w	r2, [r2, #88]	@ 0x58
          (uint16_t)initPrm->cm.tsw|
 8003632:	4313      	orrs	r3, r2
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 8003634:	461a      	mov	r2, r3
 8003636:	79fb      	ldrb	r3, [r7, #7]
 8003638:	211a      	movs	r1, #26
 800363a:	4618      	mov	r0, r3
 800363c:	f7fe fd6c 	bl	8002118 <Powerstep01_CmdSetParam>
}
 8003640:	bf00      	nop
 8003642:	370c      	adds	r7, #12
 8003644:	46bd      	mov	sp, r7
 8003646:	bd90      	pop	{r4, r7, pc}

08003648 <Powerstep01_WriteBytes>:
 * @param[in] pByteToTransmit pointer to the byte to transmit
 * @param[in] pReceivedByte pointer to the received byte
 * @retval None
 *********************************************************/
void Powerstep01_WriteBytes(uint8_t *pByteToTransmit, uint8_t *pReceivedByte)
{
 8003648:	b580      	push	{r7, lr}
 800364a:	b082      	sub	sp, #8
 800364c:	af00      	add	r7, sp, #0
 800364e:	6078      	str	r0, [r7, #4]
 8003650:	6039      	str	r1, [r7, #0]
  if (Powerstep01_Board_SpiWriteBytes(pByteToTransmit, pReceivedByte, numberOfDevices) != 0)
 8003652:	4b0d      	ldr	r3, [pc, #52]	@ (8003688 <Powerstep01_WriteBytes+0x40>)
 8003654:	781b      	ldrb	r3, [r3, #0]
 8003656:	b2db      	uxtb	r3, r3
 8003658:	461a      	mov	r2, r3
 800365a:	6839      	ldr	r1, [r7, #0]
 800365c:	6878      	ldr	r0, [r7, #4]
 800365e:	f000 fbf9 	bl	8003e54 <Powerstep01_Board_SpiWriteBytes>
 8003662:	4603      	mov	r3, r0
 8003664:	2b00      	cmp	r3, #0
 8003666:	d003      	beq.n	8003670 <Powerstep01_WriteBytes+0x28>
  {
    Powerstep01_ErrorHandler(POWERSTEP01_ERROR_1);
 8003668:	f24b 0001 	movw	r0, #45057	@ 0xb001
 800366c:	f7ff fbae 	bl	8002dcc <Powerstep01_ErrorHandler>
  }
  
  if (isrFlag)
 8003670:	4b06      	ldr	r3, [pc, #24]	@ (800368c <Powerstep01_WriteBytes+0x44>)
 8003672:	781b      	ldrb	r3, [r3, #0]
 8003674:	b2db      	uxtb	r3, r3
 8003676:	2b00      	cmp	r3, #0
 8003678:	d002      	beq.n	8003680 <Powerstep01_WriteBytes+0x38>
  {
    spiPreemtionByIsr = TRUE;
 800367a:	4b05      	ldr	r3, [pc, #20]	@ (8003690 <Powerstep01_WriteBytes+0x48>)
 800367c:	2201      	movs	r2, #1
 800367e:	701a      	strb	r2, [r3, #0]
  }
}                     
 8003680:	bf00      	nop
 8003682:	3708      	adds	r7, #8
 8003684:	46bd      	mov	sp, r7
 8003686:	bd80      	pop	{r7, pc}
 8003688:	2000087c 	.word	0x2000087c
 800368c:	20000889 	.word	0x20000889
 8003690:	20000888 	.word	0x20000888

08003694 <Powerstep01_AccDec_Steps_s2_to_RegVal>:
 * @param[in] steps_s2 the acceleration or deceleration as
 * steps/s^2, range 14.55 to 59590 steps/s^2
 * @retval The acceleration or deceleration as steps/tick^2
 **********************************************************/
inline uint16_t Powerstep01_AccDec_Steps_s2_to_RegVal(float steps_s2)
{
 8003694:	b480      	push	{r7}
 8003696:	b083      	sub	sp, #12
 8003698:	af00      	add	r7, sp, #0
 800369a:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s2)*0.068719476736f)+0.5f));
 800369e:	edd7 7a01 	vldr	s15, [r7, #4]
 80036a2:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 80036c8 <Powerstep01_AccDec_Steps_s2_to_RegVal+0x34>
 80036a6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80036aa:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80036ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80036b2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80036b6:	ee17 3a90 	vmov	r3, s15
 80036ba:	b29b      	uxth	r3, r3
}
 80036bc:	4618      	mov	r0, r3
 80036be:	370c      	adds	r7, #12
 80036c0:	46bd      	mov	sp, r7
 80036c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036c6:	4770      	bx	lr
 80036c8:	3d8cbccc 	.word	0x3d8cbccc

080036cc <Powerstep01_AccDec_RegVal_to_Steps_s2>:
 * @brief Convert the ACC or DEC register value into step/s^2
 * @param[in] regVal The ACC or DEC register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_AccDec_RegVal_to_Steps_s2(uint32_t regVal)
{
 80036cc:	b480      	push	{r7}
 80036ce:	b083      	sub	sp, #12
 80036d0:	af00      	add	r7, sp, #0
 80036d2:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*14.5519152283f);
 80036d4:	687b      	ldr	r3, [r7, #4]
 80036d6:	ee07 3a90 	vmov	s15, r3
 80036da:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80036de:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 80036f4 <Powerstep01_AccDec_RegVal_to_Steps_s2+0x28>
 80036e2:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 80036e6:	eeb0 0a67 	vmov.f32	s0, s15
 80036ea:	370c      	adds	r7, #12
 80036ec:	46bd      	mov	sp, r7
 80036ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036f2:	4770      	bx	lr
 80036f4:	4168d4a5 	.word	0x4168d4a5

080036f8 <Powerstep01_BEMFslope_Perc_to_RegVal>:
 * @param[in] percentage BEMF compensation slope percentage,
 * range 0 to 0.4% (0.004) s/step
 * @retval value for ST_SLP, FN_SLP_ACC or FN_SLP_DEC register
 **********************************************************/
inline uint8_t Powerstep01_BEMFslope_Perc_to_RegVal(float percentage)
{
 80036f8:	b480      	push	{r7}
 80036fa:	b083      	sub	sp, #12
 80036fc:	af00      	add	r7, sp, #0
 80036fe:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)(((float)(percentage)*637.5f)+0.5f));
 8003702:	edd7 7a01 	vldr	s15, [r7, #4]
 8003706:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 8003730 <Powerstep01_BEMFslope_Perc_to_RegVal+0x38>
 800370a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800370e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003712:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003716:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800371a:	edc7 7a00 	vstr	s15, [r7]
 800371e:	783b      	ldrb	r3, [r7, #0]
 8003720:	b2db      	uxtb	r3, r3
}
 8003722:	4618      	mov	r0, r3
 8003724:	370c      	adds	r7, #12
 8003726:	46bd      	mov	sp, r7
 8003728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800372c:	4770      	bx	lr
 800372e:	bf00      	nop
 8003730:	441f6000 	.word	0x441f6000

08003734 <Powerstep01_BEMFslope_RegVal_to_Perc>:
 * @param[in] regVal The ST_SLP, FN_SLP_ACC or FN_SLP_DEC
 * register value
 * @retval BEMF compensation slope percentage
 **********************************************************/
inline float Powerstep01_BEMFslope_RegVal_to_Perc(uint32_t regVal)
{
 8003734:	b480      	push	{r7}
 8003736:	b083      	sub	sp, #12
 8003738:	af00      	add	r7, sp, #0
 800373a:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.00156862745098f);
 800373c:	687b      	ldr	r3, [r7, #4]
 800373e:	ee07 3a90 	vmov	s15, r3
 8003742:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003746:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 800375c <Powerstep01_BEMFslope_RegVal_to_Perc+0x28>
 800374a:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 800374e:	eeb0 0a67 	vmov.f32	s0, s15
 8003752:	370c      	adds	r7, #12
 8003754:	46bd      	mov	sp, r7
 8003756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800375a:	4770      	bx	lr
 800375c:	3acd9a67 	.word	0x3acd9a67

08003760 <Powerstep01_FSSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 15.25 to 15610 steps/s
 * @retval The speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_FSSpd_Steps_s_to_RegVal(float steps_s)
{
 8003760:	b480      	push	{r7}
 8003762:	b083      	sub	sp, #12
 8003764:	af00      	add	r7, sp, #0
 8003766:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)((float)(steps_s)*0.065536f));
 800376a:	edd7 7a01 	vldr	s15, [r7, #4]
 800376e:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 800378c <Powerstep01_FSSpd_Steps_s_to_RegVal+0x2c>
 8003772:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003776:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800377a:	ee17 3a90 	vmov	r3, s15
 800377e:	b29b      	uxth	r3, r3
}
 8003780:	4618      	mov	r0, r3
 8003782:	370c      	adds	r7, #12
 8003784:	46bd      	mov	sp, r7
 8003786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800378a:	4770      	bx	lr
 800378c:	3d8637bd 	.word	0x3d8637bd

08003790 <Powerstep01_FSSpd_RegVal_to_Steps_s>:
 * @brief Convert the FS_SPD register value into step/s
 * @param[in] regVal The FS_SPD register value
 * @retval The full Step speed as steps/s
 **********************************************************/
inline float Powerstep01_FSSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003790:	b480      	push	{r7}
 8003792:	b083      	sub	sp, #12
 8003794:	af00      	add	r7, sp, #0
 8003796:	6078      	str	r0, [r7, #4]
  return (((float)regVal+0.999f)*15.258789f);
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	ee07 3a90 	vmov	s15, r3
 800379e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80037a2:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 80037c0 <Powerstep01_FSSpd_RegVal_to_Steps_s+0x30>
 80037a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80037aa:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 80037c4 <Powerstep01_FSSpd_RegVal_to_Steps_s+0x34>
 80037ae:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 80037b2:	eeb0 0a67 	vmov.f32	s0, s15
 80037b6:	370c      	adds	r7, #12
 80037b8:	46bd      	mov	sp, r7
 80037ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037be:	4770      	bx	lr
 80037c0:	3f7fbe77 	.word	0x3f7fbe77
 80037c4:	41742400 	.word	0x41742400

080037c8 <Powerstep01_IntSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 0 to 976.5 steps/s
 * @retval The intersect speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_IntSpd_Steps_s_to_RegVal(float steps_s)
{
 80037c8:	b480      	push	{r7}
 80037ca:	b083      	sub	sp, #12
 80037cc:	af00      	add	r7, sp, #0
 80037ce:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s)*16.777216f)+0.5f));
 80037d2:	edd7 7a01 	vldr	s15, [r7, #4]
 80037d6:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 80037fc <Powerstep01_IntSpd_Steps_s_to_RegVal+0x34>
 80037da:	ee67 7a87 	vmul.f32	s15, s15, s14
 80037de:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80037e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80037e6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80037ea:	ee17 3a90 	vmov	r3, s15
 80037ee:	b29b      	uxth	r3, r3
}
 80037f0:	4618      	mov	r0, r3
 80037f2:	370c      	adds	r7, #12
 80037f4:	46bd      	mov	sp, r7
 80037f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037fa:	4770      	bx	lr
 80037fc:	418637bd 	.word	0x418637bd

08003800 <Powerstep01_IntSpd_RegVal_to_Steps_s>:
 * @brief Convert the INT_SPEED register value into step/s
 * @param[in] regVal The INT_SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_IntSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003800:	b480      	push	{r7}
 8003802:	b083      	sub	sp, #12
 8003804:	af00      	add	r7, sp, #0
 8003806:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.0596045f);
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	ee07 3a90 	vmov	s15, r3
 800380e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003812:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003828 <Powerstep01_IntSpd_RegVal_to_Steps_s+0x28>
 8003816:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 800381a:	eeb0 0a67 	vmov.f32	s0, s15
 800381e:	370c      	adds	r7, #12
 8003820:	46bd      	mov	sp, r7
 8003822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003826:	4770      	bx	lr
 8003828:	3d7423d9 	.word	0x3d7423d9

0800382c <Powerstep01_KTherm_Comp_to_RegVal>:
 * @param[in] compFactor the float formatted thermal 
 * compensation factor, range 1 to 1.46875
 * @retval value for K_THERM register
 **********************************************************/
inline uint8_t Powerstep01_KTherm_Comp_to_RegVal(float compFactor)
{
 800382c:	b480      	push	{r7}
 800382e:	b083      	sub	sp, #12
 8003830:	af00      	add	r7, sp, #0
 8003832:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(compFactor)-1.0f)*32.0f)+0.5f));
 8003836:	edd7 7a01 	vldr	s15, [r7, #4]
 800383a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800383e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003842:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 800386c <Powerstep01_KTherm_Comp_to_RegVal+0x40>
 8003846:	ee67 7a87 	vmul.f32	s15, s15, s14
 800384a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800384e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003852:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003856:	edc7 7a00 	vstr	s15, [r7]
 800385a:	783b      	ldrb	r3, [r7, #0]
 800385c:	b2db      	uxtb	r3, r3
}
 800385e:	4618      	mov	r0, r3
 8003860:	370c      	adds	r7, #12
 8003862:	46bd      	mov	sp, r7
 8003864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003868:	4770      	bx	lr
 800386a:	bf00      	nop
 800386c:	42000000 	.word	0x42000000

08003870 <Powerstep01_KTherm_RegVal_to_Comp>:
 * formatted thermal compensation factor
 * @param[in] regVal The K_THERM register value
 * @retval The float formatted thermal compensation factor
 **********************************************************/
inline float Powerstep01_KTherm_RegVal_to_Comp(uint32_t regVal)
{
 8003870:	b480      	push	{r7}
 8003872:	b083      	sub	sp, #12
 8003874:	af00      	add	r7, sp, #0
 8003876:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.03125f+1);
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	ee07 3a90 	vmov	s15, r3
 800387e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003882:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 80038a0 <Powerstep01_KTherm_RegVal_to_Comp+0x30>
 8003886:	ee67 7a87 	vmul.f32	s15, s15, s14
 800388a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800388e:	ee77 7a87 	vadd.f32	s15, s15, s14
}
 8003892:	eeb0 0a67 	vmov.f32	s0, s15
 8003896:	370c      	adds	r7, #12
 8003898:	46bd      	mov	sp, r7
 800389a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800389e:	4770      	bx	lr
 80038a0:	3d000000 	.word	0x3d000000

080038a4 <Powerstep01_Kval_Perc_to_RegVal>:
 * @retval value for KVAL_RUN, KVAL_HOLD, KVAL_ACC or
 * KVAL_DEC register
 * @note The voltage applied is sinusoidal
 **********************************************************/
inline uint8_t Powerstep01_Kval_Perc_to_RegVal(float percentage)
{
 80038a4:	b480      	push	{r7}
 80038a6:	b083      	sub	sp, #12
 80038a8:	af00      	add	r7, sp, #0
 80038aa:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)(((float)(percentage)*2.56f)+0.5f));
 80038ae:	edd7 7a01 	vldr	s15, [r7, #4]
 80038b2:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 80038dc <Powerstep01_Kval_Perc_to_RegVal+0x38>
 80038b6:	ee67 7a87 	vmul.f32	s15, s15, s14
 80038ba:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 80038be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80038c2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80038c6:	edc7 7a00 	vstr	s15, [r7]
 80038ca:	783b      	ldrb	r3, [r7, #0]
 80038cc:	b2db      	uxtb	r3, r3
}
 80038ce:	4618      	mov	r0, r3
 80038d0:	370c      	adds	r7, #12
 80038d2:	46bd      	mov	sp, r7
 80038d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038d8:	4770      	bx	lr
 80038da:	bf00      	nop
 80038dc:	4023d70a 	.word	0x4023d70a

080038e0 <Powerstep01_Kval_RegVal_to_Perc>:
 * @retval percentage of the power supply voltage applied to
 * the motor windings
 * @note The voltage applied is sinusoidal
 **********************************************************/
inline float Powerstep01_Kval_RegVal_to_Perc(uint32_t regVal)
{
 80038e0:	b480      	push	{r7}
 80038e2:	b083      	sub	sp, #12
 80038e4:	af00      	add	r7, sp, #0
 80038e6:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.390625f);
 80038e8:	687b      	ldr	r3, [r7, #4]
 80038ea:	ee07 3a90 	vmov	s15, r3
 80038ee:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80038f2:	eeb5 7a09 	vmov.f32	s14, #89	@ 0x3ec80000  0.3906250
 80038f6:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 80038fa:	eeb0 0a67 	vmov.f32	s0, s15
 80038fe:	370c      	adds	r7, #12
 8003900:	46bd      	mov	sp, r7
 8003902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003906:	4770      	bx	lr

08003908 <Powerstep01_MaxSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 15.25 to 15610 steps/s
 * @retval The speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_MaxSpd_Steps_s_to_RegVal(float steps_s)
{
 8003908:	b480      	push	{r7}
 800390a:	b083      	sub	sp, #12
 800390c:	af00      	add	r7, sp, #0
 800390e:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s)*0.065536f)+0.5f));
 8003912:	edd7 7a01 	vldr	s15, [r7, #4]
 8003916:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 800393c <Powerstep01_MaxSpd_Steps_s_to_RegVal+0x34>
 800391a:	ee67 7a87 	vmul.f32	s15, s15, s14
 800391e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003922:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003926:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800392a:	ee17 3a90 	vmov	r3, s15
 800392e:	b29b      	uxth	r3, r3
}
 8003930:	4618      	mov	r0, r3
 8003932:	370c      	adds	r7, #12
 8003934:	46bd      	mov	sp, r7
 8003936:	f85d 7b04 	ldr.w	r7, [sp], #4
 800393a:	4770      	bx	lr
 800393c:	3d8637bd 	.word	0x3d8637bd

08003940 <Powerstep01_MaxSpd_RegVal_to_Steps_s>:
 * @brief Convert the MAX_SPEED register value into step/s
 * @param[in] regVal The MAX_SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_MaxSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003940:	b480      	push	{r7}
 8003942:	b083      	sub	sp, #12
 8003944:	af00      	add	r7, sp, #0
 8003946:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*15.258789f);
 8003948:	687b      	ldr	r3, [r7, #4]
 800394a:	ee07 3a90 	vmov	s15, r3
 800394e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003952:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003968 <Powerstep01_MaxSpd_RegVal_to_Steps_s+0x28>
 8003956:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 800395a:	eeb0 0a67 	vmov.f32	s0, s15
 800395e:	370c      	adds	r7, #12
 8003960:	46bd      	mov	sp, r7
 8003962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003966:	4770      	bx	lr
 8003968:	41742400 	.word	0x41742400

0800396c <Powerstep01_MinSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 0 to 976.3 steps/s
 * @retval The speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_MinSpd_Steps_s_to_RegVal(float steps_s)
{
 800396c:	b480      	push	{r7}
 800396e:	b083      	sub	sp, #12
 8003970:	af00      	add	r7, sp, #0
 8003972:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s)*4.194304f)+0.5f));
 8003976:	edd7 7a01 	vldr	s15, [r7, #4]
 800397a:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 80039a0 <Powerstep01_MinSpd_Steps_s_to_RegVal+0x34>
 800397e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003982:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003986:	ee77 7a87 	vadd.f32	s15, s15, s14
 800398a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800398e:	ee17 3a90 	vmov	r3, s15
 8003992:	b29b      	uxth	r3, r3
}
 8003994:	4618      	mov	r0, r3
 8003996:	370c      	adds	r7, #12
 8003998:	46bd      	mov	sp, r7
 800399a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800399e:	4770      	bx	lr
 80039a0:	408637bd 	.word	0x408637bd

080039a4 <Powerstep01_MinSpd_RegVal_to_Steps_s>:
 * @brief Convert the MIN_SPEED register value into step/s
 * @param[in] regVal The MIN_SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_MinSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 80039a4:	b480      	push	{r7}
 80039a6:	b083      	sub	sp, #12
 80039a8:	af00      	add	r7, sp, #0
 80039aa:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.238418579f);
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	ee07 3a90 	vmov	s15, r3
 80039b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80039b6:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 80039cc <Powerstep01_MinSpd_RegVal_to_Steps_s+0x28>
 80039ba:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 80039be:	eeb0 0a67 	vmov.f32	s0, s15
 80039c2:	370c      	adds	r7, #12
 80039c4:	46bd      	mov	sp, r7
 80039c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039ca:	4770      	bx	lr
 80039cc:	3e742400 	.word	0x3e742400

080039d0 <Powerstep01_Speed_RegVal_to_Steps_s>:
 * @brief Convert the SPEED register value into step/s
 * @param[in] regVal The SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_Speed_RegVal_to_Steps_s(uint32_t regVal)
{
 80039d0:	b480      	push	{r7}
 80039d2:	b083      	sub	sp, #12
 80039d4:	af00      	add	r7, sp, #0
 80039d6:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.01490116119f);
 80039d8:	687b      	ldr	r3, [r7, #4]
 80039da:	ee07 3a90 	vmov	s15, r3
 80039de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80039e2:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 80039f8 <Powerstep01_Speed_RegVal_to_Steps_s+0x28>
 80039e6:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 80039ea:	eeb0 0a67 	vmov.f32	s0, s15
 80039ee:	370c      	adds	r7, #12
 80039f0:	46bd      	mov	sp, r7
 80039f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039f6:	4770      	bx	lr
 80039f8:	3c742400 	.word	0x3c742400

080039fc <Powerstep01_StallOcd_Th_to_RegVal>:
 * values for STALL_TH or OCD_TH register
 * @param[in] mV voltage in mV, range 31.25mV to 1000mV
 * @retval value for STALL_TH or OCD_TH register
 **********************************************************/
inline uint8_t Powerstep01_StallOcd_Th_to_RegVal(float mV)
{
 80039fc:	b480      	push	{r7}
 80039fe:	b083      	sub	sp, #12
 8003a00:	af00      	add	r7, sp, #0
 8003a02:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(mV)-31.25f)*0.032f)+0.5f));
 8003a06:	edd7 7a01 	vldr	s15, [r7, #4]
 8003a0a:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8003a3c <Powerstep01_StallOcd_Th_to_RegVal+0x40>
 8003a0e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003a12:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8003a40 <Powerstep01_StallOcd_Th_to_RegVal+0x44>
 8003a16:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a1a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003a1e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003a22:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a26:	edc7 7a00 	vstr	s15, [r7]
 8003a2a:	783b      	ldrb	r3, [r7, #0]
 8003a2c:	b2db      	uxtb	r3, r3
}
 8003a2e:	4618      	mov	r0, r3
 8003a30:	370c      	adds	r7, #12
 8003a32:	46bd      	mov	sp, r7
 8003a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a38:	4770      	bx	lr
 8003a3a:	bf00      	nop
 8003a3c:	41fa0000 	.word	0x41fa0000
 8003a40:	3d03126f 	.word	0x3d03126f

08003a44 <Powerstep01_StallOcd_RegVal_to_Th>:
 * to mV
 * @param[in] regVal The STALL_TH or OCD_TH register value
 * @retval voltage in mV
 **********************************************************/
inline float Powerstep01_StallOcd_RegVal_to_Th(uint32_t regVal)
{
 8003a44:	b480      	push	{r7}
 8003a46:	b083      	sub	sp, #12
 8003a48:	af00      	add	r7, sp, #0
 8003a4a:	6078      	str	r0, [r7, #4]
  return (((float)(regVal+1))*31.25f);
 8003a4c:	687b      	ldr	r3, [r7, #4]
 8003a4e:	3301      	adds	r3, #1
 8003a50:	ee07 3a90 	vmov	s15, r3
 8003a54:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003a58:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003a70 <Powerstep01_StallOcd_RegVal_to_Th+0x2c>
 8003a5c:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003a60:	eeb0 0a67 	vmov.f32	s0, s15
 8003a64:	370c      	adds	r7, #12
 8003a66:	46bd      	mov	sp, r7
 8003a68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a6c:	4770      	bx	lr
 8003a6e:	bf00      	nop
 8003a70:	41fa0000 	.word	0x41fa0000

08003a74 <Powerstep01_Tval_RefVoltage_to_RegVal>:
 * TVAL_DEC register
 * @note The voltage corresponds to a peak output current
 * accross the external sense power resistor
 **********************************************************/
inline uint8_t Powerstep01_Tval_RefVoltage_to_RegVal(float voltage_mV)
{
 8003a74:	b480      	push	{r7}
 8003a76:	b083      	sub	sp, #12
 8003a78:	af00      	add	r7, sp, #0
 8003a7a:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(voltage_mV)-7.8125f)*0.128f)+0.5f));
 8003a7e:	edd7 7a01 	vldr	s15, [r7, #4]
 8003a82:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8003ab4 <Powerstep01_Tval_RefVoltage_to_RegVal+0x40>
 8003a86:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003a8a:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8003ab8 <Powerstep01_Tval_RefVoltage_to_RegVal+0x44>
 8003a8e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003a92:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003a96:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003a9a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003a9e:	edc7 7a00 	vstr	s15, [r7]
 8003aa2:	783b      	ldrb	r3, [r7, #0]
 8003aa4:	b2db      	uxtb	r3, r3
}
 8003aa6:	4618      	mov	r0, r3
 8003aa8:	370c      	adds	r7, #12
 8003aaa:	46bd      	mov	sp, r7
 8003aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab0:	4770      	bx	lr
 8003ab2:	bf00      	nop
 8003ab4:	40fa0000 	.word	0x40fa0000
 8003ab8:	3e03126f 	.word	0x3e03126f

08003abc <Powerstep01_Tval_RegVal_to_RefVoltage>:
 * @retval voltage in mV
 * @note The voltage corresponds to a peak output current
 * accross the external sense power resistor
 **********************************************************/
inline float Powerstep01_Tval_RegVal_to_RefVoltage(uint32_t regVal)
{
 8003abc:	b480      	push	{r7}
 8003abe:	b083      	sub	sp, #12
 8003ac0:	af00      	add	r7, sp, #0
 8003ac2:	6078      	str	r0, [r7, #4]
  return (((float)(regVal+1))*7.8125f);
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	3301      	adds	r3, #1
 8003ac8:	ee07 3a90 	vmov	s15, r3
 8003acc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003ad0:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003ae8 <Powerstep01_Tval_RegVal_to_RefVoltage+0x2c>
 8003ad4:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003ad8:	eeb0 0a67 	vmov.f32	s0, s15
 8003adc:	370c      	adds	r7, #12
 8003ade:	46bd      	mov	sp, r7
 8003ae0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ae4:	4770      	bx	lr
 8003ae6:	bf00      	nop
 8003ae8:	40fa0000 	.word	0x40fa0000

08003aec <Powerstep01_Tmin_Time_to_RegVal>:
 * @brief Convert time in us to values for TON_MIN register
 * @param[in] tmin_us time in us, range 0.5us to 64us
 * @retval value for TON_MIN register
 **********************************************************/
inline uint8_t Powerstep01_Tmin_Time_to_RegVal(float tmin_us)
{
 8003aec:	b480      	push	{r7}
 8003aee:	b083      	sub	sp, #12
 8003af0:	af00      	add	r7, sp, #0
 8003af2:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(tmin_us)-0.5f)*2.0f)+0.5f));
 8003af6:	edd7 7a01 	vldr	s15, [r7, #4]
 8003afa:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003afe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003b02:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8003b06:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003b0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003b0e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b12:	edc7 7a00 	vstr	s15, [r7]
 8003b16:	783b      	ldrb	r3, [r7, #0]
 8003b18:	b2db      	uxtb	r3, r3
}
 8003b1a:	4618      	mov	r0, r3
 8003b1c:	370c      	adds	r7, #12
 8003b1e:	46bd      	mov	sp, r7
 8003b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b24:	4770      	bx	lr

08003b26 <Powerstep01_Tmin_RegVal_to_Time>:
 * @brief Convert values for TON_MIN or TOFF_MIN register to time in us
 * @param[in] regVal The TON_MIN or TOFF_MIN register value
 * @retval time in us
 **********************************************************/
inline float Powerstep01_Tmin_RegVal_to_Time(uint32_t regVal)
{
 8003b26:	b480      	push	{r7}
 8003b28:	b083      	sub	sp, #12
 8003b2a:	af00      	add	r7, sp, #0
 8003b2c:	6078      	str	r0, [r7, #4]
  return (((float)(regVal+1))*0.5f);
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	3301      	adds	r3, #1
 8003b32:	ee07 3a90 	vmov	s15, r3
 8003b36:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003b3a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003b3e:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003b42:	eeb0 0a67 	vmov.f32	s0, s15
 8003b46:	370c      	adds	r7, #12
 8003b48:	46bd      	mov	sp, r7
 8003b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b4e:	4770      	bx	lr

08003b50 <Powerstep01_Board_Delay>:
 * @brief This function provides an accurate delay in milliseconds
 * @param[in] delay  time length in milliseconds
 * @retval None
 **********************************************************/
void Powerstep01_Board_Delay(uint32_t delay)
{
 8003b50:	b580      	push	{r7, lr}
 8003b52:	b082      	sub	sp, #8
 8003b54:	af00      	add	r7, sp, #0
 8003b56:	6078      	str	r0, [r7, #4]
  HAL_Delay(delay);
 8003b58:	6878      	ldr	r0, [r7, #4]
 8003b5a:	f000 fbfd 	bl	8004358 <HAL_Delay>
}
 8003b5e:	bf00      	nop
 8003b60:	3708      	adds	r7, #8
 8003b62:	46bd      	mov	sp, r7
 8003b64:	bd80      	pop	{r7, pc}

08003b66 <Powerstep01_Board_DisableIrq>:
/******************************************************//**
 * @brief This function disable the interruptions
 * @retval None
 **********************************************************/
void Powerstep01_Board_DisableIrq(void)
{
 8003b66:	b480      	push	{r7}
 8003b68:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8003b6a:	b672      	cpsid	i
}
 8003b6c:	bf00      	nop
  __disable_irq();
}
 8003b6e:	bf00      	nop
 8003b70:	46bd      	mov	sp, r7
 8003b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b76:	4770      	bx	lr

08003b78 <Powerstep01_Board_EnableIrq>:
/******************************************************//**
 * @brief This function enable the interruptions
 * @retval None
 **********************************************************/
void Powerstep01_Board_EnableIrq(void)
{
 8003b78:	b480      	push	{r7}
 8003b7a:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsie i" : : : "memory");
 8003b7c:	b662      	cpsie	i
}
 8003b7e:	bf00      	nop
  __enable_irq();
}
 8003b80:	bf00      	nop
 8003b82:	46bd      	mov	sp, r7
 8003b84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b88:	4770      	bx	lr
	...

08003b8c <Powerstep01_Board_GpioInit>:
 * @brief  Initiliases the GPIOs used by the powerSTEP01s
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
  **********************************************************/
void Powerstep01_Board_GpioInit(uint8_t deviceId)
{
 8003b8c:	b580      	push	{r7, lr}
 8003b8e:	b08c      	sub	sp, #48	@ 0x30
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	4603      	mov	r3, r0
 8003b94:	71fb      	strb	r3, [r7, #7]
  GPIO_InitTypeDef GPIO_InitStruct;
  
  if (deviceId==0)
 8003b96:	79fb      	ldrb	r3, [r7, #7]
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	f040 8088 	bne.w	8003cae <Powerstep01_Board_GpioInit+0x122>
  {
    /* GPIO Ports Clock Enable */
    __GPIOA_CLK_ENABLE();
 8003b9e:	4b46      	ldr	r3, [pc, #280]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003ba0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003ba2:	4a45      	ldr	r2, [pc, #276]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003ba4:	f043 0301 	orr.w	r3, r3, #1
 8003ba8:	6313      	str	r3, [r2, #48]	@ 0x30
 8003baa:	4b43      	ldr	r3, [pc, #268]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bae:	f003 0301 	and.w	r3, r3, #1
 8003bb2:	61bb      	str	r3, [r7, #24]
 8003bb4:	69bb      	ldr	r3, [r7, #24]
    __GPIOB_CLK_ENABLE();
 8003bb6:	4b40      	ldr	r3, [pc, #256]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bba:	4a3f      	ldr	r2, [pc, #252]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bbc:	f043 0302 	orr.w	r3, r3, #2
 8003bc0:	6313      	str	r3, [r2, #48]	@ 0x30
 8003bc2:	4b3d      	ldr	r3, [pc, #244]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bc4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bc6:	f003 0302 	and.w	r3, r3, #2
 8003bca:	617b      	str	r3, [r7, #20]
 8003bcc:	697b      	ldr	r3, [r7, #20]
    __GPIOG_CLK_ENABLE();
 8003bce:	4b3a      	ldr	r3, [pc, #232]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bd2:	4a39      	ldr	r2, [pc, #228]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bd4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003bd8:	6313      	str	r3, [r2, #48]	@ 0x30
 8003bda:	4b37      	ldr	r3, [pc, #220]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bdc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bde:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8003be2:	613b      	str	r3, [r7, #16]
 8003be4:	693b      	ldr	r3, [r7, #16]
    __GPIOI_CLK_ENABLE();
 8003be6:	4b34      	ldr	r3, [pc, #208]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003be8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bea:	4a33      	ldr	r2, [pc, #204]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003bf0:	6313      	str	r3, [r2, #48]	@ 0x30
 8003bf2:	4b31      	ldr	r3, [pc, #196]	@ (8003cb8 <Powerstep01_Board_GpioInit+0x12c>)
 8003bf4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003bf6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003bfa:	60fb      	str	r3, [r7, #12]
 8003bfc:	68fb      	ldr	r3, [r7, #12]
    
    /* Configure Powerstep01 - Busy pin --------------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_BUSY_PIN;
 8003bfe:	2380      	movs	r3, #128	@ 0x80
 8003c00:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8003c02:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8003c06:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003c08:	2301      	movs	r3, #1
 8003c0a:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_BUSY_PORT, &GPIO_InitStruct);
 8003c10:	f107 031c 	add.w	r3, r7, #28
 8003c14:	4619      	mov	r1, r3
 8003c16:	4829      	ldr	r0, [pc, #164]	@ (8003cbc <Powerstep01_Board_GpioInit+0x130>)
 8003c18:	f001 f82a 	bl	8004c70 <HAL_GPIO_Init>
    
    /* Set Priority of Exti line Interrupt used for the busy interrupt*/ 
    HAL_NVIC_SetPriority(BUSY_EXTI_LINE_IRQn, 6, 0);
 8003c1c:	2200      	movs	r2, #0
 8003c1e:	2106      	movs	r1, #6
 8003c20:	2017      	movs	r0, #23
 8003c22:	f000 fc98 	bl	8004556 <HAL_NVIC_SetPriority>
      
    /* Enable the Exti line Interrupt used for the busy interrupt*/
    HAL_NVIC_EnableIRQ(BUSY_EXTI_LINE_IRQn);
 8003c26:	2017      	movs	r0, #23
 8003c28:	f000 fcb1 	bl	800458e <HAL_NVIC_EnableIRQ>
    
    /* Configure Powerstep01 - Flag pin --------------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_FLAG_PIN;
 8003c2c:	2340      	movs	r3, #64	@ 0x40
 8003c2e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8003c30:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8003c34:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8003c36:	2301      	movs	r3, #1
 8003c38:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 8003c3a:	2301      	movs	r3, #1
 8003c3c:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_FLAG_PORT, &GPIO_InitStruct);
 8003c3e:	f107 031c 	add.w	r3, r7, #28
 8003c42:	4619      	mov	r1, r3
 8003c44:	481d      	ldr	r0, [pc, #116]	@ (8003cbc <Powerstep01_Board_GpioInit+0x130>)
 8003c46:	f001 f813 	bl	8004c70 <HAL_GPIO_Init>
    
    /* Set Priority of Exti lineInterrupt used for the Flag interrupt*/ 
    HAL_NVIC_SetPriority(FLAG_EXTI_LINE_IRQn, 5, 0);
 8003c4a:	2200      	movs	r2, #0
 8003c4c:	2105      	movs	r1, #5
 8003c4e:	2017      	movs	r0, #23
 8003c50:	f000 fc81 	bl	8004556 <HAL_NVIC_SetPriority>
      
    /* Enable the Exti line  Interrupt used for the Flag interrupt*/
    HAL_NVIC_EnableIRQ(FLAG_EXTI_LINE_IRQn);    
 8003c54:	2017      	movs	r0, #23
 8003c56:	f000 fc9a 	bl	800458e <HAL_NVIC_EnableIRQ>
  
    /* Configure Powerstep01 - CS pin ----------------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_CS_PIN;
 8003c5a:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003c5e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003c60:	2301      	movs	r3, #1
 8003c62:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c64:	2300      	movs	r3, #0
 8003c66:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 8003c68:	2301      	movs	r3, #1
 8003c6a:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_CS_PORT, &GPIO_InitStruct);
 8003c6c:	f107 031c 	add.w	r3, r7, #28
 8003c70:	4619      	mov	r1, r3
 8003c72:	4813      	ldr	r0, [pc, #76]	@ (8003cc0 <Powerstep01_Board_GpioInit+0x134>)
 8003c74:	f000 fffc 	bl	8004c70 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_CS_PORT, BSP_MOTOR_CONTROL_BOARD_CS_PIN, GPIO_PIN_SET); 
 8003c78:	2201      	movs	r2, #1
 8003c7a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003c7e:	4810      	ldr	r0, [pc, #64]	@ (8003cc0 <Powerstep01_Board_GpioInit+0x134>)
 8003c80:	f001 f9ba 	bl	8004ff8 <HAL_GPIO_WritePin>
    
    /* Configure Powerstep01 - STBY/RESET pin --------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PIN;
 8003c84:	2304      	movs	r3, #4
 8003c86:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003c88:	2301      	movs	r3, #1
 8003c8a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003c8c:	2300      	movs	r3, #0
 8003c8e:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 8003c90:	2301      	movs	r3, #1
 8003c92:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PORT, &GPIO_InitStruct);
 8003c94:	f107 031c 	add.w	r3, r7, #28
 8003c98:	4619      	mov	r1, r3
 8003c9a:	480a      	ldr	r0, [pc, #40]	@ (8003cc4 <Powerstep01_Board_GpioInit+0x138>)
 8003c9c:	f000 ffe8 	bl	8004c70 <HAL_GPIO_Init>
    
    /* Reset Powerstep0*/
    Powerstep01_Board_Reset(deviceId);
 8003ca0:	79fb      	ldrb	r3, [r7, #7]
 8003ca2:	4618      	mov	r0, r3
 8003ca4:	f000 f88e 	bl	8003dc4 <Powerstep01_Board_Reset>
    
    /* Let a delay after reset */
    Powerstep01_Board_Delay(1); 
 8003ca8:	2001      	movs	r0, #1
 8003caa:	f7ff ff51 	bl	8003b50 <Powerstep01_Board_Delay>
  }
}
 8003cae:	bf00      	nop
 8003cb0:	3730      	adds	r7, #48	@ 0x30
 8003cb2:	46bd      	mov	sp, r7
 8003cb4:	bd80      	pop	{r7, pc}
 8003cb6:	bf00      	nop
 8003cb8:	40023800 	.word	0x40023800
 8003cbc:	40021800 	.word	0x40021800
 8003cc0:	40020000 	.word	0x40020000
 8003cc4:	40022000 	.word	0x40022000

08003cc8 <Powerstep01_Board_StepClockInit>:
 * @brief  Initialises the step clock by setting 
 * corresponding GPIO, Timer, Pwm,...
 * @retval None
 **********************************************************/
void Powerstep01_Board_StepClockInit(void)
{
 8003cc8:	b580      	push	{r7, lr}
 8003cca:	b08e      	sub	sp, #56	@ 0x38
 8003ccc:	af00      	add	r7, sp, #0
  TIM_OC_InitTypeDef sConfigOC;
  TIM_MasterConfigTypeDef sMasterConfig;
  TIM_ClockConfigTypeDef sClockSourceConfig;
  
  hTimStepClock.Instance = BSP_MOTOR_CONTROL_BOARD_TIMER_STEP_CLOCK;
 8003cce:	4b1c      	ldr	r3, [pc, #112]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003cd0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8003cd4:	601a      	str	r2, [r3, #0]
  hTimStepClock.Init.Prescaler = TIMER_PRESCALER -1;
 8003cd6:	4b1a      	ldr	r3, [pc, #104]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003cd8:	223f      	movs	r2, #63	@ 0x3f
 8003cda:	605a      	str	r2, [r3, #4]
  hTimStepClock.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003cdc:	4b18      	ldr	r3, [pc, #96]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003cde:	2200      	movs	r2, #0
 8003ce0:	609a      	str	r2, [r3, #8]
  hTimStepClock.Init.Period = 0;
 8003ce2:	4b17      	ldr	r3, [pc, #92]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003ce4:	2200      	movs	r2, #0
 8003ce6:	60da      	str	r2, [r3, #12]
  hTimStepClock.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003ce8:	4b15      	ldr	r3, [pc, #84]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003cea:	2200      	movs	r2, #0
 8003cec:	611a      	str	r2, [r3, #16]
  HAL_TIM_PWM_Init(&hTimStepClock);
 8003cee:	4814      	ldr	r0, [pc, #80]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003cf0:	f003 fdea 	bl	80078c8 <HAL_TIM_PWM_Init>

  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003cf4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003cf8:	603b      	str	r3, [r7, #0]
  HAL_TIM_ConfigClockSource(&hTimStepClock, &sClockSourceConfig);
 8003cfa:	463b      	mov	r3, r7
 8003cfc:	4619      	mov	r1, r3
 8003cfe:	4810      	ldr	r0, [pc, #64]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003d00:	f004 faa4 	bl	800824c <HAL_TIM_ConfigClockSource>
  
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003d04:	2360      	movs	r3, #96	@ 0x60
 8003d06:	61fb      	str	r3, [r7, #28]
  sConfigOC.Pulse = 0;
 8003d08:	2300      	movs	r3, #0
 8003d0a:	623b      	str	r3, [r7, #32]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003d0c:	2300      	movs	r3, #0
 8003d0e:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003d10:	2300      	movs	r3, #0
 8003d12:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_TIM_PWM_ConfigChannel(&hTimStepClock, &sConfigOC, BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK);
 8003d14:	f107 031c 	add.w	r3, r7, #28
 8003d18:	2200      	movs	r2, #0
 8003d1a:	4619      	mov	r1, r3
 8003d1c:	4808      	ldr	r0, [pc, #32]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003d1e:	f004 f981 	bl	8008024 <HAL_TIM_PWM_ConfigChannel>
  
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003d22:	2300      	movs	r3, #0
 8003d24:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003d26:	2300      	movs	r3, #0
 8003d28:	61bb      	str	r3, [r7, #24]
  HAL_TIMEx_MasterConfigSynchronization(&hTimStepClock, &sMasterConfig);
 8003d2a:	f107 0310 	add.w	r3, r7, #16
 8003d2e:	4619      	mov	r1, r3
 8003d30:	4803      	ldr	r0, [pc, #12]	@ (8003d40 <Powerstep01_Board_StepClockInit+0x78>)
 8003d32:	f004 ffe1 	bl	8008cf8 <HAL_TIMEx_MasterConfigSynchronization>
}
 8003d36:	bf00      	nop
 8003d38:	3738      	adds	r7, #56	@ 0x38
 8003d3a:	46bd      	mov	sp, r7
 8003d3c:	bd80      	pop	{r7, pc}
 8003d3e:	bf00      	nop
 8003d40:	20000918 	.word	0x20000918

08003d44 <Powerstep01_Board_StartStepClock>:
 * @param[in] newFreq in Hz of the step clock
 * @retval None
 * @note The frequency is directly the current speed of the device
 **********************************************************/
void Powerstep01_Board_StartStepClock(uint16_t newFreq)
{
 8003d44:	b580      	push	{r7, lr}
 8003d46:	b084      	sub	sp, #16
 8003d48:	af00      	add	r7, sp, #0
 8003d4a:	4603      	mov	r3, r0
 8003d4c:	80fb      	strh	r3, [r7, #6]
  uint32_t sysFreq = HAL_RCC_GetSysClockFreq();
 8003d4e:	f002 faff 	bl	8006350 <HAL_RCC_GetSysClockFreq>
 8003d52:	60f8      	str	r0, [r7, #12]
  uint32_t period = (sysFreq/ (TIMER_PRESCALER * newFreq)) - 1;
 8003d54:	88fb      	ldrh	r3, [r7, #6]
 8003d56:	019b      	lsls	r3, r3, #6
 8003d58:	461a      	mov	r2, r3
 8003d5a:	68fb      	ldr	r3, [r7, #12]
 8003d5c:	fbb3 f3f2 	udiv	r3, r3, r2
 8003d60:	3b01      	subs	r3, #1
 8003d62:	60bb      	str	r3, [r7, #8]
  
  __HAL_TIM_SetAutoreload(&hTimStepClock, period);
 8003d64:	4b09      	ldr	r3, [pc, #36]	@ (8003d8c <Powerstep01_Board_StartStepClock+0x48>)
 8003d66:	681b      	ldr	r3, [r3, #0]
 8003d68:	68ba      	ldr	r2, [r7, #8]
 8003d6a:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003d6c:	4a07      	ldr	r2, [pc, #28]	@ (8003d8c <Powerstep01_Board_StartStepClock+0x48>)
 8003d6e:	68bb      	ldr	r3, [r7, #8]
 8003d70:	60d3      	str	r3, [r2, #12]
  __HAL_TIM_SetCompare(&hTimStepClock, BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK, period >> 1);
 8003d72:	4b06      	ldr	r3, [pc, #24]	@ (8003d8c <Powerstep01_Board_StartStepClock+0x48>)
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	68ba      	ldr	r2, [r7, #8]
 8003d78:	0852      	lsrs	r2, r2, #1
 8003d7a:	635a      	str	r2, [r3, #52]	@ 0x34
  HAL_TIM_PWM_Start_IT(&hTimStepClock, BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK);  
 8003d7c:	2100      	movs	r1, #0
 8003d7e:	4803      	ldr	r0, [pc, #12]	@ (8003d8c <Powerstep01_Board_StartStepClock+0x48>)
 8003d80:	f003 fe10 	bl	80079a4 <HAL_TIM_PWM_Start_IT>
}
 8003d84:	bf00      	nop
 8003d86:	3710      	adds	r7, #16
 8003d88:	46bd      	mov	sp, r7
 8003d8a:	bd80      	pop	{r7, pc}
 8003d8c:	20000918 	.word	0x20000918

08003d90 <Powerstep01_Board_StopStepClock>:
/******************************************************//**
 * @brief  Stops the PWM uses for the step clock
 * @retval None
 **********************************************************/
void Powerstep01_Board_StopStepClock(void)
{
 8003d90:	b580      	push	{r7, lr}
 8003d92:	af00      	add	r7, sp, #0
  HAL_TIM_PWM_Stop_IT(&hTimStepClock,BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK);
 8003d94:	2100      	movs	r1, #0
 8003d96:	4802      	ldr	r0, [pc, #8]	@ (8003da0 <Powerstep01_Board_StopStepClock+0x10>)
 8003d98:	f003 ff4c 	bl	8007c34 <HAL_TIM_PWM_Stop_IT>
}
 8003d9c:	bf00      	nop
 8003d9e:	bd80      	pop	{r7, pc}
 8003da0:	20000918 	.word	0x20000918

08003da4 <Powerstep01_Board_ReleaseReset>:
 * @brief  Releases the powerSTEP01 reset (pin set to High) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_Board_ReleaseReset(uint8_t deviceId)
{ 
 8003da4:	b580      	push	{r7, lr}
 8003da6:	b082      	sub	sp, #8
 8003da8:	af00      	add	r7, sp, #0
 8003daa:	4603      	mov	r3, r0
 8003dac:	71fb      	strb	r3, [r7, #7]
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PORT, BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PIN, GPIO_PIN_SET);
 8003dae:	2201      	movs	r2, #1
 8003db0:	2104      	movs	r1, #4
 8003db2:	4803      	ldr	r0, [pc, #12]	@ (8003dc0 <Powerstep01_Board_ReleaseReset+0x1c>)
 8003db4:	f001 f920 	bl	8004ff8 <HAL_GPIO_WritePin>
}
 8003db8:	bf00      	nop
 8003dba:	3708      	adds	r7, #8
 8003dbc:	46bd      	mov	sp, r7
 8003dbe:	bd80      	pop	{r7, pc}
 8003dc0:	40022000 	.word	0x40022000

08003dc4 <Powerstep01_Board_Reset>:
 * @brief  Resets the powerSTEP01 (reset pin set to low) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_Board_Reset(uint8_t deviceId)
{
 8003dc4:	b580      	push	{r7, lr}
 8003dc6:	b082      	sub	sp, #8
 8003dc8:	af00      	add	r7, sp, #0
 8003dca:	4603      	mov	r3, r0
 8003dcc:	71fb      	strb	r3, [r7, #7]
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PORT, BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PIN, GPIO_PIN_RESET);
 8003dce:	2200      	movs	r2, #0
 8003dd0:	2104      	movs	r1, #4
 8003dd2:	4803      	ldr	r0, [pc, #12]	@ (8003de0 <Powerstep01_Board_Reset+0x1c>)
 8003dd4:	f001 f910 	bl	8004ff8 <HAL_GPIO_WritePin>
}
 8003dd8:	bf00      	nop
 8003dda:	3708      	adds	r7, #8
 8003ddc:	46bd      	mov	sp, r7
 8003dde:	bd80      	pop	{r7, pc}
 8003de0:	40022000 	.word	0x40022000

08003de4 <Powerstep01_Board_SpiInit>:
/******************************************************//**
 * @brief  Initialise the SPI used by powerSTEP01
 * @retval HAL_OK if SPI transaction is OK, HAL_KO else
 **********************************************************/
uint8_t Powerstep01_Board_SpiInit(void)
{
 8003de4:	b580      	push	{r7, lr}
 8003de6:	b082      	sub	sp, #8
 8003de8:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status;
  
  /* Initialises the SPI  --------------------------------------------------*/
  SpiHandle.Instance               = SPIx;
 8003dea:	4b18      	ldr	r3, [pc, #96]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003dec:	4a18      	ldr	r2, [pc, #96]	@ (8003e50 <Powerstep01_Board_SpiInit+0x6c>)
 8003dee:	601a      	str	r2, [r3, #0]
  SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32; 
 8003df0:	4b16      	ldr	r3, [pc, #88]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003df2:	2220      	movs	r2, #32
 8003df4:	61da      	str	r2, [r3, #28]
  SpiHandle.Init.Direction         = SPI_DIRECTION_2LINES;
 8003df6:	4b15      	ldr	r3, [pc, #84]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003df8:	2200      	movs	r2, #0
 8003dfa:	609a      	str	r2, [r3, #8]
  SpiHandle.Init.CLKPhase          = SPI_PHASE_2EDGE;    
 8003dfc:	4b13      	ldr	r3, [pc, #76]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003dfe:	2201      	movs	r2, #1
 8003e00:	615a      	str	r2, [r3, #20]
  SpiHandle.Init.CLKPolarity       = SPI_POLARITY_HIGH;
 8003e02:	4b12      	ldr	r3, [pc, #72]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e04:	2202      	movs	r2, #2
 8003e06:	611a      	str	r2, [r3, #16]
  SpiHandle.Init.CRCCalculation    = SPI_CRCCALCULATION_DISABLED;
 8003e08:	4b10      	ldr	r3, [pc, #64]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e0a:	2200      	movs	r2, #0
 8003e0c:	629a      	str	r2, [r3, #40]	@ 0x28
  SpiHandle.Init.CRCPolynomial     = 7;
 8003e0e:	4b0f      	ldr	r3, [pc, #60]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e10:	2207      	movs	r2, #7
 8003e12:	62da      	str	r2, [r3, #44]	@ 0x2c
  SpiHandle.Init.DataSize          = SPI_DATASIZE_8BIT;
 8003e14:	4b0d      	ldr	r3, [pc, #52]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e16:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 8003e1a:	60da      	str	r2, [r3, #12]
  SpiHandle.Init.FirstBit          = SPI_FIRSTBIT_MSB;
 8003e1c:	4b0b      	ldr	r3, [pc, #44]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e1e:	2200      	movs	r2, #0
 8003e20:	621a      	str	r2, [r3, #32]
  SpiHandle.Init.NSS               = SPI_NSS_SOFT;
 8003e22:	4b0a      	ldr	r3, [pc, #40]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e24:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003e28:	619a      	str	r2, [r3, #24]
  SpiHandle.Init.TIMode            = SPI_TIMODE_DISABLED;
 8003e2a:	4b08      	ldr	r3, [pc, #32]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e2c:	2200      	movs	r2, #0
 8003e2e:	625a      	str	r2, [r3, #36]	@ 0x24
  
  SpiHandle.Init.Mode = SPI_MODE_MASTER;
 8003e30:	4b06      	ldr	r3, [pc, #24]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e32:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8003e36:	605a      	str	r2, [r3, #4]
  
  status = HAL_SPI_Init(&SpiHandle);
 8003e38:	4804      	ldr	r0, [pc, #16]	@ (8003e4c <Powerstep01_Board_SpiInit+0x68>)
 8003e3a:	f003 f805 	bl	8006e48 <HAL_SPI_Init>
 8003e3e:	4603      	mov	r3, r0
 8003e40:	71fb      	strb	r3, [r7, #7]
  
  return (uint8_t) status;
 8003e42:	79fb      	ldrb	r3, [r7, #7]
}
 8003e44:	4618      	mov	r0, r3
 8003e46:	3708      	adds	r7, #8
 8003e48:	46bd      	mov	sp, r7
 8003e4a:	bd80      	pop	{r7, pc}
 8003e4c:	2000088c 	.word	0x2000088c
 8003e50:	40003800 	.word	0x40003800

08003e54 <Powerstep01_Board_SpiWriteBytes>:
 * @param[in] pReceivedByte pointer to the received byte
 * @param[in] nbDevices Number of device in the SPI chain
 * @retval HAL_OK if SPI transaction is OK, HAL_KO else 
 **********************************************************/
uint8_t Powerstep01_Board_SpiWriteBytes(uint8_t *pByteToTransmit, uint8_t *pReceivedByte, uint8_t nbDevices)
{
 8003e54:	b580      	push	{r7, lr}
 8003e56:	b088      	sub	sp, #32
 8003e58:	af02      	add	r7, sp, #8
 8003e5a:	60f8      	str	r0, [r7, #12]
 8003e5c:	60b9      	str	r1, [r7, #8]
 8003e5e:	4613      	mov	r3, r2
 8003e60:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status;
  uint32_t i;
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_CS_PORT, BSP_MOTOR_CONTROL_BOARD_CS_PIN, GPIO_PIN_RESET); 
 8003e62:	2200      	movs	r2, #0
 8003e64:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003e68:	4816      	ldr	r0, [pc, #88]	@ (8003ec4 <Powerstep01_Board_SpiWriteBytes+0x70>)
 8003e6a:	f001 f8c5 	bl	8004ff8 <HAL_GPIO_WritePin>
  for (i = 0; i < nbDevices; i++)
 8003e6e:	2300      	movs	r3, #0
 8003e70:	613b      	str	r3, [r7, #16]
 8003e72:	e016      	b.n	8003ea2 <Powerstep01_Board_SpiWriteBytes+0x4e>
  {
    status = HAL_SPI_TransmitReceive(&SpiHandle, pByteToTransmit, pReceivedByte, 1, SPIx_TIMEOUT_MAX);
 8003e74:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8003e78:	9300      	str	r3, [sp, #0]
 8003e7a:	2301      	movs	r3, #1
 8003e7c:	68ba      	ldr	r2, [r7, #8]
 8003e7e:	68f9      	ldr	r1, [r7, #12]
 8003e80:	4811      	ldr	r0, [pc, #68]	@ (8003ec8 <Powerstep01_Board_SpiWriteBytes+0x74>)
 8003e82:	f003 f8c3 	bl	800700c <HAL_SPI_TransmitReceive>
 8003e86:	4603      	mov	r3, r0
 8003e88:	75fb      	strb	r3, [r7, #23]
    if (status != HAL_OK)
 8003e8a:	7dfb      	ldrb	r3, [r7, #23]
 8003e8c:	2b00      	cmp	r3, #0
 8003e8e:	d10d      	bne.n	8003eac <Powerstep01_Board_SpiWriteBytes+0x58>
    {
      break;
    }
    pByteToTransmit++;
 8003e90:	68fb      	ldr	r3, [r7, #12]
 8003e92:	3301      	adds	r3, #1
 8003e94:	60fb      	str	r3, [r7, #12]
    pReceivedByte++;
 8003e96:	68bb      	ldr	r3, [r7, #8]
 8003e98:	3301      	adds	r3, #1
 8003e9a:	60bb      	str	r3, [r7, #8]
  for (i = 0; i < nbDevices; i++)
 8003e9c:	693b      	ldr	r3, [r7, #16]
 8003e9e:	3301      	adds	r3, #1
 8003ea0:	613b      	str	r3, [r7, #16]
 8003ea2:	79fb      	ldrb	r3, [r7, #7]
 8003ea4:	693a      	ldr	r2, [r7, #16]
 8003ea6:	429a      	cmp	r2, r3
 8003ea8:	d3e4      	bcc.n	8003e74 <Powerstep01_Board_SpiWriteBytes+0x20>
 8003eaa:	e000      	b.n	8003eae <Powerstep01_Board_SpiWriteBytes+0x5a>
      break;
 8003eac:	bf00      	nop
  }
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_CS_PORT, BSP_MOTOR_CONTROL_BOARD_CS_PIN, GPIO_PIN_SET); 
 8003eae:	2201      	movs	r2, #1
 8003eb0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8003eb4:	4803      	ldr	r0, [pc, #12]	@ (8003ec4 <Powerstep01_Board_SpiWriteBytes+0x70>)
 8003eb6:	f001 f89f 	bl	8004ff8 <HAL_GPIO_WritePin>
  
  return (uint8_t) status;  
 8003eba:	7dfb      	ldrb	r3, [r7, #23]
}
 8003ebc:	4618      	mov	r0, r3
 8003ebe:	3718      	adds	r7, #24
 8003ec0:	46bd      	mov	sp, r7
 8003ec2:	bd80      	pop	{r7, pc}
 8003ec4:	40020000 	.word	0x40020000
 8003ec8:	2000088c 	.word	0x2000088c

08003ecc <Powerstep01_Board_BUSY_PIN_GetState>:
/******************************************************//**
 * @brief  Returns the BUSY pin state.
 * @retval The BUSY pin value.
 **********************************************************/
uint32_t Powerstep01_Board_BUSY_PIN_GetState(void)
{
 8003ecc:	b580      	push	{r7, lr}
 8003ece:	af00      	add	r7, sp, #0
  return HAL_GPIO_ReadPin(BSP_MOTOR_CONTROL_BOARD_BUSY_PORT, BSP_MOTOR_CONTROL_BOARD_BUSY_PIN);
 8003ed0:	2180      	movs	r1, #128	@ 0x80
 8003ed2:	4803      	ldr	r0, [pc, #12]	@ (8003ee0 <Powerstep01_Board_BUSY_PIN_GetState+0x14>)
 8003ed4:	f001 f878 	bl	8004fc8 <HAL_GPIO_ReadPin>
 8003ed8:	4603      	mov	r3, r0
}
 8003eda:	4618      	mov	r0, r3
 8003edc:	bd80      	pop	{r7, pc}
 8003ede:	bf00      	nop
 8003ee0:	40021800 	.word	0x40021800

08003ee4 <Powerstep01_Board_FLAG_PIN_GetState>:
/******************************************************//**
 * @brief  Returns the FLAG pin state.
 * @retval The FLAG pin value.
 **********************************************************/
uint32_t Powerstep01_Board_FLAG_PIN_GetState(void)
{
 8003ee4:	b580      	push	{r7, lr}
 8003ee6:	af00      	add	r7, sp, #0
  return HAL_GPIO_ReadPin(BSP_MOTOR_CONTROL_BOARD_FLAG_PORT, BSP_MOTOR_CONTROL_BOARD_FLAG_PIN);
 8003ee8:	2140      	movs	r1, #64	@ 0x40
 8003eea:	4803      	ldr	r0, [pc, #12]	@ (8003ef8 <Powerstep01_Board_FLAG_PIN_GetState+0x14>)
 8003eec:	f001 f86c 	bl	8004fc8 <HAL_GPIO_ReadPin>
 8003ef0:	4603      	mov	r3, r0
}
 8003ef2:	4618      	mov	r0, r3
 8003ef4:	bd80      	pop	{r7, pc}
 8003ef6:	bf00      	nop
 8003ef8:	40021800 	.word	0x40021800

08003efc <L6474_GetMotorHandle>:

/** @defgroup MOTOR_CONTROL_Weak_Private_Functions MOTOR CONTROL Weak Private Functions
 * @{
 */
/// Get motor handle for L6474
__weak motorDrv_t* L6474_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003efc:	b480      	push	{r7}
 8003efe:	af00      	add	r7, sp, #0
 8003f00:	2300      	movs	r3, #0
 8003f02:	4618      	mov	r0, r3
 8003f04:	46bd      	mov	sp, r7
 8003f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f0a:	4770      	bx	lr

08003f0c <l647x_GetMotorHandle>:
/// Get motor handle for L647x
__weak motorDrv_t* l647x_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003f0c:	b480      	push	{r7}
 8003f0e:	af00      	add	r7, sp, #0
 8003f10:	2300      	movs	r3, #0
 8003f12:	4618      	mov	r0, r3
 8003f14:	46bd      	mov	sp, r7
 8003f16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f1a:	4770      	bx	lr

08003f1c <l648x_GetMotorHandle>:
/// Get motor handle for L648x
__weak motorDrv_t* l648x_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003f1c:	b480      	push	{r7}
 8003f1e:	af00      	add	r7, sp, #0
 8003f20:	2300      	movs	r3, #0
 8003f22:	4618      	mov	r0, r3
 8003f24:	46bd      	mov	sp, r7
 8003f26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f2a:	4770      	bx	lr

08003f2c <L6206_GetMotorHandle>:
/// Get motor handle for Powerstep
__weak motorDrv_t* Powerstep01_GetMotorHandle(void){return ((motorDrv_t* )0);}
/// Get motor handle for L6206
__weak motorDrv_t* L6206_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003f2c:	b480      	push	{r7}
 8003f2e:	af00      	add	r7, sp, #0
 8003f30:	2300      	movs	r3, #0
 8003f32:	4618      	mov	r0, r3
 8003f34:	46bd      	mov	sp, r7
 8003f36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f3a:	4770      	bx	lr

08003f3c <L6208_GetMotorHandle>:
/// Get motor handle for L6208
__weak motorDrv_t* L6208_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003f3c:	b480      	push	{r7}
 8003f3e:	af00      	add	r7, sp, #0
 8003f40:	2300      	movs	r3, #0
 8003f42:	4618      	mov	r0, r3
 8003f44:	46bd      	mov	sp, r7
 8003f46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f4a:	4770      	bx	lr

08003f4c <Stspin220_GetMotorHandle>:
/// Get motor handle for STSPIN220
__weak motorDrv_t* Stspin220_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003f4c:	b480      	push	{r7}
 8003f4e:	af00      	add	r7, sp, #0
 8003f50:	2300      	movs	r3, #0
 8003f52:	4618      	mov	r0, r3
 8003f54:	46bd      	mov	sp, r7
 8003f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f5a:	4770      	bx	lr

08003f5c <Stspin240_250_GetMotorHandle>:
/// Get motor handle for STSPIN240
__weak motorDrv_t* Stspin240_250_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8003f5c:	b480      	push	{r7}
 8003f5e:	af00      	add	r7, sp, #0
 8003f60:	2300      	movs	r3, #0
 8003f62:	4618      	mov	r0, r3
 8003f64:	46bd      	mov	sp, r7
 8003f66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6a:	4770      	bx	lr

08003f6c <BSP_MotorControl_AttachErrorHandler>:
 * @param[in] callback Name of the callback to attach 
 * to the error Hanlder
 * @retval None
 **********************************************************/
void BSP_MotorControl_AttachErrorHandler(void (*callback)(uint16_t))
{
 8003f6c:	b580      	push	{r7, lr}
 8003f6e:	b082      	sub	sp, #8
 8003f70:	af00      	add	r7, sp, #0
 8003f72:	6078      	str	r0, [r7, #4]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->AttachErrorHandler != 0))
 8003f74:	4b0b      	ldr	r3, [pc, #44]	@ (8003fa4 <BSP_MotorControl_AttachErrorHandler+0x38>)
 8003f76:	681b      	ldr	r3, [r3, #0]
 8003f78:	2b00      	cmp	r3, #0
 8003f7a:	d00a      	beq.n	8003f92 <BSP_MotorControl_AttachErrorHandler+0x26>
 8003f7c:	4b09      	ldr	r3, [pc, #36]	@ (8003fa4 <BSP_MotorControl_AttachErrorHandler+0x38>)
 8003f7e:	681b      	ldr	r3, [r3, #0]
 8003f80:	689b      	ldr	r3, [r3, #8]
 8003f82:	2b00      	cmp	r3, #0
 8003f84:	d005      	beq.n	8003f92 <BSP_MotorControl_AttachErrorHandler+0x26>
  {
    motorDrvHandle->AttachErrorHandler(callback);
 8003f86:	4b07      	ldr	r3, [pc, #28]	@ (8003fa4 <BSP_MotorControl_AttachErrorHandler+0x38>)
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	689b      	ldr	r3, [r3, #8]
 8003f8c:	6878      	ldr	r0, [r7, #4]
 8003f8e:	4798      	blx	r3
 8003f90:	e004      	b.n	8003f9c <BSP_MotorControl_AttachErrorHandler+0x30>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(2);
 8003f92:	f640 0002 	movw	r0, #2050	@ 0x802
 8003f96:	f000 f843 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }
}
 8003f9a:	bf00      	nop
 8003f9c:	bf00      	nop
 8003f9e:	3708      	adds	r7, #8
 8003fa0:	46bd      	mov	sp, r7
 8003fa2:	bd80      	pop	{r7, pc}
 8003fa4:	200009d4 	.word	0x200009d4

08003fa8 <BSP_MotorControl_AttachFlagInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Flag interrupt Hanlder
 * @retval None
 **********************************************************/
void BSP_MotorControl_AttachFlagInterrupt(void (*callback)(void))
{
 8003fa8:	b580      	push	{r7, lr}
 8003faa:	b082      	sub	sp, #8
 8003fac:	af00      	add	r7, sp, #0
 8003fae:	6078      	str	r0, [r7, #4]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->AttachFlagInterrupt != 0))
 8003fb0:	4b0b      	ldr	r3, [pc, #44]	@ (8003fe0 <BSP_MotorControl_AttachFlagInterrupt+0x38>)
 8003fb2:	681b      	ldr	r3, [r3, #0]
 8003fb4:	2b00      	cmp	r3, #0
 8003fb6:	d00a      	beq.n	8003fce <BSP_MotorControl_AttachFlagInterrupt+0x26>
 8003fb8:	4b09      	ldr	r3, [pc, #36]	@ (8003fe0 <BSP_MotorControl_AttachFlagInterrupt+0x38>)
 8003fba:	681b      	ldr	r3, [r3, #0]
 8003fbc:	68db      	ldr	r3, [r3, #12]
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d005      	beq.n	8003fce <BSP_MotorControl_AttachFlagInterrupt+0x26>
  {
    motorDrvHandle->AttachFlagInterrupt(callback);
 8003fc2:	4b07      	ldr	r3, [pc, #28]	@ (8003fe0 <BSP_MotorControl_AttachFlagInterrupt+0x38>)
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	68db      	ldr	r3, [r3, #12]
 8003fc8:	6878      	ldr	r0, [r7, #4]
 8003fca:	4798      	blx	r3
 8003fcc:	e004      	b.n	8003fd8 <BSP_MotorControl_AttachFlagInterrupt+0x30>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(3);
 8003fce:	f640 0003 	movw	r0, #2051	@ 0x803
 8003fd2:	f000 f825 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }  
}
 8003fd6:	bf00      	nop
 8003fd8:	bf00      	nop
 8003fda:	3708      	adds	r7, #8
 8003fdc:	46bd      	mov	sp, r7
 8003fde:	bd80      	pop	{r7, pc}
 8003fe0:	200009d4 	.word	0x200009d4

08003fe4 <BSP_MotorControl_AttachBusyInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Busy interrupt Hanlder
 * @retval None
 **********************************************************/
void BSP_MotorControl_AttachBusyInterrupt(void (*callback)(void))
{
 8003fe4:	b580      	push	{r7, lr}
 8003fe6:	b082      	sub	sp, #8
 8003fe8:	af00      	add	r7, sp, #0
 8003fea:	6078      	str	r0, [r7, #4]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->AttachBusyInterrupt != 0))
 8003fec:	4b0b      	ldr	r3, [pc, #44]	@ (800401c <BSP_MotorControl_AttachBusyInterrupt+0x38>)
 8003fee:	681b      	ldr	r3, [r3, #0]
 8003ff0:	2b00      	cmp	r3, #0
 8003ff2:	d00a      	beq.n	800400a <BSP_MotorControl_AttachBusyInterrupt+0x26>
 8003ff4:	4b09      	ldr	r3, [pc, #36]	@ (800401c <BSP_MotorControl_AttachBusyInterrupt+0x38>)
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	691b      	ldr	r3, [r3, #16]
 8003ffa:	2b00      	cmp	r3, #0
 8003ffc:	d005      	beq.n	800400a <BSP_MotorControl_AttachBusyInterrupt+0x26>
  {
    motorDrvHandle->AttachBusyInterrupt(callback);
 8003ffe:	4b07      	ldr	r3, [pc, #28]	@ (800401c <BSP_MotorControl_AttachBusyInterrupt+0x38>)
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	691b      	ldr	r3, [r3, #16]
 8004004:	6878      	ldr	r0, [r7, #4]
 8004006:	4798      	blx	r3
 8004008:	e004      	b.n	8004014 <BSP_MotorControl_AttachBusyInterrupt+0x30>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(4);
 800400a:	f640 0004 	movw	r0, #2052	@ 0x804
 800400e:	f000 f807 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }  
}
 8004012:	bf00      	nop
 8004014:	bf00      	nop
 8004016:	3708      	adds	r7, #8
 8004018:	46bd      	mov	sp, r7
 800401a:	bd80      	pop	{r7, pc}
 800401c:	200009d4 	.word	0x200009d4

08004020 <BSP_MotorControl_ErrorHandler>:
 * @brief Motor control error handler
 * @param[in] error number of the error
 * @retval None
 **********************************************************/
void BSP_MotorControl_ErrorHandler(uint16_t error)
{
 8004020:	b580      	push	{r7, lr}
 8004022:	b082      	sub	sp, #8
 8004024:	af00      	add	r7, sp, #0
 8004026:	4603      	mov	r3, r0
 8004028:	80fb      	strh	r3, [r7, #6]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->ErrorHandler != 0))
 800402a:	4b0b      	ldr	r3, [pc, #44]	@ (8004058 <BSP_MotorControl_ErrorHandler+0x38>)
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	2b00      	cmp	r3, #0
 8004030:	d00d      	beq.n	800404e <BSP_MotorControl_ErrorHandler+0x2e>
 8004032:	4b09      	ldr	r3, [pc, #36]	@ (8004058 <BSP_MotorControl_ErrorHandler+0x38>)
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800403a:	2b00      	cmp	r3, #0
 800403c:	d007      	beq.n	800404e <BSP_MotorControl_ErrorHandler+0x2e>
  {
    motorDrvHandle->ErrorHandler(error);
 800403e:	4b06      	ldr	r3, [pc, #24]	@ (8004058 <BSP_MotorControl_ErrorHandler+0x38>)
 8004040:	681b      	ldr	r3, [r3, #0]
 8004042:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004046:	88fa      	ldrh	r2, [r7, #6]
 8004048:	4610      	mov	r0, r2
 800404a:	4798      	blx	r3
    while(1)
    {
      /* Infinite loop as Error handler must be defined*/
    }
  }
}
 800404c:	e000      	b.n	8004050 <BSP_MotorControl_ErrorHandler+0x30>
    while(1)
 800404e:	e7fe      	b.n	800404e <BSP_MotorControl_ErrorHandler+0x2e>
}
 8004050:	3708      	adds	r7, #8
 8004052:	46bd      	mov	sp, r7
 8004054:	bd80      	pop	{r7, pc}
 8004056:	bf00      	nop
 8004058:	200009d4 	.word	0x200009d4

0800405c <BSP_MotorControl_Init>:
 * @param[in] id Component Id (L6474, Powerstep01,...)
 * @param[in] initDeviceParameters Initialization structure for one device
 * @retval None
 **********************************************************/
void BSP_MotorControl_Init(uint16_t id, void* initDeviceParameters)
{
 800405c:	b580      	push	{r7, lr}
 800405e:	b082      	sub	sp, #8
 8004060:	af00      	add	r7, sp, #0
 8004062:	4603      	mov	r3, r0
 8004064:	6039      	str	r1, [r7, #0]
 8004066:	80fb      	strh	r3, [r7, #6]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->Init != 0))
 8004068:	4b0b      	ldr	r3, [pc, #44]	@ (8004098 <BSP_MotorControl_Init+0x3c>)
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	2b00      	cmp	r3, #0
 800406e:	d00a      	beq.n	8004086 <BSP_MotorControl_Init+0x2a>
 8004070:	4b09      	ldr	r3, [pc, #36]	@ (8004098 <BSP_MotorControl_Init+0x3c>)
 8004072:	681b      	ldr	r3, [r3, #0]
 8004074:	681b      	ldr	r3, [r3, #0]
 8004076:	2b00      	cmp	r3, #0
 8004078:	d005      	beq.n	8004086 <BSP_MotorControl_Init+0x2a>
  {
    motorDrvHandle->Init(initDeviceParameters);
 800407a:	4b07      	ldr	r3, [pc, #28]	@ (8004098 <BSP_MotorControl_Init+0x3c>)
 800407c:	681b      	ldr	r3, [r3, #0]
 800407e:	681b      	ldr	r3, [r3, #0]
 8004080:	6838      	ldr	r0, [r7, #0]
 8004082:	4798      	blx	r3
 8004084:	e004      	b.n	8004090 <BSP_MotorControl_Init+0x34>
  }  
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(0);
 8004086:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 800408a:	f7ff ffc9 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }  
}
 800408e:	bf00      	nop
 8004090:	bf00      	nop
 8004092:	3708      	adds	r7, #8
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}
 8004098:	200009d4 	.word	0x200009d4

0800409c <BSP_MotorControl_CmdGetStatus>:
 * the flags of the status register are reset. 
 * This is not the case when the status register is read with the
 * GetParam command (via the functions ReadStatusRegister or CmdGetParam).
 **********************************************************/
uint16_t BSP_MotorControl_CmdGetStatus(uint8_t deviceId)
{
 800409c:	b580      	push	{r7, lr}
 800409e:	b084      	sub	sp, #16
 80040a0:	af00      	add	r7, sp, #0
 80040a2:	4603      	mov	r3, r0
 80040a4:	71fb      	strb	r3, [r7, #7]
  uint16_t status = 0;
 80040a6:	2300      	movs	r3, #0
 80040a8:	81fb      	strh	r3, [r7, #14]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->CmdGetStatus != 0))
 80040aa:	4b0e      	ldr	r3, [pc, #56]	@ (80040e4 <BSP_MotorControl_CmdGetStatus+0x48>)
 80040ac:	681b      	ldr	r3, [r3, #0]
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	d00f      	beq.n	80040d2 <BSP_MotorControl_CmdGetStatus+0x36>
 80040b2:	4b0c      	ldr	r3, [pc, #48]	@ (80040e4 <BSP_MotorControl_CmdGetStatus+0x48>)
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d009      	beq.n	80040d2 <BSP_MotorControl_CmdGetStatus+0x36>
  {
    status = motorDrvHandle->CmdGetStatus(deviceId);
 80040be:	4b09      	ldr	r3, [pc, #36]	@ (80040e4 <BSP_MotorControl_CmdGetStatus+0x48>)
 80040c0:	681b      	ldr	r3, [r3, #0]
 80040c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80040c6:	79fa      	ldrb	r2, [r7, #7]
 80040c8:	4610      	mov	r0, r2
 80040ca:	4798      	blx	r3
 80040cc:	4603      	mov	r3, r0
 80040ce:	81fb      	strh	r3, [r7, #14]
 80040d0:	e003      	b.n	80040da <BSP_MotorControl_CmdGetStatus+0x3e>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(34);
 80040d2:	f640 0022 	movw	r0, #2082	@ 0x822
 80040d6:	f7ff ffa3 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }      
  return (status);
 80040da:	89fb      	ldrh	r3, [r7, #14]
}
 80040dc:	4618      	mov	r0, r3
 80040de:	3710      	adds	r7, #16
 80040e0:	46bd      	mov	sp, r7
 80040e2:	bd80      	pop	{r7, pc}
 80040e4:	200009d4 	.word	0x200009d4

080040e8 <BSP_MotorControl_CheckBusyHw>:
 * busy pin position. 
 * The busy pin is shared between all devices.
 * @retval One if at least one device is busy, otherwise zero
 **********************************************************/
uint8_t BSP_MotorControl_CheckBusyHw(void)
{
 80040e8:	b580      	push	{r7, lr}
 80040ea:	b082      	sub	sp, #8
 80040ec:	af00      	add	r7, sp, #0
  uint8_t value = 0;
 80040ee:	2300      	movs	r3, #0
 80040f0:	71fb      	strb	r3, [r7, #7]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->CheckBusyHw != 0))
 80040f2:	4b0d      	ldr	r3, [pc, #52]	@ (8004128 <BSP_MotorControl_CheckBusyHw+0x40>)
 80040f4:	681b      	ldr	r3, [r3, #0]
 80040f6:	2b00      	cmp	r3, #0
 80040f8:	d00d      	beq.n	8004116 <BSP_MotorControl_CheckBusyHw+0x2e>
 80040fa:	4b0b      	ldr	r3, [pc, #44]	@ (8004128 <BSP_MotorControl_CheckBusyHw+0x40>)
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8004102:	2b00      	cmp	r3, #0
 8004104:	d007      	beq.n	8004116 <BSP_MotorControl_CheckBusyHw+0x2e>
  {
    value = motorDrvHandle->CheckBusyHw();
 8004106:	4b08      	ldr	r3, [pc, #32]	@ (8004128 <BSP_MotorControl_CheckBusyHw+0x40>)
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800410e:	4798      	blx	r3
 8004110:	4603      	mov	r3, r0
 8004112:	71fb      	strb	r3, [r7, #7]
 8004114:	e003      	b.n	800411e <BSP_MotorControl_CheckBusyHw+0x36>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(43);
 8004116:	f640 002b 	movw	r0, #2091	@ 0x82b
 800411a:	f7ff ff81 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }
  return (value);
 800411e:	79fb      	ldrb	r3, [r7, #7]
}
 8004120:	4618      	mov	r0, r3
 8004122:	3708      	adds	r7, #8
 8004124:	46bd      	mov	sp, r7
 8004126:	bd80      	pop	{r7, pc}
 8004128:	200009d4 	.word	0x200009d4

0800412c <BSP_MotorControl_CmdSoftHiZ>:
 * @brief Issues Soft HiZ command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void BSP_MotorControl_CmdSoftHiZ(uint8_t deviceId)
{
 800412c:	b580      	push	{r7, lr}
 800412e:	b082      	sub	sp, #8
 8004130:	af00      	add	r7, sp, #0
 8004132:	4603      	mov	r3, r0
 8004134:	71fb      	strb	r3, [r7, #7]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->CmdSoftHiZ != 0))
 8004136:	4b0d      	ldr	r3, [pc, #52]	@ (800416c <BSP_MotorControl_CmdSoftHiZ+0x40>)
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	2b00      	cmp	r3, #0
 800413c:	d00d      	beq.n	800415a <BSP_MotorControl_CmdSoftHiZ+0x2e>
 800413e:	4b0b      	ldr	r3, [pc, #44]	@ (800416c <BSP_MotorControl_CmdSoftHiZ+0x40>)
 8004140:	681b      	ldr	r3, [r3, #0]
 8004142:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8004146:	2b00      	cmp	r3, #0
 8004148:	d007      	beq.n	800415a <BSP_MotorControl_CmdSoftHiZ+0x2e>
  {
    motorDrvHandle->CmdSoftHiZ(deviceId);
 800414a:	4b08      	ldr	r3, [pc, #32]	@ (800416c <BSP_MotorControl_CmdSoftHiZ+0x40>)
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8004152:	79fa      	ldrb	r2, [r7, #7]
 8004154:	4610      	mov	r0, r2
 8004156:	4798      	blx	r3
 8004158:	e004      	b.n	8004164 <BSP_MotorControl_CmdSoftHiZ+0x38>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(51);
 800415a:	f640 0033 	movw	r0, #2099	@ 0x833
 800415e:	f7ff ff5f 	bl	8004020 <BSP_MotorControl_ErrorHandler>
  }
}
 8004162:	bf00      	nop
 8004164:	bf00      	nop
 8004166:	3708      	adds	r7, #8
 8004168:	46bd      	mov	sp, r7
 800416a:	bd80      	pop	{r7, pc}
 800416c:	200009d4 	.word	0x200009d4

08004170 <BSP_MotorControl_SetNbDevices>:
 * from 1 to MAX_NUMBER_OF_DEVICES
 * @retval TRUE if successfull, FALSE if failure, attempt 
 * to set a number of devices greater than MAX_NUMBER_OF_DEVICES
 **********************************************************/
bool BSP_MotorControl_SetNbDevices(uint16_t id, uint8_t nbDevices)
{
 8004170:	b580      	push	{r7, lr}
 8004172:	b084      	sub	sp, #16
 8004174:	af00      	add	r7, sp, #0
 8004176:	4603      	mov	r3, r0
 8004178:	460a      	mov	r2, r1
 800417a:	80fb      	strh	r3, [r7, #6]
 800417c:	4613      	mov	r3, r2
 800417e:	717b      	strb	r3, [r7, #5]
  MotorControlBoardId = id;
 8004180:	4a40      	ldr	r2, [pc, #256]	@ (8004284 <BSP_MotorControl_SetNbDevices+0x114>)
 8004182:	88fb      	ldrh	r3, [r7, #6]
 8004184:	8013      	strh	r3, [r2, #0]
  bool status = FALSE;
 8004186:	2300      	movs	r3, #0
 8004188:	73fb      	strb	r3, [r7, #15]
  if (id == BSP_MOTOR_CONTROL_BOARD_ID_L6474)
 800418a:	88fb      	ldrh	r3, [r7, #6]
 800418c:	f641 124a 	movw	r2, #6474	@ 0x194a
 8004190:	4293      	cmp	r3, r2
 8004192:	d105      	bne.n	80041a0 <BSP_MotorControl_SetNbDevices+0x30>
  {
    motorDrvHandle = L6474_GetMotorHandle();
 8004194:	f7ff feb2 	bl	8003efc <L6474_GetMotorHandle>
 8004198:	4603      	mov	r3, r0
 800419a:	4a3b      	ldr	r2, [pc, #236]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 800419c:	6013      	str	r3, [r2, #0]
 800419e:	e055      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_POWERSTEP01)
 80041a0:	88fb      	ldrh	r3, [r7, #6]
 80041a2:	2b01      	cmp	r3, #1
 80041a4:	d105      	bne.n	80041b2 <BSP_MotorControl_SetNbDevices+0x42>
  {
    motorDrvHandle = Powerstep01_GetMotorHandle();
 80041a6:	f7fe f93b 	bl	8002420 <Powerstep01_GetMotorHandle>
 80041aa:	4603      	mov	r3, r0
 80041ac:	4a36      	ldr	r2, [pc, #216]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 80041ae:	6013      	str	r3, [r2, #0]
 80041b0:	e04c      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_L6206)
 80041b2:	88fb      	ldrh	r3, [r7, #6]
 80041b4:	f641 023e 	movw	r2, #6206	@ 0x183e
 80041b8:	4293      	cmp	r3, r2
 80041ba:	d105      	bne.n	80041c8 <BSP_MotorControl_SetNbDevices+0x58>
  {
    motorDrvHandle = L6206_GetMotorHandle();
 80041bc:	f7ff feb6 	bl	8003f2c <L6206_GetMotorHandle>
 80041c0:	4603      	mov	r3, r0
 80041c2:	4a31      	ldr	r2, [pc, #196]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 80041c4:	6013      	str	r3, [r2, #0]
 80041c6:	e041      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_L6208)
 80041c8:	88fb      	ldrh	r3, [r7, #6]
 80041ca:	f5b3 5fc2 	cmp.w	r3, #6208	@ 0x1840
 80041ce:	d105      	bne.n	80041dc <BSP_MotorControl_SetNbDevices+0x6c>
  {
    motorDrvHandle = L6208_GetMotorHandle();
 80041d0:	f7ff feb4 	bl	8003f3c <L6208_GetMotorHandle>
 80041d4:	4603      	mov	r3, r0
 80041d6:	4a2c      	ldr	r2, [pc, #176]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 80041d8:	6013      	str	r3, [r2, #0]
 80041da:	e037      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_STSPIN220)
 80041dc:	88fb      	ldrh	r3, [r7, #6]
 80041de:	2bdc      	cmp	r3, #220	@ 0xdc
 80041e0:	d105      	bne.n	80041ee <BSP_MotorControl_SetNbDevices+0x7e>
  {
    motorDrvHandle = Stspin220_GetMotorHandle();
 80041e2:	f7ff feb3 	bl	8003f4c <Stspin220_GetMotorHandle>
 80041e6:	4603      	mov	r3, r0
 80041e8:	4a27      	ldr	r2, [pc, #156]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 80041ea:	6013      	str	r3, [r2, #0]
 80041ec:	e02e      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if ( (id == BSP_MOTOR_CONTROL_BOARD_ID_L6470) ||
 80041ee:	88fb      	ldrh	r3, [r7, #6]
 80041f0:	f641 1246 	movw	r2, #6470	@ 0x1946
 80041f4:	4293      	cmp	r3, r2
 80041f6:	d004      	beq.n	8004202 <BSP_MotorControl_SetNbDevices+0x92>
 80041f8:	88fb      	ldrh	r3, [r7, #6]
 80041fa:	f641 1248 	movw	r2, #6472	@ 0x1948
 80041fe:	4293      	cmp	r3, r2
 8004200:	d105      	bne.n	800420e <BSP_MotorControl_SetNbDevices+0x9e>
		     (id == BSP_MOTOR_CONTROL_BOARD_ID_L6472) )
  {
    motorDrvHandle = l647x_GetMotorHandle();
 8004202:	f7ff fe83 	bl	8003f0c <l647x_GetMotorHandle>
 8004206:	4603      	mov	r3, r0
 8004208:	4a1f      	ldr	r2, [pc, #124]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 800420a:	6013      	str	r3, [r2, #0]
 800420c:	e01e      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if ( (id == BSP_MOTOR_CONTROL_BOARD_ID_L6480) ||
 800420e:	88fb      	ldrh	r3, [r7, #6]
 8004210:	f641 1250 	movw	r2, #6480	@ 0x1950
 8004214:	4293      	cmp	r3, r2
 8004216:	d004      	beq.n	8004222 <BSP_MotorControl_SetNbDevices+0xb2>
 8004218:	88fb      	ldrh	r3, [r7, #6]
 800421a:	f641 1252 	movw	r2, #6482	@ 0x1952
 800421e:	4293      	cmp	r3, r2
 8004220:	d105      	bne.n	800422e <BSP_MotorControl_SetNbDevices+0xbe>
		     (id == BSP_MOTOR_CONTROL_BOARD_ID_L6482) )
  {
    motorDrvHandle = l648x_GetMotorHandle();
 8004222:	f7ff fe7b 	bl	8003f1c <l648x_GetMotorHandle>
 8004226:	4603      	mov	r3, r0
 8004228:	4a17      	ldr	r2, [pc, #92]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 800422a:	6013      	str	r3, [r2, #0]
 800422c:	e00e      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if ((id == BSP_MOTOR_CONTROL_BOARD_ID_STSPIN240)||
 800422e:	88fb      	ldrh	r3, [r7, #6]
 8004230:	2bf0      	cmp	r3, #240	@ 0xf0
 8004232:	d002      	beq.n	800423a <BSP_MotorControl_SetNbDevices+0xca>
 8004234:	88fb      	ldrh	r3, [r7, #6]
 8004236:	2bfa      	cmp	r3, #250	@ 0xfa
 8004238:	d105      	bne.n	8004246 <BSP_MotorControl_SetNbDevices+0xd6>
            (id == BSP_MOTOR_CONTROL_BOARD_ID_STSPIN250))
  {
    motorDrvHandle = Stspin240_250_GetMotorHandle();
 800423a:	f7ff fe8f 	bl	8003f5c <Stspin240_250_GetMotorHandle>
 800423e:	4603      	mov	r3, r0
 8004240:	4a11      	ldr	r2, [pc, #68]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 8004242:	6013      	str	r3, [r2, #0]
 8004244:	e002      	b.n	800424c <BSP_MotorControl_SetNbDevices+0xdc>
  }  
  else
  {
    motorDrvHandle = 0;
 8004246:	4b10      	ldr	r3, [pc, #64]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 8004248:	2200      	movs	r2, #0
 800424a:	601a      	str	r2, [r3, #0]
  }
  if ((motorDrvHandle != 0)&&
 800424c:	4b0e      	ldr	r3, [pc, #56]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 800424e:	681b      	ldr	r3, [r3, #0]
 8004250:	2b00      	cmp	r3, #0
 8004252:	d011      	beq.n	8004278 <BSP_MotorControl_SetNbDevices+0x108>
      (motorDrvHandle->SetNbDevices != 0)&&
 8004254:	4b0c      	ldr	r3, [pc, #48]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 8004256:	681b      	ldr	r3, [r3, #0]
 8004258:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
  if ((motorDrvHandle != 0)&&
 800425c:	2b00      	cmp	r3, #0
 800425e:	d00b      	beq.n	8004278 <BSP_MotorControl_SetNbDevices+0x108>
      (motorDrvHandle->SetNbDevices != 0)&&
 8004260:	797b      	ldrb	r3, [r7, #5]
 8004262:	2b00      	cmp	r3, #0
 8004264:	d008      	beq.n	8004278 <BSP_MotorControl_SetNbDevices+0x108>
      (nbDevices !=0))
  {
    status = motorDrvHandle->SetNbDevices(nbDevices);
 8004266:	4b08      	ldr	r3, [pc, #32]	@ (8004288 <BSP_MotorControl_SetNbDevices+0x118>)
 8004268:	681b      	ldr	r3, [r3, #0]
 800426a:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
 800426e:	797a      	ldrb	r2, [r7, #5]
 8004270:	4610      	mov	r0, r2
 8004272:	4798      	blx	r3
 8004274:	4603      	mov	r3, r0
 8004276:	73fb      	strb	r3, [r7, #15]
  }
  return (status);
 8004278:	7bfb      	ldrb	r3, [r7, #15]
}
 800427a:	4618      	mov	r0, r3
 800427c:	3710      	adds	r7, #16
 800427e:	46bd      	mov	sp, r7
 8004280:	bd80      	pop	{r7, pc}
 8004282:	bf00      	nop
 8004284:	200009d8 	.word	0x200009d8
 8004288:	200009d4 	.word	0x200009d4

0800428c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800428c:	b580      	push	{r7, lr}
 800428e:	af00      	add	r7, sp, #0
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004290:	4b08      	ldr	r3, [pc, #32]	@ (80042b4 <HAL_Init+0x28>)
 8004292:	681b      	ldr	r3, [r3, #0]
 8004294:	4a07      	ldr	r2, [pc, #28]	@ (80042b4 <HAL_Init+0x28>)
 8004296:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800429a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800429c:	2003      	movs	r0, #3
 800429e:	f000 f94f 	bl	8004540 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80042a2:	200f      	movs	r0, #15
 80042a4:	f000 f808 	bl	80042b8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80042a8:	f7fd f95a 	bl	8001560 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80042ac:	2300      	movs	r3, #0
}
 80042ae:	4618      	mov	r0, r3
 80042b0:	bd80      	pop	{r7, pc}
 80042b2:	bf00      	nop
 80042b4:	40023c00 	.word	0x40023c00

080042b8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80042b8:	b580      	push	{r7, lr}
 80042ba:	b082      	sub	sp, #8
 80042bc:	af00      	add	r7, sp, #0
 80042be:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80042c0:	4b12      	ldr	r3, [pc, #72]	@ (800430c <HAL_InitTick+0x54>)
 80042c2:	681a      	ldr	r2, [r3, #0]
 80042c4:	4b12      	ldr	r3, [pc, #72]	@ (8004310 <HAL_InitTick+0x58>)
 80042c6:	781b      	ldrb	r3, [r3, #0]
 80042c8:	4619      	mov	r1, r3
 80042ca:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80042ce:	fbb3 f3f1 	udiv	r3, r3, r1
 80042d2:	fbb2 f3f3 	udiv	r3, r2, r3
 80042d6:	4618      	mov	r0, r3
 80042d8:	f000 f967 	bl	80045aa <HAL_SYSTICK_Config>
 80042dc:	4603      	mov	r3, r0
 80042de:	2b00      	cmp	r3, #0
 80042e0:	d001      	beq.n	80042e6 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 80042e2:	2301      	movs	r3, #1
 80042e4:	e00e      	b.n	8004304 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	2b0f      	cmp	r3, #15
 80042ea:	d80a      	bhi.n	8004302 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80042ec:	2200      	movs	r2, #0
 80042ee:	6879      	ldr	r1, [r7, #4]
 80042f0:	f04f 30ff 	mov.w	r0, #4294967295
 80042f4:	f000 f92f 	bl	8004556 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80042f8:	4a06      	ldr	r2, [pc, #24]	@ (8004314 <HAL_InitTick+0x5c>)
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80042fe:	2300      	movs	r3, #0
 8004300:	e000      	b.n	8004304 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8004302:	2301      	movs	r3, #1
}
 8004304:	4618      	mov	r0, r3
 8004306:	3708      	adds	r7, #8
 8004308:	46bd      	mov	sp, r7
 800430a:	bd80      	pop	{r7, pc}
 800430c:	20000004 	.word	0x20000004
 8004310:	20000170 	.word	0x20000170
 8004314:	2000016c 	.word	0x2000016c

08004318 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8004318:	b480      	push	{r7}
 800431a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 800431c:	4b06      	ldr	r3, [pc, #24]	@ (8004338 <HAL_IncTick+0x20>)
 800431e:	781b      	ldrb	r3, [r3, #0]
 8004320:	461a      	mov	r2, r3
 8004322:	4b06      	ldr	r3, [pc, #24]	@ (800433c <HAL_IncTick+0x24>)
 8004324:	681b      	ldr	r3, [r3, #0]
 8004326:	4413      	add	r3, r2
 8004328:	4a04      	ldr	r2, [pc, #16]	@ (800433c <HAL_IncTick+0x24>)
 800432a:	6013      	str	r3, [r2, #0]
}
 800432c:	bf00      	nop
 800432e:	46bd      	mov	sp, r7
 8004330:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004334:	4770      	bx	lr
 8004336:	bf00      	nop
 8004338:	20000170 	.word	0x20000170
 800433c:	200009dc 	.word	0x200009dc

08004340 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8004340:	b480      	push	{r7}
 8004342:	af00      	add	r7, sp, #0
  return uwTick;
 8004344:	4b03      	ldr	r3, [pc, #12]	@ (8004354 <HAL_GetTick+0x14>)
 8004346:	681b      	ldr	r3, [r3, #0]
}
 8004348:	4618      	mov	r0, r3
 800434a:	46bd      	mov	sp, r7
 800434c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004350:	4770      	bx	lr
 8004352:	bf00      	nop
 8004354:	200009dc 	.word	0x200009dc

08004358 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004358:	b580      	push	{r7, lr}
 800435a:	b084      	sub	sp, #16
 800435c:	af00      	add	r7, sp, #0
 800435e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8004360:	f7ff ffee 	bl	8004340 <HAL_GetTick>
 8004364:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8004366:	687b      	ldr	r3, [r7, #4]
 8004368:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004370:	d005      	beq.n	800437e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8004372:	4b0a      	ldr	r3, [pc, #40]	@ (800439c <HAL_Delay+0x44>)
 8004374:	781b      	ldrb	r3, [r3, #0]
 8004376:	461a      	mov	r2, r3
 8004378:	68fb      	ldr	r3, [r7, #12]
 800437a:	4413      	add	r3, r2
 800437c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 800437e:	bf00      	nop
 8004380:	f7ff ffde 	bl	8004340 <HAL_GetTick>
 8004384:	4602      	mov	r2, r0
 8004386:	68bb      	ldr	r3, [r7, #8]
 8004388:	1ad3      	subs	r3, r2, r3
 800438a:	68fa      	ldr	r2, [r7, #12]
 800438c:	429a      	cmp	r2, r3
 800438e:	d8f7      	bhi.n	8004380 <HAL_Delay+0x28>
  {
  }
}
 8004390:	bf00      	nop
 8004392:	bf00      	nop
 8004394:	3710      	adds	r7, #16
 8004396:	46bd      	mov	sp, r7
 8004398:	bd80      	pop	{r7, pc}
 800439a:	bf00      	nop
 800439c:	20000170 	.word	0x20000170

080043a0 <__NVIC_SetPriorityGrouping>:
{
 80043a0:	b480      	push	{r7}
 80043a2:	b085      	sub	sp, #20
 80043a4:	af00      	add	r7, sp, #0
 80043a6:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	f003 0307 	and.w	r3, r3, #7
 80043ae:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80043b0:	4b0b      	ldr	r3, [pc, #44]	@ (80043e0 <__NVIC_SetPriorityGrouping+0x40>)
 80043b2:	68db      	ldr	r3, [r3, #12]
 80043b4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80043b6:	68ba      	ldr	r2, [r7, #8]
 80043b8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80043bc:	4013      	ands	r3, r2
 80043be:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80043c0:	68fb      	ldr	r3, [r7, #12]
 80043c2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80043c4:	68bb      	ldr	r3, [r7, #8]
 80043c6:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 80043c8:	4b06      	ldr	r3, [pc, #24]	@ (80043e4 <__NVIC_SetPriorityGrouping+0x44>)
 80043ca:	4313      	orrs	r3, r2
 80043cc:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80043ce:	4a04      	ldr	r2, [pc, #16]	@ (80043e0 <__NVIC_SetPriorityGrouping+0x40>)
 80043d0:	68bb      	ldr	r3, [r7, #8]
 80043d2:	60d3      	str	r3, [r2, #12]
}
 80043d4:	bf00      	nop
 80043d6:	3714      	adds	r7, #20
 80043d8:	46bd      	mov	sp, r7
 80043da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043de:	4770      	bx	lr
 80043e0:	e000ed00 	.word	0xe000ed00
 80043e4:	05fa0000 	.word	0x05fa0000

080043e8 <__NVIC_GetPriorityGrouping>:
{
 80043e8:	b480      	push	{r7}
 80043ea:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80043ec:	4b04      	ldr	r3, [pc, #16]	@ (8004400 <__NVIC_GetPriorityGrouping+0x18>)
 80043ee:	68db      	ldr	r3, [r3, #12]
 80043f0:	0a1b      	lsrs	r3, r3, #8
 80043f2:	f003 0307 	and.w	r3, r3, #7
}
 80043f6:	4618      	mov	r0, r3
 80043f8:	46bd      	mov	sp, r7
 80043fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043fe:	4770      	bx	lr
 8004400:	e000ed00 	.word	0xe000ed00

08004404 <__NVIC_EnableIRQ>:
{
 8004404:	b480      	push	{r7}
 8004406:	b083      	sub	sp, #12
 8004408:	af00      	add	r7, sp, #0
 800440a:	4603      	mov	r3, r0
 800440c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800440e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004412:	2b00      	cmp	r3, #0
 8004414:	db0b      	blt.n	800442e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004416:	79fb      	ldrb	r3, [r7, #7]
 8004418:	f003 021f 	and.w	r2, r3, #31
 800441c:	4907      	ldr	r1, [pc, #28]	@ (800443c <__NVIC_EnableIRQ+0x38>)
 800441e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004422:	095b      	lsrs	r3, r3, #5
 8004424:	2001      	movs	r0, #1
 8004426:	fa00 f202 	lsl.w	r2, r0, r2
 800442a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800442e:	bf00      	nop
 8004430:	370c      	adds	r7, #12
 8004432:	46bd      	mov	sp, r7
 8004434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004438:	4770      	bx	lr
 800443a:	bf00      	nop
 800443c:	e000e100 	.word	0xe000e100

08004440 <__NVIC_SetPriority>:
{
 8004440:	b480      	push	{r7}
 8004442:	b083      	sub	sp, #12
 8004444:	af00      	add	r7, sp, #0
 8004446:	4603      	mov	r3, r0
 8004448:	6039      	str	r1, [r7, #0]
 800444a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800444c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004450:	2b00      	cmp	r3, #0
 8004452:	db0a      	blt.n	800446a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004454:	683b      	ldr	r3, [r7, #0]
 8004456:	b2da      	uxtb	r2, r3
 8004458:	490c      	ldr	r1, [pc, #48]	@ (800448c <__NVIC_SetPriority+0x4c>)
 800445a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800445e:	0112      	lsls	r2, r2, #4
 8004460:	b2d2      	uxtb	r2, r2
 8004462:	440b      	add	r3, r1
 8004464:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 8004468:	e00a      	b.n	8004480 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800446a:	683b      	ldr	r3, [r7, #0]
 800446c:	b2da      	uxtb	r2, r3
 800446e:	4908      	ldr	r1, [pc, #32]	@ (8004490 <__NVIC_SetPriority+0x50>)
 8004470:	79fb      	ldrb	r3, [r7, #7]
 8004472:	f003 030f 	and.w	r3, r3, #15
 8004476:	3b04      	subs	r3, #4
 8004478:	0112      	lsls	r2, r2, #4
 800447a:	b2d2      	uxtb	r2, r2
 800447c:	440b      	add	r3, r1
 800447e:	761a      	strb	r2, [r3, #24]
}
 8004480:	bf00      	nop
 8004482:	370c      	adds	r7, #12
 8004484:	46bd      	mov	sp, r7
 8004486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800448a:	4770      	bx	lr
 800448c:	e000e100 	.word	0xe000e100
 8004490:	e000ed00 	.word	0xe000ed00

08004494 <NVIC_EncodePriority>:
{
 8004494:	b480      	push	{r7}
 8004496:	b089      	sub	sp, #36	@ 0x24
 8004498:	af00      	add	r7, sp, #0
 800449a:	60f8      	str	r0, [r7, #12]
 800449c:	60b9      	str	r1, [r7, #8]
 800449e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80044a0:	68fb      	ldr	r3, [r7, #12]
 80044a2:	f003 0307 	and.w	r3, r3, #7
 80044a6:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80044a8:	69fb      	ldr	r3, [r7, #28]
 80044aa:	f1c3 0307 	rsb	r3, r3, #7
 80044ae:	2b04      	cmp	r3, #4
 80044b0:	bf28      	it	cs
 80044b2:	2304      	movcs	r3, #4
 80044b4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80044b6:	69fb      	ldr	r3, [r7, #28]
 80044b8:	3304      	adds	r3, #4
 80044ba:	2b06      	cmp	r3, #6
 80044bc:	d902      	bls.n	80044c4 <NVIC_EncodePriority+0x30>
 80044be:	69fb      	ldr	r3, [r7, #28]
 80044c0:	3b03      	subs	r3, #3
 80044c2:	e000      	b.n	80044c6 <NVIC_EncodePriority+0x32>
 80044c4:	2300      	movs	r3, #0
 80044c6:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80044c8:	f04f 32ff 	mov.w	r2, #4294967295
 80044cc:	69bb      	ldr	r3, [r7, #24]
 80044ce:	fa02 f303 	lsl.w	r3, r2, r3
 80044d2:	43da      	mvns	r2, r3
 80044d4:	68bb      	ldr	r3, [r7, #8]
 80044d6:	401a      	ands	r2, r3
 80044d8:	697b      	ldr	r3, [r7, #20]
 80044da:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80044dc:	f04f 31ff 	mov.w	r1, #4294967295
 80044e0:	697b      	ldr	r3, [r7, #20]
 80044e2:	fa01 f303 	lsl.w	r3, r1, r3
 80044e6:	43d9      	mvns	r1, r3
 80044e8:	687b      	ldr	r3, [r7, #4]
 80044ea:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80044ec:	4313      	orrs	r3, r2
}
 80044ee:	4618      	mov	r0, r3
 80044f0:	3724      	adds	r7, #36	@ 0x24
 80044f2:	46bd      	mov	sp, r7
 80044f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044f8:	4770      	bx	lr
	...

080044fc <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80044fc:	b580      	push	{r7, lr}
 80044fe:	b082      	sub	sp, #8
 8004500:	af00      	add	r7, sp, #0
 8004502:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004504:	687b      	ldr	r3, [r7, #4]
 8004506:	3b01      	subs	r3, #1
 8004508:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800450c:	d301      	bcc.n	8004512 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800450e:	2301      	movs	r3, #1
 8004510:	e00f      	b.n	8004532 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004512:	4a0a      	ldr	r2, [pc, #40]	@ (800453c <SysTick_Config+0x40>)
 8004514:	687b      	ldr	r3, [r7, #4]
 8004516:	3b01      	subs	r3, #1
 8004518:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800451a:	210f      	movs	r1, #15
 800451c:	f04f 30ff 	mov.w	r0, #4294967295
 8004520:	f7ff ff8e 	bl	8004440 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004524:	4b05      	ldr	r3, [pc, #20]	@ (800453c <SysTick_Config+0x40>)
 8004526:	2200      	movs	r2, #0
 8004528:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800452a:	4b04      	ldr	r3, [pc, #16]	@ (800453c <SysTick_Config+0x40>)
 800452c:	2207      	movs	r2, #7
 800452e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004530:	2300      	movs	r3, #0
}
 8004532:	4618      	mov	r0, r3
 8004534:	3708      	adds	r7, #8
 8004536:	46bd      	mov	sp, r7
 8004538:	bd80      	pop	{r7, pc}
 800453a:	bf00      	nop
 800453c:	e000e010 	.word	0xe000e010

08004540 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8004540:	b580      	push	{r7, lr}
 8004542:	b082      	sub	sp, #8
 8004544:	af00      	add	r7, sp, #0
 8004546:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8004548:	6878      	ldr	r0, [r7, #4]
 800454a:	f7ff ff29 	bl	80043a0 <__NVIC_SetPriorityGrouping>
}
 800454e:	bf00      	nop
 8004550:	3708      	adds	r7, #8
 8004552:	46bd      	mov	sp, r7
 8004554:	bd80      	pop	{r7, pc}

08004556 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004556:	b580      	push	{r7, lr}
 8004558:	b086      	sub	sp, #24
 800455a:	af00      	add	r7, sp, #0
 800455c:	4603      	mov	r3, r0
 800455e:	60b9      	str	r1, [r7, #8]
 8004560:	607a      	str	r2, [r7, #4]
 8004562:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8004564:	2300      	movs	r3, #0
 8004566:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8004568:	f7ff ff3e 	bl	80043e8 <__NVIC_GetPriorityGrouping>
 800456c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800456e:	687a      	ldr	r2, [r7, #4]
 8004570:	68b9      	ldr	r1, [r7, #8]
 8004572:	6978      	ldr	r0, [r7, #20]
 8004574:	f7ff ff8e 	bl	8004494 <NVIC_EncodePriority>
 8004578:	4602      	mov	r2, r0
 800457a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800457e:	4611      	mov	r1, r2
 8004580:	4618      	mov	r0, r3
 8004582:	f7ff ff5d 	bl	8004440 <__NVIC_SetPriority>
}
 8004586:	bf00      	nop
 8004588:	3718      	adds	r7, #24
 800458a:	46bd      	mov	sp, r7
 800458c:	bd80      	pop	{r7, pc}

0800458e <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800458e:	b580      	push	{r7, lr}
 8004590:	b082      	sub	sp, #8
 8004592:	af00      	add	r7, sp, #0
 8004594:	4603      	mov	r3, r0
 8004596:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8004598:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800459c:	4618      	mov	r0, r3
 800459e:	f7ff ff31 	bl	8004404 <__NVIC_EnableIRQ>
}
 80045a2:	bf00      	nop
 80045a4:	3708      	adds	r7, #8
 80045a6:	46bd      	mov	sp, r7
 80045a8:	bd80      	pop	{r7, pc}

080045aa <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80045aa:	b580      	push	{r7, lr}
 80045ac:	b082      	sub	sp, #8
 80045ae:	af00      	add	r7, sp, #0
 80045b0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80045b2:	6878      	ldr	r0, [r7, #4]
 80045b4:	f7ff ffa2 	bl	80044fc <SysTick_Config>
 80045b8:	4603      	mov	r3, r0
}
 80045ba:	4618      	mov	r0, r3
 80045bc:	3708      	adds	r7, #8
 80045be:	46bd      	mov	sp, r7
 80045c0:	bd80      	pop	{r7, pc}
	...

080045c4 <HAL_MPU_Disable>:
/**
  * @brief  Disables the MPU
  * @retval None
  */
void HAL_MPU_Disable(void)
{
 80045c4:	b480      	push	{r7}
 80045c6:	af00      	add	r7, sp, #0
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
 80045c8:	f3bf 8f5f 	dmb	sy
}
 80045cc:	bf00      	nop
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 80045ce:	4b07      	ldr	r3, [pc, #28]	@ (80045ec <HAL_MPU_Disable+0x28>)
 80045d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80045d2:	4a06      	ldr	r2, [pc, #24]	@ (80045ec <HAL_MPU_Disable+0x28>)
 80045d4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80045d8:	6253      	str	r3, [r2, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 80045da:	4b05      	ldr	r3, [pc, #20]	@ (80045f0 <HAL_MPU_Disable+0x2c>)
 80045dc:	2200      	movs	r2, #0
 80045de:	605a      	str	r2, [r3, #4]
}
 80045e0:	bf00      	nop
 80045e2:	46bd      	mov	sp, r7
 80045e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045e8:	4770      	bx	lr
 80045ea:	bf00      	nop
 80045ec:	e000ed00 	.word	0xe000ed00
 80045f0:	e000ed90 	.word	0xe000ed90

080045f4 <HAL_MPU_Enable>:
  *            @arg MPU_PRIVILEGED_DEFAULT
  *            @arg MPU_HFNMI_PRIVDEF
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
 80045f4:	b480      	push	{r7}
 80045f6:	b083      	sub	sp, #12
 80045f8:	af00      	add	r7, sp, #0
 80045fa:	6078      	str	r0, [r7, #4]
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 80045fc:	4a0b      	ldr	r2, [pc, #44]	@ (800462c <HAL_MPU_Enable+0x38>)
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	f043 0301 	orr.w	r3, r3, #1
 8004604:	6053      	str	r3, [r2, #4]
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004606:	4b0a      	ldr	r3, [pc, #40]	@ (8004630 <HAL_MPU_Enable+0x3c>)
 8004608:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800460a:	4a09      	ldr	r2, [pc, #36]	@ (8004630 <HAL_MPU_Enable+0x3c>)
 800460c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004610:	6253      	str	r3, [r2, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004612:	f3bf 8f4f 	dsb	sy
}
 8004616:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8004618:	f3bf 8f6f 	isb	sy
}
 800461c:	bf00      	nop
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 800461e:	bf00      	nop
 8004620:	370c      	adds	r7, #12
 8004622:	46bd      	mov	sp, r7
 8004624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004628:	4770      	bx	lr
 800462a:	bf00      	nop
 800462c:	e000ed90 	.word	0xe000ed90
 8004630:	e000ed00 	.word	0xe000ed00

08004634 <HAL_MPU_ConfigRegion>:
  * @param MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
  *                the initialization and configuration information.
  * @retval None
  */
void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
{
 8004634:	b480      	push	{r7}
 8004636:	b083      	sub	sp, #12
 8004638:	af00      	add	r7, sp, #0
 800463a:	6078      	str	r0, [r7, #4]
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	785a      	ldrb	r2, [r3, #1]
 8004640:	4b1b      	ldr	r3, [pc, #108]	@ (80046b0 <HAL_MPU_ConfigRegion+0x7c>)
 8004642:	609a      	str	r2, [r3, #8]

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 8004644:	4b1a      	ldr	r3, [pc, #104]	@ (80046b0 <HAL_MPU_ConfigRegion+0x7c>)
 8004646:	691b      	ldr	r3, [r3, #16]
 8004648:	4a19      	ldr	r2, [pc, #100]	@ (80046b0 <HAL_MPU_ConfigRegion+0x7c>)
 800464a:	f023 0301 	bic.w	r3, r3, #1
 800464e:	6113      	str	r3, [r2, #16]

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
 8004650:	4a17      	ldr	r2, [pc, #92]	@ (80046b0 <HAL_MPU_ConfigRegion+0x7c>)
 8004652:	687b      	ldr	r3, [r7, #4]
 8004654:	685b      	ldr	r3, [r3, #4]
 8004656:	60d3      	str	r3, [r2, #12]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	7b1b      	ldrb	r3, [r3, #12]
 800465c:	071a      	lsls	r2, r3, #28
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 800465e:	687b      	ldr	r3, [r7, #4]
 8004660:	7adb      	ldrb	r3, [r3, #11]
 8004662:	061b      	lsls	r3, r3, #24
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004664:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	7a9b      	ldrb	r3, [r3, #10]
 800466a:	04db      	lsls	r3, r3, #19
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 800466c:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	7b5b      	ldrb	r3, [r3, #13]
 8004672:	049b      	lsls	r3, r3, #18
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004674:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	7b9b      	ldrb	r3, [r3, #14]
 800467a:	045b      	lsls	r3, r3, #17
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 800467c:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	7bdb      	ldrb	r3, [r3, #15]
 8004682:	041b      	lsls	r3, r3, #16
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004684:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	7a5b      	ldrb	r3, [r3, #9]
 800468a:	021b      	lsls	r3, r3, #8
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 800468c:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800468e:	687b      	ldr	r3, [r7, #4]
 8004690:	7a1b      	ldrb	r3, [r3, #8]
 8004692:	005b      	lsls	r3, r3, #1
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004694:	4313      	orrs	r3, r2
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 8004696:	687a      	ldr	r2, [r7, #4]
 8004698:	7812      	ldrb	r2, [r2, #0]
 800469a:	4611      	mov	r1, r2
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 800469c:	4a04      	ldr	r2, [pc, #16]	@ (80046b0 <HAL_MPU_ConfigRegion+0x7c>)
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 800469e:	430b      	orrs	r3, r1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 80046a0:	6113      	str	r3, [r2, #16]
}
 80046a2:	bf00      	nop
 80046a4:	370c      	adds	r7, #12
 80046a6:	46bd      	mov	sp, r7
 80046a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046ac:	4770      	bx	lr
 80046ae:	bf00      	nop
 80046b0:	e000ed90 	.word	0xe000ed90

080046b4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80046b4:	b580      	push	{r7, lr}
 80046b6:	b082      	sub	sp, #8
 80046b8:	af00      	add	r7, sp, #0
 80046ba:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	2b00      	cmp	r3, #0
 80046c0:	d101      	bne.n	80046c6 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 80046c2:	2301      	movs	r3, #1
 80046c4:	e054      	b.n	8004770 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	7f5b      	ldrb	r3, [r3, #29]
 80046ca:	b2db      	uxtb	r3, r3
 80046cc:	2b00      	cmp	r3, #0
 80046ce:	d105      	bne.n	80046dc <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80046d0:	687b      	ldr	r3, [r7, #4]
 80046d2:	2200      	movs	r2, #0
 80046d4:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80046d6:	6878      	ldr	r0, [r7, #4]
 80046d8:	f7fb ff84 	bl	80005e4 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 80046dc:	687b      	ldr	r3, [r7, #4]
 80046de:	2202      	movs	r2, #2
 80046e0:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	791b      	ldrb	r3, [r3, #4]
 80046e6:	2b00      	cmp	r3, #0
 80046e8:	d10c      	bne.n	8004704 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 80046ea:	687b      	ldr	r3, [r7, #4]
 80046ec:	681b      	ldr	r3, [r3, #0]
 80046ee:	4a22      	ldr	r2, [pc, #136]	@ (8004778 <HAL_CRC_Init+0xc4>)
 80046f0:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 80046f2:	687b      	ldr	r3, [r7, #4]
 80046f4:	681b      	ldr	r3, [r3, #0]
 80046f6:	689a      	ldr	r2, [r3, #8]
 80046f8:	687b      	ldr	r3, [r7, #4]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	f022 0218 	bic.w	r2, r2, #24
 8004700:	609a      	str	r2, [r3, #8]
 8004702:	e00c      	b.n	800471e <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004704:	687b      	ldr	r3, [r7, #4]
 8004706:	6899      	ldr	r1, [r3, #8]
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	68db      	ldr	r3, [r3, #12]
 800470c:	461a      	mov	r2, r3
 800470e:	6878      	ldr	r0, [r7, #4]
 8004710:	f000 f834 	bl	800477c <HAL_CRCEx_Polynomial_Set>
 8004714:	4603      	mov	r3, r0
 8004716:	2b00      	cmp	r3, #0
 8004718:	d001      	beq.n	800471e <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 800471a:	2301      	movs	r3, #1
 800471c:	e028      	b.n	8004770 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800471e:	687b      	ldr	r3, [r7, #4]
 8004720:	795b      	ldrb	r3, [r3, #5]
 8004722:	2b00      	cmp	r3, #0
 8004724:	d105      	bne.n	8004732 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004726:	687b      	ldr	r3, [r7, #4]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	f04f 32ff 	mov.w	r2, #4294967295
 800472e:	611a      	str	r2, [r3, #16]
 8004730:	e004      	b.n	800473c <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004732:	687b      	ldr	r3, [r7, #4]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	687a      	ldr	r2, [r7, #4]
 8004738:	6912      	ldr	r2, [r2, #16]
 800473a:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	681b      	ldr	r3, [r3, #0]
 8004740:	689b      	ldr	r3, [r3, #8]
 8004742:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	695a      	ldr	r2, [r3, #20]
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	681b      	ldr	r3, [r3, #0]
 800474e:	430a      	orrs	r2, r1
 8004750:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	689b      	ldr	r3, [r3, #8]
 8004758:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	699a      	ldr	r2, [r3, #24]
 8004760:	687b      	ldr	r3, [r7, #4]
 8004762:	681b      	ldr	r3, [r3, #0]
 8004764:	430a      	orrs	r2, r1
 8004766:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	2201      	movs	r2, #1
 800476c:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 800476e:	2300      	movs	r3, #0
}
 8004770:	4618      	mov	r0, r3
 8004772:	3708      	adds	r7, #8
 8004774:	46bd      	mov	sp, r7
 8004776:	bd80      	pop	{r7, pc}
 8004778:	04c11db7 	.word	0x04c11db7

0800477c <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 800477c:	b480      	push	{r7}
 800477e:	b087      	sub	sp, #28
 8004780:	af00      	add	r7, sp, #0
 8004782:	60f8      	str	r0, [r7, #12]
 8004784:	60b9      	str	r1, [r7, #8]
 8004786:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004788:	2300      	movs	r3, #0
 800478a:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 800478c:	231f      	movs	r3, #31
 800478e:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8004790:	68bb      	ldr	r3, [r7, #8]
 8004792:	f003 0301 	and.w	r3, r3, #1
 8004796:	2b00      	cmp	r3, #0
 8004798:	d102      	bne.n	80047a0 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 800479a:	2301      	movs	r3, #1
 800479c:	75fb      	strb	r3, [r7, #23]
 800479e:	e063      	b.n	8004868 <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80047a0:	bf00      	nop
 80047a2:	693b      	ldr	r3, [r7, #16]
 80047a4:	1e5a      	subs	r2, r3, #1
 80047a6:	613a      	str	r2, [r7, #16]
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d009      	beq.n	80047c0 <HAL_CRCEx_Polynomial_Set+0x44>
 80047ac:	693b      	ldr	r3, [r7, #16]
 80047ae:	f003 031f 	and.w	r3, r3, #31
 80047b2:	68ba      	ldr	r2, [r7, #8]
 80047b4:	fa22 f303 	lsr.w	r3, r2, r3
 80047b8:	f003 0301 	and.w	r3, r3, #1
 80047bc:	2b00      	cmp	r3, #0
 80047be:	d0f0      	beq.n	80047a2 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 80047c0:	687b      	ldr	r3, [r7, #4]
 80047c2:	2b18      	cmp	r3, #24
 80047c4:	d846      	bhi.n	8004854 <HAL_CRCEx_Polynomial_Set+0xd8>
 80047c6:	a201      	add	r2, pc, #4	@ (adr r2, 80047cc <HAL_CRCEx_Polynomial_Set+0x50>)
 80047c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80047cc:	0800485b 	.word	0x0800485b
 80047d0:	08004855 	.word	0x08004855
 80047d4:	08004855 	.word	0x08004855
 80047d8:	08004855 	.word	0x08004855
 80047dc:	08004855 	.word	0x08004855
 80047e0:	08004855 	.word	0x08004855
 80047e4:	08004855 	.word	0x08004855
 80047e8:	08004855 	.word	0x08004855
 80047ec:	08004849 	.word	0x08004849
 80047f0:	08004855 	.word	0x08004855
 80047f4:	08004855 	.word	0x08004855
 80047f8:	08004855 	.word	0x08004855
 80047fc:	08004855 	.word	0x08004855
 8004800:	08004855 	.word	0x08004855
 8004804:	08004855 	.word	0x08004855
 8004808:	08004855 	.word	0x08004855
 800480c:	0800483d 	.word	0x0800483d
 8004810:	08004855 	.word	0x08004855
 8004814:	08004855 	.word	0x08004855
 8004818:	08004855 	.word	0x08004855
 800481c:	08004855 	.word	0x08004855
 8004820:	08004855 	.word	0x08004855
 8004824:	08004855 	.word	0x08004855
 8004828:	08004855 	.word	0x08004855
 800482c:	08004831 	.word	0x08004831
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8004830:	693b      	ldr	r3, [r7, #16]
 8004832:	2b06      	cmp	r3, #6
 8004834:	d913      	bls.n	800485e <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 8004836:	2301      	movs	r3, #1
 8004838:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800483a:	e010      	b.n	800485e <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 800483c:	693b      	ldr	r3, [r7, #16]
 800483e:	2b07      	cmp	r3, #7
 8004840:	d90f      	bls.n	8004862 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8004842:	2301      	movs	r3, #1
 8004844:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8004846:	e00c      	b.n	8004862 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 8004848:	693b      	ldr	r3, [r7, #16]
 800484a:	2b0f      	cmp	r3, #15
 800484c:	d90b      	bls.n	8004866 <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 800484e:	2301      	movs	r3, #1
 8004850:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8004852:	e008      	b.n	8004866 <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8004854:	2301      	movs	r3, #1
 8004856:	75fb      	strb	r3, [r7, #23]
        break;
 8004858:	e006      	b.n	8004868 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800485a:	bf00      	nop
 800485c:	e004      	b.n	8004868 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800485e:	bf00      	nop
 8004860:	e002      	b.n	8004868 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8004862:	bf00      	nop
 8004864:	e000      	b.n	8004868 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8004866:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 8004868:	7dfb      	ldrb	r3, [r7, #23]
 800486a:	2b00      	cmp	r3, #0
 800486c:	d10d      	bne.n	800488a <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	68ba      	ldr	r2, [r7, #8]
 8004874:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8004876:	68fb      	ldr	r3, [r7, #12]
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	689b      	ldr	r3, [r3, #8]
 800487c:	f023 0118 	bic.w	r1, r3, #24
 8004880:	68fb      	ldr	r3, [r7, #12]
 8004882:	681b      	ldr	r3, [r3, #0]
 8004884:	687a      	ldr	r2, [r7, #4]
 8004886:	430a      	orrs	r2, r1
 8004888:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 800488a:	7dfb      	ldrb	r3, [r7, #23]
}
 800488c:	4618      	mov	r0, r3
 800488e:	371c      	adds	r7, #28
 8004890:	46bd      	mov	sp, r7
 8004892:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004896:	4770      	bx	lr

08004898 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8004898:	b580      	push	{r7, lr}
 800489a:	b082      	sub	sp, #8
 800489c:	af00      	add	r7, sp, #0
 800489e:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80048a0:	687b      	ldr	r3, [r7, #4]
 80048a2:	2b00      	cmp	r3, #0
 80048a4:	d101      	bne.n	80048aa <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 80048a6:	2301      	movs	r3, #1
 80048a8:	e039      	b.n	800491e <HAL_DMA2D_Init+0x86>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 80048b0:	b2db      	uxtb	r3, r3
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d106      	bne.n	80048c4 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	2200      	movs	r2, #0
 80048ba:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80048be:	6878      	ldr	r0, [r7, #4]
 80048c0:	f7fb fee2 	bl	8000688 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80048c4:	687b      	ldr	r3, [r7, #4]
 80048c6:	2202      	movs	r2, #2
 80048c8:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80048cc:	687b      	ldr	r3, [r7, #4]
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	681b      	ldr	r3, [r3, #0]
 80048d2:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 80048d6:	687b      	ldr	r3, [r7, #4]
 80048d8:	685a      	ldr	r2, [r3, #4]
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	430a      	orrs	r2, r1
 80048e0:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80048e8:	f023 0107 	bic.w	r1, r3, #7
 80048ec:	687b      	ldr	r3, [r7, #4]
 80048ee:	689a      	ldr	r2, [r3, #8]
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	430a      	orrs	r2, r1
 80048f6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80048fe:	4b0a      	ldr	r3, [pc, #40]	@ (8004928 <HAL_DMA2D_Init+0x90>)
 8004900:	4013      	ands	r3, r2
 8004902:	687a      	ldr	r2, [r7, #4]
 8004904:	68d1      	ldr	r1, [r2, #12]
 8004906:	687a      	ldr	r2, [r7, #4]
 8004908:	6812      	ldr	r2, [r2, #0]
 800490a:	430b      	orrs	r3, r1
 800490c:	6413      	str	r3, [r2, #64]	@ 0x40
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	2200      	movs	r2, #0
 8004912:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8004914:	687b      	ldr	r3, [r7, #4]
 8004916:	2201      	movs	r2, #1
 8004918:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  return HAL_OK;
 800491c:	2300      	movs	r3, #0
}
 800491e:	4618      	mov	r0, r3
 8004920:	3708      	adds	r7, #8
 8004922:	46bd      	mov	sp, r7
 8004924:	bd80      	pop	{r7, pc}
 8004926:	bf00      	nop
 8004928:	ffffc000 	.word	0xffffc000

0800492c <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 800492c:	b580      	push	{r7, lr}
 800492e:	b084      	sub	sp, #16
 8004930:	af00      	add	r7, sp, #0
 8004932:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8004934:	687b      	ldr	r3, [r7, #4]
 8004936:	681b      	ldr	r3, [r3, #0]
 8004938:	685b      	ldr	r3, [r3, #4]
 800493a:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	681b      	ldr	r3, [r3, #0]
 8004940:	681b      	ldr	r3, [r3, #0]
 8004942:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	f003 0301 	and.w	r3, r3, #1
 800494a:	2b00      	cmp	r3, #0
 800494c:	d026      	beq.n	800499c <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800494e:	68bb      	ldr	r3, [r7, #8]
 8004950:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004954:	2b00      	cmp	r3, #0
 8004956:	d021      	beq.n	800499c <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	681a      	ldr	r2, [r3, #0]
 800495e:	687b      	ldr	r3, [r7, #4]
 8004960:	681b      	ldr	r3, [r3, #0]
 8004962:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8004966:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8004968:	687b      	ldr	r3, [r7, #4]
 800496a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800496c:	f043 0201 	orr.w	r2, r3, #1
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8004974:	687b      	ldr	r3, [r7, #4]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	2201      	movs	r2, #1
 800497a:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	2204      	movs	r2, #4
 8004980:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004984:	687b      	ldr	r3, [r7, #4]
 8004986:	2200      	movs	r2, #0
 8004988:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	695b      	ldr	r3, [r3, #20]
 8004990:	2b00      	cmp	r3, #0
 8004992:	d003      	beq.n	800499c <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	695b      	ldr	r3, [r3, #20]
 8004998:	6878      	ldr	r0, [r7, #4]
 800499a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800499c:	68fb      	ldr	r3, [r7, #12]
 800499e:	f003 0320 	and.w	r3, r3, #32
 80049a2:	2b00      	cmp	r3, #0
 80049a4:	d026      	beq.n	80049f4 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80049a6:	68bb      	ldr	r3, [r7, #8]
 80049a8:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80049ac:	2b00      	cmp	r3, #0
 80049ae:	d021      	beq.n	80049f4 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80049b0:	687b      	ldr	r3, [r7, #4]
 80049b2:	681b      	ldr	r3, [r3, #0]
 80049b4:	681a      	ldr	r2, [r3, #0]
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80049be:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	2220      	movs	r2, #32
 80049c6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80049c8:	687b      	ldr	r3, [r7, #4]
 80049ca:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80049cc:	f043 0202 	orr.w	r2, r3, #2
 80049d0:	687b      	ldr	r3, [r7, #4]
 80049d2:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	2204      	movs	r2, #4
 80049d8:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	2200      	movs	r2, #0
 80049e0:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	695b      	ldr	r3, [r3, #20]
 80049e8:	2b00      	cmp	r3, #0
 80049ea:	d003      	beq.n	80049f4 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80049ec:	687b      	ldr	r3, [r7, #4]
 80049ee:	695b      	ldr	r3, [r3, #20]
 80049f0:	6878      	ldr	r0, [r7, #4]
 80049f2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80049f4:	68fb      	ldr	r3, [r7, #12]
 80049f6:	f003 0308 	and.w	r3, r3, #8
 80049fa:	2b00      	cmp	r3, #0
 80049fc:	d026      	beq.n	8004a4c <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80049fe:	68bb      	ldr	r3, [r7, #8]
 8004a00:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004a04:	2b00      	cmp	r3, #0
 8004a06:	d021      	beq.n	8004a4c <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8004a08:	687b      	ldr	r3, [r7, #4]
 8004a0a:	681b      	ldr	r3, [r3, #0]
 8004a0c:	681a      	ldr	r2, [r3, #0]
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	681b      	ldr	r3, [r3, #0]
 8004a12:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004a16:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	2208      	movs	r2, #8
 8004a1e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8004a20:	687b      	ldr	r3, [r7, #4]
 8004a22:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004a24:	f043 0204 	orr.w	r2, r3, #4
 8004a28:	687b      	ldr	r3, [r7, #4]
 8004a2a:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8004a2c:	687b      	ldr	r3, [r7, #4]
 8004a2e:	2204      	movs	r2, #4
 8004a30:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004a34:	687b      	ldr	r3, [r7, #4]
 8004a36:	2200      	movs	r2, #0
 8004a38:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8004a3c:	687b      	ldr	r3, [r7, #4]
 8004a3e:	695b      	ldr	r3, [r3, #20]
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d003      	beq.n	8004a4c <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8004a44:	687b      	ldr	r3, [r7, #4]
 8004a46:	695b      	ldr	r3, [r3, #20]
 8004a48:	6878      	ldr	r0, [r7, #4]
 8004a4a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8004a4c:	68fb      	ldr	r3, [r7, #12]
 8004a4e:	f003 0304 	and.w	r3, r3, #4
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	d013      	beq.n	8004a7e <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8004a56:	68bb      	ldr	r3, [r7, #8]
 8004a58:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d00e      	beq.n	8004a7e <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8004a60:	687b      	ldr	r3, [r7, #4]
 8004a62:	681b      	ldr	r3, [r3, #0]
 8004a64:	681a      	ldr	r2, [r3, #0]
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	681b      	ldr	r3, [r3, #0]
 8004a6a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004a6e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	681b      	ldr	r3, [r3, #0]
 8004a74:	2204      	movs	r2, #4
 8004a76:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8004a78:	6878      	ldr	r0, [r7, #4]
 8004a7a:	f000 f853 	bl	8004b24 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8004a7e:	68fb      	ldr	r3, [r7, #12]
 8004a80:	f003 0302 	and.w	r3, r3, #2
 8004a84:	2b00      	cmp	r3, #0
 8004a86:	d024      	beq.n	8004ad2 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8004a88:	68bb      	ldr	r3, [r7, #8]
 8004a8a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004a8e:	2b00      	cmp	r3, #0
 8004a90:	d01f      	beq.n	8004ad2 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8004a92:	687b      	ldr	r3, [r7, #4]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	681a      	ldr	r2, [r3, #0]
 8004a98:	687b      	ldr	r3, [r7, #4]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8004aa0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	681b      	ldr	r3, [r3, #0]
 8004aa6:	2202      	movs	r2, #2
 8004aa8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004aaa:	687b      	ldr	r3, [r7, #4]
 8004aac:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	2201      	movs	r2, #1
 8004ab6:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	2200      	movs	r2, #0
 8004abe:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8004ac2:	687b      	ldr	r3, [r7, #4]
 8004ac4:	691b      	ldr	r3, [r3, #16]
 8004ac6:	2b00      	cmp	r3, #0
 8004ac8:	d003      	beq.n	8004ad2 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8004aca:	687b      	ldr	r3, [r7, #4]
 8004acc:	691b      	ldr	r3, [r3, #16]
 8004ace:	6878      	ldr	r0, [r7, #4]
 8004ad0:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8004ad2:	68fb      	ldr	r3, [r7, #12]
 8004ad4:	f003 0310 	and.w	r3, r3, #16
 8004ad8:	2b00      	cmp	r3, #0
 8004ada:	d01f      	beq.n	8004b1c <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8004adc:	68bb      	ldr	r3, [r7, #8]
 8004ade:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004ae2:	2b00      	cmp	r3, #0
 8004ae4:	d01a      	beq.n	8004b1c <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8004ae6:	687b      	ldr	r3, [r7, #4]
 8004ae8:	681b      	ldr	r3, [r3, #0]
 8004aea:	681a      	ldr	r2, [r3, #0]
 8004aec:	687b      	ldr	r3, [r7, #4]
 8004aee:	681b      	ldr	r3, [r3, #0]
 8004af0:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004af4:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	2210      	movs	r2, #16
 8004afc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8004afe:	687b      	ldr	r3, [r7, #4]
 8004b00:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	2201      	movs	r2, #1
 8004b0a:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8004b0e:	687b      	ldr	r3, [r7, #4]
 8004b10:	2200      	movs	r2, #0
 8004b12:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8004b16:	6878      	ldr	r0, [r7, #4]
 8004b18:	f000 f80e 	bl	8004b38 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8004b1c:	bf00      	nop
 8004b1e:	3710      	adds	r7, #16
 8004b20:	46bd      	mov	sp, r7
 8004b22:	bd80      	pop	{r7, pc}

08004b24 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8004b24:	b480      	push	{r7}
 8004b26:	b083      	sub	sp, #12
 8004b28:	af00      	add	r7, sp, #0
 8004b2a:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 8004b2c:	bf00      	nop
 8004b2e:	370c      	adds	r7, #12
 8004b30:	46bd      	mov	sp, r7
 8004b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b36:	4770      	bx	lr

08004b38 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8004b38:	b480      	push	{r7}
 8004b3a:	b083      	sub	sp, #12
 8004b3c:	af00      	add	r7, sp, #0
 8004b3e:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8004b40:	bf00      	nop
 8004b42:	370c      	adds	r7, #12
 8004b44:	46bd      	mov	sp, r7
 8004b46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b4a:	4770      	bx	lr

08004b4c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8004b4c:	b480      	push	{r7}
 8004b4e:	b087      	sub	sp, #28
 8004b50:	af00      	add	r7, sp, #0
 8004b52:	6078      	str	r0, [r7, #4]
 8004b54:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	685b      	ldr	r3, [r3, #4]
 8004b5a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8004b64:	2b01      	cmp	r3, #1
 8004b66:	d101      	bne.n	8004b6c <HAL_DMA2D_ConfigLayer+0x20>
 8004b68:	2302      	movs	r3, #2
 8004b6a:	e079      	b.n	8004c60 <HAL_DMA2D_ConfigLayer+0x114>
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2201      	movs	r2, #1
 8004b70:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	2202      	movs	r2, #2
 8004b78:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8004b7c:	683b      	ldr	r3, [r7, #0]
 8004b7e:	011b      	lsls	r3, r3, #4
 8004b80:	3318      	adds	r3, #24
 8004b82:	687a      	ldr	r2, [r7, #4]
 8004b84:	4413      	add	r3, r2
 8004b86:	613b      	str	r3, [r7, #16]
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8004b88:	693b      	ldr	r3, [r7, #16]
 8004b8a:	685a      	ldr	r2, [r3, #4]
 8004b8c:	693b      	ldr	r3, [r7, #16]
 8004b8e:	689b      	ldr	r3, [r3, #8]
 8004b90:	041b      	lsls	r3, r3, #16
 8004b92:	4313      	orrs	r3, r2
 8004b94:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 8004b96:	4b35      	ldr	r3, [pc, #212]	@ (8004c6c <HAL_DMA2D_ConfigLayer+0x120>)
 8004b98:	60fb      	str	r3, [r7, #12]
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004b9a:	693b      	ldr	r3, [r7, #16]
 8004b9c:	685b      	ldr	r3, [r3, #4]
 8004b9e:	2b0a      	cmp	r3, #10
 8004ba0:	d003      	beq.n	8004baa <HAL_DMA2D_ConfigLayer+0x5e>
 8004ba2:	693b      	ldr	r3, [r7, #16]
 8004ba4:	685b      	ldr	r3, [r3, #4]
 8004ba6:	2b09      	cmp	r3, #9
 8004ba8:	d107      	bne.n	8004bba <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8004baa:	693b      	ldr	r3, [r7, #16]
 8004bac:	68db      	ldr	r3, [r3, #12]
 8004bae:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 8004bb2:	697a      	ldr	r2, [r7, #20]
 8004bb4:	4313      	orrs	r3, r2
 8004bb6:	617b      	str	r3, [r7, #20]
 8004bb8:	e005      	b.n	8004bc6 <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8004bba:	693b      	ldr	r3, [r7, #16]
 8004bbc:	68db      	ldr	r3, [r3, #12]
 8004bbe:	061b      	lsls	r3, r3, #24
 8004bc0:	697a      	ldr	r2, [r7, #20]
 8004bc2:	4313      	orrs	r3, r2
 8004bc4:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8004bc6:	683b      	ldr	r3, [r7, #0]
 8004bc8:	2b00      	cmp	r3, #0
 8004bca:	d120      	bne.n	8004c0e <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	681b      	ldr	r3, [r3, #0]
 8004bd0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004bd2:	68fb      	ldr	r3, [r7, #12]
 8004bd4:	43db      	mvns	r3, r3
 8004bd6:	ea02 0103 	and.w	r1, r2, r3
 8004bda:	687b      	ldr	r3, [r7, #4]
 8004bdc:	681b      	ldr	r3, [r3, #0]
 8004bde:	697a      	ldr	r2, [r7, #20]
 8004be0:	430a      	orrs	r2, r1
 8004be2:	625a      	str	r2, [r3, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8004be4:	687b      	ldr	r3, [r7, #4]
 8004be6:	681b      	ldr	r3, [r3, #0]
 8004be8:	693a      	ldr	r2, [r7, #16]
 8004bea:	6812      	ldr	r2, [r2, #0]
 8004bec:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004bee:	693b      	ldr	r3, [r7, #16]
 8004bf0:	685b      	ldr	r3, [r3, #4]
 8004bf2:	2b0a      	cmp	r3, #10
 8004bf4:	d003      	beq.n	8004bfe <HAL_DMA2D_ConfigLayer+0xb2>
 8004bf6:	693b      	ldr	r3, [r7, #16]
 8004bf8:	685b      	ldr	r3, [r3, #4]
 8004bfa:	2b09      	cmp	r3, #9
 8004bfc:	d127      	bne.n	8004c4e <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8004bfe:	693b      	ldr	r3, [r7, #16]
 8004c00:	68da      	ldr	r2, [r3, #12]
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	681b      	ldr	r3, [r3, #0]
 8004c06:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 8004c0a:	629a      	str	r2, [r3, #40]	@ 0x28
 8004c0c:	e01f      	b.n	8004c4e <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8004c0e:	687b      	ldr	r3, [r7, #4]
 8004c10:	681b      	ldr	r3, [r3, #0]
 8004c12:	69da      	ldr	r2, [r3, #28]
 8004c14:	68fb      	ldr	r3, [r7, #12]
 8004c16:	43db      	mvns	r3, r3
 8004c18:	ea02 0103 	and.w	r1, r2, r3
 8004c1c:	687b      	ldr	r3, [r7, #4]
 8004c1e:	681b      	ldr	r3, [r3, #0]
 8004c20:	697a      	ldr	r2, [r7, #20]
 8004c22:	430a      	orrs	r2, r1
 8004c24:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	681b      	ldr	r3, [r3, #0]
 8004c2a:	693a      	ldr	r2, [r7, #16]
 8004c2c:	6812      	ldr	r2, [r2, #0]
 8004c2e:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8004c30:	693b      	ldr	r3, [r7, #16]
 8004c32:	685b      	ldr	r3, [r3, #4]
 8004c34:	2b0a      	cmp	r3, #10
 8004c36:	d003      	beq.n	8004c40 <HAL_DMA2D_ConfigLayer+0xf4>
 8004c38:	693b      	ldr	r3, [r7, #16]
 8004c3a:	685b      	ldr	r3, [r3, #4]
 8004c3c:	2b09      	cmp	r3, #9
 8004c3e:	d106      	bne.n	8004c4e <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8004c40:	693b      	ldr	r3, [r7, #16]
 8004c42:	68da      	ldr	r2, [r3, #12]
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 8004c4c:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	2201      	movs	r2, #1
 8004c52:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	2200      	movs	r2, #0
 8004c5a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  return HAL_OK;
 8004c5e:	2300      	movs	r3, #0
}
 8004c60:	4618      	mov	r0, r3
 8004c62:	371c      	adds	r7, #28
 8004c64:	46bd      	mov	sp, r7
 8004c66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c6a:	4770      	bx	lr
 8004c6c:	ff03000f 	.word	0xff03000f

08004c70 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004c70:	b480      	push	{r7}
 8004c72:	b089      	sub	sp, #36	@ 0x24
 8004c74:	af00      	add	r7, sp, #0
 8004c76:	6078      	str	r0, [r7, #4]
 8004c78:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 8004c7a:	2300      	movs	r3, #0
 8004c7c:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 8004c7e:	2300      	movs	r3, #0
 8004c80:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 8004c82:	2300      	movs	r3, #0
 8004c84:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 8004c86:	2300      	movs	r3, #0
 8004c88:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for (position = 0; position < GPIO_NUMBER; position++)
 8004c8a:	2300      	movs	r3, #0
 8004c8c:	61fb      	str	r3, [r7, #28]
 8004c8e:	e175      	b.n	8004f7c <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8004c90:	2201      	movs	r2, #1
 8004c92:	69fb      	ldr	r3, [r7, #28]
 8004c94:	fa02 f303 	lsl.w	r3, r2, r3
 8004c98:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004c9a:	683b      	ldr	r3, [r7, #0]
 8004c9c:	681b      	ldr	r3, [r3, #0]
 8004c9e:	697a      	ldr	r2, [r7, #20]
 8004ca0:	4013      	ands	r3, r2
 8004ca2:	613b      	str	r3, [r7, #16]

    if (iocurrent == ioposition)
 8004ca4:	693a      	ldr	r2, [r7, #16]
 8004ca6:	697b      	ldr	r3, [r7, #20]
 8004ca8:	429a      	cmp	r2, r3
 8004caa:	f040 8164 	bne.w	8004f76 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8004cae:	683b      	ldr	r3, [r7, #0]
 8004cb0:	685b      	ldr	r3, [r3, #4]
 8004cb2:	f003 0303 	and.w	r3, r3, #3
 8004cb6:	2b01      	cmp	r3, #1
 8004cb8:	d005      	beq.n	8004cc6 <HAL_GPIO_Init+0x56>
 8004cba:	683b      	ldr	r3, [r7, #0]
 8004cbc:	685b      	ldr	r3, [r3, #4]
 8004cbe:	f003 0303 	and.w	r3, r3, #3
 8004cc2:	2b02      	cmp	r3, #2
 8004cc4:	d130      	bne.n	8004d28 <HAL_GPIO_Init+0xb8>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8004cc6:	687b      	ldr	r3, [r7, #4]
 8004cc8:	689b      	ldr	r3, [r3, #8]
 8004cca:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 8004ccc:	69fb      	ldr	r3, [r7, #28]
 8004cce:	005b      	lsls	r3, r3, #1
 8004cd0:	2203      	movs	r2, #3
 8004cd2:	fa02 f303 	lsl.w	r3, r2, r3
 8004cd6:	43db      	mvns	r3, r3
 8004cd8:	69ba      	ldr	r2, [r7, #24]
 8004cda:	4013      	ands	r3, r2
 8004cdc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 8004cde:	683b      	ldr	r3, [r7, #0]
 8004ce0:	68da      	ldr	r2, [r3, #12]
 8004ce2:	69fb      	ldr	r3, [r7, #28]
 8004ce4:	005b      	lsls	r3, r3, #1
 8004ce6:	fa02 f303 	lsl.w	r3, r2, r3
 8004cea:	69ba      	ldr	r2, [r7, #24]
 8004cec:	4313      	orrs	r3, r2
 8004cee:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	69ba      	ldr	r2, [r7, #24]
 8004cf4:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	685b      	ldr	r3, [r3, #4]
 8004cfa:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004cfc:	2201      	movs	r2, #1
 8004cfe:	69fb      	ldr	r3, [r7, #28]
 8004d00:	fa02 f303 	lsl.w	r3, r2, r3
 8004d04:	43db      	mvns	r3, r3
 8004d06:	69ba      	ldr	r2, [r7, #24]
 8004d08:	4013      	ands	r3, r2
 8004d0a:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004d0c:	683b      	ldr	r3, [r7, #0]
 8004d0e:	685b      	ldr	r3, [r3, #4]
 8004d10:	091b      	lsrs	r3, r3, #4
 8004d12:	f003 0201 	and.w	r2, r3, #1
 8004d16:	69fb      	ldr	r3, [r7, #28]
 8004d18:	fa02 f303 	lsl.w	r3, r2, r3
 8004d1c:	69ba      	ldr	r2, [r7, #24]
 8004d1e:	4313      	orrs	r3, r2
 8004d20:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	69ba      	ldr	r2, [r7, #24]
 8004d26:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8004d28:	683b      	ldr	r3, [r7, #0]
 8004d2a:	685b      	ldr	r3, [r3, #4]
 8004d2c:	f003 0303 	and.w	r3, r3, #3
 8004d30:	2b03      	cmp	r3, #3
 8004d32:	d017      	beq.n	8004d64 <HAL_GPIO_Init+0xf4>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	68db      	ldr	r3, [r3, #12]
 8004d38:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8004d3a:	69fb      	ldr	r3, [r7, #28]
 8004d3c:	005b      	lsls	r3, r3, #1
 8004d3e:	2203      	movs	r2, #3
 8004d40:	fa02 f303 	lsl.w	r3, r2, r3
 8004d44:	43db      	mvns	r3, r3
 8004d46:	69ba      	ldr	r2, [r7, #24]
 8004d48:	4013      	ands	r3, r2
 8004d4a:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2));
 8004d4c:	683b      	ldr	r3, [r7, #0]
 8004d4e:	689a      	ldr	r2, [r3, #8]
 8004d50:	69fb      	ldr	r3, [r7, #28]
 8004d52:	005b      	lsls	r3, r3, #1
 8004d54:	fa02 f303 	lsl.w	r3, r2, r3
 8004d58:	69ba      	ldr	r2, [r7, #24]
 8004d5a:	4313      	orrs	r3, r2
 8004d5c:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8004d5e:	687b      	ldr	r3, [r7, #4]
 8004d60:	69ba      	ldr	r2, [r7, #24]
 8004d62:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004d64:	683b      	ldr	r3, [r7, #0]
 8004d66:	685b      	ldr	r3, [r3, #4]
 8004d68:	f003 0303 	and.w	r3, r3, #3
 8004d6c:	2b02      	cmp	r3, #2
 8004d6e:	d123      	bne.n	8004db8 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8004d70:	69fb      	ldr	r3, [r7, #28]
 8004d72:	08da      	lsrs	r2, r3, #3
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	3208      	adds	r2, #8
 8004d78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004d7c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8004d7e:	69fb      	ldr	r3, [r7, #28]
 8004d80:	f003 0307 	and.w	r3, r3, #7
 8004d84:	009b      	lsls	r3, r3, #2
 8004d86:	220f      	movs	r2, #15
 8004d88:	fa02 f303 	lsl.w	r3, r2, r3
 8004d8c:	43db      	mvns	r3, r3
 8004d8e:	69ba      	ldr	r2, [r7, #24]
 8004d90:	4013      	ands	r3, r2
 8004d92:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8004d94:	683b      	ldr	r3, [r7, #0]
 8004d96:	691a      	ldr	r2, [r3, #16]
 8004d98:	69fb      	ldr	r3, [r7, #28]
 8004d9a:	f003 0307 	and.w	r3, r3, #7
 8004d9e:	009b      	lsls	r3, r3, #2
 8004da0:	fa02 f303 	lsl.w	r3, r2, r3
 8004da4:	69ba      	ldr	r2, [r7, #24]
 8004da6:	4313      	orrs	r3, r2
 8004da8:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 8004daa:	69fb      	ldr	r3, [r7, #28]
 8004dac:	08da      	lsrs	r2, r3, #3
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	3208      	adds	r2, #8
 8004db2:	69b9      	ldr	r1, [r7, #24]
 8004db4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 8004dbe:	69fb      	ldr	r3, [r7, #28]
 8004dc0:	005b      	lsls	r3, r3, #1
 8004dc2:	2203      	movs	r2, #3
 8004dc4:	fa02 f303 	lsl.w	r3, r2, r3
 8004dc8:	43db      	mvns	r3, r3
 8004dca:	69ba      	ldr	r2, [r7, #24]
 8004dcc:	4013      	ands	r3, r2
 8004dce:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 8004dd0:	683b      	ldr	r3, [r7, #0]
 8004dd2:	685b      	ldr	r3, [r3, #4]
 8004dd4:	f003 0203 	and.w	r2, r3, #3
 8004dd8:	69fb      	ldr	r3, [r7, #28]
 8004dda:	005b      	lsls	r3, r3, #1
 8004ddc:	fa02 f303 	lsl.w	r3, r2, r3
 8004de0:	69ba      	ldr	r2, [r7, #24]
 8004de2:	4313      	orrs	r3, r2
 8004de4:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8004de6:	687b      	ldr	r3, [r7, #4]
 8004de8:	69ba      	ldr	r2, [r7, #24]
 8004dea:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8004dec:	683b      	ldr	r3, [r7, #0]
 8004dee:	685b      	ldr	r3, [r3, #4]
 8004df0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004df4:	2b00      	cmp	r3, #0
 8004df6:	f000 80be 	beq.w	8004f76 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004dfa:	4b66      	ldr	r3, [pc, #408]	@ (8004f94 <HAL_GPIO_Init+0x324>)
 8004dfc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004dfe:	4a65      	ldr	r2, [pc, #404]	@ (8004f94 <HAL_GPIO_Init+0x324>)
 8004e00:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8004e04:	6453      	str	r3, [r2, #68]	@ 0x44
 8004e06:	4b63      	ldr	r3, [pc, #396]	@ (8004f94 <HAL_GPIO_Init+0x324>)
 8004e08:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004e0a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004e0e:	60fb      	str	r3, [r7, #12]
 8004e10:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 8004e12:	4a61      	ldr	r2, [pc, #388]	@ (8004f98 <HAL_GPIO_Init+0x328>)
 8004e14:	69fb      	ldr	r3, [r7, #28]
 8004e16:	089b      	lsrs	r3, r3, #2
 8004e18:	3302      	adds	r3, #2
 8004e1a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004e1e:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8004e20:	69fb      	ldr	r3, [r7, #28]
 8004e22:	f003 0303 	and.w	r3, r3, #3
 8004e26:	009b      	lsls	r3, r3, #2
 8004e28:	220f      	movs	r2, #15
 8004e2a:	fa02 f303 	lsl.w	r3, r2, r3
 8004e2e:	43db      	mvns	r3, r3
 8004e30:	69ba      	ldr	r2, [r7, #24]
 8004e32:	4013      	ands	r3, r2
 8004e34:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	4a58      	ldr	r2, [pc, #352]	@ (8004f9c <HAL_GPIO_Init+0x32c>)
 8004e3a:	4293      	cmp	r3, r2
 8004e3c:	d037      	beq.n	8004eae <HAL_GPIO_Init+0x23e>
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	4a57      	ldr	r2, [pc, #348]	@ (8004fa0 <HAL_GPIO_Init+0x330>)
 8004e42:	4293      	cmp	r3, r2
 8004e44:	d031      	beq.n	8004eaa <HAL_GPIO_Init+0x23a>
 8004e46:	687b      	ldr	r3, [r7, #4]
 8004e48:	4a56      	ldr	r2, [pc, #344]	@ (8004fa4 <HAL_GPIO_Init+0x334>)
 8004e4a:	4293      	cmp	r3, r2
 8004e4c:	d02b      	beq.n	8004ea6 <HAL_GPIO_Init+0x236>
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	4a55      	ldr	r2, [pc, #340]	@ (8004fa8 <HAL_GPIO_Init+0x338>)
 8004e52:	4293      	cmp	r3, r2
 8004e54:	d025      	beq.n	8004ea2 <HAL_GPIO_Init+0x232>
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	4a54      	ldr	r2, [pc, #336]	@ (8004fac <HAL_GPIO_Init+0x33c>)
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d01f      	beq.n	8004e9e <HAL_GPIO_Init+0x22e>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	4a53      	ldr	r2, [pc, #332]	@ (8004fb0 <HAL_GPIO_Init+0x340>)
 8004e62:	4293      	cmp	r3, r2
 8004e64:	d019      	beq.n	8004e9a <HAL_GPIO_Init+0x22a>
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	4a52      	ldr	r2, [pc, #328]	@ (8004fb4 <HAL_GPIO_Init+0x344>)
 8004e6a:	4293      	cmp	r3, r2
 8004e6c:	d013      	beq.n	8004e96 <HAL_GPIO_Init+0x226>
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	4a51      	ldr	r2, [pc, #324]	@ (8004fb8 <HAL_GPIO_Init+0x348>)
 8004e72:	4293      	cmp	r3, r2
 8004e74:	d00d      	beq.n	8004e92 <HAL_GPIO_Init+0x222>
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	4a50      	ldr	r2, [pc, #320]	@ (8004fbc <HAL_GPIO_Init+0x34c>)
 8004e7a:	4293      	cmp	r3, r2
 8004e7c:	d007      	beq.n	8004e8e <HAL_GPIO_Init+0x21e>
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	4a4f      	ldr	r2, [pc, #316]	@ (8004fc0 <HAL_GPIO_Init+0x350>)
 8004e82:	4293      	cmp	r3, r2
 8004e84:	d101      	bne.n	8004e8a <HAL_GPIO_Init+0x21a>
 8004e86:	2309      	movs	r3, #9
 8004e88:	e012      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004e8a:	230a      	movs	r3, #10
 8004e8c:	e010      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004e8e:	2308      	movs	r3, #8
 8004e90:	e00e      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004e92:	2307      	movs	r3, #7
 8004e94:	e00c      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004e96:	2306      	movs	r3, #6
 8004e98:	e00a      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004e9a:	2305      	movs	r3, #5
 8004e9c:	e008      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004e9e:	2304      	movs	r3, #4
 8004ea0:	e006      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004ea2:	2303      	movs	r3, #3
 8004ea4:	e004      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004ea6:	2302      	movs	r3, #2
 8004ea8:	e002      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004eaa:	2301      	movs	r3, #1
 8004eac:	e000      	b.n	8004eb0 <HAL_GPIO_Init+0x240>
 8004eae:	2300      	movs	r3, #0
 8004eb0:	69fa      	ldr	r2, [r7, #28]
 8004eb2:	f002 0203 	and.w	r2, r2, #3
 8004eb6:	0092      	lsls	r2, r2, #2
 8004eb8:	4093      	lsls	r3, r2
 8004eba:	69ba      	ldr	r2, [r7, #24]
 8004ebc:	4313      	orrs	r3, r2
 8004ebe:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 8004ec0:	4935      	ldr	r1, [pc, #212]	@ (8004f98 <HAL_GPIO_Init+0x328>)
 8004ec2:	69fb      	ldr	r3, [r7, #28]
 8004ec4:	089b      	lsrs	r3, r3, #2
 8004ec6:	3302      	adds	r3, #2
 8004ec8:	69ba      	ldr	r2, [r7, #24]
 8004eca:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8004ece:	4b3d      	ldr	r3, [pc, #244]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004ed0:	689b      	ldr	r3, [r3, #8]
 8004ed2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004ed4:	693b      	ldr	r3, [r7, #16]
 8004ed6:	43db      	mvns	r3, r3
 8004ed8:	69ba      	ldr	r2, [r7, #24]
 8004eda:	4013      	ands	r3, r2
 8004edc:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8004ede:	683b      	ldr	r3, [r7, #0]
 8004ee0:	685b      	ldr	r3, [r3, #4]
 8004ee2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	d003      	beq.n	8004ef2 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8004eea:	69ba      	ldr	r2, [r7, #24]
 8004eec:	693b      	ldr	r3, [r7, #16]
 8004eee:	4313      	orrs	r3, r2
 8004ef0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8004ef2:	4a34      	ldr	r2, [pc, #208]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004ef4:	69bb      	ldr	r3, [r7, #24]
 8004ef6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8004ef8:	4b32      	ldr	r3, [pc, #200]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004efa:	68db      	ldr	r3, [r3, #12]
 8004efc:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004efe:	693b      	ldr	r3, [r7, #16]
 8004f00:	43db      	mvns	r3, r3
 8004f02:	69ba      	ldr	r2, [r7, #24]
 8004f04:	4013      	ands	r3, r2
 8004f06:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8004f08:	683b      	ldr	r3, [r7, #0]
 8004f0a:	685b      	ldr	r3, [r3, #4]
 8004f0c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004f10:	2b00      	cmp	r3, #0
 8004f12:	d003      	beq.n	8004f1c <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8004f14:	69ba      	ldr	r2, [r7, #24]
 8004f16:	693b      	ldr	r3, [r7, #16]
 8004f18:	4313      	orrs	r3, r2
 8004f1a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004f1c:	4a29      	ldr	r2, [pc, #164]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004f1e:	69bb      	ldr	r3, [r7, #24]
 8004f20:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8004f22:	4b28      	ldr	r3, [pc, #160]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004f24:	685b      	ldr	r3, [r3, #4]
 8004f26:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004f28:	693b      	ldr	r3, [r7, #16]
 8004f2a:	43db      	mvns	r3, r3
 8004f2c:	69ba      	ldr	r2, [r7, #24]
 8004f2e:	4013      	ands	r3, r2
 8004f30:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8004f32:	683b      	ldr	r3, [r7, #0]
 8004f34:	685b      	ldr	r3, [r3, #4]
 8004f36:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d003      	beq.n	8004f46 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 8004f3e:	69ba      	ldr	r2, [r7, #24]
 8004f40:	693b      	ldr	r3, [r7, #16]
 8004f42:	4313      	orrs	r3, r2
 8004f44:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8004f46:	4a1f      	ldr	r2, [pc, #124]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004f48:	69bb      	ldr	r3, [r7, #24]
 8004f4a:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004f4c:	4b1d      	ldr	r3, [pc, #116]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004f4e:	681b      	ldr	r3, [r3, #0]
 8004f50:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004f52:	693b      	ldr	r3, [r7, #16]
 8004f54:	43db      	mvns	r3, r3
 8004f56:	69ba      	ldr	r2, [r7, #24]
 8004f58:	4013      	ands	r3, r2
 8004f5a:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8004f5c:	683b      	ldr	r3, [r7, #0]
 8004f5e:	685b      	ldr	r3, [r3, #4]
 8004f60:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004f64:	2b00      	cmp	r3, #0
 8004f66:	d003      	beq.n	8004f70 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8004f68:	69ba      	ldr	r2, [r7, #24]
 8004f6a:	693b      	ldr	r3, [r7, #16]
 8004f6c:	4313      	orrs	r3, r2
 8004f6e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004f70:	4a14      	ldr	r2, [pc, #80]	@ (8004fc4 <HAL_GPIO_Init+0x354>)
 8004f72:	69bb      	ldr	r3, [r7, #24]
 8004f74:	6013      	str	r3, [r2, #0]
  for (position = 0; position < GPIO_NUMBER; position++)
 8004f76:	69fb      	ldr	r3, [r7, #28]
 8004f78:	3301      	adds	r3, #1
 8004f7a:	61fb      	str	r3, [r7, #28]
 8004f7c:	69fb      	ldr	r3, [r7, #28]
 8004f7e:	2b0f      	cmp	r3, #15
 8004f80:	f67f ae86 	bls.w	8004c90 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8004f84:	bf00      	nop
 8004f86:	bf00      	nop
 8004f88:	3724      	adds	r7, #36	@ 0x24
 8004f8a:	46bd      	mov	sp, r7
 8004f8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f90:	4770      	bx	lr
 8004f92:	bf00      	nop
 8004f94:	40023800 	.word	0x40023800
 8004f98:	40013800 	.word	0x40013800
 8004f9c:	40020000 	.word	0x40020000
 8004fa0:	40020400 	.word	0x40020400
 8004fa4:	40020800 	.word	0x40020800
 8004fa8:	40020c00 	.word	0x40020c00
 8004fac:	40021000 	.word	0x40021000
 8004fb0:	40021400 	.word	0x40021400
 8004fb4:	40021800 	.word	0x40021800
 8004fb8:	40021c00 	.word	0x40021c00
 8004fbc:	40022000 	.word	0x40022000
 8004fc0:	40022400 	.word	0x40022400
 8004fc4:	40013c00 	.word	0x40013c00

08004fc8 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be any combination of GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8004fc8:	b480      	push	{r7}
 8004fca:	b085      	sub	sp, #20
 8004fcc:	af00      	add	r7, sp, #0
 8004fce:	6078      	str	r0, [r7, #4]
 8004fd0:	460b      	mov	r3, r1
 8004fd2:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004fd4:	687b      	ldr	r3, [r7, #4]
 8004fd6:	691a      	ldr	r2, [r3, #16]
 8004fd8:	887b      	ldrh	r3, [r7, #2]
 8004fda:	4013      	ands	r3, r2
 8004fdc:	2b00      	cmp	r3, #0
 8004fde:	d002      	beq.n	8004fe6 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8004fe0:	2301      	movs	r3, #1
 8004fe2:	73fb      	strb	r3, [r7, #15]
 8004fe4:	e001      	b.n	8004fea <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8004fe6:	2300      	movs	r3, #0
 8004fe8:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8004fea:	7bfb      	ldrb	r3, [r7, #15]
}
 8004fec:	4618      	mov	r0, r3
 8004fee:	3714      	adds	r7, #20
 8004ff0:	46bd      	mov	sp, r7
 8004ff2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ff6:	4770      	bx	lr

08004ff8 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8004ff8:	b480      	push	{r7}
 8004ffa:	b083      	sub	sp, #12
 8004ffc:	af00      	add	r7, sp, #0
 8004ffe:	6078      	str	r0, [r7, #4]
 8005000:	460b      	mov	r3, r1
 8005002:	807b      	strh	r3, [r7, #2]
 8005004:	4613      	mov	r3, r2
 8005006:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005008:	787b      	ldrb	r3, [r7, #1]
 800500a:	2b00      	cmp	r3, #0
 800500c:	d003      	beq.n	8005016 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800500e:	887a      	ldrh	r2, [r7, #2]
 8005010:	687b      	ldr	r3, [r7, #4]
 8005012:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
  }
}
 8005014:	e003      	b.n	800501e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8005016:	887b      	ldrh	r3, [r7, #2]
 8005018:	041a      	lsls	r2, r3, #16
 800501a:	687b      	ldr	r3, [r7, #4]
 800501c:	619a      	str	r2, [r3, #24]
}
 800501e:	bf00      	nop
 8005020:	370c      	adds	r7, #12
 8005022:	46bd      	mov	sp, r7
 8005024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005028:	4770      	bx	lr
	...

0800502c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800502c:	b580      	push	{r7, lr}
 800502e:	b082      	sub	sp, #8
 8005030:	af00      	add	r7, sp, #0
 8005032:	4603      	mov	r3, r0
 8005034:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8005036:	4b08      	ldr	r3, [pc, #32]	@ (8005058 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005038:	695a      	ldr	r2, [r3, #20]
 800503a:	88fb      	ldrh	r3, [r7, #6]
 800503c:	4013      	ands	r3, r2
 800503e:	2b00      	cmp	r3, #0
 8005040:	d006      	beq.n	8005050 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8005042:	4a05      	ldr	r2, [pc, #20]	@ (8005058 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005044:	88fb      	ldrh	r3, [r7, #6]
 8005046:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8005048:	88fb      	ldrh	r3, [r7, #6]
 800504a:	4618      	mov	r0, r3
 800504c:	f000 f806 	bl	800505c <HAL_GPIO_EXTI_Callback>
  }
}
 8005050:	bf00      	nop
 8005052:	3708      	adds	r7, #8
 8005054:	46bd      	mov	sp, r7
 8005056:	bd80      	pop	{r7, pc}
 8005058:	40013c00 	.word	0x40013c00

0800505c <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 800505c:	b480      	push	{r7}
 800505e:	b083      	sub	sp, #12
 8005060:	af00      	add	r7, sp, #0
 8005062:	4603      	mov	r3, r0
 8005064:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8005066:	bf00      	nop
 8005068:	370c      	adds	r7, #12
 800506a:	46bd      	mov	sp, r7
 800506c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005070:	4770      	bx	lr
	...

08005074 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8005074:	b580      	push	{r7, lr}
 8005076:	b082      	sub	sp, #8
 8005078:	af00      	add	r7, sp, #0
 800507a:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 800507c:	687b      	ldr	r3, [r7, #4]
 800507e:	2b00      	cmp	r3, #0
 8005080:	d101      	bne.n	8005086 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8005082:	2301      	movs	r3, #1
 8005084:	e08b      	b.n	800519e <HAL_I2C_Init+0x12a>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005086:	687b      	ldr	r3, [r7, #4]
 8005088:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800508c:	b2db      	uxtb	r3, r3
 800508e:	2b00      	cmp	r3, #0
 8005090:	d106      	bne.n	80050a0 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8005092:	687b      	ldr	r3, [r7, #4]
 8005094:	2200      	movs	r2, #0
 8005096:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 800509a:	6878      	ldr	r0, [r7, #4]
 800509c:	f7fb fdaa 	bl	8000bf4 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	2224      	movs	r2, #36	@ 0x24
 80050a4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80050a8:	687b      	ldr	r3, [r7, #4]
 80050aa:	681b      	ldr	r3, [r3, #0]
 80050ac:	681a      	ldr	r2, [r3, #0]
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	681b      	ldr	r3, [r3, #0]
 80050b2:	f022 0201 	bic.w	r2, r2, #1
 80050b6:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 80050b8:	687b      	ldr	r3, [r7, #4]
 80050ba:	685a      	ldr	r2, [r3, #4]
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80050c4:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	681b      	ldr	r3, [r3, #0]
 80050ca:	689a      	ldr	r2, [r3, #8]
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	681b      	ldr	r3, [r3, #0]
 80050d0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80050d4:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	68db      	ldr	r3, [r3, #12]
 80050da:	2b01      	cmp	r3, #1
 80050dc:	d107      	bne.n	80050ee <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	689a      	ldr	r2, [r3, #8]
 80050e2:	687b      	ldr	r3, [r7, #4]
 80050e4:	681b      	ldr	r3, [r3, #0]
 80050e6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80050ea:	609a      	str	r2, [r3, #8]
 80050ec:	e006      	b.n	80050fc <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 80050ee:	687b      	ldr	r3, [r7, #4]
 80050f0:	689a      	ldr	r2, [r3, #8]
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 80050fa:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	68db      	ldr	r3, [r3, #12]
 8005100:	2b02      	cmp	r3, #2
 8005102:	d108      	bne.n	8005116 <HAL_I2C_Init+0xa2>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	681b      	ldr	r3, [r3, #0]
 8005108:	685a      	ldr	r2, [r3, #4]
 800510a:	687b      	ldr	r3, [r7, #4]
 800510c:	681b      	ldr	r3, [r3, #0]
 800510e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005112:	605a      	str	r2, [r3, #4]
 8005114:	e007      	b.n	8005126 <HAL_I2C_Init+0xb2>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	685a      	ldr	r2, [r3, #4]
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005124:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	6859      	ldr	r1, [r3, #4]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681a      	ldr	r2, [r3, #0]
 8005130:	4b1d      	ldr	r3, [pc, #116]	@ (80051a8 <HAL_I2C_Init+0x134>)
 8005132:	430b      	orrs	r3, r1
 8005134:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	68da      	ldr	r2, [r3, #12]
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005144:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	691a      	ldr	r2, [r3, #16]
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	695b      	ldr	r3, [r3, #20]
 800514e:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	699b      	ldr	r3, [r3, #24]
 8005156:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	430a      	orrs	r2, r1
 800515e:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	69d9      	ldr	r1, [r3, #28]
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	6a1a      	ldr	r2, [r3, #32]
 8005168:	687b      	ldr	r3, [r7, #4]
 800516a:	681b      	ldr	r3, [r3, #0]
 800516c:	430a      	orrs	r2, r1
 800516e:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	681a      	ldr	r2, [r3, #0]
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	f042 0201 	orr.w	r2, r2, #1
 800517e:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	2200      	movs	r2, #0
 8005184:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	2220      	movs	r2, #32
 800518a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	2200      	movs	r2, #0
 8005192:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005194:	687b      	ldr	r3, [r7, #4]
 8005196:	2200      	movs	r2, #0
 8005198:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  return HAL_OK;
 800519c:	2300      	movs	r3, #0
}
 800519e:	4618      	mov	r0, r3
 80051a0:	3708      	adds	r7, #8
 80051a2:	46bd      	mov	sp, r7
 80051a4:	bd80      	pop	{r7, pc}
 80051a6:	bf00      	nop
 80051a8:	02008000 	.word	0x02008000

080051ac <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 80051ac:	b480      	push	{r7}
 80051ae:	b083      	sub	sp, #12
 80051b0:	af00      	add	r7, sp, #0
 80051b2:	6078      	str	r0, [r7, #4]
 80051b4:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80051bc:	b2db      	uxtb	r3, r3
 80051be:	2b20      	cmp	r3, #32
 80051c0:	d138      	bne.n	8005234 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80051c2:	687b      	ldr	r3, [r7, #4]
 80051c4:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80051c8:	2b01      	cmp	r3, #1
 80051ca:	d101      	bne.n	80051d0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80051cc:	2302      	movs	r3, #2
 80051ce:	e032      	b.n	8005236 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	2201      	movs	r2, #1
 80051d4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80051d8:	687b      	ldr	r3, [r7, #4]
 80051da:	2224      	movs	r2, #36	@ 0x24
 80051dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	681a      	ldr	r2, [r3, #0]
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	681b      	ldr	r3, [r3, #0]
 80051ea:	f022 0201 	bic.w	r2, r2, #1
 80051ee:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	681a      	ldr	r2, [r3, #0]
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80051fe:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8005200:	687b      	ldr	r3, [r7, #4]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	6819      	ldr	r1, [r3, #0]
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	683a      	ldr	r2, [r7, #0]
 800520c:	430a      	orrs	r2, r1
 800520e:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	681a      	ldr	r2, [r3, #0]
 8005216:	687b      	ldr	r3, [r7, #4]
 8005218:	681b      	ldr	r3, [r3, #0]
 800521a:	f042 0201 	orr.w	r2, r2, #1
 800521e:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	2220      	movs	r2, #32
 8005224:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005228:	687b      	ldr	r3, [r7, #4]
 800522a:	2200      	movs	r2, #0
 800522c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 8005230:	2300      	movs	r3, #0
 8005232:	e000      	b.n	8005236 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8005234:	2302      	movs	r3, #2
  }
}
 8005236:	4618      	mov	r0, r3
 8005238:	370c      	adds	r7, #12
 800523a:	46bd      	mov	sp, r7
 800523c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005240:	4770      	bx	lr

08005242 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8005242:	b480      	push	{r7}
 8005244:	b085      	sub	sp, #20
 8005246:	af00      	add	r7, sp, #0
 8005248:	6078      	str	r0, [r7, #4]
 800524a:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005252:	b2db      	uxtb	r3, r3
 8005254:	2b20      	cmp	r3, #32
 8005256:	d139      	bne.n	80052cc <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005258:	687b      	ldr	r3, [r7, #4]
 800525a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800525e:	2b01      	cmp	r3, #1
 8005260:	d101      	bne.n	8005266 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8005262:	2302      	movs	r3, #2
 8005264:	e033      	b.n	80052ce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8005266:	687b      	ldr	r3, [r7, #4]
 8005268:	2201      	movs	r2, #1
 800526a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	2224      	movs	r2, #36	@ 0x24
 8005272:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	681a      	ldr	r2, [r3, #0]
 800527c:	687b      	ldr	r3, [r7, #4]
 800527e:	681b      	ldr	r3, [r3, #0]
 8005280:	f022 0201 	bic.w	r2, r2, #1
 8005284:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 800528e:	68fb      	ldr	r3, [r7, #12]
 8005290:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8005294:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8005296:	683b      	ldr	r3, [r7, #0]
 8005298:	021b      	lsls	r3, r3, #8
 800529a:	68fa      	ldr	r2, [r7, #12]
 800529c:	4313      	orrs	r3, r2
 800529e:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	681b      	ldr	r3, [r3, #0]
 80052a4:	68fa      	ldr	r2, [r7, #12]
 80052a6:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	681a      	ldr	r2, [r3, #0]
 80052ae:	687b      	ldr	r3, [r7, #4]
 80052b0:	681b      	ldr	r3, [r3, #0]
 80052b2:	f042 0201 	orr.w	r2, r2, #1
 80052b6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	2220      	movs	r2, #32
 80052bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	2200      	movs	r2, #0
 80052c4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 80052c8:	2300      	movs	r3, #0
 80052ca:	e000      	b.n	80052ce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 80052cc:	2302      	movs	r3, #2
  }
}
 80052ce:	4618      	mov	r0, r3
 80052d0:	3714      	adds	r7, #20
 80052d2:	46bd      	mov	sp, r7
 80052d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052d8:	4770      	bx	lr
	...

080052dc <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 80052dc:	b580      	push	{r7, lr}
 80052de:	b084      	sub	sp, #16
 80052e0:	af00      	add	r7, sp, #0
 80052e2:	6078      	str	r0, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 80052e4:	687b      	ldr	r3, [r7, #4]
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	d101      	bne.n	80052ee <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 80052ea:	2301      	movs	r3, #1
 80052ec:	e0bf      	b.n	800546e <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	f893 30a1 	ldrb.w	r3, [r3, #161]	@ 0xa1
 80052f4:	b2db      	uxtb	r3, r3
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d106      	bne.n	8005308 <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 80052fa:	687b      	ldr	r3, [r7, #4]
 80052fc:	2200      	movs	r2, #0
 80052fe:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8005302:	6878      	ldr	r0, [r7, #4]
 8005304:	f7fb fd58 	bl	8000db8 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	2202      	movs	r2, #2
 800530c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	699a      	ldr	r2, [r3, #24]
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 800531e:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	681b      	ldr	r3, [r3, #0]
 8005324:	6999      	ldr	r1, [r3, #24]
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	685a      	ldr	r2, [r3, #4]
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	689b      	ldr	r3, [r3, #8]
 800532e:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8005334:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	691b      	ldr	r3, [r3, #16]
 800533a:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	430a      	orrs	r2, r1
 8005342:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	681b      	ldr	r3, [r3, #0]
 8005348:	6899      	ldr	r1, [r3, #8]
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	681a      	ldr	r2, [r3, #0]
 800534e:	4b4a      	ldr	r3, [pc, #296]	@ (8005478 <HAL_LTDC_Init+0x19c>)
 8005350:	400b      	ands	r3, r1
 8005352:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	695b      	ldr	r3, [r3, #20]
 8005358:	041b      	lsls	r3, r3, #16
 800535a:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	6899      	ldr	r1, [r3, #8]
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	699a      	ldr	r2, [r3, #24]
 8005366:	68fb      	ldr	r3, [r7, #12]
 8005368:	431a      	orrs	r2, r3
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	681b      	ldr	r3, [r3, #0]
 800536e:	430a      	orrs	r2, r1
 8005370:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005372:	687b      	ldr	r3, [r7, #4]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	68d9      	ldr	r1, [r3, #12]
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	681a      	ldr	r2, [r3, #0]
 800537c:	4b3e      	ldr	r3, [pc, #248]	@ (8005478 <HAL_LTDC_Init+0x19c>)
 800537e:	400b      	ands	r3, r1
 8005380:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	69db      	ldr	r3, [r3, #28]
 8005386:	041b      	lsls	r3, r3, #16
 8005388:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	681b      	ldr	r3, [r3, #0]
 800538e:	68d9      	ldr	r1, [r3, #12]
 8005390:	687b      	ldr	r3, [r7, #4]
 8005392:	6a1a      	ldr	r2, [r3, #32]
 8005394:	68fb      	ldr	r3, [r7, #12]
 8005396:	431a      	orrs	r2, r3
 8005398:	687b      	ldr	r3, [r7, #4]
 800539a:	681b      	ldr	r3, [r3, #0]
 800539c:	430a      	orrs	r2, r1
 800539e:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	681b      	ldr	r3, [r3, #0]
 80053a4:	6919      	ldr	r1, [r3, #16]
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	681a      	ldr	r2, [r3, #0]
 80053aa:	4b33      	ldr	r3, [pc, #204]	@ (8005478 <HAL_LTDC_Init+0x19c>)
 80053ac:	400b      	ands	r3, r1
 80053ae:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80053b0:	687b      	ldr	r3, [r7, #4]
 80053b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80053b4:	041b      	lsls	r3, r3, #16
 80053b6:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	681b      	ldr	r3, [r3, #0]
 80053bc:	6919      	ldr	r1, [r3, #16]
 80053be:	687b      	ldr	r3, [r7, #4]
 80053c0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	431a      	orrs	r2, r3
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	430a      	orrs	r2, r1
 80053cc:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 80053ce:	687b      	ldr	r3, [r7, #4]
 80053d0:	681b      	ldr	r3, [r3, #0]
 80053d2:	6959      	ldr	r1, [r3, #20]
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	681a      	ldr	r2, [r3, #0]
 80053d8:	4b27      	ldr	r3, [pc, #156]	@ (8005478 <HAL_LTDC_Init+0x19c>)
 80053da:	400b      	ands	r3, r1
 80053dc:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80053e2:	041b      	lsls	r3, r3, #16
 80053e4:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	6959      	ldr	r1, [r3, #20]
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	431a      	orrs	r2, r3
 80053f4:	687b      	ldr	r3, [r7, #4]
 80053f6:	681b      	ldr	r3, [r3, #0]
 80053f8:	430a      	orrs	r2, r1
 80053fa:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8005402:	021b      	lsls	r3, r3, #8
 8005404:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	f893 3036 	ldrb.w	r3, [r3, #54]	@ 0x36
 800540c:	041b      	lsls	r3, r3, #16
 800540e:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8005410:	687b      	ldr	r3, [r7, #4]
 8005412:	681b      	ldr	r3, [r3, #0]
 8005414:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 800541e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8005426:	68ba      	ldr	r2, [r7, #8]
 8005428:	68fb      	ldr	r3, [r7, #12]
 800542a:	4313      	orrs	r3, r2
 800542c:	687a      	ldr	r2, [r7, #4]
 800542e:	f892 2034 	ldrb.w	r2, [r2, #52]	@ 0x34
 8005432:	431a      	orrs	r2, r3
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	430a      	orrs	r2, r1
 800543a:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	f042 0206 	orr.w	r2, r2, #6
 800544a:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	699a      	ldr	r2, [r3, #24]
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	f042 0201 	orr.w	r2, r2, #1
 800545a:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	2200      	movs	r2, #0
 8005460:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	2201      	movs	r2, #1
 8005468:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  return HAL_OK;
 800546c:	2300      	movs	r3, #0
}
 800546e:	4618      	mov	r0, r3
 8005470:	3710      	adds	r7, #16
 8005472:	46bd      	mov	sp, r7
 8005474:	bd80      	pop	{r7, pc}
 8005476:	bf00      	nop
 8005478:	f000f800 	.word	0xf000f800

0800547c <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 800547c:	b580      	push	{r7, lr}
 800547e:	b084      	sub	sp, #16
 8005480:	af00      	add	r7, sp, #0
 8005482:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	681b      	ldr	r3, [r3, #0]
 8005488:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800548a:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	681b      	ldr	r3, [r3, #0]
 8005490:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005492:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8005494:	68fb      	ldr	r3, [r7, #12]
 8005496:	f003 0304 	and.w	r3, r3, #4
 800549a:	2b00      	cmp	r3, #0
 800549c:	d023      	beq.n	80054e6 <HAL_LTDC_IRQHandler+0x6a>
 800549e:	68bb      	ldr	r3, [r7, #8]
 80054a0:	f003 0304 	and.w	r3, r3, #4
 80054a4:	2b00      	cmp	r3, #0
 80054a6:	d01e      	beq.n	80054e6 <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	681b      	ldr	r3, [r3, #0]
 80054b2:	f022 0204 	bic.w	r2, r2, #4
 80054b6:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80054b8:	687b      	ldr	r3, [r7, #4]
 80054ba:	681b      	ldr	r3, [r3, #0]
 80054bc:	2204      	movs	r2, #4
 80054be:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80054c0:	687b      	ldr	r3, [r7, #4]
 80054c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 80054c6:	f043 0201 	orr.w	r2, r3, #1
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80054d0:	687b      	ldr	r3, [r7, #4]
 80054d2:	2204      	movs	r2, #4
 80054d4:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80054d8:	687b      	ldr	r3, [r7, #4]
 80054da:	2200      	movs	r2, #0
 80054dc:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80054e0:	6878      	ldr	r0, [r7, #4]
 80054e2:	f000 f86f 	bl	80055c4 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80054e6:	68fb      	ldr	r3, [r7, #12]
 80054e8:	f003 0302 	and.w	r3, r3, #2
 80054ec:	2b00      	cmp	r3, #0
 80054ee:	d023      	beq.n	8005538 <HAL_LTDC_IRQHandler+0xbc>
 80054f0:	68bb      	ldr	r3, [r7, #8]
 80054f2:	f003 0302 	and.w	r3, r3, #2
 80054f6:	2b00      	cmp	r3, #0
 80054f8:	d01e      	beq.n	8005538 <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	681b      	ldr	r3, [r3, #0]
 80054fe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005500:	687b      	ldr	r3, [r7, #4]
 8005502:	681b      	ldr	r3, [r3, #0]
 8005504:	f022 0202 	bic.w	r2, r2, #2
 8005508:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	2202      	movs	r2, #2
 8005510:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8005518:	f043 0202 	orr.w	r2, r3, #2
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	2204      	movs	r2, #4
 8005526:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	2200      	movs	r2, #0
 800552e:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8005532:	6878      	ldr	r0, [r7, #4]
 8005534:	f000 f846 	bl	80055c4 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005538:	68fb      	ldr	r3, [r7, #12]
 800553a:	f003 0301 	and.w	r3, r3, #1
 800553e:	2b00      	cmp	r3, #0
 8005540:	d01b      	beq.n	800557a <HAL_LTDC_IRQHandler+0xfe>
 8005542:	68bb      	ldr	r3, [r7, #8]
 8005544:	f003 0301 	and.w	r3, r3, #1
 8005548:	2b00      	cmp	r3, #0
 800554a:	d016      	beq.n	800557a <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	681b      	ldr	r3, [r3, #0]
 8005550:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005552:	687b      	ldr	r3, [r7, #4]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	f022 0201 	bic.w	r2, r2, #1
 800555a:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800555c:	687b      	ldr	r3, [r7, #4]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	2201      	movs	r2, #1
 8005562:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	2201      	movs	r2, #1
 8005568:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800556c:	687b      	ldr	r3, [r7, #4]
 800556e:	2200      	movs	r2, #0
 8005570:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8005574:	6878      	ldr	r0, [r7, #4]
 8005576:	f008 f96d 	bl	800d854 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800557a:	68fb      	ldr	r3, [r7, #12]
 800557c:	f003 0308 	and.w	r3, r3, #8
 8005580:	2b00      	cmp	r3, #0
 8005582:	d01b      	beq.n	80055bc <HAL_LTDC_IRQHandler+0x140>
 8005584:	68bb      	ldr	r3, [r7, #8]
 8005586:	f003 0308 	and.w	r3, r3, #8
 800558a:	2b00      	cmp	r3, #0
 800558c:	d016      	beq.n	80055bc <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	681b      	ldr	r3, [r3, #0]
 8005598:	f022 0208 	bic.w	r2, r2, #8
 800559c:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	681b      	ldr	r3, [r3, #0]
 80055a2:	2208      	movs	r2, #8
 80055a4:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	2201      	movs	r2, #1
 80055aa:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80055ae:	687b      	ldr	r3, [r7, #4]
 80055b0:	2200      	movs	r2, #0
 80055b2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 80055b6:	6878      	ldr	r0, [r7, #4]
 80055b8:	f000 f80e 	bl	80055d8 <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 80055bc:	bf00      	nop
 80055be:	3710      	adds	r7, #16
 80055c0:	46bd      	mov	sp, r7
 80055c2:	bd80      	pop	{r7, pc}

080055c4 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 80055c4:	b480      	push	{r7}
 80055c6:	b083      	sub	sp, #12
 80055c8:	af00      	add	r7, sp, #0
 80055ca:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 80055cc:	bf00      	nop
 80055ce:	370c      	adds	r7, #12
 80055d0:	46bd      	mov	sp, r7
 80055d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055d6:	4770      	bx	lr

080055d8 <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 80055d8:	b480      	push	{r7}
 80055da:	b083      	sub	sp, #12
 80055dc:	af00      	add	r7, sp, #0
 80055de:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 80055e0:	bf00      	nop
 80055e2:	370c      	adds	r7, #12
 80055e4:	46bd      	mov	sp, r7
 80055e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055ea:	4770      	bx	lr

080055ec <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80055ec:	b5b0      	push	{r4, r5, r7, lr}
 80055ee:	b084      	sub	sp, #16
 80055f0:	af00      	add	r7, sp, #0
 80055f2:	60f8      	str	r0, [r7, #12]
 80055f4:	60b9      	str	r1, [r7, #8]
 80055f6:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 80055f8:	68fb      	ldr	r3, [r7, #12]
 80055fa:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 80055fe:	2b01      	cmp	r3, #1
 8005600:	d101      	bne.n	8005606 <HAL_LTDC_ConfigLayer+0x1a>
 8005602:	2302      	movs	r3, #2
 8005604:	e02c      	b.n	8005660 <HAL_LTDC_ConfigLayer+0x74>
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	2201      	movs	r2, #1
 800560a:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800560e:	68fb      	ldr	r3, [r7, #12]
 8005610:	2202      	movs	r2, #2
 8005612:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8005616:	68fa      	ldr	r2, [r7, #12]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	2134      	movs	r1, #52	@ 0x34
 800561c:	fb01 f303 	mul.w	r3, r1, r3
 8005620:	4413      	add	r3, r2
 8005622:	f103 0238 	add.w	r2, r3, #56	@ 0x38
 8005626:	68bb      	ldr	r3, [r7, #8]
 8005628:	4614      	mov	r4, r2
 800562a:	461d      	mov	r5, r3
 800562c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800562e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005630:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005632:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005634:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005636:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8005638:	682b      	ldr	r3, [r5, #0]
 800563a:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800563c:	687a      	ldr	r2, [r7, #4]
 800563e:	68b9      	ldr	r1, [r7, #8]
 8005640:	68f8      	ldr	r0, [r7, #12]
 8005642:	f000 f849 	bl	80056d8 <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	681b      	ldr	r3, [r3, #0]
 800564a:	2201      	movs	r2, #1
 800564c:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 800564e:	68fb      	ldr	r3, [r7, #12]
 8005650:	2201      	movs	r2, #1
 8005652:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	2200      	movs	r2, #0
 800565a:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 800565e:	2300      	movs	r3, #0
}
 8005660:	4618      	mov	r0, r3
 8005662:	3710      	adds	r7, #16
 8005664:	46bd      	mov	sp, r7
 8005666:	bdb0      	pop	{r4, r5, r7, pc}

08005668 <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8005668:	b480      	push	{r7}
 800566a:	b083      	sub	sp, #12
 800566c:	af00      	add	r7, sp, #0
 800566e:	6078      	str	r0, [r7, #4]
 8005670:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8005672:	687b      	ldr	r3, [r7, #4]
 8005674:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8005678:	2b01      	cmp	r3, #1
 800567a:	d101      	bne.n	8005680 <HAL_LTDC_ProgramLineEvent+0x18>
 800567c:	2302      	movs	r3, #2
 800567e:	e023      	b.n	80056c8 <HAL_LTDC_ProgramLineEvent+0x60>
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	2201      	movs	r2, #1
 8005684:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005688:	687b      	ldr	r3, [r7, #4]
 800568a:	2202      	movs	r2, #2
 800568c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005696:	687b      	ldr	r3, [r7, #4]
 8005698:	681b      	ldr	r3, [r3, #0]
 800569a:	f022 0201 	bic.w	r2, r2, #1
 800569e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 80056a0:	4a0c      	ldr	r2, [pc, #48]	@ (80056d4 <HAL_LTDC_ProgramLineEvent+0x6c>)
 80056a2:	683b      	ldr	r3, [r7, #0]
 80056a4:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80056a6:	687b      	ldr	r3, [r7, #4]
 80056a8:	681b      	ldr	r3, [r3, #0]
 80056aa:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	681b      	ldr	r3, [r3, #0]
 80056b0:	f042 0201 	orr.w	r2, r2, #1
 80056b4:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 80056b6:	687b      	ldr	r3, [r7, #4]
 80056b8:	2201      	movs	r2, #1
 80056ba:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	2200      	movs	r2, #0
 80056c2:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 80056c6:	2300      	movs	r3, #0
}
 80056c8:	4618      	mov	r0, r3
 80056ca:	370c      	adds	r7, #12
 80056cc:	46bd      	mov	sp, r7
 80056ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056d2:	4770      	bx	lr
 80056d4:	40016800 	.word	0x40016800

080056d8 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 80056d8:	b480      	push	{r7}
 80056da:	b089      	sub	sp, #36	@ 0x24
 80056dc:	af00      	add	r7, sp, #0
 80056de:	60f8      	str	r0, [r7, #12]
 80056e0:	60b9      	str	r1, [r7, #8]
 80056e2:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80056e4:	68bb      	ldr	r3, [r7, #8]
 80056e6:	685a      	ldr	r2, [r3, #4]
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	68db      	ldr	r3, [r3, #12]
 80056ee:	0c1b      	lsrs	r3, r3, #16
 80056f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80056f4:	4413      	add	r3, r2
 80056f6:	041b      	lsls	r3, r3, #16
 80056f8:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80056fa:	68fb      	ldr	r3, [r7, #12]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	461a      	mov	r2, r3
 8005700:	687b      	ldr	r3, [r7, #4]
 8005702:	01db      	lsls	r3, r3, #7
 8005704:	4413      	add	r3, r2
 8005706:	3384      	adds	r3, #132	@ 0x84
 8005708:	685b      	ldr	r3, [r3, #4]
 800570a:	68fa      	ldr	r2, [r7, #12]
 800570c:	6812      	ldr	r2, [r2, #0]
 800570e:	4611      	mov	r1, r2
 8005710:	687a      	ldr	r2, [r7, #4]
 8005712:	01d2      	lsls	r2, r2, #7
 8005714:	440a      	add	r2, r1
 8005716:	3284      	adds	r2, #132	@ 0x84
 8005718:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800571c:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800571e:	68bb      	ldr	r3, [r7, #8]
 8005720:	681a      	ldr	r2, [r3, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005722:	68fb      	ldr	r3, [r7, #12]
 8005724:	681b      	ldr	r3, [r3, #0]
 8005726:	68db      	ldr	r3, [r3, #12]
 8005728:	0c1b      	lsrs	r3, r3, #16
 800572a:	f3c3 030b 	ubfx	r3, r3, #0, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800572e:	4413      	add	r3, r2
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005730:	1c5a      	adds	r2, r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005732:	68fb      	ldr	r3, [r7, #12]
 8005734:	681b      	ldr	r3, [r3, #0]
 8005736:	4619      	mov	r1, r3
 8005738:	687b      	ldr	r3, [r7, #4]
 800573a:	01db      	lsls	r3, r3, #7
 800573c:	440b      	add	r3, r1
 800573e:	3384      	adds	r3, #132	@ 0x84
 8005740:	4619      	mov	r1, r3
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005742:	69fb      	ldr	r3, [r7, #28]
 8005744:	4313      	orrs	r3, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005746:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8005748:	68bb      	ldr	r3, [r7, #8]
 800574a:	68da      	ldr	r2, [r3, #12]
 800574c:	68fb      	ldr	r3, [r7, #12]
 800574e:	681b      	ldr	r3, [r3, #0]
 8005750:	68db      	ldr	r3, [r3, #12]
 8005752:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005756:	4413      	add	r3, r2
 8005758:	041b      	lsls	r3, r3, #16
 800575a:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800575c:	68fb      	ldr	r3, [r7, #12]
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	461a      	mov	r2, r3
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	01db      	lsls	r3, r3, #7
 8005766:	4413      	add	r3, r2
 8005768:	3384      	adds	r3, #132	@ 0x84
 800576a:	689b      	ldr	r3, [r3, #8]
 800576c:	68fa      	ldr	r2, [r7, #12]
 800576e:	6812      	ldr	r2, [r2, #0]
 8005770:	4611      	mov	r1, r2
 8005772:	687a      	ldr	r2, [r7, #4]
 8005774:	01d2      	lsls	r2, r2, #7
 8005776:	440a      	add	r2, r1
 8005778:	3284      	adds	r2, #132	@ 0x84
 800577a:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 800577e:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005780:	68bb      	ldr	r3, [r7, #8]
 8005782:	689a      	ldr	r2, [r3, #8]
 8005784:	68fb      	ldr	r3, [r7, #12]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	68db      	ldr	r3, [r3, #12]
 800578a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800578e:	4413      	add	r3, r2
 8005790:	1c5a      	adds	r2, r3, #1
 8005792:	68fb      	ldr	r3, [r7, #12]
 8005794:	681b      	ldr	r3, [r3, #0]
 8005796:	4619      	mov	r1, r3
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	01db      	lsls	r3, r3, #7
 800579c:	440b      	add	r3, r1
 800579e:	3384      	adds	r3, #132	@ 0x84
 80057a0:	4619      	mov	r1, r3
 80057a2:	69fb      	ldr	r3, [r7, #28]
 80057a4:	4313      	orrs	r3, r2
 80057a6:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	461a      	mov	r2, r3
 80057ae:	687b      	ldr	r3, [r7, #4]
 80057b0:	01db      	lsls	r3, r3, #7
 80057b2:	4413      	add	r3, r2
 80057b4:	3384      	adds	r3, #132	@ 0x84
 80057b6:	691b      	ldr	r3, [r3, #16]
 80057b8:	68fa      	ldr	r2, [r7, #12]
 80057ba:	6812      	ldr	r2, [r2, #0]
 80057bc:	4611      	mov	r1, r2
 80057be:	687a      	ldr	r2, [r7, #4]
 80057c0:	01d2      	lsls	r2, r2, #7
 80057c2:	440a      	add	r2, r1
 80057c4:	3284      	adds	r2, #132	@ 0x84
 80057c6:	f023 0307 	bic.w	r3, r3, #7
 80057ca:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80057cc:	68fb      	ldr	r3, [r7, #12]
 80057ce:	681b      	ldr	r3, [r3, #0]
 80057d0:	461a      	mov	r2, r3
 80057d2:	687b      	ldr	r3, [r7, #4]
 80057d4:	01db      	lsls	r3, r3, #7
 80057d6:	4413      	add	r3, r2
 80057d8:	3384      	adds	r3, #132	@ 0x84
 80057da:	461a      	mov	r2, r3
 80057dc:	68bb      	ldr	r3, [r7, #8]
 80057de:	691b      	ldr	r3, [r3, #16]
 80057e0:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80057e2:	68bb      	ldr	r3, [r7, #8]
 80057e4:	f893 3031 	ldrb.w	r3, [r3, #49]	@ 0x31
 80057e8:	021b      	lsls	r3, r3, #8
 80057ea:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80057ec:	68bb      	ldr	r3, [r7, #8]
 80057ee:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 80057f2:	041b      	lsls	r3, r3, #16
 80057f4:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80057f6:	68bb      	ldr	r3, [r7, #8]
 80057f8:	699b      	ldr	r3, [r3, #24]
 80057fa:	061b      	lsls	r3, r3, #24
 80057fc:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 80057fe:	68fb      	ldr	r3, [r7, #12]
 8005800:	681b      	ldr	r3, [r3, #0]
 8005802:	461a      	mov	r2, r3
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	01db      	lsls	r3, r3, #7
 8005808:	4413      	add	r3, r2
 800580a:	3384      	adds	r3, #132	@ 0x84
 800580c:	699b      	ldr	r3, [r3, #24]
 800580e:	68fb      	ldr	r3, [r7, #12]
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	461a      	mov	r2, r3
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	01db      	lsls	r3, r3, #7
 8005818:	4413      	add	r3, r2
 800581a:	3384      	adds	r3, #132	@ 0x84
 800581c:	461a      	mov	r2, r3
 800581e:	2300      	movs	r3, #0
 8005820:	6193      	str	r3, [r2, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005822:	68bb      	ldr	r3, [r7, #8]
 8005824:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8005828:	461a      	mov	r2, r3
 800582a:	69fb      	ldr	r3, [r7, #28]
 800582c:	431a      	orrs	r2, r3
 800582e:	69bb      	ldr	r3, [r7, #24]
 8005830:	431a      	orrs	r2, r3
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	4619      	mov	r1, r3
 8005838:	687b      	ldr	r3, [r7, #4]
 800583a:	01db      	lsls	r3, r3, #7
 800583c:	440b      	add	r3, r1
 800583e:	3384      	adds	r3, #132	@ 0x84
 8005840:	4619      	mov	r1, r3
 8005842:	697b      	ldr	r3, [r7, #20]
 8005844:	4313      	orrs	r3, r2
 8005846:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8005848:	68fb      	ldr	r3, [r7, #12]
 800584a:	681b      	ldr	r3, [r3, #0]
 800584c:	461a      	mov	r2, r3
 800584e:	687b      	ldr	r3, [r7, #4]
 8005850:	01db      	lsls	r3, r3, #7
 8005852:	4413      	add	r3, r2
 8005854:	3384      	adds	r3, #132	@ 0x84
 8005856:	695b      	ldr	r3, [r3, #20]
 8005858:	68fa      	ldr	r2, [r7, #12]
 800585a:	6812      	ldr	r2, [r2, #0]
 800585c:	4611      	mov	r1, r2
 800585e:	687a      	ldr	r2, [r7, #4]
 8005860:	01d2      	lsls	r2, r2, #7
 8005862:	440a      	add	r2, r1
 8005864:	3284      	adds	r2, #132	@ 0x84
 8005866:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800586a:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	681b      	ldr	r3, [r3, #0]
 8005870:	461a      	mov	r2, r3
 8005872:	687b      	ldr	r3, [r7, #4]
 8005874:	01db      	lsls	r3, r3, #7
 8005876:	4413      	add	r3, r2
 8005878:	3384      	adds	r3, #132	@ 0x84
 800587a:	461a      	mov	r2, r3
 800587c:	68bb      	ldr	r3, [r7, #8]
 800587e:	695b      	ldr	r3, [r3, #20]
 8005880:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005882:	68fb      	ldr	r3, [r7, #12]
 8005884:	681b      	ldr	r3, [r3, #0]
 8005886:	461a      	mov	r2, r3
 8005888:	687b      	ldr	r3, [r7, #4]
 800588a:	01db      	lsls	r3, r3, #7
 800588c:	4413      	add	r3, r2
 800588e:	3384      	adds	r3, #132	@ 0x84
 8005890:	69da      	ldr	r2, [r3, #28]
 8005892:	68fb      	ldr	r3, [r7, #12]
 8005894:	681b      	ldr	r3, [r3, #0]
 8005896:	4619      	mov	r1, r3
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	01db      	lsls	r3, r3, #7
 800589c:	440b      	add	r3, r1
 800589e:	3384      	adds	r3, #132	@ 0x84
 80058a0:	4619      	mov	r1, r3
 80058a2:	4b58      	ldr	r3, [pc, #352]	@ (8005a04 <LTDC_SetConfig+0x32c>)
 80058a4:	4013      	ands	r3, r2
 80058a6:	61cb      	str	r3, [r1, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80058a8:	68bb      	ldr	r3, [r7, #8]
 80058aa:	69da      	ldr	r2, [r3, #28]
 80058ac:	68bb      	ldr	r3, [r7, #8]
 80058ae:	6a1b      	ldr	r3, [r3, #32]
 80058b0:	68f9      	ldr	r1, [r7, #12]
 80058b2:	6809      	ldr	r1, [r1, #0]
 80058b4:	4608      	mov	r0, r1
 80058b6:	6879      	ldr	r1, [r7, #4]
 80058b8:	01c9      	lsls	r1, r1, #7
 80058ba:	4401      	add	r1, r0
 80058bc:	3184      	adds	r1, #132	@ 0x84
 80058be:	4313      	orrs	r3, r2
 80058c0:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	681b      	ldr	r3, [r3, #0]
 80058c6:	461a      	mov	r2, r3
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	01db      	lsls	r3, r3, #7
 80058cc:	4413      	add	r3, r2
 80058ce:	3384      	adds	r3, #132	@ 0x84
 80058d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80058d2:	68fb      	ldr	r3, [r7, #12]
 80058d4:	681b      	ldr	r3, [r3, #0]
 80058d6:	461a      	mov	r2, r3
 80058d8:	687b      	ldr	r3, [r7, #4]
 80058da:	01db      	lsls	r3, r3, #7
 80058dc:	4413      	add	r3, r2
 80058de:	3384      	adds	r3, #132	@ 0x84
 80058e0:	461a      	mov	r2, r3
 80058e2:	2300      	movs	r3, #0
 80058e4:	6293      	str	r3, [r2, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	681b      	ldr	r3, [r3, #0]
 80058ea:	461a      	mov	r2, r3
 80058ec:	687b      	ldr	r3, [r7, #4]
 80058ee:	01db      	lsls	r3, r3, #7
 80058f0:	4413      	add	r3, r2
 80058f2:	3384      	adds	r3, #132	@ 0x84
 80058f4:	461a      	mov	r2, r3
 80058f6:	68bb      	ldr	r3, [r7, #8]
 80058f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80058fa:	6293      	str	r3, [r2, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80058fc:	68bb      	ldr	r3, [r7, #8]
 80058fe:	691b      	ldr	r3, [r3, #16]
 8005900:	2b00      	cmp	r3, #0
 8005902:	d102      	bne.n	800590a <LTDC_SetConfig+0x232>
  {
    tmp = 4U;
 8005904:	2304      	movs	r3, #4
 8005906:	61fb      	str	r3, [r7, #28]
 8005908:	e01b      	b.n	8005942 <LTDC_SetConfig+0x26a>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800590a:	68bb      	ldr	r3, [r7, #8]
 800590c:	691b      	ldr	r3, [r3, #16]
 800590e:	2b01      	cmp	r3, #1
 8005910:	d102      	bne.n	8005918 <LTDC_SetConfig+0x240>
  {
    tmp = 3U;
 8005912:	2303      	movs	r3, #3
 8005914:	61fb      	str	r3, [r7, #28]
 8005916:	e014      	b.n	8005942 <LTDC_SetConfig+0x26a>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005918:	68bb      	ldr	r3, [r7, #8]
 800591a:	691b      	ldr	r3, [r3, #16]
 800591c:	2b04      	cmp	r3, #4
 800591e:	d00b      	beq.n	8005938 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005920:	68bb      	ldr	r3, [r7, #8]
 8005922:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005924:	2b02      	cmp	r3, #2
 8005926:	d007      	beq.n	8005938 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005928:	68bb      	ldr	r3, [r7, #8]
 800592a:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 800592c:	2b03      	cmp	r3, #3
 800592e:	d003      	beq.n	8005938 <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8005930:	68bb      	ldr	r3, [r7, #8]
 8005932:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005934:	2b07      	cmp	r3, #7
 8005936:	d102      	bne.n	800593e <LTDC_SetConfig+0x266>
  {
    tmp = 2U;
 8005938:	2302      	movs	r3, #2
 800593a:	61fb      	str	r3, [r7, #28]
 800593c:	e001      	b.n	8005942 <LTDC_SetConfig+0x26a>
  }
  else
  {
    tmp = 1U;
 800593e:	2301      	movs	r3, #1
 8005940:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005942:	68fb      	ldr	r3, [r7, #12]
 8005944:	681b      	ldr	r3, [r3, #0]
 8005946:	461a      	mov	r2, r3
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	01db      	lsls	r3, r3, #7
 800594c:	4413      	add	r3, r2
 800594e:	3384      	adds	r3, #132	@ 0x84
 8005950:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005952:	68fa      	ldr	r2, [r7, #12]
 8005954:	6812      	ldr	r2, [r2, #0]
 8005956:	4611      	mov	r1, r2
 8005958:	687a      	ldr	r2, [r7, #4]
 800595a:	01d2      	lsls	r2, r2, #7
 800595c:	440a      	add	r2, r1
 800595e:	3284      	adds	r2, #132	@ 0x84
 8005960:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
 8005964:	62d3      	str	r3, [r2, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005966:	68bb      	ldr	r3, [r7, #8]
 8005968:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800596a:	69fa      	ldr	r2, [r7, #28]
 800596c:	fb02 f303 	mul.w	r3, r2, r3
 8005970:	041a      	lsls	r2, r3, #16
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8005972:	68bb      	ldr	r3, [r7, #8]
 8005974:	6859      	ldr	r1, [r3, #4]
 8005976:	68bb      	ldr	r3, [r7, #8]
 8005978:	681b      	ldr	r3, [r3, #0]
 800597a:	1acb      	subs	r3, r1, r3
 800597c:	69f9      	ldr	r1, [r7, #28]
 800597e:	fb01 f303 	mul.w	r3, r1, r3
 8005982:	3303      	adds	r3, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8005984:	68f9      	ldr	r1, [r7, #12]
 8005986:	6809      	ldr	r1, [r1, #0]
 8005988:	4608      	mov	r0, r1
 800598a:	6879      	ldr	r1, [r7, #4]
 800598c:	01c9      	lsls	r1, r1, #7
 800598e:	4401      	add	r1, r0
 8005990:	3184      	adds	r1, #132	@ 0x84
 8005992:	4313      	orrs	r3, r2
 8005994:	62cb      	str	r3, [r1, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8005996:	68fb      	ldr	r3, [r7, #12]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	461a      	mov	r2, r3
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	01db      	lsls	r3, r3, #7
 80059a0:	4413      	add	r3, r2
 80059a2:	3384      	adds	r3, #132	@ 0x84
 80059a4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80059a6:	68fb      	ldr	r3, [r7, #12]
 80059a8:	681b      	ldr	r3, [r3, #0]
 80059aa:	4619      	mov	r1, r3
 80059ac:	687b      	ldr	r3, [r7, #4]
 80059ae:	01db      	lsls	r3, r3, #7
 80059b0:	440b      	add	r3, r1
 80059b2:	3384      	adds	r3, #132	@ 0x84
 80059b4:	4619      	mov	r1, r3
 80059b6:	4b14      	ldr	r3, [pc, #80]	@ (8005a08 <LTDC_SetConfig+0x330>)
 80059b8:	4013      	ands	r3, r2
 80059ba:	630b      	str	r3, [r1, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80059bc:	68fb      	ldr	r3, [r7, #12]
 80059be:	681b      	ldr	r3, [r3, #0]
 80059c0:	461a      	mov	r2, r3
 80059c2:	687b      	ldr	r3, [r7, #4]
 80059c4:	01db      	lsls	r3, r3, #7
 80059c6:	4413      	add	r3, r2
 80059c8:	3384      	adds	r3, #132	@ 0x84
 80059ca:	461a      	mov	r2, r3
 80059cc:	68bb      	ldr	r3, [r7, #8]
 80059ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80059d0:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80059d2:	68fb      	ldr	r3, [r7, #12]
 80059d4:	681b      	ldr	r3, [r3, #0]
 80059d6:	461a      	mov	r2, r3
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	01db      	lsls	r3, r3, #7
 80059dc:	4413      	add	r3, r2
 80059de:	3384      	adds	r3, #132	@ 0x84
 80059e0:	681b      	ldr	r3, [r3, #0]
 80059e2:	68fa      	ldr	r2, [r7, #12]
 80059e4:	6812      	ldr	r2, [r2, #0]
 80059e6:	4611      	mov	r1, r2
 80059e8:	687a      	ldr	r2, [r7, #4]
 80059ea:	01d2      	lsls	r2, r2, #7
 80059ec:	440a      	add	r2, r1
 80059ee:	3284      	adds	r2, #132	@ 0x84
 80059f0:	f043 0301 	orr.w	r3, r3, #1
 80059f4:	6013      	str	r3, [r2, #0]
}
 80059f6:	bf00      	nop
 80059f8:	3724      	adds	r7, #36	@ 0x24
 80059fa:	46bd      	mov	sp, r7
 80059fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a00:	4770      	bx	lr
 8005a02:	bf00      	nop
 8005a04:	fffff8f8 	.word	0xfffff8f8
 8005a08:	fffff800 	.word	0xfffff800

08005a0c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8005a0c:	b580      	push	{r7, lr}
 8005a0e:	b082      	sub	sp, #8
 8005a10:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 8005a12:	2300      	movs	r3, #0
 8005a14:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8005a16:	4b23      	ldr	r3, [pc, #140]	@ (8005aa4 <HAL_PWREx_EnableOverDrive+0x98>)
 8005a18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a1a:	4a22      	ldr	r2, [pc, #136]	@ (8005aa4 <HAL_PWREx_EnableOverDrive+0x98>)
 8005a1c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005a20:	6413      	str	r3, [r2, #64]	@ 0x40
 8005a22:	4b20      	ldr	r3, [pc, #128]	@ (8005aa4 <HAL_PWREx_EnableOverDrive+0x98>)
 8005a24:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005a26:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005a2a:	603b      	str	r3, [r7, #0]
 8005a2c:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005a2e:	4b1e      	ldr	r3, [pc, #120]	@ (8005aa8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	4a1d      	ldr	r2, [pc, #116]	@ (8005aa8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005a34:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005a38:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005a3a:	f7fe fc81 	bl	8004340 <HAL_GetTick>
 8005a3e:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a40:	e009      	b.n	8005a56 <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005a42:	f7fe fc7d 	bl	8004340 <HAL_GetTick>
 8005a46:	4602      	mov	r2, r0
 8005a48:	687b      	ldr	r3, [r7, #4]
 8005a4a:	1ad3      	subs	r3, r2, r3
 8005a4c:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005a50:	d901      	bls.n	8005a56 <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 8005a52:	2303      	movs	r3, #3
 8005a54:	e022      	b.n	8005a9c <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005a56:	4b14      	ldr	r3, [pc, #80]	@ (8005aa8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005a58:	685b      	ldr	r3, [r3, #4]
 8005a5a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005a5e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005a62:	d1ee      	bne.n	8005a42 <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8005a64:	4b10      	ldr	r3, [pc, #64]	@ (8005aa8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	4a0f      	ldr	r2, [pc, #60]	@ (8005aa8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005a6a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005a6e:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005a70:	f7fe fc66 	bl	8004340 <HAL_GetTick>
 8005a74:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005a76:	e009      	b.n	8005a8c <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8005a78:	f7fe fc62 	bl	8004340 <HAL_GetTick>
 8005a7c:	4602      	mov	r2, r0
 8005a7e:	687b      	ldr	r3, [r7, #4]
 8005a80:	1ad3      	subs	r3, r2, r3
 8005a82:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8005a86:	d901      	bls.n	8005a8c <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8005a88:	2303      	movs	r3, #3
 8005a8a:	e007      	b.n	8005a9c <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8005a8c:	4b06      	ldr	r3, [pc, #24]	@ (8005aa8 <HAL_PWREx_EnableOverDrive+0x9c>)
 8005a8e:	685b      	ldr	r3, [r3, #4]
 8005a90:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005a94:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005a98:	d1ee      	bne.n	8005a78 <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 8005a9a:	2300      	movs	r3, #0
}
 8005a9c:	4618      	mov	r0, r3
 8005a9e:	3708      	adds	r7, #8
 8005aa0:	46bd      	mov	sp, r7
 8005aa2:	bd80      	pop	{r7, pc}
 8005aa4:	40023800 	.word	0x40023800
 8005aa8:	40007000 	.word	0x40007000

08005aac <HAL_QSPI_Init>:
  *        in the QSPI_InitTypeDef and initialize the associated handle.
  * @param hqspi QSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
{
 8005aac:	b580      	push	{r7, lr}
 8005aae:	b086      	sub	sp, #24
 8005ab0:	af02      	add	r7, sp, #8
 8005ab2:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 8005ab4:	f7fe fc44 	bl	8004340 <HAL_GetTick>
 8005ab8:	60f8      	str	r0, [r7, #12]

  /* Check the QSPI handle allocation */
  if(hqspi == NULL)
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	2b00      	cmp	r3, #0
 8005abe:	d101      	bne.n	8005ac4 <HAL_QSPI_Init+0x18>
  {
    return HAL_ERROR;
 8005ac0:	2301      	movs	r3, #1
 8005ac2:	e067      	b.n	8005b94 <HAL_QSPI_Init+0xe8>
  if (hqspi->Init.DualFlash != QSPI_DUALFLASH_ENABLE )
  {
    assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
  }

  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005aca:	b2db      	uxtb	r3, r3
 8005acc:	2b00      	cmp	r3, #0
 8005ace:	d10b      	bne.n	8005ae8 <HAL_QSPI_Init+0x3c>
  {
    /* Allocate lock resource and initialize it */
    hqspi->Lock = HAL_UNLOCKED;
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	2200      	movs	r2, #0
 8005ad4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware */
    hqspi->MspInitCallback(hqspi);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_QSPI_MspInit(hqspi);
 8005ad8:	6878      	ldr	r0, [r7, #4]
 8005ada:	f7fb fc11 	bl	8001300 <HAL_QSPI_MspInit>
#endif

    /* Configure the default timeout for the QSPI memory access */
    HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
 8005ade:	f241 3188 	movw	r1, #5000	@ 0x1388
 8005ae2:	6878      	ldr	r0, [r7, #4]
 8005ae4:	f000 f85e 	bl	8005ba4 <HAL_QSPI_SetTimeout>
  }

  /* Configure QSPI FIFO Threshold */
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8005ae8:	687b      	ldr	r3, [r7, #4]
 8005aea:	681b      	ldr	r3, [r3, #0]
 8005aec:	681b      	ldr	r3, [r3, #0]
 8005aee:	f423 51f8 	bic.w	r1, r3, #7936	@ 0x1f00
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	689b      	ldr	r3, [r3, #8]
 8005af6:	3b01      	subs	r3, #1
 8005af8:	021a      	lsls	r2, r3, #8
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	430a      	orrs	r2, r1
 8005b00:	601a      	str	r2, [r3, #0]
             ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));

  /* Wait till BUSY flag reset */
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005b06:	9300      	str	r3, [sp, #0]
 8005b08:	68fb      	ldr	r3, [r7, #12]
 8005b0a:	2200      	movs	r2, #0
 8005b0c:	2120      	movs	r1, #32
 8005b0e:	6878      	ldr	r0, [r7, #4]
 8005b10:	f000 f856 	bl	8005bc0 <QSPI_WaitFlagStateUntilTimeout>
 8005b14:	4603      	mov	r3, r0
 8005b16:	72fb      	strb	r3, [r7, #11]

  if(status == HAL_OK)
 8005b18:	7afb      	ldrb	r3, [r7, #11]
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	d135      	bne.n	8005b8a <HAL_QSPI_Init+0xde>
  {
    /* Configure QSPI Clock Prescaler and Sample Shift */
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	681a      	ldr	r2, [r3, #0]
 8005b24:	4b1d      	ldr	r3, [pc, #116]	@ (8005b9c <HAL_QSPI_Init+0xf0>)
 8005b26:	4013      	ands	r3, r2
 8005b28:	687a      	ldr	r2, [r7, #4]
 8005b2a:	6852      	ldr	r2, [r2, #4]
 8005b2c:	0611      	lsls	r1, r2, #24
 8005b2e:	687a      	ldr	r2, [r7, #4]
 8005b30:	68d2      	ldr	r2, [r2, #12]
 8005b32:	4311      	orrs	r1, r2
 8005b34:	687a      	ldr	r2, [r7, #4]
 8005b36:	69d2      	ldr	r2, [r2, #28]
 8005b38:	4311      	orrs	r1, r2
 8005b3a:	687a      	ldr	r2, [r7, #4]
 8005b3c:	6a12      	ldr	r2, [r2, #32]
 8005b3e:	4311      	orrs	r1, r2
 8005b40:	687a      	ldr	r2, [r7, #4]
 8005b42:	6812      	ldr	r2, [r2, #0]
 8005b44:	430b      	orrs	r3, r1
 8005b46:	6013      	str	r3, [r2, #0]
               ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
                hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));

    /* Configure QSPI Flash Size, CS High Time and Clock Mode */
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	685a      	ldr	r2, [r3, #4]
 8005b4e:	4b14      	ldr	r3, [pc, #80]	@ (8005ba0 <HAL_QSPI_Init+0xf4>)
 8005b50:	4013      	ands	r3, r2
 8005b52:	687a      	ldr	r2, [r7, #4]
 8005b54:	6912      	ldr	r2, [r2, #16]
 8005b56:	0411      	lsls	r1, r2, #16
 8005b58:	687a      	ldr	r2, [r7, #4]
 8005b5a:	6952      	ldr	r2, [r2, #20]
 8005b5c:	4311      	orrs	r1, r2
 8005b5e:	687a      	ldr	r2, [r7, #4]
 8005b60:	6992      	ldr	r2, [r2, #24]
 8005b62:	4311      	orrs	r1, r2
 8005b64:	687a      	ldr	r2, [r7, #4]
 8005b66:	6812      	ldr	r2, [r2, #0]
 8005b68:	430b      	orrs	r3, r1
 8005b6a:	6053      	str	r3, [r2, #4]
               ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
                hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));

    /* Enable the QSPI peripheral */
    __HAL_QSPI_ENABLE(hqspi);
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	681a      	ldr	r2, [r3, #0]
 8005b72:	687b      	ldr	r3, [r7, #4]
 8005b74:	681b      	ldr	r3, [r3, #0]
 8005b76:	f042 0201 	orr.w	r2, r2, #1
 8005b7a:	601a      	str	r2, [r3, #0]

    /* Set QSPI error code to none */
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005b7c:	687b      	ldr	r3, [r7, #4]
 8005b7e:	2200      	movs	r2, #0
 8005b80:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Initialize the QSPI state */
    hqspi->State = HAL_QSPI_STATE_READY;
 8005b82:	687b      	ldr	r3, [r7, #4]
 8005b84:	2201      	movs	r2, #1
 8005b86:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  }

  /* Release Lock */
  __HAL_UNLOCK(hqspi);
 8005b8a:	687b      	ldr	r3, [r7, #4]
 8005b8c:	2200      	movs	r2, #0
 8005b8e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  /* Return function status */
  return status;
 8005b92:	7afb      	ldrb	r3, [r7, #11]
}
 8005b94:	4618      	mov	r0, r3
 8005b96:	3710      	adds	r7, #16
 8005b98:	46bd      	mov	sp, r7
 8005b9a:	bd80      	pop	{r7, pc}
 8005b9c:	00ffff2f 	.word	0x00ffff2f
 8005ba0:	ffe0f8fe 	.word	0xffe0f8fe

08005ba4 <HAL_QSPI_SetTimeout>:
  * @param  hqspi QSPI handle.
  * @param  Timeout Timeout for the QSPI memory access.
  * @retval None
  */
void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
{
 8005ba4:	b480      	push	{r7}
 8005ba6:	b083      	sub	sp, #12
 8005ba8:	af00      	add	r7, sp, #0
 8005baa:	6078      	str	r0, [r7, #4]
 8005bac:	6039      	str	r1, [r7, #0]
  hqspi->Timeout = Timeout;
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	683a      	ldr	r2, [r7, #0]
 8005bb2:	649a      	str	r2, [r3, #72]	@ 0x48
}
 8005bb4:	bf00      	nop
 8005bb6:	370c      	adds	r7, #12
 8005bb8:	46bd      	mov	sp, r7
 8005bba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bbe:	4770      	bx	lr

08005bc0 <QSPI_WaitFlagStateUntilTimeout>:
  * @param  Timeout Duration of the timeout
  * @retval HAL status
  */
static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8005bc0:	b580      	push	{r7, lr}
 8005bc2:	b084      	sub	sp, #16
 8005bc4:	af00      	add	r7, sp, #0
 8005bc6:	60f8      	str	r0, [r7, #12]
 8005bc8:	60b9      	str	r1, [r7, #8]
 8005bca:	603b      	str	r3, [r7, #0]
 8005bcc:	4613      	mov	r3, r2
 8005bce:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005bd0:	e01a      	b.n	8005c08 <QSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005bd2:	69bb      	ldr	r3, [r7, #24]
 8005bd4:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005bd8:	d016      	beq.n	8005c08 <QSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005bda:	f7fe fbb1 	bl	8004340 <HAL_GetTick>
 8005bde:	4602      	mov	r2, r0
 8005be0:	683b      	ldr	r3, [r7, #0]
 8005be2:	1ad3      	subs	r3, r2, r3
 8005be4:	69ba      	ldr	r2, [r7, #24]
 8005be6:	429a      	cmp	r2, r3
 8005be8:	d302      	bcc.n	8005bf0 <QSPI_WaitFlagStateUntilTimeout+0x30>
 8005bea:	69bb      	ldr	r3, [r7, #24]
 8005bec:	2b00      	cmp	r3, #0
 8005bee:	d10b      	bne.n	8005c08 <QSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005bf0:	68fb      	ldr	r3, [r7, #12]
 8005bf2:	2204      	movs	r2, #4
 8005bf4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8005bf8:	68fb      	ldr	r3, [r7, #12]
 8005bfa:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005bfc:	f043 0201 	orr.w	r2, r3, #1
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	645a      	str	r2, [r3, #68]	@ 0x44

        return HAL_ERROR;
 8005c04:	2301      	movs	r3, #1
 8005c06:	e00e      	b.n	8005c26 <QSPI_WaitFlagStateUntilTimeout+0x66>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	681b      	ldr	r3, [r3, #0]
 8005c0c:	689a      	ldr	r2, [r3, #8]
 8005c0e:	68bb      	ldr	r3, [r7, #8]
 8005c10:	4013      	ands	r3, r2
 8005c12:	2b00      	cmp	r3, #0
 8005c14:	bf14      	ite	ne
 8005c16:	2301      	movne	r3, #1
 8005c18:	2300      	moveq	r3, #0
 8005c1a:	b2db      	uxtb	r3, r3
 8005c1c:	461a      	mov	r2, r3
 8005c1e:	79fb      	ldrb	r3, [r7, #7]
 8005c20:	429a      	cmp	r2, r3
 8005c22:	d1d6      	bne.n	8005bd2 <QSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8005c24:	2300      	movs	r3, #0
}
 8005c26:	4618      	mov	r0, r3
 8005c28:	3710      	adds	r7, #16
 8005c2a:	46bd      	mov	sp, r7
 8005c2c:	bd80      	pop	{r7, pc}
	...

08005c30 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005c30:	b580      	push	{r7, lr}
 8005c32:	b086      	sub	sp, #24
 8005c34:	af00      	add	r7, sp, #0
 8005c36:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 8005c38:	2300      	movs	r3, #0
 8005c3a:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005c3c:	687b      	ldr	r3, [r7, #4]
 8005c3e:	2b00      	cmp	r3, #0
 8005c40:	d101      	bne.n	8005c46 <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 8005c42:	2301      	movs	r3, #1
 8005c44:	e291      	b.n	800616a <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	681b      	ldr	r3, [r3, #0]
 8005c4a:	f003 0301 	and.w	r3, r3, #1
 8005c4e:	2b00      	cmp	r3, #0
 8005c50:	f000 8087 	beq.w	8005d62 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 8005c54:	4b96      	ldr	r3, [pc, #600]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005c56:	689b      	ldr	r3, [r3, #8]
 8005c58:	f003 030c 	and.w	r3, r3, #12
 8005c5c:	2b04      	cmp	r3, #4
 8005c5e:	d00c      	beq.n	8005c7a <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005c60:	4b93      	ldr	r3, [pc, #588]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005c62:	689b      	ldr	r3, [r3, #8]
 8005c64:	f003 030c 	and.w	r3, r3, #12
 8005c68:	2b08      	cmp	r3, #8
 8005c6a:	d112      	bne.n	8005c92 <HAL_RCC_OscConfig+0x62>
 8005c6c:	4b90      	ldr	r3, [pc, #576]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005c6e:	685b      	ldr	r3, [r3, #4]
 8005c70:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005c74:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005c78:	d10b      	bne.n	8005c92 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005c7a:	4b8d      	ldr	r3, [pc, #564]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005c7c:	681b      	ldr	r3, [r3, #0]
 8005c7e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005c82:	2b00      	cmp	r3, #0
 8005c84:	d06c      	beq.n	8005d60 <HAL_RCC_OscConfig+0x130>
 8005c86:	687b      	ldr	r3, [r7, #4]
 8005c88:	685b      	ldr	r3, [r3, #4]
 8005c8a:	2b00      	cmp	r3, #0
 8005c8c:	d168      	bne.n	8005d60 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 8005c8e:	2301      	movs	r3, #1
 8005c90:	e26b      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	685b      	ldr	r3, [r3, #4]
 8005c96:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005c9a:	d106      	bne.n	8005caa <HAL_RCC_OscConfig+0x7a>
 8005c9c:	4b84      	ldr	r3, [pc, #528]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	4a83      	ldr	r2, [pc, #524]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005ca2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005ca6:	6013      	str	r3, [r2, #0]
 8005ca8:	e02e      	b.n	8005d08 <HAL_RCC_OscConfig+0xd8>
 8005caa:	687b      	ldr	r3, [r7, #4]
 8005cac:	685b      	ldr	r3, [r3, #4]
 8005cae:	2b00      	cmp	r3, #0
 8005cb0:	d10c      	bne.n	8005ccc <HAL_RCC_OscConfig+0x9c>
 8005cb2:	4b7f      	ldr	r3, [pc, #508]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cb4:	681b      	ldr	r3, [r3, #0]
 8005cb6:	4a7e      	ldr	r2, [pc, #504]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cb8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005cbc:	6013      	str	r3, [r2, #0]
 8005cbe:	4b7c      	ldr	r3, [pc, #496]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	4a7b      	ldr	r2, [pc, #492]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cc4:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005cc8:	6013      	str	r3, [r2, #0]
 8005cca:	e01d      	b.n	8005d08 <HAL_RCC_OscConfig+0xd8>
 8005ccc:	687b      	ldr	r3, [r7, #4]
 8005cce:	685b      	ldr	r3, [r3, #4]
 8005cd0:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005cd4:	d10c      	bne.n	8005cf0 <HAL_RCC_OscConfig+0xc0>
 8005cd6:	4b76      	ldr	r3, [pc, #472]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cd8:	681b      	ldr	r3, [r3, #0]
 8005cda:	4a75      	ldr	r2, [pc, #468]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cdc:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005ce0:	6013      	str	r3, [r2, #0]
 8005ce2:	4b73      	ldr	r3, [pc, #460]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	4a72      	ldr	r2, [pc, #456]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005ce8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005cec:	6013      	str	r3, [r2, #0]
 8005cee:	e00b      	b.n	8005d08 <HAL_RCC_OscConfig+0xd8>
 8005cf0:	4b6f      	ldr	r3, [pc, #444]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cf2:	681b      	ldr	r3, [r3, #0]
 8005cf4:	4a6e      	ldr	r2, [pc, #440]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cf6:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005cfa:	6013      	str	r3, [r2, #0]
 8005cfc:	4b6c      	ldr	r3, [pc, #432]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005cfe:	681b      	ldr	r3, [r3, #0]
 8005d00:	4a6b      	ldr	r2, [pc, #428]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d02:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005d06:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8005d08:	687b      	ldr	r3, [r7, #4]
 8005d0a:	685b      	ldr	r3, [r3, #4]
 8005d0c:	2b00      	cmp	r3, #0
 8005d0e:	d013      	beq.n	8005d38 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005d10:	f7fe fb16 	bl	8004340 <HAL_GetTick>
 8005d14:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005d16:	e008      	b.n	8005d2a <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005d18:	f7fe fb12 	bl	8004340 <HAL_GetTick>
 8005d1c:	4602      	mov	r2, r0
 8005d1e:	693b      	ldr	r3, [r7, #16]
 8005d20:	1ad3      	subs	r3, r2, r3
 8005d22:	2b64      	cmp	r3, #100	@ 0x64
 8005d24:	d901      	bls.n	8005d2a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8005d26:	2303      	movs	r3, #3
 8005d28:	e21f      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005d2a:	4b61      	ldr	r3, [pc, #388]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d2c:	681b      	ldr	r3, [r3, #0]
 8005d2e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005d32:	2b00      	cmp	r3, #0
 8005d34:	d0f0      	beq.n	8005d18 <HAL_RCC_OscConfig+0xe8>
 8005d36:	e014      	b.n	8005d62 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005d38:	f7fe fb02 	bl	8004340 <HAL_GetTick>
 8005d3c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005d3e:	e008      	b.n	8005d52 <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005d40:	f7fe fafe 	bl	8004340 <HAL_GetTick>
 8005d44:	4602      	mov	r2, r0
 8005d46:	693b      	ldr	r3, [r7, #16]
 8005d48:	1ad3      	subs	r3, r2, r3
 8005d4a:	2b64      	cmp	r3, #100	@ 0x64
 8005d4c:	d901      	bls.n	8005d52 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 8005d4e:	2303      	movs	r3, #3
 8005d50:	e20b      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005d52:	4b57      	ldr	r3, [pc, #348]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005d5a:	2b00      	cmp	r3, #0
 8005d5c:	d1f0      	bne.n	8005d40 <HAL_RCC_OscConfig+0x110>
 8005d5e:	e000      	b.n	8005d62 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005d60:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005d62:	687b      	ldr	r3, [r7, #4]
 8005d64:	681b      	ldr	r3, [r3, #0]
 8005d66:	f003 0302 	and.w	r3, r3, #2
 8005d6a:	2b00      	cmp	r3, #0
 8005d6c:	d069      	beq.n	8005e42 <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 8005d6e:	4b50      	ldr	r3, [pc, #320]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d70:	689b      	ldr	r3, [r3, #8]
 8005d72:	f003 030c 	and.w	r3, r3, #12
 8005d76:	2b00      	cmp	r3, #0
 8005d78:	d00b      	beq.n	8005d92 <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005d7a:	4b4d      	ldr	r3, [pc, #308]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d7c:	689b      	ldr	r3, [r3, #8]
 8005d7e:	f003 030c 	and.w	r3, r3, #12
 8005d82:	2b08      	cmp	r3, #8
 8005d84:	d11c      	bne.n	8005dc0 <HAL_RCC_OscConfig+0x190>
 8005d86:	4b4a      	ldr	r3, [pc, #296]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d88:	685b      	ldr	r3, [r3, #4]
 8005d8a:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005d8e:	2b00      	cmp	r3, #0
 8005d90:	d116      	bne.n	8005dc0 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005d92:	4b47      	ldr	r3, [pc, #284]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005d94:	681b      	ldr	r3, [r3, #0]
 8005d96:	f003 0302 	and.w	r3, r3, #2
 8005d9a:	2b00      	cmp	r3, #0
 8005d9c:	d005      	beq.n	8005daa <HAL_RCC_OscConfig+0x17a>
 8005d9e:	687b      	ldr	r3, [r7, #4]
 8005da0:	68db      	ldr	r3, [r3, #12]
 8005da2:	2b01      	cmp	r3, #1
 8005da4:	d001      	beq.n	8005daa <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 8005da6:	2301      	movs	r3, #1
 8005da8:	e1df      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005daa:	4b41      	ldr	r3, [pc, #260]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005dac:	681b      	ldr	r3, [r3, #0]
 8005dae:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005db2:	687b      	ldr	r3, [r7, #4]
 8005db4:	691b      	ldr	r3, [r3, #16]
 8005db6:	00db      	lsls	r3, r3, #3
 8005db8:	493d      	ldr	r1, [pc, #244]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005dba:	4313      	orrs	r3, r2
 8005dbc:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005dbe:	e040      	b.n	8005e42 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005dc0:	687b      	ldr	r3, [r7, #4]
 8005dc2:	68db      	ldr	r3, [r3, #12]
 8005dc4:	2b00      	cmp	r3, #0
 8005dc6:	d023      	beq.n	8005e10 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005dc8:	4b39      	ldr	r3, [pc, #228]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005dca:	681b      	ldr	r3, [r3, #0]
 8005dcc:	4a38      	ldr	r2, [pc, #224]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005dce:	f043 0301 	orr.w	r3, r3, #1
 8005dd2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005dd4:	f7fe fab4 	bl	8004340 <HAL_GetTick>
 8005dd8:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005dda:	e008      	b.n	8005dee <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005ddc:	f7fe fab0 	bl	8004340 <HAL_GetTick>
 8005de0:	4602      	mov	r2, r0
 8005de2:	693b      	ldr	r3, [r7, #16]
 8005de4:	1ad3      	subs	r3, r2, r3
 8005de6:	2b02      	cmp	r3, #2
 8005de8:	d901      	bls.n	8005dee <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 8005dea:	2303      	movs	r3, #3
 8005dec:	e1bd      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005dee:	4b30      	ldr	r3, [pc, #192]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005df0:	681b      	ldr	r3, [r3, #0]
 8005df2:	f003 0302 	and.w	r3, r3, #2
 8005df6:	2b00      	cmp	r3, #0
 8005df8:	d0f0      	beq.n	8005ddc <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005dfa:	4b2d      	ldr	r3, [pc, #180]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005dfc:	681b      	ldr	r3, [r3, #0]
 8005dfe:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	691b      	ldr	r3, [r3, #16]
 8005e06:	00db      	lsls	r3, r3, #3
 8005e08:	4929      	ldr	r1, [pc, #164]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e0a:	4313      	orrs	r3, r2
 8005e0c:	600b      	str	r3, [r1, #0]
 8005e0e:	e018      	b.n	8005e42 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005e10:	4b27      	ldr	r3, [pc, #156]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e12:	681b      	ldr	r3, [r3, #0]
 8005e14:	4a26      	ldr	r2, [pc, #152]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e16:	f023 0301 	bic.w	r3, r3, #1
 8005e1a:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005e1c:	f7fe fa90 	bl	8004340 <HAL_GetTick>
 8005e20:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005e22:	e008      	b.n	8005e36 <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005e24:	f7fe fa8c 	bl	8004340 <HAL_GetTick>
 8005e28:	4602      	mov	r2, r0
 8005e2a:	693b      	ldr	r3, [r7, #16]
 8005e2c:	1ad3      	subs	r3, r2, r3
 8005e2e:	2b02      	cmp	r3, #2
 8005e30:	d901      	bls.n	8005e36 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8005e32:	2303      	movs	r3, #3
 8005e34:	e199      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005e36:	4b1e      	ldr	r3, [pc, #120]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e38:	681b      	ldr	r3, [r3, #0]
 8005e3a:	f003 0302 	and.w	r3, r3, #2
 8005e3e:	2b00      	cmp	r3, #0
 8005e40:	d1f0      	bne.n	8005e24 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005e42:	687b      	ldr	r3, [r7, #4]
 8005e44:	681b      	ldr	r3, [r3, #0]
 8005e46:	f003 0308 	and.w	r3, r3, #8
 8005e4a:	2b00      	cmp	r3, #0
 8005e4c:	d038      	beq.n	8005ec0 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005e4e:	687b      	ldr	r3, [r7, #4]
 8005e50:	695b      	ldr	r3, [r3, #20]
 8005e52:	2b00      	cmp	r3, #0
 8005e54:	d019      	beq.n	8005e8a <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005e56:	4b16      	ldr	r3, [pc, #88]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e58:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e5a:	4a15      	ldr	r2, [pc, #84]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e5c:	f043 0301 	orr.w	r3, r3, #1
 8005e60:	6753      	str	r3, [r2, #116]	@ 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005e62:	f7fe fa6d 	bl	8004340 <HAL_GetTick>
 8005e66:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005e68:	e008      	b.n	8005e7c <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005e6a:	f7fe fa69 	bl	8004340 <HAL_GetTick>
 8005e6e:	4602      	mov	r2, r0
 8005e70:	693b      	ldr	r3, [r7, #16]
 8005e72:	1ad3      	subs	r3, r2, r3
 8005e74:	2b02      	cmp	r3, #2
 8005e76:	d901      	bls.n	8005e7c <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 8005e78:	2303      	movs	r3, #3
 8005e7a:	e176      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005e7c:	4b0c      	ldr	r3, [pc, #48]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e7e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e80:	f003 0302 	and.w	r3, r3, #2
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d0f0      	beq.n	8005e6a <HAL_RCC_OscConfig+0x23a>
 8005e88:	e01a      	b.n	8005ec0 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005e8a:	4b09      	ldr	r3, [pc, #36]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e8c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005e8e:	4a08      	ldr	r2, [pc, #32]	@ (8005eb0 <HAL_RCC_OscConfig+0x280>)
 8005e90:	f023 0301 	bic.w	r3, r3, #1
 8005e94:	6753      	str	r3, [r2, #116]	@ 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005e96:	f7fe fa53 	bl	8004340 <HAL_GetTick>
 8005e9a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005e9c:	e00a      	b.n	8005eb4 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005e9e:	f7fe fa4f 	bl	8004340 <HAL_GetTick>
 8005ea2:	4602      	mov	r2, r0
 8005ea4:	693b      	ldr	r3, [r7, #16]
 8005ea6:	1ad3      	subs	r3, r2, r3
 8005ea8:	2b02      	cmp	r3, #2
 8005eaa:	d903      	bls.n	8005eb4 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 8005eac:	2303      	movs	r3, #3
 8005eae:	e15c      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
 8005eb0:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005eb4:	4b91      	ldr	r3, [pc, #580]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005eb6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005eb8:	f003 0302 	and.w	r3, r3, #2
 8005ebc:	2b00      	cmp	r3, #0
 8005ebe:	d1ee      	bne.n	8005e9e <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005ec0:	687b      	ldr	r3, [r7, #4]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	f003 0304 	and.w	r3, r3, #4
 8005ec8:	2b00      	cmp	r3, #0
 8005eca:	f000 80a4 	beq.w	8006016 <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005ece:	4b8b      	ldr	r3, [pc, #556]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005ed0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005ed2:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005ed6:	2b00      	cmp	r3, #0
 8005ed8:	d10d      	bne.n	8005ef6 <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 8005eda:	4b88      	ldr	r3, [pc, #544]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005edc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005ede:	4a87      	ldr	r2, [pc, #540]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005ee0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005ee4:	6413      	str	r3, [r2, #64]	@ 0x40
 8005ee6:	4b85      	ldr	r3, [pc, #532]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005ee8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005eea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005eee:	60bb      	str	r3, [r7, #8]
 8005ef0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005ef2:	2301      	movs	r3, #1
 8005ef4:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005ef6:	4b82      	ldr	r3, [pc, #520]	@ (8006100 <HAL_RCC_OscConfig+0x4d0>)
 8005ef8:	681b      	ldr	r3, [r3, #0]
 8005efa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	d118      	bne.n	8005f34 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 8005f02:	4b7f      	ldr	r3, [pc, #508]	@ (8006100 <HAL_RCC_OscConfig+0x4d0>)
 8005f04:	681b      	ldr	r3, [r3, #0]
 8005f06:	4a7e      	ldr	r2, [pc, #504]	@ (8006100 <HAL_RCC_OscConfig+0x4d0>)
 8005f08:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005f0c:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005f0e:	f7fe fa17 	bl	8004340 <HAL_GetTick>
 8005f12:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005f14:	e008      	b.n	8005f28 <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005f16:	f7fe fa13 	bl	8004340 <HAL_GetTick>
 8005f1a:	4602      	mov	r2, r0
 8005f1c:	693b      	ldr	r3, [r7, #16]
 8005f1e:	1ad3      	subs	r3, r2, r3
 8005f20:	2b64      	cmp	r3, #100	@ 0x64
 8005f22:	d901      	bls.n	8005f28 <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 8005f24:	2303      	movs	r3, #3
 8005f26:	e120      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8005f28:	4b75      	ldr	r3, [pc, #468]	@ (8006100 <HAL_RCC_OscConfig+0x4d0>)
 8005f2a:	681b      	ldr	r3, [r3, #0]
 8005f2c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005f30:	2b00      	cmp	r3, #0
 8005f32:	d0f0      	beq.n	8005f16 <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005f34:	687b      	ldr	r3, [r7, #4]
 8005f36:	689b      	ldr	r3, [r3, #8]
 8005f38:	2b01      	cmp	r3, #1
 8005f3a:	d106      	bne.n	8005f4a <HAL_RCC_OscConfig+0x31a>
 8005f3c:	4b6f      	ldr	r3, [pc, #444]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f3e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f40:	4a6e      	ldr	r2, [pc, #440]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f42:	f043 0301 	orr.w	r3, r3, #1
 8005f46:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f48:	e02d      	b.n	8005fa6 <HAL_RCC_OscConfig+0x376>
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	689b      	ldr	r3, [r3, #8]
 8005f4e:	2b00      	cmp	r3, #0
 8005f50:	d10c      	bne.n	8005f6c <HAL_RCC_OscConfig+0x33c>
 8005f52:	4b6a      	ldr	r3, [pc, #424]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f54:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f56:	4a69      	ldr	r2, [pc, #420]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f58:	f023 0301 	bic.w	r3, r3, #1
 8005f5c:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f5e:	4b67      	ldr	r3, [pc, #412]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f60:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f62:	4a66      	ldr	r2, [pc, #408]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f64:	f023 0304 	bic.w	r3, r3, #4
 8005f68:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f6a:	e01c      	b.n	8005fa6 <HAL_RCC_OscConfig+0x376>
 8005f6c:	687b      	ldr	r3, [r7, #4]
 8005f6e:	689b      	ldr	r3, [r3, #8]
 8005f70:	2b05      	cmp	r3, #5
 8005f72:	d10c      	bne.n	8005f8e <HAL_RCC_OscConfig+0x35e>
 8005f74:	4b61      	ldr	r3, [pc, #388]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f76:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f78:	4a60      	ldr	r2, [pc, #384]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f7a:	f043 0304 	orr.w	r3, r3, #4
 8005f7e:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f80:	4b5e      	ldr	r3, [pc, #376]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f82:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f84:	4a5d      	ldr	r2, [pc, #372]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f86:	f043 0301 	orr.w	r3, r3, #1
 8005f8a:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f8c:	e00b      	b.n	8005fa6 <HAL_RCC_OscConfig+0x376>
 8005f8e:	4b5b      	ldr	r3, [pc, #364]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f90:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f92:	4a5a      	ldr	r2, [pc, #360]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f94:	f023 0301 	bic.w	r3, r3, #1
 8005f98:	6713      	str	r3, [r2, #112]	@ 0x70
 8005f9a:	4b58      	ldr	r3, [pc, #352]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005f9c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005f9e:	4a57      	ldr	r2, [pc, #348]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005fa0:	f023 0304 	bic.w	r3, r3, #4
 8005fa4:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005fa6:	687b      	ldr	r3, [r7, #4]
 8005fa8:	689b      	ldr	r3, [r3, #8]
 8005faa:	2b00      	cmp	r3, #0
 8005fac:	d015      	beq.n	8005fda <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005fae:	f7fe f9c7 	bl	8004340 <HAL_GetTick>
 8005fb2:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005fb4:	e00a      	b.n	8005fcc <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005fb6:	f7fe f9c3 	bl	8004340 <HAL_GetTick>
 8005fba:	4602      	mov	r2, r0
 8005fbc:	693b      	ldr	r3, [r7, #16]
 8005fbe:	1ad3      	subs	r3, r2, r3
 8005fc0:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005fc4:	4293      	cmp	r3, r2
 8005fc6:	d901      	bls.n	8005fcc <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 8005fc8:	2303      	movs	r3, #3
 8005fca:	e0ce      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005fcc:	4b4b      	ldr	r3, [pc, #300]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005fce:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005fd0:	f003 0302 	and.w	r3, r3, #2
 8005fd4:	2b00      	cmp	r3, #0
 8005fd6:	d0ee      	beq.n	8005fb6 <HAL_RCC_OscConfig+0x386>
 8005fd8:	e014      	b.n	8006004 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005fda:	f7fe f9b1 	bl	8004340 <HAL_GetTick>
 8005fde:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005fe0:	e00a      	b.n	8005ff8 <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005fe2:	f7fe f9ad 	bl	8004340 <HAL_GetTick>
 8005fe6:	4602      	mov	r2, r0
 8005fe8:	693b      	ldr	r3, [r7, #16]
 8005fea:	1ad3      	subs	r3, r2, r3
 8005fec:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005ff0:	4293      	cmp	r3, r2
 8005ff2:	d901      	bls.n	8005ff8 <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 8005ff4:	2303      	movs	r3, #3
 8005ff6:	e0b8      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005ff8:	4b40      	ldr	r3, [pc, #256]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8005ffa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005ffc:	f003 0302 	and.w	r3, r3, #2
 8006000:	2b00      	cmp	r3, #0
 8006002:	d1ee      	bne.n	8005fe2 <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8006004:	7dfb      	ldrb	r3, [r7, #23]
 8006006:	2b01      	cmp	r3, #1
 8006008:	d105      	bne.n	8006016 <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800600a:	4b3c      	ldr	r3, [pc, #240]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 800600c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800600e:	4a3b      	ldr	r2, [pc, #236]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8006010:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006014:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8006016:	687b      	ldr	r3, [r7, #4]
 8006018:	699b      	ldr	r3, [r3, #24]
 800601a:	2b00      	cmp	r3, #0
 800601c:	f000 80a4 	beq.w	8006168 <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8006020:	4b36      	ldr	r3, [pc, #216]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8006022:	689b      	ldr	r3, [r3, #8]
 8006024:	f003 030c 	and.w	r3, r3, #12
 8006028:	2b08      	cmp	r3, #8
 800602a:	d06b      	beq.n	8006104 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	699b      	ldr	r3, [r3, #24]
 8006030:	2b02      	cmp	r3, #2
 8006032:	d149      	bne.n	80060c8 <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8006034:	4b31      	ldr	r3, [pc, #196]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8006036:	681b      	ldr	r3, [r3, #0]
 8006038:	4a30      	ldr	r2, [pc, #192]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 800603a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800603e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006040:	f7fe f97e 	bl	8004340 <HAL_GetTick>
 8006044:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8006046:	e008      	b.n	800605a <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8006048:	f7fe f97a 	bl	8004340 <HAL_GetTick>
 800604c:	4602      	mov	r2, r0
 800604e:	693b      	ldr	r3, [r7, #16]
 8006050:	1ad3      	subs	r3, r2, r3
 8006052:	2b02      	cmp	r3, #2
 8006054:	d901      	bls.n	800605a <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 8006056:	2303      	movs	r3, #3
 8006058:	e087      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800605a:	4b28      	ldr	r3, [pc, #160]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006062:	2b00      	cmp	r3, #0
 8006064:	d1f0      	bne.n	8006048 <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	69da      	ldr	r2, [r3, #28]
 800606a:	687b      	ldr	r3, [r7, #4]
 800606c:	6a1b      	ldr	r3, [r3, #32]
 800606e:	431a      	orrs	r2, r3
 8006070:	687b      	ldr	r3, [r7, #4]
 8006072:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006074:	019b      	lsls	r3, r3, #6
 8006076:	431a      	orrs	r2, r3
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800607c:	085b      	lsrs	r3, r3, #1
 800607e:	3b01      	subs	r3, #1
 8006080:	041b      	lsls	r3, r3, #16
 8006082:	431a      	orrs	r2, r3
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006088:	061b      	lsls	r3, r3, #24
 800608a:	4313      	orrs	r3, r2
 800608c:	4a1b      	ldr	r2, [pc, #108]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 800608e:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8006092:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8006094:	4b19      	ldr	r3, [pc, #100]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	4a18      	ldr	r2, [pc, #96]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 800609a:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800609e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80060a0:	f7fe f94e 	bl	8004340 <HAL_GetTick>
 80060a4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80060a6:	e008      	b.n	80060ba <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80060a8:	f7fe f94a 	bl	8004340 <HAL_GetTick>
 80060ac:	4602      	mov	r2, r0
 80060ae:	693b      	ldr	r3, [r7, #16]
 80060b0:	1ad3      	subs	r3, r2, r3
 80060b2:	2b02      	cmp	r3, #2
 80060b4:	d901      	bls.n	80060ba <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 80060b6:	2303      	movs	r3, #3
 80060b8:	e057      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80060ba:	4b10      	ldr	r3, [pc, #64]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 80060bc:	681b      	ldr	r3, [r3, #0]
 80060be:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80060c2:	2b00      	cmp	r3, #0
 80060c4:	d0f0      	beq.n	80060a8 <HAL_RCC_OscConfig+0x478>
 80060c6:	e04f      	b.n	8006168 <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80060c8:	4b0c      	ldr	r3, [pc, #48]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 80060ca:	681b      	ldr	r3, [r3, #0]
 80060cc:	4a0b      	ldr	r2, [pc, #44]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 80060ce:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80060d2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80060d4:	f7fe f934 	bl	8004340 <HAL_GetTick>
 80060d8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80060da:	e008      	b.n	80060ee <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80060dc:	f7fe f930 	bl	8004340 <HAL_GetTick>
 80060e0:	4602      	mov	r2, r0
 80060e2:	693b      	ldr	r3, [r7, #16]
 80060e4:	1ad3      	subs	r3, r2, r3
 80060e6:	2b02      	cmp	r3, #2
 80060e8:	d901      	bls.n	80060ee <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 80060ea:	2303      	movs	r3, #3
 80060ec:	e03d      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80060ee:	4b03      	ldr	r3, [pc, #12]	@ (80060fc <HAL_RCC_OscConfig+0x4cc>)
 80060f0:	681b      	ldr	r3, [r3, #0]
 80060f2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80060f6:	2b00      	cmp	r3, #0
 80060f8:	d1f0      	bne.n	80060dc <HAL_RCC_OscConfig+0x4ac>
 80060fa:	e035      	b.n	8006168 <HAL_RCC_OscConfig+0x538>
 80060fc:	40023800 	.word	0x40023800
 8006100:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 8006104:	4b1b      	ldr	r3, [pc, #108]	@ (8006174 <HAL_RCC_OscConfig+0x544>)
 8006106:	685b      	ldr	r3, [r3, #4]
 8006108:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800610a:	687b      	ldr	r3, [r7, #4]
 800610c:	699b      	ldr	r3, [r3, #24]
 800610e:	2b01      	cmp	r3, #1
 8006110:	d028      	beq.n	8006164 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8006112:	68fb      	ldr	r3, [r7, #12]
 8006114:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800611c:	429a      	cmp	r2, r3
 800611e:	d121      	bne.n	8006164 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800612a:	429a      	cmp	r2, r3
 800612c:	d11a      	bne.n	8006164 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 800612e:	68fa      	ldr	r2, [r7, #12]
 8006130:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8006134:	4013      	ands	r3, r2
 8006136:	687a      	ldr	r2, [r7, #4]
 8006138:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800613a:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800613c:	4293      	cmp	r3, r2
 800613e:	d111      	bne.n	8006164 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006140:	68fb      	ldr	r3, [r7, #12]
 8006142:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8006146:	687b      	ldr	r3, [r7, #4]
 8006148:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800614a:	085b      	lsrs	r3, r3, #1
 800614c:	3b01      	subs	r3, #1
 800614e:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8006150:	429a      	cmp	r2, r3
 8006152:	d107      	bne.n	8006164 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8006154:	68fb      	ldr	r3, [r7, #12]
 8006156:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800615a:	687b      	ldr	r3, [r7, #4]
 800615c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800615e:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 8006160:	429a      	cmp	r2, r3
 8006162:	d001      	beq.n	8006168 <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 8006164:	2301      	movs	r3, #1
 8006166:	e000      	b.n	800616a <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 8006168:	2300      	movs	r3, #0
}
 800616a:	4618      	mov	r0, r3
 800616c:	3718      	adds	r7, #24
 800616e:	46bd      	mov	sp, r7
 8006170:	bd80      	pop	{r7, pc}
 8006172:	bf00      	nop
 8006174:	40023800 	.word	0x40023800

08006178 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8006178:	b580      	push	{r7, lr}
 800617a:	b084      	sub	sp, #16
 800617c:	af00      	add	r7, sp, #0
 800617e:	6078      	str	r0, [r7, #4]
 8006180:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 8006182:	2300      	movs	r3, #0
 8006184:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8006186:	687b      	ldr	r3, [r7, #4]
 8006188:	2b00      	cmp	r3, #0
 800618a:	d101      	bne.n	8006190 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 800618c:	2301      	movs	r3, #1
 800618e:	e0d0      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8006190:	4b6a      	ldr	r3, [pc, #424]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 8006192:	681b      	ldr	r3, [r3, #0]
 8006194:	f003 030f 	and.w	r3, r3, #15
 8006198:	683a      	ldr	r2, [r7, #0]
 800619a:	429a      	cmp	r2, r3
 800619c:	d910      	bls.n	80061c0 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800619e:	4b67      	ldr	r3, [pc, #412]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	f023 020f 	bic.w	r2, r3, #15
 80061a6:	4965      	ldr	r1, [pc, #404]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 80061a8:	683b      	ldr	r3, [r7, #0]
 80061aa:	4313      	orrs	r3, r2
 80061ac:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80061ae:	4b63      	ldr	r3, [pc, #396]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	f003 030f 	and.w	r3, r3, #15
 80061b6:	683a      	ldr	r2, [r7, #0]
 80061b8:	429a      	cmp	r2, r3
 80061ba:	d001      	beq.n	80061c0 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 80061bc:	2301      	movs	r3, #1
 80061be:	e0b8      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	f003 0302 	and.w	r3, r3, #2
 80061c8:	2b00      	cmp	r3, #0
 80061ca:	d020      	beq.n	800620e <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80061cc:	687b      	ldr	r3, [r7, #4]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	f003 0304 	and.w	r3, r3, #4
 80061d4:	2b00      	cmp	r3, #0
 80061d6:	d005      	beq.n	80061e4 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80061d8:	4b59      	ldr	r3, [pc, #356]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80061da:	689b      	ldr	r3, [r3, #8]
 80061dc:	4a58      	ldr	r2, [pc, #352]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80061de:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 80061e2:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	f003 0308 	and.w	r3, r3, #8
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	d005      	beq.n	80061fc <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80061f0:	4b53      	ldr	r3, [pc, #332]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80061f2:	689b      	ldr	r3, [r3, #8]
 80061f4:	4a52      	ldr	r2, [pc, #328]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80061f6:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 80061fa:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80061fc:	4b50      	ldr	r3, [pc, #320]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80061fe:	689b      	ldr	r3, [r3, #8]
 8006200:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	689b      	ldr	r3, [r3, #8]
 8006208:	494d      	ldr	r1, [pc, #308]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 800620a:	4313      	orrs	r3, r2
 800620c:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f003 0301 	and.w	r3, r3, #1
 8006216:	2b00      	cmp	r3, #0
 8006218:	d040      	beq.n	800629c <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800621a:	687b      	ldr	r3, [r7, #4]
 800621c:	685b      	ldr	r3, [r3, #4]
 800621e:	2b01      	cmp	r3, #1
 8006220:	d107      	bne.n	8006232 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8006222:	4b47      	ldr	r3, [pc, #284]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800622a:	2b00      	cmp	r3, #0
 800622c:	d115      	bne.n	800625a <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 800622e:	2301      	movs	r3, #1
 8006230:	e07f      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8006232:	687b      	ldr	r3, [r7, #4]
 8006234:	685b      	ldr	r3, [r3, #4]
 8006236:	2b02      	cmp	r3, #2
 8006238:	d107      	bne.n	800624a <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800623a:	4b41      	ldr	r3, [pc, #260]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 800623c:	681b      	ldr	r3, [r3, #0]
 800623e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006242:	2b00      	cmp	r3, #0
 8006244:	d109      	bne.n	800625a <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8006246:	2301      	movs	r3, #1
 8006248:	e073      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800624a:	4b3d      	ldr	r3, [pc, #244]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 800624c:	681b      	ldr	r3, [r3, #0]
 800624e:	f003 0302 	and.w	r3, r3, #2
 8006252:	2b00      	cmp	r3, #0
 8006254:	d101      	bne.n	800625a <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8006256:	2301      	movs	r3, #1
 8006258:	e06b      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800625a:	4b39      	ldr	r3, [pc, #228]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 800625c:	689b      	ldr	r3, [r3, #8]
 800625e:	f023 0203 	bic.w	r2, r3, #3
 8006262:	687b      	ldr	r3, [r7, #4]
 8006264:	685b      	ldr	r3, [r3, #4]
 8006266:	4936      	ldr	r1, [pc, #216]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 8006268:	4313      	orrs	r3, r2
 800626a:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800626c:	f7fe f868 	bl	8004340 <HAL_GetTick>
 8006270:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8006272:	e00a      	b.n	800628a <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8006274:	f7fe f864 	bl	8004340 <HAL_GetTick>
 8006278:	4602      	mov	r2, r0
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	1ad3      	subs	r3, r2, r3
 800627e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006282:	4293      	cmp	r3, r2
 8006284:	d901      	bls.n	800628a <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 8006286:	2303      	movs	r3, #3
 8006288:	e053      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800628a:	4b2d      	ldr	r3, [pc, #180]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 800628c:	689b      	ldr	r3, [r3, #8]
 800628e:	f003 020c 	and.w	r2, r3, #12
 8006292:	687b      	ldr	r3, [r7, #4]
 8006294:	685b      	ldr	r3, [r3, #4]
 8006296:	009b      	lsls	r3, r3, #2
 8006298:	429a      	cmp	r2, r3
 800629a:	d1eb      	bne.n	8006274 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800629c:	4b27      	ldr	r3, [pc, #156]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 800629e:	681b      	ldr	r3, [r3, #0]
 80062a0:	f003 030f 	and.w	r3, r3, #15
 80062a4:	683a      	ldr	r2, [r7, #0]
 80062a6:	429a      	cmp	r2, r3
 80062a8:	d210      	bcs.n	80062cc <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80062aa:	4b24      	ldr	r3, [pc, #144]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 80062ac:	681b      	ldr	r3, [r3, #0]
 80062ae:	f023 020f 	bic.w	r2, r3, #15
 80062b2:	4922      	ldr	r1, [pc, #136]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 80062b4:	683b      	ldr	r3, [r7, #0]
 80062b6:	4313      	orrs	r3, r2
 80062b8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80062ba:	4b20      	ldr	r3, [pc, #128]	@ (800633c <HAL_RCC_ClockConfig+0x1c4>)
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	f003 030f 	and.w	r3, r3, #15
 80062c2:	683a      	ldr	r2, [r7, #0]
 80062c4:	429a      	cmp	r2, r3
 80062c6:	d001      	beq.n	80062cc <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 80062c8:	2301      	movs	r3, #1
 80062ca:	e032      	b.n	8006332 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	f003 0304 	and.w	r3, r3, #4
 80062d4:	2b00      	cmp	r3, #0
 80062d6:	d008      	beq.n	80062ea <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80062d8:	4b19      	ldr	r3, [pc, #100]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80062da:	689b      	ldr	r3, [r3, #8]
 80062dc:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 80062e0:	687b      	ldr	r3, [r7, #4]
 80062e2:	68db      	ldr	r3, [r3, #12]
 80062e4:	4916      	ldr	r1, [pc, #88]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80062e6:	4313      	orrs	r3, r2
 80062e8:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80062ea:	687b      	ldr	r3, [r7, #4]
 80062ec:	681b      	ldr	r3, [r3, #0]
 80062ee:	f003 0308 	and.w	r3, r3, #8
 80062f2:	2b00      	cmp	r3, #0
 80062f4:	d009      	beq.n	800630a <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80062f6:	4b12      	ldr	r3, [pc, #72]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 80062f8:	689b      	ldr	r3, [r3, #8]
 80062fa:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80062fe:	687b      	ldr	r3, [r7, #4]
 8006300:	691b      	ldr	r3, [r3, #16]
 8006302:	00db      	lsls	r3, r3, #3
 8006304:	490e      	ldr	r1, [pc, #56]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 8006306:	4313      	orrs	r3, r2
 8006308:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800630a:	f000 f821 	bl	8006350 <HAL_RCC_GetSysClockFreq>
 800630e:	4602      	mov	r2, r0
 8006310:	4b0b      	ldr	r3, [pc, #44]	@ (8006340 <HAL_RCC_ClockConfig+0x1c8>)
 8006312:	689b      	ldr	r3, [r3, #8]
 8006314:	091b      	lsrs	r3, r3, #4
 8006316:	f003 030f 	and.w	r3, r3, #15
 800631a:	490a      	ldr	r1, [pc, #40]	@ (8006344 <HAL_RCC_ClockConfig+0x1cc>)
 800631c:	5ccb      	ldrb	r3, [r1, r3]
 800631e:	fa22 f303 	lsr.w	r3, r2, r3
 8006322:	4a09      	ldr	r2, [pc, #36]	@ (8006348 <HAL_RCC_ClockConfig+0x1d0>)
 8006324:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8006326:	4b09      	ldr	r3, [pc, #36]	@ (800634c <HAL_RCC_ClockConfig+0x1d4>)
 8006328:	681b      	ldr	r3, [r3, #0]
 800632a:	4618      	mov	r0, r3
 800632c:	f7fd ffc4 	bl	80042b8 <HAL_InitTick>

  return HAL_OK;
 8006330:	2300      	movs	r3, #0
}
 8006332:	4618      	mov	r0, r3
 8006334:	3710      	adds	r7, #16
 8006336:	46bd      	mov	sp, r7
 8006338:	bd80      	pop	{r7, pc}
 800633a:	bf00      	nop
 800633c:	40023c00 	.word	0x40023c00
 8006340:	40023800 	.word	0x40023800
 8006344:	08022554 	.word	0x08022554
 8006348:	20000004 	.word	0x20000004
 800634c:	2000016c 	.word	0x2000016c

08006350 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8006350:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8006354:	b090      	sub	sp, #64	@ 0x40
 8006356:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 8006358:	2300      	movs	r3, #0
 800635a:	637b      	str	r3, [r7, #52]	@ 0x34
 800635c:	2300      	movs	r3, #0
 800635e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006360:	2300      	movs	r3, #0
 8006362:	633b      	str	r3, [r7, #48]	@ 0x30
  uint32_t sysclockfreq = 0;
 8006364:	2300      	movs	r3, #0
 8006366:	63bb      	str	r3, [r7, #56]	@ 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8006368:	4b59      	ldr	r3, [pc, #356]	@ (80064d0 <HAL_RCC_GetSysClockFreq+0x180>)
 800636a:	689b      	ldr	r3, [r3, #8]
 800636c:	f003 030c 	and.w	r3, r3, #12
 8006370:	2b08      	cmp	r3, #8
 8006372:	d00d      	beq.n	8006390 <HAL_RCC_GetSysClockFreq+0x40>
 8006374:	2b08      	cmp	r3, #8
 8006376:	f200 80a1 	bhi.w	80064bc <HAL_RCC_GetSysClockFreq+0x16c>
 800637a:	2b00      	cmp	r3, #0
 800637c:	d002      	beq.n	8006384 <HAL_RCC_GetSysClockFreq+0x34>
 800637e:	2b04      	cmp	r3, #4
 8006380:	d003      	beq.n	800638a <HAL_RCC_GetSysClockFreq+0x3a>
 8006382:	e09b      	b.n	80064bc <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8006384:	4b53      	ldr	r3, [pc, #332]	@ (80064d4 <HAL_RCC_GetSysClockFreq+0x184>)
 8006386:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 8006388:	e09b      	b.n	80064c2 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800638a:	4b53      	ldr	r3, [pc, #332]	@ (80064d8 <HAL_RCC_GetSysClockFreq+0x188>)
 800638c:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 800638e:	e098      	b.n	80064c2 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8006390:	4b4f      	ldr	r3, [pc, #316]	@ (80064d0 <HAL_RCC_GetSysClockFreq+0x180>)
 8006392:	685b      	ldr	r3, [r3, #4]
 8006394:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006398:	637b      	str	r3, [r7, #52]	@ 0x34
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 800639a:	4b4d      	ldr	r3, [pc, #308]	@ (80064d0 <HAL_RCC_GetSysClockFreq+0x180>)
 800639c:	685b      	ldr	r3, [r3, #4]
 800639e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80063a2:	2b00      	cmp	r3, #0
 80063a4:	d028      	beq.n	80063f8 <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063a6:	4b4a      	ldr	r3, [pc, #296]	@ (80064d0 <HAL_RCC_GetSysClockFreq+0x180>)
 80063a8:	685b      	ldr	r3, [r3, #4]
 80063aa:	099b      	lsrs	r3, r3, #6
 80063ac:	2200      	movs	r2, #0
 80063ae:	623b      	str	r3, [r7, #32]
 80063b0:	627a      	str	r2, [r7, #36]	@ 0x24
 80063b2:	6a3b      	ldr	r3, [r7, #32]
 80063b4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80063b8:	2100      	movs	r1, #0
 80063ba:	4b47      	ldr	r3, [pc, #284]	@ (80064d8 <HAL_RCC_GetSysClockFreq+0x188>)
 80063bc:	fb03 f201 	mul.w	r2, r3, r1
 80063c0:	2300      	movs	r3, #0
 80063c2:	fb00 f303 	mul.w	r3, r0, r3
 80063c6:	4413      	add	r3, r2
 80063c8:	4a43      	ldr	r2, [pc, #268]	@ (80064d8 <HAL_RCC_GetSysClockFreq+0x188>)
 80063ca:	fba0 1202 	umull	r1, r2, r0, r2
 80063ce:	62fa      	str	r2, [r7, #44]	@ 0x2c
 80063d0:	460a      	mov	r2, r1
 80063d2:	62ba      	str	r2, [r7, #40]	@ 0x28
 80063d4:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80063d6:	4413      	add	r3, r2
 80063d8:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80063da:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80063dc:	2200      	movs	r2, #0
 80063de:	61bb      	str	r3, [r7, #24]
 80063e0:	61fa      	str	r2, [r7, #28]
 80063e2:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80063e6:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 80063ea:	f7f9 ff61 	bl	80002b0 <__aeabi_uldivmod>
 80063ee:	4602      	mov	r2, r0
 80063f0:	460b      	mov	r3, r1
 80063f2:	4613      	mov	r3, r2
 80063f4:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80063f6:	e053      	b.n	80064a0 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80063f8:	4b35      	ldr	r3, [pc, #212]	@ (80064d0 <HAL_RCC_GetSysClockFreq+0x180>)
 80063fa:	685b      	ldr	r3, [r3, #4]
 80063fc:	099b      	lsrs	r3, r3, #6
 80063fe:	2200      	movs	r2, #0
 8006400:	613b      	str	r3, [r7, #16]
 8006402:	617a      	str	r2, [r7, #20]
 8006404:	693b      	ldr	r3, [r7, #16]
 8006406:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800640a:	f04f 0b00 	mov.w	fp, #0
 800640e:	4652      	mov	r2, sl
 8006410:	465b      	mov	r3, fp
 8006412:	f04f 0000 	mov.w	r0, #0
 8006416:	f04f 0100 	mov.w	r1, #0
 800641a:	0159      	lsls	r1, r3, #5
 800641c:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8006420:	0150      	lsls	r0, r2, #5
 8006422:	4602      	mov	r2, r0
 8006424:	460b      	mov	r3, r1
 8006426:	ebb2 080a 	subs.w	r8, r2, sl
 800642a:	eb63 090b 	sbc.w	r9, r3, fp
 800642e:	f04f 0200 	mov.w	r2, #0
 8006432:	f04f 0300 	mov.w	r3, #0
 8006436:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800643a:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 800643e:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8006442:	ebb2 0408 	subs.w	r4, r2, r8
 8006446:	eb63 0509 	sbc.w	r5, r3, r9
 800644a:	f04f 0200 	mov.w	r2, #0
 800644e:	f04f 0300 	mov.w	r3, #0
 8006452:	00eb      	lsls	r3, r5, #3
 8006454:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006458:	00e2      	lsls	r2, r4, #3
 800645a:	4614      	mov	r4, r2
 800645c:	461d      	mov	r5, r3
 800645e:	eb14 030a 	adds.w	r3, r4, sl
 8006462:	603b      	str	r3, [r7, #0]
 8006464:	eb45 030b 	adc.w	r3, r5, fp
 8006468:	607b      	str	r3, [r7, #4]
 800646a:	f04f 0200 	mov.w	r2, #0
 800646e:	f04f 0300 	mov.w	r3, #0
 8006472:	e9d7 4500 	ldrd	r4, r5, [r7]
 8006476:	4629      	mov	r1, r5
 8006478:	028b      	lsls	r3, r1, #10
 800647a:	4621      	mov	r1, r4
 800647c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8006480:	4621      	mov	r1, r4
 8006482:	028a      	lsls	r2, r1, #10
 8006484:	4610      	mov	r0, r2
 8006486:	4619      	mov	r1, r3
 8006488:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800648a:	2200      	movs	r2, #0
 800648c:	60bb      	str	r3, [r7, #8]
 800648e:	60fa      	str	r2, [r7, #12]
 8006490:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006494:	f7f9 ff0c 	bl	80002b0 <__aeabi_uldivmod>
 8006498:	4602      	mov	r2, r0
 800649a:	460b      	mov	r3, r1
 800649c:	4613      	mov	r3, r2
 800649e:	63fb      	str	r3, [r7, #60]	@ 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 80064a0:	4b0b      	ldr	r3, [pc, #44]	@ (80064d0 <HAL_RCC_GetSysClockFreq+0x180>)
 80064a2:	685b      	ldr	r3, [r3, #4]
 80064a4:	0c1b      	lsrs	r3, r3, #16
 80064a6:	f003 0303 	and.w	r3, r3, #3
 80064aa:	3301      	adds	r3, #1
 80064ac:	005b      	lsls	r3, r3, #1
 80064ae:	633b      	str	r3, [r7, #48]	@ 0x30

      sysclockfreq = pllvco / pllp;
 80064b0:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 80064b2:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80064b4:	fbb2 f3f3 	udiv	r3, r2, r3
 80064b8:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 80064ba:	e002      	b.n	80064c2 <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80064bc:	4b05      	ldr	r3, [pc, #20]	@ (80064d4 <HAL_RCC_GetSysClockFreq+0x184>)
 80064be:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 80064c0:	bf00      	nop
    }
  }
  return sysclockfreq;
 80064c2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
}
 80064c4:	4618      	mov	r0, r3
 80064c6:	3740      	adds	r7, #64	@ 0x40
 80064c8:	46bd      	mov	sp, r7
 80064ca:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80064ce:	bf00      	nop
 80064d0:	40023800 	.word	0x40023800
 80064d4:	00f42400 	.word	0x00f42400
 80064d8:	017d7840 	.word	0x017d7840

080064dc <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80064dc:	b480      	push	{r7}
 80064de:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80064e0:	4b03      	ldr	r3, [pc, #12]	@ (80064f0 <HAL_RCC_GetHCLKFreq+0x14>)
 80064e2:	681b      	ldr	r3, [r3, #0]
}
 80064e4:	4618      	mov	r0, r3
 80064e6:	46bd      	mov	sp, r7
 80064e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80064ec:	4770      	bx	lr
 80064ee:	bf00      	nop
 80064f0:	20000004 	.word	0x20000004

080064f4 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80064f4:	b580      	push	{r7, lr}
 80064f6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80064f8:	f7ff fff0 	bl	80064dc <HAL_RCC_GetHCLKFreq>
 80064fc:	4602      	mov	r2, r0
 80064fe:	4b05      	ldr	r3, [pc, #20]	@ (8006514 <HAL_RCC_GetPCLK1Freq+0x20>)
 8006500:	689b      	ldr	r3, [r3, #8]
 8006502:	0a9b      	lsrs	r3, r3, #10
 8006504:	f003 0307 	and.w	r3, r3, #7
 8006508:	4903      	ldr	r1, [pc, #12]	@ (8006518 <HAL_RCC_GetPCLK1Freq+0x24>)
 800650a:	5ccb      	ldrb	r3, [r1, r3]
 800650c:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006510:	4618      	mov	r0, r3
 8006512:	bd80      	pop	{r7, pc}
 8006514:	40023800 	.word	0x40023800
 8006518:	08022564 	.word	0x08022564

0800651c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800651c:	b580      	push	{r7, lr}
 800651e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8006520:	f7ff ffdc 	bl	80064dc <HAL_RCC_GetHCLKFreq>
 8006524:	4602      	mov	r2, r0
 8006526:	4b05      	ldr	r3, [pc, #20]	@ (800653c <HAL_RCC_GetPCLK2Freq+0x20>)
 8006528:	689b      	ldr	r3, [r3, #8]
 800652a:	0b5b      	lsrs	r3, r3, #13
 800652c:	f003 0307 	and.w	r3, r3, #7
 8006530:	4903      	ldr	r1, [pc, #12]	@ (8006540 <HAL_RCC_GetPCLK2Freq+0x24>)
 8006532:	5ccb      	ldrb	r3, [r1, r3]
 8006534:	fa22 f303 	lsr.w	r3, r2, r3
}
 8006538:	4618      	mov	r0, r3
 800653a:	bd80      	pop	{r7, pc}
 800653c:	40023800 	.word	0x40023800
 8006540:	08022564 	.word	0x08022564

08006544 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8006544:	b580      	push	{r7, lr}
 8006546:	b088      	sub	sp, #32
 8006548:	af00      	add	r7, sp, #0
 800654a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 800654c:	2300      	movs	r3, #0
 800654e:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 8006550:	2300      	movs	r3, #0
 8006552:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 8006554:	2300      	movs	r3, #0
 8006556:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 8006558:	2300      	movs	r3, #0
 800655a:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 800655c:	2300      	movs	r3, #0
 800655e:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	f003 0301 	and.w	r3, r3, #1
 8006568:	2b00      	cmp	r3, #0
 800656a:	d012      	beq.n	8006592 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 800656c:	4b69      	ldr	r3, [pc, #420]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800656e:	689b      	ldr	r3, [r3, #8]
 8006570:	4a68      	ldr	r2, [pc, #416]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8006572:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8006576:	6093      	str	r3, [r2, #8]
 8006578:	4b66      	ldr	r3, [pc, #408]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800657a:	689a      	ldr	r2, [r3, #8]
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006580:	4964      	ldr	r1, [pc, #400]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8006582:	4313      	orrs	r3, r2
 8006584:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 8006586:	687b      	ldr	r3, [r7, #4]
 8006588:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800658a:	2b00      	cmp	r3, #0
 800658c:	d101      	bne.n	8006592 <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 800658e:	2301      	movs	r3, #1
 8006590:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 8006592:	687b      	ldr	r3, [r7, #4]
 8006594:	681b      	ldr	r3, [r3, #0]
 8006596:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800659a:	2b00      	cmp	r3, #0
 800659c:	d017      	beq.n	80065ce <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 800659e:	4b5d      	ldr	r3, [pc, #372]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80065a0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80065a4:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80065ac:	4959      	ldr	r1, [pc, #356]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80065ae:	4313      	orrs	r3, r2
 80065b0:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80065b8:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80065bc:	d101      	bne.n	80065c2 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 80065be:	2301      	movs	r3, #1
 80065c0:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 80065c2:	687b      	ldr	r3, [r7, #4]
 80065c4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80065c6:	2b00      	cmp	r3, #0
 80065c8:	d101      	bne.n	80065ce <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 80065ca:	2301      	movs	r3, #1
 80065cc:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	681b      	ldr	r3, [r3, #0]
 80065d2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80065d6:	2b00      	cmp	r3, #0
 80065d8:	d017      	beq.n	800660a <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 80065da:	4b4e      	ldr	r3, [pc, #312]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80065dc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80065e0:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80065e8:	494a      	ldr	r1, [pc, #296]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80065ea:	4313      	orrs	r3, r2
 80065ec:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80065f4:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80065f8:	d101      	bne.n	80065fe <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 80065fa:	2301      	movs	r3, #1
 80065fc:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006602:	2b00      	cmp	r3, #0
 8006604:	d101      	bne.n	800660a <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8006606:	2301      	movs	r3, #1
 8006608:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 800660a:	687b      	ldr	r3, [r7, #4]
 800660c:	681b      	ldr	r3, [r3, #0]
 800660e:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8006612:	2b00      	cmp	r3, #0
 8006614:	d001      	beq.n	800661a <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8006616:	2301      	movs	r3, #1
 8006618:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	681b      	ldr	r3, [r3, #0]
 800661e:	f003 0320 	and.w	r3, r3, #32
 8006622:	2b00      	cmp	r3, #0
 8006624:	f000 808b 	beq.w	800673e <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8006628:	4b3a      	ldr	r3, [pc, #232]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800662a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800662c:	4a39      	ldr	r2, [pc, #228]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800662e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006632:	6413      	str	r3, [r2, #64]	@ 0x40
 8006634:	4b37      	ldr	r3, [pc, #220]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8006636:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006638:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800663c:	60bb      	str	r3, [r7, #8]
 800663e:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8006640:	4b35      	ldr	r3, [pc, #212]	@ (8006718 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	4a34      	ldr	r2, [pc, #208]	@ (8006718 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8006646:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800664a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800664c:	f7fd fe78 	bl	8004340 <HAL_GetTick>
 8006650:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8006652:	e008      	b.n	8006666 <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006654:	f7fd fe74 	bl	8004340 <HAL_GetTick>
 8006658:	4602      	mov	r2, r0
 800665a:	697b      	ldr	r3, [r7, #20]
 800665c:	1ad3      	subs	r3, r2, r3
 800665e:	2b64      	cmp	r3, #100	@ 0x64
 8006660:	d901      	bls.n	8006666 <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 8006662:	2303      	movs	r3, #3
 8006664:	e357      	b.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8006666:	4b2c      	ldr	r3, [pc, #176]	@ (8006718 <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8006668:	681b      	ldr	r3, [r3, #0]
 800666a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800666e:	2b00      	cmp	r3, #0
 8006670:	d0f0      	beq.n	8006654 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8006672:	4b28      	ldr	r3, [pc, #160]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8006674:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006676:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800667a:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800667c:	693b      	ldr	r3, [r7, #16]
 800667e:	2b00      	cmp	r3, #0
 8006680:	d035      	beq.n	80066ee <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8006682:	687b      	ldr	r3, [r7, #4]
 8006684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006686:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800668a:	693a      	ldr	r2, [r7, #16]
 800668c:	429a      	cmp	r2, r3
 800668e:	d02e      	beq.n	80066ee <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8006690:	4b20      	ldr	r3, [pc, #128]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8006692:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006694:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006698:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 800669a:	4b1e      	ldr	r3, [pc, #120]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800669c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800669e:	4a1d      	ldr	r2, [pc, #116]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066a0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80066a4:	6713      	str	r3, [r2, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 80066a6:	4b1b      	ldr	r3, [pc, #108]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066a8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80066aa:	4a1a      	ldr	r2, [pc, #104]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066ac:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80066b0:	6713      	str	r3, [r2, #112]	@ 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 80066b2:	4a18      	ldr	r2, [pc, #96]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066b4:	693b      	ldr	r3, [r7, #16]
 80066b6:	6713      	str	r3, [r2, #112]	@ 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 80066b8:	4b16      	ldr	r3, [pc, #88]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066ba:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80066bc:	f003 0301 	and.w	r3, r3, #1
 80066c0:	2b01      	cmp	r3, #1
 80066c2:	d114      	bne.n	80066ee <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80066c4:	f7fd fe3c 	bl	8004340 <HAL_GetTick>
 80066c8:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80066ca:	e00a      	b.n	80066e2 <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80066cc:	f7fd fe38 	bl	8004340 <HAL_GetTick>
 80066d0:	4602      	mov	r2, r0
 80066d2:	697b      	ldr	r3, [r7, #20]
 80066d4:	1ad3      	subs	r3, r2, r3
 80066d6:	f241 3288 	movw	r2, #5000	@ 0x1388
 80066da:	4293      	cmp	r3, r2
 80066dc:	d901      	bls.n	80066e2 <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 80066de:	2303      	movs	r3, #3
 80066e0:	e319      	b.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80066e2:	4b0c      	ldr	r3, [pc, #48]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066e4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80066e6:	f003 0302 	and.w	r3, r3, #2
 80066ea:	2b00      	cmp	r3, #0
 80066ec:	d0ee      	beq.n	80066cc <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066f2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80066f6:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80066fa:	d111      	bne.n	8006720 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 80066fc:	4b05      	ldr	r3, [pc, #20]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80066fe:	689b      	ldr	r3, [r3, #8]
 8006700:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8006708:	4b04      	ldr	r3, [pc, #16]	@ (800671c <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 800670a:	400b      	ands	r3, r1
 800670c:	4901      	ldr	r1, [pc, #4]	@ (8006714 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 800670e:	4313      	orrs	r3, r2
 8006710:	608b      	str	r3, [r1, #8]
 8006712:	e00b      	b.n	800672c <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8006714:	40023800 	.word	0x40023800
 8006718:	40007000 	.word	0x40007000
 800671c:	0ffffcff 	.word	0x0ffffcff
 8006720:	4baa      	ldr	r3, [pc, #680]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006722:	689b      	ldr	r3, [r3, #8]
 8006724:	4aa9      	ldr	r2, [pc, #676]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006726:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 800672a:	6093      	str	r3, [r2, #8]
 800672c:	4ba7      	ldr	r3, [pc, #668]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800672e:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006734:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006738:	49a4      	ldr	r1, [pc, #656]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800673a:	4313      	orrs	r3, r2
 800673c:	670b      	str	r3, [r1, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800673e:	687b      	ldr	r3, [r7, #4]
 8006740:	681b      	ldr	r3, [r3, #0]
 8006742:	f003 0310 	and.w	r3, r3, #16
 8006746:	2b00      	cmp	r3, #0
 8006748:	d010      	beq.n	800676c <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800674a:	4ba0      	ldr	r3, [pc, #640]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800674c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006750:	4a9e      	ldr	r2, [pc, #632]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006752:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006756:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 800675a:	4b9c      	ldr	r3, [pc, #624]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800675c:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006764:	4999      	ldr	r1, [pc, #612]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006766:	4313      	orrs	r3, r2
 8006768:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	681b      	ldr	r3, [r3, #0]
 8006770:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8006774:	2b00      	cmp	r3, #0
 8006776:	d00a      	beq.n	800678e <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8006778:	4b94      	ldr	r3, [pc, #592]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800677a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800677e:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8006782:	687b      	ldr	r3, [r7, #4]
 8006784:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8006786:	4991      	ldr	r1, [pc, #580]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006788:	4313      	orrs	r3, r2
 800678a:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	681b      	ldr	r3, [r3, #0]
 8006792:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8006796:	2b00      	cmp	r3, #0
 8006798:	d00a      	beq.n	80067b0 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 800679a:	4b8c      	ldr	r3, [pc, #560]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800679c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80067a0:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 80067a8:	4988      	ldr	r1, [pc, #544]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80067aa:	4313      	orrs	r3, r2
 80067ac:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80067b8:	2b00      	cmp	r3, #0
 80067ba:	d00a      	beq.n	80067d2 <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 80067bc:	4b83      	ldr	r3, [pc, #524]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80067be:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80067c2:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80067ca:	4980      	ldr	r1, [pc, #512]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80067cc:	4313      	orrs	r3, r2
 80067ce:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 80067d2:	687b      	ldr	r3, [r7, #4]
 80067d4:	681b      	ldr	r3, [r3, #0]
 80067d6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80067da:	2b00      	cmp	r3, #0
 80067dc:	d00a      	beq.n	80067f4 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 80067de:	4b7b      	ldr	r3, [pc, #492]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80067e0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80067e4:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 80067e8:	687b      	ldr	r3, [r7, #4]
 80067ea:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80067ec:	4977      	ldr	r1, [pc, #476]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80067ee:	4313      	orrs	r3, r2
 80067f0:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	681b      	ldr	r3, [r3, #0]
 80067f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80067fc:	2b00      	cmp	r3, #0
 80067fe:	d00a      	beq.n	8006816 <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8006800:	4b72      	ldr	r3, [pc, #456]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006802:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006806:	f023 0203 	bic.w	r2, r3, #3
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800680e:	496f      	ldr	r1, [pc, #444]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006810:	4313      	orrs	r3, r2
 8006812:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800681e:	2b00      	cmp	r3, #0
 8006820:	d00a      	beq.n	8006838 <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8006822:	4b6a      	ldr	r3, [pc, #424]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006824:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006828:	f023 020c 	bic.w	r2, r3, #12
 800682c:	687b      	ldr	r3, [r7, #4]
 800682e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006830:	4966      	ldr	r1, [pc, #408]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006832:	4313      	orrs	r3, r2
 8006834:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681b      	ldr	r3, [r3, #0]
 800683c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006840:	2b00      	cmp	r3, #0
 8006842:	d00a      	beq.n	800685a <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8006844:	4b61      	ldr	r3, [pc, #388]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006846:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800684a:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006852:	495e      	ldr	r1, [pc, #376]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006854:	4313      	orrs	r3, r2
 8006856:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 800685a:	687b      	ldr	r3, [r7, #4]
 800685c:	681b      	ldr	r3, [r3, #0]
 800685e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006862:	2b00      	cmp	r3, #0
 8006864:	d00a      	beq.n	800687c <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8006866:	4b59      	ldr	r3, [pc, #356]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006868:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800686c:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006874:	4955      	ldr	r1, [pc, #340]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006876:	4313      	orrs	r3, r2
 8006878:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 800687c:	687b      	ldr	r3, [r7, #4]
 800687e:	681b      	ldr	r3, [r3, #0]
 8006880:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8006884:	2b00      	cmp	r3, #0
 8006886:	d00a      	beq.n	800689e <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8006888:	4b50      	ldr	r3, [pc, #320]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 800688a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800688e:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006892:	687b      	ldr	r3, [r7, #4]
 8006894:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006896:	494d      	ldr	r1, [pc, #308]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006898:	4313      	orrs	r3, r2
 800689a:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80068a6:	2b00      	cmp	r3, #0
 80068a8:	d00a      	beq.n	80068c0 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 80068aa:	4b48      	ldr	r3, [pc, #288]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80068ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80068b0:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80068b4:	687b      	ldr	r3, [r7, #4]
 80068b6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80068b8:	4944      	ldr	r1, [pc, #272]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80068ba:	4313      	orrs	r3, r2
 80068bc:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80068c8:	2b00      	cmp	r3, #0
 80068ca:	d00a      	beq.n	80068e2 <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 80068cc:	4b3f      	ldr	r3, [pc, #252]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80068ce:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80068d2:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 80068d6:	687b      	ldr	r3, [r7, #4]
 80068d8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80068da:	493c      	ldr	r1, [pc, #240]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80068dc:	4313      	orrs	r3, r2
 80068de:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 80068e2:	687b      	ldr	r3, [r7, #4]
 80068e4:	681b      	ldr	r3, [r3, #0]
 80068e6:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80068ea:	2b00      	cmp	r3, #0
 80068ec:	d00a      	beq.n	8006904 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 80068ee:	4b37      	ldr	r3, [pc, #220]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80068f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80068f4:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 80068f8:	687b      	ldr	r3, [r7, #4]
 80068fa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80068fc:	4933      	ldr	r1, [pc, #204]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80068fe:	4313      	orrs	r3, r2
 8006900:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	681b      	ldr	r3, [r3, #0]
 8006908:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800690c:	2b00      	cmp	r3, #0
 800690e:	d00a      	beq.n	8006926 <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8006910:	4b2e      	ldr	r3, [pc, #184]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006912:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006916:	f023 6280 	bic.w	r2, r3, #67108864	@ 0x4000000
 800691a:	687b      	ldr	r3, [r7, #4]
 800691c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800691e:	492b      	ldr	r1, [pc, #172]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006920:	4313      	orrs	r3, r2
 8006922:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8006926:	687b      	ldr	r3, [r7, #4]
 8006928:	681b      	ldr	r3, [r3, #0]
 800692a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800692e:	2b00      	cmp	r3, #0
 8006930:	d011      	beq.n	8006956 <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8006932:	4b26      	ldr	r3, [pc, #152]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006934:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006938:	f023 6200 	bic.w	r2, r3, #134217728	@ 0x8000000
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006940:	4922      	ldr	r1, [pc, #136]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006942:	4313      	orrs	r3, r2
 8006944:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8006948:	687b      	ldr	r3, [r7, #4]
 800694a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800694c:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006950:	d101      	bne.n	8006956 <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 8006952:	2301      	movs	r3, #1
 8006954:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	681b      	ldr	r3, [r3, #0]
 800695a:	f003 0308 	and.w	r3, r3, #8
 800695e:	2b00      	cmp	r3, #0
 8006960:	d001      	beq.n	8006966 <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 8006962:	2301      	movs	r3, #1
 8006964:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8006966:	687b      	ldr	r3, [r7, #4]
 8006968:	681b      	ldr	r3, [r3, #0]
 800696a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800696e:	2b00      	cmp	r3, #0
 8006970:	d00a      	beq.n	8006988 <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8006972:	4b16      	ldr	r3, [pc, #88]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006974:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006978:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 800697c:	687b      	ldr	r3, [r7, #4]
 800697e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006980:	4912      	ldr	r1, [pc, #72]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006982:	4313      	orrs	r3, r2
 8006984:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8006988:	687b      	ldr	r3, [r7, #4]
 800698a:	681b      	ldr	r3, [r3, #0]
 800698c:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8006990:	2b00      	cmp	r3, #0
 8006992:	d00b      	beq.n	80069ac <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8006994:	4b0d      	ldr	r3, [pc, #52]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8006996:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800699a:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 800699e:	687b      	ldr	r3, [r7, #4]
 80069a0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80069a4:	4909      	ldr	r1, [pc, #36]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80069a6:	4313      	orrs	r3, r2
 80069a8:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 80069ac:	69fb      	ldr	r3, [r7, #28]
 80069ae:	2b01      	cmp	r3, #1
 80069b0:	d006      	beq.n	80069c0 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	681b      	ldr	r3, [r3, #0]
 80069b6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80069ba:	2b00      	cmp	r3, #0
 80069bc:	f000 80d9 	beq.w	8006b72 <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 80069c0:	4b02      	ldr	r3, [pc, #8]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	4a01      	ldr	r2, [pc, #4]	@ (80069cc <HAL_RCCEx_PeriphCLKConfig+0x488>)
 80069c6:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 80069ca:	e001      	b.n	80069d0 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 80069cc:	40023800 	.word	0x40023800
 80069d0:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80069d2:	f7fd fcb5 	bl	8004340 <HAL_GetTick>
 80069d6:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80069d8:	e008      	b.n	80069ec <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 80069da:	f7fd fcb1 	bl	8004340 <HAL_GetTick>
 80069de:	4602      	mov	r2, r0
 80069e0:	697b      	ldr	r3, [r7, #20]
 80069e2:	1ad3      	subs	r3, r2, r3
 80069e4:	2b64      	cmp	r3, #100	@ 0x64
 80069e6:	d901      	bls.n	80069ec <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80069e8:	2303      	movs	r3, #3
 80069ea:	e194      	b.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80069ec:	4b6c      	ldr	r3, [pc, #432]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 80069f4:	2b00      	cmp	r3, #0
 80069f6:	d1f0      	bne.n	80069da <HAL_RCCEx_PeriphCLKConfig+0x496>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	f003 0301 	and.w	r3, r3, #1
 8006a00:	2b00      	cmp	r3, #0
 8006a02:	d021      	beq.n	8006a48 <HAL_RCCEx_PeriphCLKConfig+0x504>
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d11d      	bne.n	8006a48 <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006a0c:	4b64      	ldr	r3, [pc, #400]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006a0e:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006a12:	0c1b      	lsrs	r3, r3, #16
 8006a14:	f003 0303 	and.w	r3, r3, #3
 8006a18:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006a1a:	4b61      	ldr	r3, [pc, #388]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006a1c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006a20:	0e1b      	lsrs	r3, r3, #24
 8006a22:	f003 030f 	and.w	r3, r3, #15
 8006a26:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8006a28:	687b      	ldr	r3, [r7, #4]
 8006a2a:	685b      	ldr	r3, [r3, #4]
 8006a2c:	019a      	lsls	r2, r3, #6
 8006a2e:	693b      	ldr	r3, [r7, #16]
 8006a30:	041b      	lsls	r3, r3, #16
 8006a32:	431a      	orrs	r2, r3
 8006a34:	68fb      	ldr	r3, [r7, #12]
 8006a36:	061b      	lsls	r3, r3, #24
 8006a38:	431a      	orrs	r2, r3
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	689b      	ldr	r3, [r3, #8]
 8006a3e:	071b      	lsls	r3, r3, #28
 8006a40:	4957      	ldr	r1, [pc, #348]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006a42:	4313      	orrs	r3, r2
 8006a44:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8006a50:	2b00      	cmp	r3, #0
 8006a52:	d004      	beq.n	8006a5e <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006a58:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8006a5c:	d00a      	beq.n	8006a74 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	681b      	ldr	r3, [r3, #0]
 8006a62:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	d02e      	beq.n	8006ac8 <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8006a6a:	687b      	ldr	r3, [r7, #4]
 8006a6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a6e:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8006a72:	d129      	bne.n	8006ac8 <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8006a74:	4b4a      	ldr	r3, [pc, #296]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006a76:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006a7a:	0c1b      	lsrs	r3, r3, #16
 8006a7c:	f003 0303 	and.w	r3, r3, #3
 8006a80:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006a82:	4b47      	ldr	r3, [pc, #284]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006a84:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006a88:	0f1b      	lsrs	r3, r3, #28
 8006a8a:	f003 0307 	and.w	r3, r3, #7
 8006a8e:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8006a90:	687b      	ldr	r3, [r7, #4]
 8006a92:	685b      	ldr	r3, [r3, #4]
 8006a94:	019a      	lsls	r2, r3, #6
 8006a96:	693b      	ldr	r3, [r7, #16]
 8006a98:	041b      	lsls	r3, r3, #16
 8006a9a:	431a      	orrs	r2, r3
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	68db      	ldr	r3, [r3, #12]
 8006aa0:	061b      	lsls	r3, r3, #24
 8006aa2:	431a      	orrs	r2, r3
 8006aa4:	68fb      	ldr	r3, [r7, #12]
 8006aa6:	071b      	lsls	r3, r3, #28
 8006aa8:	493d      	ldr	r1, [pc, #244]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006aaa:	4313      	orrs	r3, r2
 8006aac:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8006ab0:	4b3b      	ldr	r3, [pc, #236]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006ab2:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006ab6:	f023 021f 	bic.w	r2, r3, #31
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006abe:	3b01      	subs	r3, #1
 8006ac0:	4937      	ldr	r1, [pc, #220]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006ac2:	4313      	orrs	r3, r2
 8006ac4:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8006ac8:	687b      	ldr	r3, [r7, #4]
 8006aca:	681b      	ldr	r3, [r3, #0]
 8006acc:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8006ad0:	2b00      	cmp	r3, #0
 8006ad2:	d01d      	beq.n	8006b10 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8006ad4:	4b32      	ldr	r3, [pc, #200]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006ad6:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006ada:	0e1b      	lsrs	r3, r3, #24
 8006adc:	f003 030f 	and.w	r3, r3, #15
 8006ae0:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8006ae2:	4b2f      	ldr	r3, [pc, #188]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006ae4:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006ae8:	0f1b      	lsrs	r3, r3, #28
 8006aea:	f003 0307 	and.w	r3, r3, #7
 8006aee:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	685b      	ldr	r3, [r3, #4]
 8006af4:	019a      	lsls	r2, r3, #6
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	691b      	ldr	r3, [r3, #16]
 8006afa:	041b      	lsls	r3, r3, #16
 8006afc:	431a      	orrs	r2, r3
 8006afe:	693b      	ldr	r3, [r7, #16]
 8006b00:	061b      	lsls	r3, r3, #24
 8006b02:	431a      	orrs	r2, r3
 8006b04:	68fb      	ldr	r3, [r7, #12]
 8006b06:	071b      	lsls	r3, r3, #28
 8006b08:	4925      	ldr	r1, [pc, #148]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b0a:	4313      	orrs	r3, r2
 8006b0c:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006b18:	2b00      	cmp	r3, #0
 8006b1a:	d011      	beq.n	8006b40 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8006b1c:	687b      	ldr	r3, [r7, #4]
 8006b1e:	685b      	ldr	r3, [r3, #4]
 8006b20:	019a      	lsls	r2, r3, #6
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	691b      	ldr	r3, [r3, #16]
 8006b26:	041b      	lsls	r3, r3, #16
 8006b28:	431a      	orrs	r2, r3
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	68db      	ldr	r3, [r3, #12]
 8006b2e:	061b      	lsls	r3, r3, #24
 8006b30:	431a      	orrs	r2, r3
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	689b      	ldr	r3, [r3, #8]
 8006b36:	071b      	lsls	r3, r3, #28
 8006b38:	4919      	ldr	r1, [pc, #100]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b3a:	4313      	orrs	r3, r2
 8006b3c:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8006b40:	4b17      	ldr	r3, [pc, #92]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	4a16      	ldr	r2, [pc, #88]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b46:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8006b4a:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006b4c:	f7fd fbf8 	bl	8004340 <HAL_GetTick>
 8006b50:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006b52:	e008      	b.n	8006b66 <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8006b54:	f7fd fbf4 	bl	8004340 <HAL_GetTick>
 8006b58:	4602      	mov	r2, r0
 8006b5a:	697b      	ldr	r3, [r7, #20]
 8006b5c:	1ad3      	subs	r3, r2, r3
 8006b5e:	2b64      	cmp	r3, #100	@ 0x64
 8006b60:	d901      	bls.n	8006b66 <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006b62:	2303      	movs	r3, #3
 8006b64:	e0d7      	b.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8006b66:	4b0e      	ldr	r3, [pc, #56]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b68:	681b      	ldr	r3, [r3, #0]
 8006b6a:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8006b6e:	2b00      	cmp	r3, #0
 8006b70:	d0f0      	beq.n	8006b54 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8006b72:	69bb      	ldr	r3, [r7, #24]
 8006b74:	2b01      	cmp	r3, #1
 8006b76:	f040 80cd 	bne.w	8006d14 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8006b7a:	4b09      	ldr	r3, [pc, #36]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b7c:	681b      	ldr	r3, [r3, #0]
 8006b7e:	4a08      	ldr	r2, [pc, #32]	@ (8006ba0 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8006b80:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8006b84:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006b86:	f7fd fbdb 	bl	8004340 <HAL_GetTick>
 8006b8a:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006b8c:	e00a      	b.n	8006ba4 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006b8e:	f7fd fbd7 	bl	8004340 <HAL_GetTick>
 8006b92:	4602      	mov	r2, r0
 8006b94:	697b      	ldr	r3, [r7, #20]
 8006b96:	1ad3      	subs	r3, r2, r3
 8006b98:	2b64      	cmp	r3, #100	@ 0x64
 8006b9a:	d903      	bls.n	8006ba4 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006b9c:	2303      	movs	r3, #3
 8006b9e:	e0ba      	b.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8006ba0:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8006ba4:	4b5e      	ldr	r3, [pc, #376]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006bac:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006bb0:	d0ed      	beq.n	8006b8e <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8006bb2:	687b      	ldr	r3, [r7, #4]
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d003      	beq.n	8006bc6 <HAL_RCCEx_PeriphCLKConfig+0x682>
 8006bbe:	687b      	ldr	r3, [r7, #4]
 8006bc0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006bc2:	2b00      	cmp	r3, #0
 8006bc4:	d009      	beq.n	8006bda <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8006bce:	2b00      	cmp	r3, #0
 8006bd0:	d02e      	beq.n	8006c30 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8006bd2:	687b      	ldr	r3, [r7, #4]
 8006bd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	d12a      	bne.n	8006c30 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006bda:	4b51      	ldr	r3, [pc, #324]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006bdc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006be0:	0c1b      	lsrs	r3, r3, #16
 8006be2:	f003 0303 	and.w	r3, r3, #3
 8006be6:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006be8:	4b4d      	ldr	r3, [pc, #308]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006bea:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006bee:	0f1b      	lsrs	r3, r3, #28
 8006bf0:	f003 0307 	and.w	r3, r3, #7
 8006bf4:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8006bf6:	687b      	ldr	r3, [r7, #4]
 8006bf8:	695b      	ldr	r3, [r3, #20]
 8006bfa:	019a      	lsls	r2, r3, #6
 8006bfc:	693b      	ldr	r3, [r7, #16]
 8006bfe:	041b      	lsls	r3, r3, #16
 8006c00:	431a      	orrs	r2, r3
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	699b      	ldr	r3, [r3, #24]
 8006c06:	061b      	lsls	r3, r3, #24
 8006c08:	431a      	orrs	r2, r3
 8006c0a:	68fb      	ldr	r3, [r7, #12]
 8006c0c:	071b      	lsls	r3, r3, #28
 8006c0e:	4944      	ldr	r1, [pc, #272]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c10:	4313      	orrs	r3, r2
 8006c12:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8006c16:	4b42      	ldr	r3, [pc, #264]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c18:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006c1c:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c24:	3b01      	subs	r3, #1
 8006c26:	021b      	lsls	r3, r3, #8
 8006c28:	493d      	ldr	r1, [pc, #244]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c2a:	4313      	orrs	r3, r2
 8006c2c:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8006c38:	2b00      	cmp	r3, #0
 8006c3a:	d022      	beq.n	8006c82 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006c40:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8006c44:	d11d      	bne.n	8006c82 <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006c46:	4b36      	ldr	r3, [pc, #216]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c48:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006c4c:	0e1b      	lsrs	r3, r3, #24
 8006c4e:	f003 030f 	and.w	r3, r3, #15
 8006c52:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8006c54:	4b32      	ldr	r3, [pc, #200]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c56:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006c5a:	0f1b      	lsrs	r3, r3, #28
 8006c5c:	f003 0307 	and.w	r3, r3, #7
 8006c60:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 8006c62:	687b      	ldr	r3, [r7, #4]
 8006c64:	695b      	ldr	r3, [r3, #20]
 8006c66:	019a      	lsls	r2, r3, #6
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	6a1b      	ldr	r3, [r3, #32]
 8006c6c:	041b      	lsls	r3, r3, #16
 8006c6e:	431a      	orrs	r2, r3
 8006c70:	693b      	ldr	r3, [r7, #16]
 8006c72:	061b      	lsls	r3, r3, #24
 8006c74:	431a      	orrs	r2, r3
 8006c76:	68fb      	ldr	r3, [r7, #12]
 8006c78:	071b      	lsls	r3, r3, #28
 8006c7a:	4929      	ldr	r1, [pc, #164]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c7c:	4313      	orrs	r3, r2
 8006c7e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8006c82:	687b      	ldr	r3, [r7, #4]
 8006c84:	681b      	ldr	r3, [r3, #0]
 8006c86:	f003 0308 	and.w	r3, r3, #8
 8006c8a:	2b00      	cmp	r3, #0
 8006c8c:	d028      	beq.n	8006ce0 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8006c8e:	4b24      	ldr	r3, [pc, #144]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c90:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006c94:	0e1b      	lsrs	r3, r3, #24
 8006c96:	f003 030f 	and.w	r3, r3, #15
 8006c9a:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8006c9c:	4b20      	ldr	r3, [pc, #128]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006c9e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006ca2:	0c1b      	lsrs	r3, r3, #16
 8006ca4:	f003 0303 	and.w	r3, r3, #3
 8006ca8:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	695b      	ldr	r3, [r3, #20]
 8006cae:	019a      	lsls	r2, r3, #6
 8006cb0:	68fb      	ldr	r3, [r7, #12]
 8006cb2:	041b      	lsls	r3, r3, #16
 8006cb4:	431a      	orrs	r2, r3
 8006cb6:	693b      	ldr	r3, [r7, #16]
 8006cb8:	061b      	lsls	r3, r3, #24
 8006cba:	431a      	orrs	r2, r3
 8006cbc:	687b      	ldr	r3, [r7, #4]
 8006cbe:	69db      	ldr	r3, [r3, #28]
 8006cc0:	071b      	lsls	r3, r3, #28
 8006cc2:	4917      	ldr	r1, [pc, #92]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006cc4:	4313      	orrs	r3, r2
 8006cc6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8006cca:	4b15      	ldr	r3, [pc, #84]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006ccc:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8006cd0:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8006cd4:	687b      	ldr	r3, [r7, #4]
 8006cd6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006cd8:	4911      	ldr	r1, [pc, #68]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006cda:	4313      	orrs	r3, r2
 8006cdc:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8006ce0:	4b0f      	ldr	r3, [pc, #60]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006ce2:	681b      	ldr	r3, [r3, #0]
 8006ce4:	4a0e      	ldr	r2, [pc, #56]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006ce6:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006cea:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8006cec:	f7fd fb28 	bl	8004340 <HAL_GetTick>
 8006cf0:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006cf2:	e008      	b.n	8006d06 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8006cf4:	f7fd fb24 	bl	8004340 <HAL_GetTick>
 8006cf8:	4602      	mov	r2, r0
 8006cfa:	697b      	ldr	r3, [r7, #20]
 8006cfc:	1ad3      	subs	r3, r2, r3
 8006cfe:	2b64      	cmp	r3, #100	@ 0x64
 8006d00:	d901      	bls.n	8006d06 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8006d02:	2303      	movs	r3, #3
 8006d04:	e007      	b.n	8006d16 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8006d06:	4b06      	ldr	r3, [pc, #24]	@ (8006d20 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8006d0e:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006d12:	d1ef      	bne.n	8006cf4 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8006d14:	2300      	movs	r3, #0
}
 8006d16:	4618      	mov	r0, r3
 8006d18:	3720      	adds	r7, #32
 8006d1a:	46bd      	mov	sp, r7
 8006d1c:	bd80      	pop	{r7, pc}
 8006d1e:	bf00      	nop
 8006d20:	40023800 	.word	0x40023800

08006d24 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8006d24:	b580      	push	{r7, lr}
 8006d26:	b082      	sub	sp, #8
 8006d28:	af00      	add	r7, sp, #0
 8006d2a:	6078      	str	r0, [r7, #4]
 8006d2c:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8006d2e:	687b      	ldr	r3, [r7, #4]
 8006d30:	2b00      	cmp	r3, #0
 8006d32:	d101      	bne.n	8006d38 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8006d34:	2301      	movs	r3, #1
 8006d36:	e025      	b.n	8006d84 <HAL_SDRAM_Init+0x60>
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8006d38:	687b      	ldr	r3, [r7, #4]
 8006d3a:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8006d3e:	b2db      	uxtb	r3, r3
 8006d40:	2b00      	cmp	r3, #0
 8006d42:	d106      	bne.n	8006d52 <HAL_SDRAM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006d44:	687b      	ldr	r3, [r7, #4]
 8006d46:	2200      	movs	r2, #0
 8006d48:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8006d4c:	6878      	ldr	r0, [r7, #4]
 8006d4e:	f7f9 fdfd 	bl	800094c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006d52:	687b      	ldr	r3, [r7, #4]
 8006d54:	2202      	movs	r2, #2
 8006d56:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	681a      	ldr	r2, [r3, #0]
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	3304      	adds	r3, #4
 8006d62:	4619      	mov	r1, r3
 8006d64:	4610      	mov	r0, r2
 8006d66:	f002 fda5 	bl	80098b4 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	6818      	ldr	r0, [r3, #0]
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	685b      	ldr	r3, [r3, #4]
 8006d72:	461a      	mov	r2, r3
 8006d74:	6839      	ldr	r1, [r7, #0]
 8006d76:	f002 fdf9 	bl	800996c <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	2201      	movs	r2, #1
 8006d7e:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

  return HAL_OK;
 8006d82:	2300      	movs	r3, #0
}
 8006d84:	4618      	mov	r0, r3
 8006d86:	3708      	adds	r7, #8
 8006d88:	46bd      	mov	sp, r7
 8006d8a:	bd80      	pop	{r7, pc}

08006d8c <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8006d8c:	b580      	push	{r7, lr}
 8006d8e:	b086      	sub	sp, #24
 8006d90:	af00      	add	r7, sp, #0
 8006d92:	60f8      	str	r0, [r7, #12]
 8006d94:	60b9      	str	r1, [r7, #8]
 8006d96:	607a      	str	r2, [r7, #4]
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8006d98:	68fb      	ldr	r3, [r7, #12]
 8006d9a:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8006d9e:	75fb      	strb	r3, [r7, #23]

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8006da0:	7dfb      	ldrb	r3, [r7, #23]
 8006da2:	2b02      	cmp	r3, #2
 8006da4:	d101      	bne.n	8006daa <HAL_SDRAM_SendCommand+0x1e>
  {
    return HAL_BUSY;
 8006da6:	2302      	movs	r3, #2
 8006da8:	e021      	b.n	8006dee <HAL_SDRAM_SendCommand+0x62>
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8006daa:	7dfb      	ldrb	r3, [r7, #23]
 8006dac:	2b01      	cmp	r3, #1
 8006dae:	d002      	beq.n	8006db6 <HAL_SDRAM_SendCommand+0x2a>
 8006db0:	7dfb      	ldrb	r3, [r7, #23]
 8006db2:	2b05      	cmp	r3, #5
 8006db4:	d118      	bne.n	8006de8 <HAL_SDRAM_SendCommand+0x5c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006db6:	68fb      	ldr	r3, [r7, #12]
 8006db8:	2202      	movs	r2, #2
 8006dba:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8006dbe:	68fb      	ldr	r3, [r7, #12]
 8006dc0:	681b      	ldr	r3, [r3, #0]
 8006dc2:	687a      	ldr	r2, [r7, #4]
 8006dc4:	68b9      	ldr	r1, [r7, #8]
 8006dc6:	4618      	mov	r0, r3
 8006dc8:	f002 fe3a 	bl	8009a40 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006dcc:	68bb      	ldr	r3, [r7, #8]
 8006dce:	681b      	ldr	r3, [r3, #0]
 8006dd0:	2b02      	cmp	r3, #2
 8006dd2:	d104      	bne.n	8006dde <HAL_SDRAM_SendCommand+0x52>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8006dd4:	68fb      	ldr	r3, [r7, #12]
 8006dd6:	2205      	movs	r2, #5
 8006dd8:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006ddc:	e006      	b.n	8006dec <HAL_SDRAM_SendCommand+0x60>
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8006dde:	68fb      	ldr	r3, [r7, #12]
 8006de0:	2201      	movs	r2, #1
 8006de2:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8006de6:	e001      	b.n	8006dec <HAL_SDRAM_SendCommand+0x60>
    }
  }
  else
  {
    return HAL_ERROR;
 8006de8:	2301      	movs	r3, #1
 8006dea:	e000      	b.n	8006dee <HAL_SDRAM_SendCommand+0x62>
  }

  return HAL_OK;
 8006dec:	2300      	movs	r3, #0
}
 8006dee:	4618      	mov	r0, r3
 8006df0:	3718      	adds	r7, #24
 8006df2:	46bd      	mov	sp, r7
 8006df4:	bd80      	pop	{r7, pc}

08006df6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8006df6:	b580      	push	{r7, lr}
 8006df8:	b082      	sub	sp, #8
 8006dfa:	af00      	add	r7, sp, #0
 8006dfc:	6078      	str	r0, [r7, #4]
 8006dfe:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8006e06:	b2db      	uxtb	r3, r3
 8006e08:	2b02      	cmp	r3, #2
 8006e0a:	d101      	bne.n	8006e10 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8006e0c:	2302      	movs	r3, #2
 8006e0e:	e016      	b.n	8006e3e <HAL_SDRAM_ProgramRefreshRate+0x48>
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8006e16:	b2db      	uxtb	r3, r3
 8006e18:	2b01      	cmp	r3, #1
 8006e1a:	d10f      	bne.n	8006e3c <HAL_SDRAM_ProgramRefreshRate+0x46>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8006e1c:	687b      	ldr	r3, [r7, #4]
 8006e1e:	2202      	movs	r2, #2
 8006e20:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	681b      	ldr	r3, [r3, #0]
 8006e28:	6839      	ldr	r1, [r7, #0]
 8006e2a:	4618      	mov	r0, r3
 8006e2c:	f002 fe2c 	bl	8009a88 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8006e30:	687b      	ldr	r3, [r7, #4]
 8006e32:	2201      	movs	r2, #1
 8006e34:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8006e38:	2300      	movs	r3, #0
 8006e3a:	e000      	b.n	8006e3e <HAL_SDRAM_ProgramRefreshRate+0x48>
    return HAL_ERROR;
 8006e3c:	2301      	movs	r3, #1
}
 8006e3e:	4618      	mov	r0, r3
 8006e40:	3708      	adds	r7, #8
 8006e42:	46bd      	mov	sp, r7
 8006e44:	bd80      	pop	{r7, pc}
	...

08006e48 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8006e48:	b580      	push	{r7, lr}
 8006e4a:	b084      	sub	sp, #16
 8006e4c:	af00      	add	r7, sp, #0
 8006e4e:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	2b00      	cmp	r3, #0
 8006e54:	d101      	bne.n	8006e5a <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8006e56:	2301      	movs	r3, #1
 8006e58:	e0c1      	b.n	8006fde <HAL_SPI_Init+0x196>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	d108      	bne.n	8006e74 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	685b      	ldr	r3, [r3, #4]
 8006e66:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e6a:	d009      	beq.n	8006e80 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	2200      	movs	r2, #0
 8006e70:	61da      	str	r2, [r3, #28]
 8006e72:	e005      	b.n	8006e80 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	2200      	movs	r2, #0
 8006e78:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	2200      	movs	r2, #0
 8006e7e:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	2200      	movs	r2, #0
 8006e84:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8006e86:	687b      	ldr	r3, [r7, #4]
 8006e88:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8006e8c:	b2db      	uxtb	r3, r3
 8006e8e:	2b00      	cmp	r3, #0
 8006e90:	d12a      	bne.n	8006ee8 <HAL_SPI_Init+0xa0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	2200      	movs	r2, #0
 8006e96:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
    /* Init the SPI Callback settings */
    hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       */
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	4a52      	ldr	r2, [pc, #328]	@ (8006fe8 <HAL_SPI_Init+0x1a0>)
 8006e9e:	665a      	str	r2, [r3, #100]	@ 0x64
    hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       */
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	4a52      	ldr	r2, [pc, #328]	@ (8006fec <HAL_SPI_Init+0x1a4>)
 8006ea4:	669a      	str	r2, [r3, #104]	@ 0x68
    hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     */
 8006ea6:	687b      	ldr	r3, [r7, #4]
 8006ea8:	4a51      	ldr	r2, [pc, #324]	@ (8006ff0 <HAL_SPI_Init+0x1a8>)
 8006eaa:	66da      	str	r2, [r3, #108]	@ 0x6c
    hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   */
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	4a51      	ldr	r2, [pc, #324]	@ (8006ff4 <HAL_SPI_Init+0x1ac>)
 8006eb0:	671a      	str	r2, [r3, #112]	@ 0x70
    hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   */
 8006eb2:	687b      	ldr	r3, [r7, #4]
 8006eb4:	4a50      	ldr	r2, [pc, #320]	@ (8006ff8 <HAL_SPI_Init+0x1b0>)
 8006eb6:	675a      	str	r2, [r3, #116]	@ 0x74
    hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback */
 8006eb8:	687b      	ldr	r3, [r7, #4]
 8006eba:	4a50      	ldr	r2, [pc, #320]	@ (8006ffc <HAL_SPI_Init+0x1b4>)
 8006ebc:	679a      	str	r2, [r3, #120]	@ 0x78
    hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        */
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	4a4f      	ldr	r2, [pc, #316]	@ (8007000 <HAL_SPI_Init+0x1b8>)
 8006ec2:	67da      	str	r2, [r3, #124]	@ 0x7c
    hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    */
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	4a4f      	ldr	r2, [pc, #316]	@ (8007004 <HAL_SPI_Init+0x1bc>)
 8006ec8:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80

    if (hspi->MspInitCallback == NULL)
 8006ecc:	687b      	ldr	r3, [r7, #4]
 8006ece:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006ed2:	2b00      	cmp	r3, #0
 8006ed4:	d103      	bne.n	8006ede <HAL_SPI_Init+0x96>
    {
      hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	4a4b      	ldr	r2, [pc, #300]	@ (8007008 <HAL_SPI_Init+0x1c0>)
 8006eda:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
    }

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
 8006ede:	687b      	ldr	r3, [r7, #4]
 8006ee0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8006ee4:	6878      	ldr	r0, [r7, #4]
 8006ee6:	4798      	blx	r3
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 8006ee8:	687b      	ldr	r3, [r7, #4]
 8006eea:	2202      	movs	r2, #2
 8006eec:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006ef0:	687b      	ldr	r3, [r7, #4]
 8006ef2:	681b      	ldr	r3, [r3, #0]
 8006ef4:	681a      	ldr	r2, [r3, #0]
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	681b      	ldr	r3, [r3, #0]
 8006efa:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006efe:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	68db      	ldr	r3, [r3, #12]
 8006f04:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006f08:	d902      	bls.n	8006f10 <HAL_SPI_Init+0xc8>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 8006f0a:	2300      	movs	r3, #0
 8006f0c:	60fb      	str	r3, [r7, #12]
 8006f0e:	e002      	b.n	8006f16 <HAL_SPI_Init+0xce>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8006f10:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8006f14:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	68db      	ldr	r3, [r3, #12]
 8006f1a:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 8006f1e:	d007      	beq.n	8006f30 <HAL_SPI_Init+0xe8>
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	68db      	ldr	r3, [r3, #12]
 8006f24:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8006f28:	d002      	beq.n	8006f30 <HAL_SPI_Init+0xe8>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8006f2a:	687b      	ldr	r3, [r7, #4]
 8006f2c:	2200      	movs	r2, #0
 8006f2e:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	685b      	ldr	r3, [r3, #4]
 8006f34:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 8006f38:	687b      	ldr	r3, [r7, #4]
 8006f3a:	689b      	ldr	r3, [r3, #8]
 8006f3c:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8006f40:	431a      	orrs	r2, r3
 8006f42:	687b      	ldr	r3, [r7, #4]
 8006f44:	691b      	ldr	r3, [r3, #16]
 8006f46:	f003 0302 	and.w	r3, r3, #2
 8006f4a:	431a      	orrs	r2, r3
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	695b      	ldr	r3, [r3, #20]
 8006f50:	f003 0301 	and.w	r3, r3, #1
 8006f54:	431a      	orrs	r2, r3
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	699b      	ldr	r3, [r3, #24]
 8006f5a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8006f5e:	431a      	orrs	r2, r3
 8006f60:	687b      	ldr	r3, [r7, #4]
 8006f62:	69db      	ldr	r3, [r3, #28]
 8006f64:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006f68:	431a      	orrs	r2, r3
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	6a1b      	ldr	r3, [r3, #32]
 8006f6e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006f72:	ea42 0103 	orr.w	r1, r2, r3
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f7a:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 8006f7e:	687b      	ldr	r3, [r7, #4]
 8006f80:	681b      	ldr	r3, [r3, #0]
 8006f82:	430a      	orrs	r2, r1
 8006f84:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 8006f86:	687b      	ldr	r3, [r7, #4]
 8006f88:	699b      	ldr	r3, [r3, #24]
 8006f8a:	0c1b      	lsrs	r3, r3, #16
 8006f8c:	f003 0204 	and.w	r2, r3, #4
 8006f90:	687b      	ldr	r3, [r7, #4]
 8006f92:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006f94:	f003 0310 	and.w	r3, r3, #16
 8006f98:	431a      	orrs	r2, r3
 8006f9a:	687b      	ldr	r3, [r7, #4]
 8006f9c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8006f9e:	f003 0308 	and.w	r3, r3, #8
 8006fa2:	431a      	orrs	r2, r3
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	68db      	ldr	r3, [r3, #12]
 8006fa8:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8006fac:	ea42 0103 	orr.w	r1, r2, r3
 8006fb0:	68fb      	ldr	r3, [r7, #12]
 8006fb2:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	681b      	ldr	r3, [r3, #0]
 8006fba:	430a      	orrs	r2, r1
 8006fbc:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	681b      	ldr	r3, [r3, #0]
 8006fc2:	69da      	ldr	r2, [r3, #28]
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	681b      	ldr	r3, [r3, #0]
 8006fc8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8006fcc:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8006fce:	687b      	ldr	r3, [r7, #4]
 8006fd0:	2200      	movs	r2, #0
 8006fd2:	661a      	str	r2, [r3, #96]	@ 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	2201      	movs	r2, #1
 8006fd8:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

  return HAL_OK;
 8006fdc:	2300      	movs	r3, #0
}
 8006fde:	4618      	mov	r0, r3
 8006fe0:	3710      	adds	r7, #16
 8006fe2:	46bd      	mov	sp, r7
 8006fe4:	bd80      	pop	{r7, pc}
 8006fe6:	bf00      	nop
 8006fe8:	08007451 	.word	0x08007451
 8006fec:	08007465 	.word	0x08007465
 8006ff0:	08007479 	.word	0x08007479
 8006ff4:	0800748d 	.word	0x0800748d
 8006ff8:	080074a1 	.word	0x080074a1
 8006ffc:	080074b5 	.word	0x080074b5
 8007000:	080074c9 	.word	0x080074c9
 8007004:	080074dd 	.word	0x080074dd
 8007008:	0800149d 	.word	0x0800149d

0800700c <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 800700c:	b580      	push	{r7, lr}
 800700e:	b08a      	sub	sp, #40	@ 0x28
 8007010:	af00      	add	r7, sp, #0
 8007012:	60f8      	str	r0, [r7, #12]
 8007014:	60b9      	str	r1, [r7, #8]
 8007016:	607a      	str	r2, [r7, #4]
 8007018:	807b      	strh	r3, [r7, #2]
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 800701a:	2301      	movs	r3, #1
 800701c:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_StatusTypeDef    errorcode = HAL_OK;
 800701e:	2300      	movs	r3, #0
 8007020:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8007024:	68fb      	ldr	r3, [r7, #12]
 8007026:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 800702a:	2b01      	cmp	r3, #1
 800702c:	d101      	bne.n	8007032 <HAL_SPI_TransmitReceive+0x26>
 800702e:	2302      	movs	r3, #2
 8007030:	e20a      	b.n	8007448 <HAL_SPI_TransmitReceive+0x43c>
 8007032:	68fb      	ldr	r3, [r7, #12]
 8007034:	2201      	movs	r2, #1
 8007036:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800703a:	f7fd f981 	bl	8004340 <HAL_GetTick>
 800703e:	61f8      	str	r0, [r7, #28]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8007040:	68fb      	ldr	r3, [r7, #12]
 8007042:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8007046:	76fb      	strb	r3, [r7, #27]
  tmp_mode            = hspi->Init.Mode;
 8007048:	68fb      	ldr	r3, [r7, #12]
 800704a:	685b      	ldr	r3, [r3, #4]
 800704c:	617b      	str	r3, [r7, #20]
  initial_TxXferCount = Size;
 800704e:	887b      	ldrh	r3, [r7, #2]
 8007050:	827b      	strh	r3, [r7, #18]
  initial_RxXferCount = Size;
 8007052:	887b      	ldrh	r3, [r7, #2]
 8007054:	823b      	strh	r3, [r7, #16]
#if (USE_SPI_CRC != 0U)
  spi_cr1             = READ_REG(hspi->Instance->CR1);
  spi_cr2             = READ_REG(hspi->Instance->CR2);
#endif /* USE_SPI_CRC */

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007056:	7efb      	ldrb	r3, [r7, #27]
 8007058:	2b01      	cmp	r3, #1
 800705a:	d00e      	beq.n	800707a <HAL_SPI_TransmitReceive+0x6e>
 800705c:	697b      	ldr	r3, [r7, #20]
 800705e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007062:	d106      	bne.n	8007072 <HAL_SPI_TransmitReceive+0x66>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	689b      	ldr	r3, [r3, #8]
 8007068:	2b00      	cmp	r3, #0
 800706a:	d102      	bne.n	8007072 <HAL_SPI_TransmitReceive+0x66>
 800706c:	7efb      	ldrb	r3, [r7, #27]
 800706e:	2b04      	cmp	r3, #4
 8007070:	d003      	beq.n	800707a <HAL_SPI_TransmitReceive+0x6e>
  {
    errorcode = HAL_BUSY;
 8007072:	2302      	movs	r3, #2
 8007074:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    goto error;
 8007078:	e1e0      	b.n	800743c <HAL_SPI_TransmitReceive+0x430>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 800707a:	68bb      	ldr	r3, [r7, #8]
 800707c:	2b00      	cmp	r3, #0
 800707e:	d005      	beq.n	800708c <HAL_SPI_TransmitReceive+0x80>
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	2b00      	cmp	r3, #0
 8007084:	d002      	beq.n	800708c <HAL_SPI_TransmitReceive+0x80>
 8007086:	887b      	ldrh	r3, [r7, #2]
 8007088:	2b00      	cmp	r3, #0
 800708a:	d103      	bne.n	8007094 <HAL_SPI_TransmitReceive+0x88>
  {
    errorcode = HAL_ERROR;
 800708c:	2301      	movs	r3, #1
 800708e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    goto error;
 8007092:	e1d3      	b.n	800743c <HAL_SPI_TransmitReceive+0x430>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007094:	68fb      	ldr	r3, [r7, #12]
 8007096:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 800709a:	b2db      	uxtb	r3, r3
 800709c:	2b04      	cmp	r3, #4
 800709e:	d003      	beq.n	80070a8 <HAL_SPI_TransmitReceive+0x9c>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 80070a0:	68fb      	ldr	r3, [r7, #12]
 80070a2:	2205      	movs	r2, #5
 80070a4:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80070a8:	68fb      	ldr	r3, [r7, #12]
 80070aa:	2200      	movs	r2, #0
 80070ac:	661a      	str	r2, [r3, #96]	@ 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 80070ae:	68fb      	ldr	r3, [r7, #12]
 80070b0:	687a      	ldr	r2, [r7, #4]
 80070b2:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferCount = Size;
 80070b4:	68fb      	ldr	r3, [r7, #12]
 80070b6:	887a      	ldrh	r2, [r7, #2]
 80070b8:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
  hspi->RxXferSize  = Size;
 80070bc:	68fb      	ldr	r3, [r7, #12]
 80070be:	887a      	ldrh	r2, [r7, #2]
 80070c0:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 80070c4:	68fb      	ldr	r3, [r7, #12]
 80070c6:	68ba      	ldr	r2, [r7, #8]
 80070c8:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxXferCount = Size;
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	887a      	ldrh	r2, [r7, #2]
 80070ce:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferSize  = Size;
 80070d0:	68fb      	ldr	r3, [r7, #12]
 80070d2:	887a      	ldrh	r2, [r7, #2]
 80070d4:	879a      	strh	r2, [r3, #60]	@ 0x3c

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 80070d6:	68fb      	ldr	r3, [r7, #12]
 80070d8:	2200      	movs	r2, #0
 80070da:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi->TxISR       = NULL;
 80070dc:	68fb      	ldr	r3, [r7, #12]
 80070de:	2200      	movs	r2, #0
 80070e0:	651a      	str	r2, [r3, #80]	@ 0x50
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the Rx Fifo threshold */
  if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
 80070e2:	68fb      	ldr	r3, [r7, #12]
 80070e4:	68db      	ldr	r3, [r3, #12]
 80070e6:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80070ea:	d802      	bhi.n	80070f2 <HAL_SPI_TransmitReceive+0xe6>
 80070ec:	8a3b      	ldrh	r3, [r7, #16]
 80070ee:	2b01      	cmp	r3, #1
 80070f0:	d908      	bls.n	8007104 <HAL_SPI_TransmitReceive+0xf8>
  {
    /* Set fiforxthreshold according the reception data length: 16bit */
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 80070f2:	68fb      	ldr	r3, [r7, #12]
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	685a      	ldr	r2, [r3, #4]
 80070f8:	68fb      	ldr	r3, [r7, #12]
 80070fa:	681b      	ldr	r3, [r3, #0]
 80070fc:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8007100:	605a      	str	r2, [r3, #4]
 8007102:	e007      	b.n	8007114 <HAL_SPI_TransmitReceive+0x108>
  }
  else
  {
    /* Set fiforxthreshold according the reception data length: 8bit */
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8007104:	68fb      	ldr	r3, [r7, #12]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	685a      	ldr	r2, [r3, #4]
 800710a:	68fb      	ldr	r3, [r7, #12]
 800710c:	681b      	ldr	r3, [r3, #0]
 800710e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8007112:	605a      	str	r2, [r3, #4]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007114:	68fb      	ldr	r3, [r7, #12]
 8007116:	681b      	ldr	r3, [r3, #0]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800711e:	2b40      	cmp	r3, #64	@ 0x40
 8007120:	d007      	beq.n	8007132 <HAL_SPI_TransmitReceive+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8007122:	68fb      	ldr	r3, [r7, #12]
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	681a      	ldr	r2, [r3, #0]
 8007128:	68fb      	ldr	r3, [r7, #12]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8007130:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8007132:	68fb      	ldr	r3, [r7, #12]
 8007134:	68db      	ldr	r3, [r3, #12]
 8007136:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800713a:	f240 8081 	bls.w	8007240 <HAL_SPI_TransmitReceive+0x234>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	685b      	ldr	r3, [r3, #4]
 8007142:	2b00      	cmp	r3, #0
 8007144:	d002      	beq.n	800714c <HAL_SPI_TransmitReceive+0x140>
 8007146:	8a7b      	ldrh	r3, [r7, #18]
 8007148:	2b01      	cmp	r3, #1
 800714a:	d16d      	bne.n	8007228 <HAL_SPI_TransmitReceive+0x21c>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800714c:	68fb      	ldr	r3, [r7, #12]
 800714e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007150:	881a      	ldrh	r2, [r3, #0]
 8007152:	68fb      	ldr	r3, [r7, #12]
 8007154:	681b      	ldr	r3, [r3, #0]
 8007156:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007158:	68fb      	ldr	r3, [r7, #12]
 800715a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800715c:	1c9a      	adds	r2, r3, #2
 800715e:	68fb      	ldr	r3, [r7, #12]
 8007160:	639a      	str	r2, [r3, #56]	@ 0x38
      hspi->TxXferCount--;
 8007162:	68fb      	ldr	r3, [r7, #12]
 8007164:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007166:	b29b      	uxth	r3, r3
 8007168:	3b01      	subs	r3, #1
 800716a:	b29a      	uxth	r2, r3
 800716c:	68fb      	ldr	r3, [r7, #12]
 800716e:	87da      	strh	r2, [r3, #62]	@ 0x3e
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007170:	e05a      	b.n	8007228 <HAL_SPI_TransmitReceive+0x21c>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007172:	68fb      	ldr	r3, [r7, #12]
 8007174:	681b      	ldr	r3, [r3, #0]
 8007176:	689b      	ldr	r3, [r3, #8]
 8007178:	f003 0302 	and.w	r3, r3, #2
 800717c:	2b02      	cmp	r3, #2
 800717e:	d11b      	bne.n	80071b8 <HAL_SPI_TransmitReceive+0x1ac>
 8007180:	68fb      	ldr	r3, [r7, #12]
 8007182:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007184:	b29b      	uxth	r3, r3
 8007186:	2b00      	cmp	r3, #0
 8007188:	d016      	beq.n	80071b8 <HAL_SPI_TransmitReceive+0x1ac>
 800718a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800718c:	2b01      	cmp	r3, #1
 800718e:	d113      	bne.n	80071b8 <HAL_SPI_TransmitReceive+0x1ac>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007190:	68fb      	ldr	r3, [r7, #12]
 8007192:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007194:	881a      	ldrh	r2, [r3, #0]
 8007196:	68fb      	ldr	r3, [r7, #12]
 8007198:	681b      	ldr	r3, [r3, #0]
 800719a:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071a0:	1c9a      	adds	r2, r3, #2
 80071a2:	68fb      	ldr	r3, [r7, #12]
 80071a4:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount--;
 80071a6:	68fb      	ldr	r3, [r7, #12]
 80071a8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80071aa:	b29b      	uxth	r3, r3
 80071ac:	3b01      	subs	r3, #1
 80071ae:	b29a      	uxth	r2, r3
 80071b0:	68fb      	ldr	r3, [r7, #12]
 80071b2:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80071b4:	2300      	movs	r3, #0
 80071b6:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80071b8:	68fb      	ldr	r3, [r7, #12]
 80071ba:	681b      	ldr	r3, [r3, #0]
 80071bc:	689b      	ldr	r3, [r3, #8]
 80071be:	f003 0301 	and.w	r3, r3, #1
 80071c2:	2b01      	cmp	r3, #1
 80071c4:	d11c      	bne.n	8007200 <HAL_SPI_TransmitReceive+0x1f4>
 80071c6:	68fb      	ldr	r3, [r7, #12]
 80071c8:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80071cc:	b29b      	uxth	r3, r3
 80071ce:	2b00      	cmp	r3, #0
 80071d0:	d016      	beq.n	8007200 <HAL_SPI_TransmitReceive+0x1f4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80071d2:	68fb      	ldr	r3, [r7, #12]
 80071d4:	681b      	ldr	r3, [r3, #0]
 80071d6:	68da      	ldr	r2, [r3, #12]
 80071d8:	68fb      	ldr	r3, [r7, #12]
 80071da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80071dc:	b292      	uxth	r2, r2
 80071de:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80071e4:	1c9a      	adds	r2, r3, #2
 80071e6:	68fb      	ldr	r3, [r7, #12]
 80071e8:	641a      	str	r2, [r3, #64]	@ 0x40
        hspi->RxXferCount--;
 80071ea:	68fb      	ldr	r3, [r7, #12]
 80071ec:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80071f0:	b29b      	uxth	r3, r3
 80071f2:	3b01      	subs	r3, #1
 80071f4:	b29a      	uxth	r2, r3
 80071f6:	68fb      	ldr	r3, [r7, #12]
 80071f8:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80071fc:	2301      	movs	r3, #1
 80071fe:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007200:	f7fd f89e 	bl	8004340 <HAL_GetTick>
 8007204:	4602      	mov	r2, r0
 8007206:	69fb      	ldr	r3, [r7, #28]
 8007208:	1ad3      	subs	r3, r2, r3
 800720a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800720c:	429a      	cmp	r2, r3
 800720e:	d80b      	bhi.n	8007228 <HAL_SPI_TransmitReceive+0x21c>
 8007210:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007212:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007216:	d007      	beq.n	8007228 <HAL_SPI_TransmitReceive+0x21c>
      {
        errorcode = HAL_TIMEOUT;
 8007218:	2303      	movs	r3, #3
 800721a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        hspi->State = HAL_SPI_STATE_READY;
 800721e:	68fb      	ldr	r3, [r7, #12]
 8007220:	2201      	movs	r2, #1
 8007222:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
        goto error;
 8007226:	e109      	b.n	800743c <HAL_SPI_TransmitReceive+0x430>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007228:	68fb      	ldr	r3, [r7, #12]
 800722a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800722c:	b29b      	uxth	r3, r3
 800722e:	2b00      	cmp	r3, #0
 8007230:	d19f      	bne.n	8007172 <HAL_SPI_TransmitReceive+0x166>
 8007232:	68fb      	ldr	r3, [r7, #12]
 8007234:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007238:	b29b      	uxth	r3, r3
 800723a:	2b00      	cmp	r3, #0
 800723c:	d199      	bne.n	8007172 <HAL_SPI_TransmitReceive+0x166>
 800723e:	e0e3      	b.n	8007408 <HAL_SPI_TransmitReceive+0x3fc>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007240:	68fb      	ldr	r3, [r7, #12]
 8007242:	685b      	ldr	r3, [r3, #4]
 8007244:	2b00      	cmp	r3, #0
 8007246:	d003      	beq.n	8007250 <HAL_SPI_TransmitReceive+0x244>
 8007248:	8a7b      	ldrh	r3, [r7, #18]
 800724a:	2b01      	cmp	r3, #1
 800724c:	f040 80cf 	bne.w	80073ee <HAL_SPI_TransmitReceive+0x3e2>
    {
      if (hspi->TxXferCount > 1U)
 8007250:	68fb      	ldr	r3, [r7, #12]
 8007252:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007254:	b29b      	uxth	r3, r3
 8007256:	2b01      	cmp	r3, #1
 8007258:	d912      	bls.n	8007280 <HAL_SPI_TransmitReceive+0x274>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800725a:	68fb      	ldr	r3, [r7, #12]
 800725c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800725e:	881a      	ldrh	r2, [r3, #0]
 8007260:	68fb      	ldr	r3, [r7, #12]
 8007262:	681b      	ldr	r3, [r3, #0]
 8007264:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007266:	68fb      	ldr	r3, [r7, #12]
 8007268:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800726a:	1c9a      	adds	r2, r3, #2
 800726c:	68fb      	ldr	r3, [r7, #12]
 800726e:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount -= 2U;
 8007270:	68fb      	ldr	r3, [r7, #12]
 8007272:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007274:	b29b      	uxth	r3, r3
 8007276:	3b02      	subs	r3, #2
 8007278:	b29a      	uxth	r2, r3
 800727a:	68fb      	ldr	r3, [r7, #12]
 800727c:	87da      	strh	r2, [r3, #62]	@ 0x3e
 800727e:	e0b6      	b.n	80073ee <HAL_SPI_TransmitReceive+0x3e2>
      }
      else
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007280:	68fb      	ldr	r3, [r7, #12]
 8007282:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007284:	68fb      	ldr	r3, [r7, #12]
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	330c      	adds	r3, #12
 800728a:	7812      	ldrb	r2, [r2, #0]
 800728c:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 800728e:	68fb      	ldr	r3, [r7, #12]
 8007290:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007292:	1c5a      	adds	r2, r3, #1
 8007294:	68fb      	ldr	r3, [r7, #12]
 8007296:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount--;
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800729c:	b29b      	uxth	r3, r3
 800729e:	3b01      	subs	r3, #1
 80072a0:	b29a      	uxth	r2, r3
 80072a2:	68fb      	ldr	r3, [r7, #12]
 80072a4:	87da      	strh	r2, [r3, #62]	@ 0x3e
          SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
        }
#endif /* USE_SPI_CRC */
      }
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80072a6:	e0a2      	b.n	80073ee <HAL_SPI_TransmitReceive+0x3e2>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80072a8:	68fb      	ldr	r3, [r7, #12]
 80072aa:	681b      	ldr	r3, [r3, #0]
 80072ac:	689b      	ldr	r3, [r3, #8]
 80072ae:	f003 0302 	and.w	r3, r3, #2
 80072b2:	2b02      	cmp	r3, #2
 80072b4:	d134      	bne.n	8007320 <HAL_SPI_TransmitReceive+0x314>
 80072b6:	68fb      	ldr	r3, [r7, #12]
 80072b8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80072ba:	b29b      	uxth	r3, r3
 80072bc:	2b00      	cmp	r3, #0
 80072be:	d02f      	beq.n	8007320 <HAL_SPI_TransmitReceive+0x314>
 80072c0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80072c2:	2b01      	cmp	r3, #1
 80072c4:	d12c      	bne.n	8007320 <HAL_SPI_TransmitReceive+0x314>
      {
        if (hspi->TxXferCount > 1U)
 80072c6:	68fb      	ldr	r3, [r7, #12]
 80072c8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80072ca:	b29b      	uxth	r3, r3
 80072cc:	2b01      	cmp	r3, #1
 80072ce:	d912      	bls.n	80072f6 <HAL_SPI_TransmitReceive+0x2ea>
        {
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80072d0:	68fb      	ldr	r3, [r7, #12]
 80072d2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80072d4:	881a      	ldrh	r2, [r3, #0]
 80072d6:	68fb      	ldr	r3, [r7, #12]
 80072d8:	681b      	ldr	r3, [r3, #0]
 80072da:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 80072dc:	68fb      	ldr	r3, [r7, #12]
 80072de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80072e0:	1c9a      	adds	r2, r3, #2
 80072e2:	68fb      	ldr	r3, [r7, #12]
 80072e4:	639a      	str	r2, [r3, #56]	@ 0x38
          hspi->TxXferCount -= 2U;
 80072e6:	68fb      	ldr	r3, [r7, #12]
 80072e8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80072ea:	b29b      	uxth	r3, r3
 80072ec:	3b02      	subs	r3, #2
 80072ee:	b29a      	uxth	r2, r3
 80072f0:	68fb      	ldr	r3, [r7, #12]
 80072f2:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80072f4:	e012      	b.n	800731c <HAL_SPI_TransmitReceive+0x310>
        }
        else
        {
          *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80072f6:	68fb      	ldr	r3, [r7, #12]
 80072f8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80072fa:	68fb      	ldr	r3, [r7, #12]
 80072fc:	681b      	ldr	r3, [r3, #0]
 80072fe:	330c      	adds	r3, #12
 8007300:	7812      	ldrb	r2, [r2, #0]
 8007302:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 8007304:	68fb      	ldr	r3, [r7, #12]
 8007306:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007308:	1c5a      	adds	r2, r3, #1
 800730a:	68fb      	ldr	r3, [r7, #12]
 800730c:	639a      	str	r2, [r3, #56]	@ 0x38
          hspi->TxXferCount--;
 800730e:	68fb      	ldr	r3, [r7, #12]
 8007310:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8007312:	b29b      	uxth	r3, r3
 8007314:	3b01      	subs	r3, #1
 8007316:	b29a      	uxth	r2, r3
 8007318:	68fb      	ldr	r3, [r7, #12]
 800731a:	87da      	strh	r2, [r3, #62]	@ 0x3e
        }
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 800731c:	2300      	movs	r3, #0
 800731e:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007320:	68fb      	ldr	r3, [r7, #12]
 8007322:	681b      	ldr	r3, [r3, #0]
 8007324:	689b      	ldr	r3, [r3, #8]
 8007326:	f003 0301 	and.w	r3, r3, #1
 800732a:	2b01      	cmp	r3, #1
 800732c:	d148      	bne.n	80073c0 <HAL_SPI_TransmitReceive+0x3b4>
 800732e:	68fb      	ldr	r3, [r7, #12]
 8007330:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007334:	b29b      	uxth	r3, r3
 8007336:	2b00      	cmp	r3, #0
 8007338:	d042      	beq.n	80073c0 <HAL_SPI_TransmitReceive+0x3b4>
      {
        if (hspi->RxXferCount > 1U)
 800733a:	68fb      	ldr	r3, [r7, #12]
 800733c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007340:	b29b      	uxth	r3, r3
 8007342:	2b01      	cmp	r3, #1
 8007344:	d923      	bls.n	800738e <HAL_SPI_TransmitReceive+0x382>
        {
          *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007346:	68fb      	ldr	r3, [r7, #12]
 8007348:	681b      	ldr	r3, [r3, #0]
 800734a:	68da      	ldr	r2, [r3, #12]
 800734c:	68fb      	ldr	r3, [r7, #12]
 800734e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007350:	b292      	uxth	r2, r2
 8007352:	801a      	strh	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint16_t);
 8007354:	68fb      	ldr	r3, [r7, #12]
 8007356:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007358:	1c9a      	adds	r2, r3, #2
 800735a:	68fb      	ldr	r3, [r7, #12]
 800735c:	641a      	str	r2, [r3, #64]	@ 0x40
          hspi->RxXferCount -= 2U;
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007364:	b29b      	uxth	r3, r3
 8007366:	3b02      	subs	r3, #2
 8007368:	b29a      	uxth	r2, r3
 800736a:	68fb      	ldr	r3, [r7, #12]
 800736c:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
          if (hspi->RxXferCount <= 1U)
 8007370:	68fb      	ldr	r3, [r7, #12]
 8007372:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007376:	b29b      	uxth	r3, r3
 8007378:	2b01      	cmp	r3, #1
 800737a:	d81f      	bhi.n	80073bc <HAL_SPI_TransmitReceive+0x3b0>
          {
            /* Set RX Fifo threshold before to switch on 8 bit data size */
            SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 800737c:	68fb      	ldr	r3, [r7, #12]
 800737e:	681b      	ldr	r3, [r3, #0]
 8007380:	685a      	ldr	r2, [r3, #4]
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	681b      	ldr	r3, [r3, #0]
 8007386:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 800738a:	605a      	str	r2, [r3, #4]
 800738c:	e016      	b.n	80073bc <HAL_SPI_TransmitReceive+0x3b0>
          }
        }
        else
        {
          (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800738e:	68fb      	ldr	r3, [r7, #12]
 8007390:	681b      	ldr	r3, [r3, #0]
 8007392:	f103 020c 	add.w	r2, r3, #12
 8007396:	68fb      	ldr	r3, [r7, #12]
 8007398:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800739a:	7812      	ldrb	r2, [r2, #0]
 800739c:	b2d2      	uxtb	r2, r2
 800739e:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr++;
 80073a0:	68fb      	ldr	r3, [r7, #12]
 80073a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80073a4:	1c5a      	adds	r2, r3, #1
 80073a6:	68fb      	ldr	r3, [r7, #12]
 80073a8:	641a      	str	r2, [r3, #64]	@ 0x40
          hspi->RxXferCount--;
 80073aa:	68fb      	ldr	r3, [r7, #12]
 80073ac:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80073b0:	b29b      	uxth	r3, r3
 80073b2:	3b01      	subs	r3, #1
 80073b4:	b29a      	uxth	r2, r3
 80073b6:	68fb      	ldr	r3, [r7, #12]
 80073b8:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
        }
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 80073bc:	2301      	movs	r3, #1
 80073be:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80073c0:	f7fc ffbe 	bl	8004340 <HAL_GetTick>
 80073c4:	4602      	mov	r2, r0
 80073c6:	69fb      	ldr	r3, [r7, #28]
 80073c8:	1ad3      	subs	r3, r2, r3
 80073ca:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80073cc:	429a      	cmp	r2, r3
 80073ce:	d803      	bhi.n	80073d8 <HAL_SPI_TransmitReceive+0x3cc>
 80073d0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073d2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80073d6:	d102      	bne.n	80073de <HAL_SPI_TransmitReceive+0x3d2>
 80073d8:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80073da:	2b00      	cmp	r3, #0
 80073dc:	d107      	bne.n	80073ee <HAL_SPI_TransmitReceive+0x3e2>
      {
        errorcode = HAL_TIMEOUT;
 80073de:	2303      	movs	r3, #3
 80073e0:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        hspi->State = HAL_SPI_STATE_READY;
 80073e4:	68fb      	ldr	r3, [r7, #12]
 80073e6:	2201      	movs	r2, #1
 80073e8:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
        goto error;
 80073ec:	e026      	b.n	800743c <HAL_SPI_TransmitReceive+0x430>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80073ee:	68fb      	ldr	r3, [r7, #12]
 80073f0:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80073f2:	b29b      	uxth	r3, r3
 80073f4:	2b00      	cmp	r3, #0
 80073f6:	f47f af57 	bne.w	80072a8 <HAL_SPI_TransmitReceive+0x29c>
 80073fa:	68fb      	ldr	r3, [r7, #12]
 80073fc:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8007400:	b29b      	uxth	r3, r3
 8007402:	2b00      	cmp	r3, #0
 8007404:	f47f af50 	bne.w	80072a8 <HAL_SPI_TransmitReceive+0x29c>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007408:	69fa      	ldr	r2, [r7, #28]
 800740a:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800740c:	68f8      	ldr	r0, [r7, #12]
 800740e:	f000 f98d 	bl	800772c <SPI_EndRxTxTransaction>
 8007412:	4603      	mov	r3, r0
 8007414:	2b00      	cmp	r3, #0
 8007416:	d005      	beq.n	8007424 <HAL_SPI_TransmitReceive+0x418>
  {
    errorcode = HAL_ERROR;
 8007418:	2301      	movs	r3, #1
 800741a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800741e:	68fb      	ldr	r3, [r7, #12]
 8007420:	2220      	movs	r2, #32
 8007422:	661a      	str	r2, [r3, #96]	@ 0x60
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007424:	68fb      	ldr	r3, [r7, #12]
 8007426:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007428:	2b00      	cmp	r3, #0
 800742a:	d003      	beq.n	8007434 <HAL_SPI_TransmitReceive+0x428>
  {
    errorcode = HAL_ERROR;
 800742c:	2301      	movs	r3, #1
 800742e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007432:	e003      	b.n	800743c <HAL_SPI_TransmitReceive+0x430>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 8007434:	68fb      	ldr	r3, [r7, #12]
 8007436:	2201      	movs	r2, #1
 8007438:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
  }
  
error :
  __HAL_UNLOCK(hspi);
 800743c:	68fb      	ldr	r3, [r7, #12]
 800743e:	2200      	movs	r2, #0
 8007440:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
  return errorcode;
 8007444:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
}
 8007448:	4618      	mov	r0, r3
 800744a:	3728      	adds	r7, #40	@ 0x28
 800744c:	46bd      	mov	sp, r7
 800744e:	bd80      	pop	{r7, pc}

08007450 <HAL_SPI_TxCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007450:	b480      	push	{r7}
 8007452:	b083      	sub	sp, #12
 8007454:	af00      	add	r7, sp, #0
 8007456:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxCpltCallback should be implemented in the user file
   */
}
 8007458:	bf00      	nop
 800745a:	370c      	adds	r7, #12
 800745c:	46bd      	mov	sp, r7
 800745e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007462:	4770      	bx	lr

08007464 <HAL_SPI_RxCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007464:	b480      	push	{r7}
 8007466:	b083      	sub	sp, #12
 8007468:	af00      	add	r7, sp, #0
 800746a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 800746c:	bf00      	nop
 800746e:	370c      	adds	r7, #12
 8007470:	46bd      	mov	sp, r7
 8007472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007476:	4770      	bx	lr

08007478 <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
{
 8007478:	b480      	push	{r7}
 800747a:	b083      	sub	sp, #12
 800747c:	af00      	add	r7, sp, #0
 800747e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 8007480:	bf00      	nop
 8007482:	370c      	adds	r7, #12
 8007484:	46bd      	mov	sp, r7
 8007486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800748a:	4770      	bx	lr

0800748c <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 800748c:	b480      	push	{r7}
 800748e:	b083      	sub	sp, #12
 8007490:	af00      	add	r7, sp, #0
 8007492:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8007494:	bf00      	nop
 8007496:	370c      	adds	r7, #12
 8007498:	46bd      	mov	sp, r7
 800749a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800749e:	4770      	bx	lr

080074a0 <HAL_SPI_RxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 80074a0:	b480      	push	{r7}
 80074a2:	b083      	sub	sp, #12
 80074a4:	af00      	add	r7, sp, #0
 80074a6:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
   */
}
 80074a8:	bf00      	nop
 80074aa:	370c      	adds	r7, #12
 80074ac:	46bd      	mov	sp, r7
 80074ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074b2:	4770      	bx	lr

080074b4 <HAL_SPI_TxRxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 80074b4:	b480      	push	{r7}
 80074b6:	b083      	sub	sp, #12
 80074b8:	af00      	add	r7, sp, #0
 80074ba:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
   */
}
 80074bc:	bf00      	nop
 80074be:	370c      	adds	r7, #12
 80074c0:	46bd      	mov	sp, r7
 80074c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074c6:	4770      	bx	lr

080074c8 <HAL_SPI_ErrorCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
{
 80074c8:	b480      	push	{r7}
 80074ca:	b083      	sub	sp, #12
 80074cc:	af00      	add	r7, sp, #0
 80074ce:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 80074d0:	bf00      	nop
 80074d2:	370c      	adds	r7, #12
 80074d4:	46bd      	mov	sp, r7
 80074d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074da:	4770      	bx	lr

080074dc <HAL_SPI_AbortCpltCallback>:
  * @brief  SPI Abort Complete callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
{
 80074dc:	b480      	push	{r7}
 80074de:	b083      	sub	sp, #12
 80074e0:	af00      	add	r7, sp, #0
 80074e2:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_AbortCpltCallback can be implemented in the user file.
   */
}
 80074e4:	bf00      	nop
 80074e6:	370c      	adds	r7, #12
 80074e8:	46bd      	mov	sp, r7
 80074ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ee:	4770      	bx	lr

080074f0 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 80074f0:	b580      	push	{r7, lr}
 80074f2:	b088      	sub	sp, #32
 80074f4:	af00      	add	r7, sp, #0
 80074f6:	60f8      	str	r0, [r7, #12]
 80074f8:	60b9      	str	r1, [r7, #8]
 80074fa:	603b      	str	r3, [r7, #0]
 80074fc:	4613      	mov	r3, r2
 80074fe:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8007500:	f7fc ff1e 	bl	8004340 <HAL_GetTick>
 8007504:	4602      	mov	r2, r0
 8007506:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007508:	1a9b      	subs	r3, r3, r2
 800750a:	683a      	ldr	r2, [r7, #0]
 800750c:	4413      	add	r3, r2
 800750e:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8007510:	f7fc ff16 	bl	8004340 <HAL_GetTick>
 8007514:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007516:	4b39      	ldr	r3, [pc, #228]	@ (80075fc <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8007518:	681b      	ldr	r3, [r3, #0]
 800751a:	015b      	lsls	r3, r3, #5
 800751c:	0d1b      	lsrs	r3, r3, #20
 800751e:	69fa      	ldr	r2, [r7, #28]
 8007520:	fb02 f303 	mul.w	r3, r2, r3
 8007524:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007526:	e054      	b.n	80075d2 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8007528:	683b      	ldr	r3, [r7, #0]
 800752a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800752e:	d050      	beq.n	80075d2 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007530:	f7fc ff06 	bl	8004340 <HAL_GetTick>
 8007534:	4602      	mov	r2, r0
 8007536:	69bb      	ldr	r3, [r7, #24]
 8007538:	1ad3      	subs	r3, r2, r3
 800753a:	69fa      	ldr	r2, [r7, #28]
 800753c:	429a      	cmp	r2, r3
 800753e:	d902      	bls.n	8007546 <SPI_WaitFlagStateUntilTimeout+0x56>
 8007540:	69fb      	ldr	r3, [r7, #28]
 8007542:	2b00      	cmp	r3, #0
 8007544:	d13d      	bne.n	80075c2 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007546:	68fb      	ldr	r3, [r7, #12]
 8007548:	681b      	ldr	r3, [r3, #0]
 800754a:	685a      	ldr	r2, [r3, #4]
 800754c:	68fb      	ldr	r3, [r7, #12]
 800754e:	681b      	ldr	r3, [r3, #0]
 8007550:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8007554:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007556:	68fb      	ldr	r3, [r7, #12]
 8007558:	685b      	ldr	r3, [r3, #4]
 800755a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800755e:	d111      	bne.n	8007584 <SPI_WaitFlagStateUntilTimeout+0x94>
 8007560:	68fb      	ldr	r3, [r7, #12]
 8007562:	689b      	ldr	r3, [r3, #8]
 8007564:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007568:	d004      	beq.n	8007574 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800756a:	68fb      	ldr	r3, [r7, #12]
 800756c:	689b      	ldr	r3, [r3, #8]
 800756e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8007572:	d107      	bne.n	8007584 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8007574:	68fb      	ldr	r3, [r7, #12]
 8007576:	681b      	ldr	r3, [r3, #0]
 8007578:	681a      	ldr	r2, [r3, #0]
 800757a:	68fb      	ldr	r3, [r7, #12]
 800757c:	681b      	ldr	r3, [r3, #0]
 800757e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8007582:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007588:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800758c:	d10f      	bne.n	80075ae <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 800758e:	68fb      	ldr	r3, [r7, #12]
 8007590:	681b      	ldr	r3, [r3, #0]
 8007592:	681a      	ldr	r2, [r3, #0]
 8007594:	68fb      	ldr	r3, [r7, #12]
 8007596:	681b      	ldr	r3, [r3, #0]
 8007598:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800759c:	601a      	str	r2, [r3, #0]
 800759e:	68fb      	ldr	r3, [r7, #12]
 80075a0:	681b      	ldr	r3, [r3, #0]
 80075a2:	681a      	ldr	r2, [r3, #0]
 80075a4:	68fb      	ldr	r3, [r7, #12]
 80075a6:	681b      	ldr	r3, [r3, #0]
 80075a8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80075ac:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80075ae:	68fb      	ldr	r3, [r7, #12]
 80075b0:	2201      	movs	r2, #1
 80075b2:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80075b6:	68fb      	ldr	r3, [r7, #12]
 80075b8:	2200      	movs	r2, #0
 80075ba:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

        return HAL_TIMEOUT;
 80075be:	2303      	movs	r3, #3
 80075c0:	e017      	b.n	80075f2 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 80075c2:	697b      	ldr	r3, [r7, #20]
 80075c4:	2b00      	cmp	r3, #0
 80075c6:	d101      	bne.n	80075cc <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 80075c8:	2300      	movs	r3, #0
 80075ca:	61fb      	str	r3, [r7, #28]
      }
      count--;
 80075cc:	697b      	ldr	r3, [r7, #20]
 80075ce:	3b01      	subs	r3, #1
 80075d0:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 80075d2:	68fb      	ldr	r3, [r7, #12]
 80075d4:	681b      	ldr	r3, [r3, #0]
 80075d6:	689a      	ldr	r2, [r3, #8]
 80075d8:	68bb      	ldr	r3, [r7, #8]
 80075da:	4013      	ands	r3, r2
 80075dc:	68ba      	ldr	r2, [r7, #8]
 80075de:	429a      	cmp	r2, r3
 80075e0:	bf0c      	ite	eq
 80075e2:	2301      	moveq	r3, #1
 80075e4:	2300      	movne	r3, #0
 80075e6:	b2db      	uxtb	r3, r3
 80075e8:	461a      	mov	r2, r3
 80075ea:	79fb      	ldrb	r3, [r7, #7]
 80075ec:	429a      	cmp	r2, r3
 80075ee:	d19b      	bne.n	8007528 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 80075f0:	2300      	movs	r3, #0
}
 80075f2:	4618      	mov	r0, r3
 80075f4:	3720      	adds	r7, #32
 80075f6:	46bd      	mov	sp, r7
 80075f8:	bd80      	pop	{r7, pc}
 80075fa:	bf00      	nop
 80075fc:	20000004 	.word	0x20000004

08007600 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8007600:	b580      	push	{r7, lr}
 8007602:	b08a      	sub	sp, #40	@ 0x28
 8007604:	af00      	add	r7, sp, #0
 8007606:	60f8      	str	r0, [r7, #12]
 8007608:	60b9      	str	r1, [r7, #8]
 800760a:	607a      	str	r2, [r7, #4]
 800760c:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 800760e:	2300      	movs	r3, #0
 8007610:	75fb      	strb	r3, [r7, #23]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 8007612:	f7fc fe95 	bl	8004340 <HAL_GetTick>
 8007616:	4602      	mov	r2, r0
 8007618:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800761a:	1a9b      	subs	r3, r3, r2
 800761c:	683a      	ldr	r2, [r7, #0]
 800761e:	4413      	add	r3, r2
 8007620:	627b      	str	r3, [r7, #36]	@ 0x24
  tmp_tickstart = HAL_GetTick();
 8007622:	f7fc fe8d 	bl	8004340 <HAL_GetTick>
 8007626:	6238      	str	r0, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 8007628:	68fb      	ldr	r3, [r7, #12]
 800762a:	681b      	ldr	r3, [r3, #0]
 800762c:	330c      	adds	r3, #12
 800762e:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 8007630:	4b3d      	ldr	r3, [pc, #244]	@ (8007728 <SPI_WaitFifoStateUntilTimeout+0x128>)
 8007632:	681a      	ldr	r2, [r3, #0]
 8007634:	4613      	mov	r3, r2
 8007636:	009b      	lsls	r3, r3, #2
 8007638:	4413      	add	r3, r2
 800763a:	00da      	lsls	r2, r3, #3
 800763c:	1ad3      	subs	r3, r2, r3
 800763e:	0d1b      	lsrs	r3, r3, #20
 8007640:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007642:	fb02 f303 	mul.w	r3, r2, r3
 8007646:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 8007648:	e060      	b.n	800770c <SPI_WaitFifoStateUntilTimeout+0x10c>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 800764a:	68bb      	ldr	r3, [r7, #8]
 800764c:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8007650:	d107      	bne.n	8007662 <SPI_WaitFifoStateUntilTimeout+0x62>
 8007652:	687b      	ldr	r3, [r7, #4]
 8007654:	2b00      	cmp	r3, #0
 8007656:	d104      	bne.n	8007662 <SPI_WaitFifoStateUntilTimeout+0x62>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 8007658:	69fb      	ldr	r3, [r7, #28]
 800765a:	781b      	ldrb	r3, [r3, #0]
 800765c:	b2db      	uxtb	r3, r3
 800765e:	75fb      	strb	r3, [r7, #23]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 8007660:	7dfb      	ldrb	r3, [r7, #23]
    }

    if (Timeout != HAL_MAX_DELAY)
 8007662:	683b      	ldr	r3, [r7, #0]
 8007664:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007668:	d050      	beq.n	800770c <SPI_WaitFifoStateUntilTimeout+0x10c>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 800766a:	f7fc fe69 	bl	8004340 <HAL_GetTick>
 800766e:	4602      	mov	r2, r0
 8007670:	6a3b      	ldr	r3, [r7, #32]
 8007672:	1ad3      	subs	r3, r2, r3
 8007674:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007676:	429a      	cmp	r2, r3
 8007678:	d902      	bls.n	8007680 <SPI_WaitFifoStateUntilTimeout+0x80>
 800767a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800767c:	2b00      	cmp	r3, #0
 800767e:	d13d      	bne.n	80076fc <SPI_WaitFifoStateUntilTimeout+0xfc>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007680:	68fb      	ldr	r3, [r7, #12]
 8007682:	681b      	ldr	r3, [r3, #0]
 8007684:	685a      	ldr	r2, [r3, #4]
 8007686:	68fb      	ldr	r3, [r7, #12]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 800768e:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007690:	68fb      	ldr	r3, [r7, #12]
 8007692:	685b      	ldr	r3, [r3, #4]
 8007694:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8007698:	d111      	bne.n	80076be <SPI_WaitFifoStateUntilTimeout+0xbe>
 800769a:	68fb      	ldr	r3, [r7, #12]
 800769c:	689b      	ldr	r3, [r3, #8]
 800769e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80076a2:	d004      	beq.n	80076ae <SPI_WaitFifoStateUntilTimeout+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80076a4:	68fb      	ldr	r3, [r7, #12]
 80076a6:	689b      	ldr	r3, [r3, #8]
 80076a8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80076ac:	d107      	bne.n	80076be <SPI_WaitFifoStateUntilTimeout+0xbe>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80076ae:	68fb      	ldr	r3, [r7, #12]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	681a      	ldr	r2, [r3, #0]
 80076b4:	68fb      	ldr	r3, [r7, #12]
 80076b6:	681b      	ldr	r3, [r3, #0]
 80076b8:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80076bc:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80076be:	68fb      	ldr	r3, [r7, #12]
 80076c0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80076c2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80076c6:	d10f      	bne.n	80076e8 <SPI_WaitFifoStateUntilTimeout+0xe8>
        {
          SPI_RESET_CRC(hspi);
 80076c8:	68fb      	ldr	r3, [r7, #12]
 80076ca:	681b      	ldr	r3, [r3, #0]
 80076cc:	681a      	ldr	r2, [r3, #0]
 80076ce:	68fb      	ldr	r3, [r7, #12]
 80076d0:	681b      	ldr	r3, [r3, #0]
 80076d2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80076d6:	601a      	str	r2, [r3, #0]
 80076d8:	68fb      	ldr	r3, [r7, #12]
 80076da:	681b      	ldr	r3, [r3, #0]
 80076dc:	681a      	ldr	r2, [r3, #0]
 80076de:	68fb      	ldr	r3, [r7, #12]
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80076e6:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 80076e8:	68fb      	ldr	r3, [r7, #12]
 80076ea:	2201      	movs	r2, #1
 80076ec:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 80076f0:	68fb      	ldr	r3, [r7, #12]
 80076f2:	2200      	movs	r2, #0
 80076f4:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

        return HAL_TIMEOUT;
 80076f8:	2303      	movs	r3, #3
 80076fa:	e010      	b.n	800771e <SPI_WaitFifoStateUntilTimeout+0x11e>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 80076fc:	69bb      	ldr	r3, [r7, #24]
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d101      	bne.n	8007706 <SPI_WaitFifoStateUntilTimeout+0x106>
      {
        tmp_timeout = 0U;
 8007702:	2300      	movs	r3, #0
 8007704:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      count--;
 8007706:	69bb      	ldr	r3, [r7, #24]
 8007708:	3b01      	subs	r3, #1
 800770a:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 800770c:	68fb      	ldr	r3, [r7, #12]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	689a      	ldr	r2, [r3, #8]
 8007712:	68bb      	ldr	r3, [r7, #8]
 8007714:	4013      	ands	r3, r2
 8007716:	687a      	ldr	r2, [r7, #4]
 8007718:	429a      	cmp	r2, r3
 800771a:	d196      	bne.n	800764a <SPI_WaitFifoStateUntilTimeout+0x4a>
    }
  }

  return HAL_OK;
 800771c:	2300      	movs	r3, #0
}
 800771e:	4618      	mov	r0, r3
 8007720:	3728      	adds	r7, #40	@ 0x28
 8007722:	46bd      	mov	sp, r7
 8007724:	bd80      	pop	{r7, pc}
 8007726:	bf00      	nop
 8007728:	20000004 	.word	0x20000004

0800772c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800772c:	b580      	push	{r7, lr}
 800772e:	b088      	sub	sp, #32
 8007730:	af02      	add	r7, sp, #8
 8007732:	60f8      	str	r0, [r7, #12]
 8007734:	60b9      	str	r1, [r7, #8]
 8007736:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	9300      	str	r3, [sp, #0]
 800773c:	68bb      	ldr	r3, [r7, #8]
 800773e:	2200      	movs	r2, #0
 8007740:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 8007744:	68f8      	ldr	r0, [r7, #12]
 8007746:	f7ff ff5b 	bl	8007600 <SPI_WaitFifoStateUntilTimeout>
 800774a:	4603      	mov	r3, r0
 800774c:	2b00      	cmp	r3, #0
 800774e:	d007      	beq.n	8007760 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007750:	68fb      	ldr	r3, [r7, #12]
 8007752:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007754:	f043 0220 	orr.w	r2, r3, #32
 8007758:	68fb      	ldr	r3, [r7, #12]
 800775a:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 800775c:	2303      	movs	r3, #3
 800775e:	e046      	b.n	80077ee <SPI_EndRxTxTransaction+0xc2>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007760:	4b25      	ldr	r3, [pc, #148]	@ (80077f8 <SPI_EndRxTxTransaction+0xcc>)
 8007762:	681b      	ldr	r3, [r3, #0]
 8007764:	4a25      	ldr	r2, [pc, #148]	@ (80077fc <SPI_EndRxTxTransaction+0xd0>)
 8007766:	fba2 2303 	umull	r2, r3, r2, r3
 800776a:	0d5b      	lsrs	r3, r3, #21
 800776c:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8007770:	fb02 f303 	mul.w	r3, r2, r3
 8007774:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007776:	68fb      	ldr	r3, [r7, #12]
 8007778:	685b      	ldr	r3, [r3, #4]
 800777a:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800777e:	d112      	bne.n	80077a6 <SPI_EndRxTxTransaction+0x7a>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007780:	687b      	ldr	r3, [r7, #4]
 8007782:	9300      	str	r3, [sp, #0]
 8007784:	68bb      	ldr	r3, [r7, #8]
 8007786:	2200      	movs	r2, #0
 8007788:	2180      	movs	r1, #128	@ 0x80
 800778a:	68f8      	ldr	r0, [r7, #12]
 800778c:	f7ff feb0 	bl	80074f0 <SPI_WaitFlagStateUntilTimeout>
 8007790:	4603      	mov	r3, r0
 8007792:	2b00      	cmp	r3, #0
 8007794:	d016      	beq.n	80077c4 <SPI_EndRxTxTransaction+0x98>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007796:	68fb      	ldr	r3, [r7, #12]
 8007798:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800779a:	f043 0220 	orr.w	r2, r3, #32
 800779e:	68fb      	ldr	r3, [r7, #12]
 80077a0:	661a      	str	r2, [r3, #96]	@ 0x60
      return HAL_TIMEOUT;
 80077a2:	2303      	movs	r3, #3
 80077a4:	e023      	b.n	80077ee <SPI_EndRxTxTransaction+0xc2>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 80077a6:	697b      	ldr	r3, [r7, #20]
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d00a      	beq.n	80077c2 <SPI_EndRxTxTransaction+0x96>
      {
        break;
      }
      count--;
 80077ac:	697b      	ldr	r3, [r7, #20]
 80077ae:	3b01      	subs	r3, #1
 80077b0:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 80077b2:	68fb      	ldr	r3, [r7, #12]
 80077b4:	681b      	ldr	r3, [r3, #0]
 80077b6:	689b      	ldr	r3, [r3, #8]
 80077b8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80077bc:	2b80      	cmp	r3, #128	@ 0x80
 80077be:	d0f2      	beq.n	80077a6 <SPI_EndRxTxTransaction+0x7a>
 80077c0:	e000      	b.n	80077c4 <SPI_EndRxTxTransaction+0x98>
        break;
 80077c2:	bf00      	nop
  }


  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	9300      	str	r3, [sp, #0]
 80077c8:	68bb      	ldr	r3, [r7, #8]
 80077ca:	2200      	movs	r2, #0
 80077cc:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 80077d0:	68f8      	ldr	r0, [r7, #12]
 80077d2:	f7ff ff15 	bl	8007600 <SPI_WaitFifoStateUntilTimeout>
 80077d6:	4603      	mov	r3, r0
 80077d8:	2b00      	cmp	r3, #0
 80077da:	d007      	beq.n	80077ec <SPI_EndRxTxTransaction+0xc0>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80077dc:	68fb      	ldr	r3, [r7, #12]
 80077de:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80077e0:	f043 0220 	orr.w	r2, r3, #32
 80077e4:	68fb      	ldr	r3, [r7, #12]
 80077e6:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 80077e8:	2303      	movs	r3, #3
 80077ea:	e000      	b.n	80077ee <SPI_EndRxTxTransaction+0xc2>
  }

  return HAL_OK;
 80077ec:	2300      	movs	r3, #0
}
 80077ee:	4618      	mov	r0, r3
 80077f0:	3718      	adds	r7, #24
 80077f2:	46bd      	mov	sp, r7
 80077f4:	bd80      	pop	{r7, pc}
 80077f6:	bf00      	nop
 80077f8:	20000004 	.word	0x20000004
 80077fc:	165e9f81 	.word	0x165e9f81

08007800 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8007800:	b580      	push	{r7, lr}
 8007802:	b082      	sub	sp, #8
 8007804:	af00      	add	r7, sp, #0
 8007806:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	2b00      	cmp	r3, #0
 800780c:	d101      	bne.n	8007812 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 800780e:	2301      	movs	r3, #1
 8007810:	e054      	b.n	80078bc <HAL_TIM_Base_Init+0xbc>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007812:	687b      	ldr	r3, [r7, #4]
 8007814:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007818:	b2db      	uxtb	r3, r3
 800781a:	2b00      	cmp	r3, #0
 800781c:	d111      	bne.n	8007842 <HAL_TIM_Base_Init+0x42>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 800781e:	687b      	ldr	r3, [r7, #4]
 8007820:	2200      	movs	r2, #0
 8007822:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
    /* Reset interrupt callbacks to legacy weak callbacks */
    TIM_ResetCallback(htim);
 8007826:	6878      	ldr	r0, [r7, #4]
 8007828:	f001 fa08 	bl	8008c3c <TIM_ResetCallback>

    if (htim->Base_MspInitCallback == NULL)
 800782c:	687b      	ldr	r3, [r7, #4]
 800782e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007830:	2b00      	cmp	r3, #0
 8007832:	d102      	bne.n	800783a <HAL_TIM_Base_Init+0x3a>
    {
      htim->Base_MspInitCallback = HAL_TIM_Base_MspInit;
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	4a23      	ldr	r2, [pc, #140]	@ (80078c4 <HAL_TIM_Base_Init+0xc4>)
 8007838:	64da      	str	r2, [r3, #76]	@ 0x4c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800783e:	6878      	ldr	r0, [r7, #4]
 8007840:	4798      	blx	r3
    HAL_TIM_Base_MspInit(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	2202      	movs	r2, #2
 8007846:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	681a      	ldr	r2, [r3, #0]
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	3304      	adds	r3, #4
 8007852:	4619      	mov	r1, r3
 8007854:	4610      	mov	r0, r2
 8007856:	f000 fe27 	bl	80084a8 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800785a:	687b      	ldr	r3, [r7, #4]
 800785c:	2201      	movs	r2, #1
 800785e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	2201      	movs	r2, #1
 8007866:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800786a:	687b      	ldr	r3, [r7, #4]
 800786c:	2201      	movs	r2, #1
 800786e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007872:	687b      	ldr	r3, [r7, #4]
 8007874:	2201      	movs	r2, #1
 8007876:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800787a:	687b      	ldr	r3, [r7, #4]
 800787c:	2201      	movs	r2, #1
 800787e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007882:	687b      	ldr	r3, [r7, #4]
 8007884:	2201      	movs	r2, #1
 8007886:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800788a:	687b      	ldr	r3, [r7, #4]
 800788c:	2201      	movs	r2, #1
 800788e:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	2201      	movs	r2, #1
 8007896:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 800789a:	687b      	ldr	r3, [r7, #4]
 800789c:	2201      	movs	r2, #1
 800789e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80078a2:	687b      	ldr	r3, [r7, #4]
 80078a4:	2201      	movs	r2, #1
 80078a6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	2201      	movs	r2, #1
 80078ae:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	2201      	movs	r2, #1
 80078b6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80078ba:	2300      	movs	r3, #0
}
 80078bc:	4618      	mov	r0, r3
 80078be:	3708      	adds	r7, #8
 80078c0:	46bd      	mov	sp, r7
 80078c2:	bd80      	pop	{r7, pc}
 80078c4:	080018f5 	.word	0x080018f5

080078c8 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 80078c8:	b580      	push	{r7, lr}
 80078ca:	b082      	sub	sp, #8
 80078cc:	af00      	add	r7, sp, #0
 80078ce:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 80078d0:	687b      	ldr	r3, [r7, #4]
 80078d2:	2b00      	cmp	r3, #0
 80078d4:	d101      	bne.n	80078da <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 80078d6:	2301      	movs	r3, #1
 80078d8:	e054      	b.n	8007984 <HAL_TIM_PWM_Init+0xbc>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 80078da:	687b      	ldr	r3, [r7, #4]
 80078dc:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80078e0:	b2db      	uxtb	r3, r3
 80078e2:	2b00      	cmp	r3, #0
 80078e4:	d111      	bne.n	800790a <HAL_TIM_PWM_Init+0x42>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	2200      	movs	r2, #0
 80078ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
    /* Reset interrupt callbacks to legacy weak callbacks */
    TIM_ResetCallback(htim);
 80078ee:	6878      	ldr	r0, [r7, #4]
 80078f0:	f001 f9a4 	bl	8008c3c <TIM_ResetCallback>

    if (htim->PWM_MspInitCallback == NULL)
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80078f8:	2b00      	cmp	r3, #0
 80078fa:	d102      	bne.n	8007902 <HAL_TIM_PWM_Init+0x3a>
    {
      htim->PWM_MspInitCallback = HAL_TIM_PWM_MspInit;
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4a23      	ldr	r2, [pc, #140]	@ (800798c <HAL_TIM_PWM_Init+0xc4>)
 8007900:	665a      	str	r2, [r3, #100]	@ 0x64
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8007906:	6878      	ldr	r0, [r7, #4]
 8007908:	4798      	blx	r3
    HAL_TIM_PWM_MspInit(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	2202      	movs	r2, #2
 800790e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007912:	687b      	ldr	r3, [r7, #4]
 8007914:	681a      	ldr	r2, [r3, #0]
 8007916:	687b      	ldr	r3, [r7, #4]
 8007918:	3304      	adds	r3, #4
 800791a:	4619      	mov	r1, r3
 800791c:	4610      	mov	r0, r2
 800791e:	f000 fdc3 	bl	80084a8 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007922:	687b      	ldr	r3, [r7, #4]
 8007924:	2201      	movs	r2, #1
 8007926:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	2201      	movs	r2, #1
 800792e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	2201      	movs	r2, #1
 8007936:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	2201      	movs	r2, #1
 800793e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	2201      	movs	r2, #1
 8007946:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800794a:	687b      	ldr	r3, [r7, #4]
 800794c:	2201      	movs	r2, #1
 800794e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	2201      	movs	r2, #1
 8007956:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800795a:	687b      	ldr	r3, [r7, #4]
 800795c:	2201      	movs	r2, #1
 800795e:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007962:	687b      	ldr	r3, [r7, #4]
 8007964:	2201      	movs	r2, #1
 8007966:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800796a:	687b      	ldr	r3, [r7, #4]
 800796c:	2201      	movs	r2, #1
 800796e:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007972:	687b      	ldr	r3, [r7, #4]
 8007974:	2201      	movs	r2, #1
 8007976:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800797a:	687b      	ldr	r3, [r7, #4]
 800797c:	2201      	movs	r2, #1
 800797e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8007982:	2300      	movs	r3, #0
}
 8007984:	4618      	mov	r0, r3
 8007986:	3708      	adds	r7, #8
 8007988:	46bd      	mov	sp, r7
 800798a:	bd80      	pop	{r7, pc}
 800798c:	08007991 	.word	0x08007991

08007990 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8007990:	b480      	push	{r7}
 8007992:	b083      	sub	sp, #12
 8007994:	af00      	add	r7, sp, #0
 8007996:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8007998:	bf00      	nop
 800799a:	370c      	adds	r7, #12
 800799c:	46bd      	mov	sp, r7
 800799e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079a2:	4770      	bx	lr

080079a4 <HAL_TIM_PWM_Start_IT>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 80079a4:	b580      	push	{r7, lr}
 80079a6:	b084      	sub	sp, #16
 80079a8:	af00      	add	r7, sp, #0
 80079aa:	6078      	str	r0, [r7, #4]
 80079ac:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80079ae:	2300      	movs	r3, #0
 80079b0:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_CHANNEL(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80079b2:	683b      	ldr	r3, [r7, #0]
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d109      	bne.n	80079cc <HAL_TIM_PWM_Start_IT+0x28>
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80079be:	b2db      	uxtb	r3, r3
 80079c0:	2b01      	cmp	r3, #1
 80079c2:	bf14      	ite	ne
 80079c4:	2301      	movne	r3, #1
 80079c6:	2300      	moveq	r3, #0
 80079c8:	b2db      	uxtb	r3, r3
 80079ca:	e03c      	b.n	8007a46 <HAL_TIM_PWM_Start_IT+0xa2>
 80079cc:	683b      	ldr	r3, [r7, #0]
 80079ce:	2b04      	cmp	r3, #4
 80079d0:	d109      	bne.n	80079e6 <HAL_TIM_PWM_Start_IT+0x42>
 80079d2:	687b      	ldr	r3, [r7, #4]
 80079d4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80079d8:	b2db      	uxtb	r3, r3
 80079da:	2b01      	cmp	r3, #1
 80079dc:	bf14      	ite	ne
 80079de:	2301      	movne	r3, #1
 80079e0:	2300      	moveq	r3, #0
 80079e2:	b2db      	uxtb	r3, r3
 80079e4:	e02f      	b.n	8007a46 <HAL_TIM_PWM_Start_IT+0xa2>
 80079e6:	683b      	ldr	r3, [r7, #0]
 80079e8:	2b08      	cmp	r3, #8
 80079ea:	d109      	bne.n	8007a00 <HAL_TIM_PWM_Start_IT+0x5c>
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80079f2:	b2db      	uxtb	r3, r3
 80079f4:	2b01      	cmp	r3, #1
 80079f6:	bf14      	ite	ne
 80079f8:	2301      	movne	r3, #1
 80079fa:	2300      	moveq	r3, #0
 80079fc:	b2db      	uxtb	r3, r3
 80079fe:	e022      	b.n	8007a46 <HAL_TIM_PWM_Start_IT+0xa2>
 8007a00:	683b      	ldr	r3, [r7, #0]
 8007a02:	2b0c      	cmp	r3, #12
 8007a04:	d109      	bne.n	8007a1a <HAL_TIM_PWM_Start_IT+0x76>
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007a0c:	b2db      	uxtb	r3, r3
 8007a0e:	2b01      	cmp	r3, #1
 8007a10:	bf14      	ite	ne
 8007a12:	2301      	movne	r3, #1
 8007a14:	2300      	moveq	r3, #0
 8007a16:	b2db      	uxtb	r3, r3
 8007a18:	e015      	b.n	8007a46 <HAL_TIM_PWM_Start_IT+0xa2>
 8007a1a:	683b      	ldr	r3, [r7, #0]
 8007a1c:	2b10      	cmp	r3, #16
 8007a1e:	d109      	bne.n	8007a34 <HAL_TIM_PWM_Start_IT+0x90>
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8007a26:	b2db      	uxtb	r3, r3
 8007a28:	2b01      	cmp	r3, #1
 8007a2a:	bf14      	ite	ne
 8007a2c:	2301      	movne	r3, #1
 8007a2e:	2300      	moveq	r3, #0
 8007a30:	b2db      	uxtb	r3, r3
 8007a32:	e008      	b.n	8007a46 <HAL_TIM_PWM_Start_IT+0xa2>
 8007a34:	687b      	ldr	r3, [r7, #4]
 8007a36:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8007a3a:	b2db      	uxtb	r3, r3
 8007a3c:	2b01      	cmp	r3, #1
 8007a3e:	bf14      	ite	ne
 8007a40:	2301      	movne	r3, #1
 8007a42:	2300      	moveq	r3, #0
 8007a44:	b2db      	uxtb	r3, r3
 8007a46:	2b00      	cmp	r3, #0
 8007a48:	d001      	beq.n	8007a4e <HAL_TIM_PWM_Start_IT+0xaa>
  {
    return HAL_ERROR;
 8007a4a:	2301      	movs	r3, #1
 8007a4c:	e0dd      	b.n	8007c0a <HAL_TIM_PWM_Start_IT+0x266>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8007a4e:	683b      	ldr	r3, [r7, #0]
 8007a50:	2b00      	cmp	r3, #0
 8007a52:	d104      	bne.n	8007a5e <HAL_TIM_PWM_Start_IT+0xba>
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	2202      	movs	r2, #2
 8007a58:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007a5c:	e023      	b.n	8007aa6 <HAL_TIM_PWM_Start_IT+0x102>
 8007a5e:	683b      	ldr	r3, [r7, #0]
 8007a60:	2b04      	cmp	r3, #4
 8007a62:	d104      	bne.n	8007a6e <HAL_TIM_PWM_Start_IT+0xca>
 8007a64:	687b      	ldr	r3, [r7, #4]
 8007a66:	2202      	movs	r2, #2
 8007a68:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007a6c:	e01b      	b.n	8007aa6 <HAL_TIM_PWM_Start_IT+0x102>
 8007a6e:	683b      	ldr	r3, [r7, #0]
 8007a70:	2b08      	cmp	r3, #8
 8007a72:	d104      	bne.n	8007a7e <HAL_TIM_PWM_Start_IT+0xda>
 8007a74:	687b      	ldr	r3, [r7, #4]
 8007a76:	2202      	movs	r2, #2
 8007a78:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007a7c:	e013      	b.n	8007aa6 <HAL_TIM_PWM_Start_IT+0x102>
 8007a7e:	683b      	ldr	r3, [r7, #0]
 8007a80:	2b0c      	cmp	r3, #12
 8007a82:	d104      	bne.n	8007a8e <HAL_TIM_PWM_Start_IT+0xea>
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	2202      	movs	r2, #2
 8007a88:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007a8c:	e00b      	b.n	8007aa6 <HAL_TIM_PWM_Start_IT+0x102>
 8007a8e:	683b      	ldr	r3, [r7, #0]
 8007a90:	2b10      	cmp	r3, #16
 8007a92:	d104      	bne.n	8007a9e <HAL_TIM_PWM_Start_IT+0xfa>
 8007a94:	687b      	ldr	r3, [r7, #4]
 8007a96:	2202      	movs	r2, #2
 8007a98:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007a9c:	e003      	b.n	8007aa6 <HAL_TIM_PWM_Start_IT+0x102>
 8007a9e:	687b      	ldr	r3, [r7, #4]
 8007aa0:	2202      	movs	r2, #2
 8007aa2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43

  switch (Channel)
 8007aa6:	683b      	ldr	r3, [r7, #0]
 8007aa8:	2b0c      	cmp	r3, #12
 8007aaa:	d841      	bhi.n	8007b30 <HAL_TIM_PWM_Start_IT+0x18c>
 8007aac:	a201      	add	r2, pc, #4	@ (adr r2, 8007ab4 <HAL_TIM_PWM_Start_IT+0x110>)
 8007aae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007ab2:	bf00      	nop
 8007ab4:	08007ae9 	.word	0x08007ae9
 8007ab8:	08007b31 	.word	0x08007b31
 8007abc:	08007b31 	.word	0x08007b31
 8007ac0:	08007b31 	.word	0x08007b31
 8007ac4:	08007afb 	.word	0x08007afb
 8007ac8:	08007b31 	.word	0x08007b31
 8007acc:	08007b31 	.word	0x08007b31
 8007ad0:	08007b31 	.word	0x08007b31
 8007ad4:	08007b0d 	.word	0x08007b0d
 8007ad8:	08007b31 	.word	0x08007b31
 8007adc:	08007b31 	.word	0x08007b31
 8007ae0:	08007b31 	.word	0x08007b31
 8007ae4:	08007b1f 	.word	0x08007b1f
  {
    case TIM_CHANNEL_1:
    {
      /* Enable the TIM Capture/Compare 1 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8007ae8:	687b      	ldr	r3, [r7, #4]
 8007aea:	681b      	ldr	r3, [r3, #0]
 8007aec:	68da      	ldr	r2, [r3, #12]
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	681b      	ldr	r3, [r3, #0]
 8007af2:	f042 0202 	orr.w	r2, r2, #2
 8007af6:	60da      	str	r2, [r3, #12]
      break;
 8007af8:	e01d      	b.n	8007b36 <HAL_TIM_PWM_Start_IT+0x192>
    }

    case TIM_CHANNEL_2:
    {
      /* Enable the TIM Capture/Compare 2 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8007afa:	687b      	ldr	r3, [r7, #4]
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	68da      	ldr	r2, [r3, #12]
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	681b      	ldr	r3, [r3, #0]
 8007b04:	f042 0204 	orr.w	r2, r2, #4
 8007b08:	60da      	str	r2, [r3, #12]
      break;
 8007b0a:	e014      	b.n	8007b36 <HAL_TIM_PWM_Start_IT+0x192>
    }

    case TIM_CHANNEL_3:
    {
      /* Enable the TIM Capture/Compare 3 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 8007b0c:	687b      	ldr	r3, [r7, #4]
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	68da      	ldr	r2, [r3, #12]
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	681b      	ldr	r3, [r3, #0]
 8007b16:	f042 0208 	orr.w	r2, r2, #8
 8007b1a:	60da      	str	r2, [r3, #12]
      break;
 8007b1c:	e00b      	b.n	8007b36 <HAL_TIM_PWM_Start_IT+0x192>
    }

    case TIM_CHANNEL_4:
    {
      /* Enable the TIM Capture/Compare 4 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 8007b1e:	687b      	ldr	r3, [r7, #4]
 8007b20:	681b      	ldr	r3, [r3, #0]
 8007b22:	68da      	ldr	r2, [r3, #12]
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	f042 0210 	orr.w	r2, r2, #16
 8007b2c:	60da      	str	r2, [r3, #12]
      break;
 8007b2e:	e002      	b.n	8007b36 <HAL_TIM_PWM_Start_IT+0x192>
    }

    default:
      status = HAL_ERROR;
 8007b30:	2301      	movs	r3, #1
 8007b32:	73fb      	strb	r3, [r7, #15]
      break;
 8007b34:	bf00      	nop
  }

  if (status == HAL_OK)
 8007b36:	7bfb      	ldrb	r3, [r7, #15]
 8007b38:	2b00      	cmp	r3, #0
 8007b3a:	d165      	bne.n	8007c08 <HAL_TIM_PWM_Start_IT+0x264>
  {
    /* Enable the Capture compare channel */
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	681b      	ldr	r3, [r3, #0]
 8007b40:	2201      	movs	r2, #1
 8007b42:	6839      	ldr	r1, [r7, #0]
 8007b44:	4618      	mov	r0, r3
 8007b46:	f001 f853 	bl	8008bf0 <TIM_CCxChannelCmd>

    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007b4a:	687b      	ldr	r3, [r7, #4]
 8007b4c:	681b      	ldr	r3, [r3, #0]
 8007b4e:	4a31      	ldr	r2, [pc, #196]	@ (8007c14 <HAL_TIM_PWM_Start_IT+0x270>)
 8007b50:	4293      	cmp	r3, r2
 8007b52:	d004      	beq.n	8007b5e <HAL_TIM_PWM_Start_IT+0x1ba>
 8007b54:	687b      	ldr	r3, [r7, #4]
 8007b56:	681b      	ldr	r3, [r3, #0]
 8007b58:	4a2f      	ldr	r2, [pc, #188]	@ (8007c18 <HAL_TIM_PWM_Start_IT+0x274>)
 8007b5a:	4293      	cmp	r3, r2
 8007b5c:	d101      	bne.n	8007b62 <HAL_TIM_PWM_Start_IT+0x1be>
 8007b5e:	2301      	movs	r3, #1
 8007b60:	e000      	b.n	8007b64 <HAL_TIM_PWM_Start_IT+0x1c0>
 8007b62:	2300      	movs	r3, #0
 8007b64:	2b00      	cmp	r3, #0
 8007b66:	d007      	beq.n	8007b78 <HAL_TIM_PWM_Start_IT+0x1d4>
    {
      /* Enable the main output */
      __HAL_TIM_MOE_ENABLE(htim);
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007b6e:	687b      	ldr	r3, [r7, #4]
 8007b70:	681b      	ldr	r3, [r3, #0]
 8007b72:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8007b76:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
    if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007b78:	687b      	ldr	r3, [r7, #4]
 8007b7a:	681b      	ldr	r3, [r3, #0]
 8007b7c:	4a25      	ldr	r2, [pc, #148]	@ (8007c14 <HAL_TIM_PWM_Start_IT+0x270>)
 8007b7e:	4293      	cmp	r3, r2
 8007b80:	d022      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007b82:	687b      	ldr	r3, [r7, #4]
 8007b84:	681b      	ldr	r3, [r3, #0]
 8007b86:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007b8a:	d01d      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	4a22      	ldr	r2, [pc, #136]	@ (8007c1c <HAL_TIM_PWM_Start_IT+0x278>)
 8007b92:	4293      	cmp	r3, r2
 8007b94:	d018      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007b96:	687b      	ldr	r3, [r7, #4]
 8007b98:	681b      	ldr	r3, [r3, #0]
 8007b9a:	4a21      	ldr	r2, [pc, #132]	@ (8007c20 <HAL_TIM_PWM_Start_IT+0x27c>)
 8007b9c:	4293      	cmp	r3, r2
 8007b9e:	d013      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007ba0:	687b      	ldr	r3, [r7, #4]
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	4a1f      	ldr	r2, [pc, #124]	@ (8007c24 <HAL_TIM_PWM_Start_IT+0x280>)
 8007ba6:	4293      	cmp	r3, r2
 8007ba8:	d00e      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007baa:	687b      	ldr	r3, [r7, #4]
 8007bac:	681b      	ldr	r3, [r3, #0]
 8007bae:	4a1a      	ldr	r2, [pc, #104]	@ (8007c18 <HAL_TIM_PWM_Start_IT+0x274>)
 8007bb0:	4293      	cmp	r3, r2
 8007bb2:	d009      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007bb4:	687b      	ldr	r3, [r7, #4]
 8007bb6:	681b      	ldr	r3, [r3, #0]
 8007bb8:	4a1b      	ldr	r2, [pc, #108]	@ (8007c28 <HAL_TIM_PWM_Start_IT+0x284>)
 8007bba:	4293      	cmp	r3, r2
 8007bbc:	d004      	beq.n	8007bc8 <HAL_TIM_PWM_Start_IT+0x224>
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	681b      	ldr	r3, [r3, #0]
 8007bc2:	4a1a      	ldr	r2, [pc, #104]	@ (8007c2c <HAL_TIM_PWM_Start_IT+0x288>)
 8007bc4:	4293      	cmp	r3, r2
 8007bc6:	d115      	bne.n	8007bf4 <HAL_TIM_PWM_Start_IT+0x250>
    {
      tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	681b      	ldr	r3, [r3, #0]
 8007bcc:	689a      	ldr	r2, [r3, #8]
 8007bce:	4b18      	ldr	r3, [pc, #96]	@ (8007c30 <HAL_TIM_PWM_Start_IT+0x28c>)
 8007bd0:	4013      	ands	r3, r2
 8007bd2:	60bb      	str	r3, [r7, #8]
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007bd4:	68bb      	ldr	r3, [r7, #8]
 8007bd6:	2b06      	cmp	r3, #6
 8007bd8:	d015      	beq.n	8007c06 <HAL_TIM_PWM_Start_IT+0x262>
 8007bda:	68bb      	ldr	r3, [r7, #8]
 8007bdc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007be0:	d011      	beq.n	8007c06 <HAL_TIM_PWM_Start_IT+0x262>
      {
        __HAL_TIM_ENABLE(htim);
 8007be2:	687b      	ldr	r3, [r7, #4]
 8007be4:	681b      	ldr	r3, [r3, #0]
 8007be6:	681a      	ldr	r2, [r3, #0]
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	681b      	ldr	r3, [r3, #0]
 8007bec:	f042 0201 	orr.w	r2, r2, #1
 8007bf0:	601a      	str	r2, [r3, #0]
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007bf2:	e008      	b.n	8007c06 <HAL_TIM_PWM_Start_IT+0x262>
      }
    }
    else
    {
      __HAL_TIM_ENABLE(htim);
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	681b      	ldr	r3, [r3, #0]
 8007bf8:	681a      	ldr	r2, [r3, #0]
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	681b      	ldr	r3, [r3, #0]
 8007bfe:	f042 0201 	orr.w	r2, r2, #1
 8007c02:	601a      	str	r2, [r3, #0]
 8007c04:	e000      	b.n	8007c08 <HAL_TIM_PWM_Start_IT+0x264>
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007c06:	bf00      	nop
    }
  }

  /* Return function status */
  return status;
 8007c08:	7bfb      	ldrb	r3, [r7, #15]
}
 8007c0a:	4618      	mov	r0, r3
 8007c0c:	3710      	adds	r7, #16
 8007c0e:	46bd      	mov	sp, r7
 8007c10:	bd80      	pop	{r7, pc}
 8007c12:	bf00      	nop
 8007c14:	40010000 	.word	0x40010000
 8007c18:	40010400 	.word	0x40010400
 8007c1c:	40000400 	.word	0x40000400
 8007c20:	40000800 	.word	0x40000800
 8007c24:	40000c00 	.word	0x40000c00
 8007c28:	40014000 	.word	0x40014000
 8007c2c:	40001800 	.word	0x40001800
 8007c30:	00010007 	.word	0x00010007

08007c34 <HAL_TIM_PWM_Stop_IT>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007c34:	b580      	push	{r7, lr}
 8007c36:	b084      	sub	sp, #16
 8007c38:	af00      	add	r7, sp, #0
 8007c3a:	6078      	str	r0, [r7, #4]
 8007c3c:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8007c3e:	2300      	movs	r3, #0
 8007c40:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_CHANNEL(htim->Instance, Channel));

  switch (Channel)
 8007c42:	683b      	ldr	r3, [r7, #0]
 8007c44:	2b0c      	cmp	r3, #12
 8007c46:	d841      	bhi.n	8007ccc <HAL_TIM_PWM_Stop_IT+0x98>
 8007c48:	a201      	add	r2, pc, #4	@ (adr r2, 8007c50 <HAL_TIM_PWM_Stop_IT+0x1c>)
 8007c4a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007c4e:	bf00      	nop
 8007c50:	08007c85 	.word	0x08007c85
 8007c54:	08007ccd 	.word	0x08007ccd
 8007c58:	08007ccd 	.word	0x08007ccd
 8007c5c:	08007ccd 	.word	0x08007ccd
 8007c60:	08007c97 	.word	0x08007c97
 8007c64:	08007ccd 	.word	0x08007ccd
 8007c68:	08007ccd 	.word	0x08007ccd
 8007c6c:	08007ccd 	.word	0x08007ccd
 8007c70:	08007ca9 	.word	0x08007ca9
 8007c74:	08007ccd 	.word	0x08007ccd
 8007c78:	08007ccd 	.word	0x08007ccd
 8007c7c:	08007ccd 	.word	0x08007ccd
 8007c80:	08007cbb 	.word	0x08007cbb
  {
    case TIM_CHANNEL_1:
    {
      /* Disable the TIM Capture/Compare 1 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	681b      	ldr	r3, [r3, #0]
 8007c88:	68da      	ldr	r2, [r3, #12]
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	681b      	ldr	r3, [r3, #0]
 8007c8e:	f022 0202 	bic.w	r2, r2, #2
 8007c92:	60da      	str	r2, [r3, #12]
      break;
 8007c94:	e01d      	b.n	8007cd2 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    case TIM_CHANNEL_2:
    {
      /* Disable the TIM Capture/Compare 2 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8007c96:	687b      	ldr	r3, [r7, #4]
 8007c98:	681b      	ldr	r3, [r3, #0]
 8007c9a:	68da      	ldr	r2, [r3, #12]
 8007c9c:	687b      	ldr	r3, [r7, #4]
 8007c9e:	681b      	ldr	r3, [r3, #0]
 8007ca0:	f022 0204 	bic.w	r2, r2, #4
 8007ca4:	60da      	str	r2, [r3, #12]
      break;
 8007ca6:	e014      	b.n	8007cd2 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    case TIM_CHANNEL_3:
    {
      /* Disable the TIM Capture/Compare 3 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 8007ca8:	687b      	ldr	r3, [r7, #4]
 8007caa:	681b      	ldr	r3, [r3, #0]
 8007cac:	68da      	ldr	r2, [r3, #12]
 8007cae:	687b      	ldr	r3, [r7, #4]
 8007cb0:	681b      	ldr	r3, [r3, #0]
 8007cb2:	f022 0208 	bic.w	r2, r2, #8
 8007cb6:	60da      	str	r2, [r3, #12]
      break;
 8007cb8:	e00b      	b.n	8007cd2 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    case TIM_CHANNEL_4:
    {
      /* Disable the TIM Capture/Compare 4 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 8007cba:	687b      	ldr	r3, [r7, #4]
 8007cbc:	681b      	ldr	r3, [r3, #0]
 8007cbe:	68da      	ldr	r2, [r3, #12]
 8007cc0:	687b      	ldr	r3, [r7, #4]
 8007cc2:	681b      	ldr	r3, [r3, #0]
 8007cc4:	f022 0210 	bic.w	r2, r2, #16
 8007cc8:	60da      	str	r2, [r3, #12]
      break;
 8007cca:	e002      	b.n	8007cd2 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    default:
      status = HAL_ERROR;
 8007ccc:	2301      	movs	r3, #1
 8007cce:	73fb      	strb	r3, [r7, #15]
      break;
 8007cd0:	bf00      	nop
  }

  if (status == HAL_OK)
 8007cd2:	7bfb      	ldrb	r3, [r7, #15]
 8007cd4:	2b00      	cmp	r3, #0
 8007cd6:	d171      	bne.n	8007dbc <HAL_TIM_PWM_Stop_IT+0x188>
  {
    /* Disable the Capture compare channel */
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8007cd8:	687b      	ldr	r3, [r7, #4]
 8007cda:	681b      	ldr	r3, [r3, #0]
 8007cdc:	2200      	movs	r2, #0
 8007cde:	6839      	ldr	r1, [r7, #0]
 8007ce0:	4618      	mov	r0, r3
 8007ce2:	f000 ff85 	bl	8008bf0 <TIM_CCxChannelCmd>

    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8007ce6:	687b      	ldr	r3, [r7, #4]
 8007ce8:	681b      	ldr	r3, [r3, #0]
 8007cea:	4a37      	ldr	r2, [pc, #220]	@ (8007dc8 <HAL_TIM_PWM_Stop_IT+0x194>)
 8007cec:	4293      	cmp	r3, r2
 8007cee:	d004      	beq.n	8007cfa <HAL_TIM_PWM_Stop_IT+0xc6>
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	681b      	ldr	r3, [r3, #0]
 8007cf4:	4a35      	ldr	r2, [pc, #212]	@ (8007dcc <HAL_TIM_PWM_Stop_IT+0x198>)
 8007cf6:	4293      	cmp	r3, r2
 8007cf8:	d101      	bne.n	8007cfe <HAL_TIM_PWM_Stop_IT+0xca>
 8007cfa:	2301      	movs	r3, #1
 8007cfc:	e000      	b.n	8007d00 <HAL_TIM_PWM_Stop_IT+0xcc>
 8007cfe:	2300      	movs	r3, #0
 8007d00:	2b00      	cmp	r3, #0
 8007d02:	d017      	beq.n	8007d34 <HAL_TIM_PWM_Stop_IT+0x100>
    {
      /* Disable the Main Output */
      __HAL_TIM_MOE_DISABLE(htim);
 8007d04:	687b      	ldr	r3, [r7, #4]
 8007d06:	681b      	ldr	r3, [r3, #0]
 8007d08:	6a1a      	ldr	r2, [r3, #32]
 8007d0a:	f241 1311 	movw	r3, #4369	@ 0x1111
 8007d0e:	4013      	ands	r3, r2
 8007d10:	2b00      	cmp	r3, #0
 8007d12:	d10f      	bne.n	8007d34 <HAL_TIM_PWM_Stop_IT+0x100>
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	681b      	ldr	r3, [r3, #0]
 8007d18:	6a1a      	ldr	r2, [r3, #32]
 8007d1a:	f240 4344 	movw	r3, #1092	@ 0x444
 8007d1e:	4013      	ands	r3, r2
 8007d20:	2b00      	cmp	r3, #0
 8007d22:	d107      	bne.n	8007d34 <HAL_TIM_PWM_Stop_IT+0x100>
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007d2a:	687b      	ldr	r3, [r7, #4]
 8007d2c:	681b      	ldr	r3, [r3, #0]
 8007d2e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8007d32:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Disable the Peripheral */
    __HAL_TIM_DISABLE(htim);
 8007d34:	687b      	ldr	r3, [r7, #4]
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	6a1a      	ldr	r2, [r3, #32]
 8007d3a:	f241 1311 	movw	r3, #4369	@ 0x1111
 8007d3e:	4013      	ands	r3, r2
 8007d40:	2b00      	cmp	r3, #0
 8007d42:	d10f      	bne.n	8007d64 <HAL_TIM_PWM_Stop_IT+0x130>
 8007d44:	687b      	ldr	r3, [r7, #4]
 8007d46:	681b      	ldr	r3, [r3, #0]
 8007d48:	6a1a      	ldr	r2, [r3, #32]
 8007d4a:	f240 4344 	movw	r3, #1092	@ 0x444
 8007d4e:	4013      	ands	r3, r2
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d107      	bne.n	8007d64 <HAL_TIM_PWM_Stop_IT+0x130>
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	681b      	ldr	r3, [r3, #0]
 8007d58:	681a      	ldr	r2, [r3, #0]
 8007d5a:	687b      	ldr	r3, [r7, #4]
 8007d5c:	681b      	ldr	r3, [r3, #0]
 8007d5e:	f022 0201 	bic.w	r2, r2, #1
 8007d62:	601a      	str	r2, [r3, #0]

    /* Set the TIM channel state */
    TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 8007d64:	683b      	ldr	r3, [r7, #0]
 8007d66:	2b00      	cmp	r3, #0
 8007d68:	d104      	bne.n	8007d74 <HAL_TIM_PWM_Stop_IT+0x140>
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	2201      	movs	r2, #1
 8007d6e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007d72:	e023      	b.n	8007dbc <HAL_TIM_PWM_Stop_IT+0x188>
 8007d74:	683b      	ldr	r3, [r7, #0]
 8007d76:	2b04      	cmp	r3, #4
 8007d78:	d104      	bne.n	8007d84 <HAL_TIM_PWM_Stop_IT+0x150>
 8007d7a:	687b      	ldr	r3, [r7, #4]
 8007d7c:	2201      	movs	r2, #1
 8007d7e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007d82:	e01b      	b.n	8007dbc <HAL_TIM_PWM_Stop_IT+0x188>
 8007d84:	683b      	ldr	r3, [r7, #0]
 8007d86:	2b08      	cmp	r3, #8
 8007d88:	d104      	bne.n	8007d94 <HAL_TIM_PWM_Stop_IT+0x160>
 8007d8a:	687b      	ldr	r3, [r7, #4]
 8007d8c:	2201      	movs	r2, #1
 8007d8e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007d92:	e013      	b.n	8007dbc <HAL_TIM_PWM_Stop_IT+0x188>
 8007d94:	683b      	ldr	r3, [r7, #0]
 8007d96:	2b0c      	cmp	r3, #12
 8007d98:	d104      	bne.n	8007da4 <HAL_TIM_PWM_Stop_IT+0x170>
 8007d9a:	687b      	ldr	r3, [r7, #4]
 8007d9c:	2201      	movs	r2, #1
 8007d9e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007da2:	e00b      	b.n	8007dbc <HAL_TIM_PWM_Stop_IT+0x188>
 8007da4:	683b      	ldr	r3, [r7, #0]
 8007da6:	2b10      	cmp	r3, #16
 8007da8:	d104      	bne.n	8007db4 <HAL_TIM_PWM_Stop_IT+0x180>
 8007daa:	687b      	ldr	r3, [r7, #4]
 8007dac:	2201      	movs	r2, #1
 8007dae:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007db2:	e003      	b.n	8007dbc <HAL_TIM_PWM_Stop_IT+0x188>
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	2201      	movs	r2, #1
 8007db8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  }

  /* Return function status */
  return status;
 8007dbc:	7bfb      	ldrb	r3, [r7, #15]
}
 8007dbe:	4618      	mov	r0, r3
 8007dc0:	3710      	adds	r7, #16
 8007dc2:	46bd      	mov	sp, r7
 8007dc4:	bd80      	pop	{r7, pc}
 8007dc6:	bf00      	nop
 8007dc8:	40010000 	.word	0x40010000
 8007dcc:	40010400 	.word	0x40010400

08007dd0 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8007dd0:	b580      	push	{r7, lr}
 8007dd2:	b084      	sub	sp, #16
 8007dd4:	af00      	add	r7, sp, #0
 8007dd6:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	681b      	ldr	r3, [r3, #0]
 8007ddc:	68db      	ldr	r3, [r3, #12]
 8007dde:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	681b      	ldr	r3, [r3, #0]
 8007de4:	691b      	ldr	r3, [r3, #16]
 8007de6:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 8007de8:	68bb      	ldr	r3, [r7, #8]
 8007dea:	f003 0302 	and.w	r3, r3, #2
 8007dee:	2b00      	cmp	r3, #0
 8007df0:	d026      	beq.n	8007e40 <HAL_TIM_IRQHandler+0x70>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8007df2:	68fb      	ldr	r3, [r7, #12]
 8007df4:	f003 0302 	and.w	r3, r3, #2
 8007df8:	2b00      	cmp	r3, #0
 8007dfa:	d021      	beq.n	8007e40 <HAL_TIM_IRQHandler+0x70>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8007dfc:	687b      	ldr	r3, [r7, #4]
 8007dfe:	681b      	ldr	r3, [r3, #0]
 8007e00:	f06f 0202 	mvn.w	r2, #2
 8007e04:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8007e06:	687b      	ldr	r3, [r7, #4]
 8007e08:	2201      	movs	r2, #1
 8007e0a:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8007e0c:	687b      	ldr	r3, [r7, #4]
 8007e0e:	681b      	ldr	r3, [r3, #0]
 8007e10:	699b      	ldr	r3, [r3, #24]
 8007e12:	f003 0303 	and.w	r3, r3, #3
 8007e16:	2b00      	cmp	r3, #0
 8007e18:	d005      	beq.n	8007e26 <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
 8007e1a:	687b      	ldr	r3, [r7, #4]
 8007e1c:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007e20:	6878      	ldr	r0, [r7, #4]
 8007e22:	4798      	blx	r3
 8007e24:	e009      	b.n	8007e3a <HAL_TIM_IRQHandler+0x6a>
        }
        /* Output compare event */
        else
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
 8007e26:	687b      	ldr	r3, [r7, #4]
 8007e28:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8007e2c:	6878      	ldr	r0, [r7, #4]
 8007e2e:	4798      	blx	r3
          htim->PWM_PulseFinishedCallback(htim);
 8007e30:	687b      	ldr	r3, [r7, #4]
 8007e32:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8007e36:	6878      	ldr	r0, [r7, #4]
 8007e38:	4798      	blx	r3
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e3a:	687b      	ldr	r3, [r7, #4]
 8007e3c:	2200      	movs	r2, #0
 8007e3e:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 8007e40:	68bb      	ldr	r3, [r7, #8]
 8007e42:	f003 0304 	and.w	r3, r3, #4
 8007e46:	2b00      	cmp	r3, #0
 8007e48:	d026      	beq.n	8007e98 <HAL_TIM_IRQHandler+0xc8>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	f003 0304 	and.w	r3, r3, #4
 8007e50:	2b00      	cmp	r3, #0
 8007e52:	d021      	beq.n	8007e98 <HAL_TIM_IRQHandler+0xc8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007e54:	687b      	ldr	r3, [r7, #4]
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f06f 0204 	mvn.w	r2, #4
 8007e5c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8007e5e:	687b      	ldr	r3, [r7, #4]
 8007e60:	2202      	movs	r2, #2
 8007e62:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	681b      	ldr	r3, [r3, #0]
 8007e68:	699b      	ldr	r3, [r3, #24]
 8007e6a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007e6e:	2b00      	cmp	r3, #0
 8007e70:	d005      	beq.n	8007e7e <HAL_TIM_IRQHandler+0xae>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
 8007e72:	687b      	ldr	r3, [r7, #4]
 8007e74:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007e78:	6878      	ldr	r0, [r7, #4]
 8007e7a:	4798      	blx	r3
 8007e7c:	e009      	b.n	8007e92 <HAL_TIM_IRQHandler+0xc2>
      }
      /* Output compare event */
      else
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8007e84:	6878      	ldr	r0, [r7, #4]
 8007e86:	4798      	blx	r3
        htim->PWM_PulseFinishedCallback(htim);
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8007e8e:	6878      	ldr	r0, [r7, #4]
 8007e90:	4798      	blx	r3
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	2200      	movs	r2, #0
 8007e96:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007e98:	68bb      	ldr	r3, [r7, #8]
 8007e9a:	f003 0308 	and.w	r3, r3, #8
 8007e9e:	2b00      	cmp	r3, #0
 8007ea0:	d026      	beq.n	8007ef0 <HAL_TIM_IRQHandler+0x120>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007ea2:	68fb      	ldr	r3, [r7, #12]
 8007ea4:	f003 0308 	and.w	r3, r3, #8
 8007ea8:	2b00      	cmp	r3, #0
 8007eaa:	d021      	beq.n	8007ef0 <HAL_TIM_IRQHandler+0x120>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	f06f 0208 	mvn.w	r2, #8
 8007eb4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007eb6:	687b      	ldr	r3, [r7, #4]
 8007eb8:	2204      	movs	r2, #4
 8007eba:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	681b      	ldr	r3, [r3, #0]
 8007ec0:	69db      	ldr	r3, [r3, #28]
 8007ec2:	f003 0303 	and.w	r3, r3, #3
 8007ec6:	2b00      	cmp	r3, #0
 8007ec8:	d005      	beq.n	8007ed6 <HAL_TIM_IRQHandler+0x106>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007ed0:	6878      	ldr	r0, [r7, #4]
 8007ed2:	4798      	blx	r3
 8007ed4:	e009      	b.n	8007eea <HAL_TIM_IRQHandler+0x11a>
      }
      /* Output compare event */
      else
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
 8007ed6:	687b      	ldr	r3, [r7, #4]
 8007ed8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8007edc:	6878      	ldr	r0, [r7, #4]
 8007ede:	4798      	blx	r3
        htim->PWM_PulseFinishedCallback(htim);
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8007ee6:	6878      	ldr	r0, [r7, #4]
 8007ee8:	4798      	blx	r3
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007eea:	687b      	ldr	r3, [r7, #4]
 8007eec:	2200      	movs	r2, #0
 8007eee:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8007ef0:	68bb      	ldr	r3, [r7, #8]
 8007ef2:	f003 0310 	and.w	r3, r3, #16
 8007ef6:	2b00      	cmp	r3, #0
 8007ef8:	d026      	beq.n	8007f48 <HAL_TIM_IRQHandler+0x178>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 8007efa:	68fb      	ldr	r3, [r7, #12]
 8007efc:	f003 0310 	and.w	r3, r3, #16
 8007f00:	2b00      	cmp	r3, #0
 8007f02:	d021      	beq.n	8007f48 <HAL_TIM_IRQHandler+0x178>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8007f04:	687b      	ldr	r3, [r7, #4]
 8007f06:	681b      	ldr	r3, [r3, #0]
 8007f08:	f06f 0210 	mvn.w	r2, #16
 8007f0c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	2208      	movs	r2, #8
 8007f12:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8007f14:	687b      	ldr	r3, [r7, #4]
 8007f16:	681b      	ldr	r3, [r3, #0]
 8007f18:	69db      	ldr	r3, [r3, #28]
 8007f1a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007f1e:	2b00      	cmp	r3, #0
 8007f20:	d005      	beq.n	8007f2e <HAL_TIM_IRQHandler+0x15e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
 8007f22:	687b      	ldr	r3, [r7, #4]
 8007f24:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8007f28:	6878      	ldr	r0, [r7, #4]
 8007f2a:	4798      	blx	r3
 8007f2c:	e009      	b.n	8007f42 <HAL_TIM_IRQHandler+0x172>
      }
      /* Output compare event */
      else
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8007f34:	6878      	ldr	r0, [r7, #4]
 8007f36:	4798      	blx	r3
        htim->PWM_PulseFinishedCallback(htim);
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8007f3e:	6878      	ldr	r0, [r7, #4]
 8007f40:	4798      	blx	r3
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	2200      	movs	r2, #0
 8007f46:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 8007f48:	68bb      	ldr	r3, [r7, #8]
 8007f4a:	f003 0301 	and.w	r3, r3, #1
 8007f4e:	2b00      	cmp	r3, #0
 8007f50:	d00e      	beq.n	8007f70 <HAL_TIM_IRQHandler+0x1a0>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 8007f52:	68fb      	ldr	r3, [r7, #12]
 8007f54:	f003 0301 	and.w	r3, r3, #1
 8007f58:	2b00      	cmp	r3, #0
 8007f5a:	d009      	beq.n	8007f70 <HAL_TIM_IRQHandler+0x1a0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007f5c:	687b      	ldr	r3, [r7, #4]
 8007f5e:	681b      	ldr	r3, [r3, #0]
 8007f60:	f06f 0201 	mvn.w	r2, #1
 8007f64:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
 8007f66:	687b      	ldr	r3, [r7, #4]
 8007f68:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007f6c:	6878      	ldr	r0, [r7, #4]
 8007f6e:	4798      	blx	r3
      HAL_TIM_PeriodElapsedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8007f70:	68bb      	ldr	r3, [r7, #8]
 8007f72:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	d104      	bne.n	8007f84 <HAL_TIM_IRQHandler+0x1b4>
      ((itflag & (TIM_FLAG_SYSTEM_BREAK)) == (TIM_FLAG_SYSTEM_BREAK)))
 8007f7a:	68bb      	ldr	r3, [r7, #8]
 8007f7c:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 8007f80:	2b00      	cmp	r3, #0
 8007f82:	d00e      	beq.n	8007fa2 <HAL_TIM_IRQHandler+0x1d2>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007f84:	68fb      	ldr	r3, [r7, #12]
 8007f86:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007f8a:	2b00      	cmp	r3, #0
 8007f8c:	d009      	beq.n	8007fa2 <HAL_TIM_IRQHandler+0x1d2>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	681b      	ldr	r3, [r3, #0]
 8007f92:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 8007f96:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
 8007f98:	687b      	ldr	r3, [r7, #4]
 8007f9a:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8007f9e:	6878      	ldr	r0, [r7, #4]
 8007fa0:	4798      	blx	r3
      HAL_TIMEx_BreakCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8007fa2:	68bb      	ldr	r3, [r7, #8]
 8007fa4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007fa8:	2b00      	cmp	r3, #0
 8007faa:	d00e      	beq.n	8007fca <HAL_TIM_IRQHandler+0x1fa>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8007fac:	68fb      	ldr	r3, [r7, #12]
 8007fae:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007fb2:	2b00      	cmp	r3, #0
 8007fb4:	d009      	beq.n	8007fca <HAL_TIM_IRQHandler+0x1fa>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 8007fb6:	687b      	ldr	r3, [r7, #4]
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8007fbe:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
 8007fc0:	687b      	ldr	r3, [r7, #4]
 8007fc2:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 8007fc6:	6878      	ldr	r0, [r7, #4]
 8007fc8:	4798      	blx	r3
      HAL_TIMEx_Break2Callback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007fca:	68bb      	ldr	r3, [r7, #8]
 8007fcc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007fd0:	2b00      	cmp	r3, #0
 8007fd2:	d00e      	beq.n	8007ff2 <HAL_TIM_IRQHandler+0x222>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007fd4:	68fb      	ldr	r3, [r7, #12]
 8007fd6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007fda:	2b00      	cmp	r3, #0
 8007fdc:	d009      	beq.n	8007ff2 <HAL_TIM_IRQHandler+0x222>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8007fde:	687b      	ldr	r3, [r7, #4]
 8007fe0:	681b      	ldr	r3, [r3, #0]
 8007fe2:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007fe6:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007fee:	6878      	ldr	r0, [r7, #4]
 8007ff0:	4798      	blx	r3
      HAL_TIM_TriggerCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8007ff2:	68bb      	ldr	r3, [r7, #8]
 8007ff4:	f003 0320 	and.w	r3, r3, #32
 8007ff8:	2b00      	cmp	r3, #0
 8007ffa:	d00e      	beq.n	800801a <HAL_TIM_IRQHandler+0x24a>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007ffc:	68fb      	ldr	r3, [r7, #12]
 8007ffe:	f003 0320 	and.w	r3, r3, #32
 8008002:	2b00      	cmp	r3, #0
 8008004:	d009      	beq.n	800801a <HAL_TIM_IRQHandler+0x24a>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8008006:	687b      	ldr	r3, [r7, #4]
 8008008:	681b      	ldr	r3, [r3, #0]
 800800a:	f06f 0220 	mvn.w	r2, #32
 800800e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
 8008010:	687b      	ldr	r3, [r7, #4]
 8008012:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8008016:	6878      	ldr	r0, [r7, #4]
 8008018:	4798      	blx	r3
#else
      HAL_TIMEx_CommutCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800801a:	bf00      	nop
 800801c:	3710      	adds	r7, #16
 800801e:	46bd      	mov	sp, r7
 8008020:	bd80      	pop	{r7, pc}
	...

08008024 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8008024:	b580      	push	{r7, lr}
 8008026:	b086      	sub	sp, #24
 8008028:	af00      	add	r7, sp, #0
 800802a:	60f8      	str	r0, [r7, #12]
 800802c:	60b9      	str	r1, [r7, #8]
 800802e:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8008030:	2300      	movs	r3, #0
 8008032:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8008034:	68fb      	ldr	r3, [r7, #12]
 8008036:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800803a:	2b01      	cmp	r3, #1
 800803c:	d101      	bne.n	8008042 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800803e:	2302      	movs	r3, #2
 8008040:	e0ff      	b.n	8008242 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8008042:	68fb      	ldr	r3, [r7, #12]
 8008044:	2201      	movs	r2, #1
 8008046:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 800804a:	687b      	ldr	r3, [r7, #4]
 800804c:	2b14      	cmp	r3, #20
 800804e:	f200 80f0 	bhi.w	8008232 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8008052:	a201      	add	r2, pc, #4	@ (adr r2, 8008058 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8008054:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008058:	080080ad 	.word	0x080080ad
 800805c:	08008233 	.word	0x08008233
 8008060:	08008233 	.word	0x08008233
 8008064:	08008233 	.word	0x08008233
 8008068:	080080ed 	.word	0x080080ed
 800806c:	08008233 	.word	0x08008233
 8008070:	08008233 	.word	0x08008233
 8008074:	08008233 	.word	0x08008233
 8008078:	0800812f 	.word	0x0800812f
 800807c:	08008233 	.word	0x08008233
 8008080:	08008233 	.word	0x08008233
 8008084:	08008233 	.word	0x08008233
 8008088:	0800816f 	.word	0x0800816f
 800808c:	08008233 	.word	0x08008233
 8008090:	08008233 	.word	0x08008233
 8008094:	08008233 	.word	0x08008233
 8008098:	080081b1 	.word	0x080081b1
 800809c:	08008233 	.word	0x08008233
 80080a0:	08008233 	.word	0x08008233
 80080a4:	08008233 	.word	0x08008233
 80080a8:	080081f1 	.word	0x080081f1
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80080ac:	68fb      	ldr	r3, [r7, #12]
 80080ae:	681b      	ldr	r3, [r3, #0]
 80080b0:	68b9      	ldr	r1, [r7, #8]
 80080b2:	4618      	mov	r0, r3
 80080b4:	f000 faa4 	bl	8008600 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80080b8:	68fb      	ldr	r3, [r7, #12]
 80080ba:	681b      	ldr	r3, [r3, #0]
 80080bc:	699a      	ldr	r2, [r3, #24]
 80080be:	68fb      	ldr	r3, [r7, #12]
 80080c0:	681b      	ldr	r3, [r3, #0]
 80080c2:	f042 0208 	orr.w	r2, r2, #8
 80080c6:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 80080c8:	68fb      	ldr	r3, [r7, #12]
 80080ca:	681b      	ldr	r3, [r3, #0]
 80080cc:	699a      	ldr	r2, [r3, #24]
 80080ce:	68fb      	ldr	r3, [r7, #12]
 80080d0:	681b      	ldr	r3, [r3, #0]
 80080d2:	f022 0204 	bic.w	r2, r2, #4
 80080d6:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 80080d8:	68fb      	ldr	r3, [r7, #12]
 80080da:	681b      	ldr	r3, [r3, #0]
 80080dc:	6999      	ldr	r1, [r3, #24]
 80080de:	68bb      	ldr	r3, [r7, #8]
 80080e0:	691a      	ldr	r2, [r3, #16]
 80080e2:	68fb      	ldr	r3, [r7, #12]
 80080e4:	681b      	ldr	r3, [r3, #0]
 80080e6:	430a      	orrs	r2, r1
 80080e8:	619a      	str	r2, [r3, #24]
      break;
 80080ea:	e0a5      	b.n	8008238 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 80080ec:	68fb      	ldr	r3, [r7, #12]
 80080ee:	681b      	ldr	r3, [r3, #0]
 80080f0:	68b9      	ldr	r1, [r7, #8]
 80080f2:	4618      	mov	r0, r3
 80080f4:	f000 faf6 	bl	80086e4 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 80080f8:	68fb      	ldr	r3, [r7, #12]
 80080fa:	681b      	ldr	r3, [r3, #0]
 80080fc:	699a      	ldr	r2, [r3, #24]
 80080fe:	68fb      	ldr	r3, [r7, #12]
 8008100:	681b      	ldr	r3, [r3, #0]
 8008102:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008106:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 8008108:	68fb      	ldr	r3, [r7, #12]
 800810a:	681b      	ldr	r3, [r3, #0]
 800810c:	699a      	ldr	r2, [r3, #24]
 800810e:	68fb      	ldr	r3, [r7, #12]
 8008110:	681b      	ldr	r3, [r3, #0]
 8008112:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008116:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8008118:	68fb      	ldr	r3, [r7, #12]
 800811a:	681b      	ldr	r3, [r3, #0]
 800811c:	6999      	ldr	r1, [r3, #24]
 800811e:	68bb      	ldr	r3, [r7, #8]
 8008120:	691b      	ldr	r3, [r3, #16]
 8008122:	021a      	lsls	r2, r3, #8
 8008124:	68fb      	ldr	r3, [r7, #12]
 8008126:	681b      	ldr	r3, [r3, #0]
 8008128:	430a      	orrs	r2, r1
 800812a:	619a      	str	r2, [r3, #24]
      break;
 800812c:	e084      	b.n	8008238 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800812e:	68fb      	ldr	r3, [r7, #12]
 8008130:	681b      	ldr	r3, [r3, #0]
 8008132:	68b9      	ldr	r1, [r7, #8]
 8008134:	4618      	mov	r0, r3
 8008136:	f000 fb4d 	bl	80087d4 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800813a:	68fb      	ldr	r3, [r7, #12]
 800813c:	681b      	ldr	r3, [r3, #0]
 800813e:	69da      	ldr	r2, [r3, #28]
 8008140:	68fb      	ldr	r3, [r7, #12]
 8008142:	681b      	ldr	r3, [r3, #0]
 8008144:	f042 0208 	orr.w	r2, r2, #8
 8008148:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800814a:	68fb      	ldr	r3, [r7, #12]
 800814c:	681b      	ldr	r3, [r3, #0]
 800814e:	69da      	ldr	r2, [r3, #28]
 8008150:	68fb      	ldr	r3, [r7, #12]
 8008152:	681b      	ldr	r3, [r3, #0]
 8008154:	f022 0204 	bic.w	r2, r2, #4
 8008158:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800815a:	68fb      	ldr	r3, [r7, #12]
 800815c:	681b      	ldr	r3, [r3, #0]
 800815e:	69d9      	ldr	r1, [r3, #28]
 8008160:	68bb      	ldr	r3, [r7, #8]
 8008162:	691a      	ldr	r2, [r3, #16]
 8008164:	68fb      	ldr	r3, [r7, #12]
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	430a      	orrs	r2, r1
 800816a:	61da      	str	r2, [r3, #28]
      break;
 800816c:	e064      	b.n	8008238 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800816e:	68fb      	ldr	r3, [r7, #12]
 8008170:	681b      	ldr	r3, [r3, #0]
 8008172:	68b9      	ldr	r1, [r7, #8]
 8008174:	4618      	mov	r0, r3
 8008176:	f000 fba3 	bl	80088c0 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800817a:	68fb      	ldr	r3, [r7, #12]
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	69da      	ldr	r2, [r3, #28]
 8008180:	68fb      	ldr	r3, [r7, #12]
 8008182:	681b      	ldr	r3, [r3, #0]
 8008184:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8008188:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800818a:	68fb      	ldr	r3, [r7, #12]
 800818c:	681b      	ldr	r3, [r3, #0]
 800818e:	69da      	ldr	r2, [r3, #28]
 8008190:	68fb      	ldr	r3, [r7, #12]
 8008192:	681b      	ldr	r3, [r3, #0]
 8008194:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8008198:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800819a:	68fb      	ldr	r3, [r7, #12]
 800819c:	681b      	ldr	r3, [r3, #0]
 800819e:	69d9      	ldr	r1, [r3, #28]
 80081a0:	68bb      	ldr	r3, [r7, #8]
 80081a2:	691b      	ldr	r3, [r3, #16]
 80081a4:	021a      	lsls	r2, r3, #8
 80081a6:	68fb      	ldr	r3, [r7, #12]
 80081a8:	681b      	ldr	r3, [r3, #0]
 80081aa:	430a      	orrs	r2, r1
 80081ac:	61da      	str	r2, [r3, #28]
      break;
 80081ae:	e043      	b.n	8008238 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 80081b0:	68fb      	ldr	r3, [r7, #12]
 80081b2:	681b      	ldr	r3, [r3, #0]
 80081b4:	68b9      	ldr	r1, [r7, #8]
 80081b6:	4618      	mov	r0, r3
 80081b8:	f000 fbda 	bl	8008970 <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 80081bc:	68fb      	ldr	r3, [r7, #12]
 80081be:	681b      	ldr	r3, [r3, #0]
 80081c0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80081c2:	68fb      	ldr	r3, [r7, #12]
 80081c4:	681b      	ldr	r3, [r3, #0]
 80081c6:	f042 0208 	orr.w	r2, r2, #8
 80081ca:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 80081cc:	68fb      	ldr	r3, [r7, #12]
 80081ce:	681b      	ldr	r3, [r3, #0]
 80081d0:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80081d2:	68fb      	ldr	r3, [r7, #12]
 80081d4:	681b      	ldr	r3, [r3, #0]
 80081d6:	f022 0204 	bic.w	r2, r2, #4
 80081da:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 80081dc:	68fb      	ldr	r3, [r7, #12]
 80081de:	681b      	ldr	r3, [r3, #0]
 80081e0:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80081e2:	68bb      	ldr	r3, [r7, #8]
 80081e4:	691a      	ldr	r2, [r3, #16]
 80081e6:	68fb      	ldr	r3, [r7, #12]
 80081e8:	681b      	ldr	r3, [r3, #0]
 80081ea:	430a      	orrs	r2, r1
 80081ec:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
 80081ee:	e023      	b.n	8008238 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 80081f0:	68fb      	ldr	r3, [r7, #12]
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	68b9      	ldr	r1, [r7, #8]
 80081f6:	4618      	mov	r0, r3
 80081f8:	f000 fc0c 	bl	8008a14 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 80081fc:	68fb      	ldr	r3, [r7, #12]
 80081fe:	681b      	ldr	r3, [r3, #0]
 8008200:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008202:	68fb      	ldr	r3, [r7, #12]
 8008204:	681b      	ldr	r3, [r3, #0]
 8008206:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800820a:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 800820c:	68fb      	ldr	r3, [r7, #12]
 800820e:	681b      	ldr	r3, [r3, #0]
 8008210:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8008212:	68fb      	ldr	r3, [r7, #12]
 8008214:	681b      	ldr	r3, [r3, #0]
 8008216:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800821a:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800821c:	68fb      	ldr	r3, [r7, #12]
 800821e:	681b      	ldr	r3, [r3, #0]
 8008220:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8008222:	68bb      	ldr	r3, [r7, #8]
 8008224:	691b      	ldr	r3, [r3, #16]
 8008226:	021a      	lsls	r2, r3, #8
 8008228:	68fb      	ldr	r3, [r7, #12]
 800822a:	681b      	ldr	r3, [r3, #0]
 800822c:	430a      	orrs	r2, r1
 800822e:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
 8008230:	e002      	b.n	8008238 <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 8008232:	2301      	movs	r3, #1
 8008234:	75fb      	strb	r3, [r7, #23]
      break;
 8008236:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 8008238:	68fb      	ldr	r3, [r7, #12]
 800823a:	2200      	movs	r2, #0
 800823c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8008240:	7dfb      	ldrb	r3, [r7, #23]
}
 8008242:	4618      	mov	r0, r3
 8008244:	3718      	adds	r7, #24
 8008246:	46bd      	mov	sp, r7
 8008248:	bd80      	pop	{r7, pc}
 800824a:	bf00      	nop

0800824c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800824c:	b580      	push	{r7, lr}
 800824e:	b084      	sub	sp, #16
 8008250:	af00      	add	r7, sp, #0
 8008252:	6078      	str	r0, [r7, #4]
 8008254:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008256:	2300      	movs	r3, #0
 8008258:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800825a:	687b      	ldr	r3, [r7, #4]
 800825c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008260:	2b01      	cmp	r3, #1
 8008262:	d101      	bne.n	8008268 <HAL_TIM_ConfigClockSource+0x1c>
 8008264:	2302      	movs	r3, #2
 8008266:	e0b4      	b.n	80083d2 <HAL_TIM_ConfigClockSource+0x186>
 8008268:	687b      	ldr	r3, [r7, #4]
 800826a:	2201      	movs	r2, #1
 800826c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8008270:	687b      	ldr	r3, [r7, #4]
 8008272:	2202      	movs	r2, #2
 8008274:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	681b      	ldr	r3, [r3, #0]
 800827c:	689b      	ldr	r3, [r3, #8]
 800827e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8008280:	68ba      	ldr	r2, [r7, #8]
 8008282:	4b56      	ldr	r3, [pc, #344]	@ (80083dc <HAL_TIM_ConfigClockSource+0x190>)
 8008284:	4013      	ands	r3, r2
 8008286:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008288:	68bb      	ldr	r3, [r7, #8]
 800828a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800828e:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8008290:	687b      	ldr	r3, [r7, #4]
 8008292:	681b      	ldr	r3, [r3, #0]
 8008294:	68ba      	ldr	r2, [r7, #8]
 8008296:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8008298:	683b      	ldr	r3, [r7, #0]
 800829a:	681b      	ldr	r3, [r3, #0]
 800829c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80082a0:	d03e      	beq.n	8008320 <HAL_TIM_ConfigClockSource+0xd4>
 80082a2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80082a6:	f200 8087 	bhi.w	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082aa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80082ae:	f000 8086 	beq.w	80083be <HAL_TIM_ConfigClockSource+0x172>
 80082b2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80082b6:	d87f      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082b8:	2b70      	cmp	r3, #112	@ 0x70
 80082ba:	d01a      	beq.n	80082f2 <HAL_TIM_ConfigClockSource+0xa6>
 80082bc:	2b70      	cmp	r3, #112	@ 0x70
 80082be:	d87b      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082c0:	2b60      	cmp	r3, #96	@ 0x60
 80082c2:	d050      	beq.n	8008366 <HAL_TIM_ConfigClockSource+0x11a>
 80082c4:	2b60      	cmp	r3, #96	@ 0x60
 80082c6:	d877      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082c8:	2b50      	cmp	r3, #80	@ 0x50
 80082ca:	d03c      	beq.n	8008346 <HAL_TIM_ConfigClockSource+0xfa>
 80082cc:	2b50      	cmp	r3, #80	@ 0x50
 80082ce:	d873      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082d0:	2b40      	cmp	r3, #64	@ 0x40
 80082d2:	d058      	beq.n	8008386 <HAL_TIM_ConfigClockSource+0x13a>
 80082d4:	2b40      	cmp	r3, #64	@ 0x40
 80082d6:	d86f      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082d8:	2b30      	cmp	r3, #48	@ 0x30
 80082da:	d064      	beq.n	80083a6 <HAL_TIM_ConfigClockSource+0x15a>
 80082dc:	2b30      	cmp	r3, #48	@ 0x30
 80082de:	d86b      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082e0:	2b20      	cmp	r3, #32
 80082e2:	d060      	beq.n	80083a6 <HAL_TIM_ConfigClockSource+0x15a>
 80082e4:	2b20      	cmp	r3, #32
 80082e6:	d867      	bhi.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
 80082e8:	2b00      	cmp	r3, #0
 80082ea:	d05c      	beq.n	80083a6 <HAL_TIM_ConfigClockSource+0x15a>
 80082ec:	2b10      	cmp	r3, #16
 80082ee:	d05a      	beq.n	80083a6 <HAL_TIM_ConfigClockSource+0x15a>
 80082f0:	e062      	b.n	80083b8 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80082f2:	687b      	ldr	r3, [r7, #4]
 80082f4:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80082f6:	683b      	ldr	r3, [r7, #0]
 80082f8:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80082fa:	683b      	ldr	r3, [r7, #0]
 80082fc:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80082fe:	683b      	ldr	r3, [r7, #0]
 8008300:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8008302:	f000 fc55 	bl	8008bb0 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 8008306:	687b      	ldr	r3, [r7, #4]
 8008308:	681b      	ldr	r3, [r3, #0]
 800830a:	689b      	ldr	r3, [r3, #8]
 800830c:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 800830e:	68bb      	ldr	r3, [r7, #8]
 8008310:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8008314:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	681b      	ldr	r3, [r3, #0]
 800831a:	68ba      	ldr	r2, [r7, #8]
 800831c:	609a      	str	r2, [r3, #8]
      break;
 800831e:	e04f      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8008324:	683b      	ldr	r3, [r7, #0]
 8008326:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 8008328:	683b      	ldr	r3, [r7, #0]
 800832a:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 800832c:	683b      	ldr	r3, [r7, #0]
 800832e:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8008330:	f000 fc3e 	bl	8008bb0 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8008334:	687b      	ldr	r3, [r7, #4]
 8008336:	681b      	ldr	r3, [r3, #0]
 8008338:	689a      	ldr	r2, [r3, #8]
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	681b      	ldr	r3, [r3, #0]
 800833e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8008342:	609a      	str	r2, [r3, #8]
      break;
 8008344:	e03c      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008346:	687b      	ldr	r3, [r7, #4]
 8008348:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800834a:	683b      	ldr	r3, [r7, #0]
 800834c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800834e:	683b      	ldr	r3, [r7, #0]
 8008350:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008352:	461a      	mov	r2, r3
 8008354:	f000 fbb2 	bl	8008abc <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	681b      	ldr	r3, [r3, #0]
 800835c:	2150      	movs	r1, #80	@ 0x50
 800835e:	4618      	mov	r0, r3
 8008360:	f000 fc0b 	bl	8008b7a <TIM_ITRx_SetConfig>
      break;
 8008364:	e02c      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8008366:	687b      	ldr	r3, [r7, #4]
 8008368:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800836a:	683b      	ldr	r3, [r7, #0]
 800836c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800836e:	683b      	ldr	r3, [r7, #0]
 8008370:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8008372:	461a      	mov	r2, r3
 8008374:	f000 fbd1 	bl	8008b1a <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8008378:	687b      	ldr	r3, [r7, #4]
 800837a:	681b      	ldr	r3, [r3, #0]
 800837c:	2160      	movs	r1, #96	@ 0x60
 800837e:	4618      	mov	r0, r3
 8008380:	f000 fbfb 	bl	8008b7a <TIM_ITRx_SetConfig>
      break;
 8008384:	e01c      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800838a:	683b      	ldr	r3, [r7, #0]
 800838c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800838e:	683b      	ldr	r3, [r7, #0]
 8008390:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008392:	461a      	mov	r2, r3
 8008394:	f000 fb92 	bl	8008abc <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8008398:	687b      	ldr	r3, [r7, #4]
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	2140      	movs	r1, #64	@ 0x40
 800839e:	4618      	mov	r0, r3
 80083a0:	f000 fbeb 	bl	8008b7a <TIM_ITRx_SetConfig>
      break;
 80083a4:	e00c      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 80083a6:	687b      	ldr	r3, [r7, #4]
 80083a8:	681a      	ldr	r2, [r3, #0]
 80083aa:	683b      	ldr	r3, [r7, #0]
 80083ac:	681b      	ldr	r3, [r3, #0]
 80083ae:	4619      	mov	r1, r3
 80083b0:	4610      	mov	r0, r2
 80083b2:	f000 fbe2 	bl	8008b7a <TIM_ITRx_SetConfig>
      break;
 80083b6:	e003      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 80083b8:	2301      	movs	r3, #1
 80083ba:	73fb      	strb	r3, [r7, #15]
      break;
 80083bc:	e000      	b.n	80083c0 <HAL_TIM_ConfigClockSource+0x174>
      break;
 80083be:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	2201      	movs	r2, #1
 80083c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	2200      	movs	r2, #0
 80083cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80083d0:	7bfb      	ldrb	r3, [r7, #15]
}
 80083d2:	4618      	mov	r0, r3
 80083d4:	3710      	adds	r7, #16
 80083d6:	46bd      	mov	sp, r7
 80083d8:	bd80      	pop	{r7, pc}
 80083da:	bf00      	nop
 80083dc:	fffeff88 	.word	0xfffeff88

080083e0 <HAL_TIM_PeriodElapsedCallback>:
  * @brief  Period elapsed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80083e0:	b480      	push	{r7}
 80083e2:	b083      	sub	sp, #12
 80083e4:	af00      	add	r7, sp, #0
 80083e6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
}
 80083e8:	bf00      	nop
 80083ea:	370c      	adds	r7, #12
 80083ec:	46bd      	mov	sp, r7
 80083ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083f2:	4770      	bx	lr

080083f4 <HAL_TIM_PeriodElapsedHalfCpltCallback>:
  * @brief  Period elapsed half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 80083f4:	b480      	push	{r7}
 80083f6:	b083      	sub	sp, #12
 80083f8:	af00      	add	r7, sp, #0
 80083fa:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedHalfCpltCallback could be implemented in the user file
   */
}
 80083fc:	bf00      	nop
 80083fe:	370c      	adds	r7, #12
 8008400:	46bd      	mov	sp, r7
 8008402:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008406:	4770      	bx	lr

08008408 <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 8008408:	b480      	push	{r7}
 800840a:	b083      	sub	sp, #12
 800840c:	af00      	add	r7, sp, #0
 800840e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8008410:	bf00      	nop
 8008412:	370c      	adds	r7, #12
 8008414:	46bd      	mov	sp, r7
 8008416:	f85d 7b04 	ldr.w	r7, [sp], #4
 800841a:	4770      	bx	lr

0800841c <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 800841c:	b480      	push	{r7}
 800841e:	b083      	sub	sp, #12
 8008420:	af00      	add	r7, sp, #0
 8008422:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8008424:	bf00      	nop
 8008426:	370c      	adds	r7, #12
 8008428:	46bd      	mov	sp, r7
 800842a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800842e:	4770      	bx	lr

08008430 <HAL_TIM_IC_CaptureHalfCpltCallback>:
  * @brief  Input Capture half complete callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 8008430:	b480      	push	{r7}
 8008432:	b083      	sub	sp, #12
 8008434:	af00      	add	r7, sp, #0
 8008436:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureHalfCpltCallback could be implemented in the user file
   */
}
 8008438:	bf00      	nop
 800843a:	370c      	adds	r7, #12
 800843c:	46bd      	mov	sp, r7
 800843e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008442:	4770      	bx	lr

08008444 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 8008444:	b480      	push	{r7}
 8008446:	b083      	sub	sp, #12
 8008448:	af00      	add	r7, sp, #0
 800844a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 800844c:	bf00      	nop
 800844e:	370c      	adds	r7, #12
 8008450:	46bd      	mov	sp, r7
 8008452:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008456:	4770      	bx	lr

08008458 <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
  * @brief  PWM Pulse finished half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 8008458:	b480      	push	{r7}
 800845a:	b083      	sub	sp, #12
 800845c:	af00      	add	r7, sp, #0
 800845e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedHalfCpltCallback could be implemented in the user file
   */
}
 8008460:	bf00      	nop
 8008462:	370c      	adds	r7, #12
 8008464:	46bd      	mov	sp, r7
 8008466:	f85d 7b04 	ldr.w	r7, [sp], #4
 800846a:	4770      	bx	lr

0800846c <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800846c:	b480      	push	{r7}
 800846e:	b083      	sub	sp, #12
 8008470:	af00      	add	r7, sp, #0
 8008472:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8008474:	bf00      	nop
 8008476:	370c      	adds	r7, #12
 8008478:	46bd      	mov	sp, r7
 800847a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800847e:	4770      	bx	lr

08008480 <HAL_TIM_TriggerHalfCpltCallback>:
  * @brief  Hall Trigger detection half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 8008480:	b480      	push	{r7}
 8008482:	b083      	sub	sp, #12
 8008484:	af00      	add	r7, sp, #0
 8008486:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerHalfCpltCallback could be implemented in the user file
   */
}
 8008488:	bf00      	nop
 800848a:	370c      	adds	r7, #12
 800848c:	46bd      	mov	sp, r7
 800848e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008492:	4770      	bx	lr

08008494 <HAL_TIM_ErrorCallback>:
  * @brief  Timer error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
{
 8008494:	b480      	push	{r7}
 8008496:	b083      	sub	sp, #12
 8008498:	af00      	add	r7, sp, #0
 800849a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_ErrorCallback could be implemented in the user file
   */
}
 800849c:	bf00      	nop
 800849e:	370c      	adds	r7, #12
 80084a0:	46bd      	mov	sp, r7
 80084a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084a6:	4770      	bx	lr

080084a8 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80084a8:	b480      	push	{r7}
 80084aa:	b085      	sub	sp, #20
 80084ac:	af00      	add	r7, sp, #0
 80084ae:	6078      	str	r0, [r7, #4]
 80084b0:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80084b2:	687b      	ldr	r3, [r7, #4]
 80084b4:	681b      	ldr	r3, [r3, #0]
 80084b6:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80084b8:	687b      	ldr	r3, [r7, #4]
 80084ba:	4a46      	ldr	r2, [pc, #280]	@ (80085d4 <TIM_Base_SetConfig+0x12c>)
 80084bc:	4293      	cmp	r3, r2
 80084be:	d013      	beq.n	80084e8 <TIM_Base_SetConfig+0x40>
 80084c0:	687b      	ldr	r3, [r7, #4]
 80084c2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80084c6:	d00f      	beq.n	80084e8 <TIM_Base_SetConfig+0x40>
 80084c8:	687b      	ldr	r3, [r7, #4]
 80084ca:	4a43      	ldr	r2, [pc, #268]	@ (80085d8 <TIM_Base_SetConfig+0x130>)
 80084cc:	4293      	cmp	r3, r2
 80084ce:	d00b      	beq.n	80084e8 <TIM_Base_SetConfig+0x40>
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	4a42      	ldr	r2, [pc, #264]	@ (80085dc <TIM_Base_SetConfig+0x134>)
 80084d4:	4293      	cmp	r3, r2
 80084d6:	d007      	beq.n	80084e8 <TIM_Base_SetConfig+0x40>
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	4a41      	ldr	r2, [pc, #260]	@ (80085e0 <TIM_Base_SetConfig+0x138>)
 80084dc:	4293      	cmp	r3, r2
 80084de:	d003      	beq.n	80084e8 <TIM_Base_SetConfig+0x40>
 80084e0:	687b      	ldr	r3, [r7, #4]
 80084e2:	4a40      	ldr	r2, [pc, #256]	@ (80085e4 <TIM_Base_SetConfig+0x13c>)
 80084e4:	4293      	cmp	r3, r2
 80084e6:	d108      	bne.n	80084fa <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80084e8:	68fb      	ldr	r3, [r7, #12]
 80084ea:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80084ee:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80084f0:	683b      	ldr	r3, [r7, #0]
 80084f2:	685b      	ldr	r3, [r3, #4]
 80084f4:	68fa      	ldr	r2, [r7, #12]
 80084f6:	4313      	orrs	r3, r2
 80084f8:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80084fa:	687b      	ldr	r3, [r7, #4]
 80084fc:	4a35      	ldr	r2, [pc, #212]	@ (80085d4 <TIM_Base_SetConfig+0x12c>)
 80084fe:	4293      	cmp	r3, r2
 8008500:	d02b      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 8008502:	687b      	ldr	r3, [r7, #4]
 8008504:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008508:	d027      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 800850a:	687b      	ldr	r3, [r7, #4]
 800850c:	4a32      	ldr	r2, [pc, #200]	@ (80085d8 <TIM_Base_SetConfig+0x130>)
 800850e:	4293      	cmp	r3, r2
 8008510:	d023      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	4a31      	ldr	r2, [pc, #196]	@ (80085dc <TIM_Base_SetConfig+0x134>)
 8008516:	4293      	cmp	r3, r2
 8008518:	d01f      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 800851a:	687b      	ldr	r3, [r7, #4]
 800851c:	4a30      	ldr	r2, [pc, #192]	@ (80085e0 <TIM_Base_SetConfig+0x138>)
 800851e:	4293      	cmp	r3, r2
 8008520:	d01b      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 8008522:	687b      	ldr	r3, [r7, #4]
 8008524:	4a2f      	ldr	r2, [pc, #188]	@ (80085e4 <TIM_Base_SetConfig+0x13c>)
 8008526:	4293      	cmp	r3, r2
 8008528:	d017      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 800852a:	687b      	ldr	r3, [r7, #4]
 800852c:	4a2e      	ldr	r2, [pc, #184]	@ (80085e8 <TIM_Base_SetConfig+0x140>)
 800852e:	4293      	cmp	r3, r2
 8008530:	d013      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	4a2d      	ldr	r2, [pc, #180]	@ (80085ec <TIM_Base_SetConfig+0x144>)
 8008536:	4293      	cmp	r3, r2
 8008538:	d00f      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 800853a:	687b      	ldr	r3, [r7, #4]
 800853c:	4a2c      	ldr	r2, [pc, #176]	@ (80085f0 <TIM_Base_SetConfig+0x148>)
 800853e:	4293      	cmp	r3, r2
 8008540:	d00b      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 8008542:	687b      	ldr	r3, [r7, #4]
 8008544:	4a2b      	ldr	r2, [pc, #172]	@ (80085f4 <TIM_Base_SetConfig+0x14c>)
 8008546:	4293      	cmp	r3, r2
 8008548:	d007      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 800854a:	687b      	ldr	r3, [r7, #4]
 800854c:	4a2a      	ldr	r2, [pc, #168]	@ (80085f8 <TIM_Base_SetConfig+0x150>)
 800854e:	4293      	cmp	r3, r2
 8008550:	d003      	beq.n	800855a <TIM_Base_SetConfig+0xb2>
 8008552:	687b      	ldr	r3, [r7, #4]
 8008554:	4a29      	ldr	r2, [pc, #164]	@ (80085fc <TIM_Base_SetConfig+0x154>)
 8008556:	4293      	cmp	r3, r2
 8008558:	d108      	bne.n	800856c <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800855a:	68fb      	ldr	r3, [r7, #12]
 800855c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008560:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008562:	683b      	ldr	r3, [r7, #0]
 8008564:	68db      	ldr	r3, [r3, #12]
 8008566:	68fa      	ldr	r2, [r7, #12]
 8008568:	4313      	orrs	r3, r2
 800856a:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800856c:	68fb      	ldr	r3, [r7, #12]
 800856e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8008572:	683b      	ldr	r3, [r7, #0]
 8008574:	695b      	ldr	r3, [r3, #20]
 8008576:	4313      	orrs	r3, r2
 8008578:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800857a:	687b      	ldr	r3, [r7, #4]
 800857c:	68fa      	ldr	r2, [r7, #12]
 800857e:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008580:	683b      	ldr	r3, [r7, #0]
 8008582:	689a      	ldr	r2, [r3, #8]
 8008584:	687b      	ldr	r3, [r7, #4]
 8008586:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008588:	683b      	ldr	r3, [r7, #0]
 800858a:	681a      	ldr	r2, [r3, #0]
 800858c:	687b      	ldr	r3, [r7, #4]
 800858e:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008590:	687b      	ldr	r3, [r7, #4]
 8008592:	4a10      	ldr	r2, [pc, #64]	@ (80085d4 <TIM_Base_SetConfig+0x12c>)
 8008594:	4293      	cmp	r3, r2
 8008596:	d003      	beq.n	80085a0 <TIM_Base_SetConfig+0xf8>
 8008598:	687b      	ldr	r3, [r7, #4]
 800859a:	4a12      	ldr	r2, [pc, #72]	@ (80085e4 <TIM_Base_SetConfig+0x13c>)
 800859c:	4293      	cmp	r3, r2
 800859e:	d103      	bne.n	80085a8 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80085a0:	683b      	ldr	r3, [r7, #0]
 80085a2:	691a      	ldr	r2, [r3, #16]
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80085a8:	687b      	ldr	r3, [r7, #4]
 80085aa:	2201      	movs	r2, #1
 80085ac:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80085ae:	687b      	ldr	r3, [r7, #4]
 80085b0:	691b      	ldr	r3, [r3, #16]
 80085b2:	f003 0301 	and.w	r3, r3, #1
 80085b6:	2b01      	cmp	r3, #1
 80085b8:	d105      	bne.n	80085c6 <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	691b      	ldr	r3, [r3, #16]
 80085be:	f023 0201 	bic.w	r2, r3, #1
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	611a      	str	r2, [r3, #16]
  }
}
 80085c6:	bf00      	nop
 80085c8:	3714      	adds	r7, #20
 80085ca:	46bd      	mov	sp, r7
 80085cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085d0:	4770      	bx	lr
 80085d2:	bf00      	nop
 80085d4:	40010000 	.word	0x40010000
 80085d8:	40000400 	.word	0x40000400
 80085dc:	40000800 	.word	0x40000800
 80085e0:	40000c00 	.word	0x40000c00
 80085e4:	40010400 	.word	0x40010400
 80085e8:	40014000 	.word	0x40014000
 80085ec:	40014400 	.word	0x40014400
 80085f0:	40014800 	.word	0x40014800
 80085f4:	40001800 	.word	0x40001800
 80085f8:	40001c00 	.word	0x40001c00
 80085fc:	40002000 	.word	0x40002000

08008600 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8008600:	b480      	push	{r7}
 8008602:	b087      	sub	sp, #28
 8008604:	af00      	add	r7, sp, #0
 8008606:	6078      	str	r0, [r7, #4]
 8008608:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800860a:	687b      	ldr	r3, [r7, #4]
 800860c:	6a1b      	ldr	r3, [r3, #32]
 800860e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008610:	687b      	ldr	r3, [r7, #4]
 8008612:	6a1b      	ldr	r3, [r3, #32]
 8008614:	f023 0201 	bic.w	r2, r3, #1
 8008618:	687b      	ldr	r3, [r7, #4]
 800861a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	685b      	ldr	r3, [r3, #4]
 8008620:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008622:	687b      	ldr	r3, [r7, #4]
 8008624:	699b      	ldr	r3, [r3, #24]
 8008626:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8008628:	68fa      	ldr	r2, [r7, #12]
 800862a:	4b2b      	ldr	r3, [pc, #172]	@ (80086d8 <TIM_OC1_SetConfig+0xd8>)
 800862c:	4013      	ands	r3, r2
 800862e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008630:	68fb      	ldr	r3, [r7, #12]
 8008632:	f023 0303 	bic.w	r3, r3, #3
 8008636:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008638:	683b      	ldr	r3, [r7, #0]
 800863a:	681b      	ldr	r3, [r3, #0]
 800863c:	68fa      	ldr	r2, [r7, #12]
 800863e:	4313      	orrs	r3, r2
 8008640:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8008642:	697b      	ldr	r3, [r7, #20]
 8008644:	f023 0302 	bic.w	r3, r3, #2
 8008648:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800864a:	683b      	ldr	r3, [r7, #0]
 800864c:	689b      	ldr	r3, [r3, #8]
 800864e:	697a      	ldr	r2, [r7, #20]
 8008650:	4313      	orrs	r3, r2
 8008652:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008654:	687b      	ldr	r3, [r7, #4]
 8008656:	4a21      	ldr	r2, [pc, #132]	@ (80086dc <TIM_OC1_SetConfig+0xdc>)
 8008658:	4293      	cmp	r3, r2
 800865a:	d003      	beq.n	8008664 <TIM_OC1_SetConfig+0x64>
 800865c:	687b      	ldr	r3, [r7, #4]
 800865e:	4a20      	ldr	r2, [pc, #128]	@ (80086e0 <TIM_OC1_SetConfig+0xe0>)
 8008660:	4293      	cmp	r3, r2
 8008662:	d10c      	bne.n	800867e <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8008664:	697b      	ldr	r3, [r7, #20]
 8008666:	f023 0308 	bic.w	r3, r3, #8
 800866a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800866c:	683b      	ldr	r3, [r7, #0]
 800866e:	68db      	ldr	r3, [r3, #12]
 8008670:	697a      	ldr	r2, [r7, #20]
 8008672:	4313      	orrs	r3, r2
 8008674:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8008676:	697b      	ldr	r3, [r7, #20]
 8008678:	f023 0304 	bic.w	r3, r3, #4
 800867c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	4a16      	ldr	r2, [pc, #88]	@ (80086dc <TIM_OC1_SetConfig+0xdc>)
 8008682:	4293      	cmp	r3, r2
 8008684:	d003      	beq.n	800868e <TIM_OC1_SetConfig+0x8e>
 8008686:	687b      	ldr	r3, [r7, #4]
 8008688:	4a15      	ldr	r2, [pc, #84]	@ (80086e0 <TIM_OC1_SetConfig+0xe0>)
 800868a:	4293      	cmp	r3, r2
 800868c:	d111      	bne.n	80086b2 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800868e:	693b      	ldr	r3, [r7, #16]
 8008690:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8008694:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008696:	693b      	ldr	r3, [r7, #16]
 8008698:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800869c:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800869e:	683b      	ldr	r3, [r7, #0]
 80086a0:	695b      	ldr	r3, [r3, #20]
 80086a2:	693a      	ldr	r2, [r7, #16]
 80086a4:	4313      	orrs	r3, r2
 80086a6:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 80086a8:	683b      	ldr	r3, [r7, #0]
 80086aa:	699b      	ldr	r3, [r3, #24]
 80086ac:	693a      	ldr	r2, [r7, #16]
 80086ae:	4313      	orrs	r3, r2
 80086b0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80086b2:	687b      	ldr	r3, [r7, #4]
 80086b4:	693a      	ldr	r2, [r7, #16]
 80086b6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80086b8:	687b      	ldr	r3, [r7, #4]
 80086ba:	68fa      	ldr	r2, [r7, #12]
 80086bc:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 80086be:	683b      	ldr	r3, [r7, #0]
 80086c0:	685a      	ldr	r2, [r3, #4]
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	697a      	ldr	r2, [r7, #20]
 80086ca:	621a      	str	r2, [r3, #32]
}
 80086cc:	bf00      	nop
 80086ce:	371c      	adds	r7, #28
 80086d0:	46bd      	mov	sp, r7
 80086d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086d6:	4770      	bx	lr
 80086d8:	fffeff8f 	.word	0xfffeff8f
 80086dc:	40010000 	.word	0x40010000
 80086e0:	40010400 	.word	0x40010400

080086e4 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80086e4:	b480      	push	{r7}
 80086e6:	b087      	sub	sp, #28
 80086e8:	af00      	add	r7, sp, #0
 80086ea:	6078      	str	r0, [r7, #4]
 80086ec:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80086ee:	687b      	ldr	r3, [r7, #4]
 80086f0:	6a1b      	ldr	r3, [r3, #32]
 80086f2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80086f4:	687b      	ldr	r3, [r7, #4]
 80086f6:	6a1b      	ldr	r3, [r3, #32]
 80086f8:	f023 0210 	bic.w	r2, r3, #16
 80086fc:	687b      	ldr	r3, [r7, #4]
 80086fe:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008700:	687b      	ldr	r3, [r7, #4]
 8008702:	685b      	ldr	r3, [r3, #4]
 8008704:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	699b      	ldr	r3, [r3, #24]
 800870a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 800870c:	68fa      	ldr	r2, [r7, #12]
 800870e:	4b2e      	ldr	r3, [pc, #184]	@ (80087c8 <TIM_OC2_SetConfig+0xe4>)
 8008710:	4013      	ands	r3, r2
 8008712:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8008714:	68fb      	ldr	r3, [r7, #12]
 8008716:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800871a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800871c:	683b      	ldr	r3, [r7, #0]
 800871e:	681b      	ldr	r3, [r3, #0]
 8008720:	021b      	lsls	r3, r3, #8
 8008722:	68fa      	ldr	r2, [r7, #12]
 8008724:	4313      	orrs	r3, r2
 8008726:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8008728:	697b      	ldr	r3, [r7, #20]
 800872a:	f023 0320 	bic.w	r3, r3, #32
 800872e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8008730:	683b      	ldr	r3, [r7, #0]
 8008732:	689b      	ldr	r3, [r3, #8]
 8008734:	011b      	lsls	r3, r3, #4
 8008736:	697a      	ldr	r2, [r7, #20]
 8008738:	4313      	orrs	r3, r2
 800873a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800873c:	687b      	ldr	r3, [r7, #4]
 800873e:	4a23      	ldr	r2, [pc, #140]	@ (80087cc <TIM_OC2_SetConfig+0xe8>)
 8008740:	4293      	cmp	r3, r2
 8008742:	d003      	beq.n	800874c <TIM_OC2_SetConfig+0x68>
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	4a22      	ldr	r2, [pc, #136]	@ (80087d0 <TIM_OC2_SetConfig+0xec>)
 8008748:	4293      	cmp	r3, r2
 800874a:	d10d      	bne.n	8008768 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800874c:	697b      	ldr	r3, [r7, #20]
 800874e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008752:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8008754:	683b      	ldr	r3, [r7, #0]
 8008756:	68db      	ldr	r3, [r3, #12]
 8008758:	011b      	lsls	r3, r3, #4
 800875a:	697a      	ldr	r2, [r7, #20]
 800875c:	4313      	orrs	r3, r2
 800875e:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8008760:	697b      	ldr	r3, [r7, #20]
 8008762:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008766:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	4a18      	ldr	r2, [pc, #96]	@ (80087cc <TIM_OC2_SetConfig+0xe8>)
 800876c:	4293      	cmp	r3, r2
 800876e:	d003      	beq.n	8008778 <TIM_OC2_SetConfig+0x94>
 8008770:	687b      	ldr	r3, [r7, #4]
 8008772:	4a17      	ldr	r2, [pc, #92]	@ (80087d0 <TIM_OC2_SetConfig+0xec>)
 8008774:	4293      	cmp	r3, r2
 8008776:	d113      	bne.n	80087a0 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8008778:	693b      	ldr	r3, [r7, #16]
 800877a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800877e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8008780:	693b      	ldr	r3, [r7, #16]
 8008782:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008786:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8008788:	683b      	ldr	r3, [r7, #0]
 800878a:	695b      	ldr	r3, [r3, #20]
 800878c:	009b      	lsls	r3, r3, #2
 800878e:	693a      	ldr	r2, [r7, #16]
 8008790:	4313      	orrs	r3, r2
 8008792:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8008794:	683b      	ldr	r3, [r7, #0]
 8008796:	699b      	ldr	r3, [r3, #24]
 8008798:	009b      	lsls	r3, r3, #2
 800879a:	693a      	ldr	r2, [r7, #16]
 800879c:	4313      	orrs	r3, r2
 800879e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80087a0:	687b      	ldr	r3, [r7, #4]
 80087a2:	693a      	ldr	r2, [r7, #16]
 80087a4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 80087a6:	687b      	ldr	r3, [r7, #4]
 80087a8:	68fa      	ldr	r2, [r7, #12]
 80087aa:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 80087ac:	683b      	ldr	r3, [r7, #0]
 80087ae:	685a      	ldr	r2, [r3, #4]
 80087b0:	687b      	ldr	r3, [r7, #4]
 80087b2:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80087b4:	687b      	ldr	r3, [r7, #4]
 80087b6:	697a      	ldr	r2, [r7, #20]
 80087b8:	621a      	str	r2, [r3, #32]
}
 80087ba:	bf00      	nop
 80087bc:	371c      	adds	r7, #28
 80087be:	46bd      	mov	sp, r7
 80087c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087c4:	4770      	bx	lr
 80087c6:	bf00      	nop
 80087c8:	feff8fff 	.word	0xfeff8fff
 80087cc:	40010000 	.word	0x40010000
 80087d0:	40010400 	.word	0x40010400

080087d4 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80087d4:	b480      	push	{r7}
 80087d6:	b087      	sub	sp, #28
 80087d8:	af00      	add	r7, sp, #0
 80087da:	6078      	str	r0, [r7, #4]
 80087dc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80087de:	687b      	ldr	r3, [r7, #4]
 80087e0:	6a1b      	ldr	r3, [r3, #32]
 80087e2:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	6a1b      	ldr	r3, [r3, #32]
 80087e8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80087ec:	687b      	ldr	r3, [r7, #4]
 80087ee:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	685b      	ldr	r3, [r3, #4]
 80087f4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	69db      	ldr	r3, [r3, #28]
 80087fa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 80087fc:	68fa      	ldr	r2, [r7, #12]
 80087fe:	4b2d      	ldr	r3, [pc, #180]	@ (80088b4 <TIM_OC3_SetConfig+0xe0>)
 8008800:	4013      	ands	r3, r2
 8008802:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	f023 0303 	bic.w	r3, r3, #3
 800880a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800880c:	683b      	ldr	r3, [r7, #0]
 800880e:	681b      	ldr	r3, [r3, #0]
 8008810:	68fa      	ldr	r2, [r7, #12]
 8008812:	4313      	orrs	r3, r2
 8008814:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8008816:	697b      	ldr	r3, [r7, #20]
 8008818:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800881c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800881e:	683b      	ldr	r3, [r7, #0]
 8008820:	689b      	ldr	r3, [r3, #8]
 8008822:	021b      	lsls	r3, r3, #8
 8008824:	697a      	ldr	r2, [r7, #20]
 8008826:	4313      	orrs	r3, r2
 8008828:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800882a:	687b      	ldr	r3, [r7, #4]
 800882c:	4a22      	ldr	r2, [pc, #136]	@ (80088b8 <TIM_OC3_SetConfig+0xe4>)
 800882e:	4293      	cmp	r3, r2
 8008830:	d003      	beq.n	800883a <TIM_OC3_SetConfig+0x66>
 8008832:	687b      	ldr	r3, [r7, #4]
 8008834:	4a21      	ldr	r2, [pc, #132]	@ (80088bc <TIM_OC3_SetConfig+0xe8>)
 8008836:	4293      	cmp	r3, r2
 8008838:	d10d      	bne.n	8008856 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800883a:	697b      	ldr	r3, [r7, #20]
 800883c:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8008840:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008842:	683b      	ldr	r3, [r7, #0]
 8008844:	68db      	ldr	r3, [r3, #12]
 8008846:	021b      	lsls	r3, r3, #8
 8008848:	697a      	ldr	r2, [r7, #20]
 800884a:	4313      	orrs	r3, r2
 800884c:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800884e:	697b      	ldr	r3, [r7, #20]
 8008850:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8008854:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008856:	687b      	ldr	r3, [r7, #4]
 8008858:	4a17      	ldr	r2, [pc, #92]	@ (80088b8 <TIM_OC3_SetConfig+0xe4>)
 800885a:	4293      	cmp	r3, r2
 800885c:	d003      	beq.n	8008866 <TIM_OC3_SetConfig+0x92>
 800885e:	687b      	ldr	r3, [r7, #4]
 8008860:	4a16      	ldr	r2, [pc, #88]	@ (80088bc <TIM_OC3_SetConfig+0xe8>)
 8008862:	4293      	cmp	r3, r2
 8008864:	d113      	bne.n	800888e <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8008866:	693b      	ldr	r3, [r7, #16]
 8008868:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800886c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800886e:	693b      	ldr	r3, [r7, #16]
 8008870:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8008874:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8008876:	683b      	ldr	r3, [r7, #0]
 8008878:	695b      	ldr	r3, [r3, #20]
 800887a:	011b      	lsls	r3, r3, #4
 800887c:	693a      	ldr	r2, [r7, #16]
 800887e:	4313      	orrs	r3, r2
 8008880:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008882:	683b      	ldr	r3, [r7, #0]
 8008884:	699b      	ldr	r3, [r3, #24]
 8008886:	011b      	lsls	r3, r3, #4
 8008888:	693a      	ldr	r2, [r7, #16]
 800888a:	4313      	orrs	r3, r2
 800888c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	693a      	ldr	r2, [r7, #16]
 8008892:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008894:	687b      	ldr	r3, [r7, #4]
 8008896:	68fa      	ldr	r2, [r7, #12]
 8008898:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800889a:	683b      	ldr	r3, [r7, #0]
 800889c:	685a      	ldr	r2, [r3, #4]
 800889e:	687b      	ldr	r3, [r7, #4]
 80088a0:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80088a2:	687b      	ldr	r3, [r7, #4]
 80088a4:	697a      	ldr	r2, [r7, #20]
 80088a6:	621a      	str	r2, [r3, #32]
}
 80088a8:	bf00      	nop
 80088aa:	371c      	adds	r7, #28
 80088ac:	46bd      	mov	sp, r7
 80088ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088b2:	4770      	bx	lr
 80088b4:	fffeff8f 	.word	0xfffeff8f
 80088b8:	40010000 	.word	0x40010000
 80088bc:	40010400 	.word	0x40010400

080088c0 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 80088c0:	b480      	push	{r7}
 80088c2:	b087      	sub	sp, #28
 80088c4:	af00      	add	r7, sp, #0
 80088c6:	6078      	str	r0, [r7, #4]
 80088c8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 80088ca:	687b      	ldr	r3, [r7, #4]
 80088cc:	6a1b      	ldr	r3, [r3, #32]
 80088ce:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	6a1b      	ldr	r3, [r3, #32]
 80088d4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80088d8:	687b      	ldr	r3, [r7, #4]
 80088da:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 80088dc:	687b      	ldr	r3, [r7, #4]
 80088de:	685b      	ldr	r3, [r3, #4]
 80088e0:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	69db      	ldr	r3, [r3, #28]
 80088e6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 80088e8:	68fa      	ldr	r2, [r7, #12]
 80088ea:	4b1e      	ldr	r3, [pc, #120]	@ (8008964 <TIM_OC4_SetConfig+0xa4>)
 80088ec:	4013      	ands	r3, r2
 80088ee:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 80088f0:	68fb      	ldr	r3, [r7, #12]
 80088f2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80088f6:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 80088f8:	683b      	ldr	r3, [r7, #0]
 80088fa:	681b      	ldr	r3, [r3, #0]
 80088fc:	021b      	lsls	r3, r3, #8
 80088fe:	68fa      	ldr	r2, [r7, #12]
 8008900:	4313      	orrs	r3, r2
 8008902:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8008904:	693b      	ldr	r3, [r7, #16]
 8008906:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800890a:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800890c:	683b      	ldr	r3, [r7, #0]
 800890e:	689b      	ldr	r3, [r3, #8]
 8008910:	031b      	lsls	r3, r3, #12
 8008912:	693a      	ldr	r2, [r7, #16]
 8008914:	4313      	orrs	r3, r2
 8008916:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008918:	687b      	ldr	r3, [r7, #4]
 800891a:	4a13      	ldr	r2, [pc, #76]	@ (8008968 <TIM_OC4_SetConfig+0xa8>)
 800891c:	4293      	cmp	r3, r2
 800891e:	d003      	beq.n	8008928 <TIM_OC4_SetConfig+0x68>
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	4a12      	ldr	r2, [pc, #72]	@ (800896c <TIM_OC4_SetConfig+0xac>)
 8008924:	4293      	cmp	r3, r2
 8008926:	d109      	bne.n	800893c <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8008928:	697b      	ldr	r3, [r7, #20]
 800892a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800892e:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8008930:	683b      	ldr	r3, [r7, #0]
 8008932:	695b      	ldr	r3, [r3, #20]
 8008934:	019b      	lsls	r3, r3, #6
 8008936:	697a      	ldr	r2, [r7, #20]
 8008938:	4313      	orrs	r3, r2
 800893a:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	697a      	ldr	r2, [r7, #20]
 8008940:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008942:	687b      	ldr	r3, [r7, #4]
 8008944:	68fa      	ldr	r2, [r7, #12]
 8008946:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8008948:	683b      	ldr	r3, [r7, #0]
 800894a:	685a      	ldr	r2, [r3, #4]
 800894c:	687b      	ldr	r3, [r7, #4]
 800894e:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008950:	687b      	ldr	r3, [r7, #4]
 8008952:	693a      	ldr	r2, [r7, #16]
 8008954:	621a      	str	r2, [r3, #32]
}
 8008956:	bf00      	nop
 8008958:	371c      	adds	r7, #28
 800895a:	46bd      	mov	sp, r7
 800895c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008960:	4770      	bx	lr
 8008962:	bf00      	nop
 8008964:	feff8fff 	.word	0xfeff8fff
 8008968:	40010000 	.word	0x40010000
 800896c:	40010400 	.word	0x40010400

08008970 <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 8008970:	b480      	push	{r7}
 8008972:	b087      	sub	sp, #28
 8008974:	af00      	add	r7, sp, #0
 8008976:	6078      	str	r0, [r7, #4]
 8008978:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800897a:	687b      	ldr	r3, [r7, #4]
 800897c:	6a1b      	ldr	r3, [r3, #32]
 800897e:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8008980:	687b      	ldr	r3, [r7, #4]
 8008982:	6a1b      	ldr	r3, [r3, #32]
 8008984:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8008988:	687b      	ldr	r3, [r7, #4]
 800898a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	685b      	ldr	r3, [r3, #4]
 8008990:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8008992:	687b      	ldr	r3, [r7, #4]
 8008994:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008996:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8008998:	68fa      	ldr	r2, [r7, #12]
 800899a:	4b1b      	ldr	r3, [pc, #108]	@ (8008a08 <TIM_OC5_SetConfig+0x98>)
 800899c:	4013      	ands	r3, r2
 800899e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 80089a0:	683b      	ldr	r3, [r7, #0]
 80089a2:	681b      	ldr	r3, [r3, #0]
 80089a4:	68fa      	ldr	r2, [r7, #12]
 80089a6:	4313      	orrs	r3, r2
 80089a8:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 80089aa:	693b      	ldr	r3, [r7, #16]
 80089ac:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 80089b0:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 80089b2:	683b      	ldr	r3, [r7, #0]
 80089b4:	689b      	ldr	r3, [r3, #8]
 80089b6:	041b      	lsls	r3, r3, #16
 80089b8:	693a      	ldr	r2, [r7, #16]
 80089ba:	4313      	orrs	r3, r2
 80089bc:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	4a12      	ldr	r2, [pc, #72]	@ (8008a0c <TIM_OC5_SetConfig+0x9c>)
 80089c2:	4293      	cmp	r3, r2
 80089c4:	d003      	beq.n	80089ce <TIM_OC5_SetConfig+0x5e>
 80089c6:	687b      	ldr	r3, [r7, #4]
 80089c8:	4a11      	ldr	r2, [pc, #68]	@ (8008a10 <TIM_OC5_SetConfig+0xa0>)
 80089ca:	4293      	cmp	r3, r2
 80089cc:	d109      	bne.n	80089e2 <TIM_OC5_SetConfig+0x72>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 80089ce:	697b      	ldr	r3, [r7, #20]
 80089d0:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80089d4:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 80089d6:	683b      	ldr	r3, [r7, #0]
 80089d8:	695b      	ldr	r3, [r3, #20]
 80089da:	021b      	lsls	r3, r3, #8
 80089dc:	697a      	ldr	r2, [r7, #20]
 80089de:	4313      	orrs	r3, r2
 80089e0:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 80089e2:	687b      	ldr	r3, [r7, #4]
 80089e4:	697a      	ldr	r2, [r7, #20]
 80089e6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 80089e8:	687b      	ldr	r3, [r7, #4]
 80089ea:	68fa      	ldr	r2, [r7, #12]
 80089ec:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 80089ee:	683b      	ldr	r3, [r7, #0]
 80089f0:	685a      	ldr	r2, [r3, #4]
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	659a      	str	r2, [r3, #88]	@ 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 80089f6:	687b      	ldr	r3, [r7, #4]
 80089f8:	693a      	ldr	r2, [r7, #16]
 80089fa:	621a      	str	r2, [r3, #32]
}
 80089fc:	bf00      	nop
 80089fe:	371c      	adds	r7, #28
 8008a00:	46bd      	mov	sp, r7
 8008a02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a06:	4770      	bx	lr
 8008a08:	fffeff8f 	.word	0xfffeff8f
 8008a0c:	40010000 	.word	0x40010000
 8008a10:	40010400 	.word	0x40010400

08008a14 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 8008a14:	b480      	push	{r7}
 8008a16:	b087      	sub	sp, #28
 8008a18:	af00      	add	r7, sp, #0
 8008a1a:	6078      	str	r0, [r7, #4]
 8008a1c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008a1e:	687b      	ldr	r3, [r7, #4]
 8008a20:	6a1b      	ldr	r3, [r3, #32]
 8008a22:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8008a24:	687b      	ldr	r3, [r7, #4]
 8008a26:	6a1b      	ldr	r3, [r3, #32]
 8008a28:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008a30:	687b      	ldr	r3, [r7, #4]
 8008a32:	685b      	ldr	r3, [r3, #4]
 8008a34:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008a3a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8008a3c:	68fa      	ldr	r2, [r7, #12]
 8008a3e:	4b1c      	ldr	r3, [pc, #112]	@ (8008ab0 <TIM_OC6_SetConfig+0x9c>)
 8008a40:	4013      	ands	r3, r2
 8008a42:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008a44:	683b      	ldr	r3, [r7, #0]
 8008a46:	681b      	ldr	r3, [r3, #0]
 8008a48:	021b      	lsls	r3, r3, #8
 8008a4a:	68fa      	ldr	r2, [r7, #12]
 8008a4c:	4313      	orrs	r3, r2
 8008a4e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 8008a50:	693b      	ldr	r3, [r7, #16]
 8008a52:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8008a56:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8008a58:	683b      	ldr	r3, [r7, #0]
 8008a5a:	689b      	ldr	r3, [r3, #8]
 8008a5c:	051b      	lsls	r3, r3, #20
 8008a5e:	693a      	ldr	r2, [r7, #16]
 8008a60:	4313      	orrs	r3, r2
 8008a62:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008a64:	687b      	ldr	r3, [r7, #4]
 8008a66:	4a13      	ldr	r2, [pc, #76]	@ (8008ab4 <TIM_OC6_SetConfig+0xa0>)
 8008a68:	4293      	cmp	r3, r2
 8008a6a:	d003      	beq.n	8008a74 <TIM_OC6_SetConfig+0x60>
 8008a6c:	687b      	ldr	r3, [r7, #4]
 8008a6e:	4a12      	ldr	r2, [pc, #72]	@ (8008ab8 <TIM_OC6_SetConfig+0xa4>)
 8008a70:	4293      	cmp	r3, r2
 8008a72:	d109      	bne.n	8008a88 <TIM_OC6_SetConfig+0x74>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 8008a74:	697b      	ldr	r3, [r7, #20]
 8008a76:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008a7a:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8008a7c:	683b      	ldr	r3, [r7, #0]
 8008a7e:	695b      	ldr	r3, [r3, #20]
 8008a80:	029b      	lsls	r3, r3, #10
 8008a82:	697a      	ldr	r2, [r7, #20]
 8008a84:	4313      	orrs	r3, r2
 8008a86:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008a88:	687b      	ldr	r3, [r7, #4]
 8008a8a:	697a      	ldr	r2, [r7, #20]
 8008a8c:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8008a8e:	687b      	ldr	r3, [r7, #4]
 8008a90:	68fa      	ldr	r2, [r7, #12]
 8008a92:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 8008a94:	683b      	ldr	r3, [r7, #0]
 8008a96:	685a      	ldr	r2, [r3, #4]
 8008a98:	687b      	ldr	r3, [r7, #4]
 8008a9a:	65da      	str	r2, [r3, #92]	@ 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	693a      	ldr	r2, [r7, #16]
 8008aa0:	621a      	str	r2, [r3, #32]
}
 8008aa2:	bf00      	nop
 8008aa4:	371c      	adds	r7, #28
 8008aa6:	46bd      	mov	sp, r7
 8008aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aac:	4770      	bx	lr
 8008aae:	bf00      	nop
 8008ab0:	feff8fff 	.word	0xfeff8fff
 8008ab4:	40010000 	.word	0x40010000
 8008ab8:	40010400 	.word	0x40010400

08008abc <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008abc:	b480      	push	{r7}
 8008abe:	b087      	sub	sp, #28
 8008ac0:	af00      	add	r7, sp, #0
 8008ac2:	60f8      	str	r0, [r7, #12]
 8008ac4:	60b9      	str	r1, [r7, #8]
 8008ac6:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8008ac8:	68fb      	ldr	r3, [r7, #12]
 8008aca:	6a1b      	ldr	r3, [r3, #32]
 8008acc:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008ace:	68fb      	ldr	r3, [r7, #12]
 8008ad0:	6a1b      	ldr	r3, [r3, #32]
 8008ad2:	f023 0201 	bic.w	r2, r3, #1
 8008ad6:	68fb      	ldr	r3, [r7, #12]
 8008ad8:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008ada:	68fb      	ldr	r3, [r7, #12]
 8008adc:	699b      	ldr	r3, [r3, #24]
 8008ade:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008ae0:	693b      	ldr	r3, [r7, #16]
 8008ae2:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8008ae6:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	011b      	lsls	r3, r3, #4
 8008aec:	693a      	ldr	r2, [r7, #16]
 8008aee:	4313      	orrs	r3, r2
 8008af0:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008af2:	697b      	ldr	r3, [r7, #20]
 8008af4:	f023 030a 	bic.w	r3, r3, #10
 8008af8:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8008afa:	697a      	ldr	r2, [r7, #20]
 8008afc:	68bb      	ldr	r3, [r7, #8]
 8008afe:	4313      	orrs	r3, r2
 8008b00:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8008b02:	68fb      	ldr	r3, [r7, #12]
 8008b04:	693a      	ldr	r2, [r7, #16]
 8008b06:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008b08:	68fb      	ldr	r3, [r7, #12]
 8008b0a:	697a      	ldr	r2, [r7, #20]
 8008b0c:	621a      	str	r2, [r3, #32]
}
 8008b0e:	bf00      	nop
 8008b10:	371c      	adds	r7, #28
 8008b12:	46bd      	mov	sp, r7
 8008b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b18:	4770      	bx	lr

08008b1a <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8008b1a:	b480      	push	{r7}
 8008b1c:	b087      	sub	sp, #28
 8008b1e:	af00      	add	r7, sp, #0
 8008b20:	60f8      	str	r0, [r7, #12]
 8008b22:	60b9      	str	r1, [r7, #8]
 8008b24:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8008b26:	68fb      	ldr	r3, [r7, #12]
 8008b28:	6a1b      	ldr	r3, [r3, #32]
 8008b2a:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8008b2c:	68fb      	ldr	r3, [r7, #12]
 8008b2e:	6a1b      	ldr	r3, [r3, #32]
 8008b30:	f023 0210 	bic.w	r2, r3, #16
 8008b34:	68fb      	ldr	r3, [r7, #12]
 8008b36:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008b38:	68fb      	ldr	r3, [r7, #12]
 8008b3a:	699b      	ldr	r3, [r3, #24]
 8008b3c:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8008b3e:	693b      	ldr	r3, [r7, #16]
 8008b40:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8008b44:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8008b46:	687b      	ldr	r3, [r7, #4]
 8008b48:	031b      	lsls	r3, r3, #12
 8008b4a:	693a      	ldr	r2, [r7, #16]
 8008b4c:	4313      	orrs	r3, r2
 8008b4e:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8008b50:	697b      	ldr	r3, [r7, #20]
 8008b52:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8008b56:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8008b58:	68bb      	ldr	r3, [r7, #8]
 8008b5a:	011b      	lsls	r3, r3, #4
 8008b5c:	697a      	ldr	r2, [r7, #20]
 8008b5e:	4313      	orrs	r3, r2
 8008b60:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8008b62:	68fb      	ldr	r3, [r7, #12]
 8008b64:	693a      	ldr	r2, [r7, #16]
 8008b66:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8008b68:	68fb      	ldr	r3, [r7, #12]
 8008b6a:	697a      	ldr	r2, [r7, #20]
 8008b6c:	621a      	str	r2, [r3, #32]
}
 8008b6e:	bf00      	nop
 8008b70:	371c      	adds	r7, #28
 8008b72:	46bd      	mov	sp, r7
 8008b74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b78:	4770      	bx	lr

08008b7a <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8008b7a:	b480      	push	{r7}
 8008b7c:	b085      	sub	sp, #20
 8008b7e:	af00      	add	r7, sp, #0
 8008b80:	6078      	str	r0, [r7, #4]
 8008b82:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8008b84:	687b      	ldr	r3, [r7, #4]
 8008b86:	689b      	ldr	r3, [r3, #8]
 8008b88:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8008b8a:	68fb      	ldr	r3, [r7, #12]
 8008b8c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008b90:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008b92:	683a      	ldr	r2, [r7, #0]
 8008b94:	68fb      	ldr	r3, [r7, #12]
 8008b96:	4313      	orrs	r3, r2
 8008b98:	f043 0307 	orr.w	r3, r3, #7
 8008b9c:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	68fa      	ldr	r2, [r7, #12]
 8008ba2:	609a      	str	r2, [r3, #8]
}
 8008ba4:	bf00      	nop
 8008ba6:	3714      	adds	r7, #20
 8008ba8:	46bd      	mov	sp, r7
 8008baa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bae:	4770      	bx	lr

08008bb0 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8008bb0:	b480      	push	{r7}
 8008bb2:	b087      	sub	sp, #28
 8008bb4:	af00      	add	r7, sp, #0
 8008bb6:	60f8      	str	r0, [r7, #12]
 8008bb8:	60b9      	str	r1, [r7, #8]
 8008bba:	607a      	str	r2, [r7, #4]
 8008bbc:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8008bbe:	68fb      	ldr	r3, [r7, #12]
 8008bc0:	689b      	ldr	r3, [r3, #8]
 8008bc2:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008bc4:	697b      	ldr	r3, [r7, #20]
 8008bc6:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8008bca:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008bcc:	683b      	ldr	r3, [r7, #0]
 8008bce:	021a      	lsls	r2, r3, #8
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	431a      	orrs	r2, r3
 8008bd4:	68bb      	ldr	r3, [r7, #8]
 8008bd6:	4313      	orrs	r3, r2
 8008bd8:	697a      	ldr	r2, [r7, #20]
 8008bda:	4313      	orrs	r3, r2
 8008bdc:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8008bde:	68fb      	ldr	r3, [r7, #12]
 8008be0:	697a      	ldr	r2, [r7, #20]
 8008be2:	609a      	str	r2, [r3, #8]
}
 8008be4:	bf00      	nop
 8008be6:	371c      	adds	r7, #28
 8008be8:	46bd      	mov	sp, r7
 8008bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008bee:	4770      	bx	lr

08008bf0 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8008bf0:	b480      	push	{r7}
 8008bf2:	b087      	sub	sp, #28
 8008bf4:	af00      	add	r7, sp, #0
 8008bf6:	60f8      	str	r0, [r7, #12]
 8008bf8:	60b9      	str	r1, [r7, #8]
 8008bfa:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8008bfc:	68bb      	ldr	r3, [r7, #8]
 8008bfe:	f003 031f 	and.w	r3, r3, #31
 8008c02:	2201      	movs	r2, #1
 8008c04:	fa02 f303 	lsl.w	r3, r2, r3
 8008c08:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8008c0a:	68fb      	ldr	r3, [r7, #12]
 8008c0c:	6a1a      	ldr	r2, [r3, #32]
 8008c0e:	697b      	ldr	r3, [r7, #20]
 8008c10:	43db      	mvns	r3, r3
 8008c12:	401a      	ands	r2, r3
 8008c14:	68fb      	ldr	r3, [r7, #12]
 8008c16:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8008c18:	68fb      	ldr	r3, [r7, #12]
 8008c1a:	6a1a      	ldr	r2, [r3, #32]
 8008c1c:	68bb      	ldr	r3, [r7, #8]
 8008c1e:	f003 031f 	and.w	r3, r3, #31
 8008c22:	6879      	ldr	r1, [r7, #4]
 8008c24:	fa01 f303 	lsl.w	r3, r1, r3
 8008c28:	431a      	orrs	r2, r3
 8008c2a:	68fb      	ldr	r3, [r7, #12]
 8008c2c:	621a      	str	r2, [r3, #32]
}
 8008c2e:	bf00      	nop
 8008c30:	371c      	adds	r7, #28
 8008c32:	46bd      	mov	sp, r7
 8008c34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c38:	4770      	bx	lr
	...

08008c3c <TIM_ResetCallback>:
  * @param  htim pointer to a TIM_HandleTypeDef structure that contains
  *                the configuration information for TIM module.
  * @retval None
  */
void TIM_ResetCallback(TIM_HandleTypeDef *htim)
{
 8008c3c:	b480      	push	{r7}
 8008c3e:	b083      	sub	sp, #12
 8008c40:	af00      	add	r7, sp, #0
 8008c42:	6078      	str	r0, [r7, #4]
  /* Reset the TIM callback to the legacy weak callbacks */
  htim->PeriodElapsedCallback             = HAL_TIM_PeriodElapsedCallback;
 8008c44:	687b      	ldr	r3, [r7, #4]
 8008c46:	4a1e      	ldr	r2, [pc, #120]	@ (8008cc0 <TIM_ResetCallback+0x84>)
 8008c48:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  htim->PeriodElapsedHalfCpltCallback     = HAL_TIM_PeriodElapsedHalfCpltCallback;
 8008c4c:	687b      	ldr	r3, [r7, #4]
 8008c4e:	4a1d      	ldr	r2, [pc, #116]	@ (8008cc4 <TIM_ResetCallback+0x88>)
 8008c50:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  htim->TriggerCallback                   = HAL_TIM_TriggerCallback;
 8008c54:	687b      	ldr	r3, [r7, #4]
 8008c56:	4a1c      	ldr	r2, [pc, #112]	@ (8008cc8 <TIM_ResetCallback+0x8c>)
 8008c58:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  htim->TriggerHalfCpltCallback           = HAL_TIM_TriggerHalfCpltCallback;
 8008c5c:	687b      	ldr	r3, [r7, #4]
 8008c5e:	4a1b      	ldr	r2, [pc, #108]	@ (8008ccc <TIM_ResetCallback+0x90>)
 8008c60:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  htim->IC_CaptureCallback                = HAL_TIM_IC_CaptureCallback;
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	4a1a      	ldr	r2, [pc, #104]	@ (8008cd0 <TIM_ResetCallback+0x94>)
 8008c68:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  htim->IC_CaptureHalfCpltCallback        = HAL_TIM_IC_CaptureHalfCpltCallback;
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	4a19      	ldr	r2, [pc, #100]	@ (8008cd4 <TIM_ResetCallback+0x98>)
 8008c70:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  htim->OC_DelayElapsedCallback           = HAL_TIM_OC_DelayElapsedCallback;
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	4a18      	ldr	r2, [pc, #96]	@ (8008cd8 <TIM_ResetCallback+0x9c>)
 8008c78:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  htim->PWM_PulseFinishedCallback         = HAL_TIM_PWM_PulseFinishedCallback;
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	4a17      	ldr	r2, [pc, #92]	@ (8008cdc <TIM_ResetCallback+0xa0>)
 8008c80:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  htim->PWM_PulseFinishedHalfCpltCallback = HAL_TIM_PWM_PulseFinishedHalfCpltCallback;
 8008c84:	687b      	ldr	r3, [r7, #4]
 8008c86:	4a16      	ldr	r2, [pc, #88]	@ (8008ce0 <TIM_ResetCallback+0xa4>)
 8008c88:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  htim->ErrorCallback                     = HAL_TIM_ErrorCallback;
 8008c8c:	687b      	ldr	r3, [r7, #4]
 8008c8e:	4a15      	ldr	r2, [pc, #84]	@ (8008ce4 <TIM_ResetCallback+0xa8>)
 8008c90:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
  htim->CommutationCallback               = HAL_TIMEx_CommutCallback;
 8008c94:	687b      	ldr	r3, [r7, #4]
 8008c96:	4a14      	ldr	r2, [pc, #80]	@ (8008ce8 <TIM_ResetCallback+0xac>)
 8008c98:	f8c3 20ac 	str.w	r2, [r3, #172]	@ 0xac
  htim->CommutationHalfCpltCallback       = HAL_TIMEx_CommutHalfCpltCallback;
 8008c9c:	687b      	ldr	r3, [r7, #4]
 8008c9e:	4a13      	ldr	r2, [pc, #76]	@ (8008cec <TIM_ResetCallback+0xb0>)
 8008ca0:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
  htim->BreakCallback                     = HAL_TIMEx_BreakCallback;
 8008ca4:	687b      	ldr	r3, [r7, #4]
 8008ca6:	4a12      	ldr	r2, [pc, #72]	@ (8008cf0 <TIM_ResetCallback+0xb4>)
 8008ca8:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
  htim->Break2Callback                    = HAL_TIMEx_Break2Callback;
 8008cac:	687b      	ldr	r3, [r7, #4]
 8008cae:	4a11      	ldr	r2, [pc, #68]	@ (8008cf4 <TIM_ResetCallback+0xb8>)
 8008cb0:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
}
 8008cb4:	bf00      	nop
 8008cb6:	370c      	adds	r7, #12
 8008cb8:	46bd      	mov	sp, r7
 8008cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008cbe:	4770      	bx	lr
 8008cc0:	080083e1 	.word	0x080083e1
 8008cc4:	080083f5 	.word	0x080083f5
 8008cc8:	0800846d 	.word	0x0800846d
 8008ccc:	08008481 	.word	0x08008481
 8008cd0:	0800841d 	.word	0x0800841d
 8008cd4:	08008431 	.word	0x08008431
 8008cd8:	08008409 	.word	0x08008409
 8008cdc:	08008445 	.word	0x08008445
 8008ce0:	08008459 	.word	0x08008459
 8008ce4:	08008495 	.word	0x08008495
 8008ce8:	08008e15 	.word	0x08008e15
 8008cec:	08008e29 	.word	0x08008e29
 8008cf0:	08008e3d 	.word	0x08008e3d
 8008cf4:	08008e51 	.word	0x08008e51

08008cf8 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008cf8:	b480      	push	{r7}
 8008cfa:	b085      	sub	sp, #20
 8008cfc:	af00      	add	r7, sp, #0
 8008cfe:	6078      	str	r0, [r7, #4]
 8008d00:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008d02:	687b      	ldr	r3, [r7, #4]
 8008d04:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008d08:	2b01      	cmp	r3, #1
 8008d0a:	d101      	bne.n	8008d10 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008d0c:	2302      	movs	r3, #2
 8008d0e:	e06d      	b.n	8008dec <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 8008d10:	687b      	ldr	r3, [r7, #4]
 8008d12:	2201      	movs	r2, #1
 8008d14:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008d18:	687b      	ldr	r3, [r7, #4]
 8008d1a:	2202      	movs	r2, #2
 8008d1c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008d20:	687b      	ldr	r3, [r7, #4]
 8008d22:	681b      	ldr	r3, [r3, #0]
 8008d24:	685b      	ldr	r3, [r3, #4]
 8008d26:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8008d28:	687b      	ldr	r3, [r7, #4]
 8008d2a:	681b      	ldr	r3, [r3, #0]
 8008d2c:	689b      	ldr	r3, [r3, #8]
 8008d2e:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 8008d30:	687b      	ldr	r3, [r7, #4]
 8008d32:	681b      	ldr	r3, [r3, #0]
 8008d34:	4a30      	ldr	r2, [pc, #192]	@ (8008df8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8008d36:	4293      	cmp	r3, r2
 8008d38:	d004      	beq.n	8008d44 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8008d3a:	687b      	ldr	r3, [r7, #4]
 8008d3c:	681b      	ldr	r3, [r3, #0]
 8008d3e:	4a2f      	ldr	r2, [pc, #188]	@ (8008dfc <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8008d40:	4293      	cmp	r3, r2
 8008d42:	d108      	bne.n	8008d56 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 8008d44:	68fb      	ldr	r3, [r7, #12]
 8008d46:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8008d4a:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 8008d4c:	683b      	ldr	r3, [r7, #0]
 8008d4e:	685b      	ldr	r3, [r3, #4]
 8008d50:	68fa      	ldr	r2, [r7, #12]
 8008d52:	4313      	orrs	r3, r2
 8008d54:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8008d56:	68fb      	ldr	r3, [r7, #12]
 8008d58:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008d5c:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008d5e:	683b      	ldr	r3, [r7, #0]
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	68fa      	ldr	r2, [r7, #12]
 8008d64:	4313      	orrs	r3, r2
 8008d66:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008d68:	687b      	ldr	r3, [r7, #4]
 8008d6a:	681b      	ldr	r3, [r3, #0]
 8008d6c:	68fa      	ldr	r2, [r7, #12]
 8008d6e:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	4a20      	ldr	r2, [pc, #128]	@ (8008df8 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 8008d76:	4293      	cmp	r3, r2
 8008d78:	d022      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008d7a:	687b      	ldr	r3, [r7, #4]
 8008d7c:	681b      	ldr	r3, [r3, #0]
 8008d7e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008d82:	d01d      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008d84:	687b      	ldr	r3, [r7, #4]
 8008d86:	681b      	ldr	r3, [r3, #0]
 8008d88:	4a1d      	ldr	r2, [pc, #116]	@ (8008e00 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 8008d8a:	4293      	cmp	r3, r2
 8008d8c:	d018      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008d8e:	687b      	ldr	r3, [r7, #4]
 8008d90:	681b      	ldr	r3, [r3, #0]
 8008d92:	4a1c      	ldr	r2, [pc, #112]	@ (8008e04 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 8008d94:	4293      	cmp	r3, r2
 8008d96:	d013      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008d98:	687b      	ldr	r3, [r7, #4]
 8008d9a:	681b      	ldr	r3, [r3, #0]
 8008d9c:	4a1a      	ldr	r2, [pc, #104]	@ (8008e08 <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 8008d9e:	4293      	cmp	r3, r2
 8008da0:	d00e      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	681b      	ldr	r3, [r3, #0]
 8008da6:	4a15      	ldr	r2, [pc, #84]	@ (8008dfc <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 8008da8:	4293      	cmp	r3, r2
 8008daa:	d009      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008dac:	687b      	ldr	r3, [r7, #4]
 8008dae:	681b      	ldr	r3, [r3, #0]
 8008db0:	4a16      	ldr	r2, [pc, #88]	@ (8008e0c <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 8008db2:	4293      	cmp	r3, r2
 8008db4:	d004      	beq.n	8008dc0 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	681b      	ldr	r3, [r3, #0]
 8008dba:	4a15      	ldr	r2, [pc, #84]	@ (8008e10 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8008dbc:	4293      	cmp	r3, r2
 8008dbe:	d10c      	bne.n	8008dda <HAL_TIMEx_MasterConfigSynchronization+0xe2>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008dc0:	68bb      	ldr	r3, [r7, #8]
 8008dc2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8008dc6:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008dc8:	683b      	ldr	r3, [r7, #0]
 8008dca:	689b      	ldr	r3, [r3, #8]
 8008dcc:	68ba      	ldr	r2, [r7, #8]
 8008dce:	4313      	orrs	r3, r2
 8008dd0:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008dd2:	687b      	ldr	r3, [r7, #4]
 8008dd4:	681b      	ldr	r3, [r3, #0]
 8008dd6:	68ba      	ldr	r2, [r7, #8]
 8008dd8:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008dda:	687b      	ldr	r3, [r7, #4]
 8008ddc:	2201      	movs	r2, #1
 8008dde:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8008de2:	687b      	ldr	r3, [r7, #4]
 8008de4:	2200      	movs	r2, #0
 8008de6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8008dea:	2300      	movs	r3, #0
}
 8008dec:	4618      	mov	r0, r3
 8008dee:	3714      	adds	r7, #20
 8008df0:	46bd      	mov	sp, r7
 8008df2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008df6:	4770      	bx	lr
 8008df8:	40010000 	.word	0x40010000
 8008dfc:	40010400 	.word	0x40010400
 8008e00:	40000400 	.word	0x40000400
 8008e04:	40000800 	.word	0x40000800
 8008e08:	40000c00 	.word	0x40000c00
 8008e0c:	40014000 	.word	0x40014000
 8008e10:	40001800 	.word	0x40001800

08008e14 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 8008e14:	b480      	push	{r7}
 8008e16:	b083      	sub	sp, #12
 8008e18:	af00      	add	r7, sp, #0
 8008e1a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8008e1c:	bf00      	nop
 8008e1e:	370c      	adds	r7, #12
 8008e20:	46bd      	mov	sp, r7
 8008e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e26:	4770      	bx	lr

08008e28 <HAL_TIMEx_CommutHalfCpltCallback>:
  * @brief  Commutation half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 8008e28:	b480      	push	{r7}
 8008e2a:	b083      	sub	sp, #12
 8008e2c:	af00      	add	r7, sp, #0
 8008e2e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutHalfCpltCallback could be implemented in the user file
   */
}
 8008e30:	bf00      	nop
 8008e32:	370c      	adds	r7, #12
 8008e34:	46bd      	mov	sp, r7
 8008e36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e3a:	4770      	bx	lr

08008e3c <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8008e3c:	b480      	push	{r7}
 8008e3e:	b083      	sub	sp, #12
 8008e40:	af00      	add	r7, sp, #0
 8008e42:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8008e44:	bf00      	nop
 8008e46:	370c      	adds	r7, #12
 8008e48:	46bd      	mov	sp, r7
 8008e4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e4e:	4770      	bx	lr

08008e50 <HAL_TIMEx_Break2Callback>:
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 8008e50:	b480      	push	{r7}
 8008e52:	b083      	sub	sp, #12
 8008e54:	af00      	add	r7, sp, #0
 8008e56:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 8008e58:	bf00      	nop
 8008e5a:	370c      	adds	r7, #12
 8008e5c:	46bd      	mov	sp, r7
 8008e5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e62:	4770      	bx	lr

08008e64 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8008e64:	b580      	push	{r7, lr}
 8008e66:	b082      	sub	sp, #8
 8008e68:	af00      	add	r7, sp, #0
 8008e6a:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	2b00      	cmp	r3, #0
 8008e70:	d101      	bne.n	8008e76 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8008e72:	2301      	movs	r3, #1
 8008e74:	e04e      	b.n	8008f14 <HAL_UART_Init+0xb0>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8008e76:	687b      	ldr	r3, [r7, #4]
 8008e78:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008e7a:	2b00      	cmp	r3, #0
 8008e7c:	d114      	bne.n	8008ea8 <HAL_UART_Init+0x44>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	2200      	movs	r2, #0
 8008e82:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    UART_InitCallbacksToDefault(huart);
 8008e86:	6878      	ldr	r0, [r7, #4]
 8008e88:	f000 f8a6 	bl	8008fd8 <UART_InitCallbacksToDefault>

    if (huart->MspInitCallback == NULL)
 8008e8c:	687b      	ldr	r3, [r7, #4]
 8008e8e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8008e92:	2b00      	cmp	r3, #0
 8008e94:	d103      	bne.n	8008e9e <HAL_UART_Init+0x3a>
    {
      huart->MspInitCallback = HAL_UART_MspInit;
 8008e96:	687b      	ldr	r3, [r7, #4]
 8008e98:	4a20      	ldr	r2, [pc, #128]	@ (8008f1c <HAL_UART_Init+0xb8>)
 8008e9a:	f8c3 20ac 	str.w	r2, [r3, #172]	@ 0xac
    }

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
 8008e9e:	687b      	ldr	r3, [r7, #4]
 8008ea0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8008ea4:	6878      	ldr	r0, [r7, #4]
 8008ea6:	4798      	blx	r3
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8008ea8:	687b      	ldr	r3, [r7, #4]
 8008eaa:	2224      	movs	r2, #36	@ 0x24
 8008eac:	67da      	str	r2, [r3, #124]	@ 0x7c

  __HAL_UART_DISABLE(huart);
 8008eae:	687b      	ldr	r3, [r7, #4]
 8008eb0:	681b      	ldr	r3, [r3, #0]
 8008eb2:	681a      	ldr	r2, [r3, #0]
 8008eb4:	687b      	ldr	r3, [r7, #4]
 8008eb6:	681b      	ldr	r3, [r3, #0]
 8008eb8:	f022 0201 	bic.w	r2, r2, #1
 8008ebc:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008ec2:	2b00      	cmp	r3, #0
 8008ec4:	d002      	beq.n	8008ecc <HAL_UART_Init+0x68>
  {
    UART_AdvFeatureConfig(huart);
 8008ec6:	6878      	ldr	r0, [r7, #4]
 8008ec8:	f000 fb2a 	bl	8009520 <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8008ecc:	6878      	ldr	r0, [r7, #4]
 8008ece:	f000 f8c3 	bl	8009058 <UART_SetConfig>
 8008ed2:	4603      	mov	r3, r0
 8008ed4:	2b01      	cmp	r3, #1
 8008ed6:	d101      	bne.n	8008edc <HAL_UART_Init+0x78>
  {
    return HAL_ERROR;
 8008ed8:	2301      	movs	r3, #1
 8008eda:	e01b      	b.n	8008f14 <HAL_UART_Init+0xb0>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	681b      	ldr	r3, [r3, #0]
 8008ee0:	685a      	ldr	r2, [r3, #4]
 8008ee2:	687b      	ldr	r3, [r7, #4]
 8008ee4:	681b      	ldr	r3, [r3, #0]
 8008ee6:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8008eea:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8008eec:	687b      	ldr	r3, [r7, #4]
 8008eee:	681b      	ldr	r3, [r3, #0]
 8008ef0:	689a      	ldr	r2, [r3, #8]
 8008ef2:	687b      	ldr	r3, [r7, #4]
 8008ef4:	681b      	ldr	r3, [r3, #0]
 8008ef6:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8008efa:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	681b      	ldr	r3, [r3, #0]
 8008f00:	681a      	ldr	r2, [r3, #0]
 8008f02:	687b      	ldr	r3, [r7, #4]
 8008f04:	681b      	ldr	r3, [r3, #0]
 8008f06:	f042 0201 	orr.w	r2, r2, #1
 8008f0a:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8008f0c:	6878      	ldr	r0, [r7, #4]
 8008f0e:	f000 fba9 	bl	8009664 <UART_CheckIdleState>
 8008f12:	4603      	mov	r3, r0
}
 8008f14:	4618      	mov	r0, r3
 8008f16:	3708      	adds	r7, #8
 8008f18:	46bd      	mov	sp, r7
 8008f1a:	bd80      	pop	{r7, pc}
 8008f1c:	08001a09 	.word	0x08001a09

08008f20 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8008f20:	b480      	push	{r7}
 8008f22:	b083      	sub	sp, #12
 8008f24:	af00      	add	r7, sp, #0
 8008f26:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 8008f28:	bf00      	nop
 8008f2a:	370c      	adds	r7, #12
 8008f2c:	46bd      	mov	sp, r7
 8008f2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f32:	4770      	bx	lr

08008f34 <HAL_UART_TxHalfCpltCallback>:
  * @brief  Tx Half Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 8008f34:	b480      	push	{r7}
 8008f36:	b083      	sub	sp, #12
 8008f38:	af00      	add	r7, sp, #0
 8008f3a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
   */
}
 8008f3c:	bf00      	nop
 8008f3e:	370c      	adds	r7, #12
 8008f40:	46bd      	mov	sp, r7
 8008f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f46:	4770      	bx	lr

08008f48 <HAL_UART_RxCpltCallback>:
  * @brief  Rx Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8008f48:	b480      	push	{r7}
 8008f4a:	b083      	sub	sp, #12
 8008f4c:	af00      	add	r7, sp, #0
 8008f4e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_RxCpltCallback can be implemented in the user file.
   */
}
 8008f50:	bf00      	nop
 8008f52:	370c      	adds	r7, #12
 8008f54:	46bd      	mov	sp, r7
 8008f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f5a:	4770      	bx	lr

08008f5c <HAL_UART_RxHalfCpltCallback>:
  * @brief  Rx Half Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 8008f5c:	b480      	push	{r7}
 8008f5e:	b083      	sub	sp, #12
 8008f60:	af00      	add	r7, sp, #0
 8008f62:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
   */
}
 8008f64:	bf00      	nop
 8008f66:	370c      	adds	r7, #12
 8008f68:	46bd      	mov	sp, r7
 8008f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f6e:	4770      	bx	lr

08008f70 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 8008f70:	b480      	push	{r7}
 8008f72:	b083      	sub	sp, #12
 8008f74:	af00      	add	r7, sp, #0
 8008f76:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 8008f78:	bf00      	nop
 8008f7a:	370c      	adds	r7, #12
 8008f7c:	46bd      	mov	sp, r7
 8008f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f82:	4770      	bx	lr

08008f84 <HAL_UART_AbortCpltCallback>:
  * @brief  UART Abort Complete callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
{
 8008f84:	b480      	push	{r7}
 8008f86:	b083      	sub	sp, #12
 8008f88:	af00      	add	r7, sp, #0
 8008f8a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_AbortCpltCallback can be implemented in the user file.
   */
}
 8008f8c:	bf00      	nop
 8008f8e:	370c      	adds	r7, #12
 8008f90:	46bd      	mov	sp, r7
 8008f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f96:	4770      	bx	lr

08008f98 <HAL_UART_AbortTransmitCpltCallback>:
  * @brief  UART Abort Complete callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
{
 8008f98:	b480      	push	{r7}
 8008f9a:	b083      	sub	sp, #12
 8008f9c:	af00      	add	r7, sp, #0
 8008f9e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
   */
}
 8008fa0:	bf00      	nop
 8008fa2:	370c      	adds	r7, #12
 8008fa4:	46bd      	mov	sp, r7
 8008fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008faa:	4770      	bx	lr

08008fac <HAL_UART_AbortReceiveCpltCallback>:
  * @brief  UART Abort Receive Complete callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
{
 8008fac:	b480      	push	{r7}
 8008fae:	b083      	sub	sp, #12
 8008fb0:	af00      	add	r7, sp, #0
 8008fb2:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
   */
}
 8008fb4:	bf00      	nop
 8008fb6:	370c      	adds	r7, #12
 8008fb8:	46bd      	mov	sp, r7
 8008fba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fbe:	4770      	bx	lr

08008fc0 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 8008fc0:	b480      	push	{r7}
 8008fc2:	b083      	sub	sp, #12
 8008fc4:	af00      	add	r7, sp, #0
 8008fc6:	6078      	str	r0, [r7, #4]
 8008fc8:	460b      	mov	r3, r1
 8008fca:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 8008fcc:	bf00      	nop
 8008fce:	370c      	adds	r7, #12
 8008fd0:	46bd      	mov	sp, r7
 8008fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fd6:	4770      	bx	lr

08008fd8 <UART_InitCallbacksToDefault>:
  * @param  huart UART handle.
  * @retval none
  */
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
{
 8008fd8:	b480      	push	{r7}
 8008fda:	b083      	sub	sp, #12
 8008fdc:	af00      	add	r7, sp, #0
 8008fde:	6078      	str	r0, [r7, #4]
  /* Init the UART Callback settings */
  huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltCallback        */
 8008fe0:	687b      	ldr	r3, [r7, #4]
 8008fe2:	4a14      	ldr	r2, [pc, #80]	@ (8009034 <UART_InitCallbacksToDefault+0x5c>)
 8008fe4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallback            */
 8008fe8:	687b      	ldr	r3, [r7, #4]
 8008fea:	4a13      	ldr	r2, [pc, #76]	@ (8009038 <UART_InitCallbacksToDefault+0x60>)
 8008fec:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltCallback        */
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	4a12      	ldr	r2, [pc, #72]	@ (800903c <UART_InitCallbacksToDefault+0x64>)
 8008ff4:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallback            */
 8008ff8:	687b      	ldr	r3, [r7, #4]
 8008ffa:	4a11      	ldr	r2, [pc, #68]	@ (8009040 <UART_InitCallbacksToDefault+0x68>)
 8008ffc:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallback             */
 8009000:	687b      	ldr	r3, [r7, #4]
 8009002:	4a10      	ldr	r2, [pc, #64]	@ (8009044 <UART_InitCallbacksToDefault+0x6c>)
 8009004:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCallback         */
 8009008:	687b      	ldr	r3, [r7, #4]
 800900a:	4a0f      	ldr	r2, [pc, #60]	@ (8009048 <UART_InitCallbacksToDefault+0x70>)
 800900c:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransmitCpltCallback */
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	4a0e      	ldr	r2, [pc, #56]	@ (800904c <UART_InitCallbacksToDefault+0x74>)
 8009014:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiveCpltCallback  */
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	4a0d      	ldr	r2, [pc, #52]	@ (8009050 <UART_InitCallbacksToDefault+0x78>)
 800901c:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
#if defined(USART_CR1_UESM)
#if defined(USART_CR3_WUFIE)
  huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallback            */
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */
  huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCallback           */
 8009020:	687b      	ldr	r3, [r7, #4]
 8009022:	4a0c      	ldr	r2, [pc, #48]	@ (8009054 <UART_InitCallbacksToDefault+0x7c>)
 8009024:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8

}
 8009028:	bf00      	nop
 800902a:	370c      	adds	r7, #12
 800902c:	46bd      	mov	sp, r7
 800902e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009032:	4770      	bx	lr
 8009034:	08008f35 	.word	0x08008f35
 8009038:	08008f21 	.word	0x08008f21
 800903c:	08008f5d 	.word	0x08008f5d
 8009040:	08008f49 	.word	0x08008f49
 8009044:	08008f71 	.word	0x08008f71
 8009048:	08008f85 	.word	0x08008f85
 800904c:	08008f99 	.word	0x08008f99
 8009050:	08008fad 	.word	0x08008fad
 8009054:	08008fc1 	.word	0x08008fc1

08009058 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8009058:	b580      	push	{r7, lr}
 800905a:	b088      	sub	sp, #32
 800905c:	af00      	add	r7, sp, #0
 800905e:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 8009060:	2300      	movs	r3, #0
 8009062:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8009064:	687b      	ldr	r3, [r7, #4]
 8009066:	689a      	ldr	r2, [r3, #8]
 8009068:	687b      	ldr	r3, [r7, #4]
 800906a:	691b      	ldr	r3, [r3, #16]
 800906c:	431a      	orrs	r2, r3
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	695b      	ldr	r3, [r3, #20]
 8009072:	431a      	orrs	r2, r3
 8009074:	687b      	ldr	r3, [r7, #4]
 8009076:	69db      	ldr	r3, [r3, #28]
 8009078:	4313      	orrs	r3, r2
 800907a:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800907c:	687b      	ldr	r3, [r7, #4]
 800907e:	681b      	ldr	r3, [r3, #0]
 8009080:	681a      	ldr	r2, [r3, #0]
 8009082:	4ba6      	ldr	r3, [pc, #664]	@ (800931c <UART_SetConfig+0x2c4>)
 8009084:	4013      	ands	r3, r2
 8009086:	687a      	ldr	r2, [r7, #4]
 8009088:	6812      	ldr	r2, [r2, #0]
 800908a:	6979      	ldr	r1, [r7, #20]
 800908c:	430b      	orrs	r3, r1
 800908e:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8009090:	687b      	ldr	r3, [r7, #4]
 8009092:	681b      	ldr	r3, [r3, #0]
 8009094:	685b      	ldr	r3, [r3, #4]
 8009096:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	68da      	ldr	r2, [r3, #12]
 800909e:	687b      	ldr	r3, [r7, #4]
 80090a0:	681b      	ldr	r3, [r3, #0]
 80090a2:	430a      	orrs	r2, r1
 80090a4:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 80090a6:	687b      	ldr	r3, [r7, #4]
 80090a8:	699b      	ldr	r3, [r3, #24]
 80090aa:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 80090ac:	687b      	ldr	r3, [r7, #4]
 80090ae:	6a1b      	ldr	r3, [r3, #32]
 80090b0:	697a      	ldr	r2, [r7, #20]
 80090b2:	4313      	orrs	r3, r2
 80090b4:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 80090b6:	687b      	ldr	r3, [r7, #4]
 80090b8:	681b      	ldr	r3, [r3, #0]
 80090ba:	689b      	ldr	r3, [r3, #8]
 80090bc:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 80090c0:	687b      	ldr	r3, [r7, #4]
 80090c2:	681b      	ldr	r3, [r3, #0]
 80090c4:	697a      	ldr	r2, [r7, #20]
 80090c6:	430a      	orrs	r2, r1
 80090c8:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	681b      	ldr	r3, [r3, #0]
 80090ce:	4a94      	ldr	r2, [pc, #592]	@ (8009320 <UART_SetConfig+0x2c8>)
 80090d0:	4293      	cmp	r3, r2
 80090d2:	d120      	bne.n	8009116 <UART_SetConfig+0xbe>
 80090d4:	4b93      	ldr	r3, [pc, #588]	@ (8009324 <UART_SetConfig+0x2cc>)
 80090d6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80090da:	f003 0303 	and.w	r3, r3, #3
 80090de:	2b03      	cmp	r3, #3
 80090e0:	d816      	bhi.n	8009110 <UART_SetConfig+0xb8>
 80090e2:	a201      	add	r2, pc, #4	@ (adr r2, 80090e8 <UART_SetConfig+0x90>)
 80090e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80090e8:	080090f9 	.word	0x080090f9
 80090ec:	08009105 	.word	0x08009105
 80090f0:	080090ff 	.word	0x080090ff
 80090f4:	0800910b 	.word	0x0800910b
 80090f8:	2301      	movs	r3, #1
 80090fa:	77fb      	strb	r3, [r7, #31]
 80090fc:	e150      	b.n	80093a0 <UART_SetConfig+0x348>
 80090fe:	2302      	movs	r3, #2
 8009100:	77fb      	strb	r3, [r7, #31]
 8009102:	e14d      	b.n	80093a0 <UART_SetConfig+0x348>
 8009104:	2304      	movs	r3, #4
 8009106:	77fb      	strb	r3, [r7, #31]
 8009108:	e14a      	b.n	80093a0 <UART_SetConfig+0x348>
 800910a:	2308      	movs	r3, #8
 800910c:	77fb      	strb	r3, [r7, #31]
 800910e:	e147      	b.n	80093a0 <UART_SetConfig+0x348>
 8009110:	2310      	movs	r3, #16
 8009112:	77fb      	strb	r3, [r7, #31]
 8009114:	e144      	b.n	80093a0 <UART_SetConfig+0x348>
 8009116:	687b      	ldr	r3, [r7, #4]
 8009118:	681b      	ldr	r3, [r3, #0]
 800911a:	4a83      	ldr	r2, [pc, #524]	@ (8009328 <UART_SetConfig+0x2d0>)
 800911c:	4293      	cmp	r3, r2
 800911e:	d132      	bne.n	8009186 <UART_SetConfig+0x12e>
 8009120:	4b80      	ldr	r3, [pc, #512]	@ (8009324 <UART_SetConfig+0x2cc>)
 8009122:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009126:	f003 030c 	and.w	r3, r3, #12
 800912a:	2b0c      	cmp	r3, #12
 800912c:	d828      	bhi.n	8009180 <UART_SetConfig+0x128>
 800912e:	a201      	add	r2, pc, #4	@ (adr r2, 8009134 <UART_SetConfig+0xdc>)
 8009130:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009134:	08009169 	.word	0x08009169
 8009138:	08009181 	.word	0x08009181
 800913c:	08009181 	.word	0x08009181
 8009140:	08009181 	.word	0x08009181
 8009144:	08009175 	.word	0x08009175
 8009148:	08009181 	.word	0x08009181
 800914c:	08009181 	.word	0x08009181
 8009150:	08009181 	.word	0x08009181
 8009154:	0800916f 	.word	0x0800916f
 8009158:	08009181 	.word	0x08009181
 800915c:	08009181 	.word	0x08009181
 8009160:	08009181 	.word	0x08009181
 8009164:	0800917b 	.word	0x0800917b
 8009168:	2300      	movs	r3, #0
 800916a:	77fb      	strb	r3, [r7, #31]
 800916c:	e118      	b.n	80093a0 <UART_SetConfig+0x348>
 800916e:	2302      	movs	r3, #2
 8009170:	77fb      	strb	r3, [r7, #31]
 8009172:	e115      	b.n	80093a0 <UART_SetConfig+0x348>
 8009174:	2304      	movs	r3, #4
 8009176:	77fb      	strb	r3, [r7, #31]
 8009178:	e112      	b.n	80093a0 <UART_SetConfig+0x348>
 800917a:	2308      	movs	r3, #8
 800917c:	77fb      	strb	r3, [r7, #31]
 800917e:	e10f      	b.n	80093a0 <UART_SetConfig+0x348>
 8009180:	2310      	movs	r3, #16
 8009182:	77fb      	strb	r3, [r7, #31]
 8009184:	e10c      	b.n	80093a0 <UART_SetConfig+0x348>
 8009186:	687b      	ldr	r3, [r7, #4]
 8009188:	681b      	ldr	r3, [r3, #0]
 800918a:	4a68      	ldr	r2, [pc, #416]	@ (800932c <UART_SetConfig+0x2d4>)
 800918c:	4293      	cmp	r3, r2
 800918e:	d120      	bne.n	80091d2 <UART_SetConfig+0x17a>
 8009190:	4b64      	ldr	r3, [pc, #400]	@ (8009324 <UART_SetConfig+0x2cc>)
 8009192:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009196:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800919a:	2b30      	cmp	r3, #48	@ 0x30
 800919c:	d013      	beq.n	80091c6 <UART_SetConfig+0x16e>
 800919e:	2b30      	cmp	r3, #48	@ 0x30
 80091a0:	d814      	bhi.n	80091cc <UART_SetConfig+0x174>
 80091a2:	2b20      	cmp	r3, #32
 80091a4:	d009      	beq.n	80091ba <UART_SetConfig+0x162>
 80091a6:	2b20      	cmp	r3, #32
 80091a8:	d810      	bhi.n	80091cc <UART_SetConfig+0x174>
 80091aa:	2b00      	cmp	r3, #0
 80091ac:	d002      	beq.n	80091b4 <UART_SetConfig+0x15c>
 80091ae:	2b10      	cmp	r3, #16
 80091b0:	d006      	beq.n	80091c0 <UART_SetConfig+0x168>
 80091b2:	e00b      	b.n	80091cc <UART_SetConfig+0x174>
 80091b4:	2300      	movs	r3, #0
 80091b6:	77fb      	strb	r3, [r7, #31]
 80091b8:	e0f2      	b.n	80093a0 <UART_SetConfig+0x348>
 80091ba:	2302      	movs	r3, #2
 80091bc:	77fb      	strb	r3, [r7, #31]
 80091be:	e0ef      	b.n	80093a0 <UART_SetConfig+0x348>
 80091c0:	2304      	movs	r3, #4
 80091c2:	77fb      	strb	r3, [r7, #31]
 80091c4:	e0ec      	b.n	80093a0 <UART_SetConfig+0x348>
 80091c6:	2308      	movs	r3, #8
 80091c8:	77fb      	strb	r3, [r7, #31]
 80091ca:	e0e9      	b.n	80093a0 <UART_SetConfig+0x348>
 80091cc:	2310      	movs	r3, #16
 80091ce:	77fb      	strb	r3, [r7, #31]
 80091d0:	e0e6      	b.n	80093a0 <UART_SetConfig+0x348>
 80091d2:	687b      	ldr	r3, [r7, #4]
 80091d4:	681b      	ldr	r3, [r3, #0]
 80091d6:	4a56      	ldr	r2, [pc, #344]	@ (8009330 <UART_SetConfig+0x2d8>)
 80091d8:	4293      	cmp	r3, r2
 80091da:	d120      	bne.n	800921e <UART_SetConfig+0x1c6>
 80091dc:	4b51      	ldr	r3, [pc, #324]	@ (8009324 <UART_SetConfig+0x2cc>)
 80091de:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80091e2:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80091e6:	2bc0      	cmp	r3, #192	@ 0xc0
 80091e8:	d013      	beq.n	8009212 <UART_SetConfig+0x1ba>
 80091ea:	2bc0      	cmp	r3, #192	@ 0xc0
 80091ec:	d814      	bhi.n	8009218 <UART_SetConfig+0x1c0>
 80091ee:	2b80      	cmp	r3, #128	@ 0x80
 80091f0:	d009      	beq.n	8009206 <UART_SetConfig+0x1ae>
 80091f2:	2b80      	cmp	r3, #128	@ 0x80
 80091f4:	d810      	bhi.n	8009218 <UART_SetConfig+0x1c0>
 80091f6:	2b00      	cmp	r3, #0
 80091f8:	d002      	beq.n	8009200 <UART_SetConfig+0x1a8>
 80091fa:	2b40      	cmp	r3, #64	@ 0x40
 80091fc:	d006      	beq.n	800920c <UART_SetConfig+0x1b4>
 80091fe:	e00b      	b.n	8009218 <UART_SetConfig+0x1c0>
 8009200:	2300      	movs	r3, #0
 8009202:	77fb      	strb	r3, [r7, #31]
 8009204:	e0cc      	b.n	80093a0 <UART_SetConfig+0x348>
 8009206:	2302      	movs	r3, #2
 8009208:	77fb      	strb	r3, [r7, #31]
 800920a:	e0c9      	b.n	80093a0 <UART_SetConfig+0x348>
 800920c:	2304      	movs	r3, #4
 800920e:	77fb      	strb	r3, [r7, #31]
 8009210:	e0c6      	b.n	80093a0 <UART_SetConfig+0x348>
 8009212:	2308      	movs	r3, #8
 8009214:	77fb      	strb	r3, [r7, #31]
 8009216:	e0c3      	b.n	80093a0 <UART_SetConfig+0x348>
 8009218:	2310      	movs	r3, #16
 800921a:	77fb      	strb	r3, [r7, #31]
 800921c:	e0c0      	b.n	80093a0 <UART_SetConfig+0x348>
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	681b      	ldr	r3, [r3, #0]
 8009222:	4a44      	ldr	r2, [pc, #272]	@ (8009334 <UART_SetConfig+0x2dc>)
 8009224:	4293      	cmp	r3, r2
 8009226:	d125      	bne.n	8009274 <UART_SetConfig+0x21c>
 8009228:	4b3e      	ldr	r3, [pc, #248]	@ (8009324 <UART_SetConfig+0x2cc>)
 800922a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800922e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8009232:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8009236:	d017      	beq.n	8009268 <UART_SetConfig+0x210>
 8009238:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800923c:	d817      	bhi.n	800926e <UART_SetConfig+0x216>
 800923e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8009242:	d00b      	beq.n	800925c <UART_SetConfig+0x204>
 8009244:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8009248:	d811      	bhi.n	800926e <UART_SetConfig+0x216>
 800924a:	2b00      	cmp	r3, #0
 800924c:	d003      	beq.n	8009256 <UART_SetConfig+0x1fe>
 800924e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8009252:	d006      	beq.n	8009262 <UART_SetConfig+0x20a>
 8009254:	e00b      	b.n	800926e <UART_SetConfig+0x216>
 8009256:	2300      	movs	r3, #0
 8009258:	77fb      	strb	r3, [r7, #31]
 800925a:	e0a1      	b.n	80093a0 <UART_SetConfig+0x348>
 800925c:	2302      	movs	r3, #2
 800925e:	77fb      	strb	r3, [r7, #31]
 8009260:	e09e      	b.n	80093a0 <UART_SetConfig+0x348>
 8009262:	2304      	movs	r3, #4
 8009264:	77fb      	strb	r3, [r7, #31]
 8009266:	e09b      	b.n	80093a0 <UART_SetConfig+0x348>
 8009268:	2308      	movs	r3, #8
 800926a:	77fb      	strb	r3, [r7, #31]
 800926c:	e098      	b.n	80093a0 <UART_SetConfig+0x348>
 800926e:	2310      	movs	r3, #16
 8009270:	77fb      	strb	r3, [r7, #31]
 8009272:	e095      	b.n	80093a0 <UART_SetConfig+0x348>
 8009274:	687b      	ldr	r3, [r7, #4]
 8009276:	681b      	ldr	r3, [r3, #0]
 8009278:	4a2f      	ldr	r2, [pc, #188]	@ (8009338 <UART_SetConfig+0x2e0>)
 800927a:	4293      	cmp	r3, r2
 800927c:	d125      	bne.n	80092ca <UART_SetConfig+0x272>
 800927e:	4b29      	ldr	r3, [pc, #164]	@ (8009324 <UART_SetConfig+0x2cc>)
 8009280:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009284:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 8009288:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800928c:	d017      	beq.n	80092be <UART_SetConfig+0x266>
 800928e:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8009292:	d817      	bhi.n	80092c4 <UART_SetConfig+0x26c>
 8009294:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8009298:	d00b      	beq.n	80092b2 <UART_SetConfig+0x25a>
 800929a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800929e:	d811      	bhi.n	80092c4 <UART_SetConfig+0x26c>
 80092a0:	2b00      	cmp	r3, #0
 80092a2:	d003      	beq.n	80092ac <UART_SetConfig+0x254>
 80092a4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80092a8:	d006      	beq.n	80092b8 <UART_SetConfig+0x260>
 80092aa:	e00b      	b.n	80092c4 <UART_SetConfig+0x26c>
 80092ac:	2301      	movs	r3, #1
 80092ae:	77fb      	strb	r3, [r7, #31]
 80092b0:	e076      	b.n	80093a0 <UART_SetConfig+0x348>
 80092b2:	2302      	movs	r3, #2
 80092b4:	77fb      	strb	r3, [r7, #31]
 80092b6:	e073      	b.n	80093a0 <UART_SetConfig+0x348>
 80092b8:	2304      	movs	r3, #4
 80092ba:	77fb      	strb	r3, [r7, #31]
 80092bc:	e070      	b.n	80093a0 <UART_SetConfig+0x348>
 80092be:	2308      	movs	r3, #8
 80092c0:	77fb      	strb	r3, [r7, #31]
 80092c2:	e06d      	b.n	80093a0 <UART_SetConfig+0x348>
 80092c4:	2310      	movs	r3, #16
 80092c6:	77fb      	strb	r3, [r7, #31]
 80092c8:	e06a      	b.n	80093a0 <UART_SetConfig+0x348>
 80092ca:	687b      	ldr	r3, [r7, #4]
 80092cc:	681b      	ldr	r3, [r3, #0]
 80092ce:	4a1b      	ldr	r2, [pc, #108]	@ (800933c <UART_SetConfig+0x2e4>)
 80092d0:	4293      	cmp	r3, r2
 80092d2:	d138      	bne.n	8009346 <UART_SetConfig+0x2ee>
 80092d4:	4b13      	ldr	r3, [pc, #76]	@ (8009324 <UART_SetConfig+0x2cc>)
 80092d6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80092da:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 80092de:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80092e2:	d017      	beq.n	8009314 <UART_SetConfig+0x2bc>
 80092e4:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 80092e8:	d82a      	bhi.n	8009340 <UART_SetConfig+0x2e8>
 80092ea:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80092ee:	d00b      	beq.n	8009308 <UART_SetConfig+0x2b0>
 80092f0:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80092f4:	d824      	bhi.n	8009340 <UART_SetConfig+0x2e8>
 80092f6:	2b00      	cmp	r3, #0
 80092f8:	d003      	beq.n	8009302 <UART_SetConfig+0x2aa>
 80092fa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80092fe:	d006      	beq.n	800930e <UART_SetConfig+0x2b6>
 8009300:	e01e      	b.n	8009340 <UART_SetConfig+0x2e8>
 8009302:	2300      	movs	r3, #0
 8009304:	77fb      	strb	r3, [r7, #31]
 8009306:	e04b      	b.n	80093a0 <UART_SetConfig+0x348>
 8009308:	2302      	movs	r3, #2
 800930a:	77fb      	strb	r3, [r7, #31]
 800930c:	e048      	b.n	80093a0 <UART_SetConfig+0x348>
 800930e:	2304      	movs	r3, #4
 8009310:	77fb      	strb	r3, [r7, #31]
 8009312:	e045      	b.n	80093a0 <UART_SetConfig+0x348>
 8009314:	2308      	movs	r3, #8
 8009316:	77fb      	strb	r3, [r7, #31]
 8009318:	e042      	b.n	80093a0 <UART_SetConfig+0x348>
 800931a:	bf00      	nop
 800931c:	efff69f3 	.word	0xefff69f3
 8009320:	40011000 	.word	0x40011000
 8009324:	40023800 	.word	0x40023800
 8009328:	40004400 	.word	0x40004400
 800932c:	40004800 	.word	0x40004800
 8009330:	40004c00 	.word	0x40004c00
 8009334:	40005000 	.word	0x40005000
 8009338:	40011400 	.word	0x40011400
 800933c:	40007800 	.word	0x40007800
 8009340:	2310      	movs	r3, #16
 8009342:	77fb      	strb	r3, [r7, #31]
 8009344:	e02c      	b.n	80093a0 <UART_SetConfig+0x348>
 8009346:	687b      	ldr	r3, [r7, #4]
 8009348:	681b      	ldr	r3, [r3, #0]
 800934a:	4a72      	ldr	r2, [pc, #456]	@ (8009514 <UART_SetConfig+0x4bc>)
 800934c:	4293      	cmp	r3, r2
 800934e:	d125      	bne.n	800939c <UART_SetConfig+0x344>
 8009350:	4b71      	ldr	r3, [pc, #452]	@ (8009518 <UART_SetConfig+0x4c0>)
 8009352:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8009356:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800935a:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 800935e:	d017      	beq.n	8009390 <UART_SetConfig+0x338>
 8009360:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 8009364:	d817      	bhi.n	8009396 <UART_SetConfig+0x33e>
 8009366:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800936a:	d00b      	beq.n	8009384 <UART_SetConfig+0x32c>
 800936c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8009370:	d811      	bhi.n	8009396 <UART_SetConfig+0x33e>
 8009372:	2b00      	cmp	r3, #0
 8009374:	d003      	beq.n	800937e <UART_SetConfig+0x326>
 8009376:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800937a:	d006      	beq.n	800938a <UART_SetConfig+0x332>
 800937c:	e00b      	b.n	8009396 <UART_SetConfig+0x33e>
 800937e:	2300      	movs	r3, #0
 8009380:	77fb      	strb	r3, [r7, #31]
 8009382:	e00d      	b.n	80093a0 <UART_SetConfig+0x348>
 8009384:	2302      	movs	r3, #2
 8009386:	77fb      	strb	r3, [r7, #31]
 8009388:	e00a      	b.n	80093a0 <UART_SetConfig+0x348>
 800938a:	2304      	movs	r3, #4
 800938c:	77fb      	strb	r3, [r7, #31]
 800938e:	e007      	b.n	80093a0 <UART_SetConfig+0x348>
 8009390:	2308      	movs	r3, #8
 8009392:	77fb      	strb	r3, [r7, #31]
 8009394:	e004      	b.n	80093a0 <UART_SetConfig+0x348>
 8009396:	2310      	movs	r3, #16
 8009398:	77fb      	strb	r3, [r7, #31]
 800939a:	e001      	b.n	80093a0 <UART_SetConfig+0x348>
 800939c:	2310      	movs	r3, #16
 800939e:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80093a0:	687b      	ldr	r3, [r7, #4]
 80093a2:	69db      	ldr	r3, [r3, #28]
 80093a4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80093a8:	d15b      	bne.n	8009462 <UART_SetConfig+0x40a>
  {
    switch (clocksource)
 80093aa:	7ffb      	ldrb	r3, [r7, #31]
 80093ac:	2b08      	cmp	r3, #8
 80093ae:	d828      	bhi.n	8009402 <UART_SetConfig+0x3aa>
 80093b0:	a201      	add	r2, pc, #4	@ (adr r2, 80093b8 <UART_SetConfig+0x360>)
 80093b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80093b6:	bf00      	nop
 80093b8:	080093dd 	.word	0x080093dd
 80093bc:	080093e5 	.word	0x080093e5
 80093c0:	080093ed 	.word	0x080093ed
 80093c4:	08009403 	.word	0x08009403
 80093c8:	080093f3 	.word	0x080093f3
 80093cc:	08009403 	.word	0x08009403
 80093d0:	08009403 	.word	0x08009403
 80093d4:	08009403 	.word	0x08009403
 80093d8:	080093fb 	.word	0x080093fb
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 80093dc:	f7fd f88a 	bl	80064f4 <HAL_RCC_GetPCLK1Freq>
 80093e0:	61b8      	str	r0, [r7, #24]
        break;
 80093e2:	e013      	b.n	800940c <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 80093e4:	f7fd f89a 	bl	800651c <HAL_RCC_GetPCLK2Freq>
 80093e8:	61b8      	str	r0, [r7, #24]
        break;
 80093ea:	e00f      	b.n	800940c <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80093ec:	4b4b      	ldr	r3, [pc, #300]	@ (800951c <UART_SetConfig+0x4c4>)
 80093ee:	61bb      	str	r3, [r7, #24]
        break;
 80093f0:	e00c      	b.n	800940c <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80093f2:	f7fc ffad 	bl	8006350 <HAL_RCC_GetSysClockFreq>
 80093f6:	61b8      	str	r0, [r7, #24]
        break;
 80093f8:	e008      	b.n	800940c <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80093fa:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80093fe:	61bb      	str	r3, [r7, #24]
        break;
 8009400:	e004      	b.n	800940c <UART_SetConfig+0x3b4>
      default:
        pclk = 0U;
 8009402:	2300      	movs	r3, #0
 8009404:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 8009406:	2301      	movs	r3, #1
 8009408:	77bb      	strb	r3, [r7, #30]
        break;
 800940a:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800940c:	69bb      	ldr	r3, [r7, #24]
 800940e:	2b00      	cmp	r3, #0
 8009410:	d074      	beq.n	80094fc <UART_SetConfig+0x4a4>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 8009412:	69bb      	ldr	r3, [r7, #24]
 8009414:	005a      	lsls	r2, r3, #1
 8009416:	687b      	ldr	r3, [r7, #4]
 8009418:	685b      	ldr	r3, [r3, #4]
 800941a:	085b      	lsrs	r3, r3, #1
 800941c:	441a      	add	r2, r3
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	685b      	ldr	r3, [r3, #4]
 8009422:	fbb2 f3f3 	udiv	r3, r2, r3
 8009426:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 8009428:	693b      	ldr	r3, [r7, #16]
 800942a:	2b0f      	cmp	r3, #15
 800942c:	d916      	bls.n	800945c <UART_SetConfig+0x404>
 800942e:	693b      	ldr	r3, [r7, #16]
 8009430:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009434:	d212      	bcs.n	800945c <UART_SetConfig+0x404>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8009436:	693b      	ldr	r3, [r7, #16]
 8009438:	b29b      	uxth	r3, r3
 800943a:	f023 030f 	bic.w	r3, r3, #15
 800943e:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 8009440:	693b      	ldr	r3, [r7, #16]
 8009442:	085b      	lsrs	r3, r3, #1
 8009444:	b29b      	uxth	r3, r3
 8009446:	f003 0307 	and.w	r3, r3, #7
 800944a:	b29a      	uxth	r2, r3
 800944c:	89fb      	ldrh	r3, [r7, #14]
 800944e:	4313      	orrs	r3, r2
 8009450:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 8009452:	687b      	ldr	r3, [r7, #4]
 8009454:	681b      	ldr	r3, [r3, #0]
 8009456:	89fa      	ldrh	r2, [r7, #14]
 8009458:	60da      	str	r2, [r3, #12]
 800945a:	e04f      	b.n	80094fc <UART_SetConfig+0x4a4>
      }
      else
      {
        ret = HAL_ERROR;
 800945c:	2301      	movs	r3, #1
 800945e:	77bb      	strb	r3, [r7, #30]
 8009460:	e04c      	b.n	80094fc <UART_SetConfig+0x4a4>
      }
    }
  }
  else
  {
    switch (clocksource)
 8009462:	7ffb      	ldrb	r3, [r7, #31]
 8009464:	2b08      	cmp	r3, #8
 8009466:	d828      	bhi.n	80094ba <UART_SetConfig+0x462>
 8009468:	a201      	add	r2, pc, #4	@ (adr r2, 8009470 <UART_SetConfig+0x418>)
 800946a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800946e:	bf00      	nop
 8009470:	08009495 	.word	0x08009495
 8009474:	0800949d 	.word	0x0800949d
 8009478:	080094a5 	.word	0x080094a5
 800947c:	080094bb 	.word	0x080094bb
 8009480:	080094ab 	.word	0x080094ab
 8009484:	080094bb 	.word	0x080094bb
 8009488:	080094bb 	.word	0x080094bb
 800948c:	080094bb 	.word	0x080094bb
 8009490:	080094b3 	.word	0x080094b3
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 8009494:	f7fd f82e 	bl	80064f4 <HAL_RCC_GetPCLK1Freq>
 8009498:	61b8      	str	r0, [r7, #24]
        break;
 800949a:	e013      	b.n	80094c4 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800949c:	f7fd f83e 	bl	800651c <HAL_RCC_GetPCLK2Freq>
 80094a0:	61b8      	str	r0, [r7, #24]
        break;
 80094a2:	e00f      	b.n	80094c4 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 80094a4:	4b1d      	ldr	r3, [pc, #116]	@ (800951c <UART_SetConfig+0x4c4>)
 80094a6:	61bb      	str	r3, [r7, #24]
        break;
 80094a8:	e00c      	b.n	80094c4 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 80094aa:	f7fc ff51 	bl	8006350 <HAL_RCC_GetSysClockFreq>
 80094ae:	61b8      	str	r0, [r7, #24]
        break;
 80094b0:	e008      	b.n	80094c4 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 80094b2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80094b6:	61bb      	str	r3, [r7, #24]
        break;
 80094b8:	e004      	b.n	80094c4 <UART_SetConfig+0x46c>
      default:
        pclk = 0U;
 80094ba:	2300      	movs	r3, #0
 80094bc:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 80094be:	2301      	movs	r3, #1
 80094c0:	77bb      	strb	r3, [r7, #30]
        break;
 80094c2:	bf00      	nop
    }

    if (pclk != 0U)
 80094c4:	69bb      	ldr	r3, [r7, #24]
 80094c6:	2b00      	cmp	r3, #0
 80094c8:	d018      	beq.n	80094fc <UART_SetConfig+0x4a4>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 80094ca:	687b      	ldr	r3, [r7, #4]
 80094cc:	685b      	ldr	r3, [r3, #4]
 80094ce:	085a      	lsrs	r2, r3, #1
 80094d0:	69bb      	ldr	r3, [r7, #24]
 80094d2:	441a      	add	r2, r3
 80094d4:	687b      	ldr	r3, [r7, #4]
 80094d6:	685b      	ldr	r3, [r3, #4]
 80094d8:	fbb2 f3f3 	udiv	r3, r2, r3
 80094dc:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80094de:	693b      	ldr	r3, [r7, #16]
 80094e0:	2b0f      	cmp	r3, #15
 80094e2:	d909      	bls.n	80094f8 <UART_SetConfig+0x4a0>
 80094e4:	693b      	ldr	r3, [r7, #16]
 80094e6:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80094ea:	d205      	bcs.n	80094f8 <UART_SetConfig+0x4a0>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 80094ec:	693b      	ldr	r3, [r7, #16]
 80094ee:	b29a      	uxth	r2, r3
 80094f0:	687b      	ldr	r3, [r7, #4]
 80094f2:	681b      	ldr	r3, [r3, #0]
 80094f4:	60da      	str	r2, [r3, #12]
 80094f6:	e001      	b.n	80094fc <UART_SetConfig+0x4a4>
      }
      else
      {
        ret = HAL_ERROR;
 80094f8:	2301      	movs	r3, #1
 80094fa:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80094fc:	687b      	ldr	r3, [r7, #4]
 80094fe:	2200      	movs	r2, #0
 8009500:	669a      	str	r2, [r3, #104]	@ 0x68
  huart->TxISR = NULL;
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	2200      	movs	r2, #0
 8009506:	66da      	str	r2, [r3, #108]	@ 0x6c

  return ret;
 8009508:	7fbb      	ldrb	r3, [r7, #30]
}
 800950a:	4618      	mov	r0, r3
 800950c:	3720      	adds	r7, #32
 800950e:	46bd      	mov	sp, r7
 8009510:	bd80      	pop	{r7, pc}
 8009512:	bf00      	nop
 8009514:	40007c00 	.word	0x40007c00
 8009518:	40023800 	.word	0x40023800
 800951c:	00f42400 	.word	0x00f42400

08009520 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8009520:	b480      	push	{r7}
 8009522:	b083      	sub	sp, #12
 8009524:	af00      	add	r7, sp, #0
 8009526:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 8009528:	687b      	ldr	r3, [r7, #4]
 800952a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800952c:	f003 0308 	and.w	r3, r3, #8
 8009530:	2b00      	cmp	r3, #0
 8009532:	d00a      	beq.n	800954a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 8009534:	687b      	ldr	r3, [r7, #4]
 8009536:	681b      	ldr	r3, [r3, #0]
 8009538:	685b      	ldr	r3, [r3, #4]
 800953a:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800953e:	687b      	ldr	r3, [r7, #4]
 8009540:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	681b      	ldr	r3, [r3, #0]
 8009546:	430a      	orrs	r2, r1
 8009548:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800954a:	687b      	ldr	r3, [r7, #4]
 800954c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800954e:	f003 0301 	and.w	r3, r3, #1
 8009552:	2b00      	cmp	r3, #0
 8009554:	d00a      	beq.n	800956c <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	681b      	ldr	r3, [r3, #0]
 800955a:	685b      	ldr	r3, [r3, #4]
 800955c:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8009560:	687b      	ldr	r3, [r7, #4]
 8009562:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	681b      	ldr	r3, [r3, #0]
 8009568:	430a      	orrs	r2, r1
 800956a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009570:	f003 0302 	and.w	r3, r3, #2
 8009574:	2b00      	cmp	r3, #0
 8009576:	d00a      	beq.n	800958e <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8009578:	687b      	ldr	r3, [r7, #4]
 800957a:	681b      	ldr	r3, [r3, #0]
 800957c:	685b      	ldr	r3, [r3, #4]
 800957e:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009586:	687b      	ldr	r3, [r7, #4]
 8009588:	681b      	ldr	r3, [r3, #0]
 800958a:	430a      	orrs	r2, r1
 800958c:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800958e:	687b      	ldr	r3, [r7, #4]
 8009590:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009592:	f003 0304 	and.w	r3, r3, #4
 8009596:	2b00      	cmp	r3, #0
 8009598:	d00a      	beq.n	80095b0 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800959a:	687b      	ldr	r3, [r7, #4]
 800959c:	681b      	ldr	r3, [r3, #0]
 800959e:	685b      	ldr	r3, [r3, #4]
 80095a0:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 80095a4:	687b      	ldr	r3, [r7, #4]
 80095a6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80095a8:	687b      	ldr	r3, [r7, #4]
 80095aa:	681b      	ldr	r3, [r3, #0]
 80095ac:	430a      	orrs	r2, r1
 80095ae:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80095b0:	687b      	ldr	r3, [r7, #4]
 80095b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80095b4:	f003 0310 	and.w	r3, r3, #16
 80095b8:	2b00      	cmp	r3, #0
 80095ba:	d00a      	beq.n	80095d2 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 80095bc:	687b      	ldr	r3, [r7, #4]
 80095be:	681b      	ldr	r3, [r3, #0]
 80095c0:	689b      	ldr	r3, [r3, #8]
 80095c2:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 80095c6:	687b      	ldr	r3, [r7, #4]
 80095c8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	430a      	orrs	r2, r1
 80095d0:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 80095d2:	687b      	ldr	r3, [r7, #4]
 80095d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80095d6:	f003 0320 	and.w	r3, r3, #32
 80095da:	2b00      	cmp	r3, #0
 80095dc:	d00a      	beq.n	80095f4 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	681b      	ldr	r3, [r3, #0]
 80095e2:	689b      	ldr	r3, [r3, #8]
 80095e4:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 80095e8:	687b      	ldr	r3, [r7, #4]
 80095ea:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80095ec:	687b      	ldr	r3, [r7, #4]
 80095ee:	681b      	ldr	r3, [r3, #0]
 80095f0:	430a      	orrs	r2, r1
 80095f2:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80095f8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80095fc:	2b00      	cmp	r3, #0
 80095fe:	d01a      	beq.n	8009636 <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 8009600:	687b      	ldr	r3, [r7, #4]
 8009602:	681b      	ldr	r3, [r3, #0]
 8009604:	685b      	ldr	r3, [r3, #4]
 8009606:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800960a:	687b      	ldr	r3, [r7, #4]
 800960c:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800960e:	687b      	ldr	r3, [r7, #4]
 8009610:	681b      	ldr	r3, [r3, #0]
 8009612:	430a      	orrs	r2, r1
 8009614:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8009616:	687b      	ldr	r3, [r7, #4]
 8009618:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800961a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800961e:	d10a      	bne.n	8009636 <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8009620:	687b      	ldr	r3, [r7, #4]
 8009622:	681b      	ldr	r3, [r3, #0]
 8009624:	685b      	ldr	r3, [r3, #4]
 8009626:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800962a:	687b      	ldr	r3, [r7, #4]
 800962c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	430a      	orrs	r2, r1
 8009634:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 8009636:	687b      	ldr	r3, [r7, #4]
 8009638:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800963a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800963e:	2b00      	cmp	r3, #0
 8009640:	d00a      	beq.n	8009658 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8009642:	687b      	ldr	r3, [r7, #4]
 8009644:	681b      	ldr	r3, [r3, #0]
 8009646:	685b      	ldr	r3, [r3, #4]
 8009648:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800964c:	687b      	ldr	r3, [r7, #4]
 800964e:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	681b      	ldr	r3, [r3, #0]
 8009654:	430a      	orrs	r2, r1
 8009656:	605a      	str	r2, [r3, #4]
  }
}
 8009658:	bf00      	nop
 800965a:	370c      	adds	r7, #12
 800965c:	46bd      	mov	sp, r7
 800965e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009662:	4770      	bx	lr

08009664 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 8009664:	b580      	push	{r7, lr}
 8009666:	b08c      	sub	sp, #48	@ 0x30
 8009668:	af02      	add	r7, sp, #8
 800966a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800966c:	687b      	ldr	r3, [r7, #4]
 800966e:	2200      	movs	r2, #0
 8009670:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 8009674:	f7fa fe64 	bl	8004340 <HAL_GetTick>
 8009678:	6278      	str	r0, [r7, #36]	@ 0x24

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800967a:	687b      	ldr	r3, [r7, #4]
 800967c:	681b      	ldr	r3, [r3, #0]
 800967e:	681b      	ldr	r3, [r3, #0]
 8009680:	f003 0308 	and.w	r3, r3, #8
 8009684:	2b08      	cmp	r3, #8
 8009686:	d12e      	bne.n	80096e6 <UART_CheckIdleState+0x82>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 8009688:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800968c:	9300      	str	r3, [sp, #0]
 800968e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009690:	2200      	movs	r2, #0
 8009692:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8009696:	6878      	ldr	r0, [r7, #4]
 8009698:	f000 f83b 	bl	8009712 <UART_WaitOnFlagUntilTimeout>
 800969c:	4603      	mov	r3, r0
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d021      	beq.n	80096e6 <UART_CheckIdleState+0x82>
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 80096a2:	687b      	ldr	r3, [r7, #4]
 80096a4:	681b      	ldr	r3, [r3, #0]
 80096a6:	613b      	str	r3, [r7, #16]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80096a8:	693b      	ldr	r3, [r7, #16]
 80096aa:	e853 3f00 	ldrex	r3, [r3]
 80096ae:	60fb      	str	r3, [r7, #12]
   return(result);
 80096b0:	68fb      	ldr	r3, [r7, #12]
 80096b2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80096b6:	623b      	str	r3, [r7, #32]
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	461a      	mov	r2, r3
 80096be:	6a3b      	ldr	r3, [r7, #32]
 80096c0:	61fb      	str	r3, [r7, #28]
 80096c2:	61ba      	str	r2, [r7, #24]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80096c4:	69b9      	ldr	r1, [r7, #24]
 80096c6:	69fa      	ldr	r2, [r7, #28]
 80096c8:	e841 2300 	strex	r3, r2, [r1]
 80096cc:	617b      	str	r3, [r7, #20]
   return(result);
 80096ce:	697b      	ldr	r3, [r7, #20]
 80096d0:	2b00      	cmp	r3, #0
 80096d2:	d1e6      	bne.n	80096a2 <UART_CheckIdleState+0x3e>

      huart->gState = HAL_UART_STATE_READY;
 80096d4:	687b      	ldr	r3, [r7, #4]
 80096d6:	2220      	movs	r2, #32
 80096d8:	67da      	str	r2, [r3, #124]	@ 0x7c

      __HAL_UNLOCK(huart);
 80096da:	687b      	ldr	r3, [r7, #4]
 80096dc:	2200      	movs	r2, #0
 80096de:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

      /* Timeout occurred */
      return HAL_TIMEOUT;
 80096e2:	2303      	movs	r3, #3
 80096e4:	e011      	b.n	800970a <UART_CheckIdleState+0xa6>
    }
  }
#endif /* USART_ISR_REACK */

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 80096e6:	687b      	ldr	r3, [r7, #4]
 80096e8:	2220      	movs	r2, #32
 80096ea:	67da      	str	r2, [r3, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 80096ec:	687b      	ldr	r3, [r7, #4]
 80096ee:	2220      	movs	r2, #32
 80096f0:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80096f4:	687b      	ldr	r3, [r7, #4]
 80096f6:	2200      	movs	r2, #0
 80096f8:	661a      	str	r2, [r3, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 80096fa:	687b      	ldr	r3, [r7, #4]
 80096fc:	2200      	movs	r2, #0
 80096fe:	665a      	str	r2, [r3, #100]	@ 0x64

  __HAL_UNLOCK(huart);
 8009700:	687b      	ldr	r3, [r7, #4]
 8009702:	2200      	movs	r2, #0
 8009704:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

  return HAL_OK;
 8009708:	2300      	movs	r3, #0
}
 800970a:	4618      	mov	r0, r3
 800970c:	3728      	adds	r7, #40	@ 0x28
 800970e:	46bd      	mov	sp, r7
 8009710:	bd80      	pop	{r7, pc}

08009712 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8009712:	b580      	push	{r7, lr}
 8009714:	b084      	sub	sp, #16
 8009716:	af00      	add	r7, sp, #0
 8009718:	60f8      	str	r0, [r7, #12]
 800971a:	60b9      	str	r1, [r7, #8]
 800971c:	603b      	str	r3, [r7, #0]
 800971e:	4613      	mov	r3, r2
 8009720:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8009722:	e04f      	b.n	80097c4 <UART_WaitOnFlagUntilTimeout+0xb2>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8009724:	69bb      	ldr	r3, [r7, #24]
 8009726:	f1b3 3fff 	cmp.w	r3, #4294967295
 800972a:	d04b      	beq.n	80097c4 <UART_WaitOnFlagUntilTimeout+0xb2>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800972c:	f7fa fe08 	bl	8004340 <HAL_GetTick>
 8009730:	4602      	mov	r2, r0
 8009732:	683b      	ldr	r3, [r7, #0]
 8009734:	1ad3      	subs	r3, r2, r3
 8009736:	69ba      	ldr	r2, [r7, #24]
 8009738:	429a      	cmp	r2, r3
 800973a:	d302      	bcc.n	8009742 <UART_WaitOnFlagUntilTimeout+0x30>
 800973c:	69bb      	ldr	r3, [r7, #24]
 800973e:	2b00      	cmp	r3, #0
 8009740:	d101      	bne.n	8009746 <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 8009742:	2303      	movs	r3, #3
 8009744:	e04e      	b.n	80097e4 <UART_WaitOnFlagUntilTimeout+0xd2>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8009746:	68fb      	ldr	r3, [r7, #12]
 8009748:	681b      	ldr	r3, [r3, #0]
 800974a:	681b      	ldr	r3, [r3, #0]
 800974c:	f003 0304 	and.w	r3, r3, #4
 8009750:	2b00      	cmp	r3, #0
 8009752:	d037      	beq.n	80097c4 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009754:	68bb      	ldr	r3, [r7, #8]
 8009756:	2b80      	cmp	r3, #128	@ 0x80
 8009758:	d034      	beq.n	80097c4 <UART_WaitOnFlagUntilTimeout+0xb2>
 800975a:	68bb      	ldr	r3, [r7, #8]
 800975c:	2b40      	cmp	r3, #64	@ 0x40
 800975e:	d031      	beq.n	80097c4 <UART_WaitOnFlagUntilTimeout+0xb2>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8009760:	68fb      	ldr	r3, [r7, #12]
 8009762:	681b      	ldr	r3, [r3, #0]
 8009764:	69db      	ldr	r3, [r3, #28]
 8009766:	f003 0308 	and.w	r3, r3, #8
 800976a:	2b08      	cmp	r3, #8
 800976c:	d110      	bne.n	8009790 <UART_WaitOnFlagUntilTimeout+0x7e>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800976e:	68fb      	ldr	r3, [r7, #12]
 8009770:	681b      	ldr	r3, [r3, #0]
 8009772:	2208      	movs	r2, #8
 8009774:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 8009776:	68f8      	ldr	r0, [r7, #12]
 8009778:	f000 f838 	bl	80097ec <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800977c:	68fb      	ldr	r3, [r7, #12]
 800977e:	2208      	movs	r2, #8
 8009780:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 8009784:	68fb      	ldr	r3, [r7, #12]
 8009786:	2200      	movs	r2, #0
 8009788:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

          return HAL_ERROR;
 800978c:	2301      	movs	r3, #1
 800978e:	e029      	b.n	80097e4 <UART_WaitOnFlagUntilTimeout+0xd2>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8009790:	68fb      	ldr	r3, [r7, #12]
 8009792:	681b      	ldr	r3, [r3, #0]
 8009794:	69db      	ldr	r3, [r3, #28]
 8009796:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800979a:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800979e:	d111      	bne.n	80097c4 <UART_WaitOnFlagUntilTimeout+0xb2>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 80097a0:	68fb      	ldr	r3, [r7, #12]
 80097a2:	681b      	ldr	r3, [r3, #0]
 80097a4:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 80097a8:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 80097aa:	68f8      	ldr	r0, [r7, #12]
 80097ac:	f000 f81e 	bl	80097ec <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 80097b0:	68fb      	ldr	r3, [r7, #12]
 80097b2:	2220      	movs	r2, #32
 80097b4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 80097b8:	68fb      	ldr	r3, [r7, #12]
 80097ba:	2200      	movs	r2, #0
 80097bc:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

          return HAL_TIMEOUT;
 80097c0:	2303      	movs	r3, #3
 80097c2:	e00f      	b.n	80097e4 <UART_WaitOnFlagUntilTimeout+0xd2>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 80097c4:	68fb      	ldr	r3, [r7, #12]
 80097c6:	681b      	ldr	r3, [r3, #0]
 80097c8:	69da      	ldr	r2, [r3, #28]
 80097ca:	68bb      	ldr	r3, [r7, #8]
 80097cc:	4013      	ands	r3, r2
 80097ce:	68ba      	ldr	r2, [r7, #8]
 80097d0:	429a      	cmp	r2, r3
 80097d2:	bf0c      	ite	eq
 80097d4:	2301      	moveq	r3, #1
 80097d6:	2300      	movne	r3, #0
 80097d8:	b2db      	uxtb	r3, r3
 80097da:	461a      	mov	r2, r3
 80097dc:	79fb      	ldrb	r3, [r7, #7]
 80097de:	429a      	cmp	r2, r3
 80097e0:	d0a0      	beq.n	8009724 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80097e2:	2300      	movs	r3, #0
}
 80097e4:	4618      	mov	r0, r3
 80097e6:	3710      	adds	r7, #16
 80097e8:	46bd      	mov	sp, r7
 80097ea:	bd80      	pop	{r7, pc}

080097ec <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 80097ec:	b480      	push	{r7}
 80097ee:	b095      	sub	sp, #84	@ 0x54
 80097f0:	af00      	add	r7, sp, #0
 80097f2:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 80097f4:	687b      	ldr	r3, [r7, #4]
 80097f6:	681b      	ldr	r3, [r3, #0]
 80097f8:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80097fa:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80097fc:	e853 3f00 	ldrex	r3, [r3]
 8009800:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 8009802:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009804:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8009808:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	681b      	ldr	r3, [r3, #0]
 800980e:	461a      	mov	r2, r3
 8009810:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8009812:	643b      	str	r3, [r7, #64]	@ 0x40
 8009814:	63fa      	str	r2, [r7, #60]	@ 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009816:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8009818:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800981a:	e841 2300 	strex	r3, r2, [r1]
 800981e:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 8009820:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009822:	2b00      	cmp	r3, #0
 8009824:	d1e6      	bne.n	80097f4 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8009826:	687b      	ldr	r3, [r7, #4]
 8009828:	681b      	ldr	r3, [r3, #0]
 800982a:	3308      	adds	r3, #8
 800982c:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800982e:	6a3b      	ldr	r3, [r7, #32]
 8009830:	e853 3f00 	ldrex	r3, [r3]
 8009834:	61fb      	str	r3, [r7, #28]
   return(result);
 8009836:	69fb      	ldr	r3, [r7, #28]
 8009838:	f023 0301 	bic.w	r3, r3, #1
 800983c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800983e:	687b      	ldr	r3, [r7, #4]
 8009840:	681b      	ldr	r3, [r3, #0]
 8009842:	3308      	adds	r3, #8
 8009844:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8009846:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8009848:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800984a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800984c:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800984e:	e841 2300 	strex	r3, r2, [r1]
 8009852:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 8009854:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009856:	2b00      	cmp	r3, #0
 8009858:	d1e5      	bne.n	8009826 <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800985e:	2b01      	cmp	r3, #1
 8009860:	d118      	bne.n	8009894 <UART_EndRxTransfer+0xa8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8009862:	687b      	ldr	r3, [r7, #4]
 8009864:	681b      	ldr	r3, [r3, #0]
 8009866:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8009868:	68fb      	ldr	r3, [r7, #12]
 800986a:	e853 3f00 	ldrex	r3, [r3]
 800986e:	60bb      	str	r3, [r7, #8]
   return(result);
 8009870:	68bb      	ldr	r3, [r7, #8]
 8009872:	f023 0310 	bic.w	r3, r3, #16
 8009876:	647b      	str	r3, [r7, #68]	@ 0x44
 8009878:	687b      	ldr	r3, [r7, #4]
 800987a:	681b      	ldr	r3, [r3, #0]
 800987c:	461a      	mov	r2, r3
 800987e:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8009880:	61bb      	str	r3, [r7, #24]
 8009882:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8009884:	6979      	ldr	r1, [r7, #20]
 8009886:	69ba      	ldr	r2, [r7, #24]
 8009888:	e841 2300 	strex	r3, r2, [r1]
 800988c:	613b      	str	r3, [r7, #16]
   return(result);
 800988e:	693b      	ldr	r3, [r7, #16]
 8009890:	2b00      	cmp	r3, #0
 8009892:	d1e6      	bne.n	8009862 <UART_EndRxTransfer+0x76>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8009894:	687b      	ldr	r3, [r7, #4]
 8009896:	2220      	movs	r2, #32
 8009898:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	2200      	movs	r2, #0
 80098a0:	661a      	str	r2, [r3, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 80098a2:	687b      	ldr	r3, [r7, #4]
 80098a4:	2200      	movs	r2, #0
 80098a6:	669a      	str	r2, [r3, #104]	@ 0x68
}
 80098a8:	bf00      	nop
 80098aa:	3754      	adds	r7, #84	@ 0x54
 80098ac:	46bd      	mov	sp, r7
 80098ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098b2:	4770      	bx	lr

080098b4 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80098b4:	b480      	push	{r7}
 80098b6:	b083      	sub	sp, #12
 80098b8:	af00      	add	r7, sp, #0
 80098ba:	6078      	str	r0, [r7, #4]
 80098bc:	6039      	str	r1, [r7, #0]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 80098be:	683b      	ldr	r3, [r7, #0]
 80098c0:	681b      	ldr	r3, [r3, #0]
 80098c2:	2b00      	cmp	r3, #0
 80098c4:	d121      	bne.n	800990a <FMC_SDRAM_Init+0x56>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80098c6:	687b      	ldr	r3, [r7, #4]
 80098c8:	681a      	ldr	r2, [r3, #0]
 80098ca:	4b27      	ldr	r3, [pc, #156]	@ (8009968 <FMC_SDRAM_Init+0xb4>)
 80098cc:	4013      	ands	r3, r2
 80098ce:	683a      	ldr	r2, [r7, #0]
 80098d0:	6851      	ldr	r1, [r2, #4]
 80098d2:	683a      	ldr	r2, [r7, #0]
 80098d4:	6892      	ldr	r2, [r2, #8]
 80098d6:	4311      	orrs	r1, r2
 80098d8:	683a      	ldr	r2, [r7, #0]
 80098da:	68d2      	ldr	r2, [r2, #12]
 80098dc:	4311      	orrs	r1, r2
 80098de:	683a      	ldr	r2, [r7, #0]
 80098e0:	6912      	ldr	r2, [r2, #16]
 80098e2:	4311      	orrs	r1, r2
 80098e4:	683a      	ldr	r2, [r7, #0]
 80098e6:	6952      	ldr	r2, [r2, #20]
 80098e8:	4311      	orrs	r1, r2
 80098ea:	683a      	ldr	r2, [r7, #0]
 80098ec:	6992      	ldr	r2, [r2, #24]
 80098ee:	4311      	orrs	r1, r2
 80098f0:	683a      	ldr	r2, [r7, #0]
 80098f2:	69d2      	ldr	r2, [r2, #28]
 80098f4:	4311      	orrs	r1, r2
 80098f6:	683a      	ldr	r2, [r7, #0]
 80098f8:	6a12      	ldr	r2, [r2, #32]
 80098fa:	4311      	orrs	r1, r2
 80098fc:	683a      	ldr	r2, [r7, #0]
 80098fe:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8009900:	430a      	orrs	r2, r1
 8009902:	431a      	orrs	r2, r3
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	601a      	str	r2, [r3, #0]
 8009908:	e026      	b.n	8009958 <FMC_SDRAM_Init+0xa4>
                Init->ReadBurst          |
                Init->ReadPipeDelay));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800990a:	687b      	ldr	r3, [r7, #4]
 800990c:	681b      	ldr	r3, [r3, #0]
 800990e:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 8009912:	683b      	ldr	r3, [r7, #0]
 8009914:	69d9      	ldr	r1, [r3, #28]
 8009916:	683b      	ldr	r3, [r7, #0]
 8009918:	6a1b      	ldr	r3, [r3, #32]
 800991a:	4319      	orrs	r1, r3
 800991c:	683b      	ldr	r3, [r7, #0]
 800991e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009920:	430b      	orrs	r3, r1
 8009922:	431a      	orrs	r2, r3
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	601a      	str	r2, [r3, #0]
               FMC_SDCR1_RPIPE,
               (Init->SDClockPeriod      |
                Init->ReadBurst          |
                Init->ReadPipeDelay));

    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8009928:	687b      	ldr	r3, [r7, #4]
 800992a:	685a      	ldr	r2, [r3, #4]
 800992c:	4b0e      	ldr	r3, [pc, #56]	@ (8009968 <FMC_SDRAM_Init+0xb4>)
 800992e:	4013      	ands	r3, r2
 8009930:	683a      	ldr	r2, [r7, #0]
 8009932:	6851      	ldr	r1, [r2, #4]
 8009934:	683a      	ldr	r2, [r7, #0]
 8009936:	6892      	ldr	r2, [r2, #8]
 8009938:	4311      	orrs	r1, r2
 800993a:	683a      	ldr	r2, [r7, #0]
 800993c:	68d2      	ldr	r2, [r2, #12]
 800993e:	4311      	orrs	r1, r2
 8009940:	683a      	ldr	r2, [r7, #0]
 8009942:	6912      	ldr	r2, [r2, #16]
 8009944:	4311      	orrs	r1, r2
 8009946:	683a      	ldr	r2, [r7, #0]
 8009948:	6952      	ldr	r2, [r2, #20]
 800994a:	4311      	orrs	r1, r2
 800994c:	683a      	ldr	r2, [r7, #0]
 800994e:	6992      	ldr	r2, [r2, #24]
 8009950:	430a      	orrs	r2, r1
 8009952:	431a      	orrs	r2, r3
 8009954:	687b      	ldr	r3, [r7, #4]
 8009956:	605a      	str	r2, [r3, #4]
                Init->InternalBankNumber |
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
 8009958:	2300      	movs	r3, #0
}
 800995a:	4618      	mov	r0, r3
 800995c:	370c      	adds	r7, #12
 800995e:	46bd      	mov	sp, r7
 8009960:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009964:	4770      	bx	lr
 8009966:	bf00      	nop
 8009968:	ffff8000 	.word	0xffff8000

0800996c <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800996c:	b480      	push	{r7}
 800996e:	b085      	sub	sp, #20
 8009970:	af00      	add	r7, sp, #0
 8009972:	60f8      	str	r0, [r7, #12]
 8009974:	60b9      	str	r1, [r7, #8]
 8009976:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
 8009978:	687b      	ldr	r3, [r7, #4]
 800997a:	2b00      	cmp	r3, #0
 800997c:	d128      	bne.n	80099d0 <FMC_SDRAM_Timing_Init+0x64>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800997e:	68fb      	ldr	r3, [r7, #12]
 8009980:	689b      	ldr	r3, [r3, #8]
 8009982:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 8009986:	68bb      	ldr	r3, [r7, #8]
 8009988:	681b      	ldr	r3, [r3, #0]
 800998a:	1e59      	subs	r1, r3, #1
 800998c:	68bb      	ldr	r3, [r7, #8]
 800998e:	685b      	ldr	r3, [r3, #4]
 8009990:	3b01      	subs	r3, #1
 8009992:	011b      	lsls	r3, r3, #4
 8009994:	4319      	orrs	r1, r3
 8009996:	68bb      	ldr	r3, [r7, #8]
 8009998:	689b      	ldr	r3, [r3, #8]
 800999a:	3b01      	subs	r3, #1
 800999c:	021b      	lsls	r3, r3, #8
 800999e:	4319      	orrs	r1, r3
 80099a0:	68bb      	ldr	r3, [r7, #8]
 80099a2:	68db      	ldr	r3, [r3, #12]
 80099a4:	3b01      	subs	r3, #1
 80099a6:	031b      	lsls	r3, r3, #12
 80099a8:	4319      	orrs	r1, r3
 80099aa:	68bb      	ldr	r3, [r7, #8]
 80099ac:	691b      	ldr	r3, [r3, #16]
 80099ae:	3b01      	subs	r3, #1
 80099b0:	041b      	lsls	r3, r3, #16
 80099b2:	4319      	orrs	r1, r3
 80099b4:	68bb      	ldr	r3, [r7, #8]
 80099b6:	695b      	ldr	r3, [r3, #20]
 80099b8:	3b01      	subs	r3, #1
 80099ba:	051b      	lsls	r3, r3, #20
 80099bc:	4319      	orrs	r1, r3
 80099be:	68bb      	ldr	r3, [r7, #8]
 80099c0:	699b      	ldr	r3, [r3, #24]
 80099c2:	3b01      	subs	r3, #1
 80099c4:	061b      	lsls	r3, r3, #24
 80099c6:	430b      	orrs	r3, r1
 80099c8:	431a      	orrs	r2, r3
 80099ca:	68fb      	ldr	r3, [r7, #12]
 80099cc:	609a      	str	r2, [r3, #8]
 80099ce:	e02d      	b.n	8009a2c <FMC_SDRAM_Timing_Init+0xc0>
                (((Timing->RPDelay) - 1U)              << FMC_SDTR1_TRP_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80099d0:	68fb      	ldr	r3, [r7, #12]
 80099d2:	689a      	ldr	r2, [r3, #8]
 80099d4:	4b19      	ldr	r3, [pc, #100]	@ (8009a3c <FMC_SDRAM_Timing_Init+0xd0>)
 80099d6:	4013      	ands	r3, r2
 80099d8:	68ba      	ldr	r2, [r7, #8]
 80099da:	68d2      	ldr	r2, [r2, #12]
 80099dc:	3a01      	subs	r2, #1
 80099de:	0311      	lsls	r1, r2, #12
 80099e0:	68ba      	ldr	r2, [r7, #8]
 80099e2:	6952      	ldr	r2, [r2, #20]
 80099e4:	3a01      	subs	r2, #1
 80099e6:	0512      	lsls	r2, r2, #20
 80099e8:	430a      	orrs	r2, r1
 80099ea:	431a      	orrs	r2, r3
 80099ec:	68fb      	ldr	r3, [r7, #12]
 80099ee:	609a      	str	r2, [r3, #8]
               FMC_SDTR1_TRC |
               FMC_SDTR1_TRP,
               (((Timing->RowCycleDelay) - 1U)         << FMC_SDTR1_TRC_Pos)  |
               (((Timing->RPDelay) - 1U)               << FMC_SDTR1_TRP_Pos));

    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80099f0:	68fb      	ldr	r3, [r7, #12]
 80099f2:	68db      	ldr	r3, [r3, #12]
 80099f4:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 80099f8:	68bb      	ldr	r3, [r7, #8]
 80099fa:	681b      	ldr	r3, [r3, #0]
 80099fc:	1e59      	subs	r1, r3, #1
 80099fe:	68bb      	ldr	r3, [r7, #8]
 8009a00:	685b      	ldr	r3, [r3, #4]
 8009a02:	3b01      	subs	r3, #1
 8009a04:	011b      	lsls	r3, r3, #4
 8009a06:	4319      	orrs	r1, r3
 8009a08:	68bb      	ldr	r3, [r7, #8]
 8009a0a:	689b      	ldr	r3, [r3, #8]
 8009a0c:	3b01      	subs	r3, #1
 8009a0e:	021b      	lsls	r3, r3, #8
 8009a10:	4319      	orrs	r1, r3
 8009a12:	68bb      	ldr	r3, [r7, #8]
 8009a14:	691b      	ldr	r3, [r3, #16]
 8009a16:	3b01      	subs	r3, #1
 8009a18:	041b      	lsls	r3, r3, #16
 8009a1a:	4319      	orrs	r1, r3
 8009a1c:	68bb      	ldr	r3, [r7, #8]
 8009a1e:	699b      	ldr	r3, [r3, #24]
 8009a20:	3b01      	subs	r3, #1
 8009a22:	061b      	lsls	r3, r3, #24
 8009a24:	430b      	orrs	r3, r1
 8009a26:	431a      	orrs	r2, r3
 8009a28:	68fb      	ldr	r3, [r7, #12]
 8009a2a:	60da      	str	r2, [r3, #12]
                (((Timing->SelfRefreshTime) - 1U)      << FMC_SDTR1_TRAS_Pos) |
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
 8009a2c:	2300      	movs	r3, #0
}
 8009a2e:	4618      	mov	r0, r3
 8009a30:	3714      	adds	r7, #20
 8009a32:	46bd      	mov	sp, r7
 8009a34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a38:	4770      	bx	lr
 8009a3a:	bf00      	nop
 8009a3c:	ff0f0fff 	.word	0xff0f0fff

08009a40 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8009a40:	b480      	push	{r7}
 8009a42:	b085      	sub	sp, #20
 8009a44:	af00      	add	r7, sp, #0
 8009a46:	60f8      	str	r0, [r7, #12]
 8009a48:	60b9      	str	r1, [r7, #8]
 8009a4a:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8009a4c:	68fb      	ldr	r3, [r7, #12]
 8009a4e:	691a      	ldr	r2, [r3, #16]
 8009a50:	4b0c      	ldr	r3, [pc, #48]	@ (8009a84 <FMC_SDRAM_SendCommand+0x44>)
 8009a52:	4013      	ands	r3, r2
 8009a54:	68ba      	ldr	r2, [r7, #8]
 8009a56:	6811      	ldr	r1, [r2, #0]
 8009a58:	68ba      	ldr	r2, [r7, #8]
 8009a5a:	6852      	ldr	r2, [r2, #4]
 8009a5c:	4311      	orrs	r1, r2
 8009a5e:	68ba      	ldr	r2, [r7, #8]
 8009a60:	6892      	ldr	r2, [r2, #8]
 8009a62:	3a01      	subs	r2, #1
 8009a64:	0152      	lsls	r2, r2, #5
 8009a66:	4311      	orrs	r1, r2
 8009a68:	68ba      	ldr	r2, [r7, #8]
 8009a6a:	68d2      	ldr	r2, [r2, #12]
 8009a6c:	0252      	lsls	r2, r2, #9
 8009a6e:	430a      	orrs	r2, r1
 8009a70:	431a      	orrs	r2, r3
 8009a72:	68fb      	ldr	r3, [r7, #12]
 8009a74:	611a      	str	r2, [r3, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
 8009a76:	2300      	movs	r3, #0
}
 8009a78:	4618      	mov	r0, r3
 8009a7a:	3714      	adds	r7, #20
 8009a7c:	46bd      	mov	sp, r7
 8009a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a82:	4770      	bx	lr
 8009a84:	ffc00000 	.word	0xffc00000

08009a88 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 8009a88:	b480      	push	{r7}
 8009a8a:	b083      	sub	sp, #12
 8009a8c:	af00      	add	r7, sp, #0
 8009a8e:	6078      	str	r0, [r7, #4]
 8009a90:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	695a      	ldr	r2, [r3, #20]
 8009a96:	4b07      	ldr	r3, [pc, #28]	@ (8009ab4 <FMC_SDRAM_ProgramRefreshRate+0x2c>)
 8009a98:	4013      	ands	r3, r2
 8009a9a:	683a      	ldr	r2, [r7, #0]
 8009a9c:	0052      	lsls	r2, r2, #1
 8009a9e:	431a      	orrs	r2, r3
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	615a      	str	r2, [r3, #20]

  return HAL_OK;
 8009aa4:	2300      	movs	r3, #0
}
 8009aa6:	4618      	mov	r0, r3
 8009aa8:	370c      	adds	r7, #12
 8009aaa:	46bd      	mov	sp, r7
 8009aac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ab0:	4770      	bx	lr
 8009ab2:	bf00      	nop
 8009ab4:	ffffc001 	.word	0xffffc001

08009ab8 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8009ab8:	b580      	push	{r7, lr}
 8009aba:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 8009abc:	f003 fafe 	bl	800d0bc <touchgfx_components_init>
    touchgfx_init();
 8009ac0:	f003 fad2 	bl	800d068 <touchgfx_init>
}
 8009ac4:	bf00      	nop
 8009ac6:	bd80      	pop	{r7, pc}

08009ac8 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8009ac8:	b580      	push	{r7, lr}
 8009aca:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 8009acc:	f003 fafe 	bl	800d0cc <touchgfx_taskEntry>
}
 8009ad0:	bf00      	nop
 8009ad2:	bd80      	pop	{r7, pc}

08009ad4 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8009ad4:	b480      	push	{r7}
 8009ad6:	b083      	sub	sp, #12
 8009ad8:	af00      	add	r7, sp, #0
 8009ada:	6078      	str	r0, [r7, #4]
    {
 8009adc:	4a04      	ldr	r2, [pc, #16]	@ (8009af0 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 8009ade:	687b      	ldr	r3, [r7, #4]
 8009ae0:	601a      	str	r2, [r3, #0]
    }
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	4618      	mov	r0, r3
 8009ae6:	370c      	adds	r7, #12
 8009ae8:	46bd      	mov	sp, r7
 8009aea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aee:	4770      	bx	lr
 8009af0:	08022588 	.word	0x08022588

08009af4 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8009af4:	b580      	push	{r7, lr}
 8009af6:	b082      	sub	sp, #8
 8009af8:	af00      	add	r7, sp, #0
 8009afa:	6078      	str	r0, [r7, #4]
    }
 8009afc:	6878      	ldr	r0, [r7, #4]
 8009afe:	f7ff ffe9 	bl	8009ad4 <_ZN8touchgfx12FontProviderD1Ev>
 8009b02:	2104      	movs	r1, #4
 8009b04:	6878      	ldr	r0, [r7, #4]
 8009b06:	f017 f896 	bl	8020c36 <_ZdlPvj>
 8009b0a:	687b      	ldr	r3, [r7, #4]
 8009b0c:	4618      	mov	r0, r3
 8009b0e:	3708      	adds	r7, #8
 8009b10:	46bd      	mov	sp, r7
 8009b12:	bd80      	pop	{r7, pc}

08009b14 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8009b14:	b580      	push	{r7, lr}
 8009b16:	b082      	sub	sp, #8
 8009b18:	af00      	add	r7, sp, #0
 8009b1a:	6078      	str	r0, [r7, #4]
 8009b1c:	460b      	mov	r3, r1
 8009b1e:	807b      	strh	r3, [r7, #2]
    switch (typography)
 8009b20:	887b      	ldrh	r3, [r7, #2]
 8009b22:	2b02      	cmp	r3, #2
 8009b24:	d010      	beq.n	8009b48 <_ZN23ApplicationFontProvider7getFontEt+0x34>
 8009b26:	2b02      	cmp	r3, #2
 8009b28:	dc13      	bgt.n	8009b52 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 8009b2a:	2b00      	cmp	r3, #0
 8009b2c:	d002      	beq.n	8009b34 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 8009b2e:	2b01      	cmp	r3, #1
 8009b30:	d005      	beq.n	8009b3e <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 8009b32:	e00e      	b.n	8009b52 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8009b34:	f001 fd7c 	bl	800b630 <_ZN17TypedTextDatabase8getFontsEv>
 8009b38:	4603      	mov	r3, r0
 8009b3a:	681b      	ldr	r3, [r3, #0]
 8009b3c:	e00a      	b.n	8009b54 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8009b3e:	f001 fd77 	bl	800b630 <_ZN17TypedTextDatabase8getFontsEv>
 8009b42:	4603      	mov	r3, r0
 8009b44:	685b      	ldr	r3, [r3, #4]
 8009b46:	e005      	b.n	8009b54 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8009b48:	f001 fd72 	bl	800b630 <_ZN17TypedTextDatabase8getFontsEv>
 8009b4c:	4603      	mov	r3, r0
 8009b4e:	689b      	ldr	r3, [r3, #8]
 8009b50:	e000      	b.n	8009b54 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 8009b52:	2300      	movs	r3, #0
    }
}
 8009b54:	4618      	mov	r0, r3
 8009b56:	3708      	adds	r7, #8
 8009b58:	46bd      	mov	sp, r7
 8009b5a:	bd80      	pop	{r7, pc}

08009b5c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8009b5c:	b580      	push	{r7, lr}
 8009b5e:	b082      	sub	sp, #8
 8009b60:	af00      	add	r7, sp, #0
 8009b62:	6078      	str	r0, [r7, #4]
 8009b64:	4a05      	ldr	r2, [pc, #20]	@ (8009b7c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8009b66:	687b      	ldr	r3, [r7, #4]
 8009b68:	601a      	str	r2, [r3, #0]
 8009b6a:	687b      	ldr	r3, [r7, #4]
 8009b6c:	4618      	mov	r0, r3
 8009b6e:	f7ff ffb1 	bl	8009ad4 <_ZN8touchgfx12FontProviderD1Ev>
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	4618      	mov	r0, r3
 8009b76:	3708      	adds	r7, #8
 8009b78:	46bd      	mov	sp, r7
 8009b7a:	bd80      	pop	{r7, pc}
 8009b7c:	08022574 	.word	0x08022574

08009b80 <_ZN23ApplicationFontProviderD0Ev>:
 8009b80:	b580      	push	{r7, lr}
 8009b82:	b082      	sub	sp, #8
 8009b84:	af00      	add	r7, sp, #0
 8009b86:	6078      	str	r0, [r7, #4]
 8009b88:	6878      	ldr	r0, [r7, #4]
 8009b8a:	f7ff ffe7 	bl	8009b5c <_ZN23ApplicationFontProviderD1Ev>
 8009b8e:	2104      	movs	r1, #4
 8009b90:	6878      	ldr	r0, [r7, #4]
 8009b92:	f017 f850 	bl	8020c36 <_ZdlPvj>
 8009b96:	687b      	ldr	r3, [r7, #4]
 8009b98:	4618      	mov	r0, r3
 8009b9a:	3708      	adds	r7, #8
 8009b9c:	46bd      	mov	sp, r7
 8009b9e:	bd80      	pop	{r7, pc}

08009ba0 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 8009ba0:	b480      	push	{r7}
 8009ba2:	b083      	sub	sp, #12
 8009ba4:	af00      	add	r7, sp, #0
 8009ba6:	6078      	str	r0, [r7, #4]
    {
 8009ba8:	4a04      	ldr	r2, [pc, #16]	@ (8009bbc <_ZN8touchgfx4FontD1Ev+0x1c>)
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	601a      	str	r2, [r3, #0]
    }
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	4618      	mov	r0, r3
 8009bb2:	370c      	adds	r7, #12
 8009bb4:	46bd      	mov	sp, r7
 8009bb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bba:	4770      	bx	lr
 8009bbc:	08022830 	.word	0x08022830

08009bc0 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 8009bc0:	b580      	push	{r7, lr}
 8009bc2:	b082      	sub	sp, #8
 8009bc4:	af00      	add	r7, sp, #0
 8009bc6:	6078      	str	r0, [r7, #4]
    }
 8009bc8:	6878      	ldr	r0, [r7, #4]
 8009bca:	f7ff ffe9 	bl	8009ba0 <_ZN8touchgfx4FontD1Ev>
 8009bce:	2114      	movs	r1, #20
 8009bd0:	6878      	ldr	r0, [r7, #4]
 8009bd2:	f017 f830 	bl	8020c36 <_ZdlPvj>
 8009bd6:	687b      	ldr	r3, [r7, #4]
 8009bd8:	4618      	mov	r0, r3
 8009bda:	3708      	adds	r7, #8
 8009bdc:	46bd      	mov	sp, r7
 8009bde:	bd80      	pop	{r7, pc}

08009be0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8009be0:	b590      	push	{r4, r7, lr}
 8009be2:	b087      	sub	sp, #28
 8009be4:	af00      	add	r7, sp, #0
 8009be6:	6078      	str	r0, [r7, #4]
 8009be8:	460b      	mov	r3, r1
 8009bea:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8009bec:	887b      	ldrh	r3, [r7, #2]
 8009bee:	2b00      	cmp	r3, #0
 8009bf0:	d101      	bne.n	8009bf6 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 8009bf2:	2300      	movs	r3, #0
 8009bf4:	e010      	b.n	8009c18 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8009bf6:	2300      	movs	r3, #0
 8009bf8:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8009bfa:	2300      	movs	r3, #0
 8009bfc:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8009bfe:	687b      	ldr	r3, [r7, #4]
 8009c00:	681b      	ldr	r3, [r3, #0]
 8009c02:	3308      	adds	r3, #8
 8009c04:	681c      	ldr	r4, [r3, #0]
 8009c06:	f107 030f 	add.w	r3, r7, #15
 8009c0a:	f107 0210 	add.w	r2, r7, #16
 8009c0e:	8879      	ldrh	r1, [r7, #2]
 8009c10:	6878      	ldr	r0, [r7, #4]
 8009c12:	47a0      	blx	r4
 8009c14:	6178      	str	r0, [r7, #20]
        return glyph;
 8009c16:	697b      	ldr	r3, [r7, #20]
    }
 8009c18:	4618      	mov	r0, r3
 8009c1a:	371c      	adds	r7, #28
 8009c1c:	46bd      	mov	sp, r7
 8009c1e:	bd90      	pop	{r4, r7, pc}

08009c20 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 8009c20:	b480      	push	{r7}
 8009c22:	b083      	sub	sp, #12
 8009c24:	af00      	add	r7, sp, #0
 8009c26:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 8009c28:	687b      	ldr	r3, [r7, #4]
 8009c2a:	89db      	ldrh	r3, [r3, #14]
    }
 8009c2c:	4618      	mov	r0, r3
 8009c2e:	370c      	adds	r7, #12
 8009c30:	46bd      	mov	sp, r7
 8009c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c36:	4770      	bx	lr

08009c38 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 8009c38:	b480      	push	{r7}
 8009c3a:	b083      	sub	sp, #12
 8009c3c:	af00      	add	r7, sp, #0
 8009c3e:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 8009c40:	687b      	ldr	r3, [r7, #4]
 8009c42:	8a1b      	ldrh	r3, [r3, #16]
    }
 8009c44:	4618      	mov	r0, r3
 8009c46:	370c      	adds	r7, #12
 8009c48:	46bd      	mov	sp, r7
 8009c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c4e:	4770      	bx	lr

08009c50 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 8009c50:	b480      	push	{r7}
 8009c52:	b083      	sub	sp, #12
 8009c54:	af00      	add	r7, sp, #0
 8009c56:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	88db      	ldrh	r3, [r3, #6]
    }
 8009c5c:	4618      	mov	r0, r3
 8009c5e:	370c      	adds	r7, #12
 8009c60:	46bd      	mov	sp, r7
 8009c62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c66:	4770      	bx	lr

08009c68 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 8009c68:	b480      	push	{r7}
 8009c6a:	b083      	sub	sp, #12
 8009c6c:	af00      	add	r7, sp, #0
 8009c6e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 8009c70:	687b      	ldr	r3, [r7, #4]
 8009c72:	889b      	ldrh	r3, [r3, #4]
    }
 8009c74:	4618      	mov	r0, r3
 8009c76:	370c      	adds	r7, #12
 8009c78:	46bd      	mov	sp, r7
 8009c7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c7e:	4770      	bx	lr

08009c80 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 8009c80:	b480      	push	{r7}
 8009c82:	b083      	sub	sp, #12
 8009c84:	af00      	add	r7, sp, #0
 8009c86:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8009c88:	687b      	ldr	r3, [r7, #4]
 8009c8a:	7a9b      	ldrb	r3, [r3, #10]
 8009c8c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 8009c90:	b2db      	uxtb	r3, r3
    }
 8009c92:	4618      	mov	r0, r3
 8009c94:	370c      	adds	r7, #12
 8009c96:	46bd      	mov	sp, r7
 8009c98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c9c:	4770      	bx	lr

08009c9e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 8009c9e:	b480      	push	{r7}
 8009ca0:	b083      	sub	sp, #12
 8009ca2:	af00      	add	r7, sp, #0
 8009ca4:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8009ca6:	687b      	ldr	r3, [r7, #4]
 8009ca8:	7a9b      	ldrb	r3, [r3, #10]
 8009caa:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 8009cae:	b2db      	uxtb	r3, r3
    }
 8009cb0:	4618      	mov	r0, r3
 8009cb2:	370c      	adds	r7, #12
 8009cb4:	46bd      	mov	sp, r7
 8009cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cba:	4770      	bx	lr

08009cbc <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8009cbc:	b480      	push	{r7}
 8009cbe:	b083      	sub	sp, #12
 8009cc0:	af00      	add	r7, sp, #0
 8009cc2:	6078      	str	r0, [r7, #4]
    {
        return false;
 8009cc4:	2300      	movs	r3, #0
    }
 8009cc6:	4618      	mov	r0, r3
 8009cc8:	370c      	adds	r7, #12
 8009cca:	46bd      	mov	sp, r7
 8009ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cd0:	4770      	bx	lr

08009cd2 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 8009cd2:	b480      	push	{r7}
 8009cd4:	b083      	sub	sp, #12
 8009cd6:	af00      	add	r7, sp, #0
 8009cd8:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009cda:	f04f 0300 	mov.w	r3, #0
 8009cde:	ee07 3a90 	vmov	s15, r3
    }
 8009ce2:	eeb0 0a67 	vmov.f32	s0, s15
 8009ce6:	370c      	adds	r7, #12
 8009ce8:	46bd      	mov	sp, r7
 8009cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cee:	4770      	bx	lr

08009cf0 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 8009cf0:	b580      	push	{r7, lr}
 8009cf2:	b082      	sub	sp, #8
 8009cf4:	af00      	add	r7, sp, #0
 8009cf6:	6078      	str	r0, [r7, #4]
 8009cf8:	4a05      	ldr	r2, [pc, #20]	@ (8009d10 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	601a      	str	r2, [r3, #0]
 8009cfe:	687b      	ldr	r3, [r7, #4]
 8009d00:	4618      	mov	r0, r3
 8009d02:	f7ff ff4d 	bl	8009ba0 <_ZN8touchgfx4FontD1Ev>
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	4618      	mov	r0, r3
 8009d0a:	3708      	adds	r7, #8
 8009d0c:	46bd      	mov	sp, r7
 8009d0e:	bd80      	pop	{r7, pc}
 8009d10:	0802302c 	.word	0x0802302c

08009d14 <_ZN8touchgfx9ConstFontD0Ev>:
 8009d14:	b580      	push	{r7, lr}
 8009d16:	b082      	sub	sp, #8
 8009d18:	af00      	add	r7, sp, #0
 8009d1a:	6078      	str	r0, [r7, #4]
 8009d1c:	6878      	ldr	r0, [r7, #4]
 8009d1e:	f7ff ffe7 	bl	8009cf0 <_ZN8touchgfx9ConstFontD1Ev>
 8009d22:	211c      	movs	r1, #28
 8009d24:	6878      	ldr	r0, [r7, #4]
 8009d26:	f016 ff86 	bl	8020c36 <_ZdlPvj>
 8009d2a:	687b      	ldr	r3, [r7, #4]
 8009d2c:	4618      	mov	r0, r3
 8009d2e:	3708      	adds	r7, #8
 8009d30:	46bd      	mov	sp, r7
 8009d32:	bd80      	pop	{r7, pc}

08009d34 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 8009d34:	b580      	push	{r7, lr}
 8009d36:	b082      	sub	sp, #8
 8009d38:	af00      	add	r7, sp, #0
 8009d3a:	6078      	str	r0, [r7, #4]
 8009d3c:	4a05      	ldr	r2, [pc, #20]	@ (8009d54 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 8009d3e:	687b      	ldr	r3, [r7, #4]
 8009d40:	601a      	str	r2, [r3, #0]
 8009d42:	687b      	ldr	r3, [r7, #4]
 8009d44:	4618      	mov	r0, r3
 8009d46:	f7ff ffd3 	bl	8009cf0 <_ZN8touchgfx9ConstFontD1Ev>
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	4618      	mov	r0, r3
 8009d4e:	3708      	adds	r7, #8
 8009d50:	46bd      	mov	sp, r7
 8009d52:	bd80      	pop	{r7, pc}
 8009d54:	0802259c 	.word	0x0802259c

08009d58 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8009d58:	b580      	push	{r7, lr}
 8009d5a:	b082      	sub	sp, #8
 8009d5c:	af00      	add	r7, sp, #0
 8009d5e:	6078      	str	r0, [r7, #4]
 8009d60:	6878      	ldr	r0, [r7, #4]
 8009d62:	f7ff ffe7 	bl	8009d34 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009d66:	212c      	movs	r1, #44	@ 0x2c
 8009d68:	6878      	ldr	r0, [r7, #4]
 8009d6a:	f016 ff64 	bl	8020c36 <_ZdlPvj>
 8009d6e:	687b      	ldr	r3, [r7, #4]
 8009d70:	4618      	mov	r0, r3
 8009d72:	3708      	adds	r7, #8
 8009d74:	46bd      	mov	sp, r7
 8009d76:	bd80      	pop	{r7, pc}

08009d78 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8009d78:	b480      	push	{r7}
 8009d7a:	b083      	sub	sp, #12
 8009d7c:	af00      	add	r7, sp, #0
 8009d7e:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8009d80:	687b      	ldr	r3, [r7, #4]
 8009d82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8009d84:	4618      	mov	r0, r3
 8009d86:	370c      	adds	r7, #12
 8009d88:	46bd      	mov	sp, r7
 8009d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d8e:	4770      	bx	lr

08009d90 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 8009d90:	b480      	push	{r7}
 8009d92:	b083      	sub	sp, #12
 8009d94:	af00      	add	r7, sp, #0
 8009d96:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8009d98:	687b      	ldr	r3, [r7, #4]
 8009d9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8009d9c:	4618      	mov	r0, r3
 8009d9e:	370c      	adds	r7, #12
 8009da0:	46bd      	mov	sp, r7
 8009da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009da6:	4770      	bx	lr

08009da8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8009da8:	b580      	push	{r7, lr}
 8009daa:	b08e      	sub	sp, #56	@ 0x38
 8009dac:	af0a      	add	r7, sp, #40	@ 0x28
 8009dae:	60f8      	str	r0, [r7, #12]
 8009db0:	60b9      	str	r1, [r7, #8]
 8009db2:	4611      	mov	r1, r2
 8009db4:	461a      	mov	r2, r3
 8009db6:	460b      	mov	r3, r1
 8009db8:	80fb      	strh	r3, [r7, #6]
 8009dba:	4613      	mov	r3, r2
 8009dbc:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 8009dbe:	68f8      	ldr	r0, [r7, #12]
 8009dc0:	88b9      	ldrh	r1, [r7, #4]
 8009dc2:	88fa      	ldrh	r2, [r7, #6]
 8009dc4:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8009dc8:	9308      	str	r3, [sp, #32]
 8009dca:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8009dcc:	9307      	str	r3, [sp, #28]
 8009dce:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8009dd2:	9306      	str	r3, [sp, #24]
 8009dd4:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8009dd8:	9305      	str	r3, [sp, #20]
 8009dda:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 8009dde:	9304      	str	r3, [sp, #16]
 8009de0:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 8009de4:	9303      	str	r3, [sp, #12]
 8009de6:	f897 3020 	ldrb.w	r3, [r7, #32]
 8009dea:	9302      	str	r3, [sp, #8]
 8009dec:	7f3b      	ldrb	r3, [r7, #28]
 8009dee:	9301      	str	r3, [sp, #4]
 8009df0:	8b3b      	ldrh	r3, [r7, #24]
 8009df2:	9300      	str	r3, [sp, #0]
 8009df4:	460b      	mov	r3, r1
 8009df6:	68b9      	ldr	r1, [r7, #8]
 8009df8:	f007 f8b6 	bl	8010f68 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8009dfc:	4a09      	ldr	r2, [pc, #36]	@ (8009e24 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 8009dfe:	68fb      	ldr	r3, [r7, #12]
 8009e00:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 8009e02:	68fb      	ldr	r3, [r7, #12]
 8009e04:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009e06:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 8009e08:	68fb      	ldr	r3, [r7, #12]
 8009e0a:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8009e0c:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 8009e0e:	68fb      	ldr	r3, [r7, #12]
 8009e10:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8009e12:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 8009e14:	68fb      	ldr	r3, [r7, #12]
 8009e16:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8009e18:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 8009e1a:	68fb      	ldr	r3, [r7, #12]
 8009e1c:	4618      	mov	r0, r3
 8009e1e:	3710      	adds	r7, #16
 8009e20:	46bd      	mov	sp, r7
 8009e22:	bd80      	pop	{r7, pc}
 8009e24:	0802259c 	.word	0x0802259c

08009e28 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 8009e28:	b480      	push	{r7}
 8009e2a:	b085      	sub	sp, #20
 8009e2c:	af00      	add	r7, sp, #0
 8009e2e:	6078      	str	r0, [r7, #4]
 8009e30:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	69db      	ldr	r3, [r3, #28]
 8009e36:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8009e38:	683b      	ldr	r3, [r7, #0]
 8009e3a:	889b      	ldrh	r3, [r3, #4]
 8009e3c:	0adb      	lsrs	r3, r3, #11
 8009e3e:	b29b      	uxth	r3, r3
 8009e40:	009b      	lsls	r3, r3, #2
 8009e42:	68fa      	ldr	r2, [r7, #12]
 8009e44:	4413      	add	r3, r2
 8009e46:	681a      	ldr	r2, [r3, #0]
 8009e48:	683b      	ldr	r3, [r7, #0]
 8009e4a:	681b      	ldr	r3, [r3, #0]
 8009e4c:	4413      	add	r3, r2
}
 8009e4e:	4618      	mov	r0, r3
 8009e50:	3714      	adds	r7, #20
 8009e52:	46bd      	mov	sp, r7
 8009e54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e58:	4770      	bx	lr

08009e5a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8009e5a:	b480      	push	{r7}
 8009e5c:	b089      	sub	sp, #36	@ 0x24
 8009e5e:	af00      	add	r7, sp, #0
 8009e60:	60f8      	str	r0, [r7, #12]
 8009e62:	460b      	mov	r3, r1
 8009e64:	607a      	str	r2, [r7, #4]
 8009e66:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	2b00      	cmp	r3, #0
 8009e6c:	d003      	beq.n	8009e76 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8009e6e:	687b      	ldr	r3, [r7, #4]
 8009e70:	7b1b      	ldrb	r3, [r3, #12]
 8009e72:	2b00      	cmp	r3, #0
 8009e74:	d101      	bne.n	8009e7a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8009e76:	2300      	movs	r3, #0
 8009e78:	e031      	b.n	8009ede <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8009e7a:	68fb      	ldr	r3, [r7, #12]
 8009e7c:	6a1a      	ldr	r2, [r3, #32]
 8009e7e:	687b      	ldr	r3, [r7, #4]
 8009e80:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8009e82:	697b      	ldr	r3, [r7, #20]
 8009e84:	7b5b      	ldrb	r3, [r3, #13]
 8009e86:	021b      	lsls	r3, r3, #8
 8009e88:	b21b      	sxth	r3, r3
 8009e8a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8009e8e:	b219      	sxth	r1, r3
 8009e90:	697b      	ldr	r3, [r7, #20]
 8009e92:	7adb      	ldrb	r3, [r3, #11]
 8009e94:	b21b      	sxth	r3, r3
 8009e96:	430b      	orrs	r3, r1
 8009e98:	b21b      	sxth	r3, r3
 8009e9a:	b29b      	uxth	r3, r3
 8009e9c:	009b      	lsls	r3, r3, #2
 8009e9e:	4413      	add	r3, r2
 8009ea0:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	7b1b      	ldrb	r3, [r3, #12]
 8009ea6:	837b      	strh	r3, [r7, #26]
 8009ea8:	e013      	b.n	8009ed2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8009eaa:	69fb      	ldr	r3, [r7, #28]
 8009eac:	881b      	ldrh	r3, [r3, #0]
 8009eae:	897a      	ldrh	r2, [r7, #10]
 8009eb0:	429a      	cmp	r2, r3
 8009eb2:	d103      	bne.n	8009ebc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8009eb4:	69fb      	ldr	r3, [r7, #28]
 8009eb6:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8009eba:	e010      	b.n	8009ede <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8009ebc:	69fb      	ldr	r3, [r7, #28]
 8009ebe:	881b      	ldrh	r3, [r3, #0]
 8009ec0:	897a      	ldrh	r2, [r7, #10]
 8009ec2:	429a      	cmp	r2, r3
 8009ec4:	d309      	bcc.n	8009eda <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8009ec6:	8b7b      	ldrh	r3, [r7, #26]
 8009ec8:	3b01      	subs	r3, #1
 8009eca:	837b      	strh	r3, [r7, #26]
 8009ecc:	69fb      	ldr	r3, [r7, #28]
 8009ece:	3304      	adds	r3, #4
 8009ed0:	61fb      	str	r3, [r7, #28]
 8009ed2:	8b7b      	ldrh	r3, [r7, #26]
 8009ed4:	2b00      	cmp	r3, #0
 8009ed6:	d1e8      	bne.n	8009eaa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8009ed8:	e000      	b.n	8009edc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8009eda:	bf00      	nop
        }
    }
    return 0;
 8009edc:	2300      	movs	r3, #0
}
 8009ede:	4618      	mov	r0, r3
 8009ee0:	3724      	adds	r7, #36	@ 0x24
 8009ee2:	46bd      	mov	sp, r7
 8009ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ee8:	4770      	bx	lr
	...

08009eec <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009eec:	b580      	push	{r7, lr}
 8009eee:	af00      	add	r7, sp, #0
 8009ef0:	4801      	ldr	r0, [pc, #4]	@ (8009ef8 <__tcf_0+0xc>)
 8009ef2:	f7ff ff1f 	bl	8009d34 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009ef6:	bd80      	pop	{r7, pc}
 8009ef8:	200009e0 	.word	0x200009e0

08009efc <_Z23getFont_verdana_10_4bppv>:
{
 8009efc:	b580      	push	{r7, lr}
 8009efe:	b08e      	sub	sp, #56	@ 0x38
 8009f00:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8009f02:	4b21      	ldr	r3, [pc, #132]	@ (8009f88 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009f04:	681b      	ldr	r3, [r3, #0]
 8009f06:	f3bf 8f5b 	dmb	ish
 8009f0a:	f003 0301 	and.w	r3, r3, #1
 8009f0e:	2b00      	cmp	r3, #0
 8009f10:	bf0c      	ite	eq
 8009f12:	2301      	moveq	r3, #1
 8009f14:	2300      	movne	r3, #0
 8009f16:	b2db      	uxtb	r3, r3
 8009f18:	2b00      	cmp	r3, #0
 8009f1a:	d030      	beq.n	8009f7e <_Z23getFont_verdana_10_4bppv+0x82>
 8009f1c:	481a      	ldr	r0, [pc, #104]	@ (8009f88 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009f1e:	f016 fe8c 	bl	8020c3a <__cxa_guard_acquire>
 8009f22:	4603      	mov	r3, r0
 8009f24:	2b00      	cmp	r3, #0
 8009f26:	bf14      	ite	ne
 8009f28:	2301      	movne	r3, #1
 8009f2a:	2300      	moveq	r3, #0
 8009f2c:	b2db      	uxtb	r3, r3
 8009f2e:	2b00      	cmp	r3, #0
 8009f30:	d025      	beq.n	8009f7e <_Z23getFont_verdana_10_4bppv+0x82>
 8009f32:	2300      	movs	r3, #0
 8009f34:	930c      	str	r3, [sp, #48]	@ 0x30
 8009f36:	2300      	movs	r3, #0
 8009f38:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009f3a:	2300      	movs	r3, #0
 8009f3c:	930a      	str	r3, [sp, #40]	@ 0x28
 8009f3e:	233f      	movs	r3, #63	@ 0x3f
 8009f40:	9309      	str	r3, [sp, #36]	@ 0x24
 8009f42:	4b12      	ldr	r3, [pc, #72]	@ (8009f8c <_Z23getFont_verdana_10_4bppv+0x90>)
 8009f44:	9308      	str	r3, [sp, #32]
 8009f46:	4b12      	ldr	r3, [pc, #72]	@ (8009f90 <_Z23getFont_verdana_10_4bppv+0x94>)
 8009f48:	9307      	str	r3, [sp, #28]
 8009f4a:	2300      	movs	r3, #0
 8009f4c:	9306      	str	r3, [sp, #24]
 8009f4e:	2300      	movs	r3, #0
 8009f50:	9305      	str	r3, [sp, #20]
 8009f52:	2301      	movs	r3, #1
 8009f54:	9304      	str	r3, [sp, #16]
 8009f56:	2304      	movs	r3, #4
 8009f58:	9303      	str	r3, [sp, #12]
 8009f5a:	2300      	movs	r3, #0
 8009f5c:	9302      	str	r3, [sp, #8]
 8009f5e:	2300      	movs	r3, #0
 8009f60:	9301      	str	r3, [sp, #4]
 8009f62:	230a      	movs	r3, #10
 8009f64:	9300      	str	r3, [sp, #0]
 8009f66:	230a      	movs	r3, #10
 8009f68:	2201      	movs	r2, #1
 8009f6a:	490a      	ldr	r1, [pc, #40]	@ (8009f94 <_Z23getFont_verdana_10_4bppv+0x98>)
 8009f6c:	480a      	ldr	r0, [pc, #40]	@ (8009f98 <_Z23getFont_verdana_10_4bppv+0x9c>)
 8009f6e:	f7ff ff1b 	bl	8009da8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8009f72:	480a      	ldr	r0, [pc, #40]	@ (8009f9c <_Z23getFont_verdana_10_4bppv+0xa0>)
 8009f74:	f016 feac 	bl	8020cd0 <atexit>
 8009f78:	4803      	ldr	r0, [pc, #12]	@ (8009f88 <_Z23getFont_verdana_10_4bppv+0x8c>)
 8009f7a:	f016 fe6a 	bl	8020c52 <__cxa_guard_release>
    return verdana_10_4bpp;
 8009f7e:	4b06      	ldr	r3, [pc, #24]	@ (8009f98 <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 8009f80:	4618      	mov	r0, r3
 8009f82:	46bd      	mov	sp, r7
 8009f84:	bd80      	pop	{r7, pc}
 8009f86:	bf00      	nop
 8009f88:	20000a0c 	.word	0x20000a0c
 8009f8c:	0802360c 	.word	0x0802360c
 8009f90:	08023618 	.word	0x08023618
 8009f94:	080235dc 	.word	0x080235dc
 8009f98:	200009e0 	.word	0x200009e0
 8009f9c:	08009eed 	.word	0x08009eed

08009fa0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009fa0:	b580      	push	{r7, lr}
 8009fa2:	af00      	add	r7, sp, #0
 8009fa4:	4801      	ldr	r0, [pc, #4]	@ (8009fac <__tcf_0+0xc>)
 8009fa6:	f7ff fec5 	bl	8009d34 <_ZN8touchgfx13GeneratedFontD1Ev>
 8009faa:	bd80      	pop	{r7, pc}
 8009fac:	20000a10 	.word	0x20000a10

08009fb0 <_Z23getFont_verdana_20_4bppv>:
{
 8009fb0:	b580      	push	{r7, lr}
 8009fb2:	b08e      	sub	sp, #56	@ 0x38
 8009fb4:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8009fb6:	4b21      	ldr	r3, [pc, #132]	@ (800a03c <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009fb8:	681b      	ldr	r3, [r3, #0]
 8009fba:	f3bf 8f5b 	dmb	ish
 8009fbe:	f003 0301 	and.w	r3, r3, #1
 8009fc2:	2b00      	cmp	r3, #0
 8009fc4:	bf0c      	ite	eq
 8009fc6:	2301      	moveq	r3, #1
 8009fc8:	2300      	movne	r3, #0
 8009fca:	b2db      	uxtb	r3, r3
 8009fcc:	2b00      	cmp	r3, #0
 8009fce:	d030      	beq.n	800a032 <_Z23getFont_verdana_20_4bppv+0x82>
 8009fd0:	481a      	ldr	r0, [pc, #104]	@ (800a03c <_Z23getFont_verdana_20_4bppv+0x8c>)
 8009fd2:	f016 fe32 	bl	8020c3a <__cxa_guard_acquire>
 8009fd6:	4603      	mov	r3, r0
 8009fd8:	2b00      	cmp	r3, #0
 8009fda:	bf14      	ite	ne
 8009fdc:	2301      	movne	r3, #1
 8009fde:	2300      	moveq	r3, #0
 8009fe0:	b2db      	uxtb	r3, r3
 8009fe2:	2b00      	cmp	r3, #0
 8009fe4:	d025      	beq.n	800a032 <_Z23getFont_verdana_20_4bppv+0x82>
 8009fe6:	2300      	movs	r3, #0
 8009fe8:	930c      	str	r3, [sp, #48]	@ 0x30
 8009fea:	2300      	movs	r3, #0
 8009fec:	930b      	str	r3, [sp, #44]	@ 0x2c
 8009fee:	2300      	movs	r3, #0
 8009ff0:	930a      	str	r3, [sp, #40]	@ 0x28
 8009ff2:	233f      	movs	r3, #63	@ 0x3f
 8009ff4:	9309      	str	r3, [sp, #36]	@ 0x24
 8009ff6:	4b12      	ldr	r3, [pc, #72]	@ (800a040 <_Z23getFont_verdana_20_4bppv+0x90>)
 8009ff8:	9308      	str	r3, [sp, #32]
 8009ffa:	4b12      	ldr	r3, [pc, #72]	@ (800a044 <_Z23getFont_verdana_20_4bppv+0x94>)
 8009ffc:	9307      	str	r3, [sp, #28]
 8009ffe:	2300      	movs	r3, #0
 800a000:	9306      	str	r3, [sp, #24]
 800a002:	2300      	movs	r3, #0
 800a004:	9305      	str	r3, [sp, #20]
 800a006:	2301      	movs	r3, #1
 800a008:	9304      	str	r3, [sp, #16]
 800a00a:	2304      	movs	r3, #4
 800a00c:	9303      	str	r3, [sp, #12]
 800a00e:	2300      	movs	r3, #0
 800a010:	9302      	str	r3, [sp, #8]
 800a012:	2300      	movs	r3, #0
 800a014:	9301      	str	r3, [sp, #4]
 800a016:	2314      	movs	r3, #20
 800a018:	9300      	str	r3, [sp, #0]
 800a01a:	2314      	movs	r3, #20
 800a01c:	2201      	movs	r2, #1
 800a01e:	490a      	ldr	r1, [pc, #40]	@ (800a048 <_Z23getFont_verdana_20_4bppv+0x98>)
 800a020:	480a      	ldr	r0, [pc, #40]	@ (800a04c <_Z23getFont_verdana_20_4bppv+0x9c>)
 800a022:	f7ff fec1 	bl	8009da8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a026:	480a      	ldr	r0, [pc, #40]	@ (800a050 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800a028:	f016 fe52 	bl	8020cd0 <atexit>
 800a02c:	4803      	ldr	r0, [pc, #12]	@ (800a03c <_Z23getFont_verdana_20_4bppv+0x8c>)
 800a02e:	f016 fe10 	bl	8020c52 <__cxa_guard_release>
    return verdana_20_4bpp;
 800a032:	4b06      	ldr	r3, [pc, #24]	@ (800a04c <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800a034:	4618      	mov	r0, r3
 800a036:	46bd      	mov	sp, r7
 800a038:	bd80      	pop	{r7, pc}
 800a03a:	bf00      	nop
 800a03c:	20000a3c 	.word	0x20000a3c
 800a040:	08023610 	.word	0x08023610
 800a044:	0802361c 	.word	0x0802361c
 800a048:	080235ec 	.word	0x080235ec
 800a04c:	20000a10 	.word	0x20000a10
 800a050:	08009fa1 	.word	0x08009fa1

0800a054 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a054:	b580      	push	{r7, lr}
 800a056:	af00      	add	r7, sp, #0
 800a058:	4801      	ldr	r0, [pc, #4]	@ (800a060 <__tcf_0+0xc>)
 800a05a:	f7ff fe6b 	bl	8009d34 <_ZN8touchgfx13GeneratedFontD1Ev>
 800a05e:	bd80      	pop	{r7, pc}
 800a060:	20000a40 	.word	0x20000a40

0800a064 <_Z23getFont_verdana_40_4bppv>:
{
 800a064:	b580      	push	{r7, lr}
 800a066:	b08e      	sub	sp, #56	@ 0x38
 800a068:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800a06a:	4b21      	ldr	r3, [pc, #132]	@ (800a0f0 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800a06c:	681b      	ldr	r3, [r3, #0]
 800a06e:	f3bf 8f5b 	dmb	ish
 800a072:	f003 0301 	and.w	r3, r3, #1
 800a076:	2b00      	cmp	r3, #0
 800a078:	bf0c      	ite	eq
 800a07a:	2301      	moveq	r3, #1
 800a07c:	2300      	movne	r3, #0
 800a07e:	b2db      	uxtb	r3, r3
 800a080:	2b00      	cmp	r3, #0
 800a082:	d030      	beq.n	800a0e6 <_Z23getFont_verdana_40_4bppv+0x82>
 800a084:	481a      	ldr	r0, [pc, #104]	@ (800a0f0 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800a086:	f016 fdd8 	bl	8020c3a <__cxa_guard_acquire>
 800a08a:	4603      	mov	r3, r0
 800a08c:	2b00      	cmp	r3, #0
 800a08e:	bf14      	ite	ne
 800a090:	2301      	movne	r3, #1
 800a092:	2300      	moveq	r3, #0
 800a094:	b2db      	uxtb	r3, r3
 800a096:	2b00      	cmp	r3, #0
 800a098:	d025      	beq.n	800a0e6 <_Z23getFont_verdana_40_4bppv+0x82>
 800a09a:	2300      	movs	r3, #0
 800a09c:	930c      	str	r3, [sp, #48]	@ 0x30
 800a09e:	2300      	movs	r3, #0
 800a0a0:	930b      	str	r3, [sp, #44]	@ 0x2c
 800a0a2:	2300      	movs	r3, #0
 800a0a4:	930a      	str	r3, [sp, #40]	@ 0x28
 800a0a6:	233f      	movs	r3, #63	@ 0x3f
 800a0a8:	9309      	str	r3, [sp, #36]	@ 0x24
 800a0aa:	4b12      	ldr	r3, [pc, #72]	@ (800a0f4 <_Z23getFont_verdana_40_4bppv+0x90>)
 800a0ac:	9308      	str	r3, [sp, #32]
 800a0ae:	4b12      	ldr	r3, [pc, #72]	@ (800a0f8 <_Z23getFont_verdana_40_4bppv+0x94>)
 800a0b0:	9307      	str	r3, [sp, #28]
 800a0b2:	2300      	movs	r3, #0
 800a0b4:	9306      	str	r3, [sp, #24]
 800a0b6:	2300      	movs	r3, #0
 800a0b8:	9305      	str	r3, [sp, #20]
 800a0ba:	2301      	movs	r3, #1
 800a0bc:	9304      	str	r3, [sp, #16]
 800a0be:	2304      	movs	r3, #4
 800a0c0:	9303      	str	r3, [sp, #12]
 800a0c2:	2300      	movs	r3, #0
 800a0c4:	9302      	str	r3, [sp, #8]
 800a0c6:	2300      	movs	r3, #0
 800a0c8:	9301      	str	r3, [sp, #4]
 800a0ca:	2328      	movs	r3, #40	@ 0x28
 800a0cc:	9300      	str	r3, [sp, #0]
 800a0ce:	2328      	movs	r3, #40	@ 0x28
 800a0d0:	2201      	movs	r2, #1
 800a0d2:	490a      	ldr	r1, [pc, #40]	@ (800a0fc <_Z23getFont_verdana_40_4bppv+0x98>)
 800a0d4:	480a      	ldr	r0, [pc, #40]	@ (800a100 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800a0d6:	f7ff fe67 	bl	8009da8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800a0da:	480a      	ldr	r0, [pc, #40]	@ (800a104 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800a0dc:	f016 fdf8 	bl	8020cd0 <atexit>
 800a0e0:	4803      	ldr	r0, [pc, #12]	@ (800a0f0 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800a0e2:	f016 fdb6 	bl	8020c52 <__cxa_guard_release>
    return verdana_40_4bpp;
 800a0e6:	4b06      	ldr	r3, [pc, #24]	@ (800a100 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800a0e8:	4618      	mov	r0, r3
 800a0ea:	46bd      	mov	sp, r7
 800a0ec:	bd80      	pop	{r7, pc}
 800a0ee:	bf00      	nop
 800a0f0:	20000a6c 	.word	0x20000a6c
 800a0f4:	08023614 	.word	0x08023614
 800a0f8:	08023620 	.word	0x08023620
 800a0fc:	080235fc 	.word	0x080235fc
 800a100:	20000a40 	.word	0x20000a40
 800a104:	0800a055 	.word	0x0800a055

0800a108 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800a108:	b480      	push	{r7}
 800a10a:	b083      	sub	sp, #12
 800a10c:	af00      	add	r7, sp, #0
 800a10e:	6078      	str	r0, [r7, #4]
 800a110:	6039      	str	r1, [r7, #0]
 800a112:	683b      	ldr	r3, [r7, #0]
 800a114:	4618      	mov	r0, r3
 800a116:	370c      	adds	r7, #12
 800a118:	46bd      	mov	sp, r7
 800a11a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a11e:	4770      	bx	lr

0800a120 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a120:	b480      	push	{r7}
 800a122:	b083      	sub	sp, #12
 800a124:	af00      	add	r7, sp, #0
 800a126:	6078      	str	r0, [r7, #4]
 800a128:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a12a:	bf00      	nop
 800a12c:	370c      	adds	r7, #12
 800a12e:	46bd      	mov	sp, r7
 800a130:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a134:	4770      	bx	lr

0800a136 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800a136:	b480      	push	{r7}
 800a138:	b083      	sub	sp, #12
 800a13a:	af00      	add	r7, sp, #0
 800a13c:	6078      	str	r0, [r7, #4]
 800a13e:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a140:	bf00      	nop
 800a142:	370c      	adds	r7, #12
 800a144:	46bd      	mov	sp, r7
 800a146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a14a:	4770      	bx	lr

0800a14c <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800a14c:	b480      	push	{r7}
 800a14e:	b083      	sub	sp, #12
 800a150:	af00      	add	r7, sp, #0
 800a152:	6078      	str	r0, [r7, #4]
 800a154:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800a156:	bf00      	nop
 800a158:	370c      	adds	r7, #12
 800a15a:	46bd      	mov	sp, r7
 800a15c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a160:	4770      	bx	lr

0800a162 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800a162:	b480      	push	{r7}
 800a164:	b083      	sub	sp, #12
 800a166:	af00      	add	r7, sp, #0
 800a168:	6078      	str	r0, [r7, #4]
 800a16a:	460b      	mov	r3, r1
 800a16c:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800a16e:	bf00      	nop
 800a170:	370c      	adds	r7, #12
 800a172:	46bd      	mov	sp, r7
 800a174:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a178:	4770      	bx	lr

0800a17a <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800a17a:	b480      	push	{r7}
 800a17c:	b083      	sub	sp, #12
 800a17e:	af00      	add	r7, sp, #0
 800a180:	6078      	str	r0, [r7, #4]
    {
    }
 800a182:	bf00      	nop
 800a184:	370c      	adds	r7, #12
 800a186:	46bd      	mov	sp, r7
 800a188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a18c:	4770      	bx	lr

0800a18e <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800a18e:	b480      	push	{r7}
 800a190:	b083      	sub	sp, #12
 800a192:	af00      	add	r7, sp, #0
 800a194:	6078      	str	r0, [r7, #4]
    {
    }
 800a196:	bf00      	nop
 800a198:	370c      	adds	r7, #12
 800a19a:	46bd      	mov	sp, r7
 800a19c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1a0:	4770      	bx	lr
	...

0800a1a4 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800a1a4:	b480      	push	{r7}
 800a1a6:	b083      	sub	sp, #12
 800a1a8:	af00      	add	r7, sp, #0
 800a1aa:	6078      	str	r0, [r7, #4]
    {
 800a1ac:	4a04      	ldr	r2, [pc, #16]	@ (800a1c0 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800a1ae:	687b      	ldr	r3, [r7, #4]
 800a1b0:	601a      	str	r2, [r3, #0]
    }
 800a1b2:	687b      	ldr	r3, [r7, #4]
 800a1b4:	4618      	mov	r0, r3
 800a1b6:	370c      	adds	r7, #12
 800a1b8:	46bd      	mov	sp, r7
 800a1ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1be:	4770      	bx	lr
 800a1c0:	08022724 	.word	0x08022724

0800a1c4 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800a1c4:	b580      	push	{r7, lr}
 800a1c6:	b082      	sub	sp, #8
 800a1c8:	af00      	add	r7, sp, #0
 800a1ca:	6078      	str	r0, [r7, #4]
    }
 800a1cc:	6878      	ldr	r0, [r7, #4]
 800a1ce:	f7ff ffe9 	bl	800a1a4 <_ZN8touchgfx15UIEventListenerD1Ev>
 800a1d2:	2104      	movs	r1, #4
 800a1d4:	6878      	ldr	r0, [r7, #4]
 800a1d6:	f016 fd2e 	bl	8020c36 <_ZdlPvj>
 800a1da:	687b      	ldr	r3, [r7, #4]
 800a1dc:	4618      	mov	r0, r3
 800a1de:	3708      	adds	r7, #8
 800a1e0:	46bd      	mov	sp, r7
 800a1e2:	bd80      	pop	{r7, pc}

0800a1e4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800a1e4:	b480      	push	{r7}
 800a1e6:	b083      	sub	sp, #12
 800a1e8:	af00      	add	r7, sp, #0
 800a1ea:	6078      	str	r0, [r7, #4]
    {
    }
 800a1ec:	bf00      	nop
 800a1ee:	370c      	adds	r7, #12
 800a1f0:	46bd      	mov	sp, r7
 800a1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a1f6:	4770      	bx	lr

0800a1f8 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800a1f8:	b480      	push	{r7}
 800a1fa:	b083      	sub	sp, #12
 800a1fc:	af00      	add	r7, sp, #0
 800a1fe:	6078      	str	r0, [r7, #4]
 800a200:	460b      	mov	r3, r1
 800a202:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800a204:	bf00      	nop
 800a206:	370c      	adds	r7, #12
 800a208:	46bd      	mov	sp, r7
 800a20a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a20e:	4770      	bx	lr

0800a210 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800a210:	b480      	push	{r7}
 800a212:	b083      	sub	sp, #12
 800a214:	af00      	add	r7, sp, #0
 800a216:	6078      	str	r0, [r7, #4]
 800a218:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	683a      	ldr	r2, [r7, #0]
 800a21e:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800a222:	6810      	ldr	r0, [r2, #0]
 800a224:	6851      	ldr	r1, [r2, #4]
 800a226:	c303      	stmia	r3!, {r0, r1}
    }
 800a228:	bf00      	nop
 800a22a:	370c      	adds	r7, #12
 800a22c:	46bd      	mov	sp, r7
 800a22e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a232:	4770      	bx	lr

0800a234 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800a234:	b580      	push	{r7, lr}
 800a236:	b082      	sub	sp, #8
 800a238:	af00      	add	r7, sp, #0
 800a23a:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800a23c:	687b      	ldr	r3, [r7, #4]
 800a23e:	3304      	adds	r3, #4
 800a240:	4618      	mov	r0, r3
 800a242:	f005 fd90 	bl	800fd66 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800a246:	bf00      	nop
 800a248:	3708      	adds	r7, #8
 800a24a:	46bd      	mov	sp, r7
 800a24c:	bd80      	pop	{r7, pc}
	...

0800a250 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800a250:	b480      	push	{r7}
 800a252:	b083      	sub	sp, #12
 800a254:	af00      	add	r7, sp, #0
 800a256:	6078      	str	r0, [r7, #4]
    {
 800a258:	4a04      	ldr	r2, [pc, #16]	@ (800a26c <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800a25a:	687b      	ldr	r3, [r7, #4]
 800a25c:	601a      	str	r2, [r3, #0]
    }
 800a25e:	687b      	ldr	r3, [r7, #4]
 800a260:	4618      	mov	r0, r3
 800a262:	370c      	adds	r7, #12
 800a264:	46bd      	mov	sp, r7
 800a266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a26a:	4770      	bx	lr
 800a26c:	0802270c 	.word	0x0802270c

0800a270 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800a270:	b580      	push	{r7, lr}
 800a272:	b082      	sub	sp, #8
 800a274:	af00      	add	r7, sp, #0
 800a276:	6078      	str	r0, [r7, #4]
    }
 800a278:	6878      	ldr	r0, [r7, #4]
 800a27a:	f7ff ffe9 	bl	800a250 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800a27e:	2104      	movs	r1, #4
 800a280:	6878      	ldr	r0, [r7, #4]
 800a282:	f016 fcd8 	bl	8020c36 <_ZdlPvj>
 800a286:	687b      	ldr	r3, [r7, #4]
 800a288:	4618      	mov	r0, r3
 800a28a:	3708      	adds	r7, #8
 800a28c:	46bd      	mov	sp, r7
 800a28e:	bd80      	pop	{r7, pc}

0800a290 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800a290:	b480      	push	{r7}
 800a292:	af00      	add	r7, sp, #0
    {
        return instance;
 800a294:	4b03      	ldr	r3, [pc, #12]	@ (800a2a4 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800a296:	681b      	ldr	r3, [r3, #0]
    }
 800a298:	4618      	mov	r0, r3
 800a29a:	46bd      	mov	sp, r7
 800a29c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2a0:	4770      	bx	lr
 800a2a2:	bf00      	nop
 800a2a4:	20001b6c 	.word	0x20001b6c

0800a2a8 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800a2a8:	b480      	push	{r7}
 800a2aa:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800a2ac:	4b0b      	ldr	r3, [pc, #44]	@ (800a2dc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800a2ae:	681b      	ldr	r3, [r3, #0]
 800a2b0:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800a2b4:	2b00      	cmp	r3, #0
 800a2b6:	d008      	beq.n	800a2ca <_ZN8touchgfx3HAL3lcdEv+0x22>
 800a2b8:	4b08      	ldr	r3, [pc, #32]	@ (800a2dc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800a2ba:	681b      	ldr	r3, [r3, #0]
 800a2bc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a2be:	2b00      	cmp	r3, #0
 800a2c0:	d003      	beq.n	800a2ca <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800a2c2:	4b06      	ldr	r3, [pc, #24]	@ (800a2dc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800a2c4:	681b      	ldr	r3, [r3, #0]
 800a2c6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800a2c8:	e002      	b.n	800a2d0 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800a2ca:	4b04      	ldr	r3, [pc, #16]	@ (800a2dc <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800a2cc:	681b      	ldr	r3, [r3, #0]
 800a2ce:	689b      	ldr	r3, [r3, #8]
    }
 800a2d0:	4618      	mov	r0, r3
 800a2d2:	46bd      	mov	sp, r7
 800a2d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2d8:	4770      	bx	lr
 800a2da:	bf00      	nop
 800a2dc:	20001b6c 	.word	0x20001b6c

0800a2e0 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800a2e0:	b480      	push	{r7}
 800a2e2:	b083      	sub	sp, #12
 800a2e4:	af00      	add	r7, sp, #0
 800a2e6:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800a2e8:	4a07      	ldr	r2, [pc, #28]	@ (800a308 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	601a      	str	r2, [r3, #0]
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	2200      	movs	r2, #0
 800a2f2:	605a      	str	r2, [r3, #4]
 800a2f4:	687b      	ldr	r3, [r7, #4]
 800a2f6:	2200      	movs	r2, #0
 800a2f8:	721a      	strb	r2, [r3, #8]
    {
    }
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	4618      	mov	r0, r3
 800a2fe:	370c      	adds	r7, #12
 800a300:	46bd      	mov	sp, r7
 800a302:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a306:	4770      	bx	lr
 800a308:	080226e8 	.word	0x080226e8

0800a30c <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800a30c:	b480      	push	{r7}
 800a30e:	b083      	sub	sp, #12
 800a310:	af00      	add	r7, sp, #0
 800a312:	6078      	str	r0, [r7, #4]
    {
 800a314:	4a04      	ldr	r2, [pc, #16]	@ (800a328 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800a316:	687b      	ldr	r3, [r7, #4]
 800a318:	601a      	str	r2, [r3, #0]
    }
 800a31a:	687b      	ldr	r3, [r7, #4]
 800a31c:	4618      	mov	r0, r3
 800a31e:	370c      	adds	r7, #12
 800a320:	46bd      	mov	sp, r7
 800a322:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a326:	4770      	bx	lr
 800a328:	080226e8 	.word	0x080226e8

0800a32c <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800a32c:	b580      	push	{r7, lr}
 800a32e:	b082      	sub	sp, #8
 800a330:	af00      	add	r7, sp, #0
 800a332:	6078      	str	r0, [r7, #4]
    }
 800a334:	6878      	ldr	r0, [r7, #4]
 800a336:	f7ff ffe9 	bl	800a30c <_ZN8touchgfx10TransitionD1Ev>
 800a33a:	210c      	movs	r1, #12
 800a33c:	6878      	ldr	r0, [r7, #4]
 800a33e:	f016 fc7a 	bl	8020c36 <_ZdlPvj>
 800a342:	687b      	ldr	r3, [r7, #4]
 800a344:	4618      	mov	r0, r3
 800a346:	3708      	adds	r7, #8
 800a348:	46bd      	mov	sp, r7
 800a34a:	bd80      	pop	{r7, pc}

0800a34c <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800a34c:	b480      	push	{r7}
 800a34e:	b083      	sub	sp, #12
 800a350:	af00      	add	r7, sp, #0
 800a352:	6078      	str	r0, [r7, #4]
    {
    }
 800a354:	bf00      	nop
 800a356:	370c      	adds	r7, #12
 800a358:	46bd      	mov	sp, r7
 800a35a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a35e:	4770      	bx	lr

0800a360 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800a360:	b480      	push	{r7}
 800a362:	b083      	sub	sp, #12
 800a364:	af00      	add	r7, sp, #0
 800a366:	6078      	str	r0, [r7, #4]
    {
    }
 800a368:	bf00      	nop
 800a36a:	370c      	adds	r7, #12
 800a36c:	46bd      	mov	sp, r7
 800a36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a372:	4770      	bx	lr

0800a374 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800a374:	b480      	push	{r7}
 800a376:	b083      	sub	sp, #12
 800a378:	af00      	add	r7, sp, #0
 800a37a:	6078      	str	r0, [r7, #4]
    {
    }
 800a37c:	bf00      	nop
 800a37e:	370c      	adds	r7, #12
 800a380:	46bd      	mov	sp, r7
 800a382:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a386:	4770      	bx	lr

0800a388 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800a388:	b580      	push	{r7, lr}
 800a38a:	b082      	sub	sp, #8
 800a38c:	af00      	add	r7, sp, #0
 800a38e:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800a390:	f005 fcc4 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 800a394:	4603      	mov	r3, r0
 800a396:	681a      	ldr	r2, [r3, #0]
 800a398:	323c      	adds	r2, #60	@ 0x3c
 800a39a:	6812      	ldr	r2, [r2, #0]
 800a39c:	4618      	mov	r0, r3
 800a39e:	4790      	blx	r2
    }
 800a3a0:	bf00      	nop
 800a3a2:	3708      	adds	r7, #8
 800a3a4:	46bd      	mov	sp, r7
 800a3a6:	bd80      	pop	{r7, pc}

0800a3a8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800a3a8:	b480      	push	{r7}
 800a3aa:	b083      	sub	sp, #12
 800a3ac:	af00      	add	r7, sp, #0
 800a3ae:	6078      	str	r0, [r7, #4]
 800a3b0:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800a3b2:	687b      	ldr	r3, [r7, #4]
 800a3b4:	683a      	ldr	r2, [r7, #0]
 800a3b6:	605a      	str	r2, [r3, #4]
    }
 800a3b8:	bf00      	nop
 800a3ba:	370c      	adds	r7, #12
 800a3bc:	46bd      	mov	sp, r7
 800a3be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3c2:	4770      	bx	lr

0800a3c4 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800a3c4:	b580      	push	{r7, lr}
 800a3c6:	b082      	sub	sp, #8
 800a3c8:	af00      	add	r7, sp, #0
 800a3ca:	6078      	str	r0, [r7, #4]
 800a3cc:	4a05      	ldr	r2, [pc, #20]	@ (800a3e4 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	601a      	str	r2, [r3, #0]
 800a3d2:	687b      	ldr	r3, [r7, #4]
 800a3d4:	4618      	mov	r0, r3
 800a3d6:	f7ff fee5 	bl	800a1a4 <_ZN8touchgfx15UIEventListenerD1Ev>
 800a3da:	687b      	ldr	r3, [r7, #4]
 800a3dc:	4618      	mov	r0, r3
 800a3de:	3708      	adds	r7, #8
 800a3e0:	46bd      	mov	sp, r7
 800a3e2:	bd80      	pop	{r7, pc}
 800a3e4:	08022f70 	.word	0x08022f70

0800a3e8 <_ZN8touchgfx11ApplicationD0Ev>:
 800a3e8:	b580      	push	{r7, lr}
 800a3ea:	b082      	sub	sp, #8
 800a3ec:	af00      	add	r7, sp, #0
 800a3ee:	6078      	str	r0, [r7, #4]
 800a3f0:	6878      	ldr	r0, [r7, #4]
 800a3f2:	f7ff ffe7 	bl	800a3c4 <_ZN8touchgfx11ApplicationD1Ev>
 800a3f6:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800a3fa:	6878      	ldr	r0, [r7, #4]
 800a3fc:	f016 fc1b 	bl	8020c36 <_ZdlPvj>
 800a400:	687b      	ldr	r3, [r7, #4]
 800a402:	4618      	mov	r0, r3
 800a404:	3708      	adds	r7, #8
 800a406:	46bd      	mov	sp, r7
 800a408:	bd80      	pop	{r7, pc}
	...

0800a40c <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800a40c:	b580      	push	{r7, lr}
 800a40e:	b082      	sub	sp, #8
 800a410:	af00      	add	r7, sp, #0
 800a412:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800a414:	687b      	ldr	r3, [r7, #4]
 800a416:	4618      	mov	r0, r3
 800a418:	f005 fd46 	bl	800fea8 <_ZN8touchgfx11ApplicationC1Ev>
 800a41c:	4a09      	ldr	r2, [pc, #36]	@ (800a444 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800a41e:	687b      	ldr	r3, [r7, #4]
 800a420:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800a422:	687b      	ldr	r3, [r7, #4]
 800a424:	2200      	movs	r2, #0
 800a426:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	2200      	movs	r2, #0
 800a42e:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800a432:	687b      	ldr	r3, [r7, #4]
 800a434:	4a04      	ldr	r2, [pc, #16]	@ (800a448 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800a436:	6013      	str	r3, [r2, #0]
    }
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	4618      	mov	r0, r3
 800a43c:	3708      	adds	r7, #8
 800a43e:	46bd      	mov	sp, r7
 800a440:	bd80      	pop	{r7, pc}
 800a442:	bf00      	nop
 800a444:	08022694 	.word	0x08022694
 800a448:	20001bb8 	.word	0x20001bb8

0800a44c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800a44c:	b580      	push	{r7, lr}
 800a44e:	b082      	sub	sp, #8
 800a450:	af00      	add	r7, sp, #0
 800a452:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800a454:	6878      	ldr	r0, [r7, #4]
 800a456:	f000 f804 	bl	800a462 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800a45a:	bf00      	nop
 800a45c:	3708      	adds	r7, #8
 800a45e:	46bd      	mov	sp, r7
 800a460:	bd80      	pop	{r7, pc}

0800a462 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800a462:	b580      	push	{r7, lr}
 800a464:	b082      	sub	sp, #8
 800a466:	af00      	add	r7, sp, #0
 800a468:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800a470:	2b00      	cmp	r3, #0
 800a472:	d00f      	beq.n	800a494 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800a47a:	687b      	ldr	r3, [r7, #4]
 800a47c:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800a480:	681b      	ldr	r3, [r3, #0]
 800a482:	330c      	adds	r3, #12
 800a484:	681b      	ldr	r3, [r3, #0]
 800a486:	4610      	mov	r0, r2
 800a488:	4798      	blx	r3
 800a48a:	4603      	mov	r3, r0
 800a48c:	2b00      	cmp	r3, #0
 800a48e:	d001      	beq.n	800a494 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800a490:	2301      	movs	r3, #1
 800a492:	e000      	b.n	800a496 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800a494:	2300      	movs	r3, #0
 800a496:	2b00      	cmp	r3, #0
 800a498:	d00e      	beq.n	800a4b8 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800a4a0:	687b      	ldr	r3, [r7, #4]
 800a4a2:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800a4a6:	681b      	ldr	r3, [r3, #0]
 800a4a8:	3308      	adds	r3, #8
 800a4aa:	681b      	ldr	r3, [r3, #0]
 800a4ac:	4610      	mov	r0, r2
 800a4ae:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800a4b0:	687b      	ldr	r3, [r7, #4]
 800a4b2:	2200      	movs	r2, #0
 800a4b4:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 800a4b8:	bf00      	nop
 800a4ba:	3708      	adds	r7, #8
 800a4bc:	46bd      	mov	sp, r7
 800a4be:	bd80      	pop	{r7, pc}

0800a4c0 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800a4c0:	b480      	push	{r7}
 800a4c2:	b083      	sub	sp, #12
 800a4c4:	af00      	add	r7, sp, #0
 800a4c6:	6078      	str	r0, [r7, #4]
 800a4c8:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800a4ca:	687b      	ldr	r3, [r7, #4]
 800a4cc:	683a      	ldr	r2, [r7, #0]
 800a4ce:	601a      	str	r2, [r3, #0]
    }
 800a4d0:	bf00      	nop
 800a4d2:	370c      	adds	r7, #12
 800a4d4:	46bd      	mov	sp, r7
 800a4d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4da:	4770      	bx	lr

0800a4dc <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800a4dc:	b580      	push	{r7, lr}
 800a4de:	b082      	sub	sp, #8
 800a4e0:	af00      	add	r7, sp, #0
 800a4e2:	6078      	str	r0, [r7, #4]
 800a4e4:	4a05      	ldr	r2, [pc, #20]	@ (800a4fc <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	601a      	str	r2, [r3, #0]
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	4618      	mov	r0, r3
 800a4ee:	f7ff ff69 	bl	800a3c4 <_ZN8touchgfx11ApplicationD1Ev>
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	3708      	adds	r7, #8
 800a4f8:	46bd      	mov	sp, r7
 800a4fa:	bd80      	pop	{r7, pc}
 800a4fc:	08022694 	.word	0x08022694

0800a500 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800a500:	b580      	push	{r7, lr}
 800a502:	b082      	sub	sp, #8
 800a504:	af00      	add	r7, sp, #0
 800a506:	6078      	str	r0, [r7, #4]
 800a508:	6878      	ldr	r0, [r7, #4]
 800a50a:	f7ff ffe7 	bl	800a4dc <_ZN8touchgfx14MVPApplicationD1Ev>
 800a50e:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 800a512:	6878      	ldr	r0, [r7, #4]
 800a514:	f016 fb8f 	bl	8020c36 <_ZdlPvj>
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	4618      	mov	r0, r3
 800a51c:	3708      	adds	r7, #8
 800a51e:	46bd      	mov	sp, r7
 800a520:	bd80      	pop	{r7, pc}
	...

0800a524 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800a524:	b580      	push	{r7, lr}
 800a526:	b082      	sub	sp, #8
 800a528:	af00      	add	r7, sp, #0
 800a52a:	6078      	str	r0, [r7, #4]
 800a52c:	4a08      	ldr	r2, [pc, #32]	@ (800a550 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	601a      	str	r2, [r3, #0]
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800a538:	4618      	mov	r0, r3
 800a53a:	f000 facf 	bl	800aadc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800a53e:	687b      	ldr	r3, [r7, #4]
 800a540:	4618      	mov	r0, r3
 800a542:	f7ff ffcb 	bl	800a4dc <_ZN8touchgfx14MVPApplicationD1Ev>
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	4618      	mov	r0, r3
 800a54a:	3708      	adds	r7, #8
 800a54c:	46bd      	mov	sp, r7
 800a54e:	bd80      	pop	{r7, pc}
 800a550:	08022628 	.word	0x08022628

0800a554 <_ZN23FrontendApplicationBaseD0Ev>:
 800a554:	b580      	push	{r7, lr}
 800a556:	b082      	sub	sp, #8
 800a558:	af00      	add	r7, sp, #0
 800a55a:	6078      	str	r0, [r7, #4]
 800a55c:	6878      	ldr	r0, [r7, #4]
 800a55e:	f7ff ffe1 	bl	800a524 <_ZN23FrontendApplicationBaseD1Ev>
 800a562:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800a566:	6878      	ldr	r0, [r7, #4]
 800a568:	f016 fb65 	bl	8020c36 <_ZdlPvj>
 800a56c:	687b      	ldr	r3, [r7, #4]
 800a56e:	4618      	mov	r0, r3
 800a570:	3708      	adds	r7, #8
 800a572:	46bd      	mov	sp, r7
 800a574:	bd80      	pop	{r7, pc}

0800a576 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800a576:	b580      	push	{r7, lr}
 800a578:	b082      	sub	sp, #8
 800a57a:	af00      	add	r7, sp, #0
 800a57c:	6078      	str	r0, [r7, #4]
    {
        gotoScreen1ScreenNoTransition();
 800a57e:	6878      	ldr	r0, [r7, #4]
 800a580:	f000 f886 	bl	800a690 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800a584:	bf00      	nop
 800a586:	3708      	adds	r7, #8
 800a588:	46bd      	mov	sp, r7
 800a58a:	bd80      	pop	{r7, pc}

0800a58c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800a58c:	b480      	push	{r7}
 800a58e:	b083      	sub	sp, #12
 800a590:	af00      	add	r7, sp, #0
 800a592:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800a594:	687b      	ldr	r3, [r7, #4]
 800a596:	2201      	movs	r2, #1
 800a598:	721a      	strb	r2, [r3, #8]
    }
 800a59a:	bf00      	nop
 800a59c:	370c      	adds	r7, #12
 800a59e:	46bd      	mov	sp, r7
 800a5a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5a4:	4770      	bx	lr

0800a5a6 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800a5a6:	b480      	push	{r7}
 800a5a8:	b083      	sub	sp, #12
 800a5aa:	af00      	add	r7, sp, #0
 800a5ac:	6078      	str	r0, [r7, #4]
 800a5ae:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800a5b0:	687b      	ldr	r3, [r7, #4]
 800a5b2:	683a      	ldr	r2, [r7, #0]
 800a5b4:	605a      	str	r2, [r3, #4]
    }
 800a5b6:	bf00      	nop
 800a5b8:	370c      	adds	r7, #12
 800a5ba:	46bd      	mov	sp, r7
 800a5bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a5c0:	4770      	bx	lr
	...

0800a5c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800a5c4:	b580      	push	{r7, lr}
 800a5c6:	b084      	sub	sp, #16
 800a5c8:	af00      	add	r7, sp, #0
 800a5ca:	60f8      	str	r0, [r7, #12]
 800a5cc:	60b9      	str	r1, [r7, #8]
 800a5ce:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800a5d0:	68fb      	ldr	r3, [r7, #12]
 800a5d2:	4618      	mov	r0, r3
 800a5d4:	f7ff ff1a 	bl	800a40c <_ZN8touchgfx14MVPApplicationC1Ev>
 800a5d8:	4a18      	ldr	r2, [pc, #96]	@ (800a63c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x78>)
 800a5da:	68fb      	ldr	r3, [r7, #12]
 800a5dc:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800a5de:	68fb      	ldr	r3, [r7, #12]
 800a5e0:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800a5e4:	4618      	mov	r0, r3
 800a5e6:	f000 f8a9 	bl	800a73c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800a5ea:	68fb      	ldr	r3, [r7, #12]
 800a5ec:	687a      	ldr	r2, [r7, #4]
 800a5ee:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 800a5f2:	68fb      	ldr	r3, [r7, #12]
 800a5f4:	68ba      	ldr	r2, [r7, #8]
 800a5f6:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800a5fa:	f7ff fe49 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800a5fe:	4603      	mov	r3, r0
 800a600:	681a      	ldr	r2, [r3, #0]
 800a602:	3208      	adds	r2, #8
 800a604:	6812      	ldr	r2, [r2, #0]
 800a606:	2100      	movs	r1, #0
 800a608:	4618      	mov	r0, r3
 800a60a:	4790      	blx	r2
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800a60c:	f7ff fe4c 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800a610:	4603      	mov	r3, r0
 800a612:	4618      	mov	r0, r3
 800a614:	f00e ff6f 	bl	80194f6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800a618:	f7ff fe46 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800a61c:	4603      	mov	r3, r0
 800a61e:	4618      	mov	r0, r3
 800a620:	f00e ffe4 	bl	80195ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800a624:	f7ff fe40 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800a628:	4603      	mov	r3, r0
 800a62a:	4618      	mov	r0, r3
 800a62c:	f00e ffea 	bl	8019604 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800a630:	68fb      	ldr	r3, [r7, #12]
 800a632:	4618      	mov	r0, r3
 800a634:	3710      	adds	r7, #16
 800a636:	46bd      	mov	sp, r7
 800a638:	bd80      	pop	{r7, pc}
 800a63a:	bf00      	nop
 800a63c:	08022628 	.word	0x08022628

0800a640 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800a640:	b480      	push	{r7}
 800a642:	b083      	sub	sp, #12
 800a644:	af00      	add	r7, sp, #0
 800a646:	6078      	str	r0, [r7, #4]
 800a648:	6039      	str	r1, [r7, #0]
 800a64a:	687b      	ldr	r3, [r7, #4]
 800a64c:	4618      	mov	r0, r3
 800a64e:	370c      	adds	r7, #12
 800a650:	46bd      	mov	sp, r7
 800a652:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a656:	4770      	bx	lr

0800a658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800a658:	b580      	push	{r7, lr}
 800a65a:	b082      	sub	sp, #8
 800a65c:	af00      	add	r7, sp, #0
 800a65e:	6078      	str	r0, [r7, #4]
 800a660:	6039      	str	r1, [r7, #0]
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	683a      	ldr	r2, [r7, #0]
 800a666:	4611      	mov	r1, r2
 800a668:	4618      	mov	r0, r3
 800a66a:	f7ff ffe9 	bl	800a640 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800a66e:	683b      	ldr	r3, [r7, #0]
 800a670:	685a      	ldr	r2, [r3, #4]
 800a672:	687b      	ldr	r3, [r7, #4]
 800a674:	605a      	str	r2, [r3, #4]
 800a676:	687b      	ldr	r3, [r7, #4]
 800a678:	683a      	ldr	r2, [r7, #0]
 800a67a:	3308      	adds	r3, #8
 800a67c:	3208      	adds	r2, #8
 800a67e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a682:	e883 0003 	stmia.w	r3, {r0, r1}
 800a686:	687b      	ldr	r3, [r7, #4]
 800a688:	4618      	mov	r0, r3
 800a68a:	3708      	adds	r7, #8
 800a68c:	46bd      	mov	sp, r7
 800a68e:	bd80      	pop	{r7, pc}

0800a690 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
 */

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
 800a690:	b590      	push	{r4, r7, lr}
 800a692:	b089      	sub	sp, #36	@ 0x24
 800a694:	af00      	add	r7, sp, #0
 800a696:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl);
 800a698:	687b      	ldr	r3, [r7, #4]
 800a69a:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800a69e:	4b10      	ldr	r3, [pc, #64]	@ (800a6e0 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x50>)
 800a6a0:	61bb      	str	r3, [r7, #24]
 800a6a2:	2300      	movs	r3, #0
 800a6a4:	61fb      	str	r3, [r7, #28]
 800a6a6:	f107 0008 	add.w	r0, r7, #8
 800a6aa:	f107 0318 	add.w	r3, r7, #24
 800a6ae:	cb0c      	ldmia	r3, {r2, r3}
 800a6b0:	6879      	ldr	r1, [r7, #4]
 800a6b2:	f000 f85f 	bl	800a774 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800a6b6:	f107 0308 	add.w	r3, r7, #8
 800a6ba:	4619      	mov	r1, r3
 800a6bc:	4620      	mov	r0, r4
 800a6be:	f7ff ffcb 	bl	800a658 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800a6c2:	f107 0308 	add.w	r3, r7, #8
 800a6c6:	4618      	mov	r0, r3
 800a6c8:	f000 fa08 	bl	800aadc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800a6cc:	687b      	ldr	r3, [r7, #4]
 800a6ce:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 800a6d8:	bf00      	nop
 800a6da:	3724      	adds	r7, #36	@ 0x24
 800a6dc:	46bd      	mov	sp, r7
 800a6de:	bd90      	pop	{r4, r7, pc}
 800a6e0:	0800a6e5 	.word	0x0800a6e5

0800a6e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 800a6e4:	b580      	push	{r7, lr}
 800a6e6:	b084      	sub	sp, #16
 800a6e8:	af02      	add	r7, sp, #8
 800a6ea:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800a6f2:	687b      	ldr	r3, [r7, #4]
 800a6f4:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 800a6f8:	461a      	mov	r2, r3
 800a6fa:	687b      	ldr	r3, [r7, #4]
 800a6fc:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800a700:	9300      	str	r3, [sp, #0]
 800a702:	4b04      	ldr	r3, [pc, #16]	@ (800a714 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x30>)
 800a704:	4804      	ldr	r0, [pc, #16]	@ (800a718 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x34>)
 800a706:	f000 f867 	bl	800a7d8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800a70a:	bf00      	nop
 800a70c:	3708      	adds	r7, #8
 800a70e:	46bd      	mov	sp, r7
 800a710:	bd80      	pop	{r7, pc}
 800a712:	bf00      	nop
 800a714:	20001bac 	.word	0x20001bac
 800a718:	20001ba8 	.word	0x20001ba8

0800a71c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800a71c:	b480      	push	{r7}
 800a71e:	b083      	sub	sp, #12
 800a720:	af00      	add	r7, sp, #0
 800a722:	6078      	str	r0, [r7, #4]
 800a724:	4a04      	ldr	r2, [pc, #16]	@ (800a738 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800a726:	687b      	ldr	r3, [r7, #4]
 800a728:	601a      	str	r2, [r3, #0]
 800a72a:	687b      	ldr	r3, [r7, #4]
 800a72c:	4618      	mov	r0, r3
 800a72e:	370c      	adds	r7, #12
 800a730:	46bd      	mov	sp, r7
 800a732:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a736:	4770      	bx	lr
 800a738:	0802270c 	.word	0x0802270c

0800a73c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800a73c:	b580      	push	{r7, lr}
 800a73e:	b082      	sub	sp, #8
 800a740:	af00      	add	r7, sp, #0
 800a742:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	4618      	mov	r0, r3
 800a748:	f7ff ffe8 	bl	800a71c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800a74c:	4a08      	ldr	r2, [pc, #32]	@ (800a770 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800a74e:	687b      	ldr	r3, [r7, #4]
 800a750:	601a      	str	r2, [r3, #0]
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	2200      	movs	r2, #0
 800a756:	605a      	str	r2, [r3, #4]
 800a758:	687b      	ldr	r3, [r7, #4]
 800a75a:	2200      	movs	r2, #0
 800a75c:	609a      	str	r2, [r3, #8]
 800a75e:	687b      	ldr	r3, [r7, #4]
 800a760:	2200      	movs	r2, #0
 800a762:	60da      	str	r2, [r3, #12]
    {
    }
 800a764:	687b      	ldr	r3, [r7, #4]
 800a766:	4618      	mov	r0, r3
 800a768:	3708      	adds	r7, #8
 800a76a:	46bd      	mov	sp, r7
 800a76c:	bd80      	pop	{r7, pc}
 800a76e:	bf00      	nop
 800a770:	0802267c 	.word	0x0802267c

0800a774 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800a774:	b580      	push	{r7, lr}
 800a776:	b084      	sub	sp, #16
 800a778:	af00      	add	r7, sp, #0
 800a77a:	60f8      	str	r0, [r7, #12]
 800a77c:	60b9      	str	r1, [r7, #8]
 800a77e:	4639      	mov	r1, r7
 800a780:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	4618      	mov	r0, r3
 800a788:	f7ff ffc8 	bl	800a71c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800a78c:	4a08      	ldr	r2, [pc, #32]	@ (800a7b0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800a78e:	68fb      	ldr	r3, [r7, #12]
 800a790:	601a      	str	r2, [r3, #0]
 800a792:	68fb      	ldr	r3, [r7, #12]
 800a794:	68ba      	ldr	r2, [r7, #8]
 800a796:	605a      	str	r2, [r3, #4]
 800a798:	68fb      	ldr	r3, [r7, #12]
 800a79a:	3308      	adds	r3, #8
 800a79c:	463a      	mov	r2, r7
 800a79e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800a7a2:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800a7a6:	68fb      	ldr	r3, [r7, #12]
 800a7a8:	4618      	mov	r0, r3
 800a7aa:	3710      	adds	r7, #16
 800a7ac:	46bd      	mov	sp, r7
 800a7ae:	bd80      	pop	{r7, pc}
 800a7b0:	0802267c 	.word	0x0802267c

0800a7b4 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800a7b4:	b580      	push	{r7, lr}
 800a7b6:	b082      	sub	sp, #8
 800a7b8:	af00      	add	r7, sp, #0
 800a7ba:	6078      	str	r0, [r7, #4]
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	4618      	mov	r0, r3
 800a7c0:	f7ff fd8e 	bl	800a2e0 <_ZN8touchgfx10TransitionC1Ev>
 800a7c4:	4a03      	ldr	r2, [pc, #12]	@ (800a7d4 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	601a      	str	r2, [r3, #0]
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	4618      	mov	r0, r3
 800a7ce:	3708      	adds	r7, #8
 800a7d0:	46bd      	mov	sp, r7
 800a7d2:	bd80      	pop	{r7, pc}
 800a7d4:	08022604 	.word	0x08022604

0800a7d8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800a7d8:	b590      	push	{r4, r7, lr}
 800a7da:	b08f      	sub	sp, #60	@ 0x3c
 800a7dc:	af00      	add	r7, sp, #0
 800a7de:	60f8      	str	r0, [r7, #12]
 800a7e0:	60b9      	str	r1, [r7, #8]
 800a7e2:	607a      	str	r2, [r7, #4]
 800a7e4:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800a7e6:	687b      	ldr	r3, [r7, #4]
 800a7e8:	689a      	ldr	r2, [r3, #8]
 800a7ea:	687b      	ldr	r3, [r7, #4]
 800a7ec:	689b      	ldr	r3, [r3, #8]
 800a7ee:	681b      	ldr	r3, [r3, #0]
 800a7f0:	3320      	adds	r3, #32
 800a7f2:	681b      	ldr	r3, [r3, #0]
 800a7f4:	4610      	mov	r0, r2
 800a7f6:	4798      	blx	r3
 800a7f8:	4603      	mov	r3, r0
 800a7fa:	2b6b      	cmp	r3, #107	@ 0x6b
 800a7fc:	d805      	bhi.n	800a80a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x32>
 800a7fe:	4b7d      	ldr	r3, [pc, #500]	@ (800a9f4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x21c>)
 800a800:	4a7d      	ldr	r2, [pc, #500]	@ (800a9f8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800a802:	21a3      	movs	r1, #163	@ 0xa3
 800a804:	487d      	ldr	r0, [pc, #500]	@ (800a9fc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800a806:	f016 fa45 	bl	8020c94 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800a80a:	687b      	ldr	r3, [r7, #4]
 800a80c:	685a      	ldr	r2, [r3, #4]
 800a80e:	687b      	ldr	r3, [r7, #4]
 800a810:	685b      	ldr	r3, [r3, #4]
 800a812:	681b      	ldr	r3, [r3, #0]
 800a814:	3320      	adds	r3, #32
 800a816:	681b      	ldr	r3, [r3, #0]
 800a818:	4610      	mov	r0, r2
 800a81a:	4798      	blx	r3
 800a81c:	4603      	mov	r3, r0
 800a81e:	2b0f      	cmp	r3, #15
 800a820:	d805      	bhi.n	800a82e <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x56>
 800a822:	4b77      	ldr	r3, [pc, #476]	@ (800aa00 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800a824:	4a74      	ldr	r2, [pc, #464]	@ (800a9f8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800a826:	21a4      	movs	r1, #164	@ 0xa4
 800a828:	4874      	ldr	r0, [pc, #464]	@ (800a9fc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800a82a:	f016 fa33 	bl	8020c94 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800a82e:	687b      	ldr	r3, [r7, #4]
 800a830:	68da      	ldr	r2, [r3, #12]
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	68db      	ldr	r3, [r3, #12]
 800a836:	681b      	ldr	r3, [r3, #0]
 800a838:	3320      	adds	r3, #32
 800a83a:	681b      	ldr	r3, [r3, #0]
 800a83c:	4610      	mov	r0, r2
 800a83e:	4798      	blx	r3
 800a840:	4603      	mov	r3, r0
 800a842:	2b0b      	cmp	r3, #11
 800a844:	d805      	bhi.n	800a852 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
 800a846:	4b6f      	ldr	r3, [pc, #444]	@ (800aa04 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800a848:	4a6b      	ldr	r2, [pc, #428]	@ (800a9f8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800a84a:	21a5      	movs	r1, #165	@ 0xa5
 800a84c:	486b      	ldr	r0, [pc, #428]	@ (800a9fc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800a84e:	f016 fa21 	bl	8020c94 <__assert_func>
 800a852:	68fb      	ldr	r3, [r7, #12]
 800a854:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a856:	68bb      	ldr	r3, [r7, #8]
 800a858:	627b      	str	r3, [r7, #36]	@ 0x24
 800a85a:	683b      	ldr	r3, [r7, #0]
 800a85c:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800a85e:	f005 fa5d 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 800a862:	4603      	mov	r3, r0
 800a864:	4618      	mov	r0, r3
 800a866:	f7ff fce5 	bl	800a234 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800a86a:	6a3b      	ldr	r3, [r7, #32]
 800a86c:	681b      	ldr	r3, [r3, #0]
 800a86e:	2b00      	cmp	r3, #0
 800a870:	d008      	beq.n	800a884 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xac>
        (*currentTrans)->tearDown();
 800a872:	6a3b      	ldr	r3, [r7, #32]
 800a874:	681a      	ldr	r2, [r3, #0]
 800a876:	6a3b      	ldr	r3, [r7, #32]
 800a878:	681b      	ldr	r3, [r3, #0]
 800a87a:	681b      	ldr	r3, [r3, #0]
 800a87c:	330c      	adds	r3, #12
 800a87e:	681b      	ldr	r3, [r3, #0]
 800a880:	4610      	mov	r0, r2
 800a882:	4798      	blx	r3
    if (*currentTrans)
 800a884:	6a3b      	ldr	r3, [r7, #32]
 800a886:	681b      	ldr	r3, [r3, #0]
 800a888:	2b00      	cmp	r3, #0
 800a88a:	d007      	beq.n	800a89c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc4>
        (*currentTrans)->~Transition();
 800a88c:	6a3b      	ldr	r3, [r7, #32]
 800a88e:	681a      	ldr	r2, [r3, #0]
 800a890:	6a3b      	ldr	r3, [r7, #32]
 800a892:	681b      	ldr	r3, [r3, #0]
 800a894:	681b      	ldr	r3, [r3, #0]
 800a896:	681b      	ldr	r3, [r3, #0]
 800a898:	4610      	mov	r0, r2
 800a89a:	4798      	blx	r3
    if (*currentScreen)
 800a89c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a89e:	681b      	ldr	r3, [r3, #0]
 800a8a0:	2b00      	cmp	r3, #0
 800a8a2:	d008      	beq.n	800a8b6 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
        (*currentScreen)->tearDownScreen();
 800a8a4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a8a6:	681a      	ldr	r2, [r3, #0]
 800a8a8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a8aa:	681b      	ldr	r3, [r3, #0]
 800a8ac:	681b      	ldr	r3, [r3, #0]
 800a8ae:	3314      	adds	r3, #20
 800a8b0:	681b      	ldr	r3, [r3, #0]
 800a8b2:	4610      	mov	r0, r2
 800a8b4:	4798      	blx	r3
    if (*currentPresenter)
 800a8b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	2b00      	cmp	r3, #0
 800a8bc:	d008      	beq.n	800a8d0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xf8>
        (*currentPresenter)->deactivate();
 800a8be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8c0:	681a      	ldr	r2, [r3, #0]
 800a8c2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8c4:	681b      	ldr	r3, [r3, #0]
 800a8c6:	681b      	ldr	r3, [r3, #0]
 800a8c8:	3304      	adds	r3, #4
 800a8ca:	681b      	ldr	r3, [r3, #0]
 800a8cc:	4610      	mov	r0, r2
 800a8ce:	4798      	blx	r3
    if (*currentScreen)
 800a8d0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a8d2:	681b      	ldr	r3, [r3, #0]
 800a8d4:	2b00      	cmp	r3, #0
 800a8d6:	d007      	beq.n	800a8e8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x110>
        (*currentScreen)->~Screen();
 800a8d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a8da:	681a      	ldr	r2, [r3, #0]
 800a8dc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a8de:	681b      	ldr	r3, [r3, #0]
 800a8e0:	681b      	ldr	r3, [r3, #0]
 800a8e2:	681b      	ldr	r3, [r3, #0]
 800a8e4:	4610      	mov	r0, r2
 800a8e6:	4798      	blx	r3
    if (*currentPresenter)
 800a8e8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	2b00      	cmp	r3, #0
 800a8ee:	d008      	beq.n	800a902 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12a>
        (*currentPresenter)->~Presenter();
 800a8f0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8f2:	681a      	ldr	r2, [r3, #0]
 800a8f4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a8f6:	681b      	ldr	r3, [r3, #0]
 800a8f8:	681b      	ldr	r3, [r3, #0]
 800a8fa:	3308      	adds	r3, #8
 800a8fc:	681b      	ldr	r3, [r3, #0]
 800a8fe:	4610      	mov	r0, r2
 800a900:	4798      	blx	r3
}
 800a902:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	68db      	ldr	r3, [r3, #12]
 800a908:	2100      	movs	r1, #0
 800a90a:	4618      	mov	r0, r3
 800a90c:	f000 f87c 	bl	800aa08 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800a910:	4603      	mov	r3, r0
 800a912:	4619      	mov	r1, r3
 800a914:	200c      	movs	r0, #12
 800a916:	f7ff fbf7 	bl	800a108 <_ZnwjPv>
 800a91a:	4604      	mov	r4, r0
 800a91c:	4620      	mov	r0, r4
 800a91e:	f7ff ff49 	bl	800a7b4 <_ZN8touchgfx12NoTransitionC1Ev>
 800a922:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	689b      	ldr	r3, [r3, #8]
 800a928:	2100      	movs	r1, #0
 800a92a:	4618      	mov	r0, r3
 800a92c:	f000 f87f 	bl	800aa2e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800a930:	4603      	mov	r3, r0
 800a932:	4619      	mov	r1, r3
 800a934:	206c      	movs	r0, #108	@ 0x6c
 800a936:	f7ff fbe7 	bl	800a108 <_ZnwjPv>
 800a93a:	4604      	mov	r4, r0
 800a93c:	4620      	mov	r0, r4
 800a93e:	f001 f811 	bl	800b964 <_ZN11Screen1ViewC1Ev>
 800a942:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800a944:	687b      	ldr	r3, [r7, #4]
 800a946:	685b      	ldr	r3, [r3, #4]
 800a948:	2100      	movs	r1, #0
 800a94a:	4618      	mov	r0, r3
 800a94c:	f000 f882 	bl	800aa54 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800a950:	4603      	mov	r3, r0
 800a952:	4619      	mov	r1, r3
 800a954:	2010      	movs	r0, #16
 800a956:	f7ff fbd7 	bl	800a108 <_ZnwjPv>
 800a95a:	4604      	mov	r4, r0
 800a95c:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800a95e:	4620      	mov	r0, r4
 800a960:	f000 ffaa 	bl	800b8b8 <_ZN16Screen1PresenterC1ER11Screen1View>
 800a964:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800a966:	683b      	ldr	r3, [r7, #0]
 800a968:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800a96a:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800a96c:	68bb      	ldr	r3, [r7, #8]
 800a96e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a970:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800a972:	68fb      	ldr	r3, [r7, #12]
 800a974:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a976:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800a978:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a97a:	2b00      	cmp	r3, #0
 800a97c:	d002      	beq.n	800a984 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ac>
 800a97e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a980:	3304      	adds	r3, #4
 800a982:	e000      	b.n	800a986 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1ae>
 800a984:	2300      	movs	r3, #0
 800a986:	4619      	mov	r1, r3
 800a988:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800a98a:	f7ff fd99 	bl	800a4c0 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800a98e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a990:	3304      	adds	r3, #4
 800a992:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800a994:	4618      	mov	r0, r3
 800a996:	f7ff fe06 	bl	800a5a6 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800a99a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a99c:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a99e:	4618      	mov	r0, r3
 800a9a0:	f000 f86b 	bl	800aa7a <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 800a9a4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a9a6:	61fb      	str	r3, [r7, #28]
 800a9a8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800a9aa:	61bb      	str	r3, [r7, #24]
 800a9ac:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a9ae:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800a9b0:	69fb      	ldr	r3, [r7, #28]
 800a9b2:	681b      	ldr	r3, [r3, #0]
 800a9b4:	330c      	adds	r3, #12
 800a9b6:	681b      	ldr	r3, [r3, #0]
 800a9b8:	69f8      	ldr	r0, [r7, #28]
 800a9ba:	4798      	blx	r3
    newPresenter->activate();
 800a9bc:	69bb      	ldr	r3, [r7, #24]
 800a9be:	681b      	ldr	r3, [r3, #0]
 800a9c0:	681b      	ldr	r3, [r3, #0]
 800a9c2:	69b8      	ldr	r0, [r7, #24]
 800a9c4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800a9c6:	6979      	ldr	r1, [r7, #20]
 800a9c8:	69f8      	ldr	r0, [r7, #28]
 800a9ca:	f006 fe6b 	bl	80116a4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800a9ce:	697b      	ldr	r3, [r7, #20]
 800a9d0:	681b      	ldr	r3, [r3, #0]
 800a9d2:	3310      	adds	r3, #16
 800a9d4:	681b      	ldr	r3, [r3, #0]
 800a9d6:	6978      	ldr	r0, [r7, #20]
 800a9d8:	4798      	blx	r3
    newTransition->invalidate();
 800a9da:	697b      	ldr	r3, [r7, #20]
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	3314      	adds	r3, #20
 800a9e0:	681b      	ldr	r3, [r3, #0]
 800a9e2:	6978      	ldr	r0, [r7, #20]
 800a9e4:	4798      	blx	r3
}
 800a9e6:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800a9e8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800a9ea:	4618      	mov	r0, r3
 800a9ec:	373c      	adds	r7, #60	@ 0x3c
 800a9ee:	46bd      	mov	sp, r7
 800a9f0:	bd90      	pop	{r4, r7, pc}
 800a9f2:	bf00      	nop
 800a9f4:	08021cd0 	.word	0x08021cd0
 800a9f8:	08021d60 	.word	0x08021d60
 800a9fc:	08021e34 	.word	0x08021e34
 800aa00:	08021e78 	.word	0x08021e78
 800aa04:	08021f1c 	.word	0x08021f1c

0800aa08 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800aa08:	b580      	push	{r7, lr}
 800aa0a:	b082      	sub	sp, #8
 800aa0c:	af00      	add	r7, sp, #0
 800aa0e:	6078      	str	r0, [r7, #4]
 800aa10:	460b      	mov	r3, r1
 800aa12:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	681b      	ldr	r3, [r3, #0]
 800aa18:	3324      	adds	r3, #36	@ 0x24
 800aa1a:	681b      	ldr	r3, [r3, #0]
 800aa1c:	887a      	ldrh	r2, [r7, #2]
 800aa1e:	4611      	mov	r1, r2
 800aa20:	6878      	ldr	r0, [r7, #4]
 800aa22:	4798      	blx	r3
 800aa24:	4603      	mov	r3, r0
    }
 800aa26:	4618      	mov	r0, r3
 800aa28:	3708      	adds	r7, #8
 800aa2a:	46bd      	mov	sp, r7
 800aa2c:	bd80      	pop	{r7, pc}

0800aa2e <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800aa2e:	b580      	push	{r7, lr}
 800aa30:	b082      	sub	sp, #8
 800aa32:	af00      	add	r7, sp, #0
 800aa34:	6078      	str	r0, [r7, #4]
 800aa36:	460b      	mov	r3, r1
 800aa38:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800aa3a:	687b      	ldr	r3, [r7, #4]
 800aa3c:	681b      	ldr	r3, [r3, #0]
 800aa3e:	3324      	adds	r3, #36	@ 0x24
 800aa40:	681b      	ldr	r3, [r3, #0]
 800aa42:	887a      	ldrh	r2, [r7, #2]
 800aa44:	4611      	mov	r1, r2
 800aa46:	6878      	ldr	r0, [r7, #4]
 800aa48:	4798      	blx	r3
 800aa4a:	4603      	mov	r3, r0
    }
 800aa4c:	4618      	mov	r0, r3
 800aa4e:	3708      	adds	r7, #8
 800aa50:	46bd      	mov	sp, r7
 800aa52:	bd80      	pop	{r7, pc}

0800aa54 <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800aa54:	b580      	push	{r7, lr}
 800aa56:	b082      	sub	sp, #8
 800aa58:	af00      	add	r7, sp, #0
 800aa5a:	6078      	str	r0, [r7, #4]
 800aa5c:	460b      	mov	r3, r1
 800aa5e:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800aa60:	687b      	ldr	r3, [r7, #4]
 800aa62:	681b      	ldr	r3, [r3, #0]
 800aa64:	3324      	adds	r3, #36	@ 0x24
 800aa66:	681b      	ldr	r3, [r3, #0]
 800aa68:	887a      	ldrh	r2, [r7, #2]
 800aa6a:	4611      	mov	r1, r2
 800aa6c:	6878      	ldr	r0, [r7, #4]
 800aa6e:	4798      	blx	r3
 800aa70:	4603      	mov	r3, r0
    }
 800aa72:	4618      	mov	r0, r3
 800aa74:	3708      	adds	r7, #8
 800aa76:	46bd      	mov	sp, r7
 800aa78:	bd80      	pop	{r7, pc}

0800aa7a <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800aa7a:	b480      	push	{r7}
 800aa7c:	b083      	sub	sp, #12
 800aa7e:	af00      	add	r7, sp, #0
 800aa80:	6078      	str	r0, [r7, #4]
 800aa82:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800aa84:	687b      	ldr	r3, [r7, #4]
 800aa86:	683a      	ldr	r2, [r7, #0]
 800aa88:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800aa8a:	bf00      	nop
 800aa8c:	370c      	adds	r7, #12
 800aa8e:	46bd      	mov	sp, r7
 800aa90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa94:	4770      	bx	lr
	...

0800aa98 <_ZN8touchgfx12NoTransitionD1Ev>:
 800aa98:	b580      	push	{r7, lr}
 800aa9a:	b082      	sub	sp, #8
 800aa9c:	af00      	add	r7, sp, #0
 800aa9e:	6078      	str	r0, [r7, #4]
 800aaa0:	4a05      	ldr	r2, [pc, #20]	@ (800aab8 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800aaa2:	687b      	ldr	r3, [r7, #4]
 800aaa4:	601a      	str	r2, [r3, #0]
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	4618      	mov	r0, r3
 800aaaa:	f7ff fc2f 	bl	800a30c <_ZN8touchgfx10TransitionD1Ev>
 800aaae:	687b      	ldr	r3, [r7, #4]
 800aab0:	4618      	mov	r0, r3
 800aab2:	3708      	adds	r7, #8
 800aab4:	46bd      	mov	sp, r7
 800aab6:	bd80      	pop	{r7, pc}
 800aab8:	08022604 	.word	0x08022604

0800aabc <_ZN8touchgfx12NoTransitionD0Ev>:
 800aabc:	b580      	push	{r7, lr}
 800aabe:	b082      	sub	sp, #8
 800aac0:	af00      	add	r7, sp, #0
 800aac2:	6078      	str	r0, [r7, #4]
 800aac4:	6878      	ldr	r0, [r7, #4]
 800aac6:	f7ff ffe7 	bl	800aa98 <_ZN8touchgfx12NoTransitionD1Ev>
 800aaca:	210c      	movs	r1, #12
 800aacc:	6878      	ldr	r0, [r7, #4]
 800aace:	f016 f8b2 	bl	8020c36 <_ZdlPvj>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	4618      	mov	r0, r3
 800aad6:	3708      	adds	r7, #8
 800aad8:	46bd      	mov	sp, r7
 800aada:	bd80      	pop	{r7, pc}

0800aadc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800aadc:	b580      	push	{r7, lr}
 800aade:	b082      	sub	sp, #8
 800aae0:	af00      	add	r7, sp, #0
 800aae2:	6078      	str	r0, [r7, #4]
 800aae4:	4a05      	ldr	r2, [pc, #20]	@ (800aafc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	601a      	str	r2, [r3, #0]
 800aaea:	687b      	ldr	r3, [r7, #4]
 800aaec:	4618      	mov	r0, r3
 800aaee:	f7ff fbaf 	bl	800a250 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800aaf2:	687b      	ldr	r3, [r7, #4]
 800aaf4:	4618      	mov	r0, r3
 800aaf6:	3708      	adds	r7, #8
 800aaf8:	46bd      	mov	sp, r7
 800aafa:	bd80      	pop	{r7, pc}
 800aafc:	0802267c 	.word	0x0802267c

0800ab00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800ab00:	b580      	push	{r7, lr}
 800ab02:	b082      	sub	sp, #8
 800ab04:	af00      	add	r7, sp, #0
 800ab06:	6078      	str	r0, [r7, #4]
 800ab08:	6878      	ldr	r0, [r7, #4]
 800ab0a:	f7ff ffe7 	bl	800aadc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800ab0e:	2110      	movs	r1, #16
 800ab10:	6878      	ldr	r0, [r7, #4]
 800ab12:	f016 f890 	bl	8020c36 <_ZdlPvj>
 800ab16:	687b      	ldr	r3, [r7, #4]
 800ab18:	4618      	mov	r0, r3
 800ab1a:	3708      	adds	r7, #8
 800ab1c:	46bd      	mov	sp, r7
 800ab1e:	bd80      	pop	{r7, pc}

0800ab20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800ab20:	b580      	push	{r7, lr}
 800ab22:	b082      	sub	sp, #8
 800ab24:	af00      	add	r7, sp, #0
 800ab26:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800ab28:	687b      	ldr	r3, [r7, #4]
 800ab2a:	685b      	ldr	r3, [r3, #4]
 800ab2c:	687a      	ldr	r2, [r7, #4]
 800ab2e:	68d2      	ldr	r2, [r2, #12]
 800ab30:	1052      	asrs	r2, r2, #1
 800ab32:	1899      	adds	r1, r3, r2
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	68db      	ldr	r3, [r3, #12]
 800ab38:	f003 0301 	and.w	r3, r3, #1
 800ab3c:	2b00      	cmp	r3, #0
 800ab3e:	d102      	bne.n	800ab46 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800ab40:	687b      	ldr	r3, [r7, #4]
 800ab42:	689b      	ldr	r3, [r3, #8]
 800ab44:	e00a      	b.n	800ab5c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800ab46:	687b      	ldr	r3, [r7, #4]
 800ab48:	685b      	ldr	r3, [r3, #4]
 800ab4a:	687a      	ldr	r2, [r7, #4]
 800ab4c:	68d2      	ldr	r2, [r2, #12]
 800ab4e:	1052      	asrs	r2, r2, #1
 800ab50:	4413      	add	r3, r2
 800ab52:	681b      	ldr	r3, [r3, #0]
 800ab54:	687a      	ldr	r2, [r7, #4]
 800ab56:	6892      	ldr	r2, [r2, #8]
 800ab58:	4413      	add	r3, r2
 800ab5a:	681b      	ldr	r3, [r3, #0]
 800ab5c:	4608      	mov	r0, r1
 800ab5e:	4798      	blx	r3
    }
 800ab60:	bf00      	nop
 800ab62:	3708      	adds	r7, #8
 800ab64:	46bd      	mov	sp, r7
 800ab66:	bd80      	pop	{r7, pc}

0800ab68 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800ab68:	b480      	push	{r7}
 800ab6a:	b083      	sub	sp, #12
 800ab6c:	af00      	add	r7, sp, #0
 800ab6e:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800ab70:	687b      	ldr	r3, [r7, #4]
 800ab72:	685b      	ldr	r3, [r3, #4]
 800ab74:	2b00      	cmp	r3, #0
 800ab76:	d010      	beq.n	800ab9a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	689b      	ldr	r3, [r3, #8]
 800ab7c:	2b00      	cmp	r3, #0
 800ab7e:	d107      	bne.n	800ab90 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800ab80:	687b      	ldr	r3, [r7, #4]
 800ab82:	68db      	ldr	r3, [r3, #12]
 800ab84:	f003 0301 	and.w	r3, r3, #1
 800ab88:	2b00      	cmp	r3, #0
 800ab8a:	d101      	bne.n	800ab90 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800ab8c:	2301      	movs	r3, #1
 800ab8e:	e000      	b.n	800ab92 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800ab90:	2300      	movs	r3, #0
 800ab92:	2b01      	cmp	r3, #1
 800ab94:	d001      	beq.n	800ab9a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800ab96:	2301      	movs	r3, #1
 800ab98:	e000      	b.n	800ab9c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800ab9a:	2300      	movs	r3, #0
    }
 800ab9c:	4618      	mov	r0, r3
 800ab9e:	370c      	adds	r7, #12
 800aba0:	46bd      	mov	sp, r7
 800aba2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aba6:	4770      	bx	lr

0800aba8 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800aba8:	b480      	push	{r7}
 800abaa:	b083      	sub	sp, #12
 800abac:	af00      	add	r7, sp, #0
 800abae:	6078      	str	r0, [r7, #4]
 800abb0:	6039      	str	r1, [r7, #0]
        : color(col)
 800abb2:	687b      	ldr	r3, [r7, #4]
 800abb4:	683a      	ldr	r2, [r7, #0]
 800abb6:	601a      	str	r2, [r3, #0]
    {
    }
 800abb8:	687b      	ldr	r3, [r7, #4]
 800abba:	4618      	mov	r0, r3
 800abbc:	370c      	adds	r7, #12
 800abbe:	46bd      	mov	sp, r7
 800abc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abc4:	4770      	bx	lr

0800abc6 <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800abc6:	b480      	push	{r7}
 800abc8:	b083      	sub	sp, #12
 800abca:	af00      	add	r7, sp, #0
 800abcc:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800abce:	687b      	ldr	r3, [r7, #4]
 800abd0:	2200      	movs	r2, #0
 800abd2:	801a      	strh	r2, [r3, #0]
 800abd4:	687b      	ldr	r3, [r7, #4]
 800abd6:	2200      	movs	r2, #0
 800abd8:	805a      	strh	r2, [r3, #2]
 800abda:	687b      	ldr	r3, [r7, #4]
 800abdc:	2200      	movs	r2, #0
 800abde:	809a      	strh	r2, [r3, #4]
 800abe0:	687b      	ldr	r3, [r7, #4]
 800abe2:	2200      	movs	r2, #0
 800abe4:	80da      	strh	r2, [r3, #6]
    {
    }
 800abe6:	687b      	ldr	r3, [r7, #4]
 800abe8:	4618      	mov	r0, r3
 800abea:	370c      	adds	r7, #12
 800abec:	46bd      	mov	sp, r7
 800abee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abf2:	4770      	bx	lr

0800abf4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800abf4:	b580      	push	{r7, lr}
 800abf6:	b082      	sub	sp, #8
 800abf8:	af00      	add	r7, sp, #0
 800abfa:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800abfc:	4a14      	ldr	r2, [pc, #80]	@ (800ac50 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800abfe:	687b      	ldr	r3, [r7, #4]
 800ac00:	601a      	str	r2, [r3, #0]
        : rect(),
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	3304      	adds	r3, #4
 800ac06:	4618      	mov	r0, r3
 800ac08:	f7ff ffdd 	bl	800abc6 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800ac0c:	687b      	ldr	r3, [r7, #4]
 800ac0e:	330c      	adds	r3, #12
 800ac10:	4618      	mov	r0, r3
 800ac12:	f7ff ffd8 	bl	800abc6 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800ac16:	687b      	ldr	r3, [r7, #4]
 800ac18:	2200      	movs	r2, #0
 800ac1a:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800ac1c:	687b      	ldr	r3, [r7, #4]
 800ac1e:	2200      	movs	r2, #0
 800ac20:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800ac22:	687b      	ldr	r3, [r7, #4]
 800ac24:	2200      	movs	r2, #0
 800ac26:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800ac28:	687b      	ldr	r3, [r7, #4]
 800ac2a:	2200      	movs	r2, #0
 800ac2c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800ac2e:	687b      	ldr	r3, [r7, #4]
 800ac30:	2200      	movs	r2, #0
 800ac32:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 800ac34:	687b      	ldr	r3, [r7, #4]
 800ac36:	2200      	movs	r2, #0
 800ac38:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	2201      	movs	r2, #1
 800ac40:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 800ac44:	687b      	ldr	r3, [r7, #4]
 800ac46:	4618      	mov	r0, r3
 800ac48:	3708      	adds	r7, #8
 800ac4a:	46bd      	mov	sp, r7
 800ac4c:	bd80      	pop	{r7, pc}
 800ac4e:	bf00      	nop
 800ac50:	08022fc4 	.word	0x08022fc4

0800ac54 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800ac54:	b480      	push	{r7}
 800ac56:	b083      	sub	sp, #12
 800ac58:	af00      	add	r7, sp, #0
 800ac5a:	6078      	str	r0, [r7, #4]
    {
 800ac5c:	4a04      	ldr	r2, [pc, #16]	@ (800ac70 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800ac5e:	687b      	ldr	r3, [r7, #4]
 800ac60:	601a      	str	r2, [r3, #0]
    }
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	4618      	mov	r0, r3
 800ac66:	370c      	adds	r7, #12
 800ac68:	46bd      	mov	sp, r7
 800ac6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac6e:	4770      	bx	lr
 800ac70:	08022fc4 	.word	0x08022fc4

0800ac74 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800ac74:	b580      	push	{r7, lr}
 800ac76:	b082      	sub	sp, #8
 800ac78:	af00      	add	r7, sp, #0
 800ac7a:	6078      	str	r0, [r7, #4]
    }
 800ac7c:	6878      	ldr	r0, [r7, #4]
 800ac7e:	f7ff ffe9 	bl	800ac54 <_ZN8touchgfx8DrawableD1Ev>
 800ac82:	2128      	movs	r1, #40	@ 0x28
 800ac84:	6878      	ldr	r0, [r7, #4]
 800ac86:	f015 ffd6 	bl	8020c36 <_ZdlPvj>
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	4618      	mov	r0, r3
 800ac8e:	3708      	adds	r7, #8
 800ac90:	46bd      	mov	sp, r7
 800ac92:	bd80      	pop	{r7, pc}

0800ac94 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800ac94:	b580      	push	{r7, lr}
 800ac96:	b082      	sub	sp, #8
 800ac98:	af00      	add	r7, sp, #0
 800ac9a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800ac9c:	687b      	ldr	r3, [r7, #4]
 800ac9e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800aca2:	2b00      	cmp	r3, #0
 800aca4:	d005      	beq.n	800acb2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800aca6:	687b      	ldr	r3, [r7, #4]
 800aca8:	681b      	ldr	r3, [r3, #0]
 800acaa:	3314      	adds	r3, #20
 800acac:	681b      	ldr	r3, [r3, #0]
 800acae:	6878      	ldr	r0, [r7, #4]
 800acb0:	4798      	blx	r3
        }
    }
 800acb2:	bf00      	nop
 800acb4:	3708      	adds	r7, #8
 800acb6:	46bd      	mov	sp, r7
 800acb8:	bd80      	pop	{r7, pc}

0800acba <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800acba:	b480      	push	{r7}
 800acbc:	b083      	sub	sp, #12
 800acbe:	af00      	add	r7, sp, #0
 800acc0:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800acc2:	2300      	movs	r3, #0
    }
 800acc4:	4618      	mov	r0, r3
 800acc6:	370c      	adds	r7, #12
 800acc8:	46bd      	mov	sp, r7
 800acca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800acce:	4770      	bx	lr

0800acd0 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800acd0:	b580      	push	{r7, lr}
 800acd2:	b084      	sub	sp, #16
 800acd4:	af00      	add	r7, sp, #0
 800acd6:	60f8      	str	r0, [r7, #12]
 800acd8:	4608      	mov	r0, r1
 800acda:	4611      	mov	r1, r2
 800acdc:	461a      	mov	r2, r3
 800acde:	4603      	mov	r3, r0
 800ace0:	817b      	strh	r3, [r7, #10]
 800ace2:	460b      	mov	r3, r1
 800ace4:	813b      	strh	r3, [r7, #8]
 800ace6:	4613      	mov	r3, r2
 800ace8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800acea:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800acee:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800acf2:	4619      	mov	r1, r3
 800acf4:	68f8      	ldr	r0, [r7, #12]
 800acf6:	f000 f82a 	bl	800ad4e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800acfa:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800acfe:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800ad02:	4619      	mov	r1, r3
 800ad04:	68f8      	ldr	r0, [r7, #12]
 800ad06:	f000 f87e 	bl	800ae06 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800ad0a:	bf00      	nop
 800ad0c:	3710      	adds	r7, #16
 800ad0e:	46bd      	mov	sp, r7
 800ad10:	bd80      	pop	{r7, pc}

0800ad12 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800ad12:	b480      	push	{r7}
 800ad14:	b083      	sub	sp, #12
 800ad16:	af00      	add	r7, sp, #0
 800ad18:	6078      	str	r0, [r7, #4]
 800ad1a:	460b      	mov	r3, r1
 800ad1c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800ad1e:	687b      	ldr	r3, [r7, #4]
 800ad20:	887a      	ldrh	r2, [r7, #2]
 800ad22:	809a      	strh	r2, [r3, #4]
    }
 800ad24:	bf00      	nop
 800ad26:	370c      	adds	r7, #12
 800ad28:	46bd      	mov	sp, r7
 800ad2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad2e:	4770      	bx	lr

0800ad30 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800ad30:	b480      	push	{r7}
 800ad32:	b083      	sub	sp, #12
 800ad34:	af00      	add	r7, sp, #0
 800ad36:	6078      	str	r0, [r7, #4]
 800ad38:	460b      	mov	r3, r1
 800ad3a:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	887a      	ldrh	r2, [r7, #2]
 800ad40:	80da      	strh	r2, [r3, #6]
    }
 800ad42:	bf00      	nop
 800ad44:	370c      	adds	r7, #12
 800ad46:	46bd      	mov	sp, r7
 800ad48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad4c:	4770      	bx	lr

0800ad4e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800ad4e:	b580      	push	{r7, lr}
 800ad50:	b082      	sub	sp, #8
 800ad52:	af00      	add	r7, sp, #0
 800ad54:	6078      	str	r0, [r7, #4]
 800ad56:	460b      	mov	r3, r1
 800ad58:	807b      	strh	r3, [r7, #2]
 800ad5a:	4613      	mov	r3, r2
 800ad5c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800ad5e:	687b      	ldr	r3, [r7, #4]
 800ad60:	681b      	ldr	r3, [r3, #0]
 800ad62:	3330      	adds	r3, #48	@ 0x30
 800ad64:	681b      	ldr	r3, [r3, #0]
 800ad66:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ad6a:	4611      	mov	r1, r2
 800ad6c:	6878      	ldr	r0, [r7, #4]
 800ad6e:	4798      	blx	r3
        setY(y);
 800ad70:	687b      	ldr	r3, [r7, #4]
 800ad72:	681b      	ldr	r3, [r3, #0]
 800ad74:	3334      	adds	r3, #52	@ 0x34
 800ad76:	681b      	ldr	r3, [r3, #0]
 800ad78:	f9b7 2000 	ldrsh.w	r2, [r7]
 800ad7c:	4611      	mov	r1, r2
 800ad7e:	6878      	ldr	r0, [r7, #4]
 800ad80:	4798      	blx	r3
    }
 800ad82:	bf00      	nop
 800ad84:	3708      	adds	r7, #8
 800ad86:	46bd      	mov	sp, r7
 800ad88:	bd80      	pop	{r7, pc}

0800ad8a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800ad8a:	b480      	push	{r7}
 800ad8c:	b083      	sub	sp, #12
 800ad8e:	af00      	add	r7, sp, #0
 800ad90:	6078      	str	r0, [r7, #4]
 800ad92:	460b      	mov	r3, r1
 800ad94:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800ad96:	687b      	ldr	r3, [r7, #4]
 800ad98:	887a      	ldrh	r2, [r7, #2]
 800ad9a:	811a      	strh	r2, [r3, #8]
    }
 800ad9c:	bf00      	nop
 800ad9e:	370c      	adds	r7, #12
 800ada0:	46bd      	mov	sp, r7
 800ada2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ada6:	4770      	bx	lr

0800ada8 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800ada8:	b480      	push	{r7}
 800adaa:	b083      	sub	sp, #12
 800adac:	af00      	add	r7, sp, #0
 800adae:	6078      	str	r0, [r7, #4]
 800adb0:	460b      	mov	r3, r1
 800adb2:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800adb4:	687b      	ldr	r3, [r7, #4]
 800adb6:	887a      	ldrh	r2, [r7, #2]
 800adb8:	815a      	strh	r2, [r3, #10]
    }
 800adba:	bf00      	nop
 800adbc:	370c      	adds	r7, #12
 800adbe:	46bd      	mov	sp, r7
 800adc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adc4:	4770      	bx	lr

0800adc6 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800adc6:	b480      	push	{r7}
 800adc8:	b083      	sub	sp, #12
 800adca:	af00      	add	r7, sp, #0
 800adcc:	6078      	str	r0, [r7, #4]
    {
    }
 800adce:	bf00      	nop
 800add0:	370c      	adds	r7, #12
 800add2:	46bd      	mov	sp, r7
 800add4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800add8:	4770      	bx	lr

0800adda <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800adda:	b480      	push	{r7}
 800addc:	b083      	sub	sp, #12
 800adde:	af00      	add	r7, sp, #0
 800ade0:	6078      	str	r0, [r7, #4]
 800ade2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ade4:	bf00      	nop
 800ade6:	370c      	adds	r7, #12
 800ade8:	46bd      	mov	sp, r7
 800adea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adee:	4770      	bx	lr

0800adf0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800adf0:	b480      	push	{r7}
 800adf2:	b083      	sub	sp, #12
 800adf4:	af00      	add	r7, sp, #0
 800adf6:	6078      	str	r0, [r7, #4]
 800adf8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800adfa:	bf00      	nop
 800adfc:	370c      	adds	r7, #12
 800adfe:	46bd      	mov	sp, r7
 800ae00:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae04:	4770      	bx	lr

0800ae06 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800ae06:	b580      	push	{r7, lr}
 800ae08:	b082      	sub	sp, #8
 800ae0a:	af00      	add	r7, sp, #0
 800ae0c:	6078      	str	r0, [r7, #4]
 800ae0e:	460b      	mov	r3, r1
 800ae10:	807b      	strh	r3, [r7, #2]
 800ae12:	4613      	mov	r3, r2
 800ae14:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800ae16:	687b      	ldr	r3, [r7, #4]
 800ae18:	681b      	ldr	r3, [r3, #0]
 800ae1a:	3338      	adds	r3, #56	@ 0x38
 800ae1c:	681b      	ldr	r3, [r3, #0]
 800ae1e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ae22:	4611      	mov	r1, r2
 800ae24:	6878      	ldr	r0, [r7, #4]
 800ae26:	4798      	blx	r3
        setHeight(height);
 800ae28:	687b      	ldr	r3, [r7, #4]
 800ae2a:	681b      	ldr	r3, [r3, #0]
 800ae2c:	333c      	adds	r3, #60	@ 0x3c
 800ae2e:	681b      	ldr	r3, [r3, #0]
 800ae30:	f9b7 2000 	ldrsh.w	r2, [r7]
 800ae34:	4611      	mov	r1, r2
 800ae36:	6878      	ldr	r0, [r7, #4]
 800ae38:	4798      	blx	r3
    }
 800ae3a:	bf00      	nop
 800ae3c:	3708      	adds	r7, #8
 800ae3e:	46bd      	mov	sp, r7
 800ae40:	bd80      	pop	{r7, pc}

0800ae42 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800ae42:	b480      	push	{r7}
 800ae44:	b083      	sub	sp, #12
 800ae46:	af00      	add	r7, sp, #0
 800ae48:	6078      	str	r0, [r7, #4]
 800ae4a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800ae4c:	bf00      	nop
 800ae4e:	370c      	adds	r7, #12
 800ae50:	46bd      	mov	sp, r7
 800ae52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae56:	4770      	bx	lr

0800ae58 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800ae58:	b480      	push	{r7}
 800ae5a:	b083      	sub	sp, #12
 800ae5c:	af00      	add	r7, sp, #0
 800ae5e:	6078      	str	r0, [r7, #4]
    {
    }
 800ae60:	bf00      	nop
 800ae62:	370c      	adds	r7, #12
 800ae64:	46bd      	mov	sp, r7
 800ae66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae6a:	4770      	bx	lr

0800ae6c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800ae6c:	b480      	push	{r7}
 800ae6e:	b083      	sub	sp, #12
 800ae70:	af00      	add	r7, sp, #0
 800ae72:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800ae74:	687b      	ldr	r3, [r7, #4]
 800ae76:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800ae7a:	4618      	mov	r0, r3
 800ae7c:	370c      	adds	r7, #12
 800ae7e:	46bd      	mov	sp, r7
 800ae80:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae84:	4770      	bx	lr

0800ae86 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800ae86:	b480      	push	{r7}
 800ae88:	b083      	sub	sp, #12
 800ae8a:	af00      	add	r7, sp, #0
 800ae8c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 800ae94:	4618      	mov	r0, r3
 800ae96:	370c      	adds	r7, #12
 800ae98:	46bd      	mov	sp, r7
 800ae9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae9e:	4770      	bx	lr

0800aea0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800aea0:	b580      	push	{r7, lr}
 800aea2:	b082      	sub	sp, #8
 800aea4:	af00      	add	r7, sp, #0
 800aea6:	6078      	str	r0, [r7, #4]
 800aea8:	460b      	mov	r3, r1
 800aeaa:	807b      	strh	r3, [r7, #2]
 800aeac:	4613      	mov	r3, r2
 800aeae:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800aeb0:	687b      	ldr	r3, [r7, #4]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	3354      	adds	r3, #84	@ 0x54
 800aeb6:	681b      	ldr	r3, [r3, #0]
 800aeb8:	8879      	ldrh	r1, [r7, #2]
 800aeba:	687a      	ldr	r2, [r7, #4]
 800aebc:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800aec0:	b292      	uxth	r2, r2
 800aec2:	1a8a      	subs	r2, r1, r2
 800aec4:	b292      	uxth	r2, r2
 800aec6:	b210      	sxth	r0, r2
 800aec8:	8839      	ldrh	r1, [r7, #0]
 800aeca:	687a      	ldr	r2, [r7, #4]
 800aecc:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800aed0:	b292      	uxth	r2, r2
 800aed2:	1a8a      	subs	r2, r1, r2
 800aed4:	b292      	uxth	r2, r2
 800aed6:	b212      	sxth	r2, r2
 800aed8:	4601      	mov	r1, r0
 800aeda:	6878      	ldr	r0, [r7, #4]
 800aedc:	4798      	blx	r3
    }
 800aede:	bf00      	nop
 800aee0:	3708      	adds	r7, #8
 800aee2:	46bd      	mov	sp, r7
 800aee4:	bd80      	pop	{r7, pc}

0800aee6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800aee6:	b480      	push	{r7}
 800aee8:	b083      	sub	sp, #12
 800aeea:	af00      	add	r7, sp, #0
 800aeec:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800aef4:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800aef6:	687b      	ldr	r3, [r7, #4]
 800aef8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800aefc:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800aefe:	687b      	ldr	r3, [r7, #4]
 800af00:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800af04:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 800af06:	bf00      	nop
 800af08:	370c      	adds	r7, #12
 800af0a:	46bd      	mov	sp, r7
 800af0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af10:	4770      	bx	lr

0800af12 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800af12:	b580      	push	{r7, lr}
 800af14:	b084      	sub	sp, #16
 800af16:	af00      	add	r7, sp, #0
 800af18:	60f8      	str	r0, [r7, #12]
 800af1a:	60b9      	str	r1, [r7, #8]
 800af1c:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800af1e:	68f8      	ldr	r0, [r7, #12]
 800af20:	f7ff ffe1 	bl	800aee6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800af24:	687b      	ldr	r3, [r7, #4]
 800af26:	681a      	ldr	r2, [r3, #0]
 800af28:	68fb      	ldr	r3, [r7, #12]
 800af2a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800af2c:	687b      	ldr	r3, [r7, #4]
 800af2e:	68fa      	ldr	r2, [r7, #12]
 800af30:	601a      	str	r2, [r3, #0]
    }
 800af32:	bf00      	nop
 800af34:	3710      	adds	r7, #16
 800af36:	46bd      	mov	sp, r7
 800af38:	bd80      	pop	{r7, pc}

0800af3a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800af3a:	b580      	push	{r7, lr}
 800af3c:	b084      	sub	sp, #16
 800af3e:	af00      	add	r7, sp, #0
 800af40:	60f8      	str	r0, [r7, #12]
 800af42:	607b      	str	r3, [r7, #4]
 800af44:	460b      	mov	r3, r1
 800af46:	817b      	strh	r3, [r7, #10]
 800af48:	4613      	mov	r3, r2
 800af4a:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800af4c:	68fb      	ldr	r3, [r7, #12]
 800af4e:	4618      	mov	r0, r3
 800af50:	f7ff ff8c 	bl	800ae6c <_ZNK8touchgfx8Drawable9isVisibleEv>
 800af54:	4603      	mov	r3, r0
 800af56:	2b00      	cmp	r3, #0
 800af58:	d008      	beq.n	800af6c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800af5a:	68fb      	ldr	r3, [r7, #12]
 800af5c:	4618      	mov	r0, r3
 800af5e:	f7ff ff92 	bl	800ae86 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800af62:	4603      	mov	r3, r0
 800af64:	2b00      	cmp	r3, #0
 800af66:	d001      	beq.n	800af6c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800af68:	2301      	movs	r3, #1
 800af6a:	e000      	b.n	800af6e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800af6c:	2300      	movs	r3, #0
 800af6e:	2b00      	cmp	r3, #0
 800af70:	d002      	beq.n	800af78 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800af72:	68fa      	ldr	r2, [r7, #12]
 800af74:	687b      	ldr	r3, [r7, #4]
 800af76:	601a      	str	r2, [r3, #0]
        }
    }
 800af78:	bf00      	nop
 800af7a:	3710      	adds	r7, #16
 800af7c:	46bd      	mov	sp, r7
 800af7e:	bd80      	pop	{r7, pc}

0800af80 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800af80:	b580      	push	{r7, lr}
 800af82:	b082      	sub	sp, #8
 800af84:	af00      	add	r7, sp, #0
 800af86:	6078      	str	r0, [r7, #4]
    {
 800af88:	4a06      	ldr	r2, [pc, #24]	@ (800afa4 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800af8a:	687b      	ldr	r3, [r7, #4]
 800af8c:	601a      	str	r2, [r3, #0]
    }
 800af8e:	687b      	ldr	r3, [r7, #4]
 800af90:	3304      	adds	r3, #4
 800af92:	4618      	mov	r0, r3
 800af94:	f000 f974 	bl	800b280 <_ZN8touchgfx9ContainerD1Ev>
 800af98:	687b      	ldr	r3, [r7, #4]
 800af9a:	4618      	mov	r0, r3
 800af9c:	3708      	adds	r7, #8
 800af9e:	46bd      	mov	sp, r7
 800afa0:	bd80      	pop	{r7, pc}
 800afa2:	bf00      	nop
 800afa4:	080230d0 	.word	0x080230d0

0800afa8 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800afa8:	b580      	push	{r7, lr}
 800afaa:	b082      	sub	sp, #8
 800afac:	af00      	add	r7, sp, #0
 800afae:	6078      	str	r0, [r7, #4]
    }
 800afb0:	6878      	ldr	r0, [r7, #4]
 800afb2:	f7ff ffe5 	bl	800af80 <_ZN8touchgfx6ScreenD1Ev>
 800afb6:	213c      	movs	r1, #60	@ 0x3c
 800afb8:	6878      	ldr	r0, [r7, #4]
 800afba:	f015 fe3c 	bl	8020c36 <_ZdlPvj>
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	4618      	mov	r0, r3
 800afc2:	3708      	adds	r7, #8
 800afc4:	46bd      	mov	sp, r7
 800afc6:	bd80      	pop	{r7, pc}

0800afc8 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800afc8:	b480      	push	{r7}
 800afca:	b083      	sub	sp, #12
 800afcc:	af00      	add	r7, sp, #0
 800afce:	6078      	str	r0, [r7, #4]
    {
    }
 800afd0:	bf00      	nop
 800afd2:	370c      	adds	r7, #12
 800afd4:	46bd      	mov	sp, r7
 800afd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afda:	4770      	bx	lr

0800afdc <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800afdc:	b480      	push	{r7}
 800afde:	b083      	sub	sp, #12
 800afe0:	af00      	add	r7, sp, #0
 800afe2:	6078      	str	r0, [r7, #4]
    {
    }
 800afe4:	bf00      	nop
 800afe6:	370c      	adds	r7, #12
 800afe8:	46bd      	mov	sp, r7
 800afea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afee:	4770      	bx	lr

0800aff0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800aff0:	b480      	push	{r7}
 800aff2:	b083      	sub	sp, #12
 800aff4:	af00      	add	r7, sp, #0
 800aff6:	6078      	str	r0, [r7, #4]
    {
    }
 800aff8:	bf00      	nop
 800affa:	370c      	adds	r7, #12
 800affc:	46bd      	mov	sp, r7
 800affe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b002:	4770      	bx	lr

0800b004 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800b004:	b480      	push	{r7}
 800b006:	b083      	sub	sp, #12
 800b008:	af00      	add	r7, sp, #0
 800b00a:	6078      	str	r0, [r7, #4]
    {
    }
 800b00c:	bf00      	nop
 800b00e:	370c      	adds	r7, #12
 800b010:	46bd      	mov	sp, r7
 800b012:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b016:	4770      	bx	lr

0800b018 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800b018:	b480      	push	{r7}
 800b01a:	b083      	sub	sp, #12
 800b01c:	af00      	add	r7, sp, #0
 800b01e:	6078      	str	r0, [r7, #4]
 800b020:	460b      	mov	r3, r1
 800b022:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800b024:	bf00      	nop
 800b026:	370c      	adds	r7, #12
 800b028:	46bd      	mov	sp, r7
 800b02a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b02e:	4770      	bx	lr

0800b030 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800b030:	b580      	push	{r7, lr}
 800b032:	b082      	sub	sp, #8
 800b034:	af00      	add	r7, sp, #0
 800b036:	6078      	str	r0, [r7, #4]
 800b038:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800b03a:	687b      	ldr	r3, [r7, #4]
 800b03c:	3304      	adds	r3, #4
 800b03e:	6839      	ldr	r1, [r7, #0]
 800b040:	4618      	mov	r0, r3
 800b042:	f002 fc8b 	bl	800d95c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800b046:	bf00      	nop
 800b048:	3708      	adds	r7, #8
 800b04a:	46bd      	mov	sp, r7
 800b04c:	bd80      	pop	{r7, pc}
	...

0800b050 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800b050:	b580      	push	{r7, lr}
 800b052:	b082      	sub	sp, #8
 800b054:	af00      	add	r7, sp, #0
 800b056:	6078      	str	r0, [r7, #4]
 800b058:	687b      	ldr	r3, [r7, #4]
 800b05a:	4618      	mov	r0, r3
 800b05c:	f7ff fdca 	bl	800abf4 <_ZN8touchgfx8DrawableC1Ev>
 800b060:	4a03      	ldr	r2, [pc, #12]	@ (800b070 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800b062:	687b      	ldr	r3, [r7, #4]
 800b064:	601a      	str	r2, [r3, #0]
 800b066:	687b      	ldr	r3, [r7, #4]
 800b068:	4618      	mov	r0, r3
 800b06a:	3708      	adds	r7, #8
 800b06c:	46bd      	mov	sp, r7
 800b06e:	bd80      	pop	{r7, pc}
 800b070:	080227b4 	.word	0x080227b4

0800b074 <_ZN8touchgfx6WidgetD1Ev>:
 800b074:	b580      	push	{r7, lr}
 800b076:	b082      	sub	sp, #8
 800b078:	af00      	add	r7, sp, #0
 800b07a:	6078      	str	r0, [r7, #4]
 800b07c:	4a05      	ldr	r2, [pc, #20]	@ (800b094 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800b07e:	687b      	ldr	r3, [r7, #4]
 800b080:	601a      	str	r2, [r3, #0]
 800b082:	687b      	ldr	r3, [r7, #4]
 800b084:	4618      	mov	r0, r3
 800b086:	f7ff fde5 	bl	800ac54 <_ZN8touchgfx8DrawableD1Ev>
 800b08a:	687b      	ldr	r3, [r7, #4]
 800b08c:	4618      	mov	r0, r3
 800b08e:	3708      	adds	r7, #8
 800b090:	46bd      	mov	sp, r7
 800b092:	bd80      	pop	{r7, pc}
 800b094:	080227b4 	.word	0x080227b4

0800b098 <_ZN8touchgfx6WidgetD0Ev>:
 800b098:	b580      	push	{r7, lr}
 800b09a:	b082      	sub	sp, #8
 800b09c:	af00      	add	r7, sp, #0
 800b09e:	6078      	str	r0, [r7, #4]
 800b0a0:	6878      	ldr	r0, [r7, #4]
 800b0a2:	f7ff ffe7 	bl	800b074 <_ZN8touchgfx6WidgetD1Ev>
 800b0a6:	2128      	movs	r1, #40	@ 0x28
 800b0a8:	6878      	ldr	r0, [r7, #4]
 800b0aa:	f015 fdc4 	bl	8020c36 <_ZdlPvj>
 800b0ae:	687b      	ldr	r3, [r7, #4]
 800b0b0:	4618      	mov	r0, r3
 800b0b2:	3708      	adds	r7, #8
 800b0b4:	46bd      	mov	sp, r7
 800b0b6:	bd80      	pop	{r7, pc}

0800b0b8 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800b0b8:	b580      	push	{r7, lr}
 800b0ba:	b082      	sub	sp, #8
 800b0bc:	af00      	add	r7, sp, #0
 800b0be:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800b0c0:	687b      	ldr	r3, [r7, #4]
 800b0c2:	4618      	mov	r0, r3
 800b0c4:	2326      	movs	r3, #38	@ 0x26
 800b0c6:	461a      	mov	r2, r3
 800b0c8:	2100      	movs	r1, #0
 800b0ca:	f015 ffea 	bl	80210a2 <memset>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	4618      	mov	r0, r3
 800b0d2:	f7ff ffbd 	bl	800b050 <_ZN8touchgfx6WidgetC1Ev>
 800b0d6:	4a09      	ldr	r2, [pc, #36]	@ (800b0fc <_ZN8touchgfx3BoxC1Ev+0x44>)
 800b0d8:	687b      	ldr	r3, [r7, #4]
 800b0da:	601a      	str	r2, [r3, #0]
 800b0dc:	687b      	ldr	r3, [r7, #4]
 800b0de:	22ff      	movs	r2, #255	@ 0xff
 800b0e0:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800b0e4:	687b      	ldr	r3, [r7, #4]
 800b0e6:	3328      	adds	r3, #40	@ 0x28
 800b0e8:	2100      	movs	r1, #0
 800b0ea:	4618      	mov	r0, r3
 800b0ec:	f7ff fd5c 	bl	800aba8 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800b0f0:	687b      	ldr	r3, [r7, #4]
 800b0f2:	4618      	mov	r0, r3
 800b0f4:	3708      	adds	r7, #8
 800b0f6:	46bd      	mov	sp, r7
 800b0f8:	bd80      	pop	{r7, pc}
 800b0fa:	bf00      	nop
 800b0fc:	08022eb0 	.word	0x08022eb0

0800b100 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800b100:	b480      	push	{r7}
 800b102:	b083      	sub	sp, #12
 800b104:	af00      	add	r7, sp, #0
 800b106:	6078      	str	r0, [r7, #4]
 800b108:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	683a      	ldr	r2, [r7, #0]
 800b10e:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800b110:	bf00      	nop
 800b112:	370c      	adds	r7, #12
 800b114:	46bd      	mov	sp, r7
 800b116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b11a:	4770      	bx	lr

0800b11c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800b11c:	b580      	push	{r7, lr}
 800b11e:	b082      	sub	sp, #8
 800b120:	af00      	add	r7, sp, #0
 800b122:	6078      	str	r0, [r7, #4]
 800b124:	4a05      	ldr	r2, [pc, #20]	@ (800b13c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800b126:	687b      	ldr	r3, [r7, #4]
 800b128:	601a      	str	r2, [r3, #0]
 800b12a:	687b      	ldr	r3, [r7, #4]
 800b12c:	4618      	mov	r0, r3
 800b12e:	f7ff ff27 	bl	800af80 <_ZN8touchgfx6ScreenD1Ev>
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	4618      	mov	r0, r3
 800b136:	3708      	adds	r7, #8
 800b138:	46bd      	mov	sp, r7
 800b13a:	bd80      	pop	{r7, pc}
 800b13c:	08022780 	.word	0x08022780

0800b140 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800b140:	b580      	push	{r7, lr}
 800b142:	b082      	sub	sp, #8
 800b144:	af00      	add	r7, sp, #0
 800b146:	6078      	str	r0, [r7, #4]
 800b148:	6878      	ldr	r0, [r7, #4]
 800b14a:	f7ff ffe7 	bl	800b11c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800b14e:	2140      	movs	r1, #64	@ 0x40
 800b150:	6878      	ldr	r0, [r7, #4]
 800b152:	f015 fd70 	bl	8020c36 <_ZdlPvj>
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	4618      	mov	r0, r3
 800b15a:	3708      	adds	r7, #8
 800b15c:	46bd      	mov	sp, r7
 800b15e:	bd80      	pop	{r7, pc}

0800b160 <_ZN15Screen1ViewBaseC1Ev>:
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>

Screen1ViewBase::Screen1ViewBase()
 800b160:	b590      	push	{r4, r7, lr}
 800b162:	b087      	sub	sp, #28
 800b164:	af02      	add	r7, sp, #8
 800b166:	6078      	str	r0, [r7, #4]
 800b168:	687b      	ldr	r3, [r7, #4]
 800b16a:	4618      	mov	r0, r3
 800b16c:	f000 f872 	bl	800b254 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800b170:	4a1e      	ldr	r2, [pc, #120]	@ (800b1ec <_ZN15Screen1ViewBaseC1Ev+0x8c>)
 800b172:	687b      	ldr	r3, [r7, #4]
 800b174:	601a      	str	r2, [r3, #0]
 800b176:	687b      	ldr	r3, [r7, #4]
 800b178:	3340      	adds	r3, #64	@ 0x40
 800b17a:	4618      	mov	r0, r3
 800b17c:	f7ff ff9c 	bl	800b0b8 <_ZN8touchgfx3BoxC1Ev>
{
    __background.setPosition(0, 0, 480, 272);
 800b180:	687b      	ldr	r3, [r7, #4]
 800b182:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800b186:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800b18a:	9300      	str	r3, [sp, #0]
 800b18c:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800b190:	2200      	movs	r2, #0
 800b192:	2100      	movs	r1, #0
 800b194:	f7ff fd9c 	bl	800acd0 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800b198:	687b      	ldr	r3, [r7, #4]
 800b19a:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800b19e:	2300      	movs	r3, #0
 800b1a0:	73fb      	strb	r3, [r7, #15]
 800b1a2:	2300      	movs	r3, #0
 800b1a4:	73bb      	strb	r3, [r7, #14]
 800b1a6:	2300      	movs	r3, #0
 800b1a8:	737b      	strb	r3, [r7, #13]
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800b1aa:	7bfb      	ldrb	r3, [r7, #15]
 800b1ac:	041a      	lsls	r2, r3, #16
 800b1ae:	7bbb      	ldrb	r3, [r7, #14]
 800b1b0:	021b      	lsls	r3, r3, #8
 800b1b2:	431a      	orrs	r2, r3
 800b1b4:	7b7b      	ldrb	r3, [r7, #13]
 800b1b6:	4313      	orrs	r3, r2
 800b1b8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b1bc:	f107 0308 	add.w	r3, r7, #8
 800b1c0:	4611      	mov	r1, r2
 800b1c2:	4618      	mov	r0, r3
 800b1c4:	f7ff fcf0 	bl	800aba8 <_ZN8touchgfx9colortypeC1Em>
 800b1c8:	68bb      	ldr	r3, [r7, #8]
 800b1ca:	4619      	mov	r1, r3
 800b1cc:	4620      	mov	r0, r4
 800b1ce:	f7ff ff97 	bl	800b100 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800b1d2:	687a      	ldr	r2, [r7, #4]
 800b1d4:	687b      	ldr	r3, [r7, #4]
 800b1d6:	3340      	adds	r3, #64	@ 0x40
 800b1d8:	4619      	mov	r1, r3
 800b1da:	4610      	mov	r0, r2
 800b1dc:	f7ff ff28 	bl	800b030 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	4618      	mov	r0, r3
 800b1e4:	3714      	adds	r7, #20
 800b1e6:	46bd      	mov	sp, r7
 800b1e8:	bd90      	pop	{r4, r7, pc}
 800b1ea:	bf00      	nop
 800b1ec:	0802274c 	.word	0x0802274c

0800b1f0 <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 800b1f0:	b580      	push	{r7, lr}
 800b1f2:	b082      	sub	sp, #8
 800b1f4:	af00      	add	r7, sp, #0
 800b1f6:	6078      	str	r0, [r7, #4]
 800b1f8:	4a08      	ldr	r2, [pc, #32]	@ (800b21c <_ZN15Screen1ViewBaseD1Ev+0x2c>)
 800b1fa:	687b      	ldr	r3, [r7, #4]
 800b1fc:	601a      	str	r2, [r3, #0]
{

}
 800b1fe:	687b      	ldr	r3, [r7, #4]
 800b200:	3340      	adds	r3, #64	@ 0x40
 800b202:	4618      	mov	r0, r3
 800b204:	f000 f85e 	bl	800b2c4 <_ZN8touchgfx3BoxD1Ev>
 800b208:	687b      	ldr	r3, [r7, #4]
 800b20a:	4618      	mov	r0, r3
 800b20c:	f7ff ff86 	bl	800b11c <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800b210:	687b      	ldr	r3, [r7, #4]
 800b212:	4618      	mov	r0, r3
 800b214:	3708      	adds	r7, #8
 800b216:	46bd      	mov	sp, r7
 800b218:	bd80      	pop	{r7, pc}
 800b21a:	bf00      	nop
 800b21c:	0802274c 	.word	0x0802274c

0800b220 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800b220:	b580      	push	{r7, lr}
 800b222:	b082      	sub	sp, #8
 800b224:	af00      	add	r7, sp, #0
 800b226:	6078      	str	r0, [r7, #4]
}
 800b228:	6878      	ldr	r0, [r7, #4]
 800b22a:	f7ff ffe1 	bl	800b1f0 <_ZN15Screen1ViewBaseD1Ev>
 800b22e:	216c      	movs	r1, #108	@ 0x6c
 800b230:	6878      	ldr	r0, [r7, #4]
 800b232:	f015 fd00 	bl	8020c36 <_ZdlPvj>
 800b236:	687b      	ldr	r3, [r7, #4]
 800b238:	4618      	mov	r0, r3
 800b23a:	3708      	adds	r7, #8
 800b23c:	46bd      	mov	sp, r7
 800b23e:	bd80      	pop	{r7, pc}

0800b240 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800b240:	b480      	push	{r7}
 800b242:	b083      	sub	sp, #12
 800b244:	af00      	add	r7, sp, #0
 800b246:	6078      	str	r0, [r7, #4]

}
 800b248:	bf00      	nop
 800b24a:	370c      	adds	r7, #12
 800b24c:	46bd      	mov	sp, r7
 800b24e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b252:	4770      	bx	lr

0800b254 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 800b254:	b580      	push	{r7, lr}
 800b256:	b082      	sub	sp, #8
 800b258:	af00      	add	r7, sp, #0
 800b25a:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800b25c:	687b      	ldr	r3, [r7, #4]
 800b25e:	4618      	mov	r0, r3
 800b260:	f006 f874 	bl	801134c <_ZN8touchgfx6ScreenC1Ev>
 800b264:	4a05      	ldr	r2, [pc, #20]	@ (800b27c <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800b266:	687b      	ldr	r3, [r7, #4]
 800b268:	601a      	str	r2, [r3, #0]
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	2200      	movs	r2, #0
 800b26e:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	4618      	mov	r0, r3
 800b274:	3708      	adds	r7, #8
 800b276:	46bd      	mov	sp, r7
 800b278:	bd80      	pop	{r7, pc}
 800b27a:	bf00      	nop
 800b27c:	08022780 	.word	0x08022780

0800b280 <_ZN8touchgfx9ContainerD1Ev>:
 * intersect with the geometry of the container will be visible (e.g. setting a
 * container's width to 0 will render all children invisible).
 *
 * @see Drawable
 */
class Container : public Drawable
 800b280:	b580      	push	{r7, lr}
 800b282:	b082      	sub	sp, #8
 800b284:	af00      	add	r7, sp, #0
 800b286:	6078      	str	r0, [r7, #4]
 800b288:	4a05      	ldr	r2, [pc, #20]	@ (800b2a0 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800b28a:	687b      	ldr	r3, [r7, #4]
 800b28c:	601a      	str	r2, [r3, #0]
 800b28e:	687b      	ldr	r3, [r7, #4]
 800b290:	4618      	mov	r0, r3
 800b292:	f7ff fcdf 	bl	800ac54 <_ZN8touchgfx8DrawableD1Ev>
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	4618      	mov	r0, r3
 800b29a:	3708      	adds	r7, #8
 800b29c:	46bd      	mov	sp, r7
 800b29e:	bd80      	pop	{r7, pc}
 800b2a0:	08022cc8 	.word	0x08022cc8

0800b2a4 <_ZN8touchgfx9ContainerD0Ev>:
 800b2a4:	b580      	push	{r7, lr}
 800b2a6:	b082      	sub	sp, #8
 800b2a8:	af00      	add	r7, sp, #0
 800b2aa:	6078      	str	r0, [r7, #4]
 800b2ac:	6878      	ldr	r0, [r7, #4]
 800b2ae:	f7ff ffe7 	bl	800b280 <_ZN8touchgfx9ContainerD1Ev>
 800b2b2:	212c      	movs	r1, #44	@ 0x2c
 800b2b4:	6878      	ldr	r0, [r7, #4]
 800b2b6:	f015 fcbe 	bl	8020c36 <_ZdlPvj>
 800b2ba:	687b      	ldr	r3, [r7, #4]
 800b2bc:	4618      	mov	r0, r3
 800b2be:	3708      	adds	r7, #8
 800b2c0:	46bd      	mov	sp, r7
 800b2c2:	bd80      	pop	{r7, pc}

0800b2c4 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800b2c4:	b580      	push	{r7, lr}
 800b2c6:	b082      	sub	sp, #8
 800b2c8:	af00      	add	r7, sp, #0
 800b2ca:	6078      	str	r0, [r7, #4]
 800b2cc:	4a05      	ldr	r2, [pc, #20]	@ (800b2e4 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800b2ce:	687b      	ldr	r3, [r7, #4]
 800b2d0:	601a      	str	r2, [r3, #0]
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	4618      	mov	r0, r3
 800b2d6:	f7ff fecd 	bl	800b074 <_ZN8touchgfx6WidgetD1Ev>
 800b2da:	687b      	ldr	r3, [r7, #4]
 800b2dc:	4618      	mov	r0, r3
 800b2de:	3708      	adds	r7, #8
 800b2e0:	46bd      	mov	sp, r7
 800b2e2:	bd80      	pop	{r7, pc}
 800b2e4:	08022eb0 	.word	0x08022eb0

0800b2e8 <_ZN8touchgfx3BoxD0Ev>:
 800b2e8:	b580      	push	{r7, lr}
 800b2ea:	b082      	sub	sp, #8
 800b2ec:	af00      	add	r7, sp, #0
 800b2ee:	6078      	str	r0, [r7, #4]
 800b2f0:	6878      	ldr	r0, [r7, #4]
 800b2f2:	f7ff ffe7 	bl	800b2c4 <_ZN8touchgfx3BoxD1Ev>
 800b2f6:	212c      	movs	r1, #44	@ 0x2c
 800b2f8:	6878      	ldr	r0, [r7, #4]
 800b2fa:	f015 fc9c 	bl	8020c36 <_ZdlPvj>
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	4618      	mov	r0, r3
 800b302:	3708      	adds	r7, #8
 800b304:	46bd      	mov	sp, r7
 800b306:	bd80      	pop	{r7, pc}

0800b308 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800b308:	b480      	push	{r7}
 800b30a:	af00      	add	r7, sp, #0
    return bitmap_database;
 800b30c:	4b02      	ldr	r3, [pc, #8]	@ (800b318 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800b30e:	4618      	mov	r0, r3
 800b310:	46bd      	mov	sp, r7
 800b312:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b316:	4770      	bx	lr
 800b318:	08022814 	.word	0x08022814

0800b31c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800b31c:	b480      	push	{r7}
 800b31e:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800b320:	2301      	movs	r3, #1
}
 800b322:	4618      	mov	r0, r3
 800b324:	46bd      	mov	sp, r7
 800b326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b32a:	4770      	bx	lr

0800b32c <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800b32c:	b480      	push	{r7}
 800b32e:	b085      	sub	sp, #20
 800b330:	af00      	add	r7, sp, #0
 800b332:	60f8      	str	r0, [r7, #12]
 800b334:	460b      	mov	r3, r1
 800b336:	607a      	str	r2, [r7, #4]
 800b338:	817b      	strh	r3, [r7, #10]
        return 0;
 800b33a:	2300      	movs	r3, #0
    }
 800b33c:	4618      	mov	r0, r3
 800b33e:	3714      	adds	r7, #20
 800b340:	46bd      	mov	sp, r7
 800b342:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b346:	4770      	bx	lr

0800b348 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800b348:	b480      	push	{r7}
 800b34a:	b083      	sub	sp, #12
 800b34c:	af00      	add	r7, sp, #0
 800b34e:	6078      	str	r0, [r7, #4]
        return 0;
 800b350:	2300      	movs	r3, #0
    }
 800b352:	4618      	mov	r0, r3
 800b354:	370c      	adds	r7, #12
 800b356:	46bd      	mov	sp, r7
 800b358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b35c:	4770      	bx	lr

0800b35e <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800b35e:	b480      	push	{r7}
 800b360:	b083      	sub	sp, #12
 800b362:	af00      	add	r7, sp, #0
 800b364:	6078      	str	r0, [r7, #4]
        return 0;
 800b366:	2300      	movs	r3, #0
    }
 800b368:	4618      	mov	r0, r3
 800b36a:	370c      	adds	r7, #12
 800b36c:	46bd      	mov	sp, r7
 800b36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b372:	4770      	bx	lr

0800b374 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800b374:	b480      	push	{r7}
 800b376:	b085      	sub	sp, #20
 800b378:	af00      	add	r7, sp, #0
 800b37a:	60f8      	str	r0, [r7, #12]
 800b37c:	60b9      	str	r1, [r7, #8]
 800b37e:	4613      	mov	r3, r2
 800b380:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800b382:	4a07      	ldr	r2, [pc, #28]	@ (800b3a0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800b384:	68fb      	ldr	r3, [r7, #12]
 800b386:	6013      	str	r3, [r2, #0]
        fonts = f;
 800b388:	4a06      	ldr	r2, [pc, #24]	@ (800b3a4 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800b38a:	68bb      	ldr	r3, [r7, #8]
 800b38c:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800b38e:	4a06      	ldr	r2, [pc, #24]	@ (800b3a8 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800b390:	88fb      	ldrh	r3, [r7, #6]
 800b392:	8013      	strh	r3, [r2, #0]
    }
 800b394:	bf00      	nop
 800b396:	3714      	adds	r7, #20
 800b398:	46bd      	mov	sp, r7
 800b39a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b39e:	4770      	bx	lr
 800b3a0:	20001bbc 	.word	0x20001bbc
 800b3a4:	20001bc4 	.word	0x20001bc4
 800b3a8:	20001bc0 	.word	0x20001bc0

0800b3ac <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800b3ac:	b40e      	push	{r1, r2, r3}
 800b3ae:	b580      	push	{r7, lr}
 800b3b0:	b085      	sub	sp, #20
 800b3b2:	af00      	add	r7, sp, #0
 800b3b4:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800b3b6:	f107 0320 	add.w	r3, r7, #32
 800b3ba:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800b3bc:	68bb      	ldr	r3, [r7, #8]
 800b3be:	69fa      	ldr	r2, [r7, #28]
 800b3c0:	2100      	movs	r1, #0
 800b3c2:	6878      	ldr	r0, [r7, #4]
 800b3c4:	f005 fbf8 	bl	8010bb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800b3c8:	4603      	mov	r3, r0
 800b3ca:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800b3cc:	89fb      	ldrh	r3, [r7, #14]
}
 800b3ce:	4618      	mov	r0, r3
 800b3d0:	3714      	adds	r7, #20
 800b3d2:	46bd      	mov	sp, r7
 800b3d4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b3d8:	b003      	add	sp, #12
 800b3da:	4770      	bx	lr

0800b3dc <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800b3dc:	b40c      	push	{r2, r3}
 800b3de:	b580      	push	{r7, lr}
 800b3e0:	b084      	sub	sp, #16
 800b3e2:	af00      	add	r7, sp, #0
 800b3e4:	6078      	str	r0, [r7, #4]
 800b3e6:	460b      	mov	r3, r1
 800b3e8:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800b3ea:	f107 031c 	add.w	r3, r7, #28
 800b3ee:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800b3f0:	78f9      	ldrb	r1, [r7, #3]
 800b3f2:	68bb      	ldr	r3, [r7, #8]
 800b3f4:	69ba      	ldr	r2, [r7, #24]
 800b3f6:	6878      	ldr	r0, [r7, #4]
 800b3f8:	f005 fbde 	bl	8010bb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800b3fc:	4603      	mov	r3, r0
 800b3fe:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800b400:	89fb      	ldrh	r3, [r7, #14]
}
 800b402:	4618      	mov	r0, r3
 800b404:	3710      	adds	r7, #16
 800b406:	46bd      	mov	sp, r7
 800b408:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800b40c:	b002      	add	sp, #8
 800b40e:	4770      	bx	lr

0800b410 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800b410:	b580      	push	{r7, lr}
 800b412:	b08a      	sub	sp, #40	@ 0x28
 800b414:	af00      	add	r7, sp, #0
 800b416:	6078      	str	r0, [r7, #4]
 800b418:	460b      	mov	r3, r1
 800b41a:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800b41c:	687b      	ldr	r3, [r7, #4]
 800b41e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800b420:	2b00      	cmp	r3, #0
 800b422:	d016      	beq.n	800b452 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800b424:	687b      	ldr	r3, [r7, #4]
 800b426:	3322      	adds	r3, #34	@ 0x22
 800b428:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800b42a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b42c:	8adb      	ldrh	r3, [r3, #22]
 800b42e:	2b00      	cmp	r3, #0
 800b430:	d105      	bne.n	800b43e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800b432:	4b43      	ldr	r3, [pc, #268]	@ (800b540 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800b434:	4a43      	ldr	r2, [pc, #268]	@ (800b544 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800b436:	21c5      	movs	r1, #197	@ 0xc5
 800b438:	4843      	ldr	r0, [pc, #268]	@ (800b548 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800b43a:	f015 fc2b 	bl	8020c94 <__assert_func>
            return buffer[pos];
 800b43e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b440:	8a9b      	ldrh	r3, [r3, #20]
 800b442:	461a      	mov	r2, r3
 800b444:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800b446:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800b44a:	2b00      	cmp	r3, #0
 800b44c:	d001      	beq.n	800b452 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800b44e:	2301      	movs	r3, #1
 800b450:	e000      	b.n	800b454 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800b452:	2300      	movs	r3, #0
 800b454:	2b00      	cmp	r3, #0
 800b456:	d06a      	beq.n	800b52e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800b458:	6878      	ldr	r0, [r7, #4]
 800b45a:	f006 fe1d 	bl	8012098 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800b45e:	687b      	ldr	r3, [r7, #4]
 800b460:	3322      	adds	r3, #34	@ 0x22
 800b462:	623b      	str	r3, [r7, #32]
 800b464:	2301      	movs	r3, #1
 800b466:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800b468:	6a3b      	ldr	r3, [r7, #32]
 800b46a:	8adb      	ldrh	r3, [r3, #22]
 800b46c:	8bfa      	ldrh	r2, [r7, #30]
 800b46e:	429a      	cmp	r2, r3
 800b470:	d305      	bcc.n	800b47e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800b472:	4b36      	ldr	r3, [pc, #216]	@ (800b54c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800b474:	4a36      	ldr	r2, [pc, #216]	@ (800b550 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800b476:	21cb      	movs	r1, #203	@ 0xcb
 800b478:	4833      	ldr	r0, [pc, #204]	@ (800b548 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800b47a:	f015 fc0b 	bl	8020c94 <__assert_func>
            const uint16_t index = pos + offset;
 800b47e:	6a3b      	ldr	r3, [r7, #32]
 800b480:	8a9a      	ldrh	r2, [r3, #20]
 800b482:	8bfb      	ldrh	r3, [r7, #30]
 800b484:	4413      	add	r3, r2
 800b486:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800b488:	8bbb      	ldrh	r3, [r7, #28]
 800b48a:	2b09      	cmp	r3, #9
 800b48c:	d801      	bhi.n	800b492 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800b48e:	8bbb      	ldrh	r3, [r7, #28]
 800b490:	e001      	b.n	800b496 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800b492:	8bbb      	ldrh	r3, [r7, #28]
 800b494:	3b0a      	subs	r3, #10
 800b496:	6a3a      	ldr	r2, [r7, #32]
 800b498:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800b49c:	f640 123f 	movw	r2, #2367	@ 0x93f
 800b4a0:	4293      	cmp	r3, r2
 800b4a2:	bf0c      	ite	eq
 800b4a4:	2301      	moveq	r3, #1
 800b4a6:	2300      	movne	r3, #0
 800b4a8:	b2db      	uxtb	r3, r3
 800b4aa:	2b00      	cmp	r3, #0
 800b4ac:	d03f      	beq.n	800b52e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	3322      	adds	r3, #34	@ 0x22
 800b4b2:	687a      	ldr	r2, [r7, #4]
 800b4b4:	3222      	adds	r2, #34	@ 0x22
 800b4b6:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800b4b8:	68ba      	ldr	r2, [r7, #8]
 800b4ba:	8ad2      	ldrh	r2, [r2, #22]
 800b4bc:	2a00      	cmp	r2, #0
 800b4be:	d105      	bne.n	800b4cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800b4c0:	4b1f      	ldr	r3, [pc, #124]	@ (800b540 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800b4c2:	4a20      	ldr	r2, [pc, #128]	@ (800b544 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800b4c4:	21c5      	movs	r1, #197	@ 0xc5
 800b4c6:	4820      	ldr	r0, [pc, #128]	@ (800b548 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800b4c8:	f015 fbe4 	bl	8020c94 <__assert_func>
            return buffer[pos];
 800b4cc:	68ba      	ldr	r2, [r7, #8]
 800b4ce:	8a92      	ldrh	r2, [r2, #20]
 800b4d0:	4611      	mov	r1, r2
 800b4d2:	68ba      	ldr	r2, [r7, #8]
 800b4d4:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800b4d8:	613b      	str	r3, [r7, #16]
 800b4da:	4613      	mov	r3, r2
 800b4dc:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800b4de:	693b      	ldr	r3, [r7, #16]
 800b4e0:	8adb      	ldrh	r3, [r3, #22]
 800b4e2:	2b01      	cmp	r3, #1
 800b4e4:	d806      	bhi.n	800b4f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800b4e6:	4b1b      	ldr	r3, [pc, #108]	@ (800b554 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800b4e8:	4a1b      	ldr	r2, [pc, #108]	@ (800b558 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800b4ea:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800b4ee:	4816      	ldr	r0, [pc, #88]	@ (800b548 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800b4f0:	f015 fbd0 	bl	8020c94 <__assert_func>
            const uint16_t index = pos + 1;
 800b4f4:	693b      	ldr	r3, [r7, #16]
 800b4f6:	8a9b      	ldrh	r3, [r3, #20]
 800b4f8:	3301      	adds	r3, #1
 800b4fa:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800b4fc:	89bb      	ldrh	r3, [r7, #12]
 800b4fe:	2b09      	cmp	r3, #9
 800b500:	d801      	bhi.n	800b506 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800b502:	89bb      	ldrh	r3, [r7, #12]
 800b504:	e000      	b.n	800b508 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800b506:	2300      	movs	r3, #0
 800b508:	693a      	ldr	r2, [r7, #16]
 800b50a:	89f9      	ldrh	r1, [r7, #14]
 800b50c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800b510:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800b512:	687b      	ldr	r3, [r7, #4]
 800b514:	3322      	adds	r3, #34	@ 0x22
 800b516:	61bb      	str	r3, [r7, #24]
 800b518:	f640 133f 	movw	r3, #2367	@ 0x93f
 800b51c:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800b51e:	69bb      	ldr	r3, [r7, #24]
 800b520:	8a9b      	ldrh	r3, [r3, #20]
 800b522:	4619      	mov	r1, r3
 800b524:	69bb      	ldr	r3, [r7, #24]
 800b526:	8afa      	ldrh	r2, [r7, #22]
 800b528:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800b52c:	bf00      	nop
        }
    }
    return getNextChar();
 800b52e:	6878      	ldr	r0, [r7, #4]
 800b530:	f006 fcb4 	bl	8011e9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800b534:	4603      	mov	r3, r0
}
 800b536:	4618      	mov	r0, r3
 800b538:	3728      	adds	r7, #40	@ 0x28
 800b53a:	46bd      	mov	sp, r7
 800b53c:	bd80      	pop	{r7, pc}
 800b53e:	bf00      	nop
 800b540:	08021fc0 	.word	0x08021fc0
 800b544:	08021fcc 	.word	0x08021fcc
 800b548:	08022078 	.word	0x08022078
 800b54c:	080220c0 	.word	0x080220c0
 800b550:	080220d0 	.word	0x080220d0
 800b554:	080221a4 	.word	0x080221a4
 800b558:	080221b0 	.word	0x080221b0

0800b55c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800b55c:	b580      	push	{r7, lr}
 800b55e:	b082      	sub	sp, #8
 800b560:	af00      	add	r7, sp, #0
 800b562:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800b564:	6878      	ldr	r0, [r7, #4]
 800b566:	f006 fc62 	bl	8011e2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800b56a:	bf00      	nop
 800b56c:	3708      	adds	r7, #8
 800b56e:	46bd      	mov	sp, r7
 800b570:	bd80      	pop	{r7, pc}
	...

0800b574 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800b574:	b590      	push	{r4, r7, lr}
 800b576:	b085      	sub	sp, #20
 800b578:	af00      	add	r7, sp, #0
 800b57a:	4603      	mov	r3, r0
 800b57c:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800b57e:	2300      	movs	r3, #0
 800b580:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800b582:	88fb      	ldrh	r3, [r7, #6]
 800b584:	2b00      	cmp	r3, #0
 800b586:	d127      	bne.n	800b5d8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800b588:	88fb      	ldrh	r3, [r7, #6]
 800b58a:	4a1e      	ldr	r2, [pc, #120]	@ (800b604 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800b58c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b590:	2b00      	cmp	r3, #0
 800b592:	d016      	beq.n	800b5c2 <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800b594:	88fb      	ldrh	r3, [r7, #6]
 800b596:	4a1b      	ldr	r2, [pc, #108]	@ (800b604 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800b598:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b59c:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800b59e:	68bb      	ldr	r3, [r7, #8]
 800b5a0:	681b      	ldr	r3, [r3, #0]
 800b5a2:	68ba      	ldr	r2, [r7, #8]
 800b5a4:	4413      	add	r3, r2
 800b5a6:	4a18      	ldr	r2, [pc, #96]	@ (800b608 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800b5a8:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800b5aa:	68bb      	ldr	r3, [r7, #8]
 800b5ac:	685b      	ldr	r3, [r3, #4]
 800b5ae:	68ba      	ldr	r2, [r7, #8]
 800b5b0:	4413      	add	r3, r2
 800b5b2:	4a16      	ldr	r2, [pc, #88]	@ (800b60c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800b5b4:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800b5b6:	68bb      	ldr	r3, [r7, #8]
 800b5b8:	689b      	ldr	r3, [r3, #8]
 800b5ba:	68ba      	ldr	r2, [r7, #8]
 800b5bc:	4413      	add	r3, r2
 800b5be:	60fb      	str	r3, [r7, #12]
 800b5c0:	e00a      	b.n	800b5d8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800b5c2:	4b11      	ldr	r3, [pc, #68]	@ (800b608 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800b5c4:	4a12      	ldr	r2, [pc, #72]	@ (800b610 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800b5c6:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800b5c8:	4a12      	ldr	r2, [pc, #72]	@ (800b614 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800b5ca:	4b10      	ldr	r3, [pc, #64]	@ (800b60c <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800b5cc:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800b5ce:	88fb      	ldrh	r3, [r7, #6]
 800b5d0:	4a11      	ldr	r2, [pc, #68]	@ (800b618 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800b5d2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800b5d6:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800b5d8:	68fb      	ldr	r3, [r7, #12]
 800b5da:	2b00      	cmp	r3, #0
 800b5dc:	d00d      	beq.n	800b5fa <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800b5de:	4a0f      	ldr	r2, [pc, #60]	@ (800b61c <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800b5e0:	88fb      	ldrh	r3, [r7, #6]
 800b5e2:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800b5e4:	f000 f824 	bl	800b630 <_ZN17TypedTextDatabase8getFontsEv>
 800b5e8:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800b5ea:	f000 f819 	bl	800b620 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800b5ee:	4603      	mov	r3, r0
 800b5f0:	461a      	mov	r2, r3
 800b5f2:	4621      	mov	r1, r4
 800b5f4:	68f8      	ldr	r0, [r7, #12]
 800b5f6:	f7ff febd 	bl	800b374 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800b5fa:	bf00      	nop
 800b5fc:	3714      	adds	r7, #20
 800b5fe:	46bd      	mov	sp, r7
 800b600:	bd90      	pop	{r4, r7, pc}
 800b602:	bf00      	nop
 800b604:	20000a70 	.word	0x20000a70
 800b608:	20000a78 	.word	0x20000a78
 800b60c:	20000a7c 	.word	0x20000a7c
 800b610:	08023628 	.word	0x08023628
 800b614:	08023624 	.word	0x08023624
 800b618:	08023630 	.word	0x08023630
 800b61c:	20000a74 	.word	0x20000a74

0800b620 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800b620:	b480      	push	{r7}
 800b622:	af00      	add	r7, sp, #0
    return 0;
 800b624:	2300      	movs	r3, #0
}
 800b626:	4618      	mov	r0, r3
 800b628:	46bd      	mov	sp, r7
 800b62a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b62e:	4770      	bx	lr

0800b630 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800b630:	b480      	push	{r7}
 800b632:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800b634:	4b02      	ldr	r3, [pc, #8]	@ (800b640 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800b636:	4618      	mov	r0, r3
 800b638:	46bd      	mov	sp, r7
 800b63a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b63e:	4770      	bx	lr
 800b640:	20000a80 	.word	0x20000a80

0800b644 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800b644:	b580      	push	{r7, lr}
 800b646:	b082      	sub	sp, #8
 800b648:	af00      	add	r7, sp, #0
 800b64a:	6078      	str	r0, [r7, #4]
 800b64c:	6039      	str	r1, [r7, #0]
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	2b01      	cmp	r3, #1
 800b652:	d113      	bne.n	800b67c <_Z41__static_initialization_and_destruction_0ii+0x38>
 800b654:	683b      	ldr	r3, [r7, #0]
 800b656:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800b65a:	4293      	cmp	r3, r2
 800b65c:	d10e      	bne.n	800b67c <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800b65e:	f7fe fca7 	bl	8009fb0 <_Z23getFont_verdana_20_4bppv>
 800b662:	4603      	mov	r3, r0
};
 800b664:	4a07      	ldr	r2, [pc, #28]	@ (800b684 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800b666:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800b668:	f7fe fcfc 	bl	800a064 <_Z23getFont_verdana_40_4bppv>
 800b66c:	4603      	mov	r3, r0
};
 800b66e:	4a05      	ldr	r2, [pc, #20]	@ (800b684 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800b670:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800b672:	f7fe fc43 	bl	8009efc <_Z23getFont_verdana_10_4bppv>
 800b676:	4603      	mov	r3, r0
};
 800b678:	4a02      	ldr	r2, [pc, #8]	@ (800b684 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800b67a:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800b67c:	bf00      	nop
 800b67e:	3708      	adds	r7, #8
 800b680:	46bd      	mov	sp, r7
 800b682:	bd80      	pop	{r7, pc}
 800b684:	20000a80 	.word	0x20000a80

0800b688 <_GLOBAL__sub_I_touchgfx_fonts>:
 800b688:	b580      	push	{r7, lr}
 800b68a:	af00      	add	r7, sp, #0
 800b68c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800b690:	2001      	movs	r0, #1
 800b692:	f7ff ffd7 	bl	800b644 <_Z41__static_initialization_and_destruction_0ii>
 800b696:	bd80      	pop	{r7, pc}

0800b698 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800b698:	b580      	push	{r7, lr}
 800b69a:	b082      	sub	sp, #8
 800b69c:	af00      	add	r7, sp, #0
 800b69e:	6078      	str	r0, [r7, #4]
 800b6a0:	4a05      	ldr	r2, [pc, #20]	@ (800b6b8 <_ZN19FrontendApplicationD1Ev+0x20>)
 800b6a2:	687b      	ldr	r3, [r7, #4]
 800b6a4:	601a      	str	r2, [r3, #0]
 800b6a6:	687b      	ldr	r3, [r7, #4]
 800b6a8:	4618      	mov	r0, r3
 800b6aa:	f7fe ff3b 	bl	800a524 <_ZN23FrontendApplicationBaseD1Ev>
 800b6ae:	687b      	ldr	r3, [r7, #4]
 800b6b0:	4618      	mov	r0, r3
 800b6b2:	3708      	adds	r7, #8
 800b6b4:	46bd      	mov	sp, r7
 800b6b6:	bd80      	pop	{r7, pc}
 800b6b8:	08022894 	.word	0x08022894

0800b6bc <_ZN19FrontendApplicationD0Ev>:
 800b6bc:	b580      	push	{r7, lr}
 800b6be:	b082      	sub	sp, #8
 800b6c0:	af00      	add	r7, sp, #0
 800b6c2:	6078      	str	r0, [r7, #4]
 800b6c4:	6878      	ldr	r0, [r7, #4]
 800b6c6:	f7ff ffe7 	bl	800b698 <_ZN19FrontendApplicationD1Ev>
 800b6ca:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800b6ce:	6878      	ldr	r0, [r7, #4]
 800b6d0:	f015 fab1 	bl	8020c36 <_ZdlPvj>
 800b6d4:	687b      	ldr	r3, [r7, #4]
 800b6d6:	4618      	mov	r0, r3
 800b6d8:	3708      	adds	r7, #8
 800b6da:	46bd      	mov	sp, r7
 800b6dc:	bd80      	pop	{r7, pc}

0800b6de <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800b6de:	b580      	push	{r7, lr}
 800b6e0:	b082      	sub	sp, #8
 800b6e2:	af00      	add	r7, sp, #0
 800b6e4:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800b6e6:	687b      	ldr	r3, [r7, #4]
 800b6e8:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800b6ec:	4618      	mov	r0, r3
 800b6ee:	f000 f82d 	bl	800b74c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800b6f2:	687b      	ldr	r3, [r7, #4]
 800b6f4:	4618      	mov	r0, r3
 800b6f6:	f004 fb93 	bl	800fe20 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800b6fa:	bf00      	nop
 800b6fc:	3708      	adds	r7, #8
 800b6fe:	46bd      	mov	sp, r7
 800b700:	bd80      	pop	{r7, pc}
	...

0800b704 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800b704:	b580      	push	{r7, lr}
 800b706:	b084      	sub	sp, #16
 800b708:	af00      	add	r7, sp, #0
 800b70a:	60f8      	str	r0, [r7, #12]
 800b70c:	60b9      	str	r1, [r7, #8]
 800b70e:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800b710:	68fb      	ldr	r3, [r7, #12]
 800b712:	687a      	ldr	r2, [r7, #4]
 800b714:	68b9      	ldr	r1, [r7, #8]
 800b716:	4618      	mov	r0, r3
 800b718:	f7fe ff54 	bl	800a5c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800b71c:	4a03      	ldr	r2, [pc, #12]	@ (800b72c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800b71e:	68fb      	ldr	r3, [r7, #12]
 800b720:	601a      	str	r2, [r3, #0]
{

}
 800b722:	68fb      	ldr	r3, [r7, #12]
 800b724:	4618      	mov	r0, r3
 800b726:	3710      	adds	r7, #16
 800b728:	46bd      	mov	sp, r7
 800b72a:	bd80      	pop	{r7, pc}
 800b72c:	08022894 	.word	0x08022894

0800b730 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800b730:	b480      	push	{r7}
 800b732:	b083      	sub	sp, #12
 800b734:	af00      	add	r7, sp, #0
 800b736:	6078      	str	r0, [r7, #4]
 800b738:	687b      	ldr	r3, [r7, #4]
 800b73a:	2200      	movs	r2, #0
 800b73c:	601a      	str	r2, [r3, #0]
{

}
 800b73e:	687b      	ldr	r3, [r7, #4]
 800b740:	4618      	mov	r0, r3
 800b742:	370c      	adds	r7, #12
 800b744:	46bd      	mov	sp, r7
 800b746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b74a:	4770      	bx	lr

0800b74c <_ZN5Model4tickEv>:

void Model::tick()
{
 800b74c:	b480      	push	{r7}
 800b74e:	b083      	sub	sp, #12
 800b750:	af00      	add	r7, sp, #0
 800b752:	6078      	str	r0, [r7, #4]

}
 800b754:	bf00      	nop
 800b756:	370c      	adds	r7, #12
 800b758:	46bd      	mov	sp, r7
 800b75a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b75e:	4770      	bx	lr

0800b760 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800b760:	b480      	push	{r7}
 800b762:	b083      	sub	sp, #12
 800b764:	af00      	add	r7, sp, #0
 800b766:	6078      	str	r0, [r7, #4]
    {
    }
 800b768:	bf00      	nop
 800b76a:	370c      	adds	r7, #12
 800b76c:	46bd      	mov	sp, r7
 800b76e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b772:	4770      	bx	lr

0800b774 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800b774:	b480      	push	{r7}
 800b776:	b083      	sub	sp, #12
 800b778:	af00      	add	r7, sp, #0
 800b77a:	6078      	str	r0, [r7, #4]
    {
    }
 800b77c:	bf00      	nop
 800b77e:	370c      	adds	r7, #12
 800b780:	46bd      	mov	sp, r7
 800b782:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b786:	4770      	bx	lr

0800b788 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800b788:	b480      	push	{r7}
 800b78a:	b083      	sub	sp, #12
 800b78c:	af00      	add	r7, sp, #0
 800b78e:	6078      	str	r0, [r7, #4]
    {
 800b790:	4a04      	ldr	r2, [pc, #16]	@ (800b7a4 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800b792:	687b      	ldr	r3, [r7, #4]
 800b794:	601a      	str	r2, [r3, #0]
    }
 800b796:	687b      	ldr	r3, [r7, #4]
 800b798:	4618      	mov	r0, r3
 800b79a:	370c      	adds	r7, #12
 800b79c:	46bd      	mov	sp, r7
 800b79e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7a2:	4770      	bx	lr
 800b7a4:	08022920 	.word	0x08022920

0800b7a8 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800b7a8:	b580      	push	{r7, lr}
 800b7aa:	b082      	sub	sp, #8
 800b7ac:	af00      	add	r7, sp, #0
 800b7ae:	6078      	str	r0, [r7, #4]
    }
 800b7b0:	6878      	ldr	r0, [r7, #4]
 800b7b2:	f7ff ffe9 	bl	800b788 <_ZN8touchgfx9PresenterD1Ev>
 800b7b6:	2104      	movs	r1, #4
 800b7b8:	6878      	ldr	r0, [r7, #4]
 800b7ba:	f015 fa3c 	bl	8020c36 <_ZdlPvj>
 800b7be:	687b      	ldr	r3, [r7, #4]
 800b7c0:	4618      	mov	r0, r3
 800b7c2:	3708      	adds	r7, #8
 800b7c4:	46bd      	mov	sp, r7
 800b7c6:	bd80      	pop	{r7, pc}

0800b7c8 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800b7c8:	b480      	push	{r7}
 800b7ca:	b083      	sub	sp, #12
 800b7cc:	af00      	add	r7, sp, #0
 800b7ce:	6078      	str	r0, [r7, #4]
    {
 800b7d0:	4a04      	ldr	r2, [pc, #16]	@ (800b7e4 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800b7d2:	687b      	ldr	r3, [r7, #4]
 800b7d4:	601a      	str	r2, [r3, #0]
    }
 800b7d6:	687b      	ldr	r3, [r7, #4]
 800b7d8:	4618      	mov	r0, r3
 800b7da:	370c      	adds	r7, #12
 800b7dc:	46bd      	mov	sp, r7
 800b7de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7e2:	4770      	bx	lr
 800b7e4:	08022920 	.word	0x08022920

0800b7e8 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800b7e8:	b480      	push	{r7}
 800b7ea:	b083      	sub	sp, #12
 800b7ec:	af00      	add	r7, sp, #0
 800b7ee:	6078      	str	r0, [r7, #4]
 800b7f0:	4a06      	ldr	r2, [pc, #24]	@ (800b80c <_ZN13ModelListenerC1Ev+0x24>)
 800b7f2:	687b      	ldr	r3, [r7, #4]
 800b7f4:	601a      	str	r2, [r3, #0]
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	2200      	movs	r2, #0
 800b7fa:	605a      	str	r2, [r3, #4]
 800b7fc:	687b      	ldr	r3, [r7, #4]
 800b7fe:	4618      	mov	r0, r3
 800b800:	370c      	adds	r7, #12
 800b802:	46bd      	mov	sp, r7
 800b804:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b808:	4770      	bx	lr
 800b80a:	bf00      	nop
 800b80c:	08022910 	.word	0x08022910

0800b810 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800b810:	b480      	push	{r7}
 800b812:	b083      	sub	sp, #12
 800b814:	af00      	add	r7, sp, #0
 800b816:	6078      	str	r0, [r7, #4]
 800b818:	4a04      	ldr	r2, [pc, #16]	@ (800b82c <_ZN13ModelListenerD1Ev+0x1c>)
 800b81a:	687b      	ldr	r3, [r7, #4]
 800b81c:	601a      	str	r2, [r3, #0]
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	4618      	mov	r0, r3
 800b822:	370c      	adds	r7, #12
 800b824:	46bd      	mov	sp, r7
 800b826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b82a:	4770      	bx	lr
 800b82c:	08022910 	.word	0x08022910

0800b830 <_ZN13ModelListenerD0Ev>:
 800b830:	b580      	push	{r7, lr}
 800b832:	b082      	sub	sp, #8
 800b834:	af00      	add	r7, sp, #0
 800b836:	6078      	str	r0, [r7, #4]
 800b838:	6878      	ldr	r0, [r7, #4]
 800b83a:	f7ff ffe9 	bl	800b810 <_ZN13ModelListenerD1Ev>
 800b83e:	2108      	movs	r1, #8
 800b840:	6878      	ldr	r0, [r7, #4]
 800b842:	f015 f9f8 	bl	8020c36 <_ZdlPvj>
 800b846:	687b      	ldr	r3, [r7, #4]
 800b848:	4618      	mov	r0, r3
 800b84a:	3708      	adds	r7, #8
 800b84c:	46bd      	mov	sp, r7
 800b84e:	bd80      	pop	{r7, pc}

0800b850 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800b850:	b580      	push	{r7, lr}
 800b852:	b082      	sub	sp, #8
 800b854:	af00      	add	r7, sp, #0
 800b856:	6078      	str	r0, [r7, #4]
 800b858:	4a09      	ldr	r2, [pc, #36]	@ (800b880 <_ZN16Screen1PresenterD1Ev+0x30>)
 800b85a:	687b      	ldr	r3, [r7, #4]
 800b85c:	601a      	str	r2, [r3, #0]
 800b85e:	4a09      	ldr	r2, [pc, #36]	@ (800b884 <_ZN16Screen1PresenterD1Ev+0x34>)
 800b860:	687b      	ldr	r3, [r7, #4]
 800b862:	605a      	str	r2, [r3, #4]
 800b864:	687b      	ldr	r3, [r7, #4]
 800b866:	3304      	adds	r3, #4
 800b868:	4618      	mov	r0, r3
 800b86a:	f7ff ffd1 	bl	800b810 <_ZN13ModelListenerD1Ev>
 800b86e:	687b      	ldr	r3, [r7, #4]
 800b870:	4618      	mov	r0, r3
 800b872:	f7ff ff89 	bl	800b788 <_ZN8touchgfx9PresenterD1Ev>
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	4618      	mov	r0, r3
 800b87a:	3708      	adds	r7, #8
 800b87c:	46bd      	mov	sp, r7
 800b87e:	bd80      	pop	{r7, pc}
 800b880:	080228e8 	.word	0x080228e8
 800b884:	08022900 	.word	0x08022900

0800b888 <_ZThn4_N16Screen1PresenterD1Ev>:
 800b888:	f1a0 0004 	sub.w	r0, r0, #4
 800b88c:	e7e0      	b.n	800b850 <_ZN16Screen1PresenterD1Ev>
 800b88e:	bf00      	nop

0800b890 <_ZN16Screen1PresenterD0Ev>:
 800b890:	b580      	push	{r7, lr}
 800b892:	b082      	sub	sp, #8
 800b894:	af00      	add	r7, sp, #0
 800b896:	6078      	str	r0, [r7, #4]
 800b898:	6878      	ldr	r0, [r7, #4]
 800b89a:	f7ff ffd9 	bl	800b850 <_ZN16Screen1PresenterD1Ev>
 800b89e:	2110      	movs	r1, #16
 800b8a0:	6878      	ldr	r0, [r7, #4]
 800b8a2:	f015 f9c8 	bl	8020c36 <_ZdlPvj>
 800b8a6:	687b      	ldr	r3, [r7, #4]
 800b8a8:	4618      	mov	r0, r3
 800b8aa:	3708      	adds	r7, #8
 800b8ac:	46bd      	mov	sp, r7
 800b8ae:	bd80      	pop	{r7, pc}

0800b8b0 <_ZThn4_N16Screen1PresenterD0Ev>:
 800b8b0:	f1a0 0004 	sub.w	r0, r0, #4
 800b8b4:	e7ec      	b.n	800b890 <_ZN16Screen1PresenterD0Ev>
	...

0800b8b8 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800b8b8:	b580      	push	{r7, lr}
 800b8ba:	b082      	sub	sp, #8
 800b8bc:	af00      	add	r7, sp, #0
 800b8be:	6078      	str	r0, [r7, #4]
 800b8c0:	6039      	str	r1, [r7, #0]
    : view(v)
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	4618      	mov	r0, r3
 800b8c6:	f7ff ff7f 	bl	800b7c8 <_ZN8touchgfx9PresenterC1Ev>
 800b8ca:	687b      	ldr	r3, [r7, #4]
 800b8cc:	3304      	adds	r3, #4
 800b8ce:	4618      	mov	r0, r3
 800b8d0:	f7ff ff8a 	bl	800b7e8 <_ZN13ModelListenerC1Ev>
 800b8d4:	4a06      	ldr	r2, [pc, #24]	@ (800b8f0 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	601a      	str	r2, [r3, #0]
 800b8da:	4a06      	ldr	r2, [pc, #24]	@ (800b8f4 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800b8dc:	687b      	ldr	r3, [r7, #4]
 800b8de:	605a      	str	r2, [r3, #4]
 800b8e0:	687b      	ldr	r3, [r7, #4]
 800b8e2:	683a      	ldr	r2, [r7, #0]
 800b8e4:	60da      	str	r2, [r3, #12]
{

}
 800b8e6:	687b      	ldr	r3, [r7, #4]
 800b8e8:	4618      	mov	r0, r3
 800b8ea:	3708      	adds	r7, #8
 800b8ec:	46bd      	mov	sp, r7
 800b8ee:	bd80      	pop	{r7, pc}
 800b8f0:	080228e8 	.word	0x080228e8
 800b8f4:	08022900 	.word	0x08022900

0800b8f8 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800b8f8:	b480      	push	{r7}
 800b8fa:	b083      	sub	sp, #12
 800b8fc:	af00      	add	r7, sp, #0
 800b8fe:	6078      	str	r0, [r7, #4]

}
 800b900:	bf00      	nop
 800b902:	370c      	adds	r7, #12
 800b904:	46bd      	mov	sp, r7
 800b906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b90a:	4770      	bx	lr

0800b90c <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800b90c:	b480      	push	{r7}
 800b90e:	b083      	sub	sp, #12
 800b910:	af00      	add	r7, sp, #0
 800b912:	6078      	str	r0, [r7, #4]

}
 800b914:	bf00      	nop
 800b916:	370c      	adds	r7, #12
 800b918:	46bd      	mov	sp, r7
 800b91a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b91e:	4770      	bx	lr

0800b920 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800b920:	b580      	push	{r7, lr}
 800b922:	b082      	sub	sp, #8
 800b924:	af00      	add	r7, sp, #0
 800b926:	6078      	str	r0, [r7, #4]
 800b928:	4a05      	ldr	r2, [pc, #20]	@ (800b940 <_ZN11Screen1ViewD1Ev+0x20>)
 800b92a:	687b      	ldr	r3, [r7, #4]
 800b92c:	601a      	str	r2, [r3, #0]
 800b92e:	687b      	ldr	r3, [r7, #4]
 800b930:	4618      	mov	r0, r3
 800b932:	f7ff fc5d 	bl	800b1f0 <_ZN15Screen1ViewBaseD1Ev>
 800b936:	687b      	ldr	r3, [r7, #4]
 800b938:	4618      	mov	r0, r3
 800b93a:	3708      	adds	r7, #8
 800b93c:	46bd      	mov	sp, r7
 800b93e:	bd80      	pop	{r7, pc}
 800b940:	08022938 	.word	0x08022938

0800b944 <_ZN11Screen1ViewD0Ev>:
 800b944:	b580      	push	{r7, lr}
 800b946:	b082      	sub	sp, #8
 800b948:	af00      	add	r7, sp, #0
 800b94a:	6078      	str	r0, [r7, #4]
 800b94c:	6878      	ldr	r0, [r7, #4]
 800b94e:	f7ff ffe7 	bl	800b920 <_ZN11Screen1ViewD1Ev>
 800b952:	216c      	movs	r1, #108	@ 0x6c
 800b954:	6878      	ldr	r0, [r7, #4]
 800b956:	f015 f96e 	bl	8020c36 <_ZdlPvj>
 800b95a:	687b      	ldr	r3, [r7, #4]
 800b95c:	4618      	mov	r0, r3
 800b95e:	3708      	adds	r7, #8
 800b960:	46bd      	mov	sp, r7
 800b962:	bd80      	pop	{r7, pc}

0800b964 <_ZN11Screen1ViewC1Ev>:
#include <gui/screen1_screen/Screen1View.hpp>

Screen1View::Screen1View()
 800b964:	b580      	push	{r7, lr}
 800b966:	b082      	sub	sp, #8
 800b968:	af00      	add	r7, sp, #0
 800b96a:	6078      	str	r0, [r7, #4]
 800b96c:	687b      	ldr	r3, [r7, #4]
 800b96e:	4618      	mov	r0, r3
 800b970:	f7ff fbf6 	bl	800b160 <_ZN15Screen1ViewBaseC1Ev>
 800b974:	4a03      	ldr	r2, [pc, #12]	@ (800b984 <_ZN11Screen1ViewC1Ev+0x20>)
 800b976:	687b      	ldr	r3, [r7, #4]
 800b978:	601a      	str	r2, [r3, #0]
{

}
 800b97a:	687b      	ldr	r3, [r7, #4]
 800b97c:	4618      	mov	r0, r3
 800b97e:	3708      	adds	r7, #8
 800b980:	46bd      	mov	sp, r7
 800b982:	bd80      	pop	{r7, pc}
 800b984:	08022938 	.word	0x08022938

0800b988 <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800b988:	b580      	push	{r7, lr}
 800b98a:	b082      	sub	sp, #8
 800b98c:	af00      	add	r7, sp, #0
 800b98e:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800b990:	687b      	ldr	r3, [r7, #4]
 800b992:	4618      	mov	r0, r3
 800b994:	f7ff fc54 	bl	800b240 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800b998:	bf00      	nop
 800b99a:	3708      	adds	r7, #8
 800b99c:	46bd      	mov	sp, r7
 800b99e:	bd80      	pop	{r7, pc}

0800b9a0 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800b9a0:	b580      	push	{r7, lr}
 800b9a2:	b082      	sub	sp, #8
 800b9a4:	af00      	add	r7, sp, #0
 800b9a6:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800b9a8:	687b      	ldr	r3, [r7, #4]
 800b9aa:	4618      	mov	r0, r3
 800b9ac:	f7ff fb20 	bl	800aff0 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800b9b0:	bf00      	nop
 800b9b2:	3708      	adds	r7, #8
 800b9b4:	46bd      	mov	sp, r7
 800b9b6:	bd80      	pop	{r7, pc}

0800b9b8 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800b9b8:	b480      	push	{r7}
 800b9ba:	b083      	sub	sp, #12
 800b9bc:	af00      	add	r7, sp, #0
 800b9be:	6078      	str	r0, [r7, #4]
    {
 800b9c0:	4a04      	ldr	r2, [pc, #16]	@ (800b9d4 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800b9c2:	687b      	ldr	r3, [r7, #4]
 800b9c4:	601a      	str	r2, [r3, #0]
    }
 800b9c6:	687b      	ldr	r3, [r7, #4]
 800b9c8:	4618      	mov	r0, r3
 800b9ca:	370c      	adds	r7, #12
 800b9cc:	46bd      	mov	sp, r7
 800b9ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9d2:	4770      	bx	lr
 800b9d4:	08022984 	.word	0x08022984

0800b9d8 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800b9d8:	b580      	push	{r7, lr}
 800b9da:	b082      	sub	sp, #8
 800b9dc:	af00      	add	r7, sp, #0
 800b9de:	6078      	str	r0, [r7, #4]
    }
 800b9e0:	6878      	ldr	r0, [r7, #4]
 800b9e2:	f7ff ffe9 	bl	800b9b8 <_ZN8touchgfx15TouchControllerD1Ev>
 800b9e6:	2104      	movs	r1, #4
 800b9e8:	6878      	ldr	r0, [r7, #4]
 800b9ea:	f015 f924 	bl	8020c36 <_ZdlPvj>
 800b9ee:	687b      	ldr	r3, [r7, #4]
 800b9f0:	4618      	mov	r0, r3
 800b9f2:	3708      	adds	r7, #8
 800b9f4:	46bd      	mov	sp, r7
 800b9f6:	bd80      	pop	{r7, pc}

0800b9f8 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 800b9f8:	b480      	push	{r7}
 800b9fa:	b083      	sub	sp, #12
 800b9fc:	af00      	add	r7, sp, #0
 800b9fe:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800ba00:	bf00      	nop
 800ba02:	370c      	adds	r7, #12
 800ba04:	46bd      	mov	sp, r7
 800ba06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba0a:	4770      	bx	lr

0800ba0c <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800ba0c:	b480      	push	{r7}
 800ba0e:	b085      	sub	sp, #20
 800ba10:	af00      	add	r7, sp, #0
 800ba12:	60f8      	str	r0, [r7, #12]
 800ba14:	60b9      	str	r1, [r7, #8]
 800ba16:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 800ba18:	2300      	movs	r3, #0
}
 800ba1a:	4618      	mov	r0, r3
 800ba1c:	3714      	adds	r7, #20
 800ba1e:	46bd      	mov	sp, r7
 800ba20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba24:	4770      	bx	lr
	...

0800ba28 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800ba28:	b580      	push	{r7, lr}
 800ba2a:	b082      	sub	sp, #8
 800ba2c:	af00      	add	r7, sp, #0
 800ba2e:	6078      	str	r0, [r7, #4]
 800ba30:	4a05      	ldr	r2, [pc, #20]	@ (800ba48 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	601a      	str	r2, [r3, #0]
 800ba36:	687b      	ldr	r3, [r7, #4]
 800ba38:	4618      	mov	r0, r3
 800ba3a:	f7ff ffbd 	bl	800b9b8 <_ZN8touchgfx15TouchControllerD1Ev>
 800ba3e:	687b      	ldr	r3, [r7, #4]
 800ba40:	4618      	mov	r0, r3
 800ba42:	3708      	adds	r7, #8
 800ba44:	46bd      	mov	sp, r7
 800ba46:	bd80      	pop	{r7, pc}
 800ba48:	0802296c 	.word	0x0802296c

0800ba4c <_ZN20STM32TouchControllerD0Ev>:
 800ba4c:	b580      	push	{r7, lr}
 800ba4e:	b082      	sub	sp, #8
 800ba50:	af00      	add	r7, sp, #0
 800ba52:	6078      	str	r0, [r7, #4]
 800ba54:	6878      	ldr	r0, [r7, #4]
 800ba56:	f7ff ffe7 	bl	800ba28 <_ZN20STM32TouchControllerD1Ev>
 800ba5a:	2104      	movs	r1, #4
 800ba5c:	6878      	ldr	r0, [r7, #4]
 800ba5e:	f015 f8ea 	bl	8020c36 <_ZdlPvj>
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	4618      	mov	r0, r3
 800ba66:	3708      	adds	r7, #8
 800ba68:	46bd      	mov	sp, r7
 800ba6a:	bd80      	pop	{r7, pc}

0800ba6c <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800ba6c:	b480      	push	{r7}
 800ba6e:	af00      	add	r7, sp, #0

}
 800ba70:	bf00      	nop
 800ba72:	46bd      	mov	sp, r7
 800ba74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba78:	4770      	bx	lr
	...

0800ba7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800ba7c:	b480      	push	{r7}
 800ba7e:	b083      	sub	sp, #12
 800ba80:	af00      	add	r7, sp, #0
 800ba82:	4603      	mov	r3, r0
 800ba84:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800ba86:	79fb      	ldrb	r3, [r7, #7]
 800ba88:	2b03      	cmp	r3, #3
 800ba8a:	d80c      	bhi.n	800baa6 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800ba8c:	a201      	add	r2, pc, #4	@ (adr r2, 800ba94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800ba8e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ba92:	bf00      	nop
 800ba94:	0800baa5 	.word	0x0800baa5
 800ba98:	0800baa5 	.word	0x0800baa5
 800ba9c:	0800baa5 	.word	0x0800baa5
 800baa0:	0800baa5 	.word	0x0800baa5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800baa4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800baa6:	bf00      	nop
 800baa8:	370c      	adds	r7, #12
 800baaa:	46bd      	mov	sp, r7
 800baac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bab0:	4770      	bx	lr
 800bab2:	bf00      	nop

0800bab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800bab4:	b480      	push	{r7}
 800bab6:	b083      	sub	sp, #12
 800bab8:	af00      	add	r7, sp, #0
 800baba:	4603      	mov	r3, r0
 800babc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800babe:	79fb      	ldrb	r3, [r7, #7]
 800bac0:	2b03      	cmp	r3, #3
 800bac2:	d80c      	bhi.n	800bade <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800bac4:	a201      	add	r2, pc, #4	@ (adr r2, 800bacc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800bac6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800baca:	bf00      	nop
 800bacc:	0800badd 	.word	0x0800badd
 800bad0:	0800badd 	.word	0x0800badd
 800bad4:	0800badd 	.word	0x0800badd
 800bad8:	0800badd 	.word	0x0800badd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800badc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800bade:	bf00      	nop
 800bae0:	370c      	adds	r7, #12
 800bae2:	46bd      	mov	sp, r7
 800bae4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bae8:	4770      	bx	lr
 800baea:	bf00      	nop

0800baec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800baec:	b480      	push	{r7}
 800baee:	b083      	sub	sp, #12
 800baf0:	af00      	add	r7, sp, #0
 800baf2:	4603      	mov	r3, r0
 800baf4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800baf6:	79fb      	ldrb	r3, [r7, #7]
 800baf8:	2b03      	cmp	r3, #3
 800bafa:	d80c      	bhi.n	800bb16 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800bafc:	a201      	add	r2, pc, #4	@ (adr r2, 800bb04 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800bafe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800bb02:	bf00      	nop
 800bb04:	0800bb15 	.word	0x0800bb15
 800bb08:	0800bb15 	.word	0x0800bb15
 800bb0c:	0800bb15 	.word	0x0800bb15
 800bb10:	0800bb15 	.word	0x0800bb15
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800bb14:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800bb16:	bf00      	nop
 800bb18:	370c      	adds	r7, #12
 800bb1a:	46bd      	mov	sp, r7
 800bb1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb20:	4770      	bx	lr
 800bb22:	bf00      	nop

0800bb24 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800bb24:	b480      	push	{r7}
 800bb26:	b083      	sub	sp, #12
 800bb28:	af00      	add	r7, sp, #0
 800bb2a:	6078      	str	r0, [r7, #4]
    {
 800bb2c:	4a04      	ldr	r2, [pc, #16]	@ (800bb40 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800bb2e:	687b      	ldr	r3, [r7, #4]
 800bb30:	601a      	str	r2, [r3, #0]
    }
 800bb32:	687b      	ldr	r3, [r7, #4]
 800bb34:	4618      	mov	r0, r3
 800bb36:	370c      	adds	r7, #12
 800bb38:	46bd      	mov	sp, r7
 800bb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb3e:	4770      	bx	lr
 800bb40:	08022d64 	.word	0x08022d64

0800bb44 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800bb44:	b580      	push	{r7, lr}
 800bb46:	b082      	sub	sp, #8
 800bb48:	af00      	add	r7, sp, #0
 800bb4a:	6078      	str	r0, [r7, #4]
    }
 800bb4c:	6878      	ldr	r0, [r7, #4]
 800bb4e:	f7ff ffe9 	bl	800bb24 <_ZN8touchgfx3HALD1Ev>
 800bb52:	217c      	movs	r1, #124	@ 0x7c
 800bb54:	6878      	ldr	r0, [r7, #4]
 800bb56:	f015 f86e 	bl	8020c36 <_ZdlPvj>
 800bb5a:	687b      	ldr	r3, [r7, #4]
 800bb5c:	4618      	mov	r0, r3
 800bb5e:	3708      	adds	r7, #8
 800bb60:	46bd      	mov	sp, r7
 800bb62:	bd80      	pop	{r7, pc}

0800bb64 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800bb64:	b480      	push	{r7}
 800bb66:	b083      	sub	sp, #12
 800bb68:	af00      	add	r7, sp, #0
 800bb6a:	6078      	str	r0, [r7, #4]
 800bb6c:	460b      	mov	r3, r1
 800bb6e:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800bb70:	687b      	ldr	r3, [r7, #4]
 800bb72:	78fa      	ldrb	r2, [r7, #3]
 800bb74:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800bb78:	687b      	ldr	r3, [r7, #4]
 800bb7a:	2201      	movs	r2, #1
 800bb7c:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800bb80:	bf00      	nop
 800bb82:	370c      	adds	r7, #12
 800bb84:	46bd      	mov	sp, r7
 800bb86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb8a:	4770      	bx	lr

0800bb8c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800bb8c:	b580      	push	{r7, lr}
 800bb8e:	b082      	sub	sp, #8
 800bb90:	af00      	add	r7, sp, #0
 800bb92:	6078      	str	r0, [r7, #4]
 800bb94:	460b      	mov	r3, r1
 800bb96:	807b      	strh	r3, [r7, #2]
 800bb98:	4613      	mov	r3, r2
 800bb9a:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800bb9c:	4b0c      	ldr	r3, [pc, #48]	@ (800bbd0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800bb9e:	881b      	ldrh	r3, [r3, #0]
 800bba0:	887a      	ldrh	r2, [r7, #2]
 800bba2:	429a      	cmp	r2, r3
 800bba4:	d304      	bcc.n	800bbb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800bba6:	4b0b      	ldr	r3, [pc, #44]	@ (800bbd4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800bba8:	881b      	ldrh	r3, [r3, #0]
 800bbaa:	883a      	ldrh	r2, [r7, #0]
 800bbac:	429a      	cmp	r2, r3
 800bbae:	d205      	bcs.n	800bbbc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800bbb0:	4b09      	ldr	r3, [pc, #36]	@ (800bbd8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800bbb2:	4a0a      	ldr	r2, [pc, #40]	@ (800bbdc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800bbb4:	219e      	movs	r1, #158	@ 0x9e
 800bbb6:	480a      	ldr	r0, [pc, #40]	@ (800bbe0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800bbb8:	f015 f86c 	bl	8020c94 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800bbbc:	4a09      	ldr	r2, [pc, #36]	@ (800bbe4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800bbbe:	887b      	ldrh	r3, [r7, #2]
 800bbc0:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800bbc2:	4a09      	ldr	r2, [pc, #36]	@ (800bbe8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800bbc4:	883b      	ldrh	r3, [r7, #0]
 800bbc6:	8013      	strh	r3, [r2, #0]
    }
 800bbc8:	bf00      	nop
 800bbca:	3708      	adds	r7, #8
 800bbcc:	46bd      	mov	sp, r7
 800bbce:	bd80      	pop	{r7, pc}
 800bbd0:	20001b60 	.word	0x20001b60
 800bbd4:	20001b62 	.word	0x20001b62
 800bbd8:	08022264 	.word	0x08022264
 800bbdc:	080222c8 	.word	0x080222c8
 800bbe0:	0802230c 	.word	0x0802230c
 800bbe4:	20001b66 	.word	0x20001b66
 800bbe8:	20001b68 	.word	0x20001b68

0800bbec <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800bbec:	b580      	push	{r7, lr}
 800bbee:	b082      	sub	sp, #8
 800bbf0:	af00      	add	r7, sp, #0
 800bbf2:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800bbf4:	687b      	ldr	r3, [r7, #4]
 800bbf6:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800bbfa:	2b00      	cmp	r3, #0
 800bbfc:	d009      	beq.n	800bc12 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	685a      	ldr	r2, [r3, #4]
 800bc02:	687b      	ldr	r3, [r7, #4]
 800bc04:	685b      	ldr	r3, [r3, #4]
 800bc06:	681b      	ldr	r3, [r3, #0]
 800bc08:	681b      	ldr	r3, [r3, #0]
 800bc0a:	4610      	mov	r0, r2
 800bc0c:	4798      	blx	r3
 800bc0e:	4603      	mov	r3, r0
 800bc10:	e000      	b.n	800bc14 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800bc12:	2300      	movs	r3, #0
    }
 800bc14:	4618      	mov	r0, r3
 800bc16:	3708      	adds	r7, #8
 800bc18:	46bd      	mov	sp, r7
 800bc1a:	bd80      	pop	{r7, pc}

0800bc1c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800bc1c:	b580      	push	{r7, lr}
 800bc1e:	b082      	sub	sp, #8
 800bc20:	af00      	add	r7, sp, #0
 800bc22:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800bc24:	6878      	ldr	r0, [r7, #4]
 800bc26:	f002 fec9 	bl	800e9bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800bc2a:	687b      	ldr	r3, [r7, #4]
 800bc2c:	681b      	ldr	r3, [r3, #0]
 800bc2e:	33ac      	adds	r3, #172	@ 0xac
 800bc30:	681b      	ldr	r3, [r3, #0]
 800bc32:	6878      	ldr	r0, [r7, #4]
 800bc34:	4798      	blx	r3
    }
 800bc36:	bf00      	nop
 800bc38:	3708      	adds	r7, #8
 800bc3a:	46bd      	mov	sp, r7
 800bc3c:	bd80      	pop	{r7, pc}

0800bc3e <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800bc3e:	b480      	push	{r7}
 800bc40:	b083      	sub	sp, #12
 800bc42:	af00      	add	r7, sp, #0
 800bc44:	6078      	str	r0, [r7, #4]
 800bc46:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800bc48:	2300      	movs	r3, #0
    }
 800bc4a:	4618      	mov	r0, r3
 800bc4c:	370c      	adds	r7, #12
 800bc4e:	46bd      	mov	sp, r7
 800bc50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc54:	4770      	bx	lr
	...

0800bc58 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800bc58:	b580      	push	{r7, lr}
 800bc5a:	b084      	sub	sp, #16
 800bc5c:	af00      	add	r7, sp, #0
 800bc5e:	60f8      	str	r0, [r7, #12]
 800bc60:	60b9      	str	r1, [r7, #8]
 800bc62:	607a      	str	r2, [r7, #4]
 800bc64:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800bc66:	68bb      	ldr	r3, [r7, #8]
 800bc68:	2b00      	cmp	r3, #0
 800bc6a:	d106      	bne.n	800bc7a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800bc6c:	4b0f      	ldr	r3, [pc, #60]	@ (800bcac <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800bc6e:	4a10      	ldr	r2, [pc, #64]	@ (800bcb0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800bc70:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800bc74:	480f      	ldr	r0, [pc, #60]	@ (800bcb4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800bc76:	f015 f80d 	bl	8020c94 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800bc7a:	68fb      	ldr	r3, [r7, #12]
 800bc7c:	68ba      	ldr	r2, [r7, #8]
 800bc7e:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800bc80:	68fb      	ldr	r3, [r7, #12]
 800bc82:	687a      	ldr	r2, [r7, #4]
 800bc84:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800bc86:	687b      	ldr	r3, [r7, #4]
 800bc88:	2b00      	cmp	r3, #0
 800bc8a:	bf14      	ite	ne
 800bc8c:	2301      	movne	r3, #1
 800bc8e:	2300      	moveq	r3, #0
 800bc90:	b2da      	uxtb	r2, r3
 800bc92:	4b09      	ldr	r3, [pc, #36]	@ (800bcb8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800bc94:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800bc96:	68fb      	ldr	r3, [r7, #12]
 800bc98:	681b      	ldr	r3, [r3, #0]
 800bc9a:	338c      	adds	r3, #140	@ 0x8c
 800bc9c:	681b      	ldr	r3, [r3, #0]
 800bc9e:	6839      	ldr	r1, [r7, #0]
 800bca0:	68f8      	ldr	r0, [r7, #12]
 800bca2:	4798      	blx	r3
    }
 800bca4:	bf00      	nop
 800bca6:	3710      	adds	r7, #16
 800bca8:	46bd      	mov	sp, r7
 800bcaa:	bd80      	pop	{r7, pc}
 800bcac:	08022350 	.word	0x08022350
 800bcb0:	08022388 	.word	0x08022388
 800bcb4:	0802230c 	.word	0x0802230c
 800bcb8:	20001b6a 	.word	0x20001b6a

0800bcbc <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800bcbc:	b480      	push	{r7}
 800bcbe:	b083      	sub	sp, #12
 800bcc0:	af00      	add	r7, sp, #0
 800bcc2:	6078      	str	r0, [r7, #4]
 800bcc4:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800bcc6:	687b      	ldr	r3, [r7, #4]
 800bcc8:	683a      	ldr	r2, [r7, #0]
 800bcca:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800bccc:	683b      	ldr	r3, [r7, #0]
 800bcce:	2b00      	cmp	r3, #0
 800bcd0:	bf14      	ite	ne
 800bcd2:	2301      	movne	r3, #1
 800bcd4:	2300      	moveq	r3, #0
 800bcd6:	b2da      	uxtb	r2, r3
 800bcd8:	4b03      	ldr	r3, [pc, #12]	@ (800bce8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800bcda:	701a      	strb	r2, [r3, #0]
    }
 800bcdc:	bf00      	nop
 800bcde:	370c      	adds	r7, #12
 800bce0:	46bd      	mov	sp, r7
 800bce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bce6:	4770      	bx	lr
 800bce8:	20001b6b 	.word	0x20001b6b

0800bcec <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800bcec:	b480      	push	{r7}
 800bcee:	b083      	sub	sp, #12
 800bcf0:	af00      	add	r7, sp, #0
 800bcf2:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800bcf4:	2300      	movs	r3, #0
    }
 800bcf6:	4618      	mov	r0, r3
 800bcf8:	370c      	adds	r7, #12
 800bcfa:	46bd      	mov	sp, r7
 800bcfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd00:	4770      	bx	lr

0800bd02 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800bd02:	b580      	push	{r7, lr}
 800bd04:	b082      	sub	sp, #8
 800bd06:	af00      	add	r7, sp, #0
 800bd08:	6078      	str	r0, [r7, #4]
 800bd0a:	460b      	mov	r3, r1
 800bd0c:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800bd0e:	687b      	ldr	r3, [r7, #4]
 800bd10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bd12:	2b00      	cmp	r3, #0
 800bd14:	d004      	beq.n	800bd20 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800bd16:	687b      	ldr	r3, [r7, #4]
 800bd18:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800bd1a:	887a      	ldrh	r2, [r7, #2]
 800bd1c:	4610      	mov	r0, r2
 800bd1e:	4798      	blx	r3
        }
    }
 800bd20:	bf00      	nop
 800bd22:	3708      	adds	r7, #8
 800bd24:	46bd      	mov	sp, r7
 800bd26:	bd80      	pop	{r7, pc}

0800bd28 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800bd28:	b480      	push	{r7}
 800bd2a:	b083      	sub	sp, #12
 800bd2c:	af00      	add	r7, sp, #0
 800bd2e:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800bd30:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    }
 800bd34:	4618      	mov	r0, r3
 800bd36:	370c      	adds	r7, #12
 800bd38:	46bd      	mov	sp, r7
 800bd3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bd3e:	4770      	bx	lr

0800bd40 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800bd40:	b580      	push	{r7, lr}
 800bd42:	b082      	sub	sp, #8
 800bd44:	af00      	add	r7, sp, #0
 800bd46:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800bd48:	687b      	ldr	r3, [r7, #4]
 800bd4a:	685a      	ldr	r2, [r3, #4]
 800bd4c:	687b      	ldr	r3, [r7, #4]
 800bd4e:	685b      	ldr	r3, [r3, #4]
 800bd50:	681b      	ldr	r3, [r3, #0]
 800bd52:	3318      	adds	r3, #24
 800bd54:	681b      	ldr	r3, [r3, #0]
 800bd56:	4610      	mov	r0, r2
 800bd58:	4798      	blx	r3
 800bd5a:	4603      	mov	r3, r0
    }
 800bd5c:	4618      	mov	r0, r3
 800bd5e:	3708      	adds	r7, #8
 800bd60:	46bd      	mov	sp, r7
 800bd62:	bd80      	pop	{r7, pc}

0800bd64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800bd64:	b480      	push	{r7}
 800bd66:	b085      	sub	sp, #20
 800bd68:	af00      	add	r7, sp, #0
 800bd6a:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800bd6c:	687b      	ldr	r3, [r7, #4]
 800bd6e:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800bd72:	687b      	ldr	r3, [r7, #4]
 800bd74:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800bd78:	429a      	cmp	r2, r3
 800bd7a:	d011      	beq.n	800bda0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800bd7c:	4b14      	ldr	r3, [pc, #80]	@ (800bdd0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800bd7e:	781b      	ldrb	r3, [r3, #0]
 800bd80:	2b00      	cmp	r3, #0
 800bd82:	d11e      	bne.n	800bdc2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800bd84:	4b13      	ldr	r3, [pc, #76]	@ (800bdd4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800bd86:	881b      	ldrh	r3, [r3, #0]
 800bd88:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800bd8a:	4b13      	ldr	r3, [pc, #76]	@ (800bdd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800bd8c:	881a      	ldrh	r2, [r3, #0]
 800bd8e:	4b11      	ldr	r3, [pc, #68]	@ (800bdd4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800bd90:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800bd92:	4a11      	ldr	r2, [pc, #68]	@ (800bdd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800bd94:	89bb      	ldrh	r3, [r7, #12]
 800bd96:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800bd98:	4b0d      	ldr	r3, [pc, #52]	@ (800bdd0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800bd9a:	2201      	movs	r2, #1
 800bd9c:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800bd9e:	e010      	b.n	800bdc2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800bda0:	4b0b      	ldr	r3, [pc, #44]	@ (800bdd0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800bda2:	781b      	ldrb	r3, [r3, #0]
 800bda4:	2b00      	cmp	r3, #0
 800bda6:	d00c      	beq.n	800bdc2 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800bda8:	4b0a      	ldr	r3, [pc, #40]	@ (800bdd4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800bdaa:	881b      	ldrh	r3, [r3, #0]
 800bdac:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800bdae:	4b0a      	ldr	r3, [pc, #40]	@ (800bdd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800bdb0:	881a      	ldrh	r2, [r3, #0]
 800bdb2:	4b08      	ldr	r3, [pc, #32]	@ (800bdd4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800bdb4:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800bdb6:	4a08      	ldr	r2, [pc, #32]	@ (800bdd8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800bdb8:	89fb      	ldrh	r3, [r7, #14]
 800bdba:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800bdbc:	4b04      	ldr	r3, [pc, #16]	@ (800bdd0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800bdbe:	2200      	movs	r2, #0
 800bdc0:	701a      	strb	r2, [r3, #0]
    }
 800bdc2:	bf00      	nop
 800bdc4:	3714      	adds	r7, #20
 800bdc6:	46bd      	mov	sp, r7
 800bdc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bdcc:	4770      	bx	lr
 800bdce:	bf00      	nop
 800bdd0:	20001b64 	.word	0x20001b64
 800bdd4:	20001b62 	.word	0x20001b62
 800bdd8:	20001b60 	.word	0x20001b60

0800bddc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800bddc:	b580      	push	{r7, lr}
 800bdde:	b082      	sub	sp, #8
 800bde0:	af00      	add	r7, sp, #0
 800bde2:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800bde4:	687b      	ldr	r3, [r7, #4]
 800bde6:	4618      	mov	r0, r3
 800bde8:	f002 f846 	bl	800de78 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800bdec:	bf00      	nop
 800bdee:	3708      	adds	r7, #8
 800bdf0:	46bd      	mov	sp, r7
 800bdf2:	bd80      	pop	{r7, pc}

0800bdf4 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800bdf4:	b580      	push	{r7, lr}
 800bdf6:	b082      	sub	sp, #8
 800bdf8:	af00      	add	r7, sp, #0
 800bdfa:	6078      	str	r0, [r7, #4]
 800bdfc:	4a05      	ldr	r2, [pc, #20]	@ (800be14 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800bdfe:	687b      	ldr	r3, [r7, #4]
 800be00:	601a      	str	r2, [r3, #0]
 800be02:	687b      	ldr	r3, [r7, #4]
 800be04:	4618      	mov	r0, r3
 800be06:	f7ff fe8d 	bl	800bb24 <_ZN8touchgfx3HALD1Ev>
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	4618      	mov	r0, r3
 800be0e:	3708      	adds	r7, #8
 800be10:	46bd      	mov	sp, r7
 800be12:	bd80      	pop	{r7, pc}
 800be14:	08022bbc 	.word	0x08022bbc

0800be18 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800be18:	b580      	push	{r7, lr}
 800be1a:	b082      	sub	sp, #8
 800be1c:	af00      	add	r7, sp, #0
 800be1e:	6078      	str	r0, [r7, #4]
 800be20:	6878      	ldr	r0, [r7, #4]
 800be22:	f7ff ffe7 	bl	800bdf4 <_ZN20TouchGFXGeneratedHALD1Ev>
 800be26:	217c      	movs	r1, #124	@ 0x7c
 800be28:	6878      	ldr	r0, [r7, #4]
 800be2a:	f014 ff04 	bl	8020c36 <_ZdlPvj>
 800be2e:	687b      	ldr	r3, [r7, #4]
 800be30:	4618      	mov	r0, r3
 800be32:	3708      	adds	r7, #8
 800be34:	46bd      	mov	sp, r7
 800be36:	bd80      	pop	{r7, pc}

0800be38 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800be38:	b580      	push	{r7, lr}
 800be3a:	b082      	sub	sp, #8
 800be3c:	af00      	add	r7, sp, #0
 800be3e:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800be40:	687b      	ldr	r3, [r7, #4]
 800be42:	4618      	mov	r0, r3
 800be44:	f7ff ffca 	bl	800bddc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800be48:	bf00      	nop
 800be4a:	3708      	adds	r7, #8
 800be4c:	46bd      	mov	sp, r7
 800be4e:	bd80      	pop	{r7, pc}

0800be50 <_ZN11TouchGFXHAL10initializeEv>:
/* USER CODE BEGIN TouchGFXHAL.cpp */

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800be50:	b580      	push	{r7, lr}
 800be52:	b082      	sub	sp, #8
 800be54:	af00      	add	r7, sp, #0
 800be56:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800be58:	687b      	ldr	r3, [r7, #4]
 800be5a:	4618      	mov	r0, r3
 800be5c:	f001 fbe0 	bl	800d620 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800be60:	bf00      	nop
 800be62:	3708      	adds	r7, #8
 800be64:	46bd      	mov	sp, r7
 800be66:	bd80      	pop	{r7, pc}

0800be68 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800be68:	b580      	push	{r7, lr}
 800be6a:	b082      	sub	sp, #8
 800be6c:	af00      	add	r7, sp, #0
 800be6e:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800be70:	687b      	ldr	r3, [r7, #4]
 800be72:	4618      	mov	r0, r3
 800be74:	f001 fc7a 	bl	800d76c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800be78:	4603      	mov	r3, r0
}
 800be7a:	4618      	mov	r0, r3
 800be7c:	3708      	adds	r7, #8
 800be7e:	46bd      	mov	sp, r7
 800be80:	bd80      	pop	{r7, pc}

0800be82 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800be82:	b580      	push	{r7, lr}
 800be84:	b082      	sub	sp, #8
 800be86:	af00      	add	r7, sp, #0
 800be88:	6078      	str	r0, [r7, #4]
 800be8a:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	6839      	ldr	r1, [r7, #0]
 800be90:	4618      	mov	r0, r3
 800be92:	f001 fc79 	bl	800d788 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800be96:	bf00      	nop
 800be98:	3708      	adds	r7, #8
 800be9a:	46bd      	mov	sp, r7
 800be9c:	bd80      	pop	{r7, pc}

0800be9e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800be9e:	b580      	push	{r7, lr}
 800bea0:	b082      	sub	sp, #8
 800bea2:	af00      	add	r7, sp, #0
 800bea4:	6078      	str	r0, [r7, #4]
 800bea6:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate the start address of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800bea8:	687b      	ldr	r3, [r7, #4]
 800beaa:	6839      	ldr	r1, [r7, #0]
 800beac:	4618      	mov	r0, r3
 800beae:	f001 fc81 	bl	800d7b4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800beb2:	bf00      	nop
 800beb4:	3708      	adds	r7, #8
 800beb6:	46bd      	mov	sp, r7
 800beb8:	bd80      	pop	{r7, pc}

0800beba <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800beba:	b580      	push	{r7, lr}
 800bebc:	b084      	sub	sp, #16
 800bebe:	af00      	add	r7, sp, #0
 800bec0:	60f8      	str	r0, [r7, #12]
 800bec2:	60b9      	str	r1, [r7, #8]
 800bec4:	607a      	str	r2, [r7, #4]
 800bec6:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800bec8:	68f8      	ldr	r0, [r7, #12]
 800beca:	683b      	ldr	r3, [r7, #0]
 800becc:	687a      	ldr	r2, [r7, #4]
 800bece:	68b9      	ldr	r1, [r7, #8]
 800bed0:	f001 fc7e 	bl	800d7d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800bed4:	4603      	mov	r3, r0
}
 800bed6:	4618      	mov	r0, r3
 800bed8:	3710      	adds	r7, #16
 800beda:	46bd      	mov	sp, r7
 800bedc:	bd80      	pop	{r7, pc}

0800bede <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800bede:	b580      	push	{r7, lr}
 800bee0:	b082      	sub	sp, #8
 800bee2:	af00      	add	r7, sp, #0
 800bee4:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800bee6:	687b      	ldr	r3, [r7, #4]
 800bee8:	4618      	mov	r0, r3
 800beea:	f001 fbc9 	bl	800d680 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800beee:	bf00      	nop
 800bef0:	3708      	adds	r7, #8
 800bef2:	46bd      	mov	sp, r7
 800bef4:	bd80      	pop	{r7, pc}

0800bef6 <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800bef6:	b580      	push	{r7, lr}
 800bef8:	b082      	sub	sp, #8
 800befa:	af00      	add	r7, sp, #0
 800befc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800befe:	687b      	ldr	r3, [r7, #4]
 800bf00:	4618      	mov	r0, r3
 800bf02:	f001 fbcd 	bl	800d6a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800bf06:	bf00      	nop
 800bf08:	3708      	adds	r7, #8
 800bf0a:	46bd      	mov	sp, r7
 800bf0c:	bd80      	pop	{r7, pc}

0800bf0e <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800bf0e:	b580      	push	{r7, lr}
 800bf10:	b082      	sub	sp, #8
 800bf12:	af00      	add	r7, sp, #0
 800bf14:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800bf16:	687b      	ldr	r3, [r7, #4]
 800bf18:	4618      	mov	r0, r3
 800bf1a:	f001 fbcf 	bl	800d6bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800bf1e:	bf00      	nop
 800bf20:	3708      	adds	r7, #8
 800bf22:	46bd      	mov	sp, r7
 800bf24:	bd80      	pop	{r7, pc}

0800bf26 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800bf26:	b580      	push	{r7, lr}
 800bf28:	b082      	sub	sp, #8
 800bf2a:	af00      	add	r7, sp, #0
 800bf2c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800bf2e:	687b      	ldr	r3, [r7, #4]
 800bf30:	4618      	mov	r0, r3
 800bf32:	f001 fbd1 	bl	800d6d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800bf36:	bf00      	nop
 800bf38:	3708      	adds	r7, #8
 800bf3a:	46bd      	mov	sp, r7
 800bf3c:	bd80      	pop	{r7, pc}

0800bf3e <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800bf3e:	b580      	push	{r7, lr}
 800bf40:	b082      	sub	sp, #8
 800bf42:	af00      	add	r7, sp, #0
 800bf44:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	4618      	mov	r0, r3
 800bf4a:	f001 fbf3 	bl	800d734 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800bf4e:	4603      	mov	r3, r0
}
 800bf50:	4618      	mov	r0, r3
 800bf52:	3708      	adds	r7, #8
 800bf54:	46bd      	mov	sp, r7
 800bf56:	bd80      	pop	{r7, pc}

0800bf58 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800bf58:	b580      	push	{r7, lr}
 800bf5a:	b082      	sub	sp, #8
 800bf5c:	af00      	add	r7, sp, #0
 800bf5e:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800bf60:	687b      	ldr	r3, [r7, #4]
 800bf62:	4618      	mov	r0, r3
 800bf64:	f001 fbf3 	bl	800d74e <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800bf68:	bf00      	nop
 800bf6a:	3708      	adds	r7, #8
 800bf6c:	46bd      	mov	sp, r7
 800bf6e:	bd80      	pop	{r7, pc}

0800bf70 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800bf70:	b580      	push	{r7, lr}
 800bf72:	b082      	sub	sp, #8
 800bf74:	af00      	add	r7, sp, #0
 800bf76:	6078      	str	r0, [r7, #4]
 800bf78:	4a05      	ldr	r2, [pc, #20]	@ (800bf90 <_ZN11TouchGFXHALD1Ev+0x20>)
 800bf7a:	687b      	ldr	r3, [r7, #4]
 800bf7c:	601a      	str	r2, [r3, #0]
 800bf7e:	687b      	ldr	r3, [r7, #4]
 800bf80:	4618      	mov	r0, r3
 800bf82:	f7ff ff37 	bl	800bdf4 <_ZN20TouchGFXGeneratedHALD1Ev>
 800bf86:	687b      	ldr	r3, [r7, #4]
 800bf88:	4618      	mov	r0, r3
 800bf8a:	3708      	adds	r7, #8
 800bf8c:	46bd      	mov	sp, r7
 800bf8e:	bd80      	pop	{r7, pc}
 800bf90:	0802299c 	.word	0x0802299c

0800bf94 <_ZN11TouchGFXHALD0Ev>:
 800bf94:	b580      	push	{r7, lr}
 800bf96:	b082      	sub	sp, #8
 800bf98:	af00      	add	r7, sp, #0
 800bf9a:	6078      	str	r0, [r7, #4]
 800bf9c:	6878      	ldr	r0, [r7, #4]
 800bf9e:	f7ff ffe7 	bl	800bf70 <_ZN11TouchGFXHALD1Ev>
 800bfa2:	217c      	movs	r1, #124	@ 0x7c
 800bfa4:	6878      	ldr	r0, [r7, #4]
 800bfa6:	f014 fe46 	bl	8020c36 <_ZdlPvj>
 800bfaa:	687b      	ldr	r3, [r7, #4]
 800bfac:	4618      	mov	r0, r3
 800bfae:	3708      	adds	r7, #8
 800bfb0:	46bd      	mov	sp, r7
 800bfb2:	bd80      	pop	{r7, pc}

0800bfb4 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800bfb4:	b480      	push	{r7}
 800bfb6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800bfb8:	4b05      	ldr	r3, [pc, #20]	@ (800bfd0 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800bfba:	2200      	movs	r2, #0
 800bfbc:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800bfbe:	4b05      	ldr	r3, [pc, #20]	@ (800bfd4 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800bfc0:	2200      	movs	r2, #0
 800bfc2:	601a      	str	r2, [r3, #0]
}
 800bfc4:	bf00      	nop
 800bfc6:	46bd      	mov	sp, r7
 800bfc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bfcc:	4770      	bx	lr
 800bfce:	bf00      	nop
 800bfd0:	20000a8c 	.word	0x20000a8c
 800bfd4:	20000a90 	.word	0x20000a90

0800bfd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800bfd8:	b480      	push	{r7}
 800bfda:	af00      	add	r7, sp, #0
    while (fb_sem);
 800bfdc:	bf00      	nop
 800bfde:	4b08      	ldr	r3, [pc, #32]	@ (800c000 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800bfe0:	681b      	ldr	r3, [r3, #0]
 800bfe2:	2b00      	cmp	r3, #0
 800bfe4:	bf14      	ite	ne
 800bfe6:	2301      	movne	r3, #1
 800bfe8:	2300      	moveq	r3, #0
 800bfea:	b2db      	uxtb	r3, r3
 800bfec:	2b00      	cmp	r3, #0
 800bfee:	d1f6      	bne.n	800bfde <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800bff0:	4b03      	ldr	r3, [pc, #12]	@ (800c000 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800bff2:	2201      	movs	r2, #1
 800bff4:	601a      	str	r2, [r3, #0]
}
 800bff6:	bf00      	nop
 800bff8:	46bd      	mov	sp, r7
 800bffa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bffe:	4770      	bx	lr
 800c000:	20000a8c 	.word	0x20000a8c

0800c004 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800c004:	b480      	push	{r7}
 800c006:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800c008:	4b03      	ldr	r3, [pc, #12]	@ (800c018 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800c00a:	2200      	movs	r2, #0
 800c00c:	601a      	str	r2, [r3, #0]
}
 800c00e:	bf00      	nop
 800c010:	46bd      	mov	sp, r7
 800c012:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c016:	4770      	bx	lr
 800c018:	20000a8c 	.word	0x20000a8c

0800c01c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800c01c:	b480      	push	{r7}
 800c01e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800c020:	4b03      	ldr	r3, [pc, #12]	@ (800c030 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800c022:	2201      	movs	r2, #1
 800c024:	601a      	str	r2, [r3, #0]
}
 800c026:	bf00      	nop
 800c028:	46bd      	mov	sp, r7
 800c02a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c02e:	4770      	bx	lr
 800c030:	20000a8c 	.word	0x20000a8c

0800c034 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800c034:	b480      	push	{r7}
 800c036:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800c038:	4b03      	ldr	r3, [pc, #12]	@ (800c048 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800c03a:	2200      	movs	r2, #0
 800c03c:	601a      	str	r2, [r3, #0]
}
 800c03e:	bf00      	nop
 800c040:	46bd      	mov	sp, r7
 800c042:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c046:	4770      	bx	lr
 800c048:	20000a8c 	.word	0x20000a8c

0800c04c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800c04c:	b480      	push	{r7}
 800c04e:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800c050:	4b03      	ldr	r3, [pc, #12]	@ (800c060 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800c052:	2201      	movs	r2, #1
 800c054:	601a      	str	r2, [r3, #0]
}
 800c056:	bf00      	nop
 800c058:	46bd      	mov	sp, r7
 800c05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c05e:	4770      	bx	lr
 800c060:	20000a90 	.word	0x20000a90

0800c064 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800c064:	b480      	push	{r7}
 800c066:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800c068:	4b03      	ldr	r3, [pc, #12]	@ (800c078 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800c06a:	2200      	movs	r2, #0
 800c06c:	601a      	str	r2, [r3, #0]
}
 800c06e:	bf00      	nop
 800c070:	46bd      	mov	sp, r7
 800c072:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c076:	4770      	bx	lr
 800c078:	20000a90 	.word	0x20000a90

0800c07c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800c07c:	b480      	push	{r7}
 800c07e:	af00      	add	r7, sp, #0
    return vsync_sem;
 800c080:	4b05      	ldr	r3, [pc, #20]	@ (800c098 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800c082:	681b      	ldr	r3, [r3, #0]
 800c084:	2b00      	cmp	r3, #0
 800c086:	bf14      	ite	ne
 800c088:	2301      	movne	r3, #1
 800c08a:	2300      	moveq	r3, #0
 800c08c:	b2db      	uxtb	r3, r3
}
 800c08e:	4618      	mov	r0, r3
 800c090:	46bd      	mov	sp, r7
 800c092:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c096:	4770      	bx	lr
 800c098:	20000a90 	.word	0x20000a90

0800c09c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800c09c:	b580      	push	{r7, lr}
 800c09e:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800c0a0:	4b0a      	ldr	r3, [pc, #40]	@ (800c0cc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800c0a2:	681b      	ldr	r3, [r3, #0]
 800c0a4:	2b00      	cmp	r3, #0
 800c0a6:	bf14      	ite	ne
 800c0a8:	2301      	movne	r3, #1
 800c0aa:	2300      	moveq	r3, #0
 800c0ac:	b2db      	uxtb	r3, r3
 800c0ae:	2b00      	cmp	r3, #0
 800c0b0:	d00a      	beq.n	800c0c8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800c0b2:	4b06      	ldr	r3, [pc, #24]	@ (800c0cc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800c0b4:	2200      	movs	r2, #0
 800c0b6:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800c0b8:	f7fe f8ea 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800c0bc:	4603      	mov	r3, r0
 800c0be:	681a      	ldr	r2, [r3, #0]
 800c0c0:	3270      	adds	r2, #112	@ 0x70
 800c0c2:	6812      	ldr	r2, [r2, #0]
 800c0c4:	4618      	mov	r0, r3
 800c0c6:	4790      	blx	r2
    }
}
 800c0c8:	bf00      	nop
 800c0ca:	bd80      	pop	{r7, pc}
 800c0cc:	20000a90 	.word	0x20000a90

0800c0d0 <__NVIC_EnableIRQ>:
{
 800c0d0:	b480      	push	{r7}
 800c0d2:	b083      	sub	sp, #12
 800c0d4:	af00      	add	r7, sp, #0
 800c0d6:	4603      	mov	r3, r0
 800c0d8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800c0da:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c0de:	2b00      	cmp	r3, #0
 800c0e0:	db0b      	blt.n	800c0fa <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800c0e2:	79fb      	ldrb	r3, [r7, #7]
 800c0e4:	f003 021f 	and.w	r2, r3, #31
 800c0e8:	4907      	ldr	r1, [pc, #28]	@ (800c108 <__NVIC_EnableIRQ+0x38>)
 800c0ea:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c0ee:	095b      	lsrs	r3, r3, #5
 800c0f0:	2001      	movs	r0, #1
 800c0f2:	fa00 f202 	lsl.w	r2, r0, r2
 800c0f6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800c0fa:	bf00      	nop
 800c0fc:	370c      	adds	r7, #12
 800c0fe:	46bd      	mov	sp, r7
 800c100:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c104:	4770      	bx	lr
 800c106:	bf00      	nop
 800c108:	e000e100 	.word	0xe000e100

0800c10c <__NVIC_DisableIRQ>:
{
 800c10c:	b480      	push	{r7}
 800c10e:	b083      	sub	sp, #12
 800c110:	af00      	add	r7, sp, #0
 800c112:	4603      	mov	r3, r0
 800c114:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800c116:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c11a:	2b00      	cmp	r3, #0
 800c11c:	db12      	blt.n	800c144 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800c11e:	79fb      	ldrb	r3, [r7, #7]
 800c120:	f003 021f 	and.w	r2, r3, #31
 800c124:	490a      	ldr	r1, [pc, #40]	@ (800c150 <__NVIC_DisableIRQ+0x44>)
 800c126:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800c12a:	095b      	lsrs	r3, r3, #5
 800c12c:	2001      	movs	r0, #1
 800c12e:	fa00 f202 	lsl.w	r2, r0, r2
 800c132:	3320      	adds	r3, #32
 800c134:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800c138:	f3bf 8f4f 	dsb	sy
}
 800c13c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800c13e:	f3bf 8f6f 	isb	sy
}
 800c142:	bf00      	nop
}
 800c144:	bf00      	nop
 800c146:	370c      	adds	r7, #12
 800c148:	46bd      	mov	sp, r7
 800c14a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c14e:	4770      	bx	lr
 800c150:	e000e100 	.word	0xe000e100

0800c154 <SCB_CleanDCache_by_Addr>:
{
 800c154:	b480      	push	{r7}
 800c156:	b087      	sub	sp, #28
 800c158:	af00      	add	r7, sp, #0
 800c15a:	6078      	str	r0, [r7, #4]
 800c15c:	6039      	str	r1, [r7, #0]
     int32_t op_size = dsize;
 800c15e:	683b      	ldr	r3, [r7, #0]
 800c160:	617b      	str	r3, [r7, #20]
    uint32_t op_addr = (uint32_t) addr;
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	613b      	str	r3, [r7, #16]
     int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */
 800c166:	2320      	movs	r3, #32
 800c168:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 800c16a:	f3bf 8f4f 	dsb	sy
}
 800c16e:	bf00      	nop
    while (op_size > 0) {
 800c170:	e00b      	b.n	800c18a <SCB_CleanDCache_by_Addr+0x36>
      SCB->DCCMVAC = op_addr;
 800c172:	4a0d      	ldr	r2, [pc, #52]	@ (800c1a8 <SCB_CleanDCache_by_Addr+0x54>)
 800c174:	693b      	ldr	r3, [r7, #16]
 800c176:	f8c2 3268 	str.w	r3, [r2, #616]	@ 0x268
      op_addr += (uint32_t)linesize;
 800c17a:	68fb      	ldr	r3, [r7, #12]
 800c17c:	693a      	ldr	r2, [r7, #16]
 800c17e:	4413      	add	r3, r2
 800c180:	613b      	str	r3, [r7, #16]
      op_size -=           linesize;
 800c182:	697a      	ldr	r2, [r7, #20]
 800c184:	68fb      	ldr	r3, [r7, #12]
 800c186:	1ad3      	subs	r3, r2, r3
 800c188:	617b      	str	r3, [r7, #20]
    while (op_size > 0) {
 800c18a:	697b      	ldr	r3, [r7, #20]
 800c18c:	2b00      	cmp	r3, #0
 800c18e:	dcf0      	bgt.n	800c172 <SCB_CleanDCache_by_Addr+0x1e>
  __ASM volatile ("dsb 0xF":::"memory");
 800c190:	f3bf 8f4f 	dsb	sy
}
 800c194:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800c196:	f3bf 8f6f 	isb	sy
}
 800c19a:	bf00      	nop
}
 800c19c:	bf00      	nop
 800c19e:	371c      	adds	r7, #28
 800c1a0:	46bd      	mov	sp, r7
 800c1a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1a6:	4770      	bx	lr
 800c1a8:	e000ed00 	.word	0xe000ed00

0800c1ac <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800c1ac:	b480      	push	{r7}
 800c1ae:	b083      	sub	sp, #12
 800c1b0:	af00      	add	r7, sp, #0
 800c1b2:	6078      	str	r0, [r7, #4]
        : color(0)
 800c1b4:	687b      	ldr	r3, [r7, #4]
 800c1b6:	2200      	movs	r2, #0
 800c1b8:	601a      	str	r2, [r3, #0]
    }
 800c1ba:	687b      	ldr	r3, [r7, #4]
 800c1bc:	4618      	mov	r0, r3
 800c1be:	370c      	adds	r7, #12
 800c1c0:	46bd      	mov	sp, r7
 800c1c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1c6:	4770      	bx	lr

0800c1c8 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800c1c8:	b480      	push	{r7}
 800c1ca:	b083      	sub	sp, #12
 800c1cc:	af00      	add	r7, sp, #0
 800c1ce:	6078      	str	r0, [r7, #4]
        return color;
 800c1d0:	687b      	ldr	r3, [r7, #4]
 800c1d2:	681b      	ldr	r3, [r3, #0]
    }
 800c1d4:	4618      	mov	r0, r3
 800c1d6:	370c      	adds	r7, #12
 800c1d8:	46bd      	mov	sp, r7
 800c1da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1de:	4770      	bx	lr

0800c1e0 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800c1e0:	b480      	push	{r7}
 800c1e2:	b083      	sub	sp, #12
 800c1e4:	af00      	add	r7, sp, #0
 800c1e6:	6078      	str	r0, [r7, #4]
    {
 800c1e8:	4a04      	ldr	r2, [pc, #16]	@ (800c1fc <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800c1ea:	687b      	ldr	r3, [r7, #4]
 800c1ec:	601a      	str	r2, [r3, #0]
    }
 800c1ee:	687b      	ldr	r3, [r7, #4]
 800c1f0:	4618      	mov	r0, r3
 800c1f2:	370c      	adds	r7, #12
 800c1f4:	46bd      	mov	sp, r7
 800c1f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1fa:	4770      	bx	lr
 800c1fc:	08022ac4 	.word	0x08022ac4

0800c200 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800c200:	b580      	push	{r7, lr}
 800c202:	b082      	sub	sp, #8
 800c204:	af00      	add	r7, sp, #0
 800c206:	6078      	str	r0, [r7, #4]
    }
 800c208:	6878      	ldr	r0, [r7, #4]
 800c20a:	f7ff ffe9 	bl	800c1e0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800c20e:	2104      	movs	r1, #4
 800c210:	6878      	ldr	r0, [r7, #4]
 800c212:	f014 fd10 	bl	8020c36 <_ZdlPvj>
 800c216:	687b      	ldr	r3, [r7, #4]
 800c218:	4618      	mov	r0, r3
 800c21a:	3708      	adds	r7, #8
 800c21c:	46bd      	mov	sp, r7
 800c21e:	bd80      	pop	{r7, pc}

0800c220 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 800c220:	b580      	push	{r7, lr}
 800c222:	b082      	sub	sp, #8
 800c224:	af00      	add	r7, sp, #0
 800c226:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800c228:	687b      	ldr	r3, [r7, #4]
 800c22a:	681b      	ldr	r3, [r3, #0]
 800c22c:	3344      	adds	r3, #68	@ 0x44
 800c22e:	681b      	ldr	r3, [r3, #0]
 800c230:	6878      	ldr	r0, [r7, #4]
 800c232:	4798      	blx	r3
    }
 800c234:	bf00      	nop
 800c236:	3708      	adds	r7, #8
 800c238:	46bd      	mov	sp, r7
 800c23a:	bd80      	pop	{r7, pc}

0800c23c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800c23c:	b480      	push	{r7}
 800c23e:	b083      	sub	sp, #12
 800c240:	af00      	add	r7, sp, #0
 800c242:	6078      	str	r0, [r7, #4]
    {
 800c244:	4a04      	ldr	r2, [pc, #16]	@ (800c258 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800c246:	687b      	ldr	r3, [r7, #4]
 800c248:	601a      	str	r2, [r3, #0]
    }
 800c24a:	687b      	ldr	r3, [r7, #4]
 800c24c:	4618      	mov	r0, r3
 800c24e:	370c      	adds	r7, #12
 800c250:	46bd      	mov	sp, r7
 800c252:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c256:	4770      	bx	lr
 800c258:	08022e3c 	.word	0x08022e3c

0800c25c <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800c25c:	b580      	push	{r7, lr}
 800c25e:	b082      	sub	sp, #8
 800c260:	af00      	add	r7, sp, #0
 800c262:	6078      	str	r0, [r7, #4]
    }
 800c264:	6878      	ldr	r0, [r7, #4]
 800c266:	f7ff ffe9 	bl	800c23c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800c26a:	210c      	movs	r1, #12
 800c26c:	6878      	ldr	r0, [r7, #4]
 800c26e:	f014 fce2 	bl	8020c36 <_ZdlPvj>
 800c272:	687b      	ldr	r3, [r7, #4]
 800c274:	4618      	mov	r0, r3
 800c276:	3708      	adds	r7, #8
 800c278:	46bd      	mov	sp, r7
 800c27a:	bd80      	pop	{r7, pc}

0800c27c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800c27c:	b480      	push	{r7}
 800c27e:	b083      	sub	sp, #12
 800c280:	af00      	add	r7, sp, #0
 800c282:	6078      	str	r0, [r7, #4]
 800c284:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800c286:	4a09      	ldr	r2, [pc, #36]	@ (800c2ac <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800c288:	687b      	ldr	r3, [r7, #4]
 800c28a:	601a      	str	r2, [r3, #0]
 800c28c:	687b      	ldr	r3, [r7, #4]
 800c28e:	683a      	ldr	r2, [r7, #0]
 800c290:	605a      	str	r2, [r3, #4]
 800c292:	687b      	ldr	r3, [r7, #4]
 800c294:	2200      	movs	r2, #0
 800c296:	721a      	strb	r2, [r3, #8]
 800c298:	687b      	ldr	r3, [r7, #4]
 800c29a:	2200      	movs	r2, #0
 800c29c:	725a      	strb	r2, [r3, #9]
    {
    }
 800c29e:	687b      	ldr	r3, [r7, #4]
 800c2a0:	4618      	mov	r0, r3
 800c2a2:	370c      	adds	r7, #12
 800c2a4:	46bd      	mov	sp, r7
 800c2a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2aa:	4770      	bx	lr
 800c2ac:	08022e3c 	.word	0x08022e3c

0800c2b0 <_ZN8STM32DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 800c2b0:	b480      	push	{r7}
 800c2b2:	b083      	sub	sp, #12
 800c2b4:	af00      	add	r7, sp, #0
 800c2b6:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 800c2b8:	2301      	movs	r3, #1
    }
 800c2ba:	4618      	mov	r0, r3
 800c2bc:	370c      	adds	r7, #12
 800c2be:	46bd      	mov	sp, r7
 800c2c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c2c4:	4770      	bx	lr

0800c2c6 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800c2c6:	b580      	push	{r7, lr}
 800c2c8:	b082      	sub	sp, #8
 800c2ca:	af00      	add	r7, sp, #0
 800c2cc:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800c2ce:	687a      	ldr	r2, [r7, #4]
 800c2d0:	687b      	ldr	r3, [r7, #4]
 800c2d2:	681b      	ldr	r3, [r3, #0]
 800c2d4:	3328      	adds	r3, #40	@ 0x28
 800c2d6:	681b      	ldr	r3, [r3, #0]
 800c2d8:	4610      	mov	r0, r2
 800c2da:	4798      	blx	r3
    }
 800c2dc:	bf00      	nop
 800c2de:	3708      	adds	r7, #8
 800c2e0:	46bd      	mov	sp, r7
 800c2e2:	bd80      	pop	{r7, pc}

0800c2e4 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800c2e4:	b580      	push	{r7, lr}
 800c2e6:	b082      	sub	sp, #8
 800c2e8:	af00      	add	r7, sp, #0
 800c2ea:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800c2ec:	687b      	ldr	r3, [r7, #4]
 800c2ee:	685a      	ldr	r2, [r3, #4]
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	685b      	ldr	r3, [r3, #4]
 800c2f4:	681b      	ldr	r3, [r3, #0]
 800c2f6:	3314      	adds	r3, #20
 800c2f8:	681b      	ldr	r3, [r3, #0]
 800c2fa:	4610      	mov	r0, r2
 800c2fc:	4798      	blx	r3
    }
 800c2fe:	bf00      	nop
 800c300:	3708      	adds	r7, #8
 800c302:	46bd      	mov	sp, r7
 800c304:	bd80      	pop	{r7, pc}

0800c306 <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
    static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
    {
 800c306:	b580      	push	{r7, lr}
 800c308:	b082      	sub	sp, #8
 800c30a:	af00      	add	r7, sp, #0
 800c30c:	6078      	str	r0, [r7, #4]
        (void)handle; // Unused argument
        HAL::getInstance()->signalDMAInterrupt();
 800c30e:	f7fd ffbf 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800c312:	4603      	mov	r3, r0
 800c314:	4618      	mov	r0, r3
 800c316:	f7ff ffe5 	bl	800c2e4 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
    }
 800c31a:	bf00      	nop
 800c31c:	3708      	adds	r7, #8
 800c31e:	46bd      	mov	sp, r7
 800c320:	bd80      	pop	{r7, pc}

0800c322 <DMA2D_XferErrorCallback>:

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
 800c322:	b480      	push	{r7}
 800c324:	b083      	sub	sp, #12
 800c326:	af00      	add	r7, sp, #0
 800c328:	6078      	str	r0, [r7, #4]
        (void)handle; // Unused argument
        while (1)
 800c32a:	bf00      	nop
 800c32c:	e7fd      	b.n	800c32a <DMA2D_XferErrorCallback+0x8>

0800c32e <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800c32e:	b580      	push	{r7, lr}
 800c330:	b082      	sub	sp, #8
 800c332:	af00      	add	r7, sp, #0
 800c334:	6078      	str	r0, [r7, #4]
 800c336:	687b      	ldr	r3, [r7, #4]
 800c338:	330c      	adds	r3, #12
 800c33a:	4618      	mov	r0, r3
 800c33c:	f7ff ff36 	bl	800c1ac <_ZN8touchgfx9colortypeC1Ev>
 800c340:	687b      	ldr	r3, [r7, #4]
 800c342:	4618      	mov	r0, r3
 800c344:	3708      	adds	r7, #8
 800c346:	46bd      	mov	sp, r7
 800c348:	bd80      	pop	{r7, pc}
	...

0800c34c <_ZN8STM32DMAC1Ev>:

        }
    }
}

STM32DMA::STM32DMA()
 800c34c:	b5b0      	push	{r4, r5, r7, lr}
 800c34e:	b082      	sub	sp, #8
 800c350:	af00      	add	r7, sp, #0
 800c352:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800c354:	687a      	ldr	r2, [r7, #4]
 800c356:	687b      	ldr	r3, [r7, #4]
 800c358:	330c      	adds	r3, #12
 800c35a:	4619      	mov	r1, r3
 800c35c:	4610      	mov	r0, r2
 800c35e:	f7ff ff8d 	bl	800c27c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800c362:	4a0e      	ldr	r2, [pc, #56]	@ (800c39c <_ZN8STM32DMAC1Ev+0x50>)
 800c364:	687b      	ldr	r3, [r7, #4]
 800c366:	601a      	str	r2, [r3, #0]
 800c368:	687b      	ldr	r3, [r7, #4]
 800c36a:	f103 000c 	add.w	r0, r3, #12
 800c36e:	687b      	ldr	r3, [r7, #4]
 800c370:	3320      	adds	r3, #32
 800c372:	2260      	movs	r2, #96	@ 0x60
 800c374:	4619      	mov	r1, r3
 800c376:	f002 fc5b 	bl	800ec30 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800c37a:	687b      	ldr	r3, [r7, #4]
 800c37c:	3320      	adds	r3, #32
 800c37e:	245f      	movs	r4, #95	@ 0x5f
 800c380:	461d      	mov	r5, r3
 800c382:	e004      	b.n	800c38e <_ZN8STM32DMAC1Ev+0x42>
 800c384:	4628      	mov	r0, r5
 800c386:	f7ff ffd2 	bl	800c32e <_ZN8touchgfx6BlitOpC1Ev>
 800c38a:	3c01      	subs	r4, #1
 800c38c:	3524      	adds	r5, #36	@ 0x24
 800c38e:	2c00      	cmp	r4, #0
 800c390:	daf8      	bge.n	800c384 <_ZN8STM32DMAC1Ev+0x38>
{
}
 800c392:	687b      	ldr	r3, [r7, #4]
 800c394:	4618      	mov	r0, r3
 800c396:	3708      	adds	r7, #8
 800c398:	46bd      	mov	sp, r7
 800c39a:	bdb0      	pop	{r4, r5, r7, pc}
 800c39c:	08022a74 	.word	0x08022a74

0800c3a0 <_ZN8STM32DMAD1Ev>:

STM32DMA::~STM32DMA()
 800c3a0:	b580      	push	{r7, lr}
 800c3a2:	b082      	sub	sp, #8
 800c3a4:	af00      	add	r7, sp, #0
 800c3a6:	6078      	str	r0, [r7, #4]
 800c3a8:	4a09      	ldr	r2, [pc, #36]	@ (800c3d0 <_ZN8STM32DMAD1Ev+0x30>)
 800c3aa:	687b      	ldr	r3, [r7, #4]
 800c3ac:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 800c3ae:	205a      	movs	r0, #90	@ 0x5a
 800c3b0:	f7ff feac 	bl	800c10c <__NVIC_DisableIRQ>
}
 800c3b4:	687b      	ldr	r3, [r7, #4]
 800c3b6:	330c      	adds	r3, #12
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	f000 fb7d 	bl	800cab8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800c3be:	687b      	ldr	r3, [r7, #4]
 800c3c0:	4618      	mov	r0, r3
 800c3c2:	f7ff ff3b 	bl	800c23c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800c3c6:	687b      	ldr	r3, [r7, #4]
 800c3c8:	4618      	mov	r0, r3
 800c3ca:	3708      	adds	r7, #8
 800c3cc:	46bd      	mov	sp, r7
 800c3ce:	bd80      	pop	{r7, pc}
 800c3d0:	08022a74 	.word	0x08022a74

0800c3d4 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800c3d4:	b580      	push	{r7, lr}
 800c3d6:	b082      	sub	sp, #8
 800c3d8:	af00      	add	r7, sp, #0
 800c3da:	6078      	str	r0, [r7, #4]
}
 800c3dc:	6878      	ldr	r0, [r7, #4]
 800c3de:	f7ff ffdf 	bl	800c3a0 <_ZN8STM32DMAD1Ev>
 800c3e2:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 800c3e6:	6878      	ldr	r0, [r7, #4]
 800c3e8:	f014 fc25 	bl	8020c36 <_ZdlPvj>
 800c3ec:	687b      	ldr	r3, [r7, #4]
 800c3ee:	4618      	mov	r0, r3
 800c3f0:	3708      	adds	r7, #8
 800c3f2:	46bd      	mov	sp, r7
 800c3f4:	bd80      	pop	{r7, pc}
	...

0800c3f8 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 800c3f8:	b580      	push	{r7, lr}
 800c3fa:	b084      	sub	sp, #16
 800c3fc:	af00      	add	r7, sp, #0
 800c3fe:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800c400:	4b12      	ldr	r3, [pc, #72]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c402:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c404:	4a11      	ldr	r2, [pc, #68]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c406:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800c40a:	6313      	str	r3, [r2, #48]	@ 0x30
 800c40c:	4b0f      	ldr	r3, [pc, #60]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c40e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800c410:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800c414:	60fb      	str	r3, [r7, #12]
 800c416:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800c418:	4b0c      	ldr	r3, [pc, #48]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c41a:	691b      	ldr	r3, [r3, #16]
 800c41c:	4a0b      	ldr	r2, [pc, #44]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c41e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800c422:	6113      	str	r3, [r2, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800c424:	4b09      	ldr	r3, [pc, #36]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c426:	691b      	ldr	r3, [r3, #16]
 800c428:	4a08      	ldr	r2, [pc, #32]	@ (800c44c <_ZN8STM32DMA10initializeEv+0x54>)
 800c42a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 800c42e:	6113      	str	r3, [r2, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800c430:	4b07      	ldr	r3, [pc, #28]	@ (800c450 <_ZN8STM32DMA10initializeEv+0x58>)
 800c432:	4a08      	ldr	r2, [pc, #32]	@ (800c454 <_ZN8STM32DMA10initializeEv+0x5c>)
 800c434:	611a      	str	r2, [r3, #16]

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 800c436:	4b06      	ldr	r3, [pc, #24]	@ (800c450 <_ZN8STM32DMA10initializeEv+0x58>)
 800c438:	4a07      	ldr	r2, [pc, #28]	@ (800c458 <_ZN8STM32DMA10initializeEv+0x60>)
 800c43a:	615a      	str	r2, [r3, #20]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
 800c43c:	205a      	movs	r0, #90	@ 0x5a
 800c43e:	f7ff fe47 	bl	800c0d0 <__NVIC_EnableIRQ>
}
 800c442:	bf00      	nop
 800c444:	3710      	adds	r7, #16
 800c446:	46bd      	mov	sp, r7
 800c448:	bd80      	pop	{r7, pc}
 800c44a:	bf00      	nop
 800c44c:	40023800 	.word	0x40023800
 800c450:	200004a0 	.word	0x200004a0
 800c454:	0800c307 	.word	0x0800c307
 800c458:	0800c323 	.word	0x0800c323

0800c45c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 800c45c:	b580      	push	{r7, lr}
 800c45e:	b084      	sub	sp, #16
 800c460:	af00      	add	r7, sp, #0
 800c462:	6078      	str	r0, [r7, #4]
 800c464:	460b      	mov	r3, r1
 800c466:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800c468:	2300      	movs	r3, #0
 800c46a:	60fb      	str	r3, [r7, #12]

    switch (format)
 800c46c:	78fb      	ldrb	r3, [r7, #3]
 800c46e:	2b0b      	cmp	r3, #11
 800c470:	d826      	bhi.n	800c4c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 800c472:	a201      	add	r2, pc, #4	@ (adr r2, 800c478 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800c474:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c478:	0800c4b5 	.word	0x0800c4b5
 800c47c:	0800c4af 	.word	0x0800c4af
 800c480:	0800c4a9 	.word	0x0800c4a9
 800c484:	0800c4c1 	.word	0x0800c4c1
 800c488:	0800c4c1 	.word	0x0800c4c1
 800c48c:	0800c4c1 	.word	0x0800c4c1
 800c490:	0800c4c1 	.word	0x0800c4c1
 800c494:	0800c4bb 	.word	0x0800c4bb
 800c498:	0800c4bb 	.word	0x0800c4bb
 800c49c:	0800c4bb 	.word	0x0800c4bb
 800c4a0:	0800c4bb 	.word	0x0800c4bb
 800c4a4:	0800c4bb 	.word	0x0800c4bb
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800c4a8:	2300      	movs	r3, #0
 800c4aa:	60fb      	str	r3, [r7, #12]
        break;
 800c4ac:	e00e      	b.n	800c4cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800c4ae:	2301      	movs	r3, #1
 800c4b0:	60fb      	str	r3, [r7, #12]
        break;
 800c4b2:	e00b      	b.n	800c4cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800c4b4:	2302      	movs	r3, #2
 800c4b6:	60fb      	str	r3, [r7, #12]
        break;
 800c4b8:	e008      	b.n	800c4cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 800c4ba:	2305      	movs	r3, #5
 800c4bc:	60fb      	str	r3, [r7, #12]
        break;
 800c4be:	e005      	b.n	800c4cc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 800c4c0:	4b05      	ldr	r3, [pc, #20]	@ (800c4d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 800c4c2:	4a06      	ldr	r2, [pc, #24]	@ (800c4dc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 800c4c4:	216f      	movs	r1, #111	@ 0x6f
 800c4c6:	4806      	ldr	r0, [pc, #24]	@ (800c4e0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 800c4c8:	f014 fbe4 	bl	8020c94 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800c4cc:	68fb      	ldr	r3, [r7, #12]
}
 800c4ce:	4618      	mov	r0, r3
 800c4d0:	3710      	adds	r7, #16
 800c4d2:	46bd      	mov	sp, r7
 800c4d4:	bd80      	pop	{r7, pc}
 800c4d6:	bf00      	nop
 800c4d8:	080223d8 	.word	0x080223d8
 800c4dc:	080223f4 	.word	0x080223f4
 800c4e0:	08022440 	.word	0x08022440

0800c4e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 800c4e4:	b580      	push	{r7, lr}
 800c4e6:	b084      	sub	sp, #16
 800c4e8:	af00      	add	r7, sp, #0
 800c4ea:	6078      	str	r0, [r7, #4]
 800c4ec:	460b      	mov	r3, r1
 800c4ee:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800c4f0:	2300      	movs	r3, #0
 800c4f2:	60fb      	str	r3, [r7, #12]

    switch (format)
 800c4f4:	78fb      	ldrb	r3, [r7, #3]
 800c4f6:	2b0a      	cmp	r3, #10
 800c4f8:	d821      	bhi.n	800c53e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 800c4fa:	a201      	add	r2, pc, #4	@ (adr r2, 800c500 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800c4fc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c500:	0800c539 	.word	0x0800c539
 800c504:	0800c533 	.word	0x0800c533
 800c508:	0800c52d 	.word	0x0800c52d
 800c50c:	0800c53f 	.word	0x0800c53f
 800c510:	0800c53f 	.word	0x0800c53f
 800c514:	0800c53f 	.word	0x0800c53f
 800c518:	0800c53f 	.word	0x0800c53f
 800c51c:	0800c533 	.word	0x0800c533
 800c520:	0800c533 	.word	0x0800c533
 800c524:	0800c533 	.word	0x0800c533
 800c528:	0800c533 	.word	0x0800c533
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800c52c:	2300      	movs	r3, #0
 800c52e:	60fb      	str	r3, [r7, #12]
        break;
 800c530:	e00b      	b.n	800c54a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800c532:	2301      	movs	r3, #1
 800c534:	60fb      	str	r3, [r7, #12]
        break;
 800c536:	e008      	b.n	800c54a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800c538:	2302      	movs	r3, #2
 800c53a:	60fb      	str	r3, [r7, #12]
        break;
 800c53c:	e005      	b.n	800c54a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 800c53e:	4b05      	ldr	r3, [pc, #20]	@ (800c554 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 800c540:	4a05      	ldr	r2, [pc, #20]	@ (800c558 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 800c542:	2190      	movs	r1, #144	@ 0x90
 800c544:	4805      	ldr	r0, [pc, #20]	@ (800c55c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 800c546:	f014 fba5 	bl	8020c94 <__assert_func>
        break;
    }

    return dma2dColorMode;
 800c54a:	68fb      	ldr	r3, [r7, #12]
}
 800c54c:	4618      	mov	r0, r3
 800c54e:	3710      	adds	r7, #16
 800c550:	46bd      	mov	sp, r7
 800c552:	bd80      	pop	{r7, pc}
 800c554:	080223d8 	.word	0x080223d8
 800c558:	0802246c 	.word	0x0802246c
 800c55c:	08022440 	.word	0x08022440

0800c560 <_ZN8STM32DMA11getBlitCapsEv>:

BlitOperations STM32DMA::getBlitCaps()
{
 800c560:	b480      	push	{r7}
 800c562:	b083      	sub	sp, #12
 800c564:	af00      	add	r7, sp, #0
 800c566:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY_L8
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 800c568:	f240 33ef 	movw	r3, #1007	@ 0x3ef
}
 800c56c:	4618      	mov	r0, r3
 800c56e:	370c      	adds	r7, #12
 800c570:	46bd      	mov	sp, r7
 800c572:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c576:	4770      	bx	lr

0800c578 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800c578:	b590      	push	{r4, r7, lr}
 800c57a:	b089      	sub	sp, #36	@ 0x24
 800c57c:	af00      	add	r7, sp, #0
 800c57e:	6078      	str	r0, [r7, #4]
 800c580:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800c582:	683b      	ldr	r3, [r7, #0]
 800c584:	7f5b      	ldrb	r3, [r3, #29]
 800c586:	4619      	mov	r1, r3
 800c588:	6878      	ldr	r0, [r7, #4]
 800c58a:	f7ff ff67 	bl	800c45c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800c58e:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800c590:	683b      	ldr	r3, [r7, #0]
 800c592:	7f9b      	ldrb	r3, [r3, #30]
 800c594:	4619      	mov	r1, r3
 800c596:	6878      	ldr	r0, [r7, #4]
 800c598:	f7ff ff60 	bl	800c45c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800c59c:	6178      	str	r0, [r7, #20]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800c59e:	683b      	ldr	r3, [r7, #0]
 800c5a0:	7f9b      	ldrb	r3, [r3, #30]
 800c5a2:	4619      	mov	r1, r3
 800c5a4:	6878      	ldr	r0, [r7, #4]
 800c5a6:	f7ff ff9d 	bl	800c4e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800c5aa:	6138      	str	r0, [r7, #16]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800c5ac:	683b      	ldr	r3, [r7, #0]
 800c5ae:	8b5b      	ldrh	r3, [r3, #26]
 800c5b0:	461a      	mov	r2, r3
 800c5b2:	683b      	ldr	r3, [r7, #0]
 800c5b4:	8a9b      	ldrh	r3, [r3, #20]
 800c5b6:	1ad2      	subs	r2, r2, r3
 800c5b8:	4b93      	ldr	r3, [pc, #588]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c5ba:	641a      	str	r2, [r3, #64]	@ 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800c5bc:	683b      	ldr	r3, [r7, #0]
 800c5be:	8b5b      	ldrh	r3, [r3, #26]
 800c5c0:	461a      	mov	r2, r3
 800c5c2:	683b      	ldr	r3, [r7, #0]
 800c5c4:	8a9b      	ldrh	r3, [r3, #20]
 800c5c6:	1ad2      	subs	r2, r2, r3
 800c5c8:	4b8f      	ldr	r3, [pc, #572]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c5ca:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800c5cc:	683b      	ldr	r3, [r7, #0]
 800c5ce:	8b1b      	ldrh	r3, [r3, #24]
 800c5d0:	461a      	mov	r2, r3
 800c5d2:	683b      	ldr	r3, [r7, #0]
 800c5d4:	8a9b      	ldrh	r3, [r3, #20]
 800c5d6:	1ad2      	subs	r2, r2, r3
 800c5d8:	4b8b      	ldr	r3, [pc, #556]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c5da:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800c5dc:	4a8a      	ldr	r2, [pc, #552]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c5de:	693b      	ldr	r3, [r7, #16]
 800c5e0:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800c5e2:	683b      	ldr	r3, [r7, #0]
 800c5e4:	8adb      	ldrh	r3, [r3, #22]
 800c5e6:	461a      	mov	r2, r3
 800c5e8:	683b      	ldr	r3, [r7, #0]
 800c5ea:	8a9b      	ldrh	r3, [r3, #20]
 800c5ec:	041b      	lsls	r3, r3, #16
 800c5ee:	431a      	orrs	r2, r3
 800c5f0:	4b85      	ldr	r3, [pc, #532]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c5f2:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c5f4:	683b      	ldr	r3, [r7, #0]
 800c5f6:	691a      	ldr	r2, [r3, #16]
 800c5f8:	4b83      	ldr	r3, [pc, #524]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c5fa:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800c5fc:	683b      	ldr	r3, [r7, #0]
 800c5fe:	685a      	ldr	r2, [r3, #4]
 800c600:	4b81      	ldr	r3, [pc, #516]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c602:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800c604:	683b      	ldr	r3, [r7, #0]
 800c606:	681b      	ldr	r3, [r3, #0]
 800c608:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c60c:	d035      	beq.n	800c67a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 800c60e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800c612:	f200 80dd 	bhi.w	800c7d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800c616:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c61a:	d014      	beq.n	800c646 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xce>
 800c61c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800c620:	f200 80d6 	bhi.w	800c7d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800c624:	2b80      	cmp	r3, #128	@ 0x80
 800c626:	d056      	beq.n	800c6d6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15e>
 800c628:	2b80      	cmp	r3, #128	@ 0x80
 800c62a:	f200 80d1 	bhi.w	800c7d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800c62e:	2b40      	cmp	r3, #64	@ 0x40
 800c630:	f000 80ba 	beq.w	800c7a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 800c634:	2b40      	cmp	r3, #64	@ 0x40
 800c636:	f200 80cb 	bhi.w	800c7d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800c63a:	2b04      	cmp	r3, #4
 800c63c:	d037      	beq.n	800c6ae <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 800c63e:	2b20      	cmp	r3, #32
 800c640:	f000 80b2 	beq.w	800c7a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 800c644:	e0c4      	b.n	800c7d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800c646:	683b      	ldr	r3, [r7, #0]
 800c648:	7f1b      	ldrb	r3, [r3, #28]
 800c64a:	061a      	lsls	r2, r3, #24
 800c64c:	496e      	ldr	r1, [pc, #440]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c64e:	4b6f      	ldr	r3, [pc, #444]	@ (800c80c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 800c650:	4313      	orrs	r3, r2
 800c652:	61cb      	str	r3, [r1, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800c654:	683b      	ldr	r3, [r7, #0]
 800c656:	330c      	adds	r3, #12
 800c658:	4c6b      	ldr	r4, [pc, #428]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c65a:	4618      	mov	r0, r3
 800c65c:	f7ff fdb4 	bl	800c1c8 <_ZNK8touchgfx9colortypecvmEv>
 800c660:	4603      	mov	r3, r0
 800c662:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800c664:	4a68      	ldr	r2, [pc, #416]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c666:	697b      	ldr	r3, [r7, #20]
 800c668:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c66a:	683b      	ldr	r3, [r7, #0]
 800c66c:	691a      	ldr	r2, [r3, #16]
 800c66e:	4b66      	ldr	r3, [pc, #408]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c670:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c672:	4b65      	ldr	r3, [pc, #404]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c674:	4a66      	ldr	r2, [pc, #408]	@ (800c810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800c676:	601a      	str	r2, [r3, #0]
        break;
 800c678:	e0c2      	b.n	800c800 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800c67a:	683b      	ldr	r3, [r7, #0]
 800c67c:	7f1b      	ldrb	r3, [r3, #28]
 800c67e:	061a      	lsls	r2, r3, #24
 800c680:	4961      	ldr	r1, [pc, #388]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c682:	4b64      	ldr	r3, [pc, #400]	@ (800c814 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 800c684:	4313      	orrs	r3, r2
 800c686:	61cb      	str	r3, [r1, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800c688:	683b      	ldr	r3, [r7, #0]
 800c68a:	330c      	adds	r3, #12
 800c68c:	4c5e      	ldr	r4, [pc, #376]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c68e:	4618      	mov	r0, r3
 800c690:	f7ff fd9a 	bl	800c1c8 <_ZNK8touchgfx9colortypecvmEv>
 800c694:	4603      	mov	r3, r0
 800c696:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800c698:	4a5b      	ldr	r2, [pc, #364]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c69a:	697b      	ldr	r3, [r7, #20]
 800c69c:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c69e:	683b      	ldr	r3, [r7, #0]
 800c6a0:	691a      	ldr	r2, [r3, #16]
 800c6a2:	4b59      	ldr	r3, [pc, #356]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6a4:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c6a6:	4b58      	ldr	r3, [pc, #352]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6a8:	4a59      	ldr	r2, [pc, #356]	@ (800c810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800c6aa:	601a      	str	r2, [r3, #0]
        break;
 800c6ac:	e0a8      	b.n	800c800 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800c6ae:	683b      	ldr	r3, [r7, #0]
 800c6b0:	7f1b      	ldrb	r3, [r3, #28]
 800c6b2:	061a      	lsls	r2, r3, #24
 800c6b4:	69bb      	ldr	r3, [r7, #24]
 800c6b6:	4313      	orrs	r3, r2
 800c6b8:	4a53      	ldr	r2, [pc, #332]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6ba:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c6be:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800c6c0:	4a51      	ldr	r2, [pc, #324]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6c2:	697b      	ldr	r3, [r7, #20]
 800c6c4:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c6c6:	683b      	ldr	r3, [r7, #0]
 800c6c8:	691a      	ldr	r2, [r3, #16]
 800c6ca:	4b4f      	ldr	r3, [pc, #316]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6cc:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c6ce:	4b4e      	ldr	r3, [pc, #312]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6d0:	4a4f      	ldr	r2, [pc, #316]	@ (800c810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800c6d2:	601a      	str	r2, [r3, #0]
        break;
 800c6d4:	e094      	b.n	800c800 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_L8:
        {
            bool blend = true;
 800c6d6:	2301      	movs	r3, #1
 800c6d8:	77fb      	strb	r3, [r7, #31]
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800c6da:	683b      	ldr	r3, [r7, #0]
 800c6dc:	689b      	ldr	r3, [r3, #8]
 800c6de:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800c6e0:	68fb      	ldr	r3, [r7, #12]
 800c6e2:	1d1a      	adds	r2, r3, #4
 800c6e4:	4b48      	ldr	r3, [pc, #288]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6e6:	62da      	str	r2, [r3, #44]	@ 0x2c

            /* Set DMA2D color mode and alpha mode */
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800c6e8:	683b      	ldr	r3, [r7, #0]
 800c6ea:	7f1b      	ldrb	r3, [r3, #28]
 800c6ec:	061a      	lsls	r2, r3, #24
 800c6ee:	69bb      	ldr	r3, [r7, #24]
 800c6f0:	4313      	orrs	r3, r2
 800c6f2:	4a45      	ldr	r2, [pc, #276]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6f4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c6f8:	61d3      	str	r3, [r2, #28]

            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800c6fa:	4a43      	ldr	r2, [pc, #268]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c6fc:	697b      	ldr	r3, [r7, #20]
 800c6fe:	6253      	str	r3, [r2, #36]	@ 0x24

            /* Configure DMA2D Stream source2 address */
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c700:	683b      	ldr	r3, [r7, #0]
 800c702:	691a      	ldr	r2, [r3, #16]
 800c704:	4b40      	ldr	r3, [pc, #256]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c706:	615a      	str	r2, [r3, #20]

            /* Configure CLUT */
            switch ((Bitmap::ClutFormat)palette->format)
 800c708:	68fb      	ldr	r3, [r7, #12]
 800c70a:	881b      	ldrh	r3, [r3, #0]
 800c70c:	b2db      	uxtb	r3, r3
 800c70e:	2b00      	cmp	r3, #0
 800c710:	d002      	beq.n	800c718 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>
 800c712:	2b01      	cmp	r3, #1
 800c714:	d00d      	beq.n	800c732 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ba>
 800c716:	e020      	b.n	800c75a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e2>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 800c718:	4b3b      	ldr	r3, [pc, #236]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c71a:	69da      	ldr	r2, [r3, #28]
 800c71c:	4b3e      	ldr	r3, [pc, #248]	@ (800c818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800c71e:	4013      	ands	r3, r2
 800c720:	68fa      	ldr	r2, [r7, #12]
 800c722:	8852      	ldrh	r2, [r2, #2]
 800c724:	3a01      	subs	r2, #1
 800c726:	0212      	lsls	r2, r2, #8
 800c728:	4611      	mov	r1, r2
 800c72a:	4a37      	ldr	r2, [pc, #220]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c72c:	430b      	orrs	r3, r1
 800c72e:	61d3      	str	r3, [r2, #28]
                break;
 800c730:	e01a      	b.n	800c768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                if (blitOp.alpha == 255)
 800c732:	683b      	ldr	r3, [r7, #0]
 800c734:	7f1b      	ldrb	r3, [r3, #28]
 800c736:	2bff      	cmp	r3, #255	@ 0xff
 800c738:	d101      	bne.n	800c73e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c6>
                {
                    blend = false;
 800c73a:	2300      	movs	r3, #0
 800c73c:	77fb      	strb	r3, [r7, #31]
                }
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800c73e:	4b32      	ldr	r3, [pc, #200]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c740:	69da      	ldr	r2, [r3, #28]
 800c742:	4b35      	ldr	r3, [pc, #212]	@ (800c818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 800c744:	4013      	ands	r3, r2
 800c746:	68fa      	ldr	r2, [r7, #12]
 800c748:	8852      	ldrh	r2, [r2, #2]
 800c74a:	3a01      	subs	r2, #1
 800c74c:	0212      	lsls	r2, r2, #8
 800c74e:	4313      	orrs	r3, r2
 800c750:	4a2d      	ldr	r2, [pc, #180]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c752:	f043 0310 	orr.w	r3, r3, #16
 800c756:	61d3      	str	r3, [r2, #28]
                break;
 800c758:	e006      	b.n	800c768 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 800c75a:	4b30      	ldr	r3, [pc, #192]	@ (800c81c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 800c75c:	4a30      	ldr	r2, [pc, #192]	@ (800c820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 800c75e:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 800c762:	4830      	ldr	r0, [pc, #192]	@ (800c824 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 800c764:	f014 fa96 	bl	8020c94 <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800c768:	4b27      	ldr	r3, [pc, #156]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c76a:	69db      	ldr	r3, [r3, #28]
 800c76c:	4a26      	ldr	r2, [pc, #152]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c76e:	f043 0320 	orr.w	r3, r3, #32
 800c772:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 800c774:	bf00      	nop
 800c776:	4b24      	ldr	r3, [pc, #144]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c778:	69db      	ldr	r3, [r3, #28]
 800c77a:	f003 0320 	and.w	r3, r3, #32
 800c77e:	2b00      	cmp	r3, #0
 800c780:	bf14      	ite	ne
 800c782:	2301      	movne	r3, #1
 800c784:	2300      	moveq	r3, #0
 800c786:	b2db      	uxtb	r3, r3
 800c788:	2b00      	cmp	r3, #0
 800c78a:	d1f4      	bne.n	800c776 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1fe>
            {
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800c78c:	4b1e      	ldr	r3, [pc, #120]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c78e:	2210      	movs	r2, #16
 800c790:	609a      	str	r2, [r3, #8]

            /* Set DMA2D mode */
            if (blend)
 800c792:	7ffb      	ldrb	r3, [r7, #31]
 800c794:	2b00      	cmp	r3, #0
 800c796:	d003      	beq.n	800c7a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x228>
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c798:	4b1b      	ldr	r3, [pc, #108]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c79a:	4a1d      	ldr	r2, [pc, #116]	@ (800c810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800c79c:	601a      	str	r2, [r3, #0]
            else
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
            }
        }
        break;
 800c79e:	e02f      	b.n	800c800 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c7a0:	4b19      	ldr	r3, [pc, #100]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7a2:	4a21      	ldr	r2, [pc, #132]	@ (800c828 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 800c7a4:	601a      	str	r2, [r3, #0]
        break;
 800c7a6:	e02b      	b.n	800c800 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800c7a8:	683b      	ldr	r3, [r7, #0]
 800c7aa:	7f1b      	ldrb	r3, [r3, #28]
 800c7ac:	061a      	lsls	r2, r3, #24
 800c7ae:	69bb      	ldr	r3, [r7, #24]
 800c7b0:	4313      	orrs	r3, r2
 800c7b2:	4a15      	ldr	r2, [pc, #84]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c7b8:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800c7ba:	4a13      	ldr	r2, [pc, #76]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7bc:	697b      	ldr	r3, [r7, #20]
 800c7be:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c7c0:	683b      	ldr	r3, [r7, #0]
 800c7c2:	691a      	ldr	r2, [r3, #16]
 800c7c4:	4b10      	ldr	r3, [pc, #64]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7c6:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c7c8:	4b0f      	ldr	r3, [pc, #60]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7ca:	4a11      	ldr	r2, [pc, #68]	@ (800c810 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 800c7cc:	601a      	str	r2, [r3, #0]
        break;
 800c7ce:	e017      	b.n	800c800 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800c7d0:	683b      	ldr	r3, [r7, #0]
 800c7d2:	7f1b      	ldrb	r3, [r3, #28]
 800c7d4:	061a      	lsls	r2, r3, #24
 800c7d6:	69bb      	ldr	r3, [r7, #24]
 800c7d8:	4313      	orrs	r3, r2
 800c7da:	4a0b      	ldr	r2, [pc, #44]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7dc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800c7e0:	61d3      	str	r3, [r2, #28]

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 800c7e2:	683b      	ldr	r3, [r7, #0]
 800c7e4:	7f5a      	ldrb	r2, [r3, #29]
 800c7e6:	683b      	ldr	r3, [r7, #0]
 800c7e8:	7f9b      	ldrb	r3, [r3, #30]
 800c7ea:	429a      	cmp	r2, r3
 800c7ec:	d003      	beq.n	800c7f6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27e>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c7ee:	4b06      	ldr	r3, [pc, #24]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7f0:	4a0d      	ldr	r2, [pc, #52]	@ (800c828 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 800c7f2:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
        }
        break;
 800c7f4:	e003      	b.n	800c7fe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x286>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 800c7f6:	4b04      	ldr	r3, [pc, #16]	@ (800c808 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800c7f8:	f242 3201 	movw	r2, #8961	@ 0x2301
 800c7fc:	601a      	str	r2, [r3, #0]
        break;
 800c7fe:	bf00      	nop
    }
}
 800c800:	bf00      	nop
 800c802:	3724      	adds	r7, #36	@ 0x24
 800c804:	46bd      	mov	sp, r7
 800c806:	bd90      	pop	{r4, r7, pc}
 800c808:	4002b000 	.word	0x4002b000
 800c80c:	0002000a 	.word	0x0002000a
 800c810:	00022301 	.word	0x00022301
 800c814:	00020009 	.word	0x00020009
 800c818:	ffff00ef 	.word	0xffff00ef
 800c81c:	080224b8 	.word	0x080224b8
 800c820:	080224d4 	.word	0x080224d4
 800c824:	08022440 	.word	0x08022440
 800c828:	00012301 	.word	0x00012301

0800c82c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800c82c:	b590      	push	{r4, r7, lr}
 800c82e:	b085      	sub	sp, #20
 800c830:	af00      	add	r7, sp, #0
 800c832:	6078      	str	r0, [r7, #4]
 800c834:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800c836:	683b      	ldr	r3, [r7, #0]
 800c838:	7f9b      	ldrb	r3, [r3, #30]
 800c83a:	4619      	mov	r1, r3
 800c83c:	6878      	ldr	r0, [r7, #4]
 800c83e:	f7ff fe51 	bl	800c4e4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800c842:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800c844:	4a3a      	ldr	r2, [pc, #232]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c846:	68fb      	ldr	r3, [r7, #12]
 800c848:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800c84a:	683b      	ldr	r3, [r7, #0]
 800c84c:	8adb      	ldrh	r3, [r3, #22]
 800c84e:	461a      	mov	r2, r3
 800c850:	683b      	ldr	r3, [r7, #0]
 800c852:	8a9b      	ldrh	r3, [r3, #20]
 800c854:	041b      	lsls	r3, r3, #16
 800c856:	431a      	orrs	r2, r3
 800c858:	4b35      	ldr	r3, [pc, #212]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c85a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c85c:	683b      	ldr	r3, [r7, #0]
 800c85e:	691a      	ldr	r2, [r3, #16]
 800c860:	4b33      	ldr	r3, [pc, #204]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c862:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800c864:	683b      	ldr	r3, [r7, #0]
 800c866:	8b5b      	ldrh	r3, [r3, #26]
 800c868:	461a      	mov	r2, r3
 800c86a:	683b      	ldr	r3, [r7, #0]
 800c86c:	8a9b      	ldrh	r3, [r3, #20]
 800c86e:	1ad2      	subs	r2, r2, r3
 800c870:	4b2f      	ldr	r3, [pc, #188]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c872:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800c874:	683b      	ldr	r3, [r7, #0]
 800c876:	681b      	ldr	r3, [r3, #0]
 800c878:	2b08      	cmp	r3, #8
 800c87a:	d12d      	bne.n	800c8d8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800c87c:	683b      	ldr	r3, [r7, #0]
 800c87e:	8b5b      	ldrh	r3, [r3, #26]
 800c880:	461a      	mov	r2, r3
 800c882:	683b      	ldr	r3, [r7, #0]
 800c884:	8a9b      	ldrh	r3, [r3, #20]
 800c886:	1ad2      	subs	r2, r2, r3
 800c888:	4b29      	ldr	r3, [pc, #164]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c88a:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800c88c:	683b      	ldr	r3, [r7, #0]
 800c88e:	8b5b      	ldrh	r3, [r3, #26]
 800c890:	461a      	mov	r2, r3
 800c892:	683b      	ldr	r3, [r7, #0]
 800c894:	8a9b      	ldrh	r3, [r3, #20]
 800c896:	1ad2      	subs	r2, r2, r3
 800c898:	4b25      	ldr	r3, [pc, #148]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c89a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800c89c:	4a24      	ldr	r2, [pc, #144]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c89e:	68fb      	ldr	r3, [r7, #12]
 800c8a0:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800c8a2:	683b      	ldr	r3, [r7, #0]
 800c8a4:	7f1b      	ldrb	r3, [r3, #28]
 800c8a6:	061a      	lsls	r2, r3, #24
 800c8a8:	4921      	ldr	r1, [pc, #132]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8aa:	4b22      	ldr	r3, [pc, #136]	@ (800c934 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 800c8ac:	4313      	orrs	r3, r2
 800c8ae:	61cb      	str	r3, [r1, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800c8b0:	683b      	ldr	r3, [r7, #0]
 800c8b2:	330c      	adds	r3, #12
 800c8b4:	4c1e      	ldr	r4, [pc, #120]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8b6:	4618      	mov	r0, r3
 800c8b8:	f7ff fc86 	bl	800c1c8 <_ZNK8touchgfx9colortypecvmEv>
 800c8bc:	4603      	mov	r3, r0
 800c8be:	6223      	str	r3, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c8c0:	683b      	ldr	r3, [r7, #0]
 800c8c2:	691a      	ldr	r2, [r3, #16]
 800c8c4:	4b1a      	ldr	r3, [pc, #104]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8c6:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800c8c8:	683b      	ldr	r3, [r7, #0]
 800c8ca:	691a      	ldr	r2, [r3, #16]
 800c8cc:	4b18      	ldr	r3, [pc, #96]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8ce:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 800c8d0:	4b17      	ldr	r3, [pc, #92]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8d2:	4a19      	ldr	r2, [pc, #100]	@ (800c938 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>)
 800c8d4:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
    }
}
 800c8d6:	e027      	b.n	800c928 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfc>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 800c8d8:	4a15      	ldr	r2, [pc, #84]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8da:	68fb      	ldr	r3, [r7, #12]
 800c8dc:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800c8de:	4b14      	ldr	r3, [pc, #80]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c8e0:	2200      	movs	r2, #0
 800c8e2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800c8e4:	683b      	ldr	r3, [r7, #0]
 800c8e6:	330c      	adds	r3, #12
 800c8e8:	4618      	mov	r0, r3
 800c8ea:	f7ff fc6d 	bl	800c1c8 <_ZNK8touchgfx9colortypecvmEv>
 800c8ee:	4603      	mov	r3, r0
 800c8f0:	0a1b      	lsrs	r3, r3, #8
 800c8f2:	f403 4478 	and.w	r4, r3, #63488	@ 0xf800
 800c8f6:	683b      	ldr	r3, [r7, #0]
 800c8f8:	330c      	adds	r3, #12
 800c8fa:	4618      	mov	r0, r3
 800c8fc:	f7ff fc64 	bl	800c1c8 <_ZNK8touchgfx9colortypecvmEv>
 800c900:	4603      	mov	r3, r0
 800c902:	095b      	lsrs	r3, r3, #5
 800c904:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800c908:	431c      	orrs	r4, r3
 800c90a:	683b      	ldr	r3, [r7, #0]
 800c90c:	330c      	adds	r3, #12
 800c90e:	4618      	mov	r0, r3
 800c910:	f7ff fc5a 	bl	800c1c8 <_ZNK8touchgfx9colortypecvmEv>
 800c914:	4603      	mov	r3, r0
 800c916:	08db      	lsrs	r3, r3, #3
 800c918:	f003 031f 	and.w	r3, r3, #31
 800c91c:	4a04      	ldr	r2, [pc, #16]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c91e:	4323      	orrs	r3, r4
 800c920:	6393      	str	r3, [r2, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 800c922:	4b03      	ldr	r3, [pc, #12]	@ (800c930 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 800c924:	4a05      	ldr	r2, [pc, #20]	@ (800c93c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>)
 800c926:	601a      	str	r2, [r3, #0]
}
 800c928:	bf00      	nop
 800c92a:	3714      	adds	r7, #20
 800c92c:	46bd      	mov	sp, r7
 800c92e:	bd90      	pop	{r4, r7, pc}
 800c930:	4002b000 	.word	0x4002b000
 800c934:	00010009 	.word	0x00010009
 800c938:	00022301 	.word	0x00022301
 800c93c:	00032301 	.word	0x00032301

0800c940 <_ZN8touchgfx5paint8tearDownEv>:
 * @fn void tearDown();
 *
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
 800c940:	b480      	push	{r7}
 800c942:	af00      	add	r7, sp, #0
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800c944:	bf00      	nop
 800c946:	4b09      	ldr	r3, [pc, #36]	@ (800c96c <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 800c948:	681b      	ldr	r3, [r3, #0]
 800c94a:	f003 0301 	and.w	r3, r3, #1
 800c94e:	2b00      	cmp	r3, #0
 800c950:	bf14      	ite	ne
 800c952:	2301      	movne	r3, #1
 800c954:	2300      	moveq	r3, #0
 800c956:	b2db      	uxtb	r3, r3
 800c958:	2b00      	cmp	r3, #0
 800c95a:	d1f4      	bne.n	800c946 <_ZN8touchgfx5paint8tearDownEv+0x6>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800c95c:	4b03      	ldr	r3, [pc, #12]	@ (800c96c <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 800c95e:	2223      	movs	r2, #35	@ 0x23
 800c960:	609a      	str	r2, [r3, #8]
}
 800c962:	bf00      	nop
 800c964:	46bd      	mov	sp, r7
 800c966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c96a:	4770      	bx	lr
 800c96c:	4002b000 	.word	0x4002b000

0800c970 <_ZN8touchgfx5paint9flushLineEPmi>:
/** Flushes a line of pixels in the data cache if used.
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
 800c970:	b580      	push	{r7, lr}
 800c972:	b082      	sub	sp, #8
 800c974:	af00      	add	r7, sp, #0
 800c976:	6078      	str	r0, [r7, #4]
 800c978:	6039      	str	r1, [r7, #0]
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800c97a:	4b09      	ldr	r3, [pc, #36]	@ (800c9a0 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
 800c97c:	695b      	ldr	r3, [r3, #20]
 800c97e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800c982:	2b00      	cmp	r3, #0
 800c984:	bf14      	ite	ne
 800c986:	2301      	movne	r3, #1
 800c988:	2300      	moveq	r3, #0
 800c98a:	b2db      	uxtb	r3, r3
 800c98c:	2b00      	cmp	r3, #0
 800c98e:	d003      	beq.n	800c998 <_ZN8touchgfx5paint9flushLineEPmi+0x28>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
 800c990:	6839      	ldr	r1, [r7, #0]
 800c992:	6878      	ldr	r0, [r7, #4]
 800c994:	f7ff fbde 	bl	800c154 <SCB_CleanDCache_by_Addr>
    }
}
 800c998:	bf00      	nop
 800c99a:	3708      	adds	r7, #8
 800c99c:	46bd      	mov	sp, r7
 800c99e:	bd80      	pop	{r7, pc}
 800c9a0:	e000ed00 	.word	0xe000ed00

0800c9a4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800c9a4:	b480      	push	{r7}
 800c9a6:	b085      	sub	sp, #20
 800c9a8:	af00      	add	r7, sp, #0
 800c9aa:	60f8      	str	r0, [r7, #12]
 800c9ac:	60b9      	str	r1, [r7, #8]
 800c9ae:	607a      	str	r2, [r7, #4]
 800c9b0:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800c9b2:	bf00      	nop
 800c9b4:	4b1f      	ldr	r3, [pc, #124]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9b6:	681b      	ldr	r3, [r3, #0]
 800c9b8:	f003 0301 	and.w	r3, r3, #1
 800c9bc:	2b00      	cmp	r3, #0
 800c9be:	bf14      	ite	ne
 800c9c0:	2301      	movne	r3, #1
 800c9c2:	2300      	moveq	r3, #0
 800c9c4:	b2db      	uxtb	r3, r3
 800c9c6:	2b00      	cmp	r3, #0
 800c9c8:	d1f4      	bne.n	800c9b4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800c9ca:	4b1a      	ldr	r3, [pc, #104]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9cc:	2223      	movs	r2, #35	@ 0x23
 800c9ce:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800c9d0:	4b18      	ldr	r3, [pc, #96]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9d2:	2202      	movs	r2, #2
 800c9d4:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800c9d6:	687b      	ldr	r3, [r7, #4]
 800c9d8:	041b      	lsls	r3, r3, #16
 800c9da:	4a16      	ldr	r2, [pc, #88]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9dc:	f043 0301 	orr.w	r3, r3, #1
 800c9e0:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800c9e2:	4a14      	ldr	r2, [pc, #80]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9e4:	68fb      	ldr	r3, [r7, #12]
 800c9e6:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800c9e8:	4a12      	ldr	r2, [pc, #72]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9ea:	68bb      	ldr	r3, [r7, #8]
 800c9ec:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 800c9ee:	78fb      	ldrb	r3, [r7, #3]
 800c9f0:	2bff      	cmp	r3, #255	@ 0xff
 800c9f2:	d00f      	beq.n	800ca14 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x70>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800c9f4:	78fb      	ldrb	r3, [r7, #3]
 800c9f6:	061b      	lsls	r3, r3, #24
 800c9f8:	4a0e      	ldr	r2, [pc, #56]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800c9fa:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800c9fe:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ca00:	4b0c      	ldr	r3, [pc, #48]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800ca02:	2202      	movs	r2, #2
 800ca04:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800ca06:	4a0b      	ldr	r2, [pc, #44]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800ca08:	68fb      	ldr	r3, [r7, #12]
 800ca0a:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800ca0c:	4b09      	ldr	r3, [pc, #36]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800ca0e:	4a0a      	ldr	r2, [pc, #40]	@ (800ca38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x94>)
 800ca10:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 800ca12:	e008      	b.n	800ca26 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ca14:	78fb      	ldrb	r3, [r7, #3]
 800ca16:	061b      	lsls	r3, r3, #24
 800ca18:	4a06      	ldr	r2, [pc, #24]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800ca1a:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 800ca1e:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 800ca20:	4b04      	ldr	r3, [pc, #16]	@ (800ca34 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 800ca22:	2201      	movs	r2, #1
 800ca24:	601a      	str	r2, [r3, #0]
}
 800ca26:	bf00      	nop
 800ca28:	3714      	adds	r7, #20
 800ca2a:	46bd      	mov	sp, r7
 800ca2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca30:	4770      	bx	lr
 800ca32:	bf00      	nop
 800ca34:	4002b000 	.word	0x4002b000
 800ca38:	00020001 	.word	0x00020001

0800ca3c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800ca3c:	b480      	push	{r7}
 800ca3e:	b085      	sub	sp, #20
 800ca40:	af00      	add	r7, sp, #0
 800ca42:	60f8      	str	r0, [r7, #12]
 800ca44:	60b9      	str	r1, [r7, #8]
 800ca46:	607a      	str	r2, [r7, #4]
 800ca48:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800ca4a:	bf00      	nop
 800ca4c:	4b18      	ldr	r3, [pc, #96]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca4e:	681b      	ldr	r3, [r3, #0]
 800ca50:	f003 0301 	and.w	r3, r3, #1
 800ca54:	2b00      	cmp	r3, #0
 800ca56:	bf14      	ite	ne
 800ca58:	2301      	movne	r3, #1
 800ca5a:	2300      	moveq	r3, #0
 800ca5c:	b2db      	uxtb	r3, r3
 800ca5e:	2b00      	cmp	r3, #0
 800ca60:	d1f4      	bne.n	800ca4c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800ca62:	4b13      	ldr	r3, [pc, #76]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca64:	2223      	movs	r2, #35	@ 0x23
 800ca66:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800ca68:	4b11      	ldr	r3, [pc, #68]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca6a:	2202      	movs	r2, #2
 800ca6c:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	041b      	lsls	r3, r3, #16
 800ca72:	4a0f      	ldr	r2, [pc, #60]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca74:	f043 0301 	orr.w	r3, r3, #1
 800ca78:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800ca7a:	4a0d      	ldr	r2, [pc, #52]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca7c:	68fb      	ldr	r3, [r7, #12]
 800ca7e:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 800ca80:	4a0b      	ldr	r2, [pc, #44]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca82:	68bb      	ldr	r3, [r7, #8]
 800ca84:	60d3      	str	r3, [r2, #12]

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 800ca86:	78fb      	ldrb	r3, [r7, #3]
 800ca88:	061b      	lsls	r3, r3, #24
 800ca8a:	4a09      	ldr	r2, [pc, #36]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca8c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800ca90:	61d3      	str	r3, [r2, #28]

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800ca92:	4b07      	ldr	r3, [pc, #28]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca94:	2202      	movs	r2, #2
 800ca96:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800ca98:	4a05      	ldr	r2, [pc, #20]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800ca9a:	68fb      	ldr	r3, [r7, #12]
 800ca9c:	6153      	str	r3, [r2, #20]

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800ca9e:	4b04      	ldr	r3, [pc, #16]	@ (800cab0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 800caa0:	4a04      	ldr	r2, [pc, #16]	@ (800cab4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x78>)
 800caa2:	601a      	str	r2, [r3, #0]
}
 800caa4:	bf00      	nop
 800caa6:	3714      	adds	r7, #20
 800caa8:	46bd      	mov	sp, r7
 800caaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caae:	4770      	bx	lr
 800cab0:	4002b000 	.word	0x4002b000
 800cab4:	00020001 	.word	0x00020001

0800cab8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 800cab8:	b580      	push	{r7, lr}
 800caba:	b082      	sub	sp, #8
 800cabc:	af00      	add	r7, sp, #0
 800cabe:	6078      	str	r0, [r7, #4]
 800cac0:	4a05      	ldr	r2, [pc, #20]	@ (800cad8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800cac2:	687b      	ldr	r3, [r7, #4]
 800cac4:	601a      	str	r2, [r3, #0]
 800cac6:	687b      	ldr	r3, [r7, #4]
 800cac8:	4618      	mov	r0, r3
 800caca:	f7ff fb89 	bl	800c1e0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800cace:	687b      	ldr	r3, [r7, #4]
 800cad0:	4618      	mov	r0, r3
 800cad2:	3708      	adds	r7, #8
 800cad4:	46bd      	mov	sp, r7
 800cad6:	bd80      	pop	{r7, pc}
 800cad8:	08022e8c 	.word	0x08022e8c

0800cadc <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800cadc:	b580      	push	{r7, lr}
 800cade:	b082      	sub	sp, #8
 800cae0:	af00      	add	r7, sp, #0
 800cae2:	6078      	str	r0, [r7, #4]
 800cae4:	6878      	ldr	r0, [r7, #4]
 800cae6:	f7ff ffe7 	bl	800cab8 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800caea:	2114      	movs	r1, #20
 800caec:	6878      	ldr	r0, [r7, #4]
 800caee:	f014 f8a2 	bl	8020c36 <_ZdlPvj>
 800caf2:	687b      	ldr	r3, [r7, #4]
 800caf4:	4618      	mov	r0, r3
 800caf6:	3708      	adds	r7, #8
 800caf8:	46bd      	mov	sp, r7
 800cafa:	bd80      	pop	{r7, pc}

0800cafc <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800cafc:	b480      	push	{r7}
 800cafe:	b083      	sub	sp, #12
 800cb00:	af00      	add	r7, sp, #0
 800cb02:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800cb04:	4a04      	ldr	r2, [pc, #16]	@ (800cb18 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800cb06:	687b      	ldr	r3, [r7, #4]
 800cb08:	6013      	str	r3, [r2, #0]
    }
 800cb0a:	bf00      	nop
 800cb0c:	370c      	adds	r7, #12
 800cb0e:	46bd      	mov	sp, r7
 800cb10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb14:	4770      	bx	lr
 800cb16:	bf00      	nop
 800cb18:	20001bc8 	.word	0x20001bc8

0800cb1c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800cb1c:	b480      	push	{r7}
 800cb1e:	b085      	sub	sp, #20
 800cb20:	af00      	add	r7, sp, #0
 800cb22:	60f8      	str	r0, [r7, #12]
 800cb24:	60b9      	str	r1, [r7, #8]
 800cb26:	607a      	str	r2, [r7, #4]
 800cb28:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800cb2a:	4a0b      	ldr	r2, [pc, #44]	@ (800cb58 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800cb2c:	68fb      	ldr	r3, [r7, #12]
 800cb2e:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800cb30:	68fb      	ldr	r3, [r7, #12]
 800cb32:	68ba      	ldr	r2, [r7, #8]
 800cb34:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800cb36:	68fb      	ldr	r3, [r7, #12]
 800cb38:	687a      	ldr	r2, [r7, #4]
 800cb3a:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800cb3c:	68fb      	ldr	r3, [r7, #12]
 800cb3e:	683a      	ldr	r2, [r7, #0]
 800cb40:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800cb42:	68fb      	ldr	r3, [r7, #12]
 800cb44:	69ba      	ldr	r2, [r7, #24]
 800cb46:	611a      	str	r2, [r3, #16]
    {
    }
 800cb48:	68fb      	ldr	r3, [r7, #12]
 800cb4a:	4618      	mov	r0, r3
 800cb4c:	3714      	adds	r7, #20
 800cb4e:	46bd      	mov	sp, r7
 800cb50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb54:	4770      	bx	lr
 800cb56:	bf00      	nop
 800cb58:	08022bac 	.word	0x08022bac

0800cb5c <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800cb5c:	b480      	push	{r7}
 800cb5e:	b083      	sub	sp, #12
 800cb60:	af00      	add	r7, sp, #0
 800cb62:	6078      	str	r0, [r7, #4]
    {
 800cb64:	4a04      	ldr	r2, [pc, #16]	@ (800cb78 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800cb66:	687b      	ldr	r3, [r7, #4]
 800cb68:	601a      	str	r2, [r3, #0]
    }
 800cb6a:	687b      	ldr	r3, [r7, #4]
 800cb6c:	4618      	mov	r0, r3
 800cb6e:	370c      	adds	r7, #12
 800cb70:	46bd      	mov	sp, r7
 800cb72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb76:	4770      	bx	lr
 800cb78:	08022bac 	.word	0x08022bac

0800cb7c <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800cb7c:	b580      	push	{r7, lr}
 800cb7e:	b082      	sub	sp, #8
 800cb80:	af00      	add	r7, sp, #0
 800cb82:	6078      	str	r0, [r7, #4]
    }
 800cb84:	6878      	ldr	r0, [r7, #4]
 800cb86:	f7ff ffe9 	bl	800cb5c <_ZN8touchgfx7MVPHeapD1Ev>
 800cb8a:	2114      	movs	r1, #20
 800cb8c:	6878      	ldr	r0, [r7, #4]
 800cb8e:	f014 f852 	bl	8020c36 <_ZdlPvj>
 800cb92:	687b      	ldr	r3, [r7, #4]
 800cb94:	4618      	mov	r0, r3
 800cb96:	3708      	adds	r7, #8
 800cb98:	46bd      	mov	sp, r7
 800cb9a:	bd80      	pop	{r7, pc}

0800cb9c <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800cb9c:	b480      	push	{r7}
 800cb9e:	b083      	sub	sp, #12
 800cba0:	af00      	add	r7, sp, #0
 800cba2:	6078      	str	r0, [r7, #4]
    {
 800cba4:	4a04      	ldr	r2, [pc, #16]	@ (800cbb8 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800cba6:	687b      	ldr	r3, [r7, #4]
 800cba8:	601a      	str	r2, [r3, #0]
    }
 800cbaa:	687b      	ldr	r3, [r7, #4]
 800cbac:	4618      	mov	r0, r3
 800cbae:	370c      	adds	r7, #12
 800cbb0:	46bd      	mov	sp, r7
 800cbb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbb6:	4770      	bx	lr
 800cbb8:	08022f18 	.word	0x08022f18

0800cbbc <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800cbbc:	b580      	push	{r7, lr}
 800cbbe:	b082      	sub	sp, #8
 800cbc0:	af00      	add	r7, sp, #0
 800cbc2:	6078      	str	r0, [r7, #4]
    }
 800cbc4:	6878      	ldr	r0, [r7, #4]
 800cbc6:	f7ff ffe9 	bl	800cb9c <_ZN8touchgfx3LCDD1Ev>
 800cbca:	210c      	movs	r1, #12
 800cbcc:	6878      	ldr	r0, [r7, #4]
 800cbce:	f014 f832 	bl	8020c36 <_ZdlPvj>
 800cbd2:	687b      	ldr	r3, [r7, #4]
 800cbd4:	4618      	mov	r0, r3
 800cbd6:	3708      	adds	r7, #8
 800cbd8:	46bd      	mov	sp, r7
 800cbda:	bd80      	pop	{r7, pc}

0800cbdc <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800cbdc:	b480      	push	{r7}
 800cbde:	b083      	sub	sp, #12
 800cbe0:	af00      	add	r7, sp, #0
 800cbe2:	6078      	str	r0, [r7, #4]
            : startX(0),
 800cbe4:	687b      	ldr	r3, [r7, #4]
 800cbe6:	2200      	movs	r2, #0
 800cbe8:	801a      	strh	r2, [r3, #0]
              startY(0),
 800cbea:	687b      	ldr	r3, [r7, #4]
 800cbec:	2200      	movs	r2, #0
 800cbee:	805a      	strh	r2, [r3, #2]
              downX(0),
 800cbf0:	687b      	ldr	r3, [r7, #4]
 800cbf2:	2200      	movs	r2, #0
 800cbf4:	809a      	strh	r2, [r3, #4]
              downY(0),
 800cbf6:	687b      	ldr	r3, [r7, #4]
 800cbf8:	2200      	movs	r2, #0
 800cbfa:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800cbfc:	687b      	ldr	r3, [r7, #4]
 800cbfe:	2200      	movs	r2, #0
 800cc00:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800cc02:	687b      	ldr	r3, [r7, #4]
 800cc04:	2200      	movs	r2, #0
 800cc06:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800cc08:	687b      	ldr	r3, [r7, #4]
 800cc0a:	2200      	movs	r2, #0
 800cc0c:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800cc0e:	687b      	ldr	r3, [r7, #4]
 800cc10:	2200      	movs	r2, #0
 800cc12:	739a      	strb	r2, [r3, #14]
        {
        }
 800cc14:	687b      	ldr	r3, [r7, #4]
 800cc16:	4618      	mov	r0, r3
 800cc18:	370c      	adds	r7, #12
 800cc1a:	46bd      	mov	sp, r7
 800cc1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc20:	4770      	bx	lr

0800cc22 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800cc22:	b580      	push	{r7, lr}
 800cc24:	b082      	sub	sp, #8
 800cc26:	af00      	add	r7, sp, #0
 800cc28:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	4618      	mov	r0, r3
 800cc2e:	f7ff ffd5 	bl	800cbdc <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800cc32:	687b      	ldr	r3, [r7, #4]
 800cc34:	2200      	movs	r2, #0
 800cc36:	611a      	str	r2, [r3, #16]
 800cc38:	687b      	ldr	r3, [r7, #4]
 800cc3a:	2200      	movs	r2, #0
 800cc3c:	829a      	strh	r2, [r3, #20]
    {
    }
 800cc3e:	687b      	ldr	r3, [r7, #4]
 800cc40:	4618      	mov	r0, r3
 800cc42:	3708      	adds	r7, #8
 800cc44:	46bd      	mov	sp, r7
 800cc46:	bd80      	pop	{r7, pc}

0800cc48 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800cc48:	b580      	push	{r7, lr}
 800cc4a:	b084      	sub	sp, #16
 800cc4c:	af00      	add	r7, sp, #0
 800cc4e:	60f8      	str	r0, [r7, #12]
 800cc50:	60b9      	str	r1, [r7, #8]
 800cc52:	607a      	str	r2, [r7, #4]
 800cc54:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800cc56:	4a55      	ldr	r2, [pc, #340]	@ (800cdac <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800cc58:	68fb      	ldr	r3, [r7, #12]
 800cc5a:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800cc5c:	68fb      	ldr	r3, [r7, #12]
 800cc5e:	68ba      	ldr	r2, [r7, #8]
 800cc60:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800cc62:	68fb      	ldr	r3, [r7, #12]
 800cc64:	687a      	ldr	r2, [r7, #4]
 800cc66:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800cc68:	68fb      	ldr	r3, [r7, #12]
 800cc6a:	683a      	ldr	r2, [r7, #0]
 800cc6c:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800cc6e:	68fb      	ldr	r3, [r7, #12]
 800cc70:	2200      	movs	r2, #0
 800cc72:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800cc74:	68fb      	ldr	r3, [r7, #12]
 800cc76:	2200      	movs	r2, #0
 800cc78:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800cc7a:	68fb      	ldr	r3, [r7, #12]
 800cc7c:	2200      	movs	r2, #0
 800cc7e:	619a      	str	r2, [r3, #24]
          gestures(),
 800cc80:	68fb      	ldr	r3, [r7, #12]
 800cc82:	331c      	adds	r3, #28
 800cc84:	4618      	mov	r0, r3
 800cc86:	f7ff ffcc 	bl	800cc22 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800cc8a:	68fb      	ldr	r3, [r7, #12]
 800cc8c:	2200      	movs	r2, #0
 800cc8e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800cc92:	68fb      	ldr	r3, [r7, #12]
 800cc94:	2200      	movs	r2, #0
 800cc96:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800cc98:	68fb      	ldr	r3, [r7, #12]
 800cc9a:	2200      	movs	r2, #0
 800cc9c:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800cc9e:	68fb      	ldr	r3, [r7, #12]
 800cca0:	2200      	movs	r2, #0
 800cca2:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800cca4:	68fb      	ldr	r3, [r7, #12]
 800cca6:	2200      	movs	r2, #0
 800cca8:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800ccaa:	68fb      	ldr	r3, [r7, #12]
 800ccac:	2200      	movs	r2, #0
 800ccae:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800ccb2:	68fb      	ldr	r3, [r7, #12]
 800ccb4:	2201      	movs	r2, #1
 800ccb6:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800ccba:	68fb      	ldr	r3, [r7, #12]
 800ccbc:	2200      	movs	r2, #0
 800ccbe:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800ccc2:	68fb      	ldr	r3, [r7, #12]
 800ccc4:	2200      	movs	r2, #0
 800ccc6:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800ccca:	68fb      	ldr	r3, [r7, #12]
 800cccc:	2200      	movs	r2, #0
 800ccce:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800ccd0:	68fb      	ldr	r3, [r7, #12]
 800ccd2:	3350      	adds	r3, #80	@ 0x50
 800ccd4:	4618      	mov	r0, r3
 800ccd6:	f7fd ff76 	bl	800abc6 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800ccda:	68fb      	ldr	r3, [r7, #12]
 800ccdc:	2200      	movs	r2, #0
 800ccde:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800cce2:	68fb      	ldr	r3, [r7, #12]
 800cce4:	2200      	movs	r2, #0
 800cce6:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800cce8:	68fb      	ldr	r3, [r7, #12]
 800ccea:	2200      	movs	r2, #0
 800ccec:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800ccee:	68fb      	ldr	r3, [r7, #12]
 800ccf0:	2200      	movs	r2, #0
 800ccf2:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800ccf4:	68fb      	ldr	r3, [r7, #12]
 800ccf6:	2201      	movs	r2, #1
 800ccf8:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800ccfc:	68fb      	ldr	r3, [r7, #12]
 800ccfe:	2200      	movs	r2, #0
 800cd00:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800cd04:	68fb      	ldr	r3, [r7, #12]
 800cd06:	2200      	movs	r2, #0
 800cd08:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800cd0c:	68fb      	ldr	r3, [r7, #12]
 800cd0e:	2201      	movs	r2, #1
 800cd10:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800cd14:	68fb      	ldr	r3, [r7, #12]
 800cd16:	2200      	movs	r2, #0
 800cd18:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800cd1c:	68fb      	ldr	r3, [r7, #12]
 800cd1e:	2200      	movs	r2, #0
 800cd20:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800cd24:	68fb      	ldr	r3, [r7, #12]
 800cd26:	2200      	movs	r2, #0
 800cd28:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800cd2c:	68fb      	ldr	r3, [r7, #12]
 800cd2e:	2200      	movs	r2, #0
 800cd30:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800cd34:	68fb      	ldr	r3, [r7, #12]
 800cd36:	2200      	movs	r2, #0
 800cd38:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800cd3c:	68fb      	ldr	r3, [r7, #12]
 800cd3e:	2200      	movs	r2, #0
 800cd40:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800cd42:	68fb      	ldr	r3, [r7, #12]
 800cd44:	2200      	movs	r2, #0
 800cd46:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800cd4a:	68fb      	ldr	r3, [r7, #12]
 800cd4c:	2200      	movs	r2, #0
 800cd4e:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800cd52:	68fb      	ldr	r3, [r7, #12]
 800cd54:	2201      	movs	r2, #1
 800cd56:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800cd5a:	68fb      	ldr	r3, [r7, #12]
 800cd5c:	2201      	movs	r2, #1
 800cd5e:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800cd62:	4a13      	ldr	r2, [pc, #76]	@ (800cdb0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800cd64:	68fb      	ldr	r3, [r7, #12]
 800cd66:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800cd68:	4a12      	ldr	r2, [pc, #72]	@ (800cdb4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800cd6a:	8b3b      	ldrh	r3, [r7, #24]
 800cd6c:	8013      	strh	r3, [r2, #0]
 800cd6e:	4b11      	ldr	r3, [pc, #68]	@ (800cdb4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800cd70:	881a      	ldrh	r2, [r3, #0]
 800cd72:	4b11      	ldr	r3, [pc, #68]	@ (800cdb8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800cd74:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800cd76:	4a11      	ldr	r2, [pc, #68]	@ (800cdbc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800cd78:	8bbb      	ldrh	r3, [r7, #28]
 800cd7a:	8013      	strh	r3, [r2, #0]
 800cd7c:	4b0f      	ldr	r3, [pc, #60]	@ (800cdbc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800cd7e:	881a      	ldrh	r2, [r3, #0]
 800cd80:	4b0f      	ldr	r3, [pc, #60]	@ (800cdc0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800cd82:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800cd84:	4b0f      	ldr	r3, [pc, #60]	@ (800cdc4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800cd86:	2200      	movs	r2, #0
 800cd88:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800cd8a:	8b3a      	ldrh	r2, [r7, #24]
 800cd8c:	8bbb      	ldrh	r3, [r7, #28]
 800cd8e:	429a      	cmp	r2, r3
 800cd90:	bf34      	ite	cc
 800cd92:	2301      	movcc	r3, #1
 800cd94:	2300      	movcs	r3, #0
 800cd96:	b2db      	uxtb	r3, r3
 800cd98:	461a      	mov	r2, r3
 800cd9a:	68fb      	ldr	r3, [r7, #12]
 800cd9c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800cda0:	68fb      	ldr	r3, [r7, #12]
 800cda2:	4618      	mov	r0, r3
 800cda4:	3710      	adds	r7, #16
 800cda6:	46bd      	mov	sp, r7
 800cda8:	bd80      	pop	{r7, pc}
 800cdaa:	bf00      	nop
 800cdac:	08022d64 	.word	0x08022d64
 800cdb0:	20001b6c 	.word	0x20001b6c
 800cdb4:	20001b60 	.word	0x20001b60
 800cdb8:	20001b66 	.word	0x20001b66
 800cdbc:	20001b62 	.word	0x20001b62
 800cdc0:	20001b68 	.word	0x20001b68
 800cdc4:	20001b64 	.word	0x20001b64

0800cdc8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800cdc8:	b580      	push	{r7, lr}
 800cdca:	b082      	sub	sp, #8
 800cdcc:	af00      	add	r7, sp, #0
 800cdce:	6078      	str	r0, [r7, #4]
 800cdd0:	6039      	str	r1, [r7, #0]
    {
        app.gotoScreen1ScreenNoTransition();
 800cdd2:	683b      	ldr	r3, [r7, #0]
 800cdd4:	4618      	mov	r0, r3
 800cdd6:	f7fd fc5b 	bl	800a690 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
    }
 800cdda:	bf00      	nop
 800cddc:	3708      	adds	r7, #8
 800cdde:	46bd      	mov	sp, r7
 800cde0:	bd80      	pop	{r7, pc}
	...

0800cde4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800cde4:	b580      	push	{r7, lr}
 800cde6:	b086      	sub	sp, #24
 800cde8:	af02      	add	r7, sp, #8
 800cdea:	60f8      	str	r0, [r7, #12]
 800cdec:	60b9      	str	r1, [r7, #8]
 800cdee:	607a      	str	r2, [r7, #4]
 800cdf0:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800cdf2:	68f8      	ldr	r0, [r7, #12]
 800cdf4:	69bb      	ldr	r3, [r7, #24]
 800cdf6:	9300      	str	r3, [sp, #0]
 800cdf8:	683b      	ldr	r3, [r7, #0]
 800cdfa:	687a      	ldr	r2, [r7, #4]
 800cdfc:	68b9      	ldr	r1, [r7, #8]
 800cdfe:	f7ff fe8d 	bl	800cb1c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800ce02:	4a04      	ldr	r2, [pc, #16]	@ (800ce14 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800ce04:	68fb      	ldr	r3, [r7, #12]
 800ce06:	601a      	str	r2, [r3, #0]
    {

    }
 800ce08:	68fb      	ldr	r3, [r7, #12]
 800ce0a:	4618      	mov	r0, r3
 800ce0c:	3710      	adds	r7, #16
 800ce0e:	46bd      	mov	sp, r7
 800ce10:	bd80      	pop	{r7, pc}
 800ce12:	bf00      	nop
 800ce14:	08022b98 	.word	0x08022b98

0800ce18 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800ce18:	b580      	push	{r7, lr}
 800ce1a:	af00      	add	r7, sp, #0
 800ce1c:	4801      	ldr	r0, [pc, #4]	@ (800ce24 <__tcf_0+0xc>)
 800ce1e:	f000 f963 	bl	800d0e8 <_ZN12FrontendHeapD1Ev>
 800ce22:	bd80      	pop	{r7, pc}
 800ce24:	20000a94 	.word	0x20000a94

0800ce28 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800ce28:	b580      	push	{r7, lr}
 800ce2a:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800ce2c:	4b11      	ldr	r3, [pc, #68]	@ (800ce74 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800ce2e:	681b      	ldr	r3, [r3, #0]
 800ce30:	f3bf 8f5b 	dmb	ish
 800ce34:	f003 0301 	and.w	r3, r3, #1
 800ce38:	2b00      	cmp	r3, #0
 800ce3a:	bf0c      	ite	eq
 800ce3c:	2301      	moveq	r3, #1
 800ce3e:	2300      	movne	r3, #0
 800ce40:	b2db      	uxtb	r3, r3
 800ce42:	2b00      	cmp	r3, #0
 800ce44:	d013      	beq.n	800ce6e <_ZN12FrontendHeap11getInstanceEv+0x46>
 800ce46:	480b      	ldr	r0, [pc, #44]	@ (800ce74 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800ce48:	f013 fef7 	bl	8020c3a <__cxa_guard_acquire>
 800ce4c:	4603      	mov	r3, r0
 800ce4e:	2b00      	cmp	r3, #0
 800ce50:	bf14      	ite	ne
 800ce52:	2301      	movne	r3, #1
 800ce54:	2300      	moveq	r3, #0
 800ce56:	b2db      	uxtb	r3, r3
 800ce58:	2b00      	cmp	r3, #0
 800ce5a:	d008      	beq.n	800ce6e <_ZN12FrontendHeap11getInstanceEv+0x46>
 800ce5c:	4806      	ldr	r0, [pc, #24]	@ (800ce78 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800ce5e:	f000 f867 	bl	800cf30 <_ZN12FrontendHeapC1Ev>
 800ce62:	4806      	ldr	r0, [pc, #24]	@ (800ce7c <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800ce64:	f013 ff34 	bl	8020cd0 <atexit>
 800ce68:	4802      	ldr	r0, [pc, #8]	@ (800ce74 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800ce6a:	f013 fef2 	bl	8020c52 <__cxa_guard_release>
        return instance;
 800ce6e:	4b02      	ldr	r3, [pc, #8]	@ (800ce78 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800ce70:	4618      	mov	r0, r3
 800ce72:	bd80      	pop	{r7, pc}
 800ce74:	20000ca8 	.word	0x20000ca8
 800ce78:	20000a94 	.word	0x20000a94
 800ce7c:	0800ce19 	.word	0x0800ce19

0800ce80 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800ce80:	b580      	push	{r7, lr}
 800ce82:	b082      	sub	sp, #8
 800ce84:	af00      	add	r7, sp, #0
 800ce86:	6078      	str	r0, [r7, #4]
 800ce88:	4a05      	ldr	r2, [pc, #20]	@ (800cea0 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800ce8a:	687b      	ldr	r3, [r7, #4]
 800ce8c:	601a      	str	r2, [r3, #0]
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	4618      	mov	r0, r3
 800ce92:	f7ff fe63 	bl	800cb5c <_ZN8touchgfx7MVPHeapD1Ev>
 800ce96:	687b      	ldr	r3, [r7, #4]
 800ce98:	4618      	mov	r0, r3
 800ce9a:	3708      	adds	r7, #8
 800ce9c:	46bd      	mov	sp, r7
 800ce9e:	bd80      	pop	{r7, pc}
 800cea0:	08022b98 	.word	0x08022b98

0800cea4 <_ZN16FrontendHeapBaseD0Ev>:
 800cea4:	b580      	push	{r7, lr}
 800cea6:	b082      	sub	sp, #8
 800cea8:	af00      	add	r7, sp, #0
 800ceaa:	6078      	str	r0, [r7, #4]
 800ceac:	6878      	ldr	r0, [r7, #4]
 800ceae:	f7ff ffe7 	bl	800ce80 <_ZN16FrontendHeapBaseD1Ev>
 800ceb2:	2114      	movs	r1, #20
 800ceb4:	6878      	ldr	r0, [r7, #4]
 800ceb6:	f013 febe 	bl	8020c36 <_ZdlPvj>
 800ceba:	687b      	ldr	r3, [r7, #4]
 800cebc:	4618      	mov	r0, r3
 800cebe:	3708      	adds	r7, #8
 800cec0:	46bd      	mov	sp, r7
 800cec2:	bd80      	pop	{r7, pc}

0800cec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800cec4:	b580      	push	{r7, lr}
 800cec6:	b082      	sub	sp, #8
 800cec8:	af00      	add	r7, sp, #0
 800ceca:	6078      	str	r0, [r7, #4]
 800cecc:	687b      	ldr	r3, [r7, #4]
 800cece:	4618      	mov	r0, r3
 800ced0:	f000 fd30 	bl	800d934 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800ced4:	4a03      	ldr	r2, [pc, #12]	@ (800cee4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800ced6:	687b      	ldr	r3, [r7, #4]
 800ced8:	601a      	str	r2, [r3, #0]
 800ceda:	687b      	ldr	r3, [r7, #4]
 800cedc:	4618      	mov	r0, r3
 800cede:	3708      	adds	r7, #8
 800cee0:	46bd      	mov	sp, r7
 800cee2:	bd80      	pop	{r7, pc}
 800cee4:	08022b64 	.word	0x08022b64

0800cee8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800cee8:	b580      	push	{r7, lr}
 800ceea:	b082      	sub	sp, #8
 800ceec:	af00      	add	r7, sp, #0
 800ceee:	6078      	str	r0, [r7, #4]
 800cef0:	687b      	ldr	r3, [r7, #4]
 800cef2:	4618      	mov	r0, r3
 800cef4:	f000 fd1e 	bl	800d934 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800cef8:	4a03      	ldr	r2, [pc, #12]	@ (800cf08 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800cefa:	687b      	ldr	r3, [r7, #4]
 800cefc:	601a      	str	r2, [r3, #0]
 800cefe:	687b      	ldr	r3, [r7, #4]
 800cf00:	4618      	mov	r0, r3
 800cf02:	3708      	adds	r7, #8
 800cf04:	46bd      	mov	sp, r7
 800cf06:	bd80      	pop	{r7, pc}
 800cf08:	08022b30 	.word	0x08022b30

0800cf0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800cf0c:	b580      	push	{r7, lr}
 800cf0e:	b082      	sub	sp, #8
 800cf10:	af00      	add	r7, sp, #0
 800cf12:	6078      	str	r0, [r7, #4]
 800cf14:	687b      	ldr	r3, [r7, #4]
 800cf16:	4618      	mov	r0, r3
 800cf18:	f000 fd0c 	bl	800d934 <_ZN8touchgfx17AbstractPartitionC1Ev>
 800cf1c:	4a03      	ldr	r2, [pc, #12]	@ (800cf2c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800cf1e:	687b      	ldr	r3, [r7, #4]
 800cf20:	601a      	str	r2, [r3, #0]
 800cf22:	687b      	ldr	r3, [r7, #4]
 800cf24:	4618      	mov	r0, r3
 800cf26:	3708      	adds	r7, #8
 800cf28:	46bd      	mov	sp, r7
 800cf2a:	bd80      	pop	{r7, pc}
 800cf2c:	08022afc 	.word	0x08022afc

0800cf30 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800cf30:	b590      	push	{r4, r7, lr}
 800cf32:	b085      	sub	sp, #20
 800cf34:	af02      	add	r7, sp, #8
 800cf36:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 800cf38:	6878      	ldr	r0, [r7, #4]
 800cf3a:	687b      	ldr	r3, [r7, #4]
 800cf3c:	f103 0114 	add.w	r1, r3, #20
 800cf40:	687b      	ldr	r3, [r7, #4]
 800cf42:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800cf46:	687b      	ldr	r3, [r7, #4]
 800cf48:	f103 04a0 	add.w	r4, r3, #160	@ 0xa0
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800cf4c:	687b      	ldr	r3, [r7, #4]
 800cf4e:	33b8      	adds	r3, #184	@ 0xb8
                     app(model, *this)
 800cf50:	9300      	str	r3, [sp, #0]
 800cf52:	4623      	mov	r3, r4
 800cf54:	f7ff ff46 	bl	800cde4 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800cf58:	4a15      	ldr	r2, [pc, #84]	@ (800cfb0 <_ZN12FrontendHeapC1Ev+0x80>)
 800cf5a:	687b      	ldr	r3, [r7, #4]
 800cf5c:	601a      	str	r2, [r3, #0]
 800cf5e:	687b      	ldr	r3, [r7, #4]
 800cf60:	3314      	adds	r3, #20
 800cf62:	4618      	mov	r0, r3
 800cf64:	f7ff ffae 	bl	800cec4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800cf68:	687b      	ldr	r3, [r7, #4]
 800cf6a:	332c      	adds	r3, #44	@ 0x2c
 800cf6c:	4618      	mov	r0, r3
 800cf6e:	f7ff ffbb 	bl	800cee8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800cf72:	687b      	ldr	r3, [r7, #4]
 800cf74:	33a0      	adds	r3, #160	@ 0xa0
 800cf76:	4618      	mov	r0, r3
 800cf78:	f7ff ffc8 	bl	800cf0c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800cf7c:	687b      	ldr	r3, [r7, #4]
 800cf7e:	33b4      	adds	r3, #180	@ 0xb4
 800cf80:	4618      	mov	r0, r3
 800cf82:	f7fe fbd5 	bl	800b730 <_ZN5ModelC1Ev>
 800cf86:	687b      	ldr	r3, [r7, #4]
 800cf88:	f103 00b8 	add.w	r0, r3, #184	@ 0xb8
 800cf8c:	687b      	ldr	r3, [r7, #4]
 800cf8e:	33b4      	adds	r3, #180	@ 0xb4
 800cf90:	687a      	ldr	r2, [r7, #4]
 800cf92:	4619      	mov	r1, r3
 800cf94:	f7fe fbb6 	bl	800b704 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 800cf98:	687a      	ldr	r2, [r7, #4]
 800cf9a:	687b      	ldr	r3, [r7, #4]
 800cf9c:	33b8      	adds	r3, #184	@ 0xb8
 800cf9e:	4619      	mov	r1, r3
 800cfa0:	4610      	mov	r0, r2
 800cfa2:	f7ff ff11 	bl	800cdc8 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800cfa6:	687b      	ldr	r3, [r7, #4]
 800cfa8:	4618      	mov	r0, r3
 800cfaa:	370c      	adds	r7, #12
 800cfac:	46bd      	mov	sp, r7
 800cfae:	bd90      	pop	{r4, r7, pc}
 800cfb0:	08022ae8 	.word	0x08022ae8

0800cfb4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800cfb4:	b580      	push	{r7, lr}
 800cfb6:	b086      	sub	sp, #24
 800cfb8:	af02      	add	r7, sp, #8
 800cfba:	60f8      	str	r0, [r7, #12]
 800cfbc:	60b9      	str	r1, [r7, #8]
 800cfbe:	607a      	str	r2, [r7, #4]
 800cfc0:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800cfc2:	68f8      	ldr	r0, [r7, #12]
 800cfc4:	8bbb      	ldrh	r3, [r7, #28]
 800cfc6:	9301      	str	r3, [sp, #4]
 800cfc8:	8b3b      	ldrh	r3, [r7, #24]
 800cfca:	9300      	str	r3, [sp, #0]
 800cfcc:	683b      	ldr	r3, [r7, #0]
 800cfce:	687a      	ldr	r2, [r7, #4]
 800cfd0:	68b9      	ldr	r1, [r7, #8]
 800cfd2:	f7ff fe39 	bl	800cc48 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800cfd6:	4a04      	ldr	r2, [pc, #16]	@ (800cfe8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800cfd8:	68fb      	ldr	r3, [r7, #12]
 800cfda:	601a      	str	r2, [r3, #0]
    }
 800cfdc:	68fb      	ldr	r3, [r7, #12]
 800cfde:	4618      	mov	r0, r3
 800cfe0:	3710      	adds	r7, #16
 800cfe2:	46bd      	mov	sp, r7
 800cfe4:	bd80      	pop	{r7, pc}
 800cfe6:	bf00      	nop
 800cfe8:	08022bbc 	.word	0x08022bbc

0800cfec <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800cfec:	b580      	push	{r7, lr}
 800cfee:	b086      	sub	sp, #24
 800cff0:	af02      	add	r7, sp, #8
 800cff2:	60f8      	str	r0, [r7, #12]
 800cff4:	60b9      	str	r1, [r7, #8]
 800cff6:	607a      	str	r2, [r7, #4]
 800cff8:	603b      	str	r3, [r7, #0]
 800cffa:	68f8      	ldr	r0, [r7, #12]
 800cffc:	8bbb      	ldrh	r3, [r7, #28]
 800cffe:	9301      	str	r3, [sp, #4]
 800d000:	8b3b      	ldrh	r3, [r7, #24]
 800d002:	9300      	str	r3, [sp, #0]
 800d004:	683b      	ldr	r3, [r7, #0]
 800d006:	687a      	ldr	r2, [r7, #4]
 800d008:	68b9      	ldr	r1, [r7, #8]
 800d00a:	f7ff ffd3 	bl	800cfb4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800d00e:	4a04      	ldr	r2, [pc, #16]	@ (800d020 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800d010:	68fb      	ldr	r3, [r7, #12]
 800d012:	601a      	str	r2, [r3, #0]
    }
 800d014:	68fb      	ldr	r3, [r7, #12]
 800d016:	4618      	mov	r0, r3
 800d018:	3710      	adds	r7, #16
 800d01a:	46bd      	mov	sp, r7
 800d01c:	bd80      	pop	{r7, pc}
 800d01e:	bf00      	nop
 800d020:	0802299c 	.word	0x0802299c

0800d024 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800d024:	b480      	push	{r7}
 800d026:	b083      	sub	sp, #12
 800d028:	af00      	add	r7, sp, #0
 800d02a:	6078      	str	r0, [r7, #4]
 800d02c:	4a04      	ldr	r2, [pc, #16]	@ (800d040 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800d02e:	687b      	ldr	r3, [r7, #4]
 800d030:	601a      	str	r2, [r3, #0]
 800d032:	687b      	ldr	r3, [r7, #4]
 800d034:	4618      	mov	r0, r3
 800d036:	370c      	adds	r7, #12
 800d038:	46bd      	mov	sp, r7
 800d03a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d03e:	4770      	bx	lr
 800d040:	08022984 	.word	0x08022984

0800d044 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800d044:	b580      	push	{r7, lr}
 800d046:	b082      	sub	sp, #8
 800d048:	af00      	add	r7, sp, #0
 800d04a:	6078      	str	r0, [r7, #4]
 800d04c:	687b      	ldr	r3, [r7, #4]
 800d04e:	4618      	mov	r0, r3
 800d050:	f7ff ffe8 	bl	800d024 <_ZN8touchgfx15TouchControllerC1Ev>
 800d054:	4a03      	ldr	r2, [pc, #12]	@ (800d064 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800d056:	687b      	ldr	r3, [r7, #4]
 800d058:	601a      	str	r2, [r3, #0]
 800d05a:	687b      	ldr	r3, [r7, #4]
 800d05c:	4618      	mov	r0, r3
 800d05e:	3708      	adds	r7, #8
 800d060:	46bd      	mov	sp, r7
 800d062:	bd80      	pop	{r7, pc}
 800d064:	0802296c 	.word	0x0802296c

0800d068 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 800d068:	b590      	push	{r4, r7, lr}
 800d06a:	b085      	sub	sp, #20
 800d06c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800d06e:	f7fe f94b 	bl	800b308 <_ZN14BitmapDatabase11getInstanceEv>
 800d072:	4604      	mov	r4, r0
 800d074:	f7fe f952 	bl	800b31c <_ZN14BitmapDatabase15getInstanceSizeEv>
 800d078:	4603      	mov	r3, r0
 800d07a:	4619      	mov	r1, r3
 800d07c:	2300      	movs	r3, #0
 800d07e:	9300      	str	r3, [sp, #0]
 800d080:	2300      	movs	r3, #0
 800d082:	2200      	movs	r2, #0
 800d084:	4620      	mov	r0, r4
 800d086:	f005 fadb 	bl	8012640 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800d08a:	4809      	ldr	r0, [pc, #36]	@ (800d0b0 <touchgfx_init+0x48>)
 800d08c:	f7ff fd36 	bl	800cafc <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800d090:	2000      	movs	r0, #0
 800d092:	f7fe fa6f 	bl	800b574 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800d096:	4807      	ldr	r0, [pc, #28]	@ (800d0b4 <touchgfx_init+0x4c>)
 800d098:	f005 fa3a 	bl	8012510 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800d09c:	f7ff fec4 	bl	800ce28 <_ZN12FrontendHeap11getInstanceEv>
 800d0a0:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800d0a2:	4805      	ldr	r0, [pc, #20]	@ (800d0b8 <touchgfx_init+0x50>)
 800d0a4:	f7fe fed4 	bl	800be50 <_ZN11TouchGFXHAL10initializeEv>
}
 800d0a8:	bf00      	nop
 800d0aa:	370c      	adds	r7, #12
 800d0ac:	46bd      	mov	sp, r7
 800d0ae:	bd90      	pop	{r4, r7, pc}
 800d0b0:	20001adc 	.word	0x20001adc
 800d0b4:	20000174 	.word	0x20000174
 800d0b8:	20001ae0 	.word	0x20001ae0

0800d0bc <touchgfx_components_init>:

void touchgfx_components_init()
{
 800d0bc:	b480      	push	{r7}
 800d0be:	af00      	add	r7, sp, #0
}
 800d0c0:	bf00      	nop
 800d0c2:	46bd      	mov	sp, r7
 800d0c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d0c8:	4770      	bx	lr
	...

0800d0cc <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800d0cc:	b580      	push	{r7, lr}
 800d0ce:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800d0d0:	f7fe ffd4 	bl	800c07c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800d0d4:	4603      	mov	r3, r0
 800d0d6:	2b00      	cmp	r3, #0
 800d0d8:	d002      	beq.n	800d0e0 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800d0da:	4802      	ldr	r0, [pc, #8]	@ (800d0e4 <touchgfx_taskEntry+0x18>)
 800d0dc:	f7fe fd9e 	bl	800bc1c <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800d0e0:	bf00      	nop
 800d0e2:	bd80      	pop	{r7, pc}
 800d0e4:	20001ae0 	.word	0x20001ae0

0800d0e8 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800d0e8:	b580      	push	{r7, lr}
 800d0ea:	b082      	sub	sp, #8
 800d0ec:	af00      	add	r7, sp, #0
 800d0ee:	6078      	str	r0, [r7, #4]
 800d0f0:	4a0f      	ldr	r2, [pc, #60]	@ (800d130 <_ZN12FrontendHeapD1Ev+0x48>)
 800d0f2:	687b      	ldr	r3, [r7, #4]
 800d0f4:	601a      	str	r2, [r3, #0]
 800d0f6:	687b      	ldr	r3, [r7, #4]
 800d0f8:	33b8      	adds	r3, #184	@ 0xb8
 800d0fa:	4618      	mov	r0, r3
 800d0fc:	f7fe facc 	bl	800b698 <_ZN19FrontendApplicationD1Ev>
 800d100:	687b      	ldr	r3, [r7, #4]
 800d102:	33a0      	adds	r3, #160	@ 0xa0
 800d104:	4618      	mov	r0, r3
 800d106:	f000 f827 	bl	800d158 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d10a:	687b      	ldr	r3, [r7, #4]
 800d10c:	332c      	adds	r3, #44	@ 0x2c
 800d10e:	4618      	mov	r0, r3
 800d110:	f000 f844 	bl	800d19c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d114:	687b      	ldr	r3, [r7, #4]
 800d116:	3314      	adds	r3, #20
 800d118:	4618      	mov	r0, r3
 800d11a:	f000 f861 	bl	800d1e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d11e:	687b      	ldr	r3, [r7, #4]
 800d120:	4618      	mov	r0, r3
 800d122:	f7ff fead 	bl	800ce80 <_ZN16FrontendHeapBaseD1Ev>
 800d126:	687b      	ldr	r3, [r7, #4]
 800d128:	4618      	mov	r0, r3
 800d12a:	3708      	adds	r7, #8
 800d12c:	46bd      	mov	sp, r7
 800d12e:	bd80      	pop	{r7, pc}
 800d130:	08022ae8 	.word	0x08022ae8

0800d134 <_ZN12FrontendHeapD0Ev>:
 800d134:	b580      	push	{r7, lr}
 800d136:	b082      	sub	sp, #8
 800d138:	af00      	add	r7, sp, #0
 800d13a:	6078      	str	r0, [r7, #4]
 800d13c:	6878      	ldr	r0, [r7, #4]
 800d13e:	f7ff ffd3 	bl	800d0e8 <_ZN12FrontendHeapD1Ev>
 800d142:	f44f 7105 	mov.w	r1, #532	@ 0x214
 800d146:	6878      	ldr	r0, [r7, #4]
 800d148:	f013 fd75 	bl	8020c36 <_ZdlPvj>
 800d14c:	687b      	ldr	r3, [r7, #4]
 800d14e:	4618      	mov	r0, r3
 800d150:	3708      	adds	r7, #8
 800d152:	46bd      	mov	sp, r7
 800d154:	bd80      	pop	{r7, pc}
	...

0800d158 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d158:	b580      	push	{r7, lr}
 800d15a:	b082      	sub	sp, #8
 800d15c:	af00      	add	r7, sp, #0
 800d15e:	6078      	str	r0, [r7, #4]
 800d160:	4a05      	ldr	r2, [pc, #20]	@ (800d178 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	601a      	str	r2, [r3, #0]
 800d166:	687b      	ldr	r3, [r7, #4]
 800d168:	4618      	mov	r0, r3
 800d16a:	f000 fbe2 	bl	800d932 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d16e:	687b      	ldr	r3, [r7, #4]
 800d170:	4618      	mov	r0, r3
 800d172:	3708      	adds	r7, #8
 800d174:	46bd      	mov	sp, r7
 800d176:	bd80      	pop	{r7, pc}
 800d178:	08022afc 	.word	0x08022afc

0800d17c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d17c:	b580      	push	{r7, lr}
 800d17e:	b082      	sub	sp, #8
 800d180:	af00      	add	r7, sp, #0
 800d182:	6078      	str	r0, [r7, #4]
 800d184:	6878      	ldr	r0, [r7, #4]
 800d186:	f7ff ffe7 	bl	800d158 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d18a:	2114      	movs	r1, #20
 800d18c:	6878      	ldr	r0, [r7, #4]
 800d18e:	f013 fd52 	bl	8020c36 <_ZdlPvj>
 800d192:	687b      	ldr	r3, [r7, #4]
 800d194:	4618      	mov	r0, r3
 800d196:	3708      	adds	r7, #8
 800d198:	46bd      	mov	sp, r7
 800d19a:	bd80      	pop	{r7, pc}

0800d19c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d19c:	b580      	push	{r7, lr}
 800d19e:	b082      	sub	sp, #8
 800d1a0:	af00      	add	r7, sp, #0
 800d1a2:	6078      	str	r0, [r7, #4]
 800d1a4:	4a05      	ldr	r2, [pc, #20]	@ (800d1bc <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d1a6:	687b      	ldr	r3, [r7, #4]
 800d1a8:	601a      	str	r2, [r3, #0]
 800d1aa:	687b      	ldr	r3, [r7, #4]
 800d1ac:	4618      	mov	r0, r3
 800d1ae:	f000 fbc0 	bl	800d932 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d1b2:	687b      	ldr	r3, [r7, #4]
 800d1b4:	4618      	mov	r0, r3
 800d1b6:	3708      	adds	r7, #8
 800d1b8:	46bd      	mov	sp, r7
 800d1ba:	bd80      	pop	{r7, pc}
 800d1bc:	08022b30 	.word	0x08022b30

0800d1c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d1c0:	b580      	push	{r7, lr}
 800d1c2:	b082      	sub	sp, #8
 800d1c4:	af00      	add	r7, sp, #0
 800d1c6:	6078      	str	r0, [r7, #4]
 800d1c8:	6878      	ldr	r0, [r7, #4]
 800d1ca:	f7ff ffe7 	bl	800d19c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d1ce:	2174      	movs	r1, #116	@ 0x74
 800d1d0:	6878      	ldr	r0, [r7, #4]
 800d1d2:	f013 fd30 	bl	8020c36 <_ZdlPvj>
 800d1d6:	687b      	ldr	r3, [r7, #4]
 800d1d8:	4618      	mov	r0, r3
 800d1da:	3708      	adds	r7, #8
 800d1dc:	46bd      	mov	sp, r7
 800d1de:	bd80      	pop	{r7, pc}

0800d1e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800d1e0:	b580      	push	{r7, lr}
 800d1e2:	b082      	sub	sp, #8
 800d1e4:	af00      	add	r7, sp, #0
 800d1e6:	6078      	str	r0, [r7, #4]
 800d1e8:	4a05      	ldr	r2, [pc, #20]	@ (800d200 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800d1ea:	687b      	ldr	r3, [r7, #4]
 800d1ec:	601a      	str	r2, [r3, #0]
 800d1ee:	687b      	ldr	r3, [r7, #4]
 800d1f0:	4618      	mov	r0, r3
 800d1f2:	f000 fb9e 	bl	800d932 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800d1f6:	687b      	ldr	r3, [r7, #4]
 800d1f8:	4618      	mov	r0, r3
 800d1fa:	3708      	adds	r7, #8
 800d1fc:	46bd      	mov	sp, r7
 800d1fe:	bd80      	pop	{r7, pc}
 800d200:	08022b64 	.word	0x08022b64

0800d204 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800d204:	b580      	push	{r7, lr}
 800d206:	b082      	sub	sp, #8
 800d208:	af00      	add	r7, sp, #0
 800d20a:	6078      	str	r0, [r7, #4]
 800d20c:	6878      	ldr	r0, [r7, #4]
 800d20e:	f7ff ffe7 	bl	800d1e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800d212:	2118      	movs	r1, #24
 800d214:	6878      	ldr	r0, [r7, #4]
 800d216:	f013 fd0e 	bl	8020c36 <_ZdlPvj>
 800d21a:	687b      	ldr	r3, [r7, #4]
 800d21c:	4618      	mov	r0, r3
 800d21e:	3708      	adds	r7, #8
 800d220:	46bd      	mov	sp, r7
 800d222:	bd80      	pop	{r7, pc}

0800d224 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800d224:	b580      	push	{r7, lr}
 800d226:	b082      	sub	sp, #8
 800d228:	af00      	add	r7, sp, #0
 800d22a:	6078      	str	r0, [r7, #4]
 800d22c:	4a05      	ldr	r2, [pc, #20]	@ (800d244 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800d22e:	687b      	ldr	r3, [r7, #4]
 800d230:	601a      	str	r2, [r3, #0]
 800d232:	687b      	ldr	r3, [r7, #4]
 800d234:	4618      	mov	r0, r3
 800d236:	f7ff fcb1 	bl	800cb9c <_ZN8touchgfx3LCDD1Ev>
 800d23a:	687b      	ldr	r3, [r7, #4]
 800d23c:	4618      	mov	r0, r3
 800d23e:	3708      	adds	r7, #8
 800d240:	46bd      	mov	sp, r7
 800d242:	bd80      	pop	{r7, pc}
 800d244:	080233a0 	.word	0x080233a0

0800d248 <_ZN8touchgfx8LCD16bppD0Ev>:
 800d248:	b580      	push	{r7, lr}
 800d24a:	b082      	sub	sp, #8
 800d24c:	af00      	add	r7, sp, #0
 800d24e:	6078      	str	r0, [r7, #4]
 800d250:	6878      	ldr	r0, [r7, #4]
 800d252:	f7ff ffe7 	bl	800d224 <_ZN8touchgfx8LCD16bppD1Ev>
 800d256:	218c      	movs	r1, #140	@ 0x8c
 800d258:	6878      	ldr	r0, [r7, #4]
 800d25a:	f013 fcec 	bl	8020c36 <_ZdlPvj>
 800d25e:	687b      	ldr	r3, [r7, #4]
 800d260:	4618      	mov	r0, r3
 800d262:	3708      	adds	r7, #8
 800d264:	46bd      	mov	sp, r7
 800d266:	bd80      	pop	{r7, pc}

0800d268 <_Z41__static_initialization_and_destruction_0ii>:
 800d268:	b580      	push	{r7, lr}
 800d26a:	b084      	sub	sp, #16
 800d26c:	af02      	add	r7, sp, #8
 800d26e:	6078      	str	r0, [r7, #4]
 800d270:	6039      	str	r1, [r7, #0]
 800d272:	687b      	ldr	r3, [r7, #4]
 800d274:	2b01      	cmp	r3, #1
 800d276:	d119      	bne.n	800d2ac <_Z41__static_initialization_and_destruction_0ii+0x44>
 800d278:	683b      	ldr	r3, [r7, #0]
 800d27a:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d27e:	4293      	cmp	r3, r2
 800d280:	d114      	bne.n	800d2ac <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800d282:	4818      	ldr	r0, [pc, #96]	@ (800d2e4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d284:	f7ff fede 	bl	800d044 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800d288:	4817      	ldr	r0, [pc, #92]	@ (800d2e8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d28a:	f7ff f85f 	bl	800c34c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800d28e:	4817      	ldr	r0, [pc, #92]	@ (800d2ec <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d290:	f00a fade 	bl	8017850 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 480, 272);
 800d294:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800d298:	9301      	str	r3, [sp, #4]
 800d29a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800d29e:	9300      	str	r3, [sp, #0]
 800d2a0:	4b10      	ldr	r3, [pc, #64]	@ (800d2e4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d2a2:	4a12      	ldr	r2, [pc, #72]	@ (800d2ec <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d2a4:	4910      	ldr	r1, [pc, #64]	@ (800d2e8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d2a6:	4812      	ldr	r0, [pc, #72]	@ (800d2f0 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800d2a8:	f7ff fea0 	bl	800cfec <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800d2ac:	687b      	ldr	r3, [r7, #4]
 800d2ae:	2b00      	cmp	r3, #0
 800d2b0:	d113      	bne.n	800d2da <_Z41__static_initialization_and_destruction_0ii+0x72>
 800d2b2:	683b      	ldr	r3, [r7, #0]
 800d2b4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d2b8:	4293      	cmp	r3, r2
 800d2ba:	d10e      	bne.n	800d2da <_Z41__static_initialization_and_destruction_0ii+0x72>
 800d2bc:	480c      	ldr	r0, [pc, #48]	@ (800d2f0 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800d2be:	f7fe fe57 	bl	800bf70 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800d2c2:	480c      	ldr	r0, [pc, #48]	@ (800d2f4 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800d2c4:	f7fc fc4a 	bl	8009b5c <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800d2c8:	4808      	ldr	r0, [pc, #32]	@ (800d2ec <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800d2ca:	f7ff ffab 	bl	800d224 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800d2ce:	4806      	ldr	r0, [pc, #24]	@ (800d2e8 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800d2d0:	f7ff f866 	bl	800c3a0 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800d2d4:	4803      	ldr	r0, [pc, #12]	@ (800d2e4 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800d2d6:	f7fe fba7 	bl	800ba28 <_ZN20STM32TouchControllerD1Ev>
}
 800d2da:	bf00      	nop
 800d2dc:	3708      	adds	r7, #8
 800d2de:	46bd      	mov	sp, r7
 800d2e0:	bd80      	pop	{r7, pc}
 800d2e2:	bf00      	nop
 800d2e4:	20000cac 	.word	0x20000cac
 800d2e8:	20000cb0 	.word	0x20000cb0
 800d2ec:	20001a50 	.word	0x20001a50
 800d2f0:	20001ae0 	.word	0x20001ae0
 800d2f4:	20000174 	.word	0x20000174

0800d2f8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800d2f8:	b480      	push	{r7}
 800d2fa:	b083      	sub	sp, #12
 800d2fc:	af00      	add	r7, sp, #0
 800d2fe:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800d300:	2301      	movs	r3, #1
    }
 800d302:	4618      	mov	r0, r3
 800d304:	370c      	adds	r7, #12
 800d306:	46bd      	mov	sp, r7
 800d308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d30c:	4770      	bx	lr

0800d30e <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800d30e:	b480      	push	{r7}
 800d310:	b083      	sub	sp, #12
 800d312:	af00      	add	r7, sp, #0
 800d314:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800d316:	230c      	movs	r3, #12
    }
 800d318:	4618      	mov	r0, r3
 800d31a:	370c      	adds	r7, #12
 800d31c:	46bd      	mov	sp, r7
 800d31e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d322:	4770      	bx	lr

0800d324 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800d324:	b480      	push	{r7}
 800d326:	b083      	sub	sp, #12
 800d328:	af00      	add	r7, sp, #0
 800d32a:	6078      	str	r0, [r7, #4]
 800d32c:	460b      	mov	r3, r1
 800d32e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800d330:	887a      	ldrh	r2, [r7, #2]
 800d332:	4613      	mov	r3, r2
 800d334:	005b      	lsls	r3, r3, #1
 800d336:	4413      	add	r3, r2
 800d338:	009b      	lsls	r3, r3, #2
 800d33a:	3308      	adds	r3, #8
 800d33c:	687a      	ldr	r2, [r7, #4]
 800d33e:	4413      	add	r3, r2
    }
 800d340:	4618      	mov	r0, r3
 800d342:	370c      	adds	r7, #12
 800d344:	46bd      	mov	sp, r7
 800d346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d34a:	4770      	bx	lr

0800d34c <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800d34c:	b480      	push	{r7}
 800d34e:	b083      	sub	sp, #12
 800d350:	af00      	add	r7, sp, #0
 800d352:	6078      	str	r0, [r7, #4]
 800d354:	460b      	mov	r3, r1
 800d356:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800d358:	887a      	ldrh	r2, [r7, #2]
 800d35a:	4613      	mov	r3, r2
 800d35c:	005b      	lsls	r3, r3, #1
 800d35e:	4413      	add	r3, r2
 800d360:	009b      	lsls	r3, r3, #2
 800d362:	3308      	adds	r3, #8
 800d364:	687a      	ldr	r2, [r7, #4]
 800d366:	4413      	add	r3, r2
    }
 800d368:	4618      	mov	r0, r3
 800d36a:	370c      	adds	r7, #12
 800d36c:	46bd      	mov	sp, r7
 800d36e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d372:	4770      	bx	lr

0800d374 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800d374:	b480      	push	{r7}
 800d376:	b083      	sub	sp, #12
 800d378:	af00      	add	r7, sp, #0
 800d37a:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800d37c:	2301      	movs	r3, #1
    }
 800d37e:	4618      	mov	r0, r3
 800d380:	370c      	adds	r7, #12
 800d382:	46bd      	mov	sp, r7
 800d384:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d388:	4770      	bx	lr

0800d38a <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800d38a:	b480      	push	{r7}
 800d38c:	b083      	sub	sp, #12
 800d38e:	af00      	add	r7, sp, #0
 800d390:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800d392:	236c      	movs	r3, #108	@ 0x6c
    }
 800d394:	4618      	mov	r0, r3
 800d396:	370c      	adds	r7, #12
 800d398:	46bd      	mov	sp, r7
 800d39a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d39e:	4770      	bx	lr

0800d3a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800d3a0:	b480      	push	{r7}
 800d3a2:	b083      	sub	sp, #12
 800d3a4:	af00      	add	r7, sp, #0
 800d3a6:	6078      	str	r0, [r7, #4]
 800d3a8:	460b      	mov	r3, r1
 800d3aa:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d3ac:	887b      	ldrh	r3, [r7, #2]
 800d3ae:	226c      	movs	r2, #108	@ 0x6c
 800d3b0:	fb02 f303 	mul.w	r3, r2, r3
 800d3b4:	3308      	adds	r3, #8
 800d3b6:	687a      	ldr	r2, [r7, #4]
 800d3b8:	4413      	add	r3, r2
    }
 800d3ba:	4618      	mov	r0, r3
 800d3bc:	370c      	adds	r7, #12
 800d3be:	46bd      	mov	sp, r7
 800d3c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3c4:	4770      	bx	lr

0800d3c6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800d3c6:	b480      	push	{r7}
 800d3c8:	b083      	sub	sp, #12
 800d3ca:	af00      	add	r7, sp, #0
 800d3cc:	6078      	str	r0, [r7, #4]
 800d3ce:	460b      	mov	r3, r1
 800d3d0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d3d2:	887b      	ldrh	r3, [r7, #2]
 800d3d4:	226c      	movs	r2, #108	@ 0x6c
 800d3d6:	fb02 f303 	mul.w	r3, r2, r3
 800d3da:	3308      	adds	r3, #8
 800d3dc:	687a      	ldr	r2, [r7, #4]
 800d3de:	4413      	add	r3, r2
    }
 800d3e0:	4618      	mov	r0, r3
 800d3e2:	370c      	adds	r7, #12
 800d3e4:	46bd      	mov	sp, r7
 800d3e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d3ea:	4770      	bx	lr

0800d3ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800d3ec:	b480      	push	{r7}
 800d3ee:	b083      	sub	sp, #12
 800d3f0:	af00      	add	r7, sp, #0
 800d3f2:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800d3f4:	2301      	movs	r3, #1
    }
 800d3f6:	4618      	mov	r0, r3
 800d3f8:	370c      	adds	r7, #12
 800d3fa:	46bd      	mov	sp, r7
 800d3fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d400:	4770      	bx	lr

0800d402 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800d402:	b480      	push	{r7}
 800d404:	b083      	sub	sp, #12
 800d406:	af00      	add	r7, sp, #0
 800d408:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800d40a:	2310      	movs	r3, #16
    }
 800d40c:	4618      	mov	r0, r3
 800d40e:	370c      	adds	r7, #12
 800d410:	46bd      	mov	sp, r7
 800d412:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d416:	4770      	bx	lr

0800d418 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800d418:	b480      	push	{r7}
 800d41a:	b083      	sub	sp, #12
 800d41c:	af00      	add	r7, sp, #0
 800d41e:	6078      	str	r0, [r7, #4]
 800d420:	460b      	mov	r3, r1
 800d422:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d424:	887b      	ldrh	r3, [r7, #2]
 800d426:	011b      	lsls	r3, r3, #4
 800d428:	3308      	adds	r3, #8
 800d42a:	687a      	ldr	r2, [r7, #4]
 800d42c:	4413      	add	r3, r2
    }
 800d42e:	4618      	mov	r0, r3
 800d430:	370c      	adds	r7, #12
 800d432:	46bd      	mov	sp, r7
 800d434:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d438:	4770      	bx	lr

0800d43a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800d43a:	b480      	push	{r7}
 800d43c:	b083      	sub	sp, #12
 800d43e:	af00      	add	r7, sp, #0
 800d440:	6078      	str	r0, [r7, #4]
 800d442:	460b      	mov	r3, r1
 800d444:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800d446:	887b      	ldrh	r3, [r7, #2]
 800d448:	011b      	lsls	r3, r3, #4
 800d44a:	3308      	adds	r3, #8
 800d44c:	687a      	ldr	r2, [r7, #4]
 800d44e:	4413      	add	r3, r2
    }
 800d450:	4618      	mov	r0, r3
 800d452:	370c      	adds	r7, #12
 800d454:	46bd      	mov	sp, r7
 800d456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d45a:	4770      	bx	lr

0800d45c <_GLOBAL__sub_I_touchgfx_init>:
 800d45c:	b580      	push	{r7, lr}
 800d45e:	af00      	add	r7, sp, #0
 800d460:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d464:	2001      	movs	r0, #1
 800d466:	f7ff feff 	bl	800d268 <_Z41__static_initialization_and_destruction_0ii>
 800d46a:	bd80      	pop	{r7, pc}

0800d46c <_GLOBAL__sub_D_touchgfx_init>:
 800d46c:	b580      	push	{r7, lr}
 800d46e:	af00      	add	r7, sp, #0
 800d470:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d474:	2000      	movs	r0, #0
 800d476:	f7ff fef7 	bl	800d268 <_Z41__static_initialization_and_destruction_0ii>
 800d47a:	bd80      	pop	{r7, pc}

0800d47c <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800d47c:	b580      	push	{r7, lr}
 800d47e:	b082      	sub	sp, #8
 800d480:	af00      	add	r7, sp, #0
 800d482:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 800d484:	687b      	ldr	r3, [r7, #4]
 800d486:	681b      	ldr	r3, [r3, #0]
 800d488:	3320      	adds	r3, #32
 800d48a:	681b      	ldr	r3, [r3, #0]
 800d48c:	6878      	ldr	r0, [r7, #4]
 800d48e:	4798      	blx	r3
    }
 800d490:	bf00      	nop
 800d492:	3708      	adds	r7, #8
 800d494:	46bd      	mov	sp, r7
 800d496:	bd80      	pop	{r7, pc}

0800d498 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 800d498:	b480      	push	{r7}
 800d49a:	b083      	sub	sp, #12
 800d49c:	af00      	add	r7, sp, #0
 800d49e:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 800d4a0:	687b      	ldr	r3, [r7, #4]
 800d4a2:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800d4a6:	3301      	adds	r3, #1
 800d4a8:	b2da      	uxtb	r2, r3
 800d4aa:	687b      	ldr	r3, [r7, #4]
 800d4ac:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800d4b0:	bf00      	nop
 800d4b2:	370c      	adds	r7, #12
 800d4b4:	46bd      	mov	sp, r7
 800d4b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4ba:	4770      	bx	lr

0800d4bc <__NVIC_EnableIRQ>:
{
 800d4bc:	b480      	push	{r7}
 800d4be:	b083      	sub	sp, #12
 800d4c0:	af00      	add	r7, sp, #0
 800d4c2:	4603      	mov	r3, r0
 800d4c4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800d4c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d4ca:	2b00      	cmp	r3, #0
 800d4cc:	db0b      	blt.n	800d4e6 <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800d4ce:	79fb      	ldrb	r3, [r7, #7]
 800d4d0:	f003 021f 	and.w	r2, r3, #31
 800d4d4:	4907      	ldr	r1, [pc, #28]	@ (800d4f4 <__NVIC_EnableIRQ+0x38>)
 800d4d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d4da:	095b      	lsrs	r3, r3, #5
 800d4dc:	2001      	movs	r0, #1
 800d4de:	fa00 f202 	lsl.w	r2, r0, r2
 800d4e2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 800d4e6:	bf00      	nop
 800d4e8:	370c      	adds	r7, #12
 800d4ea:	46bd      	mov	sp, r7
 800d4ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4f0:	4770      	bx	lr
 800d4f2:	bf00      	nop
 800d4f4:	e000e100 	.word	0xe000e100

0800d4f8 <__NVIC_DisableIRQ>:
{
 800d4f8:	b480      	push	{r7}
 800d4fa:	b083      	sub	sp, #12
 800d4fc:	af00      	add	r7, sp, #0
 800d4fe:	4603      	mov	r3, r0
 800d500:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800d502:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d506:	2b00      	cmp	r3, #0
 800d508:	db12      	blt.n	800d530 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800d50a:	79fb      	ldrb	r3, [r7, #7]
 800d50c:	f003 021f 	and.w	r2, r3, #31
 800d510:	490a      	ldr	r1, [pc, #40]	@ (800d53c <__NVIC_DisableIRQ+0x44>)
 800d512:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d516:	095b      	lsrs	r3, r3, #5
 800d518:	2001      	movs	r0, #1
 800d51a:	fa00 f202 	lsl.w	r2, r0, r2
 800d51e:	3320      	adds	r3, #32
 800d520:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800d524:	f3bf 8f4f 	dsb	sy
}
 800d528:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800d52a:	f3bf 8f6f 	isb	sy
}
 800d52e:	bf00      	nop
}
 800d530:	bf00      	nop
 800d532:	370c      	adds	r7, #12
 800d534:	46bd      	mov	sp, r7
 800d536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d53a:	4770      	bx	lr
 800d53c:	e000e100 	.word	0xe000e100

0800d540 <__NVIC_SetPriority>:
{
 800d540:	b480      	push	{r7}
 800d542:	b083      	sub	sp, #12
 800d544:	af00      	add	r7, sp, #0
 800d546:	4603      	mov	r3, r0
 800d548:	6039      	str	r1, [r7, #0]
 800d54a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800d54c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d550:	2b00      	cmp	r3, #0
 800d552:	db0a      	blt.n	800d56a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d554:	683b      	ldr	r3, [r7, #0]
 800d556:	b2da      	uxtb	r2, r3
 800d558:	490c      	ldr	r1, [pc, #48]	@ (800d58c <__NVIC_SetPriority+0x4c>)
 800d55a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800d55e:	0112      	lsls	r2, r2, #4
 800d560:	b2d2      	uxtb	r2, r2
 800d562:	440b      	add	r3, r1
 800d564:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 800d568:	e00a      	b.n	800d580 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800d56a:	683b      	ldr	r3, [r7, #0]
 800d56c:	b2da      	uxtb	r2, r3
 800d56e:	4908      	ldr	r1, [pc, #32]	@ (800d590 <__NVIC_SetPriority+0x50>)
 800d570:	79fb      	ldrb	r3, [r7, #7]
 800d572:	f003 030f 	and.w	r3, r3, #15
 800d576:	3b04      	subs	r3, #4
 800d578:	0112      	lsls	r2, r2, #4
 800d57a:	b2d2      	uxtb	r2, r2
 800d57c:	440b      	add	r3, r1
 800d57e:	761a      	strb	r2, [r3, #24]
}
 800d580:	bf00      	nop
 800d582:	370c      	adds	r7, #12
 800d584:	46bd      	mov	sp, r7
 800d586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d58a:	4770      	bx	lr
 800d58c:	e000e100 	.word	0xe000e100
 800d590:	e000ed00 	.word	0xe000ed00

0800d594 <SCB_CleanInvalidateDCache>:
{
 800d594:	b480      	push	{r7}
 800d596:	b085      	sub	sp, #20
 800d598:	af00      	add	r7, sp, #0
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800d59a:	4b20      	ldr	r3, [pc, #128]	@ (800d61c <SCB_CleanInvalidateDCache+0x88>)
 800d59c:	2200      	movs	r2, #0
 800d59e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 800d5a2:	f3bf 8f4f 	dsb	sy
}
 800d5a6:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 800d5a8:	4b1c      	ldr	r3, [pc, #112]	@ (800d61c <SCB_CleanInvalidateDCache+0x88>)
 800d5aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800d5ae:	607b      	str	r3, [r7, #4]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 800d5b0:	687b      	ldr	r3, [r7, #4]
 800d5b2:	0b5b      	lsrs	r3, r3, #13
 800d5b4:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800d5b8:	60fb      	str	r3, [r7, #12]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800d5ba:	687b      	ldr	r3, [r7, #4]
 800d5bc:	08db      	lsrs	r3, r3, #3
 800d5be:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800d5c2:	60bb      	str	r3, [r7, #8]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800d5c4:	68fb      	ldr	r3, [r7, #12]
 800d5c6:	015a      	lsls	r2, r3, #5
 800d5c8:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 800d5cc:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 800d5ce:	68ba      	ldr	r2, [r7, #8]
 800d5d0:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 800d5d2:	4912      	ldr	r1, [pc, #72]	@ (800d61c <SCB_CleanInvalidateDCache+0x88>)
 800d5d4:	4313      	orrs	r3, r2
 800d5d6:	f8c1 3274 	str.w	r3, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 800d5da:	68bb      	ldr	r3, [r7, #8]
 800d5dc:	1e5a      	subs	r2, r3, #1
 800d5de:	60ba      	str	r2, [r7, #8]
 800d5e0:	2b00      	cmp	r3, #0
 800d5e2:	bf14      	ite	ne
 800d5e4:	2301      	movne	r3, #1
 800d5e6:	2300      	moveq	r3, #0
 800d5e8:	b2db      	uxtb	r3, r3
 800d5ea:	2b00      	cmp	r3, #0
 800d5ec:	d1ea      	bne.n	800d5c4 <SCB_CleanInvalidateDCache+0x30>
    } while(sets-- != 0U);
 800d5ee:	68fb      	ldr	r3, [r7, #12]
 800d5f0:	1e5a      	subs	r2, r3, #1
 800d5f2:	60fa      	str	r2, [r7, #12]
 800d5f4:	2b00      	cmp	r3, #0
 800d5f6:	bf14      	ite	ne
 800d5f8:	2301      	movne	r3, #1
 800d5fa:	2300      	moveq	r3, #0
 800d5fc:	b2db      	uxtb	r3, r3
 800d5fe:	2b00      	cmp	r3, #0
 800d600:	d1db      	bne.n	800d5ba <SCB_CleanInvalidateDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 800d602:	f3bf 8f4f 	dsb	sy
}
 800d606:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800d608:	f3bf 8f6f 	isb	sy
}
 800d60c:	bf00      	nop
}
 800d60e:	bf00      	nop
 800d610:	3714      	adds	r7, #20
 800d612:	46bd      	mov	sp, r7
 800d614:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d618:	4770      	bx	lr
 800d61a:	bf00      	nop
 800d61c:	e000ed00 	.word	0xe000ed00

0800d620 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
static uint16_t lcd_int_active_line;
static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800d620:	b5b0      	push	{r4, r5, r7, lr}
 800d622:	b082      	sub	sp, #8
 800d624:	af00      	add	r7, sp, #0
 800d626:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 800d628:	687b      	ldr	r3, [r7, #4]
 800d62a:	4618      	mov	r0, r3
 800d62c:	f000 fc79 	bl	800df22 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800d630:	687d      	ldr	r5, [r7, #4]
 800d632:	687b      	ldr	r3, [r7, #4]
 800d634:	681b      	ldr	r3, [r3, #0]
 800d636:	3364      	adds	r3, #100	@ 0x64
 800d638:	681c      	ldr	r4, [r3, #0]
 800d63a:	f002 fb6f 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 800d63e:	4603      	mov	r3, r0
 800d640:	4619      	mov	r1, r3
 800d642:	4628      	mov	r0, r5
 800d644:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 800d646:	687b      	ldr	r3, [r7, #4]
 800d648:	681b      	ldr	r3, [r3, #0]
 800d64a:	3380      	adds	r3, #128	@ 0x80
 800d64c:	681b      	ldr	r3, [r3, #0]
 800d64e:	6878      	ldr	r0, [r7, #4]
 800d650:	4798      	blx	r3
    enableInterrupts();
 800d652:	687b      	ldr	r3, [r7, #4]
 800d654:	681b      	ldr	r3, [r3, #0]
 800d656:	3378      	adds	r3, #120	@ 0x78
 800d658:	681b      	ldr	r3, [r3, #0]
 800d65a:	6878      	ldr	r0, [r7, #4]
 800d65c:	4798      	blx	r3
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800d65e:	6878      	ldr	r0, [r7, #4]
 800d660:	687b      	ldr	r3, [r7, #4]
 800d662:	681b      	ldr	r3, [r3, #0]
 800d664:	3388      	adds	r3, #136	@ 0x88
 800d666:	681c      	ldr	r4, [r3, #0]
 800d668:	4a03      	ldr	r2, [pc, #12]	@ (800d678 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x58>)
 800d66a:	2300      	movs	r3, #0
 800d66c:	4903      	ldr	r1, [pc, #12]	@ (800d67c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 800d66e:	47a0      	blx	r4
}
 800d670:	bf00      	nop
 800d672:	3708      	adds	r7, #8
 800d674:	46bd      	mov	sp, r7
 800d676:	bdb0      	pop	{r4, r5, r7, pc}
 800d678:	c003fc00 	.word	0xc003fc00
 800d67c:	c0000000 	.word	0xc0000000

0800d680 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 800d680:	b580      	push	{r7, lr}
 800d682:	b082      	sub	sp, #8
 800d684:	af00      	add	r7, sp, #0
 800d686:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 800d688:	2109      	movs	r1, #9
 800d68a:	205a      	movs	r0, #90	@ 0x5a
 800d68c:	f7ff ff58 	bl	800d540 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 800d690:	2109      	movs	r1, #9
 800d692:	2058      	movs	r0, #88	@ 0x58
 800d694:	f7ff ff54 	bl	800d540 <__NVIC_SetPriority>
}
 800d698:	bf00      	nop
 800d69a:	3708      	adds	r7, #8
 800d69c:	46bd      	mov	sp, r7
 800d69e:	bd80      	pop	{r7, pc}

0800d6a0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 800d6a0:	b580      	push	{r7, lr}
 800d6a2:	b082      	sub	sp, #8
 800d6a4:	af00      	add	r7, sp, #0
 800d6a6:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 800d6a8:	205a      	movs	r0, #90	@ 0x5a
 800d6aa:	f7ff ff07 	bl	800d4bc <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 800d6ae:	2058      	movs	r0, #88	@ 0x58
 800d6b0:	f7ff ff04 	bl	800d4bc <__NVIC_EnableIRQ>
}
 800d6b4:	bf00      	nop
 800d6b6:	3708      	adds	r7, #8
 800d6b8:	46bd      	mov	sp, r7
 800d6ba:	bd80      	pop	{r7, pc}

0800d6bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 800d6bc:	b580      	push	{r7, lr}
 800d6be:	b082      	sub	sp, #8
 800d6c0:	af00      	add	r7, sp, #0
 800d6c2:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 800d6c4:	205a      	movs	r0, #90	@ 0x5a
 800d6c6:	f7ff ff17 	bl	800d4f8 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 800d6ca:	2058      	movs	r0, #88	@ 0x58
 800d6cc:	f7ff ff14 	bl	800d4f8 <__NVIC_DisableIRQ>
}
 800d6d0:	bf00      	nop
 800d6d2:	3708      	adds	r7, #8
 800d6d4:	46bd      	mov	sp, r7
 800d6d6:	bd80      	pop	{r7, pc}

0800d6d8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 800d6d8:	b480      	push	{r7}
 800d6da:	b083      	sub	sp, #12
 800d6dc:	af00      	add	r7, sp, #0
 800d6de:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800d6e0:	4b11      	ldr	r3, [pc, #68]	@ (800d728 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800d6e2:	68db      	ldr	r3, [r3, #12]
 800d6e4:	b29b      	uxth	r3, r3
 800d6e6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800d6ea:	b29b      	uxth	r3, r3
 800d6ec:	3b01      	subs	r3, #1
 800d6ee:	b29a      	uxth	r2, r3
 800d6f0:	4b0e      	ldr	r3, [pc, #56]	@ (800d72c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800d6f2:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800d6f4:	4b0c      	ldr	r3, [pc, #48]	@ (800d728 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800d6f6:	691b      	ldr	r3, [r3, #16]
 800d6f8:	b29b      	uxth	r3, r3
 800d6fa:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800d6fe:	b29b      	uxth	r3, r3
 800d700:	3b01      	subs	r3, #1
 800d702:	b29a      	uxth	r2, r3
 800d704:	4b0a      	ldr	r3, [pc, #40]	@ (800d730 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 800d706:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 800d708:	4b08      	ldr	r3, [pc, #32]	@ (800d72c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 800d70a:	881a      	ldrh	r2, [r3, #0]
 800d70c:	4b06      	ldr	r3, [pc, #24]	@ (800d728 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800d70e:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 800d710:	4b05      	ldr	r3, [pc, #20]	@ (800d728 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800d712:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800d714:	4a04      	ldr	r2, [pc, #16]	@ (800d728 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 800d716:	f043 0301 	orr.w	r3, r3, #1
 800d71a:	6353      	str	r3, [r2, #52]	@ 0x34
}
 800d71c:	bf00      	nop
 800d71e:	370c      	adds	r7, #12
 800d720:	46bd      	mov	sp, r7
 800d722:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d726:	4770      	bx	lr
 800d728:	40016800 	.word	0x40016800
 800d72c:	20001b5c 	.word	0x20001b5c
 800d730:	20001b5e 	.word	0x20001b5e

0800d734 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 800d734:	b580      	push	{r7, lr}
 800d736:	b082      	sub	sp, #8
 800d738:	af00      	add	r7, sp, #0
 800d73a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 800d73c:	687b      	ldr	r3, [r7, #4]
 800d73e:	4618      	mov	r0, r3
 800d740:	f000 fbd6 	bl	800def0 <_ZN8touchgfx3HAL10beginFrameEv>
 800d744:	4603      	mov	r3, r0
}
 800d746:	4618      	mov	r0, r3
 800d748:	3708      	adds	r7, #8
 800d74a:	46bd      	mov	sp, r7
 800d74c:	bd80      	pop	{r7, pc}

0800d74e <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 800d74e:	b580      	push	{r7, lr}
 800d750:	b082      	sub	sp, #8
 800d752:	af00      	add	r7, sp, #0
 800d754:	6078      	str	r0, [r7, #4]
    HAL::endFrame();
 800d756:	687b      	ldr	r3, [r7, #4]
 800d758:	4618      	mov	r0, r3
 800d75a:	f000 fbd5 	bl	800df08 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 800d75e:	f7fe fc81 	bl	800c064 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 800d762:	bf00      	nop
 800d764:	3708      	adds	r7, #8
 800d766:	46bd      	mov	sp, r7
 800d768:	bd80      	pop	{r7, pc}
	...

0800d76c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 800d76c:	b480      	push	{r7}
 800d76e:	b083      	sub	sp, #12
 800d770:	af00      	add	r7, sp, #0
 800d772:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 800d774:	4b03      	ldr	r3, [pc, #12]	@ (800d784 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 800d776:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
}
 800d778:	4618      	mov	r0, r3
 800d77a:	370c      	adds	r7, #12
 800d77c:	46bd      	mov	sp, r7
 800d77e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d782:	4770      	bx	lr
 800d784:	40016884 	.word	0x40016884

0800d788 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 800d788:	b480      	push	{r7}
 800d78a:	b083      	sub	sp, #12
 800d78c:	af00      	add	r7, sp, #0
 800d78e:	6078      	str	r0, [r7, #4]
 800d790:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 800d792:	4a06      	ldr	r2, [pc, #24]	@ (800d7ac <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 800d794:	683b      	ldr	r3, [r7, #0]
 800d796:	6293      	str	r3, [r2, #40]	@ 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800d798:	4b05      	ldr	r3, [pc, #20]	@ (800d7b0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 800d79a:	2201      	movs	r2, #1
 800d79c:	625a      	str	r2, [r3, #36]	@ 0x24
}
 800d79e:	bf00      	nop
 800d7a0:	370c      	adds	r7, #12
 800d7a2:	46bd      	mov	sp, r7
 800d7a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7a8:	4770      	bx	lr
 800d7aa:	bf00      	nop
 800d7ac:	40016884 	.word	0x40016884
 800d7b0:	40016800 	.word	0x40016800

0800d7b4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800d7b4:	b580      	push	{r7, lr}
 800d7b6:	b082      	sub	sp, #8
 800d7b8:	af00      	add	r7, sp, #0
 800d7ba:	6078      	str	r0, [r7, #4]
 800d7bc:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 800d7be:	687b      	ldr	r3, [r7, #4]
 800d7c0:	6839      	ldr	r1, [r7, #0]
 800d7c2:	4618      	mov	r0, r3
 800d7c4:	f000 fb5e 	bl	800de84 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 800d7c8:	bf00      	nop
 800d7ca:	3708      	adds	r7, #8
 800d7cc:	46bd      	mov	sp, r7
 800d7ce:	bd80      	pop	{r7, pc}

0800d7d0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800d7d0:	b580      	push	{r7, lr}
 800d7d2:	b084      	sub	sp, #16
 800d7d4:	af00      	add	r7, sp, #0
 800d7d6:	60f8      	str	r0, [r7, #12]
 800d7d8:	60b9      	str	r1, [r7, #8]
 800d7da:	607a      	str	r2, [r7, #4]
 800d7dc:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 800d7de:	68f8      	ldr	r0, [r7, #12]
 800d7e0:	683b      	ldr	r3, [r7, #0]
 800d7e2:	687a      	ldr	r2, [r7, #4]
 800d7e4:	68b9      	ldr	r1, [r7, #8]
 800d7e6:	f000 fcbe 	bl	800e166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 800d7ea:	4603      	mov	r3, r0
}
 800d7ec:	4618      	mov	r0, r3
 800d7ee:	3710      	adds	r7, #16
 800d7f0:	46bd      	mov	sp, r7
 800d7f2:	bd80      	pop	{r7, pc}

0800d7f4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 800d7f4:	b580      	push	{r7, lr}
 800d7f6:	b082      	sub	sp, #8
 800d7f8:	af00      	add	r7, sp, #0
 800d7fa:	6078      	str	r0, [r7, #4]
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800d7fc:	4b08      	ldr	r3, [pc, #32]	@ (800d820 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x2c>)
 800d7fe:	695b      	ldr	r3, [r3, #20]
 800d800:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800d804:	2b00      	cmp	r3, #0
 800d806:	bf14      	ite	ne
 800d808:	2301      	movne	r3, #1
 800d80a:	2300      	moveq	r3, #0
 800d80c:	b2db      	uxtb	r3, r3
 800d80e:	2b00      	cmp	r3, #0
 800d810:	d001      	beq.n	800d816 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 800d812:	f7ff febf 	bl	800d594 <SCB_CleanInvalidateDCache>
    }
}
 800d816:	bf00      	nop
 800d818:	3708      	adds	r7, #8
 800d81a:	46bd      	mov	sp, r7
 800d81c:	bd80      	pop	{r7, pc}
 800d81e:	bf00      	nop
 800d820:	e000ed00 	.word	0xe000ed00

0800d824 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 800d824:	b580      	push	{r7, lr}
 800d826:	b082      	sub	sp, #8
 800d828:	af00      	add	r7, sp, #0
 800d82a:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write-Back cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX in
    // order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 800d82c:	4b08      	ldr	r3, [pc, #32]	@ (800d850 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>)
 800d82e:	695b      	ldr	r3, [r3, #20]
 800d830:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800d834:	2b00      	cmp	r3, #0
 800d836:	bf14      	ite	ne
 800d838:	2301      	movne	r3, #1
 800d83a:	2300      	moveq	r3, #0
 800d83c:	b2db      	uxtb	r3, r3
 800d83e:	2b00      	cmp	r3, #0
 800d840:	d001      	beq.n	800d846 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 800d842:	f7ff fea7 	bl	800d594 <SCB_CleanInvalidateDCache>
    }
}
 800d846:	bf00      	nop
 800d848:	3708      	adds	r7, #8
 800d84a:	46bd      	mov	sp, r7
 800d84c:	bd80      	pop	{r7, pc}
 800d84e:	bf00      	nop
 800d850:	e000ed00 	.word	0xe000ed00

0800d854 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 800d854:	b580      	push	{r7, lr}
 800d856:	b082      	sub	sp, #8
 800d858:	af00      	add	r7, sp, #0
 800d85a:	6078      	str	r0, [r7, #4]
        if (!HAL::getInstance())
 800d85c:	f7fc fd18 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800d860:	4603      	mov	r3, r0
 800d862:	2b00      	cmp	r3, #0
 800d864:	bf0c      	ite	eq
 800d866:	2301      	moveq	r3, #1
 800d868:	2300      	movne	r3, #0
 800d86a:	b2db      	uxtb	r3, r3
 800d86c:	2b00      	cmp	r3, #0
 800d86e:	d132      	bne.n	800d8d6 <HAL_LTDC_LineEventCallback+0x82>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800d870:	4b1b      	ldr	r3, [pc, #108]	@ (800d8e0 <HAL_LTDC_LineEventCallback+0x8c>)
 800d872:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800d874:	4a1b      	ldr	r2, [pc, #108]	@ (800d8e4 <HAL_LTDC_LineEventCallback+0x90>)
 800d876:	8812      	ldrh	r2, [r2, #0]
 800d878:	4293      	cmp	r3, r2
 800d87a:	bf0c      	ite	eq
 800d87c:	2301      	moveq	r3, #1
 800d87e:	2300      	movne	r3, #0
 800d880:	b2db      	uxtb	r3, r3
 800d882:	2b00      	cmp	r3, #0
 800d884:	d017      	beq.n	800d8b6 <HAL_LTDC_LineEventCallback+0x62>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 800d886:	4b18      	ldr	r3, [pc, #96]	@ (800d8e8 <HAL_LTDC_LineEventCallback+0x94>)
 800d888:	881b      	ldrh	r3, [r3, #0]
 800d88a:	4619      	mov	r1, r3
 800d88c:	6878      	ldr	r0, [r7, #4]
 800d88e:	f7f7 feeb 	bl	8005668 <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 800d892:	f7fc fcfd 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800d896:	4603      	mov	r3, r0
 800d898:	4618      	mov	r0, r3
 800d89a:	f7ff fdfd 	bl	800d498 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 800d89e:	f7fe fbd5 	bl	800c04c <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 800d8a2:	f7fc fcf5 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800d8a6:	4603      	mov	r3, r0
 800d8a8:	4618      	mov	r0, r3
 800d8aa:	f001 f887 	bl	800e9bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 800d8ae:	2000      	movs	r0, #0
 800d8b0:	f7fe f8e4 	bl	800ba7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d8b4:	e010      	b.n	800d8d8 <HAL_LTDC_LineEventCallback+0x84>
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 800d8b6:	4b0b      	ldr	r3, [pc, #44]	@ (800d8e4 <HAL_LTDC_LineEventCallback+0x90>)
 800d8b8:	881b      	ldrh	r3, [r3, #0]
 800d8ba:	4619      	mov	r1, r3
 800d8bc:	6878      	ldr	r0, [r7, #4]
 800d8be:	f7f7 fed3 	bl	8005668 <HAL_LTDC_ProgramLineEvent>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
 800d8c2:	f7fc fce5 	bl	800a290 <_ZN8touchgfx3HAL11getInstanceEv>
 800d8c6:	4603      	mov	r3, r0
 800d8c8:	4618      	mov	r0, r3
 800d8ca:	f7ff fdd7 	bl	800d47c <_ZN8touchgfx3HAL17frontPorchEnteredEv>
            GPIO::clear(GPIO::VSYNC_FREQ);
 800d8ce:	2000      	movs	r0, #0
 800d8d0:	f7fe f8f0 	bl	800bab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d8d4:	e000      	b.n	800d8d8 <HAL_LTDC_LineEventCallback+0x84>
            return;
 800d8d6:	bf00      	nop
        }
    }
 800d8d8:	3708      	adds	r7, #8
 800d8da:	46bd      	mov	sp, r7
 800d8dc:	bd80      	pop	{r7, pc}
 800d8de:	bf00      	nop
 800d8e0:	40016800 	.word	0x40016800
 800d8e4:	20001b5c 	.word	0x20001b5c
 800d8e8:	20001b5e 	.word	0x20001b5e

0800d8ec <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800d8ec:	8880      	ldrh	r0, [r0, #4]
 800d8ee:	4770      	bx	lr

0800d8f0 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800d8f0:	b570      	push	{r4, r5, r6, lr}
 800d8f2:	6803      	ldr	r3, [r0, #0]
 800d8f4:	460c      	mov	r4, r1
 800d8f6:	2100      	movs	r1, #0
 800d8f8:	4605      	mov	r5, r0
 800d8fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d8fc:	4798      	blx	r3
 800d8fe:	4606      	mov	r6, r0
 800d900:	682b      	ldr	r3, [r5, #0]
 800d902:	4628      	mov	r0, r5
 800d904:	1ba4      	subs	r4, r4, r6
 800d906:	6a1b      	ldr	r3, [r3, #32]
 800d908:	b2a4      	uxth	r4, r4
 800d90a:	4798      	blx	r3
 800d90c:	fbb4 f0f0 	udiv	r0, r4, r0
 800d910:	bd70      	pop	{r4, r5, r6, pc}

0800d912 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800d912:	2300      	movs	r3, #0
 800d914:	8083      	strh	r3, [r0, #4]
 800d916:	4770      	bx	lr

0800d918 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800d918:	b510      	push	{r4, lr}
 800d91a:	6803      	ldr	r3, [r0, #0]
 800d91c:	4604      	mov	r4, r0
 800d91e:	8881      	ldrh	r1, [r0, #4]
 800d920:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d922:	4798      	blx	r3
 800d924:	88a3      	ldrh	r3, [r4, #4]
 800d926:	3301      	adds	r3, #1
 800d928:	80a3      	strh	r3, [r4, #4]
 800d92a:	bd10      	pop	{r4, pc}

0800d92c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800d92c:	6803      	ldr	r3, [r0, #0]
 800d92e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800d930:	4718      	bx	r3

0800d932 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800d932:	4770      	bx	lr

0800d934 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800d934:	4a02      	ldr	r2, [pc, #8]	@ (800d940 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800d936:	6002      	str	r2, [r0, #0]
 800d938:	2200      	movs	r2, #0
 800d93a:	8082      	strh	r2, [r0, #4]
 800d93c:	4770      	bx	lr
 800d93e:	bf00      	nop
 800d940:	08022c94 	.word	0x08022c94

0800d944 <_ZN8touchgfx9Container13getFirstChildEv>:
 800d944:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 800d946:	4770      	bx	lr

0800d948 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800d948:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d94a:	2000      	movs	r0, #0
 800d94c:	b12b      	cbz	r3, 800d95a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800d94e:	b920      	cbnz	r0, 800d95a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800d950:	1a5a      	subs	r2, r3, r1
 800d952:	699b      	ldr	r3, [r3, #24]
 800d954:	4250      	negs	r0, r2
 800d956:	4150      	adcs	r0, r2
 800d958:	e7f8      	b.n	800d94c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800d95a:	4770      	bx	lr

0800d95c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800d95c:	2300      	movs	r3, #0
 800d95e:	6148      	str	r0, [r1, #20]
 800d960:	618b      	str	r3, [r1, #24]
 800d962:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d964:	b913      	cbnz	r3, 800d96c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800d966:	6281      	str	r1, [r0, #40]	@ 0x28
 800d968:	4770      	bx	lr
 800d96a:	4613      	mov	r3, r2
 800d96c:	699a      	ldr	r2, [r3, #24]
 800d96e:	2a00      	cmp	r2, #0
 800d970:	d1fb      	bne.n	800d96a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800d972:	6199      	str	r1, [r3, #24]
 800d974:	4770      	bx	lr

0800d976 <_ZN8touchgfx9Container9removeAllEv>:
 800d976:	2200      	movs	r2, #0
 800d978:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d97a:	b123      	cbz	r3, 800d986 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800d97c:	6999      	ldr	r1, [r3, #24]
 800d97e:	6281      	str	r1, [r0, #40]	@ 0x28
 800d980:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800d984:	e7f8      	b.n	800d978 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800d986:	4770      	bx	lr

0800d988 <_ZN8touchgfx9Container6unlinkEv>:
 800d988:	2300      	movs	r3, #0
 800d98a:	6283      	str	r3, [r0, #40]	@ 0x28
 800d98c:	4770      	bx	lr

0800d98e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800d98e:	2200      	movs	r2, #0
 800d990:	8002      	strh	r2, [r0, #0]
 800d992:	8042      	strh	r2, [r0, #2]
 800d994:	8082      	strh	r2, [r0, #4]
 800d996:	80c2      	strh	r2, [r0, #6]
 800d998:	4770      	bx	lr

0800d99a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800d99a:	b570      	push	{r4, r5, r6, lr}
 800d99c:	460d      	mov	r5, r1
 800d99e:	4616      	mov	r6, r2
 800d9a0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d9a2:	b13c      	cbz	r4, 800d9b4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800d9a4:	6823      	ldr	r3, [r4, #0]
 800d9a6:	4620      	mov	r0, r4
 800d9a8:	4632      	mov	r2, r6
 800d9aa:	4629      	mov	r1, r5
 800d9ac:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800d9ae:	4798      	blx	r3
 800d9b0:	69a4      	ldr	r4, [r4, #24]
 800d9b2:	e7f6      	b.n	800d9a2 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800d9b4:	bd70      	pop	{r4, r5, r6, pc}

0800d9b6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800d9b6:	b538      	push	{r3, r4, r5, lr}
 800d9b8:	460d      	mov	r5, r1
 800d9ba:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800d9bc:	b134      	cbz	r4, 800d9cc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800d9be:	682b      	ldr	r3, [r5, #0]
 800d9c0:	4621      	mov	r1, r4
 800d9c2:	4628      	mov	r0, r5
 800d9c4:	689b      	ldr	r3, [r3, #8]
 800d9c6:	4798      	blx	r3
 800d9c8:	69a4      	ldr	r4, [r4, #24]
 800d9ca:	e7f7      	b.n	800d9bc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800d9cc:	bd38      	pop	{r3, r4, r5, pc}

0800d9ce <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800d9ce:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800d9d0:	b19b      	cbz	r3, 800d9fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800d9d2:	428b      	cmp	r3, r1
 800d9d4:	d109      	bne.n	800d9ea <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800d9d6:	699a      	ldr	r2, [r3, #24]
 800d9d8:	2100      	movs	r1, #0
 800d9da:	6159      	str	r1, [r3, #20]
 800d9dc:	6282      	str	r2, [r0, #40]	@ 0x28
 800d9de:	b902      	cbnz	r2, 800d9e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800d9e0:	4770      	bx	lr
 800d9e2:	6199      	str	r1, [r3, #24]
 800d9e4:	4770      	bx	lr
 800d9e6:	4613      	mov	r3, r2
 800d9e8:	b13a      	cbz	r2, 800d9fa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800d9ea:	699a      	ldr	r2, [r3, #24]
 800d9ec:	428a      	cmp	r2, r1
 800d9ee:	d1fa      	bne.n	800d9e6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800d9f0:	698a      	ldr	r2, [r1, #24]
 800d9f2:	619a      	str	r2, [r3, #24]
 800d9f4:	2300      	movs	r3, #0
 800d9f6:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800d9fa:	4770      	bx	lr

0800d9fc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800d9fc:	b410      	push	{r4}
 800d9fe:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 800da00:	4604      	mov	r4, r0
 800da02:	b92b      	cbnz	r3, 800da10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800da04:	6803      	ldr	r3, [r0, #0]
 800da06:	4611      	mov	r1, r2
 800da08:	f85d 4b04 	ldr.w	r4, [sp], #4
 800da0c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800da0e:	4718      	bx	r3
 800da10:	b941      	cbnz	r1, 800da24 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800da12:	6193      	str	r3, [r2, #24]
 800da14:	6282      	str	r2, [r0, #40]	@ 0x28
 800da16:	6154      	str	r4, [r2, #20]
 800da18:	f85d 4b04 	ldr.w	r4, [sp], #4
 800da1c:	4770      	bx	lr
 800da1e:	4603      	mov	r3, r0
 800da20:	2800      	cmp	r0, #0
 800da22:	d0f9      	beq.n	800da18 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800da24:	4299      	cmp	r1, r3
 800da26:	6998      	ldr	r0, [r3, #24]
 800da28:	d1f9      	bne.n	800da1e <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800da2a:	6190      	str	r0, [r2, #24]
 800da2c:	618a      	str	r2, [r1, #24]
 800da2e:	e7f2      	b.n	800da16 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800da30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800da30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800da34:	461f      	mov	r7, r3
 800da36:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 800da3a:	460d      	mov	r5, r1
 800da3c:	4616      	mov	r6, r2
 800da3e:	b103      	cbz	r3, 800da42 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800da40:	6038      	str	r0, [r7, #0]
 800da42:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800da44:	b314      	cbz	r4, 800da8c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800da46:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800da4a:	b1eb      	cbz	r3, 800da88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800da4c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800da50:	428d      	cmp	r5, r1
 800da52:	db19      	blt.n	800da88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800da54:	b289      	uxth	r1, r1
 800da56:	8923      	ldrh	r3, [r4, #8]
 800da58:	440b      	add	r3, r1
 800da5a:	b21b      	sxth	r3, r3
 800da5c:	429d      	cmp	r5, r3
 800da5e:	da13      	bge.n	800da88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800da60:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800da64:	4296      	cmp	r6, r2
 800da66:	db0f      	blt.n	800da88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800da68:	b292      	uxth	r2, r2
 800da6a:	8963      	ldrh	r3, [r4, #10]
 800da6c:	4413      	add	r3, r2
 800da6e:	b21b      	sxth	r3, r3
 800da70:	429e      	cmp	r6, r3
 800da72:	da09      	bge.n	800da88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800da74:	6823      	ldr	r3, [r4, #0]
 800da76:	1ab2      	subs	r2, r6, r2
 800da78:	1a69      	subs	r1, r5, r1
 800da7a:	4620      	mov	r0, r4
 800da7c:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 800da80:	b212      	sxth	r2, r2
 800da82:	463b      	mov	r3, r7
 800da84:	b209      	sxth	r1, r1
 800da86:	47c0      	blx	r8
 800da88:	69a4      	ldr	r4, [r4, #24]
 800da8a:	e7db      	b.n	800da44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800da8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800da90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800da90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da94:	4c6d      	ldr	r4, [pc, #436]	@ (800dc4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 800da96:	b0a1      	sub	sp, #132	@ 0x84
 800da98:	4606      	mov	r6, r0
 800da9a:	6824      	ldr	r4, [r4, #0]
 800da9c:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 800da9e:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 800daa2:	2400      	movs	r4, #0
 800daa4:	9303      	str	r3, [sp, #12]
 800daa6:	802c      	strh	r4, [r5, #0]
 800daa8:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 800daaa:	802c      	strh	r4, [r5, #0]
 800daac:	601c      	str	r4, [r3, #0]
 800daae:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800dab2:	f7ff ffbd 	bl	800da30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dab6:	f1b9 0f03 	cmp.w	r9, #3
 800daba:	f340 80c1 	ble.w	800dc40 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 800dabe:	4631      	mov	r1, r6
 800dac0:	a80c      	add	r0, sp, #48	@ 0x30
 800dac2:	f003 fa3f 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dac6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 800daca:	9306      	str	r3, [sp, #24]
 800dacc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 800dad0:	9307      	str	r3, [sp, #28]
 800dad2:	9b03      	ldr	r3, [sp, #12]
 800dad4:	f8d3 a000 	ldr.w	sl, [r3]
 800dad8:	f1ba 0f00 	cmp.w	sl, #0
 800dadc:	f000 80b3 	beq.w	800dc46 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 800dae0:	4651      	mov	r1, sl
 800dae2:	a810      	add	r0, sp, #64	@ 0x40
 800dae4:	f003 fa2e 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dae8:	2002      	movs	r0, #2
 800daea:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 800daee:	9b01      	ldr	r3, [sp, #4]
 800daf0:	9a06      	ldr	r2, [sp, #24]
 800daf2:	fb91 f1f0 	sdiv	r1, r1, r0
 800daf6:	189d      	adds	r5, r3, r2
 800daf8:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 800dafc:	9a07      	ldr	r2, [sp, #28]
 800dafe:	4419      	add	r1, r3
 800db00:	9b02      	ldr	r3, [sp, #8]
 800db02:	4413      	add	r3, r2
 800db04:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 800db08:	1a6d      	subs	r5, r5, r1
 800db0a:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 800db0e:	fb92 f2f0 	sdiv	r2, r2, r0
 800db12:	440a      	add	r2, r1
 800db14:	1a9b      	subs	r3, r3, r2
 800db16:	435b      	muls	r3, r3
 800db18:	fb05 3505 	mla	r5, r5, r5, r3
 800db1c:	4f4c      	ldr	r7, [pc, #304]	@ (800dc50 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800db1e:	ac10      	add	r4, sp, #64	@ 0x40
 800db20:	f1b9 0f0c 	cmp.w	r9, #12
 800db24:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800db26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800db28:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800db2a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800db2c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800db2e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800db30:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800db34:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800db38:	f04f 0303 	mov.w	r3, #3
 800db3c:	bfd8      	it	le
 800db3e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800db42:	f04f 0400 	mov.w	r4, #0
 800db46:	f8cd 9000 	str.w	r9, [sp]
 800db4a:	bfcc      	ite	gt
 800db4c:	4698      	movgt	r8, r3
 800db4e:	fb92 f8f3 	sdivle	r8, r2, r3
 800db52:	1c63      	adds	r3, r4, #1
 800db54:	aa10      	add	r2, sp, #64	@ 0x40
 800db56:	f004 0401 	and.w	r4, r4, #1
 800db5a:	f04f 0b00 	mov.w	fp, #0
 800db5e:	9308      	str	r3, [sp, #32]
 800db60:	9b00      	ldr	r3, [sp, #0]
 800db62:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800db66:	fb93 f3f8 	sdiv	r3, r3, r8
 800db6a:	3404      	adds	r4, #4
 800db6c:	b29b      	uxth	r3, r3
 800db6e:	9304      	str	r3, [sp, #16]
 800db70:	9a04      	ldr	r2, [sp, #16]
 800db72:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800db76:	fb13 f302 	smulbb	r3, r3, r2
 800db7a:	9a01      	ldr	r2, [sp, #4]
 800db7c:	b29b      	uxth	r3, r3
 800db7e:	1899      	adds	r1, r3, r2
 800db80:	9305      	str	r3, [sp, #20]
 800db82:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800db86:	b209      	sxth	r1, r1
 800db88:	4299      	cmp	r1, r3
 800db8a:	db4d      	blt.n	800dc28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800db8c:	8932      	ldrh	r2, [r6, #8]
 800db8e:	4413      	add	r3, r2
 800db90:	b21b      	sxth	r3, r3
 800db92:	4299      	cmp	r1, r3
 800db94:	da48      	bge.n	800dc28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800db96:	9b04      	ldr	r3, [sp, #16]
 800db98:	6827      	ldr	r7, [r4, #0]
 800db9a:	fb17 f703 	smulbb	r7, r7, r3
 800db9e:	9b02      	ldr	r3, [sp, #8]
 800dba0:	b2bf      	uxth	r7, r7
 800dba2:	18fa      	adds	r2, r7, r3
 800dba4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800dba8:	b212      	sxth	r2, r2
 800dbaa:	429a      	cmp	r2, r3
 800dbac:	db3c      	blt.n	800dc28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dbae:	8970      	ldrh	r0, [r6, #10]
 800dbb0:	4403      	add	r3, r0
 800dbb2:	b21b      	sxth	r3, r3
 800dbb4:	429a      	cmp	r2, r3
 800dbb6:	da37      	bge.n	800dc28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dbb8:	2300      	movs	r3, #0
 800dbba:	4630      	mov	r0, r6
 800dbbc:	930b      	str	r3, [sp, #44]	@ 0x2c
 800dbbe:	ab0b      	add	r3, sp, #44	@ 0x2c
 800dbc0:	f7ff ff36 	bl	800da30 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dbc4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800dbc6:	b37a      	cbz	r2, 800dc28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dbc8:	4552      	cmp	r2, sl
 800dbca:	d02d      	beq.n	800dc28 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800dbcc:	4611      	mov	r1, r2
 800dbce:	a80e      	add	r0, sp, #56	@ 0x38
 800dbd0:	9209      	str	r2, [sp, #36]	@ 0x24
 800dbd2:	f003 f9b7 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dbd6:	f04f 0e02 	mov.w	lr, #2
 800dbda:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 800dbde:	9a06      	ldr	r2, [sp, #24]
 800dbe0:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 800dbe4:	9b01      	ldr	r3, [sp, #4]
 800dbe6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 800dbea:	4413      	add	r3, r2
 800dbec:	9a07      	ldr	r2, [sp, #28]
 800dbee:	fb91 f1fe 	sdiv	r1, r1, lr
 800dbf2:	fb9c fcfe 	sdiv	ip, ip, lr
 800dbf6:	4401      	add	r1, r0
 800dbf8:	1a58      	subs	r0, r3, r1
 800dbfa:	9b02      	ldr	r3, [sp, #8]
 800dbfc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 800dc00:	4413      	add	r3, r2
 800dc02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800dc04:	448c      	add	ip, r1
 800dc06:	eba3 030c 	sub.w	r3, r3, ip
 800dc0a:	435b      	muls	r3, r3
 800dc0c:	fb00 3300 	mla	r3, r0, r0, r3
 800dc10:	42ab      	cmp	r3, r5
 800dc12:	d208      	bcs.n	800dc26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800dc14:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800dc16:	461d      	mov	r5, r3
 800dc18:	9803      	ldr	r0, [sp, #12]
 800dc1a:	6001      	str	r1, [r0, #0]
 800dc1c:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 800dc1e:	9805      	ldr	r0, [sp, #20]
 800dc20:	8008      	strh	r0, [r1, #0]
 800dc22:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800dc24:	800f      	strh	r7, [r1, #0]
 800dc26:	4692      	mov	sl, r2
 800dc28:	f10b 0b01 	add.w	fp, fp, #1
 800dc2c:	3408      	adds	r4, #8
 800dc2e:	f1bb 0f04 	cmp.w	fp, #4
 800dc32:	d19d      	bne.n	800db70 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800dc34:	9b00      	ldr	r3, [sp, #0]
 800dc36:	9c08      	ldr	r4, [sp, #32]
 800dc38:	444b      	add	r3, r9
 800dc3a:	4544      	cmp	r4, r8
 800dc3c:	9300      	str	r3, [sp, #0]
 800dc3e:	d188      	bne.n	800db52 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800dc40:	b021      	add	sp, #132	@ 0x84
 800dc42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc46:	f04f 35ff 	mov.w	r5, #4294967295
 800dc4a:	e767      	b.n	800db1c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800dc4c:	20001b6c 	.word	0x20001b6c
 800dc50:	08022514 	.word	0x08022514

0800dc54 <_ZN8touchgfx4RectaNERKS0_>:
 800dc54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dc58:	f9b1 7000 	ldrsh.w	r7, [r1]
 800dc5c:	888c      	ldrh	r4, [r1, #4]
 800dc5e:	f9b0 9000 	ldrsh.w	r9, [r0]
 800dc62:	443c      	add	r4, r7
 800dc64:	b2a4      	uxth	r4, r4
 800dc66:	fa0f f884 	sxth.w	r8, r4
 800dc6a:	45c1      	cmp	r9, r8
 800dc6c:	da2f      	bge.n	800dcce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dc6e:	8882      	ldrh	r2, [r0, #4]
 800dc70:	444a      	add	r2, r9
 800dc72:	b292      	uxth	r2, r2
 800dc74:	fa0f fe82 	sxth.w	lr, r2
 800dc78:	4577      	cmp	r7, lr
 800dc7a:	da28      	bge.n	800dcce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dc7c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800dc80:	88cb      	ldrh	r3, [r1, #6]
 800dc82:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800dc86:	442b      	add	r3, r5
 800dc88:	b21b      	sxth	r3, r3
 800dc8a:	429e      	cmp	r6, r3
 800dc8c:	da1f      	bge.n	800dcce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dc8e:	88c3      	ldrh	r3, [r0, #6]
 800dc90:	4433      	add	r3, r6
 800dc92:	b29b      	uxth	r3, r3
 800dc94:	fa0f fc83 	sxth.w	ip, r3
 800dc98:	4565      	cmp	r5, ip
 800dc9a:	da18      	bge.n	800dcce <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800dc9c:	454f      	cmp	r7, r9
 800dc9e:	bfb8      	it	lt
 800dca0:	464f      	movlt	r7, r9
 800dca2:	42b5      	cmp	r5, r6
 800dca4:	bfb8      	it	lt
 800dca6:	4635      	movlt	r5, r6
 800dca8:	45f0      	cmp	r8, lr
 800dcaa:	bfd8      	it	le
 800dcac:	4622      	movle	r2, r4
 800dcae:	1bd2      	subs	r2, r2, r7
 800dcb0:	8082      	strh	r2, [r0, #4]
 800dcb2:	884a      	ldrh	r2, [r1, #2]
 800dcb4:	88c9      	ldrh	r1, [r1, #6]
 800dcb6:	8007      	strh	r7, [r0, #0]
 800dcb8:	440a      	add	r2, r1
 800dcba:	8045      	strh	r5, [r0, #2]
 800dcbc:	b292      	uxth	r2, r2
 800dcbe:	b211      	sxth	r1, r2
 800dcc0:	458c      	cmp	ip, r1
 800dcc2:	bfa8      	it	ge
 800dcc4:	4613      	movge	r3, r2
 800dcc6:	1b5b      	subs	r3, r3, r5
 800dcc8:	80c3      	strh	r3, [r0, #6]
 800dcca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dcce:	2300      	movs	r3, #0
 800dcd0:	8003      	strh	r3, [r0, #0]
 800dcd2:	8043      	strh	r3, [r0, #2]
 800dcd4:	8083      	strh	r3, [r0, #4]
 800dcd6:	80c3      	strh	r3, [r0, #6]
 800dcd8:	e7f7      	b.n	800dcca <_ZN8touchgfx4RectaNERKS0_+0x76>

0800dcda <_ZNK8touchgfx4Rect7isEmptyEv>:
 800dcda:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800dcde:	2b00      	cmp	r3, #0
 800dce0:	dd06      	ble.n	800dcf0 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800dce2:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800dce6:	2800      	cmp	r0, #0
 800dce8:	bfcc      	ite	gt
 800dcea:	2000      	movgt	r0, #0
 800dcec:	2001      	movle	r0, #1
 800dcee:	4770      	bx	lr
 800dcf0:	2001      	movs	r0, #1
 800dcf2:	4770      	bx	lr

0800dcf4 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800dcf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcf8:	2300      	movs	r3, #0
 800dcfa:	4604      	mov	r4, r0
 800dcfc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 800dcfe:	8003      	strh	r3, [r0, #0]
 800dd00:	8043      	strh	r3, [r0, #2]
 800dd02:	8083      	strh	r3, [r0, #4]
 800dd04:	80c3      	strh	r3, [r0, #6]
 800dd06:	2d00      	cmp	r5, #0
 800dd08:	d040      	beq.n	800dd8c <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800dd0a:	1d28      	adds	r0, r5, #4
 800dd0c:	f7ff ffe5 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd10:	b988      	cbnz	r0, 800dd36 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800dd12:	4620      	mov	r0, r4
 800dd14:	f7ff ffe1 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd18:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800dd1c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dd20:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800dd24:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800dd28:	b138      	cbz	r0, 800dd3a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800dd2a:	8022      	strh	r2, [r4, #0]
 800dd2c:	8063      	strh	r3, [r4, #2]
 800dd2e:	f8a4 e004 	strh.w	lr, [r4, #4]
 800dd32:	f8a4 c006 	strh.w	ip, [r4, #6]
 800dd36:	69ad      	ldr	r5, [r5, #24]
 800dd38:	e7e5      	b.n	800dd06 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800dd3a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800dd3e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800dd42:	4290      	cmp	r0, r2
 800dd44:	4607      	mov	r7, r0
 800dd46:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800dd4a:	460e      	mov	r6, r1
 800dd4c:	bfa8      	it	ge
 800dd4e:	4617      	movge	r7, r2
 800dd50:	4299      	cmp	r1, r3
 800dd52:	4472      	add	r2, lr
 800dd54:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800dd58:	bfa8      	it	ge
 800dd5a:	461e      	movge	r6, r3
 800dd5c:	4440      	add	r0, r8
 800dd5e:	4471      	add	r1, lr
 800dd60:	4463      	add	r3, ip
 800dd62:	b200      	sxth	r0, r0
 800dd64:	8027      	strh	r7, [r4, #0]
 800dd66:	b212      	sxth	r2, r2
 800dd68:	8066      	strh	r6, [r4, #2]
 800dd6a:	b209      	sxth	r1, r1
 800dd6c:	b21b      	sxth	r3, r3
 800dd6e:	4290      	cmp	r0, r2
 800dd70:	bfac      	ite	ge
 800dd72:	ebc7 0200 	rsbge	r2, r7, r0
 800dd76:	ebc7 0202 	rsblt	r2, r7, r2
 800dd7a:	4299      	cmp	r1, r3
 800dd7c:	bfac      	ite	ge
 800dd7e:	ebc6 0301 	rsbge	r3, r6, r1
 800dd82:	ebc6 0303 	rsblt	r3, r6, r3
 800dd86:	80a2      	strh	r2, [r4, #4]
 800dd88:	80e3      	strh	r3, [r4, #6]
 800dd8a:	e7d4      	b.n	800dd36 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800dd8c:	4620      	mov	r0, r4
 800dd8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800dd92 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800dd92:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800dd96:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800dd9a:	b383      	cbz	r3, 800ddfe <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800dd9c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800dd9e:	b374      	cbz	r4, 800ddfe <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800dda0:	f9b1 5000 	ldrsh.w	r5, [r1]
 800dda4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800dda8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ddac:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ddb0:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800ddb4:	b303      	cbz	r3, 800ddf8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ddb6:	4668      	mov	r0, sp
 800ddb8:	1d21      	adds	r1, r4, #4
 800ddba:	f8ad 5000 	strh.w	r5, [sp]
 800ddbe:	f8ad 6002 	strh.w	r6, [sp, #2]
 800ddc2:	f8ad 7004 	strh.w	r7, [sp, #4]
 800ddc6:	f8ad 8006 	strh.w	r8, [sp, #6]
 800ddca:	f7ff ff43 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 800ddce:	4668      	mov	r0, sp
 800ddd0:	f7ff ff83 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800ddd4:	b980      	cbnz	r0, 800ddf8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ddd6:	f8bd 3000 	ldrh.w	r3, [sp]
 800ddda:	4669      	mov	r1, sp
 800dddc:	88a2      	ldrh	r2, [r4, #4]
 800ddde:	4620      	mov	r0, r4
 800dde0:	1a9b      	subs	r3, r3, r2
 800dde2:	88e2      	ldrh	r2, [r4, #6]
 800dde4:	f8ad 3000 	strh.w	r3, [sp]
 800dde8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ddec:	1a9b      	subs	r3, r3, r2
 800ddee:	f8ad 3002 	strh.w	r3, [sp, #2]
 800ddf2:	6823      	ldr	r3, [r4, #0]
 800ddf4:	689b      	ldr	r3, [r3, #8]
 800ddf6:	4798      	blx	r3
 800ddf8:	69a4      	ldr	r4, [r4, #24]
 800ddfa:	2c00      	cmp	r4, #0
 800ddfc:	d1d8      	bne.n	800ddb0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800ddfe:	b002      	add	sp, #8
 800de00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800de04 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800de04:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800de06:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 800de0a:	460d      	mov	r5, r1
 800de0c:	4616      	mov	r6, r2
 800de0e:	b323      	cbz	r3, 800de5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800de10:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 800de12:	b314      	cbz	r4, 800de5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800de14:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 800de18:	b1eb      	cbz	r3, 800de56 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800de1a:	6828      	ldr	r0, [r5, #0]
 800de1c:	466b      	mov	r3, sp
 800de1e:	6869      	ldr	r1, [r5, #4]
 800de20:	c303      	stmia	r3!, {r0, r1}
 800de22:	4668      	mov	r0, sp
 800de24:	1d21      	adds	r1, r4, #4
 800de26:	f7ff ff15 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 800de2a:	4668      	mov	r0, sp
 800de2c:	f7ff ff55 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800de30:	b988      	cbnz	r0, 800de56 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800de32:	f8bd 3000 	ldrh.w	r3, [sp]
 800de36:	4669      	mov	r1, sp
 800de38:	88a2      	ldrh	r2, [r4, #4]
 800de3a:	4620      	mov	r0, r4
 800de3c:	1a9b      	subs	r3, r3, r2
 800de3e:	88e2      	ldrh	r2, [r4, #6]
 800de40:	f8ad 3000 	strh.w	r3, [sp]
 800de44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800de48:	1a9b      	subs	r3, r3, r2
 800de4a:	4632      	mov	r2, r6
 800de4c:	f8ad 3002 	strh.w	r3, [sp, #2]
 800de50:	6823      	ldr	r3, [r4, #0]
 800de52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800de54:	4798      	blx	r3
 800de56:	69a4      	ldr	r4, [r4, #24]
 800de58:	e7db      	b.n	800de12 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800de5a:	b002      	add	sp, #8
 800de5c:	bd70      	pop	{r4, r5, r6, pc}

0800de5e <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800de5e:	4770      	bx	lr

0800de60 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800de60:	4770      	bx	lr

0800de62 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800de62:	6803      	ldr	r3, [r0, #0]
 800de64:	b513      	push	{r0, r1, r4, lr}
 800de66:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 800de6a:	2300      	movs	r3, #0
 800de6c:	e9cd 3300 	strd	r3, r3, [sp]
 800de70:	466b      	mov	r3, sp
 800de72:	47a0      	blx	r4
 800de74:	b002      	add	sp, #8
 800de76:	bd10      	pop	{r4, pc}

0800de78 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800de78:	2301      	movs	r3, #1
 800de7a:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800de7e:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800de82:	4770      	bx	lr

0800de84 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800de84:	2301      	movs	r3, #1
 800de86:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 800de8a:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 800de8e:	4770      	bx	lr

0800de90 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800de90:	6843      	ldr	r3, [r0, #4]
 800de92:	2201      	movs	r2, #1
 800de94:	725a      	strb	r2, [r3, #9]
 800de96:	6840      	ldr	r0, [r0, #4]
 800de98:	6803      	ldr	r3, [r0, #0]
 800de9a:	691b      	ldr	r3, [r3, #16]
 800de9c:	4718      	bx	r3

0800de9e <_ZN8touchgfx3HAL8flushDMAEv>:
 800de9e:	6840      	ldr	r0, [r0, #4]
 800dea0:	6803      	ldr	r3, [r0, #0]
 800dea2:	689b      	ldr	r3, [r3, #8]
 800dea4:	4718      	bx	r3

0800dea6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800dea6:	b530      	push	{r4, r5, lr}
 800dea8:	b08b      	sub	sp, #44	@ 0x2c
 800deaa:	6804      	ldr	r4, [r0, #0]
 800deac:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 800deb0:	9509      	str	r5, [sp, #36]	@ 0x24
 800deb2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 800deb6:	9508      	str	r5, [sp, #32]
 800deb8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 800debc:	9507      	str	r5, [sp, #28]
 800debe:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 800dec2:	9506      	str	r5, [sp, #24]
 800dec4:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 800dec8:	9505      	str	r5, [sp, #20]
 800deca:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 800dece:	9504      	str	r5, [sp, #16]
 800ded0:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 800ded4:	9503      	str	r5, [sp, #12]
 800ded6:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 800deda:	9502      	str	r5, [sp, #8]
 800dedc:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 800dee0:	e9cd 3500 	strd	r3, r5, [sp]
 800dee4:	4613      	mov	r3, r2
 800dee6:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 800dee8:	2200      	movs	r2, #0
 800deea:	47a0      	blx	r4
 800deec:	b00b      	add	sp, #44	@ 0x2c
 800deee:	bd30      	pop	{r4, r5, pc}

0800def0 <_ZN8touchgfx3HAL10beginFrameEv>:
 800def0:	4b04      	ldr	r3, [pc, #16]	@ (800df04 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800def2:	781b      	ldrb	r3, [r3, #0]
 800def4:	b123      	cbz	r3, 800df00 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800def6:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 800defa:	f080 0001 	eor.w	r0, r0, #1
 800defe:	4770      	bx	lr
 800df00:	2001      	movs	r0, #1
 800df02:	4770      	bx	lr
 800df04:	20001b6a 	.word	0x20001b6a

0800df08 <_ZN8touchgfx3HAL8endFrameEv>:
 800df08:	b510      	push	{r4, lr}
 800df0a:	4604      	mov	r4, r0
 800df0c:	6840      	ldr	r0, [r0, #4]
 800df0e:	6803      	ldr	r3, [r0, #0]
 800df10:	689b      	ldr	r3, [r3, #8]
 800df12:	4798      	blx	r3
 800df14:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 800df18:	b113      	cbz	r3, 800df20 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800df1a:	2301      	movs	r3, #1
 800df1c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800df20:	bd10      	pop	{r4, pc}

0800df22 <_ZN8touchgfx3HAL10initializeEv>:
 800df22:	b510      	push	{r4, lr}
 800df24:	4604      	mov	r4, r0
 800df26:	f7fe f845 	bl	800bfb4 <_ZN8touchgfx10OSWrappers10initializeEv>
 800df2a:	f7fd fd9f 	bl	800ba6c <_ZN8touchgfx4GPIO4initEv>
 800df2e:	6860      	ldr	r0, [r4, #4]
 800df30:	6803      	ldr	r3, [r0, #0]
 800df32:	68db      	ldr	r3, [r3, #12]
 800df34:	4798      	blx	r3
 800df36:	68e0      	ldr	r0, [r4, #12]
 800df38:	6803      	ldr	r3, [r0, #0]
 800df3a:	689b      	ldr	r3, [r3, #8]
 800df3c:	4798      	blx	r3
 800df3e:	6823      	ldr	r3, [r4, #0]
 800df40:	4620      	mov	r0, r4
 800df42:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800df44:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800df48:	4718      	bx	r3

0800df4a <_ZN8touchgfx3HAL9taskEntryEv>:
 800df4a:	b508      	push	{r3, lr}
 800df4c:	6803      	ldr	r3, [r0, #0]
 800df4e:	4604      	mov	r4, r0
 800df50:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800df54:	4798      	blx	r3
 800df56:	6823      	ldr	r3, [r4, #0]
 800df58:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800df5a:	4620      	mov	r0, r4
 800df5c:	4798      	blx	r3
 800df5e:	f7fe f89d 	bl	800c09c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800df62:	6823      	ldr	r3, [r4, #0]
 800df64:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800df66:	e7f8      	b.n	800df5a <_ZN8touchgfx3HAL9taskEntryEv+0x10>

0800df68 <_ZN8touchgfx3HAL4tickEv>:
 800df68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800df6a:	6803      	ldr	r3, [r0, #0]
 800df6c:	4604      	mov	r4, r0
 800df6e:	4d5b      	ldr	r5, [pc, #364]	@ (800e0dc <_ZN8touchgfx3HAL4tickEv+0x174>)
 800df70:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800df74:	4798      	blx	r3
 800df76:	2800      	cmp	r0, #0
 800df78:	f000 8095 	beq.w	800e0a6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800df7c:	2001      	movs	r0, #1
 800df7e:	2600      	movs	r6, #0
 800df80:	f7fd fd7c 	bl	800ba7c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800df84:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 800df88:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 800df8c:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800df90:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 800df94:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 800df98:	b133      	cbz	r3, 800dfa8 <_ZN8touchgfx3HAL4tickEv+0x40>
 800df9a:	6823      	ldr	r3, [r4, #0]
 800df9c:	4620      	mov	r0, r4
 800df9e:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 800dfa2:	4798      	blx	r3
 800dfa4:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 800dfa8:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 800dfac:	2601      	movs	r6, #1
 800dfae:	6862      	ldr	r2, [r4, #4]
 800dfb0:	f083 0301 	eor.w	r3, r3, #1
 800dfb4:	702e      	strb	r6, [r5, #0]
 800dfb6:	7253      	strb	r3, [r2, #9]
 800dfb8:	f001 feb0 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 800dfbc:	6803      	ldr	r3, [r0, #0]
 800dfbe:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800dfc0:	4798      	blx	r3
 800dfc2:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800dfc6:	b90b      	cbnz	r3, 800dfcc <_ZN8touchgfx3HAL4tickEv+0x64>
 800dfc8:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 800dfcc:	f001 fea6 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 800dfd0:	6803      	ldr	r3, [r0, #0]
 800dfd2:	695b      	ldr	r3, [r3, #20]
 800dfd4:	4798      	blx	r3
 800dfd6:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800dfd8:	6803      	ldr	r3, [r0, #0]
 800dfda:	691b      	ldr	r3, [r3, #16]
 800dfdc:	4798      	blx	r3
 800dfde:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 800dfe2:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 800dfe6:	3b01      	subs	r3, #1
 800dfe8:	b2db      	uxtb	r3, r3
 800dfea:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 800dfee:	b10a      	cbz	r2, 800dff4 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800dff0:	2b00      	cmp	r3, #0
 800dff2:	d1eb      	bne.n	800dfcc <_ZN8touchgfx3HAL4tickEv+0x64>
 800dff4:	4a3a      	ldr	r2, [pc, #232]	@ (800e0e0 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800dff6:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 800dffa:	7813      	ldrb	r3, [r2, #0]
 800dffc:	3301      	adds	r3, #1
 800dffe:	b25b      	sxtb	r3, r3
 800e000:	4299      	cmp	r1, r3
 800e002:	7013      	strb	r3, [r2, #0]
 800e004:	dc10      	bgt.n	800e028 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e006:	2300      	movs	r3, #0
 800e008:	68e0      	ldr	r0, [r4, #12]
 800e00a:	a902      	add	r1, sp, #8
 800e00c:	7013      	strb	r3, [r2, #0]
 800e00e:	aa03      	add	r2, sp, #12
 800e010:	6803      	ldr	r3, [r0, #0]
 800e012:	68db      	ldr	r3, [r3, #12]
 800e014:	4798      	blx	r3
 800e016:	6823      	ldr	r3, [r4, #0]
 800e018:	2800      	cmp	r0, #0
 800e01a:	d050      	beq.n	800e0be <_ZN8touchgfx3HAL4tickEv+0x156>
 800e01c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 800e020:	4620      	mov	r0, r4
 800e022:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800e026:	4798      	blx	r3
 800e028:	2300      	movs	r3, #0
 800e02a:	6960      	ldr	r0, [r4, #20]
 800e02c:	f88d 3007 	strb.w	r3, [sp, #7]
 800e030:	b158      	cbz	r0, 800e04a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e032:	6803      	ldr	r3, [r0, #0]
 800e034:	f10d 0107 	add.w	r1, sp, #7
 800e038:	68db      	ldr	r3, [r3, #12]
 800e03a:	4798      	blx	r3
 800e03c:	b128      	cbz	r0, 800e04a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800e03e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 800e040:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800e044:	6803      	ldr	r3, [r0, #0]
 800e046:	68db      	ldr	r3, [r3, #12]
 800e048:	4798      	blx	r3
 800e04a:	f104 001c 	add.w	r0, r4, #28
 800e04e:	f012 fd3d 	bl	8020acc <_ZN8touchgfx8Gestures4tickEv>
 800e052:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 800e056:	b30b      	cbz	r3, 800e09c <_ZN8touchgfx3HAL4tickEv+0x134>
 800e058:	6920      	ldr	r0, [r4, #16]
 800e05a:	6803      	ldr	r3, [r0, #0]
 800e05c:	691b      	ldr	r3, [r3, #16]
 800e05e:	4798      	blx	r3
 800e060:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e062:	4606      	mov	r6, r0
 800e064:	b903      	cbnz	r3, 800e068 <_ZN8touchgfx3HAL4tickEv+0x100>
 800e066:	6760      	str	r0, [r4, #116]	@ 0x74
 800e068:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e06a:	4a1e      	ldr	r2, [pc, #120]	@ (800e0e4 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800e06c:	1af3      	subs	r3, r6, r3
 800e06e:	4293      	cmp	r3, r2
 800e070:	d914      	bls.n	800e09c <_ZN8touchgfx3HAL4tickEv+0x134>
 800e072:	6920      	ldr	r0, [r4, #16]
 800e074:	6803      	ldr	r3, [r0, #0]
 800e076:	699b      	ldr	r3, [r3, #24]
 800e078:	4798      	blx	r3
 800e07a:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 800e07c:	2264      	movs	r2, #100	@ 0x64
 800e07e:	1af3      	subs	r3, r6, r3
 800e080:	fbb3 f3f2 	udiv	r3, r3, r2
 800e084:	fbb0 f0f3 	udiv	r0, r0, r3
 800e088:	2800      	cmp	r0, #0
 800e08a:	dc1d      	bgt.n	800e0c8 <_ZN8touchgfx3HAL4tickEv+0x160>
 800e08c:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 800e090:	6920      	ldr	r0, [r4, #16]
 800e092:	2100      	movs	r1, #0
 800e094:	6803      	ldr	r3, [r0, #0]
 800e096:	69db      	ldr	r3, [r3, #28]
 800e098:	4798      	blx	r3
 800e09a:	6766      	str	r6, [r4, #116]	@ 0x74
 800e09c:	f001 fe3e 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 800e0a0:	6803      	ldr	r3, [r0, #0]
 800e0a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800e0a4:	4798      	blx	r3
 800e0a6:	6823      	ldr	r3, [r4, #0]
 800e0a8:	4620      	mov	r0, r4
 800e0aa:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 800e0ae:	4798      	blx	r3
 800e0b0:	2001      	movs	r0, #1
 800e0b2:	f7fd fcff 	bl	800bab4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800e0b6:	2300      	movs	r3, #0
 800e0b8:	702b      	strb	r3, [r5, #0]
 800e0ba:	b004      	add	sp, #16
 800e0bc:	bd70      	pop	{r4, r5, r6, pc}
 800e0be:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 800e0c2:	4620      	mov	r0, r4
 800e0c4:	4798      	blx	r3
 800e0c6:	e7af      	b.n	800e028 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800e0c8:	2863      	cmp	r0, #99	@ 0x63
 800e0ca:	bfcb      	itete	gt
 800e0cc:	2300      	movgt	r3, #0
 800e0ce:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 800e0d2:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 800e0d6:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 800e0da:	e7d9      	b.n	800e090 <_ZN8touchgfx3HAL4tickEv+0x128>
 800e0dc:	20001b70 	.word	0x20001b70
 800e0e0:	20001b71 	.word	0x20001b71
 800e0e4:	05f5e100 	.word	0x05f5e100

0800e0e8 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800e0e8:	b510      	push	{r4, lr}
 800e0ea:	4604      	mov	r4, r0
 800e0ec:	f7fd ff8a 	bl	800c004 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800e0f0:	2200      	movs	r2, #0
 800e0f2:	6863      	ldr	r3, [r4, #4]
 800e0f4:	729a      	strb	r2, [r3, #10]
 800e0f6:	bd10      	pop	{r4, pc}

0800e0f8 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800e0f8:	65c1      	str	r1, [r0, #92]	@ 0x5c
 800e0fa:	301c      	adds	r0, #28
 800e0fc:	f012 bce4 	b.w	8020ac8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800e100 <_ZN8touchgfx3HAL5touchEll>:
 800e100:	b530      	push	{r4, r5, lr}
 800e102:	b087      	sub	sp, #28
 800e104:	4604      	mov	r4, r0
 800e106:	a804      	add	r0, sp, #16
 800e108:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800e10c:	f001 fbf8 	bl	800f900 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800e110:	9b04      	ldr	r3, [sp, #16]
 800e112:	a906      	add	r1, sp, #24
 800e114:	a803      	add	r0, sp, #12
 800e116:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e11a:	9b05      	ldr	r3, [sp, #20]
 800e11c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800e120:	f001 fc40 	bl	800f9a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800e124:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 800e128:	f104 001c 	add.w	r0, r4, #28
 800e12c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e130:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800e134:	b189      	cbz	r1, 800e15a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800e136:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 800e13a:	9300      	str	r3, [sp, #0]
 800e13c:	4613      	mov	r3, r2
 800e13e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 800e142:	462a      	mov	r2, r5
 800e144:	f012 fcd0 	bl	8020ae8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800e148:	b128      	cbz	r0, 800e156 <_ZN8touchgfx3HAL5touchEll+0x56>
 800e14a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800e14e:	6623      	str	r3, [r4, #96]	@ 0x60
 800e150:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800e154:	6663      	str	r3, [r4, #100]	@ 0x64
 800e156:	b007      	add	sp, #28
 800e158:	bd30      	pop	{r4, r5, pc}
 800e15a:	f012 fd05 	bl	8020b68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800e15e:	2301      	movs	r3, #1
 800e160:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800e164:	e7f1      	b.n	800e14a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800e166 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800e166:	b510      	push	{r4, lr}
 800e168:	2b00      	cmp	r3, #0
 800e16a:	d046      	beq.n	800e1fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e16c:	ea81 0002 	eor.w	r0, r1, r2
 800e170:	07c4      	lsls	r4, r0, #31
 800e172:	d508      	bpl.n	800e186 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800e174:	440b      	add	r3, r1
 800e176:	3a01      	subs	r2, #1
 800e178:	428b      	cmp	r3, r1
 800e17a:	d93e      	bls.n	800e1fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e17c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e180:	f801 0b01 	strb.w	r0, [r1], #1
 800e184:	e7f8      	b.n	800e178 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800e186:	07d0      	lsls	r0, r2, #31
 800e188:	bf42      	ittt	mi
 800e18a:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800e18e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800e192:	f801 0b01 	strbmi.w	r0, [r1], #1
 800e196:	2b01      	cmp	r3, #1
 800e198:	d911      	bls.n	800e1be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e19a:	ea81 0402 	eor.w	r4, r1, r2
 800e19e:	4610      	mov	r0, r2
 800e1a0:	07a4      	lsls	r4, r4, #30
 800e1a2:	d022      	beq.n	800e1ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800e1a4:	f023 0401 	bic.w	r4, r3, #1
 800e1a8:	440c      	add	r4, r1
 800e1aa:	428c      	cmp	r4, r1
 800e1ac:	4602      	mov	r2, r0
 800e1ae:	d904      	bls.n	800e1ba <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800e1b0:	8812      	ldrh	r2, [r2, #0]
 800e1b2:	3002      	adds	r0, #2
 800e1b4:	f821 2b02 	strh.w	r2, [r1], #2
 800e1b8:	e7f7      	b.n	800e1aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800e1ba:	f003 0301 	and.w	r3, r3, #1
 800e1be:	f023 0003 	bic.w	r0, r3, #3
 800e1c2:	4408      	add	r0, r1
 800e1c4:	4288      	cmp	r0, r1
 800e1c6:	4614      	mov	r4, r2
 800e1c8:	d904      	bls.n	800e1d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800e1ca:	6824      	ldr	r4, [r4, #0]
 800e1cc:	3204      	adds	r2, #4
 800e1ce:	f841 4b04 	str.w	r4, [r1], #4
 800e1d2:	e7f7      	b.n	800e1c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800e1d4:	f003 0303 	and.w	r3, r3, #3
 800e1d8:	3a01      	subs	r2, #1
 800e1da:	440b      	add	r3, r1
 800e1dc:	428b      	cmp	r3, r1
 800e1de:	d90c      	bls.n	800e1fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800e1e0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800e1e4:	f801 0b01 	strb.w	r0, [r1], #1
 800e1e8:	e7f8      	b.n	800e1dc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800e1ea:	0790      	lsls	r0, r2, #30
 800e1ec:	d0e7      	beq.n	800e1be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e1ee:	f832 0b02 	ldrh.w	r0, [r2], #2
 800e1f2:	3b02      	subs	r3, #2
 800e1f4:	f821 0b02 	strh.w	r0, [r1], #2
 800e1f8:	e7e1      	b.n	800e1be <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800e1fa:	2001      	movs	r0, #1
 800e1fc:	bd10      	pop	{r4, pc}

0800e1fe <_ZN8touchgfx3HAL7noTouchEv>:
 800e1fe:	b510      	push	{r4, lr}
 800e200:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 800e204:	4604      	mov	r4, r0
 800e206:	b153      	cbz	r3, 800e21e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800e208:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 800e20c:	2101      	movs	r1, #1
 800e20e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 800e212:	301c      	adds	r0, #28
 800e214:	f012 fca8 	bl	8020b68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800e218:	2300      	movs	r3, #0
 800e21a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 800e21e:	bd10      	pop	{r4, pc}

0800e220 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800e220:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e224:	b085      	sub	sp, #20
 800e226:	4604      	mov	r4, r0
 800e228:	2000      	movs	r0, #0
 800e22a:	4699      	mov	r9, r3
 800e22c:	ad04      	add	r5, sp, #16
 800e22e:	460f      	mov	r7, r1
 800e230:	4690      	mov	r8, r2
 800e232:	f845 0d04 	str.w	r0, [r5, #-4]!
 800e236:	69a0      	ldr	r0, [r4, #24]
 800e238:	6806      	ldr	r6, [r0, #0]
 800e23a:	9501      	str	r5, [sp, #4]
 800e23c:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 800e240:	9500      	str	r5, [sp, #0]
 800e242:	6835      	ldr	r5, [r6, #0]
 800e244:	47a8      	blx	r5
 800e246:	4d10      	ldr	r5, [pc, #64]	@ (800e288 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800e248:	4606      	mov	r6, r0
 800e24a:	f8a5 9000 	strh.w	r9, [r5]
 800e24e:	f7fc f82b 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e252:	6803      	ldr	r3, [r0, #0]
 800e254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e256:	4798      	blx	r3
 800e258:	b128      	cbz	r0, 800e266 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800e25a:	2801      	cmp	r0, #1
 800e25c:	d00b      	beq.n	800e276 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800e25e:	4630      	mov	r0, r6
 800e260:	b005      	add	sp, #20
 800e262:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e266:	882b      	ldrh	r3, [r5, #0]
 800e268:	fb08 7203 	mla	r2, r8, r3, r7
 800e26c:	9b03      	ldr	r3, [sp, #12]
 800e26e:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800e272:	63e3      	str	r3, [r4, #60]	@ 0x3c
 800e274:	e7f3      	b.n	800e25e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800e276:	882a      	ldrh	r2, [r5, #0]
 800e278:	9b03      	ldr	r3, [sp, #12]
 800e27a:	fb08 7202 	mla	r2, r8, r2, r7
 800e27e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800e282:	1a9a      	subs	r2, r3, r2
 800e284:	63e2      	str	r2, [r4, #60]	@ 0x3c
 800e286:	e7ea      	b.n	800e25e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800e288:	20001b66 	.word	0x20001b66

0800e28c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800e28c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e28e:	b08b      	sub	sp, #44	@ 0x2c
 800e290:	4617      	mov	r7, r2
 800e292:	4604      	mov	r4, r0
 800e294:	460e      	mov	r6, r1
 800e296:	461d      	mov	r5, r3
 800e298:	f7fc f806 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e29c:	6803      	ldr	r3, [r0, #0]
 800e29e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e2a0:	4798      	blx	r3
 800e2a2:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800e2a6:	9007      	str	r0, [sp, #28]
 800e2a8:	4631      	mov	r1, r6
 800e2aa:	6822      	ldr	r2, [r4, #0]
 800e2ac:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800e2b0:	4b0c      	ldr	r3, [pc, #48]	@ (800e2e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800e2b2:	4620      	mov	r0, r4
 800e2b4:	881b      	ldrh	r3, [r3, #0]
 800e2b6:	9306      	str	r3, [sp, #24]
 800e2b8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e2bc:	9305      	str	r3, [sp, #20]
 800e2be:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 800e2c2:	9304      	str	r3, [sp, #16]
 800e2c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e2c8:	9303      	str	r3, [sp, #12]
 800e2ca:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e2ce:	9302      	str	r3, [sp, #8]
 800e2d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e2d4:	e9cd 5300 	strd	r5, r3, [sp]
 800e2d8:	463b      	mov	r3, r7
 800e2da:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 800e2dc:	2200      	movs	r2, #0
 800e2de:	47a8      	blx	r5
 800e2e0:	b00b      	add	sp, #44	@ 0x2c
 800e2e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e2e4:	20001b66 	.word	0x20001b66

0800e2e8 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800e2e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e2ec:	4698      	mov	r8, r3
 800e2ee:	6803      	ldr	r3, [r0, #0]
 800e2f0:	b08b      	sub	sp, #44	@ 0x2c
 800e2f2:	4617      	mov	r7, r2
 800e2f4:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800e2f6:	460e      	mov	r6, r1
 800e2f8:	4b13      	ldr	r3, [pc, #76]	@ (800e348 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800e2fa:	4604      	mov	r4, r0
 800e2fc:	f8b3 9000 	ldrh.w	r9, [r3]
 800e300:	f7fb ffd2 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e304:	6803      	ldr	r3, [r0, #0]
 800e306:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e308:	4798      	blx	r3
 800e30a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800e30e:	2200      	movs	r2, #0
 800e310:	4631      	mov	r1, r6
 800e312:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800e316:	2302      	movs	r3, #2
 800e318:	4620      	mov	r0, r4
 800e31a:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800e31e:	2301      	movs	r3, #1
 800e320:	9305      	str	r3, [sp, #20]
 800e322:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 800e326:	9304      	str	r3, [sp, #16]
 800e328:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800e32c:	9303      	str	r3, [sp, #12]
 800e32e:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e332:	9302      	str	r3, [sp, #8]
 800e334:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e338:	e9cd 8300 	strd	r8, r3, [sp]
 800e33c:	463b      	mov	r3, r7
 800e33e:	47a8      	blx	r5
 800e340:	b00b      	add	sp, #44	@ 0x2c
 800e342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e346:	bf00      	nop
 800e348:	20001b66 	.word	0x20001b66

0800e34c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800e34c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e350:	4698      	mov	r8, r3
 800e352:	6803      	ldr	r3, [r0, #0]
 800e354:	b087      	sub	sp, #28
 800e356:	460e      	mov	r6, r1
 800e358:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 800e35a:	4617      	mov	r7, r2
 800e35c:	4b0f      	ldr	r3, [pc, #60]	@ (800e39c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800e35e:	4604      	mov	r4, r0
 800e360:	f8b3 9000 	ldrh.w	r9, [r3]
 800e364:	f7fb ffa0 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e368:	6803      	ldr	r3, [r0, #0]
 800e36a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e36c:	4798      	blx	r3
 800e36e:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 800e372:	463a      	mov	r2, r7
 800e374:	4631      	mov	r1, r6
 800e376:	f8cd 900c 	str.w	r9, [sp, #12]
 800e37a:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800e37e:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 800e382:	4620      	mov	r0, r4
 800e384:	9302      	str	r3, [sp, #8]
 800e386:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 800e38a:	9301      	str	r3, [sp, #4]
 800e38c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 800e390:	9300      	str	r3, [sp, #0]
 800e392:	4643      	mov	r3, r8
 800e394:	47a8      	blx	r5
 800e396:	b007      	add	sp, #28
 800e398:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e39c:	20001b66 	.word	0x20001b66

0800e3a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800e3a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e3a4:	4604      	mov	r4, r0
 800e3a6:	b08f      	sub	sp, #60	@ 0x3c
 800e3a8:	4610      	mov	r0, r2
 800e3aa:	460d      	mov	r5, r1
 800e3ac:	4691      	mov	r9, r2
 800e3ae:	461e      	mov	r6, r3
 800e3b0:	f004 f8c6 	bl	8012540 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800e3b4:	2800      	cmp	r0, #0
 800e3b6:	f000 809d 	beq.w	800e4f4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800e3ba:	6823      	ldr	r3, [r4, #0]
 800e3bc:	4620      	mov	r0, r4
 800e3be:	f8df b198 	ldr.w	fp, [pc, #408]	@ 800e558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800e3c2:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 800e3c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e3c8:	4798      	blx	r3
 800e3ca:	6823      	ldr	r3, [r4, #0]
 800e3cc:	4620      	mov	r0, r4
 800e3ce:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 800e55c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800e3d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e3d4:	4798      	blx	r3
 800e3d6:	f8bb 3000 	ldrh.w	r3, [fp]
 800e3da:	4f5c      	ldr	r7, [pc, #368]	@ (800e54c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e3dc:	9301      	str	r3, [sp, #4]
 800e3de:	f8ba 3000 	ldrh.w	r3, [sl]
 800e3e2:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800e3e6:	4640      	mov	r0, r8
 800e3e8:	9302      	str	r3, [sp, #8]
 800e3ea:	883b      	ldrh	r3, [r7, #0]
 800e3ec:	9303      	str	r3, [sp, #12]
 800e3ee:	4b58      	ldr	r3, [pc, #352]	@ (800e550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e3f0:	881a      	ldrh	r2, [r3, #0]
 800e3f2:	9305      	str	r3, [sp, #20]
 800e3f4:	9204      	str	r2, [sp, #16]
 800e3f6:	f004 f937 	bl	8012668 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e3fa:	8038      	strh	r0, [r7, #0]
 800e3fc:	4640      	mov	r0, r8
 800e3fe:	f004 f967 	bl	80126d0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e402:	9b05      	ldr	r3, [sp, #20]
 800e404:	b280      	uxth	r0, r0
 800e406:	8018      	strh	r0, [r3, #0]
 800e408:	4b52      	ldr	r3, [pc, #328]	@ (800e554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800e40a:	781b      	ldrb	r3, [r3, #0]
 800e40c:	2b00      	cmp	r3, #0
 800e40e:	d174      	bne.n	800e4fa <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800e410:	883b      	ldrh	r3, [r7, #0]
 800e412:	f8aa 0000 	strh.w	r0, [sl]
 800e416:	f8ab 3000 	strh.w	r3, [fp]
 800e41a:	4648      	mov	r0, r9
 800e41c:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 800e420:	f004 f88e 	bl	8012540 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800e424:	2200      	movs	r2, #0
 800e426:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 800e42a:	4611      	mov	r1, r2
 800e42c:	4628      	mov	r0, r5
 800e42e:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800e432:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800e436:	f7fc fc8a 	bl	800ad4e <_ZN8touchgfx8Drawable5setXYEss>
 800e43a:	2301      	movs	r3, #1
 800e43c:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 800e440:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 800e444:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800e448:	2b00      	cmp	r3, #0
 800e44a:	dd5c      	ble.n	800e506 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800e44c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800e450:	2b00      	cmp	r3, #0
 800e452:	dd58      	ble.n	800e506 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800e454:	462a      	mov	r2, r5
 800e456:	ab0a      	add	r3, sp, #40	@ 0x28
 800e458:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e45c:	6851      	ldr	r1, [r2, #4]
 800e45e:	c303      	stmia	r3!, {r0, r1}
 800e460:	4631      	mov	r1, r6
 800e462:	a80a      	add	r0, sp, #40	@ 0x28
 800e464:	f7ff fbf6 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 800e468:	4b38      	ldr	r3, [pc, #224]	@ (800e54c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e46a:	2100      	movs	r1, #0
 800e46c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800e470:	4b37      	ldr	r3, [pc, #220]	@ (800e550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e472:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 800e476:	aa0a      	add	r2, sp, #40	@ 0x28
 800e478:	f9b3 3000 	ldrsh.w	r3, [r3]
 800e47c:	910c      	str	r1, [sp, #48]	@ 0x30
 800e47e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 800e482:	ab08      	add	r3, sp, #32
 800e484:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e488:	e883 0003 	stmia.w	r3, {r0, r1}
 800e48c:	4618      	mov	r0, r3
 800e48e:	a90c      	add	r1, sp, #48	@ 0x30
 800e490:	f7ff fbe0 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 800e494:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 800e496:	2b00      	cmp	r3, #0
 800e498:	d13c      	bne.n	800e514 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800e49a:	2000      	movs	r0, #0
 800e49c:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 800e4a0:	2600      	movs	r6, #0
 800e4a2:	696b      	ldr	r3, [r5, #20]
 800e4a4:	a908      	add	r1, sp, #32
 800e4a6:	682a      	ldr	r2, [r5, #0]
 800e4a8:	4628      	mov	r0, r5
 800e4aa:	9305      	str	r3, [sp, #20]
 800e4ac:	616e      	str	r6, [r5, #20]
 800e4ae:	6892      	ldr	r2, [r2, #8]
 800e4b0:	4790      	blx	r2
 800e4b2:	9b05      	ldr	r3, [sp, #20]
 800e4b4:	4652      	mov	r2, sl
 800e4b6:	4649      	mov	r1, r9
 800e4b8:	616b      	str	r3, [r5, #20]
 800e4ba:	4628      	mov	r0, r5
 800e4bc:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 800e4c0:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 800e4c4:	f7fc fc43 	bl	800ad4e <_ZN8touchgfx8Drawable5setXYEss>
 800e4c8:	9a01      	ldr	r2, [sp, #4]
 800e4ca:	4b23      	ldr	r3, [pc, #140]	@ (800e558 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800e4cc:	4620      	mov	r0, r4
 800e4ce:	801a      	strh	r2, [r3, #0]
 800e4d0:	9a02      	ldr	r2, [sp, #8]
 800e4d2:	4b22      	ldr	r3, [pc, #136]	@ (800e55c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800e4d4:	801a      	strh	r2, [r3, #0]
 800e4d6:	9a03      	ldr	r2, [sp, #12]
 800e4d8:	4b1c      	ldr	r3, [pc, #112]	@ (800e54c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800e4da:	801a      	strh	r2, [r3, #0]
 800e4dc:	4b1c      	ldr	r3, [pc, #112]	@ (800e550 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800e4de:	9a04      	ldr	r2, [sp, #16]
 800e4e0:	801a      	strh	r2, [r3, #0]
 800e4e2:	6823      	ldr	r3, [r4, #0]
 800e4e4:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 800e4e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800e4ea:	4798      	blx	r3
 800e4ec:	6823      	ldr	r3, [r4, #0]
 800e4ee:	4620      	mov	r0, r4
 800e4f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e4f2:	4798      	blx	r3
 800e4f4:	b00f      	add	sp, #60	@ 0x3c
 800e4f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e4fa:	883b      	ldrh	r3, [r7, #0]
 800e4fc:	f8ab 0000 	strh.w	r0, [fp]
 800e500:	f8aa 3000 	strh.w	r3, [sl]
 800e504:	e789      	b.n	800e41a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800e506:	462a      	mov	r2, r5
 800e508:	ab0a      	add	r3, sp, #40	@ 0x28
 800e50a:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800e50e:	6851      	ldr	r1, [r2, #4]
 800e510:	c303      	stmia	r3!, {r0, r1}
 800e512:	e7a9      	b.n	800e468 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800e514:	a807      	add	r0, sp, #28
 800e516:	f004 fa1d 	bl	8012954 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e51a:	4606      	mov	r6, r0
 800e51c:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 800e51e:	6803      	ldr	r3, [r0, #0]
 800e520:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e522:	4798      	blx	r3
 800e524:	4286      	cmp	r6, r0
 800e526:	d1b8      	bne.n	800e49a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800e528:	f7fb febe 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e52c:	6803      	ldr	r3, [r0, #0]
 800e52e:	4606      	mov	r6, r0
 800e530:	a807      	add	r0, sp, #28
 800e532:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800e534:	9305      	str	r3, [sp, #20]
 800e536:	f004 fa0d 	bl	8012954 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800e53a:	9b05      	ldr	r3, [sp, #20]
 800e53c:	4601      	mov	r1, r0
 800e53e:	4630      	mov	r0, r6
 800e540:	4798      	blx	r3
 800e542:	f080 0001 	eor.w	r0, r0, #1
 800e546:	b2c0      	uxtb	r0, r0
 800e548:	e7a8      	b.n	800e49c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800e54a:	bf00      	nop
 800e54c:	20001b60 	.word	0x20001b60
 800e550:	20001b62 	.word	0x20001b62
 800e554:	20001b64 	.word	0x20001b64
 800e558:	20001b66 	.word	0x20001b66
 800e55c:	20001b68 	.word	0x20001b68

0800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800e560:	4b07      	ldr	r3, [pc, #28]	@ (800e580 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800e562:	b510      	push	{r4, lr}
 800e564:	781b      	ldrb	r3, [r3, #0]
 800e566:	4604      	mov	r4, r0
 800e568:	b13b      	cbz	r3, 800e57a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800e56a:	6803      	ldr	r3, [r0, #0]
 800e56c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e56e:	4798      	blx	r3
 800e570:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 800e572:	4283      	cmp	r3, r0
 800e574:	d101      	bne.n	800e57a <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800e576:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 800e578:	bd10      	pop	{r4, pc}
 800e57a:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 800e57c:	e7fc      	b.n	800e578 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800e57e:	bf00      	nop
 800e580:	20001b6a 	.word	0x20001b6a

0800e584 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800e584:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e588:	461d      	mov	r5, r3
 800e58a:	b08a      	sub	sp, #40	@ 0x28
 800e58c:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800e590:	4690      	mov	r8, r2
 800e592:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 800e596:	2400      	movs	r4, #0
 800e598:	4607      	mov	r7, r0
 800e59a:	fb06 8505 	mla	r5, r6, r5, r8
 800e59e:	9404      	str	r4, [sp, #16]
 800e5a0:	f88d 4020 	strb.w	r4, [sp, #32]
 800e5a4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e5a8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e5ac:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e5b0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e5b4:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e5b8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e5bc:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e5c0:	f7ff ffce 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e5c4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e5c8:	6878      	ldr	r0, [r7, #4]
 800e5ca:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e5ce:	a901      	add	r1, sp, #4
 800e5d0:	9505      	str	r5, [sp, #20]
 800e5d2:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e5d6:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 800e5da:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800e5de:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800e5e2:	6803      	ldr	r3, [r0, #0]
 800e5e4:	685b      	ldr	r3, [r3, #4]
 800e5e6:	4798      	blx	r3
 800e5e8:	b00a      	add	sp, #40	@ 0x28
 800e5ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e5ee <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800e5ee:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5f2:	b08b      	sub	sp, #44	@ 0x2c
 800e5f4:	2400      	movs	r4, #0
 800e5f6:	4691      	mov	r9, r2
 800e5f8:	461d      	mov	r5, r3
 800e5fa:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 800e5fe:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 800e602:	4688      	mov	r8, r1
 800e604:	4607      	mov	r7, r0
 800e606:	9404      	str	r4, [sp, #16]
 800e608:	fb06 9505 	mla	r5, r6, r5, r9
 800e60c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e610:	f7ff ffa6 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e614:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e618:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800e61c:	6878      	ldr	r0, [r7, #4]
 800e61e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e622:	a901      	add	r1, sp, #4
 800e624:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e628:	9505      	str	r5, [sp, #20]
 800e62a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e62e:	f8ad 401c 	strh.w	r4, [sp, #28]
 800e632:	f8ad 601e 	strh.w	r6, [sp, #30]
 800e636:	f8cd 8010 	str.w	r8, [sp, #16]
 800e63a:	f8ad 4020 	strh.w	r4, [sp, #32]
 800e63e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e642:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 800e646:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 800e64a:	6803      	ldr	r3, [r0, #0]
 800e64c:	685b      	ldr	r3, [r3, #4]
 800e64e:	4798      	blx	r3
 800e650:	b00b      	add	sp, #44	@ 0x2c
 800e652:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800e658 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800e658:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e65c:	b08a      	sub	sp, #40	@ 0x28
 800e65e:	4698      	mov	r8, r3
 800e660:	2300      	movs	r3, #0
 800e662:	4606      	mov	r6, r0
 800e664:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 800e668:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 800e66c:	2d0b      	cmp	r5, #11
 800e66e:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 800e672:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 800e676:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 800e67a:	9304      	str	r3, [sp, #16]
 800e67c:	d137      	bne.n	800e6ee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 800e67e:	2380      	movs	r3, #128	@ 0x80
 800e680:	f88d 0020 	strb.w	r0, [sp, #32]
 800e684:	4630      	mov	r0, r6
 800e686:	9203      	str	r2, [sp, #12]
 800e688:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e68c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e690:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e694:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e698:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e69c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 800e6a0:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e6a4:	f7ff ff5c 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e6a8:	2c0b      	cmp	r4, #11
 800e6aa:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 800e6ae:	f8ad 701e 	strh.w	r7, [sp, #30]
 800e6b2:	bf94      	ite	ls
 800e6b4:	4b19      	ldrls	r3, [pc, #100]	@ (800e71c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800e6b6:	2100      	movhi	r1, #0
 800e6b8:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 800e6bc:	bf98      	it	ls
 800e6be:	5d19      	ldrbls	r1, [r3, r4]
 800e6c0:	fb02 8307 	mla	r3, r2, r7, r8
 800e6c4:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 800e6c8:	10c9      	asrs	r1, r1, #3
 800e6ca:	fb01 0003 	mla	r0, r1, r3, r0
 800e6ce:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 800e6d2:	a901      	add	r1, sp, #4
 800e6d4:	9005      	str	r0, [sp, #20]
 800e6d6:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800e6da:	2300      	movs	r3, #0
 800e6dc:	6870      	ldr	r0, [r6, #4]
 800e6de:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800e6e2:	6803      	ldr	r3, [r0, #0]
 800e6e4:	685b      	ldr	r3, [r3, #4]
 800e6e6:	4798      	blx	r3
 800e6e8:	b00a      	add	sp, #40	@ 0x28
 800e6ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e6ee:	2d02      	cmp	r5, #2
 800e6f0:	d109      	bne.n	800e706 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 800e6f2:	28ff      	cmp	r0, #255	@ 0xff
 800e6f4:	d105      	bne.n	800e702 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 800e6f6:	f1bc 0f00 	cmp.w	ip, #0
 800e6fa:	bf14      	ite	ne
 800e6fc:	2340      	movne	r3, #64	@ 0x40
 800e6fe:	2320      	moveq	r3, #32
 800e700:	e7be      	b.n	800e680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e702:	2340      	movs	r3, #64	@ 0x40
 800e704:	e7bc      	b.n	800e680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e706:	28ff      	cmp	r0, #255	@ 0xff
 800e708:	d105      	bne.n	800e716 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 800e70a:	f1bc 0f00 	cmp.w	ip, #0
 800e70e:	bf14      	ite	ne
 800e710:	2304      	movne	r3, #4
 800e712:	2301      	moveq	r3, #1
 800e714:	e7b4      	b.n	800e680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e716:	2304      	movs	r3, #4
 800e718:	e7b2      	b.n	800e680 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800e71a:	bf00      	nop
 800e71c:	08022d50 	.word	0x08022d50

0800e720 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800e720:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e724:	b08b      	sub	sp, #44	@ 0x2c
 800e726:	461d      	mov	r5, r3
 800e728:	2400      	movs	r4, #0
 800e72a:	4688      	mov	r8, r1
 800e72c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 800e730:	4693      	mov	fp, r2
 800e732:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 800e736:	4607      	mov	r7, r0
 800e738:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 800e73c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 800e740:	9404      	str	r4, [sp, #16]
 800e742:	bf14      	ite	ne
 800e744:	2308      	movne	r3, #8
 800e746:	2302      	moveq	r3, #2
 800e748:	fb05 b50a 	mla	r5, r5, sl, fp
 800e74c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800e750:	f7ff ff06 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e754:	2e0b      	cmp	r6, #11
 800e756:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 800e75a:	a901      	add	r1, sp, #4
 800e75c:	bf98      	it	ls
 800e75e:	4b13      	ldrls	r3, [pc, #76]	@ (800e7ac <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800e760:	f8ad a01e 	strh.w	sl, [sp, #30]
 800e764:	bf98      	it	ls
 800e766:	5d9c      	ldrbls	r4, [r3, r6]
 800e768:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 800e76c:	10e4      	asrs	r4, r4, #3
 800e76e:	f8cd 8010 	str.w	r8, [sp, #16]
 800e772:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e776:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800e77a:	fb04 0405 	mla	r4, r4, r5, r0
 800e77e:	6878      	ldr	r0, [r7, #4]
 800e780:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e784:	2300      	movs	r3, #0
 800e786:	9405      	str	r4, [sp, #20]
 800e788:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e78c:	f88d 9020 	strb.w	r9, [sp, #32]
 800e790:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 800e794:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 800e798:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 800e79c:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 800e7a0:	6803      	ldr	r3, [r0, #0]
 800e7a2:	685b      	ldr	r3, [r3, #4]
 800e7a4:	4798      	blx	r3
 800e7a6:	b00b      	add	sp, #44	@ 0x2c
 800e7a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e7ac:	08022d50 	.word	0x08022d50

0800e7b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800e7b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7b4:	461e      	mov	r6, r3
 800e7b6:	4b0a      	ldr	r3, [pc, #40]	@ (800e7e0 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800e7b8:	460f      	mov	r7, r1
 800e7ba:	4690      	mov	r8, r2
 800e7bc:	881d      	ldrh	r5, [r3, #0]
 800e7be:	f7fb fd73 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e7c2:	6803      	ldr	r3, [r0, #0]
 800e7c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e7c6:	4798      	blx	r3
 800e7c8:	280b      	cmp	r0, #11
 800e7ca:	bf96      	itet	ls
 800e7cc:	4b05      	ldrls	r3, [pc, #20]	@ (800e7e4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800e7ce:	2400      	movhi	r4, #0
 800e7d0:	5c1c      	ldrbls	r4, [r3, r0]
 800e7d2:	fb08 7005 	mla	r0, r8, r5, r7
 800e7d6:	10e4      	asrs	r4, r4, #3
 800e7d8:	fb04 6000 	mla	r0, r4, r0, r6
 800e7dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7e0:	20001b66 	.word	0x20001b66
 800e7e4:	08022d50 	.word	0x08022d50

0800e7e8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800e7e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e7ea:	b08b      	sub	sp, #44	@ 0x2c
 800e7ec:	461f      	mov	r7, r3
 800e7ee:	4604      	mov	r4, r0
 800e7f0:	4616      	mov	r6, r2
 800e7f2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 800e7f6:	2500      	movs	r5, #0
 800e7f8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800e7fc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 800e800:	9504      	str	r5, [sp, #16]
 800e802:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e806:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 800e80a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800e80e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 800e812:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e816:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 800e81a:	f88d 3020 	strb.w	r3, [sp, #32]
 800e81e:	f7ff fe9f 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e822:	463a      	mov	r2, r7
 800e824:	4631      	mov	r1, r6
 800e826:	4603      	mov	r3, r0
 800e828:	4620      	mov	r0, r4
 800e82a:	f7ff ffc1 	bl	800e7b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e82e:	4b0e      	ldr	r3, [pc, #56]	@ (800e868 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800e830:	9005      	str	r0, [sp, #20]
 800e832:	881b      	ldrh	r3, [r3, #0]
 800e834:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e838:	f7fb fd36 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e83c:	6803      	ldr	r3, [r0, #0]
 800e83e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e840:	4798      	blx	r3
 800e842:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800e844:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 800e848:	a901      	add	r1, sp, #4
 800e84a:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 800e84e:	9304      	str	r3, [sp, #16]
 800e850:	6860      	ldr	r0, [r4, #4]
 800e852:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 800e856:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 800e85a:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 800e85e:	6803      	ldr	r3, [r0, #0]
 800e860:	685b      	ldr	r3, [r3, #4]
 800e862:	4798      	blx	r3
 800e864:	b00b      	add	sp, #44	@ 0x2c
 800e866:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e868:	20001b66 	.word	0x20001b66

0800e86c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800e86c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e86e:	b08d      	sub	sp, #52	@ 0x34
 800e870:	2501      	movs	r5, #1
 800e872:	4604      	mov	r4, r0
 800e874:	466b      	mov	r3, sp
 800e876:	9503      	str	r5, [sp, #12]
 800e878:	e883 0006 	stmia.w	r3, {r1, r2}
 800e87c:	2300      	movs	r3, #0
 800e87e:	f8bd 6000 	ldrh.w	r6, [sp]
 800e882:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800e886:	9306      	str	r3, [sp, #24]
 800e888:	6803      	ldr	r3, [r0, #0]
 800e88a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e88c:	4798      	blx	r3
 800e88e:	463a      	mov	r2, r7
 800e890:	4631      	mov	r1, r6
 800e892:	4603      	mov	r3, r0
 800e894:	4620      	mov	r0, r4
 800e896:	f7ff ff8b 	bl	800e7b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e89a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 800e89c:	9004      	str	r0, [sp, #16]
 800e89e:	9307      	str	r3, [sp, #28]
 800e8a0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e8a4:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e8a8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e8ac:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e8b0:	4b0e      	ldr	r3, [pc, #56]	@ (800e8ec <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800e8b2:	881b      	ldrh	r3, [r3, #0]
 800e8b4:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800e8b8:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800e8bc:	f7fb fcf4 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e8c0:	6803      	ldr	r3, [r0, #0]
 800e8c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e8c4:	4798      	blx	r3
 800e8c6:	23ff      	movs	r3, #255	@ 0xff
 800e8c8:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800e8cc:	a903      	add	r1, sp, #12
 800e8ce:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e8d2:	6860      	ldr	r0, [r4, #4]
 800e8d4:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e8d8:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e8dc:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e8e0:	6803      	ldr	r3, [r0, #0]
 800e8e2:	685b      	ldr	r3, [r3, #4]
 800e8e4:	4798      	blx	r3
 800e8e6:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 800e8e8:	b00d      	add	sp, #52	@ 0x34
 800e8ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e8ec:	20001b66 	.word	0x20001b66

0800e8f0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800e8f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8f4:	b08c      	sub	sp, #48	@ 0x30
 800e8f6:	461e      	mov	r6, r3
 800e8f8:	2300      	movs	r3, #0
 800e8fa:	4604      	mov	r4, r0
 800e8fc:	466d      	mov	r5, sp
 800e8fe:	9306      	str	r3, [sp, #24]
 800e900:	6803      	ldr	r3, [r0, #0]
 800e902:	e885 0006 	stmia.w	r5, {r1, r2}
 800e906:	2501      	movs	r5, #1
 800e908:	f8bd 7000 	ldrh.w	r7, [sp]
 800e90c:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800e910:	9503      	str	r5, [sp, #12]
 800e912:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800e914:	4798      	blx	r3
 800e916:	4642      	mov	r2, r8
 800e918:	4639      	mov	r1, r7
 800e91a:	4603      	mov	r3, r0
 800e91c:	4620      	mov	r0, r4
 800e91e:	f7ff ff47 	bl	800e7b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e922:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800e926:	9004      	str	r0, [sp, #16]
 800e928:	f8ad 3020 	strh.w	r3, [sp, #32]
 800e92c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800e930:	9607      	str	r6, [sp, #28]
 800e932:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 800e936:	4b10      	ldr	r3, [pc, #64]	@ (800e978 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800e938:	881b      	ldrh	r3, [r3, #0]
 800e93a:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 800e93e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 800e940:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 800e944:	f7fb fcb0 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 800e948:	6803      	ldr	r3, [r0, #0]
 800e94a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800e94c:	4798      	blx	r3
 800e94e:	23ff      	movs	r3, #255	@ 0xff
 800e950:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 800e954:	a903      	add	r1, sp, #12
 800e956:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 800e95a:	6860      	ldr	r0, [r4, #4]
 800e95c:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 800e960:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 800e964:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 800e968:	6803      	ldr	r3, [r0, #0]
 800e96a:	685b      	ldr	r3, [r3, #4]
 800e96c:	4798      	blx	r3
 800e96e:	4630      	mov	r0, r6
 800e970:	b00c      	add	sp, #48	@ 0x30
 800e972:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e976:	bf00      	nop
 800e978:	20001b66 	.word	0x20001b66

0800e97c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800e97c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e97e:	b085      	sub	sp, #20
 800e980:	4605      	mov	r5, r0
 800e982:	ac02      	add	r4, sp, #8
 800e984:	e884 0006 	stmia.w	r4, {r1, r2}
 800e988:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800e98c:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800e990:	f7ff fde6 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e994:	4631      	mov	r1, r6
 800e996:	4603      	mov	r3, r0
 800e998:	463a      	mov	r2, r7
 800e99a:	4628      	mov	r0, r5
 800e99c:	f7ff ff08 	bl	800e7b0 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800e9a0:	4a05      	ldr	r2, [pc, #20]	@ (800e9b8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800e9a2:	682b      	ldr	r3, [r5, #0]
 800e9a4:	8812      	ldrh	r2, [r2, #0]
 800e9a6:	9200      	str	r2, [sp, #0]
 800e9a8:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 800e9aa:	4603      	mov	r3, r0
 800e9ac:	4628      	mov	r0, r5
 800e9ae:	e894 0006 	ldmia.w	r4, {r1, r2}
 800e9b2:	47b0      	blx	r6
 800e9b4:	b005      	add	sp, #20
 800e9b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e9b8:	20001b66 	.word	0x20001b66

0800e9bc <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800e9bc:	b570      	push	{r4, r5, r6, lr}
 800e9be:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 800e9c2:	4604      	mov	r4, r0
 800e9c4:	b19b      	cbz	r3, 800e9ee <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800e9c6:	2002      	movs	r0, #2
 800e9c8:	f7fd f890 	bl	800baec <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800e9cc:	2300      	movs	r3, #0
 800e9ce:	4620      	mov	r0, r4
 800e9d0:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 800e9d4:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 800e9d8:	6823      	ldr	r3, [r4, #0]
 800e9da:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 800e9de:	f7ff fdbf 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800e9e2:	4601      	mov	r1, r0
 800e9e4:	4620      	mov	r0, r4
 800e9e6:	462b      	mov	r3, r5
 800e9e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e9ec:	4718      	bx	r3
 800e9ee:	bd70      	pop	{r4, r5, r6, pc}

0800e9f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800e9f0:	b538      	push	{r3, r4, r5, lr}
 800e9f2:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 800e9f6:	4604      	mov	r4, r0
 800e9f8:	460d      	mov	r5, r1
 800e9fa:	428b      	cmp	r3, r1
 800e9fc:	d006      	beq.n	800ea0c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800e9fe:	6803      	ldr	r3, [r0, #0]
 800ea00:	b929      	cbnz	r1, 800ea0e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800ea02:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 800ea06:	4798      	blx	r3
 800ea08:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 800ea0c:	bd38      	pop	{r3, r4, r5, pc}
 800ea0e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 800ea12:	e7f8      	b.n	800ea06 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800ea14 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ea14:	4b0d      	ldr	r3, [pc, #52]	@ (800ea4c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800ea16:	b510      	push	{r4, lr}
 800ea18:	781b      	ldrb	r3, [r3, #0]
 800ea1a:	4604      	mov	r4, r0
 800ea1c:	b95b      	cbnz	r3, 800ea36 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ea1e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 800ea22:	2b02      	cmp	r3, #2
 800ea24:	d007      	beq.n	800ea36 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ea26:	6840      	ldr	r0, [r0, #4]
 800ea28:	f000 f90e 	bl	800ec48 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ea2c:	b118      	cbz	r0, 800ea36 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ea2e:	6862      	ldr	r2, [r4, #4]
 800ea30:	7a53      	ldrb	r3, [r2, #9]
 800ea32:	2b00      	cmp	r3, #0
 800ea34:	d0fc      	beq.n	800ea30 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ea36:	f7fd facf 	bl	800bfd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ea3a:	4620      	mov	r0, r4
 800ea3c:	2100      	movs	r1, #0
 800ea3e:	f7ff ffd7 	bl	800e9f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800ea42:	4620      	mov	r0, r4
 800ea44:	f7ff fd8c 	bl	800e560 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ea48:	bd10      	pop	{r4, pc}
 800ea4a:	bf00      	nop
 800ea4c:	20001b6a 	.word	0x20001b6a

0800ea50 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800ea50:	4770      	bx	lr

0800ea52 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800ea52:	2000      	movs	r0, #0
 800ea54:	4770      	bx	lr

0800ea56 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800ea56:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800ea5a:	1a13      	subs	r3, r2, r0
 800ea5c:	4258      	negs	r0, r3
 800ea5e:	4158      	adcs	r0, r3
 800ea60:	4770      	bx	lr

0800ea62 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800ea62:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800ea66:	1a9b      	subs	r3, r3, r2
 800ea68:	2b00      	cmp	r3, #0
 800ea6a:	bfdc      	itt	le
 800ea6c:	6882      	ldrle	r2, [r0, #8]
 800ea6e:	189b      	addle	r3, r3, r2
 800ea70:	2b01      	cmp	r3, #1
 800ea72:	bfcc      	ite	gt
 800ea74:	2000      	movgt	r0, #0
 800ea76:	2001      	movle	r0, #1
 800ea78:	4770      	bx	lr

0800ea7a <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800ea7a:	6902      	ldr	r2, [r0, #16]
 800ea7c:	6843      	ldr	r3, [r0, #4]
 800ea7e:	2024      	movs	r0, #36	@ 0x24
 800ea80:	fb00 3002 	mla	r0, r0, r2, r3
 800ea84:	4770      	bx	lr

0800ea86 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800ea86:	6803      	ldr	r3, [r0, #0]
 800ea88:	691b      	ldr	r3, [r3, #16]
 800ea8a:	4718      	bx	r3

0800ea8c <_ZN8touchgfx13DMA_Interface7executeEv>:
 800ea8c:	2301      	movs	r3, #1
 800ea8e:	b570      	push	{r4, r5, r6, lr}
 800ea90:	7203      	strb	r3, [r0, #8]
 800ea92:	4604      	mov	r4, r0
 800ea94:	6840      	ldr	r0, [r0, #4]
 800ea96:	6803      	ldr	r3, [r0, #0]
 800ea98:	699b      	ldr	r3, [r3, #24]
 800ea9a:	4798      	blx	r3
 800ea9c:	6803      	ldr	r3, [r0, #0]
 800ea9e:	4605      	mov	r5, r0
 800eaa0:	2b40      	cmp	r3, #64	@ 0x40
 800eaa2:	d00c      	beq.n	800eabe <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800eaa4:	d810      	bhi.n	800eac8 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800eaa6:	2b04      	cmp	r3, #4
 800eaa8:	d01d      	beq.n	800eae6 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800eaaa:	d804      	bhi.n	800eab6 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800eaac:	2b01      	cmp	r3, #1
 800eaae:	d006      	beq.n	800eabe <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800eab0:	2b02      	cmp	r3, #2
 800eab2:	d02c      	beq.n	800eb0e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800eab4:	bd70      	pop	{r4, r5, r6, pc}
 800eab6:	2b08      	cmp	r3, #8
 800eab8:	d01d      	beq.n	800eaf6 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800eaba:	2b20      	cmp	r3, #32
 800eabc:	d1fa      	bne.n	800eab4 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800eabe:	6823      	ldr	r3, [r4, #0]
 800eac0:	4620      	mov	r0, r4
 800eac2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800eac4:	4798      	blx	r3
 800eac6:	e013      	b.n	800eaf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800eac8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800eacc:	d0f7      	beq.n	800eabe <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800eace:	d804      	bhi.n	800eada <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800ead0:	2b80      	cmp	r3, #128	@ 0x80
 800ead2:	d0f4      	beq.n	800eabe <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800ead4:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800ead8:	e7f0      	b.n	800eabc <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800eada:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800eade:	d0ee      	beq.n	800eabe <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800eae0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800eae4:	e7e5      	b.n	800eab2 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800eae6:	6823      	ldr	r3, [r4, #0]
 800eae8:	7f01      	ldrb	r1, [r0, #28]
 800eaea:	4620      	mov	r0, r4
 800eaec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800eaee:	4798      	blx	r3
 800eaf0:	6823      	ldr	r3, [r4, #0]
 800eaf2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800eaf4:	e006      	b.n	800eb04 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800eaf6:	6823      	ldr	r3, [r4, #0]
 800eaf8:	7f01      	ldrb	r1, [r0, #28]
 800eafa:	4620      	mov	r0, r4
 800eafc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800eafe:	4798      	blx	r3
 800eb00:	6823      	ldr	r3, [r4, #0]
 800eb02:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800eb04:	4629      	mov	r1, r5
 800eb06:	4620      	mov	r0, r4
 800eb08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800eb0c:	4718      	bx	r3
 800eb0e:	6823      	ldr	r3, [r4, #0]
 800eb10:	4620      	mov	r0, r4
 800eb12:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800eb14:	4798      	blx	r3
 800eb16:	e7f3      	b.n	800eb00 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800eb18 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800eb18:	4770      	bx	lr

0800eb1a <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800eb1a:	4770      	bx	lr

0800eb1c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800eb1c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800eb20:	b510      	push	{r4, lr}
 800eb22:	1ad2      	subs	r2, r2, r3
 800eb24:	2a00      	cmp	r2, #0
 800eb26:	bfdc      	itt	le
 800eb28:	6884      	ldrle	r4, [r0, #8]
 800eb2a:	1912      	addle	r2, r2, r4
 800eb2c:	2a01      	cmp	r2, #1
 800eb2e:	dd16      	ble.n	800eb5e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800eb30:	6842      	ldr	r2, [r0, #4]
 800eb32:	2424      	movs	r4, #36	@ 0x24
 800eb34:	fb04 2303 	mla	r3, r4, r3, r2
 800eb38:	f101 0220 	add.w	r2, r1, #32
 800eb3c:	f851 4b04 	ldr.w	r4, [r1], #4
 800eb40:	4291      	cmp	r1, r2
 800eb42:	f843 4b04 	str.w	r4, [r3], #4
 800eb46:	d1f9      	bne.n	800eb3c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800eb48:	780a      	ldrb	r2, [r1, #0]
 800eb4a:	701a      	strb	r2, [r3, #0]
 800eb4c:	68c3      	ldr	r3, [r0, #12]
 800eb4e:	6882      	ldr	r2, [r0, #8]
 800eb50:	f3bf 8f5b 	dmb	ish
 800eb54:	3301      	adds	r3, #1
 800eb56:	429a      	cmp	r2, r3
 800eb58:	bfd8      	it	le
 800eb5a:	1a9b      	suble	r3, r3, r2
 800eb5c:	60c3      	str	r3, [r0, #12]
 800eb5e:	bd10      	pop	{r4, pc}

0800eb60 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800eb60:	6903      	ldr	r3, [r0, #16]
 800eb62:	6882      	ldr	r2, [r0, #8]
 800eb64:	f3bf 8f5b 	dmb	ish
 800eb68:	3301      	adds	r3, #1
 800eb6a:	429a      	cmp	r2, r3
 800eb6c:	bfd8      	it	le
 800eb6e:	1a9b      	suble	r3, r3, r2
 800eb70:	6103      	str	r3, [r0, #16]
 800eb72:	4770      	bx	lr

0800eb74 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800eb74:	b570      	push	{r4, r5, r6, lr}
 800eb76:	4604      	mov	r4, r0
 800eb78:	460e      	mov	r6, r1
 800eb7a:	6860      	ldr	r0, [r4, #4]
 800eb7c:	6803      	ldr	r3, [r0, #0]
 800eb7e:	685b      	ldr	r3, [r3, #4]
 800eb80:	4798      	blx	r3
 800eb82:	2800      	cmp	r0, #0
 800eb84:	d1f9      	bne.n	800eb7a <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800eb86:	4d0d      	ldr	r5, [pc, #52]	@ (800ebbc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800eb88:	6828      	ldr	r0, [r5, #0]
 800eb8a:	6803      	ldr	r3, [r0, #0]
 800eb8c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800eb8e:	4798      	blx	r3
 800eb90:	f7fd fa44 	bl	800c01c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800eb94:	6828      	ldr	r0, [r5, #0]
 800eb96:	2101      	movs	r1, #1
 800eb98:	f7ff ff2a 	bl	800e9f0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800eb9c:	6860      	ldr	r0, [r4, #4]
 800eb9e:	4631      	mov	r1, r6
 800eba0:	6803      	ldr	r3, [r0, #0]
 800eba2:	689b      	ldr	r3, [r3, #8]
 800eba4:	4798      	blx	r3
 800eba6:	6823      	ldr	r3, [r4, #0]
 800eba8:	4620      	mov	r0, r4
 800ebaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ebac:	4798      	blx	r3
 800ebae:	6828      	ldr	r0, [r5, #0]
 800ebb0:	6803      	ldr	r3, [r0, #0]
 800ebb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ebb6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800ebb8:	4718      	bx	r3
 800ebba:	bf00      	nop
 800ebbc:	20001b6c 	.word	0x20001b6c

0800ebc0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800ebc0:	b508      	push	{r3, lr}
 800ebc2:	f7fd fa09 	bl	800bfd8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ebc6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800ebca:	f7fd ba1b 	b.w	800c004 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800ebce <_ZN8touchgfx13DMA_Interface5startEv>:
 800ebce:	b510      	push	{r4, lr}
 800ebd0:	4604      	mov	r4, r0
 800ebd2:	6840      	ldr	r0, [r0, #4]
 800ebd4:	6803      	ldr	r3, [r0, #0]
 800ebd6:	681b      	ldr	r3, [r3, #0]
 800ebd8:	4798      	blx	r3
 800ebda:	b948      	cbnz	r0, 800ebf0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ebdc:	7a63      	ldrb	r3, [r4, #9]
 800ebde:	b13b      	cbz	r3, 800ebf0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ebe0:	7a23      	ldrb	r3, [r4, #8]
 800ebe2:	b92b      	cbnz	r3, 800ebf0 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800ebe4:	6823      	ldr	r3, [r4, #0]
 800ebe6:	4620      	mov	r0, r4
 800ebe8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ebea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ebee:	4718      	bx	r3
 800ebf0:	bd10      	pop	{r4, pc}

0800ebf2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800ebf2:	b570      	push	{r4, r5, r6, lr}
 800ebf4:	4604      	mov	r4, r0
 800ebf6:	6840      	ldr	r0, [r0, #4]
 800ebf8:	6803      	ldr	r3, [r0, #0]
 800ebfa:	681b      	ldr	r3, [r3, #0]
 800ebfc:	4798      	blx	r3
 800ebfe:	4605      	mov	r5, r0
 800ec00:	b930      	cbnz	r0, 800ec10 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ec02:	7a23      	ldrb	r3, [r4, #8]
 800ec04:	b123      	cbz	r3, 800ec10 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800ec06:	6860      	ldr	r0, [r4, #4]
 800ec08:	6803      	ldr	r3, [r0, #0]
 800ec0a:	695b      	ldr	r3, [r3, #20]
 800ec0c:	4798      	blx	r3
 800ec0e:	7225      	strb	r5, [r4, #8]
 800ec10:	6860      	ldr	r0, [r4, #4]
 800ec12:	6803      	ldr	r3, [r0, #0]
 800ec14:	681b      	ldr	r3, [r3, #0]
 800ec16:	4798      	blx	r3
 800ec18:	b928      	cbnz	r0, 800ec26 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800ec1a:	6823      	ldr	r3, [r4, #0]
 800ec1c:	4620      	mov	r0, r4
 800ec1e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ec20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec24:	4718      	bx	r3
 800ec26:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800ec2a:	f7fd ba03 	b.w	800c034 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0800ec30 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800ec30:	b510      	push	{r4, lr}
 800ec32:	6082      	str	r2, [r0, #8]
 800ec34:	2200      	movs	r2, #0
 800ec36:	4c03      	ldr	r4, [pc, #12]	@ (800ec44 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800ec38:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800ec3c:	e9c0 4100 	strd	r4, r1, [r0]
 800ec40:	bd10      	pop	{r4, pc}
 800ec42:	bf00      	nop
 800ec44:	08022e8c 	.word	0x08022e8c

0800ec48 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800ec48:	6840      	ldr	r0, [r0, #4]
 800ec4a:	6803      	ldr	r3, [r0, #0]
 800ec4c:	681b      	ldr	r3, [r3, #0]
 800ec4e:	4718      	bx	r3

0800ec50 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800ec50:	2300      	movs	r3, #0
 800ec52:	8083      	strh	r3, [r0, #4]
 800ec54:	80c3      	strh	r3, [r0, #6]
 800ec56:	8003      	strh	r3, [r0, #0]
 800ec58:	8043      	strh	r3, [r0, #2]
 800ec5a:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 800ec5e:	2bff      	cmp	r3, #255	@ 0xff
 800ec60:	bf01      	itttt	eq
 800ec62:	890b      	ldrheq	r3, [r1, #8]
 800ec64:	8083      	strheq	r3, [r0, #4]
 800ec66:	894b      	ldrheq	r3, [r1, #10]
 800ec68:	80c3      	strheq	r3, [r0, #6]
 800ec6a:	4770      	bx	lr

0800ec6c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800ec6c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800ec6e:	4604      	mov	r4, r0
 800ec70:	466b      	mov	r3, sp
 800ec72:	6808      	ldr	r0, [r1, #0]
 800ec74:	6849      	ldr	r1, [r1, #4]
 800ec76:	c303      	stmia	r3!, {r0, r1}
 800ec78:	6823      	ldr	r3, [r4, #0]
 800ec7a:	4669      	mov	r1, sp
 800ec7c:	4620      	mov	r0, r4
 800ec7e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ec80:	4798      	blx	r3
 800ec82:	4b08      	ldr	r3, [pc, #32]	@ (800eca4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800ec84:	681b      	ldr	r3, [r3, #0]
 800ec86:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 800ec8a:	b10a      	cbz	r2, 800ec90 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800ec8c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 800ec8e:	b900      	cbnz	r0, 800ec92 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800ec90:	6898      	ldr	r0, [r3, #8]
 800ec92:	6803      	ldr	r3, [r0, #0]
 800ec94:	4669      	mov	r1, sp
 800ec96:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 800ec98:	6a1d      	ldr	r5, [r3, #32]
 800ec9a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 800ec9e:	47a8      	blx	r5
 800eca0:	b003      	add	sp, #12
 800eca2:	bd30      	pop	{r4, r5, pc}
 800eca4:	20001b6c 	.word	0x20001b6c

0800eca8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800eca8:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 800ecac:	b12a      	cbz	r2, 800ecba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ecae:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 800ecb2:	b112      	cbz	r2, 800ecba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ecb4:	6803      	ldr	r3, [r0, #0]
 800ecb6:	695b      	ldr	r3, [r3, #20]
 800ecb8:	4718      	bx	r3
 800ecba:	4770      	bx	lr

0800ecbc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800ecbc:	b510      	push	{r4, lr}
 800ecbe:	6803      	ldr	r3, [r0, #0]
 800ecc0:	460c      	mov	r4, r1
 800ecc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ecc4:	4798      	blx	r3
 800ecc6:	1b03      	subs	r3, r0, r4
 800ecc8:	4258      	negs	r0, r3
 800ecca:	4158      	adcs	r0, r3
 800eccc:	bd10      	pop	{r4, pc}
	...

0800ecd0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ecd0:	4b01      	ldr	r3, [pc, #4]	@ (800ecd8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ecd2:	6019      	str	r1, [r3, #0]
 800ecd4:	4770      	bx	lr
 800ecd6:	bf00      	nop
 800ecd8:	20001b74 	.word	0x20001b74

0800ecdc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ecdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ece0:	4696      	mov	lr, r2
 800ece2:	b097      	sub	sp, #92	@ 0x5c
 800ece4:	4605      	mov	r5, r0
 800ece6:	4614      	mov	r4, r2
 800ece8:	460e      	mov	r6, r1
 800ecea:	461f      	mov	r7, r3
 800ecec:	f10d 0c1c 	add.w	ip, sp, #28
 800ecf0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 800ecf4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 800ecf8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 800ecfc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed00:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed04:	f8de 3000 	ldr.w	r3, [lr]
 800ed08:	f104 0e14 	add.w	lr, r4, #20
 800ed0c:	f8cc 3000 	str.w	r3, [ip]
 800ed10:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ed14:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed18:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed1c:	f8de 3000 	ldr.w	r3, [lr]
 800ed20:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ed24:	f8cc 3000 	str.w	r3, [ip]
 800ed28:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ed2c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed30:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed34:	f8de 3000 	ldr.w	r3, [lr]
 800ed38:	4631      	mov	r1, r6
 800ed3a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800ed3c:	4628      	mov	r0, r5
 800ed3e:	f8cc 3000 	str.w	r3, [ip]
 800ed42:	682b      	ldr	r3, [r5, #0]
 800ed44:	9201      	str	r2, [sp, #4]
 800ed46:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800ed48:	f8cd 8008 	str.w	r8, [sp, #8]
 800ed4c:	9200      	str	r2, [sp, #0]
 800ed4e:	aa07      	add	r2, sp, #28
 800ed50:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ed54:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 800ed58:	463b      	mov	r3, r7
 800ed5a:	47d8      	blx	fp
 800ed5c:	46a6      	mov	lr, r4
 800ed5e:	f10d 0c1c 	add.w	ip, sp, #28
 800ed62:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed6a:	f8de 3000 	ldr.w	r3, [lr]
 800ed6e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 800ed72:	343c      	adds	r4, #60	@ 0x3c
 800ed74:	f8cc 3000 	str.w	r3, [ip]
 800ed78:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 800ed7c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ed80:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed84:	f8de 3000 	ldr.w	r3, [lr]
 800ed88:	f8cc 3000 	str.w	r3, [ip]
 800ed8c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 800ed90:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ed92:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ed96:	6823      	ldr	r3, [r4, #0]
 800ed98:	4631      	mov	r1, r6
 800ed9a:	4628      	mov	r0, r5
 800ed9c:	f8cc 3000 	str.w	r3, [ip]
 800eda0:	682b      	ldr	r3, [r5, #0]
 800eda2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800eda6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 800eda8:	f8cd 8008 	str.w	r8, [sp, #8]
 800edac:	9201      	str	r2, [sp, #4]
 800edae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800edb0:	9200      	str	r2, [sp, #0]
 800edb2:	aa07      	add	r2, sp, #28
 800edb4:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 800edb6:	463b      	mov	r3, r7
 800edb8:	47a0      	blx	r4
 800edba:	b017      	add	sp, #92	@ 0x5c
 800edbc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800edc0 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800edc0:	2000      	movs	r0, #0
 800edc2:	4770      	bx	lr

0800edc4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800edc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edc8:	b08d      	sub	sp, #52	@ 0x34
 800edca:	4688      	mov	r8, r1
 800edcc:	f8d3 c000 	ldr.w	ip, [r3]
 800edd0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 800edd2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 800edd6:	680f      	ldr	r7, [r1, #0]
 800edd8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 800eddc:	eba7 070c 	sub.w	r7, r7, ip
 800ede0:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 800ede4:	edd3 6a07 	vldr	s13, [r3, #28]
 800ede8:	42bc      	cmp	r4, r7
 800edea:	9918      	ldr	r1, [sp, #96]	@ 0x60
 800edec:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 800edf0:	bfa8      	it	ge
 800edf2:	463c      	movge	r4, r7
 800edf4:	f9b1 9000 	ldrsh.w	r9, [r1]
 800edf8:	f9ba 1000 	ldrsh.w	r1, [sl]
 800edfc:	ee07 4a90 	vmov	s15, r4
 800ee00:	eb09 0e0c 	add.w	lr, r9, ip
 800ee04:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 800ee08:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800ee0c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 800ee10:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 800ee14:	4571      	cmp	r1, lr
 800ee16:	ee25 4a04 	vmul.f32	s8, s10, s8
 800ee1a:	ee65 4a24 	vmul.f32	s9, s10, s9
 800ee1e:	ee25 5a27 	vmul.f32	s10, s10, s15
 800ee22:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 800ee26:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800ee2a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800ee2e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800ee32:	ee36 0a84 	vadd.f32	s0, s13, s8
 800ee36:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ee3a:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ee3e:	f340 808c 	ble.w	800ef5a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 800ee42:	eba1 060e 	sub.w	r6, r1, lr
 800ee46:	fb96 f5f4 	sdiv	r5, r6, r4
 800ee4a:	ee07 5a10 	vmov	s14, r5
 800ee4e:	2d00      	cmp	r5, #0
 800ee50:	fb04 6615 	mls	r6, r4, r5, r6
 800ee54:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee58:	eea7 0a04 	vfma.f32	s0, s14, s8
 800ee5c:	eee7 0a24 	vfma.f32	s1, s14, s9
 800ee60:	eea7 1a05 	vfma.f32	s2, s14, s10
 800ee64:	dd12      	ble.n	800ee8c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 800ee66:	ee70 6a44 	vsub.f32	s13, s0, s8
 800ee6a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800ee6e:	ee31 2a45 	vsub.f32	s4, s2, s10
 800ee72:	eef5 6a40 	vcmp.f32	s13, #0.0
 800ee76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ee7a:	bf14      	ite	ne
 800ee7c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800ee80:	eeb0 7a67 	vmoveq.f32	s14, s15
 800ee84:	ee61 1a87 	vmul.f32	s3, s3, s14
 800ee88:	ee22 2a07 	vmul.f32	s4, s4, s14
 800ee8c:	fb05 f204 	mul.w	r2, r5, r4
 800ee90:	1abf      	subs	r7, r7, r2
 800ee92:	4494      	add	ip, r2
 800ee94:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800ee98:	4411      	add	r1, r2
 800ee9a:	eb09 020c 	add.w	r2, r9, ip
 800ee9e:	b209      	sxth	r1, r1
 800eea0:	443a      	add	r2, r7
 800eea2:	428a      	cmp	r2, r1
 800eea4:	bfc4      	itt	gt
 800eea6:	eba1 0209 	subgt.w	r2, r1, r9
 800eeaa:	eba2 070c 	subgt.w	r7, r2, ip
 800eeae:	2f00      	cmp	r7, #0
 800eeb0:	dd50      	ble.n	800ef54 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 800eeb2:	fb97 f1f4 	sdiv	r1, r7, r4
 800eeb6:	fb04 7211 	mls	r2, r4, r1, r7
 800eeba:	b90a      	cbnz	r2, 800eec0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800eebc:	3901      	subs	r1, #1
 800eebe:	4622      	mov	r2, r4
 800eec0:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800eec4:	6840      	ldr	r0, [r0, #4]
 800eec6:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 800eeca:	44b6      	add	lr, r6
 800eecc:	f8d0 a000 	ldr.w	sl, [r0]
 800eed0:	2900      	cmp	r1, #0
 800eed2:	bfcc      	ite	gt
 800eed4:	46a1      	movgt	r9, r4
 800eed6:	4691      	movle	r9, r2
 800eed8:	900b      	str	r0, [sp, #44]	@ 0x2c
 800eeda:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 800eedc:	fb04 e505 	mla	r5, r4, r5, lr
 800eee0:	eef0 6a42 	vmov.f32	s13, s4
 800eee4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800eee8:	9008      	str	r0, [sp, #32]
 800eeea:	eeb0 7a61 	vmov.f32	s14, s3
 800eeee:	9818      	ldr	r0, [sp, #96]	@ 0x60
 800eef0:	695b      	ldr	r3, [r3, #20]
 800eef2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800eef6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800eefa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800eefe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 800ef00:	445b      	add	r3, fp
 800ef02:	9307      	str	r3, [sp, #28]
 800ef04:	ee16 3a90 	vmov	r3, s13
 800ef08:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800ef0c:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800ef10:	ee21 3a23 	vmul.f32	s6, s2, s7
 800ef14:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800ef18:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ef1c:	ee17 7a90 	vmov	r7, s15
 800ef20:	ee73 7a42 	vsub.f32	s15, s6, s4
 800ef24:	fb97 f7f4 	sdiv	r7, r7, r4
 800ef28:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800ef2c:	ee17 ca90 	vmov	ip, s15
 800ef30:	fb9c fcf4 	sdiv	ip, ip, r4
 800ef34:	fb0c 3306 	mla	r3, ip, r6, r3
 800ef38:	9302      	str	r3, [sp, #8]
 800ef3a:	ee17 3a10 	vmov	r3, s14
 800ef3e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800ef42:	fb07 3706 	mla	r7, r7, r6, r3
 800ef46:	eba9 0306 	sub.w	r3, r9, r6
 800ef4a:	e9cd 4700 	strd	r4, r7, [sp]
 800ef4e:	f8da 4008 	ldr.w	r4, [sl, #8]
 800ef52:	47a0      	blx	r4
 800ef54:	b00d      	add	sp, #52	@ 0x34
 800ef56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ef5a:	2500      	movs	r5, #0
 800ef5c:	462e      	mov	r6, r5
 800ef5e:	e799      	b.n	800ee94 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

0800ef60 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ef60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef64:	b0db      	sub	sp, #364	@ 0x16c
 800ef66:	461d      	mov	r5, r3
 800ef68:	4614      	mov	r4, r2
 800ef6a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 800ef6e:	910f      	str	r1, [sp, #60]	@ 0x3c
 800ef70:	4629      	mov	r1, r5
 800ef72:	930a      	str	r3, [sp, #40]	@ 0x28
 800ef74:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 800ef78:	9009      	str	r0, [sp, #36]	@ 0x24
 800ef7a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800ef7c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 800ef80:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 800ef84:	9310      	str	r3, [sp, #64]	@ 0x40
 800ef86:	6803      	ldr	r3, [r0, #0]
 800ef88:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 800ef8a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 800ef8e:	47b8      	blx	r7
 800ef90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800ef92:	6058      	str	r0, [r3, #4]
 800ef94:	2800      	cmp	r0, #0
 800ef96:	f000 83a1 	beq.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800ef9a:	682b      	ldr	r3, [r5, #0]
 800ef9c:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 800efa0:	ed94 7a02 	vldr	s14, [r4, #8]
 800efa4:	9314      	str	r3, [sp, #80]	@ 0x50
 800efa6:	686b      	ldr	r3, [r5, #4]
 800efa8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800efac:	9315      	str	r3, [sp, #84]	@ 0x54
 800efae:	4bc1      	ldr	r3, [pc, #772]	@ (800f2b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800efb0:	7819      	ldrb	r1, [r3, #0]
 800efb2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800efb6:	2900      	cmp	r1, #0
 800efb8:	bf16      	itet	ne
 800efba:	4619      	movne	r1, r3
 800efbc:	4611      	moveq	r1, r2
 800efbe:	4613      	movne	r3, r2
 800efc0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efc4:	9116      	str	r1, [sp, #88]	@ 0x58
 800efc6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 800efca:	f240 8387 	bls.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800efce:	ed94 7a07 	vldr	s14, [r4, #28]
 800efd2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800efd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efda:	f240 837f 	bls.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800efde:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 800efe2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800efe6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800efea:	f240 8377 	bls.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800efee:	6822      	ldr	r2, [r4, #0]
 800eff0:	4bb1      	ldr	r3, [pc, #708]	@ (800f2b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800eff2:	429a      	cmp	r2, r3
 800eff4:	f2c0 8372 	blt.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800eff8:	49b0      	ldr	r1, [pc, #704]	@ (800f2bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800effa:	6963      	ldr	r3, [r4, #20]
 800effc:	428a      	cmp	r2, r1
 800effe:	f300 836d 	bgt.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f002:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f006:	48ae      	ldr	r0, [pc, #696]	@ (800f2c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800f008:	33ff      	adds	r3, #255	@ 0xff
 800f00a:	4283      	cmp	r3, r0
 800f00c:	f200 8366 	bhi.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f010:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 800f012:	4dac      	ldr	r5, [pc, #688]	@ (800f2c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800f014:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 800f018:	33ff      	adds	r3, #255	@ 0xff
 800f01a:	42ab      	cmp	r3, r5
 800f01c:	f200 835e 	bhi.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f020:	6862      	ldr	r2, [r4, #4]
 800f022:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 800f026:	33ff      	adds	r3, #255	@ 0xff
 800f028:	4283      	cmp	r3, r0
 800f02a:	f200 8357 	bhi.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f02e:	69a1      	ldr	r1, [r4, #24]
 800f030:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 800f034:	33ff      	adds	r3, #255	@ 0xff
 800f036:	4283      	cmp	r3, r0
 800f038:	f200 8350 	bhi.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f03c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 800f03e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 800f042:	30ff      	adds	r0, #255	@ 0xff
 800f044:	42a8      	cmp	r0, r5
 800f046:	f200 8349 	bhi.w	800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f04a:	428a      	cmp	r2, r1
 800f04c:	f280 8110 	bge.w	800f270 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800f050:	429a      	cmp	r2, r3
 800f052:	f300 8119 	bgt.w	800f288 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800f056:	4299      	cmp	r1, r3
 800f058:	f280 811d 	bge.w	800f296 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800f05c:	2502      	movs	r5, #2
 800f05e:	2701      	movs	r7, #1
 800f060:	46a9      	mov	r9, r5
 800f062:	46b8      	mov	r8, r7
 800f064:	f04f 0a00 	mov.w	sl, #0
 800f068:	4621      	mov	r1, r4
 800f06a:	a849      	add	r0, sp, #292	@ 0x124
 800f06c:	f003 f834 	bl	80120d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800f070:	4622      	mov	r2, r4
 800f072:	4653      	mov	r3, sl
 800f074:	a949      	add	r1, sp, #292	@ 0x124
 800f076:	f8cd 9000 	str.w	r9, [sp]
 800f07a:	a819      	add	r0, sp, #100	@ 0x64
 800f07c:	f003 f95c 	bl	8012338 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f080:	4622      	mov	r2, r4
 800f082:	4653      	mov	r3, sl
 800f084:	a949      	add	r1, sp, #292	@ 0x124
 800f086:	f8cd 8000 	str.w	r8, [sp]
 800f08a:	a829      	add	r0, sp, #164	@ 0xa4
 800f08c:	f003 f954 	bl	8012338 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f090:	4643      	mov	r3, r8
 800f092:	4622      	mov	r2, r4
 800f094:	a949      	add	r1, sp, #292	@ 0x124
 800f096:	f8cd 9000 	str.w	r9, [sp]
 800f09a:	a839      	add	r0, sp, #228	@ 0xe4
 800f09c:	f003 f94c 	bl	8012338 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800f0a0:	42af      	cmp	r7, r5
 800f0a2:	af12      	add	r7, sp, #72	@ 0x48
 800f0a4:	bfb7      	itett	lt
 800f0a6:	2300      	movlt	r3, #0
 800f0a8:	2301      	movge	r3, #1
 800f0aa:	ad29      	addlt	r5, sp, #164	@ 0xa4
 800f0ac:	ac19      	addlt	r4, sp, #100	@ 0x64
 800f0ae:	bfb1      	iteee	lt
 800f0b0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 800f0b2:	ad19      	addge	r5, sp, #100	@ 0x64
 800f0b4:	930e      	strge	r3, [sp, #56]	@ 0x38
 800f0b6:	ac29      	addge	r4, sp, #164	@ 0xa4
 800f0b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f0ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 800f0be:	e887 0003 	stmia.w	r7, {r0, r1}
 800f0c2:	b928      	cbnz	r0, 800f0d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800f0c4:	4b80      	ldr	r3, [pc, #512]	@ (800f2c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800f0c6:	6818      	ldr	r0, [r3, #0]
 800f0c8:	6803      	ldr	r3, [r0, #0]
 800f0ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800f0cc:	4798      	blx	r3
 800f0ce:	6038      	str	r0, [r7, #0]
 800f0d0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f0d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f0d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f0da:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 800f0dc:	930c      	str	r3, [sp, #48]	@ 0x30
 800f0de:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f0e0:	6963      	ldr	r3, [r4, #20]
 800f0e2:	440b      	add	r3, r1
 800f0e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f0e8:	4408      	add	r0, r1
 800f0ea:	b200      	sxth	r0, r0
 800f0ec:	4283      	cmp	r3, r0
 800f0ee:	900d      	str	r0, [sp, #52]	@ 0x34
 800f0f0:	f280 80dd 	bge.w	800f2ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800f0f4:	428b      	cmp	r3, r1
 800f0f6:	da08      	bge.n	800f10a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f0f8:	2a00      	cmp	r2, #0
 800f0fa:	dd06      	ble.n	800f10a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f0fc:	1acb      	subs	r3, r1, r3
 800f0fe:	429a      	cmp	r2, r3
 800f100:	f2c0 80e4 	blt.w	800f2cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800f104:	2b00      	cmp	r3, #0
 800f106:	f300 80e2 	bgt.w	800f2ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800f10a:	6967      	ldr	r7, [r4, #20]
 800f10c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f110:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f112:	443b      	add	r3, r7
 800f114:	461f      	mov	r7, r3
 800f116:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f118:	1bdf      	subs	r7, r3, r7
 800f11a:	4297      	cmp	r7, r2
 800f11c:	bfa8      	it	ge
 800f11e:	4617      	movge	r7, r2
 800f120:	2f00      	cmp	r7, #0
 800f122:	f340 8166 	ble.w	800f3f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800f126:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f128:	6829      	ldr	r1, [r5, #0]
 800f12a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f12e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f132:	4411      	add	r1, r2
 800f134:	6820      	ldr	r0, [r4, #0]
 800f136:	4299      	cmp	r1, r3
 800f138:	dd1a      	ble.n	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f13a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f13e:	4402      	add	r2, r0
 800f140:	440b      	add	r3, r1
 800f142:	b21b      	sxth	r3, r3
 800f144:	429a      	cmp	r2, r3
 800f146:	dc13      	bgt.n	800f170 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800f148:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f14a:	a912      	add	r1, sp, #72	@ 0x48
 800f14c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f14e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f150:	681b      	ldr	r3, [r3, #0]
 800f152:	9206      	str	r2, [sp, #24]
 800f154:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f156:	9500      	str	r5, [sp, #0]
 800f158:	9205      	str	r2, [sp, #20]
 800f15a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f15c:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f160:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f162:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f166:	aa49      	add	r2, sp, #292	@ 0x124
 800f168:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f16c:	4623      	mov	r3, r4
 800f16e:	47c8      	blx	r9
 800f170:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f174:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f178:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f17c:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f180:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f184:	68a1      	ldr	r1, [r4, #8]
 800f186:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f18a:	ed94 6a08 	vldr	s12, [r4, #32]
 800f18e:	edd4 6a07 	vldr	s13, [r4, #28]
 800f192:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f196:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f19a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f19e:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f1a2:	edc4 6a07 	vstr	s13, [r4, #28]
 800f1a6:	441a      	add	r2, r3
 800f1a8:	6963      	ldr	r3, [r4, #20]
 800f1aa:	3301      	adds	r3, #1
 800f1ac:	6022      	str	r2, [r4, #0]
 800f1ae:	6163      	str	r3, [r4, #20]
 800f1b0:	69a3      	ldr	r3, [r4, #24]
 800f1b2:	3b01      	subs	r3, #1
 800f1b4:	61a3      	str	r3, [r4, #24]
 800f1b6:	6923      	ldr	r3, [r4, #16]
 800f1b8:	440b      	add	r3, r1
 800f1ba:	68e1      	ldr	r1, [r4, #12]
 800f1bc:	428b      	cmp	r3, r1
 800f1be:	6123      	str	r3, [r4, #16]
 800f1c0:	db15      	blt.n	800f1ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800f1c2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f1c6:	3201      	adds	r2, #1
 800f1c8:	1a5b      	subs	r3, r3, r1
 800f1ca:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f1ce:	6022      	str	r2, [r4, #0]
 800f1d0:	6123      	str	r3, [r4, #16]
 800f1d2:	edc4 6a07 	vstr	s13, [r4, #28]
 800f1d6:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f1da:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f1de:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f1e2:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f1e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f1ea:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f1ee:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f1f2:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f1f6:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f1fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f1fe:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f202:	68a9      	ldr	r1, [r5, #8]
 800f204:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f208:	ed95 6a08 	vldr	s12, [r5, #32]
 800f20c:	edd5 6a07 	vldr	s13, [r5, #28]
 800f210:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f214:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f218:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f21c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f220:	edc5 6a07 	vstr	s13, [r5, #28]
 800f224:	441a      	add	r2, r3
 800f226:	696b      	ldr	r3, [r5, #20]
 800f228:	3301      	adds	r3, #1
 800f22a:	602a      	str	r2, [r5, #0]
 800f22c:	616b      	str	r3, [r5, #20]
 800f22e:	69ab      	ldr	r3, [r5, #24]
 800f230:	3b01      	subs	r3, #1
 800f232:	61ab      	str	r3, [r5, #24]
 800f234:	692b      	ldr	r3, [r5, #16]
 800f236:	440b      	add	r3, r1
 800f238:	68e9      	ldr	r1, [r5, #12]
 800f23a:	428b      	cmp	r3, r1
 800f23c:	612b      	str	r3, [r5, #16]
 800f23e:	db15      	blt.n	800f26c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800f240:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f244:	3201      	adds	r2, #1
 800f246:	1a5b      	subs	r3, r3, r1
 800f248:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f24c:	602a      	str	r2, [r5, #0]
 800f24e:	612b      	str	r3, [r5, #16]
 800f250:	edc5 6a07 	vstr	s13, [r5, #28]
 800f254:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f258:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f25c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f260:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f264:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f268:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f26c:	3f01      	subs	r7, #1
 800f26e:	e757      	b.n	800f120 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800f270:	4299      	cmp	r1, r3
 800f272:	dc13      	bgt.n	800f29c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800f274:	429a      	cmp	r2, r3
 800f276:	da14      	bge.n	800f2a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800f278:	2502      	movs	r5, #2
 800f27a:	2703      	movs	r7, #3
 800f27c:	f04f 0800 	mov.w	r8, #0
 800f280:	46a9      	mov	r9, r5
 800f282:	f04f 0a01 	mov.w	sl, #1
 800f286:	e6ef      	b.n	800f068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f288:	2501      	movs	r5, #1
 800f28a:	2700      	movs	r7, #0
 800f28c:	46a9      	mov	r9, r5
 800f28e:	46b8      	mov	r8, r7
 800f290:	f04f 0a02 	mov.w	sl, #2
 800f294:	e6e8      	b.n	800f068 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800f296:	2501      	movs	r5, #1
 800f298:	2702      	movs	r7, #2
 800f29a:	e6e1      	b.n	800f060 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800f29c:	2500      	movs	r5, #0
 800f29e:	2701      	movs	r7, #1
 800f2a0:	e7f4      	b.n	800f28c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800f2a2:	2702      	movs	r7, #2
 800f2a4:	2503      	movs	r5, #3
 800f2a6:	f04f 0900 	mov.w	r9, #0
 800f2aa:	46b8      	mov	r8, r7
 800f2ac:	e7e9      	b.n	800f282 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800f2ae:	4613      	mov	r3, r2
 800f2b0:	e728      	b.n	800f104 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800f2b2:	bf00      	nop
 800f2b4:	20001b64 	.word	0x20001b64
 800f2b8:	fffd8f01 	.word	0xfffd8f01
 800f2bc:	00027100 	.word	0x00027100
 800f2c0:	0004e1ff 	.word	0x0004e1ff
 800f2c4:	0004e1fe 	.word	0x0004e1fe
 800f2c8:	20001b6c 	.word	0x20001b6c
 800f2cc:	4613      	mov	r3, r2
 800f2ce:	992b      	ldr	r1, [sp, #172]	@ 0xac
 800f2d0:	469e      	mov	lr, r3
 800f2d2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 800f2d4:	469c      	mov	ip, r3
 800f2d6:	9111      	str	r1, [sp, #68]	@ 0x44
 800f2d8:	f04f 0900 	mov.w	r9, #0
 800f2dc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 800f2e0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 800f2e4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 800f2e8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 800f2ec:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 800f2f0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 800f2f4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 800f2f8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 800f2fc:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 800f300:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 800f304:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 800f308:	f1bc 0f00 	cmp.w	ip, #0
 800f30c:	d147      	bne.n	800f39e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800f30e:	eb03 0c07 	add.w	ip, r3, r7
 800f312:	1ad7      	subs	r7, r2, r3
 800f314:	f1b9 0f00 	cmp.w	r9, #0
 800f318:	d009      	beq.n	800f32e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800f31a:	9029      	str	r0, [sp, #164]	@ 0xa4
 800f31c:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 800f320:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 800f324:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 800f328:	912d      	str	r1, [sp, #180]	@ 0xb4
 800f32a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 800f32e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f330:	f04f 0800 	mov.w	r8, #0
 800f334:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f338:	9111      	str	r1, [sp, #68]	@ 0x44
 800f33a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f33e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f342:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f346:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f34a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f34e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f352:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f356:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f35a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f35e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f362:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f366:	f1be 0f00 	cmp.w	lr, #0
 800f36a:	d031      	beq.n	800f3d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800f36c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f36e:	4450      	add	r0, sl
 800f370:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f374:	4431      	add	r1, r6
 800f376:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f37a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f37e:	4549      	cmp	r1, r9
 800f380:	db08      	blt.n	800f394 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800f382:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f386:	3001      	adds	r0, #1
 800f388:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f38c:	eba1 0109 	sub.w	r1, r1, r9
 800f390:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f394:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f398:	f04f 0801 	mov.w	r8, #1
 800f39c:	e7e3      	b.n	800f366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800f39e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 800f3a0:	4450      	add	r0, sl
 800f3a2:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f3a6:	4431      	add	r1, r6
 800f3a8:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f3ac:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f3b0:	4541      	cmp	r1, r8
 800f3b2:	db08      	blt.n	800f3c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800f3b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f3b8:	3001      	adds	r0, #1
 800f3ba:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f3be:	eba1 0108 	sub.w	r1, r1, r8
 800f3c2:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f3c6:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f3ca:	f04f 0901 	mov.w	r9, #1
 800f3ce:	e79b      	b.n	800f308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800f3d0:	449c      	add	ip, r3
 800f3d2:	1aff      	subs	r7, r7, r3
 800f3d4:	f1b8 0f00 	cmp.w	r8, #0
 800f3d8:	d009      	beq.n	800f3ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800f3da:	9019      	str	r0, [sp, #100]	@ 0x64
 800f3dc:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f3e0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f3e4:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f3e8:	911d      	str	r1, [sp, #116]	@ 0x74
 800f3ea:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f3ee:	1ad2      	subs	r2, r2, r3
 800f3f0:	e68b      	b.n	800f10a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800f3f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800f3f4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 800f3f6:	2b00      	cmp	r3, #0
 800f3f8:	f000 80d1 	beq.w	800f59e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800f3fc:	ad19      	add	r5, sp, #100	@ 0x64
 800f3fe:	ac39      	add	r4, sp, #228	@ 0xe4
 800f400:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f402:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800f406:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800f40a:	930c      	str	r3, [sp, #48]	@ 0x30
 800f40c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800f40e:	6963      	ldr	r3, [r4, #20]
 800f410:	440b      	add	r3, r1
 800f412:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800f416:	4408      	add	r0, r1
 800f418:	b200      	sxth	r0, r0
 800f41a:	4283      	cmp	r3, r0
 800f41c:	900d      	str	r0, [sp, #52]	@ 0x34
 800f41e:	f280 80c1 	bge.w	800f5a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800f422:	428b      	cmp	r3, r1
 800f424:	da08      	bge.n	800f438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f426:	2a00      	cmp	r2, #0
 800f428:	dd06      	ble.n	800f438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f42a:	1acb      	subs	r3, r1, r3
 800f42c:	429a      	cmp	r2, r3
 800f42e:	f2c0 80bb 	blt.w	800f5a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800f432:	2b00      	cmp	r3, #0
 800f434:	f300 80b9 	bgt.w	800f5aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800f438:	6967      	ldr	r7, [r4, #20]
 800f43a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 800f43e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800f440:	443b      	add	r3, r7
 800f442:	461f      	mov	r7, r3
 800f444:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800f446:	1bdf      	subs	r7, r3, r7
 800f448:	4297      	cmp	r7, r2
 800f44a:	bfa8      	it	ge
 800f44c:	4617      	movge	r7, r2
 800f44e:	2f00      	cmp	r7, #0
 800f450:	f340 813c 	ble.w	800f6cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800f454:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 800f456:	6829      	ldr	r1, [r5, #0]
 800f458:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f45c:	f9bb 3000 	ldrsh.w	r3, [fp]
 800f460:	4411      	add	r1, r2
 800f462:	6820      	ldr	r0, [r4, #0]
 800f464:	4299      	cmp	r1, r3
 800f466:	dd1a      	ble.n	800f49e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f468:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800f46c:	4402      	add	r2, r0
 800f46e:	440b      	add	r3, r1
 800f470:	b21b      	sxth	r3, r3
 800f472:	429a      	cmp	r2, r3
 800f474:	dc13      	bgt.n	800f49e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800f476:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800f478:	a912      	add	r1, sp, #72	@ 0x48
 800f47a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800f47c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800f47e:	681b      	ldr	r3, [r3, #0]
 800f480:	9206      	str	r2, [sp, #24]
 800f482:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 800f484:	9500      	str	r5, [sp, #0]
 800f486:	9205      	str	r2, [sp, #20]
 800f488:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800f48a:	e9cd b203 	strd	fp, r2, [sp, #12]
 800f48e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 800f490:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800f494:	aa49      	add	r2, sp, #292	@ 0x124
 800f496:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 800f49a:	4623      	mov	r3, r4
 800f49c:	47c8      	blx	r9
 800f49e:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 800f4a2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 800f4a6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 800f4aa:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f4ae:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 800f4b2:	68a1      	ldr	r1, [r4, #8]
 800f4b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f4b8:	ed94 6a08 	vldr	s12, [r4, #32]
 800f4bc:	edd4 6a07 	vldr	s13, [r4, #28]
 800f4c0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f4c4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f4c8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f4cc:	e9d4 2300 	ldrd	r2, r3, [r4]
 800f4d0:	edc4 6a07 	vstr	s13, [r4, #28]
 800f4d4:	441a      	add	r2, r3
 800f4d6:	6963      	ldr	r3, [r4, #20]
 800f4d8:	3301      	adds	r3, #1
 800f4da:	6022      	str	r2, [r4, #0]
 800f4dc:	6163      	str	r3, [r4, #20]
 800f4de:	69a3      	ldr	r3, [r4, #24]
 800f4e0:	3b01      	subs	r3, #1
 800f4e2:	61a3      	str	r3, [r4, #24]
 800f4e4:	6923      	ldr	r3, [r4, #16]
 800f4e6:	440b      	add	r3, r1
 800f4e8:	68e1      	ldr	r1, [r4, #12]
 800f4ea:	428b      	cmp	r3, r1
 800f4ec:	6123      	str	r3, [r4, #16]
 800f4ee:	db15      	blt.n	800f51c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800f4f0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 800f4f4:	3201      	adds	r2, #1
 800f4f6:	1a5b      	subs	r3, r3, r1
 800f4f8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f4fc:	6022      	str	r2, [r4, #0]
 800f4fe:	6123      	str	r3, [r4, #16]
 800f500:	edc4 6a07 	vstr	s13, [r4, #28]
 800f504:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 800f508:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f50c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 800f510:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 800f514:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f518:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 800f51c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 800f520:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 800f524:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 800f528:	ee37 7a27 	vadd.f32	s14, s14, s15
 800f52c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 800f530:	68a9      	ldr	r1, [r5, #8]
 800f532:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f536:	ed95 6a08 	vldr	s12, [r5, #32]
 800f53a:	edd5 6a07 	vldr	s13, [r5, #28]
 800f53e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f542:	ee76 6a86 	vadd.f32	s13, s13, s12
 800f546:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f54a:	e9d5 2300 	ldrd	r2, r3, [r5]
 800f54e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f552:	441a      	add	r2, r3
 800f554:	696b      	ldr	r3, [r5, #20]
 800f556:	3301      	adds	r3, #1
 800f558:	602a      	str	r2, [r5, #0]
 800f55a:	616b      	str	r3, [r5, #20]
 800f55c:	69ab      	ldr	r3, [r5, #24]
 800f55e:	3b01      	subs	r3, #1
 800f560:	61ab      	str	r3, [r5, #24]
 800f562:	692b      	ldr	r3, [r5, #16]
 800f564:	440b      	add	r3, r1
 800f566:	68e9      	ldr	r1, [r5, #12]
 800f568:	428b      	cmp	r3, r1
 800f56a:	612b      	str	r3, [r5, #16]
 800f56c:	db15      	blt.n	800f59a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800f56e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 800f572:	3201      	adds	r2, #1
 800f574:	1a5b      	subs	r3, r3, r1
 800f576:	ee76 6a26 	vadd.f32	s13, s12, s13
 800f57a:	602a      	str	r2, [r5, #0]
 800f57c:	612b      	str	r3, [r5, #16]
 800f57e:	edc5 6a07 	vstr	s13, [r5, #28]
 800f582:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 800f586:	ee36 7a87 	vadd.f32	s14, s13, s14
 800f58a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 800f58e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 800f592:	ee77 7a27 	vadd.f32	s15, s14, s15
 800f596:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 800f59a:	3f01      	subs	r7, #1
 800f59c:	e757      	b.n	800f44e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800f59e:	ad39      	add	r5, sp, #228	@ 0xe4
 800f5a0:	ac19      	add	r4, sp, #100	@ 0x64
 800f5a2:	e72d      	b.n	800f400 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800f5a4:	4613      	mov	r3, r2
 800f5a6:	e744      	b.n	800f432 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800f5a8:	4613      	mov	r3, r2
 800f5aa:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 800f5ac:	469e      	mov	lr, r3
 800f5ae:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 800f5b2:	461f      	mov	r7, r3
 800f5b4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 800f5b8:	f04f 0900 	mov.w	r9, #0
 800f5bc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 800f5c0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 800f5c4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 800f5c8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 800f5cc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 800f5d0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 800f5d2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 800f5d6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 800f5da:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 800f5de:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 800f5e2:	960e      	str	r6, [sp, #56]	@ 0x38
 800f5e4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 800f5e8:	2f00      	cmp	r7, #0
 800f5ea:	d146      	bne.n	800f67a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800f5ec:	449c      	add	ip, r3
 800f5ee:	1ad7      	subs	r7, r2, r3
 800f5f0:	f1b9 0f00 	cmp.w	r9, #0
 800f5f4:	d009      	beq.n	800f60a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800f5f6:	9039      	str	r0, [sp, #228]	@ 0xe4
 800f5f8:	913d      	str	r1, [sp, #244]	@ 0xf4
 800f5fa:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 800f5fe:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 800f602:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 800f606:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 800f60a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 800f60c:	f04f 0800 	mov.w	r8, #0
 800f610:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 800f614:	910e      	str	r1, [sp, #56]	@ 0x38
 800f616:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 800f61a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 800f61e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 800f622:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 800f626:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 800f62a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 800f62e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 800f632:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 800f636:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 800f63a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 800f63e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 800f642:	f1be 0f00 	cmp.w	lr, #0
 800f646:	d030      	beq.n	800f6aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800f648:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f64a:	4450      	add	r0, sl
 800f64c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800f650:	4431      	add	r1, r6
 800f652:	ee37 7a04 	vadd.f32	s14, s14, s8
 800f656:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800f65a:	4549      	cmp	r1, r9
 800f65c:	db08      	blt.n	800f670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800f65e:	ee77 7a85 	vadd.f32	s15, s15, s10
 800f662:	3001      	adds	r0, #1
 800f664:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800f668:	eba1 0109 	sub.w	r1, r1, r9
 800f66c:	ee37 7a06 	vadd.f32	s14, s14, s12
 800f670:	f10e 3eff 	add.w	lr, lr, #4294967295
 800f674:	f04f 0801 	mov.w	r8, #1
 800f678:	e7e3      	b.n	800f642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800f67a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 800f67c:	4450      	add	r0, sl
 800f67e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800f682:	4431      	add	r1, r6
 800f684:	ee77 7a84 	vadd.f32	s15, s15, s8
 800f688:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800f68c:	4541      	cmp	r1, r8
 800f68e:	db08      	blt.n	800f6a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800f690:	ee76 6a85 	vadd.f32	s13, s13, s10
 800f694:	3001      	adds	r0, #1
 800f696:	ee37 7a25 	vadd.f32	s14, s14, s11
 800f69a:	eba1 0108 	sub.w	r1, r1, r8
 800f69e:	ee77 7a86 	vadd.f32	s15, s15, s12
 800f6a2:	3f01      	subs	r7, #1
 800f6a4:	f04f 0901 	mov.w	r9, #1
 800f6a8:	e79e      	b.n	800f5e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800f6aa:	449c      	add	ip, r3
 800f6ac:	1aff      	subs	r7, r7, r3
 800f6ae:	f1b8 0f00 	cmp.w	r8, #0
 800f6b2:	d009      	beq.n	800f6c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800f6b4:	9019      	str	r0, [sp, #100]	@ 0x64
 800f6b6:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 800f6ba:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 800f6be:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 800f6c2:	911d      	str	r1, [sp, #116]	@ 0x74
 800f6c4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 800f6c8:	1ad2      	subs	r2, r2, r3
 800f6ca:	e6b5      	b.n	800f438 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800f6cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800f6ce:	681b      	ldr	r3, [r3, #0]
 800f6d0:	b923      	cbnz	r3, 800f6dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f6d2:	4b04      	ldr	r3, [pc, #16]	@ (800f6e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800f6d4:	6818      	ldr	r0, [r3, #0]
 800f6d6:	6803      	ldr	r3, [r0, #0]
 800f6d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800f6da:	4798      	blx	r3
 800f6dc:	b05b      	add	sp, #364	@ 0x16c
 800f6de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f6e2:	bf00      	nop
 800f6e4:	20001b6c 	.word	0x20001b6c

0800f6e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800f6e8:	2b03      	cmp	r3, #3
 800f6ea:	d818      	bhi.n	800f71e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 800f6ec:	e8df f003 	tbb	[pc, r3]
 800f6f0:	130d0602 	.word	0x130d0602
 800f6f4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f6f8:	1850      	adds	r0, r2, r1
 800f6fa:	4770      	bx	lr
 800f6fc:	8803      	ldrh	r3, [r0, #0]
 800f6fe:	8880      	ldrh	r0, [r0, #4]
 800f700:	4418      	add	r0, r3
 800f702:	b200      	sxth	r0, r0
 800f704:	1a80      	subs	r0, r0, r2
 800f706:	3801      	subs	r0, #1
 800f708:	4770      	bx	lr
 800f70a:	8803      	ldrh	r3, [r0, #0]
 800f70c:	8880      	ldrh	r0, [r0, #4]
 800f70e:	4418      	add	r0, r3
 800f710:	b200      	sxth	r0, r0
 800f712:	1a40      	subs	r0, r0, r1
 800f714:	e7f7      	b.n	800f706 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800f716:	f9b0 0000 	ldrsh.w	r0, [r0]
 800f71a:	4410      	add	r0, r2
 800f71c:	4770      	bx	lr
 800f71e:	2000      	movs	r0, #0
 800f720:	4770      	bx	lr

0800f722 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800f722:	2b03      	cmp	r3, #3
 800f724:	d817      	bhi.n	800f756 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 800f726:	e8df f003 	tbb	[pc, r3]
 800f72a:	0602      	.short	0x0602
 800f72c:	1009      	.short	0x1009
 800f72e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800f732:	1850      	adds	r0, r2, r1
 800f734:	4770      	bx	lr
 800f736:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800f73a:	e7fa      	b.n	800f732 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 800f73c:	8843      	ldrh	r3, [r0, #2]
 800f73e:	88c0      	ldrh	r0, [r0, #6]
 800f740:	4418      	add	r0, r3
 800f742:	b200      	sxth	r0, r0
 800f744:	1a80      	subs	r0, r0, r2
 800f746:	3801      	subs	r0, #1
 800f748:	4770      	bx	lr
 800f74a:	8843      	ldrh	r3, [r0, #2]
 800f74c:	88c0      	ldrh	r0, [r0, #6]
 800f74e:	4418      	add	r0, r3
 800f750:	b200      	sxth	r0, r0
 800f752:	1a40      	subs	r0, r0, r1
 800f754:	e7f7      	b.n	800f746 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800f756:	2000      	movs	r0, #0
 800f758:	4770      	bx	lr
	...

0800f75c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800f75c:	4b01      	ldr	r3, [pc, #4]	@ (800f764 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800f75e:	2200      	movs	r2, #0
 800f760:	601a      	str	r2, [r3, #0]
 800f762:	4770      	bx	lr
 800f764:	20001b74 	.word	0x20001b74

0800f768 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800f768:	4603      	mov	r3, r0
 800f76a:	b1c8      	cbz	r0, 800f7a0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800f76c:	0c02      	lsrs	r2, r0, #16
 800f76e:	0412      	lsls	r2, r2, #16
 800f770:	b9a2      	cbnz	r2, 800f79c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800f772:	0403      	lsls	r3, r0, #16
 800f774:	2010      	movs	r0, #16
 800f776:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 800f77a:	bf04      	itt	eq
 800f77c:	021b      	lsleq	r3, r3, #8
 800f77e:	3008      	addeq	r0, #8
 800f780:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 800f784:	bf04      	itt	eq
 800f786:	011b      	lsleq	r3, r3, #4
 800f788:	3004      	addeq	r0, #4
 800f78a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 800f78e:	bf04      	itt	eq
 800f790:	009b      	lsleq	r3, r3, #2
 800f792:	3002      	addeq	r0, #2
 800f794:	2b00      	cmp	r3, #0
 800f796:	db04      	blt.n	800f7a2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800f798:	3001      	adds	r0, #1
 800f79a:	4770      	bx	lr
 800f79c:	2000      	movs	r0, #0
 800f79e:	e7ea      	b.n	800f776 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800f7a0:	2020      	movs	r0, #32
 800f7a2:	4770      	bx	lr

0800f7a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800f7a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f7a8:	b087      	sub	sp, #28
 800f7aa:	460d      	mov	r5, r1
 800f7ac:	4616      	mov	r6, r2
 800f7ae:	4698      	mov	r8, r3
 800f7b0:	4601      	mov	r1, r0
 800f7b2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 800f7b6:	b120      	cbz	r0, 800f7c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f7b8:	b11a      	cbz	r2, 800f7c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f7ba:	2d1f      	cmp	r5, #31
 800f7bc:	d801      	bhi.n	800f7c2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 800f7be:	2b1f      	cmp	r3, #31
 800f7c0:	d904      	bls.n	800f7cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 800f7c2:	2000      	movs	r0, #0
 800f7c4:	6038      	str	r0, [r7, #0]
 800f7c6:	b007      	add	sp, #28
 800f7c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7cc:	b97d      	cbnz	r5, 800f7ee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 800f7ce:	b143      	cbz	r3, 800f7e2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 800f7d0:	4602      	mov	r2, r0
 800f7d2:	462b      	mov	r3, r5
 800f7d4:	4641      	mov	r1, r8
 800f7d6:	4630      	mov	r0, r6
 800f7d8:	e9cd 4700 	strd	r4, r7, [sp]
 800f7dc:	f7ff ffe2 	bl	800f7a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f7e0:	e7f1      	b.n	800f7c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f7e2:	f04f 33ff 	mov.w	r3, #4294967295
 800f7e6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 800f7ea:	603b      	str	r3, [r7, #0]
 800f7ec:	e7eb      	b.n	800f7c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f7ee:	fa32 fa05 	lsrs.w	sl, r2, r5
 800f7f2:	d106      	bne.n	800f802 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 800f7f4:	4346      	muls	r6, r0
 800f7f6:	fbb6 f0f4 	udiv	r0, r6, r4
 800f7fa:	fb04 6610 	mls	r6, r4, r0, r6
 800f7fe:	603e      	str	r6, [r7, #0]
 800f800:	e7e1      	b.n	800f7c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 800f802:	2201      	movs	r2, #1
 800f804:	fa00 fb05 	lsl.w	fp, r0, r5
 800f808:	40aa      	lsls	r2, r5
 800f80a:	fbbb f9f4 	udiv	r9, fp, r4
 800f80e:	3a01      	subs	r2, #1
 800f810:	fb0a f309 	mul.w	r3, sl, r9
 800f814:	fb04 b919 	mls	r9, r4, r9, fp
 800f818:	4016      	ands	r6, r2
 800f81a:	9303      	str	r3, [sp, #12]
 800f81c:	4630      	mov	r0, r6
 800f81e:	f7ff ffa3 	bl	800f768 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f822:	462b      	mov	r3, r5
 800f824:	460a      	mov	r2, r1
 800f826:	4601      	mov	r1, r0
 800f828:	4630      	mov	r0, r6
 800f82a:	e9cd 4700 	strd	r4, r7, [sp]
 800f82e:	f7ff ffb9 	bl	800f7a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f832:	4606      	mov	r6, r0
 800f834:	4648      	mov	r0, r9
 800f836:	eb05 0108 	add.w	r1, r5, r8
 800f83a:	f7ff ff95 	bl	800f768 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f83e:	ab05      	add	r3, sp, #20
 800f840:	464a      	mov	r2, r9
 800f842:	e9cd 4300 	strd	r4, r3, [sp]
 800f846:	4603      	mov	r3, r0
 800f848:	4650      	mov	r0, sl
 800f84a:	f7ff ffab 	bl	800f7a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f84e:	6839      	ldr	r1, [r7, #0]
 800f850:	9a05      	ldr	r2, [sp, #20]
 800f852:	9b03      	ldr	r3, [sp, #12]
 800f854:	4411      	add	r1, r2
 800f856:	fbb1 f2f4 	udiv	r2, r1, r4
 800f85a:	18d3      	adds	r3, r2, r3
 800f85c:	fb04 1412 	mls	r4, r4, r2, r1
 800f860:	441e      	add	r6, r3
 800f862:	603c      	str	r4, [r7, #0]
 800f864:	4430      	add	r0, r6
 800f866:	e7ae      	b.n	800f7c6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

0800f868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800f868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f86c:	b085      	sub	sp, #20
 800f86e:	f1b0 0900 	subs.w	r9, r0, #0
 800f872:	461d      	mov	r5, r3
 800f874:	4617      	mov	r7, r2
 800f876:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 800f878:	bfbb      	ittet	lt
 800f87a:	f1c9 0900 	rsblt	r9, r9, #0
 800f87e:	f04f 36ff 	movlt.w	r6, #4294967295
 800f882:	2601      	movge	r6, #1
 800f884:	6823      	ldrlt	r3, [r4, #0]
 800f886:	bfbc      	itt	lt
 800f888:	425b      	neglt	r3, r3
 800f88a:	6023      	strlt	r3, [r4, #0]
 800f88c:	2a00      	cmp	r2, #0
 800f88e:	da04      	bge.n	800f89a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800f890:	6823      	ldr	r3, [r4, #0]
 800f892:	4257      	negs	r7, r2
 800f894:	4276      	negs	r6, r6
 800f896:	425b      	negs	r3, r3
 800f898:	6023      	str	r3, [r4, #0]
 800f89a:	2d00      	cmp	r5, #0
 800f89c:	4638      	mov	r0, r7
 800f89e:	bfba      	itte	lt
 800f8a0:	426d      	neglt	r5, r5
 800f8a2:	f04f 38ff 	movlt.w	r8, #4294967295
 800f8a6:	f04f 0801 	movge.w	r8, #1
 800f8aa:	f7ff ff5d 	bl	800f768 <_ZN8touchgfx16TouchCalibration4clzuEm>
 800f8ae:	ab03      	add	r3, sp, #12
 800f8b0:	463a      	mov	r2, r7
 800f8b2:	e9cd 5300 	strd	r5, r3, [sp]
 800f8b6:	4603      	mov	r3, r0
 800f8b8:	4648      	mov	r0, r9
 800f8ba:	f7ff ff73 	bl	800f7a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800f8be:	6823      	ldr	r3, [r4, #0]
 800f8c0:	9a03      	ldr	r2, [sp, #12]
 800f8c2:	4546      	cmp	r6, r8
 800f8c4:	441a      	add	r2, r3
 800f8c6:	fb92 f3f5 	sdiv	r3, r2, r5
 800f8ca:	4418      	add	r0, r3
 800f8cc:	fb05 2313 	mls	r3, r5, r3, r2
 800f8d0:	bf18      	it	ne
 800f8d2:	4240      	negne	r0, r0
 800f8d4:	1c72      	adds	r2, r6, #1
 800f8d6:	6023      	str	r3, [r4, #0]
 800f8d8:	d105      	bne.n	800f8e6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800f8da:	2b00      	cmp	r3, #0
 800f8dc:	f1c3 0200 	rsb	r2, r3, #0
 800f8e0:	db0b      	blt.n	800f8fa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800f8e2:	6022      	str	r2, [r4, #0]
 800f8e4:	e006      	b.n	800f8f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f8e6:	2e01      	cmp	r6, #1
 800f8e8:	d104      	bne.n	800f8f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f8ea:	2b00      	cmp	r3, #0
 800f8ec:	da02      	bge.n	800f8f4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800f8ee:	442b      	add	r3, r5
 800f8f0:	3801      	subs	r0, #1
 800f8f2:	6023      	str	r3, [r4, #0]
 800f8f4:	b005      	add	sp, #20
 800f8f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f8fa:	3801      	subs	r0, #1
 800f8fc:	1b52      	subs	r2, r2, r5
 800f8fe:	e7f0      	b.n	800f8e2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

0800f900 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800f900:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800f904:	4c1c      	ldr	r4, [pc, #112]	@ (800f978 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800f906:	4605      	mov	r5, r0
 800f908:	6807      	ldr	r7, [r0, #0]
 800f90a:	69a3      	ldr	r3, [r4, #24]
 800f90c:	b92b      	cbnz	r3, 800f91a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800f90e:	6840      	ldr	r0, [r0, #4]
 800f910:	e9c5 7000 	strd	r7, r0, [r5]
 800f914:	b004      	add	sp, #16
 800f916:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f91a:	f04f 0802 	mov.w	r8, #2
 800f91e:	68a2      	ldr	r2, [r4, #8]
 800f920:	ae04      	add	r6, sp, #16
 800f922:	6820      	ldr	r0, [r4, #0]
 800f924:	fb93 f1f8 	sdiv	r1, r3, r8
 800f928:	440a      	add	r2, r1
 800f92a:	69e1      	ldr	r1, [r4, #28]
 800f92c:	f846 2d04 	str.w	r2, [r6, #-4]!
 800f930:	463a      	mov	r2, r7
 800f932:	9600      	str	r6, [sp, #0]
 800f934:	f7ff ff98 	bl	800f868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f938:	69a3      	ldr	r3, [r4, #24]
 800f93a:	4607      	mov	r7, r0
 800f93c:	686a      	ldr	r2, [r5, #4]
 800f93e:	6a21      	ldr	r1, [r4, #32]
 800f940:	9600      	str	r6, [sp, #0]
 800f942:	6860      	ldr	r0, [r4, #4]
 800f944:	f7ff ff90 	bl	800f868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f948:	69a3      	ldr	r3, [r4, #24]
 800f94a:	6962      	ldr	r2, [r4, #20]
 800f94c:	4407      	add	r7, r0
 800f94e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 800f950:	9600      	str	r6, [sp, #0]
 800f952:	68e0      	ldr	r0, [r4, #12]
 800f954:	fb93 f8f8 	sdiv	r8, r3, r8
 800f958:	4442      	add	r2, r8
 800f95a:	9203      	str	r2, [sp, #12]
 800f95c:	682a      	ldr	r2, [r5, #0]
 800f95e:	f7ff ff83 	bl	800f868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f962:	4680      	mov	r8, r0
 800f964:	9600      	str	r6, [sp, #0]
 800f966:	69a3      	ldr	r3, [r4, #24]
 800f968:	686a      	ldr	r2, [r5, #4]
 800f96a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 800f96c:	6920      	ldr	r0, [r4, #16]
 800f96e:	f7ff ff7b 	bl	800f868 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800f972:	4440      	add	r0, r8
 800f974:	e7cc      	b.n	800f910 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800f976:	bf00      	nop
 800f978:	20001b78 	.word	0x20001b78

0800f97c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800f97c:	4b07      	ldr	r3, [pc, #28]	@ (800f99c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 800f97e:	781b      	ldrb	r3, [r3, #0]
 800f980:	2b01      	cmp	r3, #1
 800f982:	d109      	bne.n	800f998 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 800f984:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f988:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f98c:	8003      	strh	r3, [r0, #0]
 800f98e:	4b04      	ldr	r3, [pc, #16]	@ (800f9a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800f990:	881b      	ldrh	r3, [r3, #0]
 800f992:	3b01      	subs	r3, #1
 800f994:	1a9b      	subs	r3, r3, r2
 800f996:	800b      	strh	r3, [r1, #0]
 800f998:	4770      	bx	lr
 800f99a:	bf00      	nop
 800f99c:	20001b64 	.word	0x20001b64
 800f9a0:	20001b60 	.word	0x20001b60

0800f9a4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800f9a4:	4b07      	ldr	r3, [pc, #28]	@ (800f9c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800f9a6:	b510      	push	{r4, lr}
 800f9a8:	781b      	ldrb	r3, [r3, #0]
 800f9aa:	2b01      	cmp	r3, #1
 800f9ac:	d108      	bne.n	800f9c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800f9ae:	4b06      	ldr	r3, [pc, #24]	@ (800f9c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800f9b0:	880c      	ldrh	r4, [r1, #0]
 800f9b2:	881b      	ldrh	r3, [r3, #0]
 800f9b4:	f9b0 2000 	ldrsh.w	r2, [r0]
 800f9b8:	3b01      	subs	r3, #1
 800f9ba:	1b1b      	subs	r3, r3, r4
 800f9bc:	8003      	strh	r3, [r0, #0]
 800f9be:	800a      	strh	r2, [r1, #0]
 800f9c0:	bd10      	pop	{r4, pc}
 800f9c2:	bf00      	nop
 800f9c4:	20001b64 	.word	0x20001b64
 800f9c8:	20001b60 	.word	0x20001b60

0800f9cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800f9cc:	4b0a      	ldr	r3, [pc, #40]	@ (800f9f8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800f9ce:	b510      	push	{r4, lr}
 800f9d0:	781b      	ldrb	r3, [r3, #0]
 800f9d2:	2b01      	cmp	r3, #1
 800f9d4:	d10e      	bne.n	800f9f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800f9d6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800f9da:	8843      	ldrh	r3, [r0, #2]
 800f9dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 800f9e0:	18ca      	adds	r2, r1, r3
 800f9e2:	4b06      	ldr	r3, [pc, #24]	@ (800f9fc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800f9e4:	8044      	strh	r4, [r0, #2]
 800f9e6:	881b      	ldrh	r3, [r3, #0]
 800f9e8:	1a9b      	subs	r3, r3, r2
 800f9ea:	8003      	strh	r3, [r0, #0]
 800f9ec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f9f0:	8081      	strh	r1, [r0, #4]
 800f9f2:	80c3      	strh	r3, [r0, #6]
 800f9f4:	bd10      	pop	{r4, pc}
 800f9f6:	bf00      	nop
 800f9f8:	20001b64 	.word	0x20001b64
 800f9fc:	20001b60 	.word	0x20001b60

0800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800fa00:	4b08      	ldr	r3, [pc, #32]	@ (800fa24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 800fa02:	781b      	ldrb	r3, [r3, #0]
 800fa04:	2b01      	cmp	r3, #1
 800fa06:	d10c      	bne.n	800fa22 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 800fa08:	8803      	ldrh	r3, [r0, #0]
 800fa0a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 800fa0e:	8842      	ldrh	r2, [r0, #2]
 800fa10:	8002      	strh	r2, [r0, #0]
 800fa12:	185a      	adds	r2, r3, r1
 800fa14:	4b04      	ldr	r3, [pc, #16]	@ (800fa28 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800fa16:	881b      	ldrh	r3, [r3, #0]
 800fa18:	1a9b      	subs	r3, r3, r2
 800fa1a:	8043      	strh	r3, [r0, #2]
 800fa1c:	88c3      	ldrh	r3, [r0, #6]
 800fa1e:	80c1      	strh	r1, [r0, #6]
 800fa20:	8083      	strh	r3, [r0, #4]
 800fa22:	4770      	bx	lr
 800fa24:	20001b64 	.word	0x20001b64
 800fa28:	20001b60 	.word	0x20001b60

0800fa2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800fa2c:	4b07      	ldr	r3, [pc, #28]	@ (800fa4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800fa2e:	b510      	push	{r4, lr}
 800fa30:	781b      	ldrb	r3, [r3, #0]
 800fa32:	2b01      	cmp	r3, #1
 800fa34:	d108      	bne.n	800fa48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800fa36:	f9b1 3000 	ldrsh.w	r3, [r1]
 800fa3a:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fa3e:	8003      	strh	r3, [r0, #0]
 800fa40:	8893      	ldrh	r3, [r2, #4]
 800fa42:	3b01      	subs	r3, #1
 800fa44:	1b1b      	subs	r3, r3, r4
 800fa46:	800b      	strh	r3, [r1, #0]
 800fa48:	bd10      	pop	{r4, pc}
 800fa4a:	bf00      	nop
 800fa4c:	20001b64 	.word	0x20001b64

0800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800fa50:	4b0a      	ldr	r3, [pc, #40]	@ (800fa7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800fa52:	460a      	mov	r2, r1
 800fa54:	b510      	push	{r4, lr}
 800fa56:	781b      	ldrb	r3, [r3, #0]
 800fa58:	2b01      	cmp	r3, #1
 800fa5a:	d10d      	bne.n	800fa78 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800fa5c:	8881      	ldrh	r1, [r0, #4]
 800fa5e:	8803      	ldrh	r3, [r0, #0]
 800fa60:	440b      	add	r3, r1
 800fa62:	4601      	mov	r1, r0
 800fa64:	3b01      	subs	r3, #1
 800fa66:	f821 3b02 	strh.w	r3, [r1], #2
 800fa6a:	f7ff ffdf 	bl	800fa2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800fa6e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fa72:	88c2      	ldrh	r2, [r0, #6]
 800fa74:	80c3      	strh	r3, [r0, #6]
 800fa76:	8082      	strh	r2, [r0, #4]
 800fa78:	bd10      	pop	{r4, pc}
 800fa7a:	bf00      	nop
 800fa7c:	20001b64 	.word	0x20001b64

0800fa80 <_ZN8touchgfx11Application13requestRedrawEv>:
 800fa80:	4b06      	ldr	r3, [pc, #24]	@ (800fa9c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800fa82:	2100      	movs	r1, #0
 800fa84:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fa88:	4b05      	ldr	r3, [pc, #20]	@ (800faa0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800fa8a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 800fa8e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fa92:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 800fa96:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 800fa9a:	4770      	bx	lr
 800fa9c:	20001b60 	.word	0x20001b60
 800faa0:	20001b62 	.word	0x20001b62

0800faa4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800faa4:	4b03      	ldr	r3, [pc, #12]	@ (800fab4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800faa6:	6818      	ldr	r0, [r3, #0]
 800faa8:	b110      	cbz	r0, 800fab0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800faaa:	6803      	ldr	r3, [r0, #0]
 800faac:	699b      	ldr	r3, [r3, #24]
 800faae:	4718      	bx	r3
 800fab0:	4770      	bx	lr
 800fab2:	bf00      	nop
 800fab4:	20001ba8 	.word	0x20001ba8

0800fab8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800fab8:	4770      	bx	lr
	...

0800fabc <_ZN8touchgfx11Application4drawEv>:
 800fabc:	4b09      	ldr	r3, [pc, #36]	@ (800fae4 <_ZN8touchgfx11Application4drawEv+0x28>)
 800fabe:	b507      	push	{r0, r1, r2, lr}
 800fac0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fac4:	2100      	movs	r1, #0
 800fac6:	4b08      	ldr	r3, [pc, #32]	@ (800fae8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800fac8:	9100      	str	r1, [sp, #0]
 800faca:	4669      	mov	r1, sp
 800facc:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fad0:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fad4:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fad8:	6803      	ldr	r3, [r0, #0]
 800fada:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800fadc:	4798      	blx	r3
 800fade:	b003      	add	sp, #12
 800fae0:	f85d fb04 	ldr.w	pc, [sp], #4
 800fae4:	20001b60 	.word	0x20001b60
 800fae8:	20001b62 	.word	0x20001b62

0800faec <_ZN8touchgfx11Application10invalidateEv>:
 800faec:	4b09      	ldr	r3, [pc, #36]	@ (800fb14 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 800faee:	b082      	sub	sp, #8
 800faf0:	2100      	movs	r1, #0
 800faf2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800faf6:	4b08      	ldr	r3, [pc, #32]	@ (800fb18 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 800faf8:	f8ad 2004 	strh.w	r2, [sp, #4]
 800fafc:	aa02      	add	r2, sp, #8
 800fafe:	f9b3 3000 	ldrsh.w	r3, [r3]
 800fb02:	9100      	str	r1, [sp, #0]
 800fb04:	f8ad 3006 	strh.w	r3, [sp, #6]
 800fb08:	6803      	ldr	r3, [r0, #0]
 800fb0a:	e912 0006 	ldmdb	r2, {r1, r2}
 800fb0e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800fb10:	b002      	add	sp, #8
 800fb12:	4718      	bx	r3
 800fb14:	20001b60 	.word	0x20001b60
 800fb18:	20001b62 	.word	0x20001b62

0800fb1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800fb1c:	4b03      	ldr	r3, [pc, #12]	@ (800fb2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800fb1e:	6818      	ldr	r0, [r3, #0]
 800fb20:	b110      	cbz	r0, 800fb28 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800fb22:	6803      	ldr	r3, [r0, #0]
 800fb24:	69db      	ldr	r3, [r3, #28]
 800fb26:	4718      	bx	r3
 800fb28:	4770      	bx	lr
 800fb2a:	bf00      	nop
 800fb2c:	20001ba8 	.word	0x20001ba8

0800fb30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800fb30:	4b03      	ldr	r3, [pc, #12]	@ (800fb40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800fb32:	6818      	ldr	r0, [r3, #0]
 800fb34:	b110      	cbz	r0, 800fb3c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800fb36:	6803      	ldr	r3, [r0, #0]
 800fb38:	6a1b      	ldr	r3, [r3, #32]
 800fb3a:	4718      	bx	r3
 800fb3c:	4770      	bx	lr
 800fb3e:	bf00      	nop
 800fb40:	20001ba8 	.word	0x20001ba8

0800fb44 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 800fb44:	2300      	movs	r3, #0
 800fb46:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 800fb4a:	4770      	bx	lr

0800fb4c <_ZN8touchgfx11Application14handleKeyEventEh>:
 800fb4c:	4b03      	ldr	r3, [pc, #12]	@ (800fb5c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800fb4e:	6818      	ldr	r0, [r3, #0]
 800fb50:	b110      	cbz	r0, 800fb58 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800fb52:	6803      	ldr	r3, [r0, #0]
 800fb54:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800fb56:	4718      	bx	r3
 800fb58:	4770      	bx	lr
 800fb5a:	bf00      	nop
 800fb5c:	20001ba8 	.word	0x20001ba8

0800fb60 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800fb60:	b510      	push	{r4, lr}
 800fb62:	f9b1 4000 	ldrsh.w	r4, [r1]
 800fb66:	888a      	ldrh	r2, [r1, #4]
 800fb68:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fb6c:	4422      	add	r2, r4
 800fb6e:	b212      	sxth	r2, r2
 800fb70:	4293      	cmp	r3, r2
 800fb72:	da15      	bge.n	800fba0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fb74:	8882      	ldrh	r2, [r0, #4]
 800fb76:	4413      	add	r3, r2
 800fb78:	b21b      	sxth	r3, r3
 800fb7a:	429c      	cmp	r4, r3
 800fb7c:	da10      	bge.n	800fba0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fb7e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800fb82:	88c9      	ldrh	r1, [r1, #6]
 800fb84:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800fb88:	4419      	add	r1, r3
 800fb8a:	b209      	sxth	r1, r1
 800fb8c:	428a      	cmp	r2, r1
 800fb8e:	da07      	bge.n	800fba0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800fb90:	88c0      	ldrh	r0, [r0, #6]
 800fb92:	4410      	add	r0, r2
 800fb94:	b200      	sxth	r0, r0
 800fb96:	4283      	cmp	r3, r0
 800fb98:	bfac      	ite	ge
 800fb9a:	2000      	movge	r0, #0
 800fb9c:	2001      	movlt	r0, #1
 800fb9e:	bd10      	pop	{r4, pc}
 800fba0:	2000      	movs	r0, #0
 800fba2:	e7fc      	b.n	800fb9e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800fba4 <_ZN8touchgfx4Rect10restrictToEss>:
 800fba4:	f9b0 3000 	ldrsh.w	r3, [r0]
 800fba8:	2b00      	cmp	r3, #0
 800fbaa:	b510      	push	{r4, lr}
 800fbac:	da04      	bge.n	800fbb8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 800fbae:	8884      	ldrh	r4, [r0, #4]
 800fbb0:	4423      	add	r3, r4
 800fbb2:	8083      	strh	r3, [r0, #4]
 800fbb4:	2300      	movs	r3, #0
 800fbb6:	8003      	strh	r3, [r0, #0]
 800fbb8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800fbbc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fbc0:	1b09      	subs	r1, r1, r4
 800fbc2:	428b      	cmp	r3, r1
 800fbc4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800fbc8:	bfc8      	it	gt
 800fbca:	8081      	strhgt	r1, [r0, #4]
 800fbcc:	2b00      	cmp	r3, #0
 800fbce:	da04      	bge.n	800fbda <_ZN8touchgfx4Rect10restrictToEss+0x36>
 800fbd0:	88c1      	ldrh	r1, [r0, #6]
 800fbd2:	440b      	add	r3, r1
 800fbd4:	80c3      	strh	r3, [r0, #6]
 800fbd6:	2300      	movs	r3, #0
 800fbd8:	8043      	strh	r3, [r0, #2]
 800fbda:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 800fbde:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 800fbe2:	1a52      	subs	r2, r2, r1
 800fbe4:	4293      	cmp	r3, r2
 800fbe6:	bfc8      	it	gt
 800fbe8:	80c2      	strhgt	r2, [r0, #6]
 800fbea:	bd10      	pop	{r4, pc}

0800fbec <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800fbec:	4b10      	ldr	r3, [pc, #64]	@ (800fc30 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 800fbee:	b510      	push	{r4, lr}
 800fbf0:	460c      	mov	r4, r1
 800fbf2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fbf6:	4b0f      	ldr	r3, [pc, #60]	@ (800fc34 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 800fbf8:	4620      	mov	r0, r4
 800fbfa:	f9b3 1000 	ldrsh.w	r1, [r3]
 800fbfe:	f7ff ffd1 	bl	800fba4 <_ZN8touchgfx4Rect10restrictToEss>
 800fc02:	4b0d      	ldr	r3, [pc, #52]	@ (800fc38 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 800fc04:	6818      	ldr	r0, [r3, #0]
 800fc06:	b190      	cbz	r0, 800fc2e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 800fc08:	6803      	ldr	r3, [r0, #0]
 800fc0a:	4621      	mov	r1, r4
 800fc0c:	689b      	ldr	r3, [r3, #8]
 800fc0e:	4798      	blx	r3
 800fc10:	4b0a      	ldr	r3, [pc, #40]	@ (800fc3c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 800fc12:	6818      	ldr	r0, [r3, #0]
 800fc14:	b118      	cbz	r0, 800fc1e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 800fc16:	6803      	ldr	r3, [r0, #0]
 800fc18:	4621      	mov	r1, r4
 800fc1a:	689b      	ldr	r3, [r3, #8]
 800fc1c:	4798      	blx	r3
 800fc1e:	4b08      	ldr	r3, [pc, #32]	@ (800fc40 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 800fc20:	4621      	mov	r1, r4
 800fc22:	6818      	ldr	r0, [r3, #0]
 800fc24:	6803      	ldr	r3, [r0, #0]
 800fc26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fc2a:	69db      	ldr	r3, [r3, #28]
 800fc2c:	4718      	bx	r3
 800fc2e:	bd10      	pop	{r4, pc}
 800fc30:	20001b62 	.word	0x20001b62
 800fc34:	20001b60 	.word	0x20001b60
 800fc38:	20001ba8 	.word	0x20001ba8
 800fc3c:	20001ba4 	.word	0x20001ba4
 800fc40:	20001b6c 	.word	0x20001b6c

0800fc44 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800fc44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc46:	4606      	mov	r6, r0
 800fc48:	4608      	mov	r0, r1
 800fc4a:	460f      	mov	r7, r1
 800fc4c:	f7fe f845 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc50:	b9e8      	cbnz	r0, 800fc8e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fc52:	f9b7 5000 	ldrsh.w	r5, [r7]
 800fc56:	f9b6 4000 	ldrsh.w	r4, [r6]
 800fc5a:	42a5      	cmp	r5, r4
 800fc5c:	db17      	blt.n	800fc8e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fc5e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800fc62:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 800fc66:	429a      	cmp	r2, r3
 800fc68:	db11      	blt.n	800fc8e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fc6a:	88b9      	ldrh	r1, [r7, #4]
 800fc6c:	440d      	add	r5, r1
 800fc6e:	88b1      	ldrh	r1, [r6, #4]
 800fc70:	440c      	add	r4, r1
 800fc72:	b22d      	sxth	r5, r5
 800fc74:	b224      	sxth	r4, r4
 800fc76:	42a5      	cmp	r5, r4
 800fc78:	dc09      	bgt.n	800fc8e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 800fc7a:	88f8      	ldrh	r0, [r7, #6]
 800fc7c:	4410      	add	r0, r2
 800fc7e:	88f2      	ldrh	r2, [r6, #6]
 800fc80:	4413      	add	r3, r2
 800fc82:	b200      	sxth	r0, r0
 800fc84:	b21b      	sxth	r3, r3
 800fc86:	4298      	cmp	r0, r3
 800fc88:	bfcc      	ite	gt
 800fc8a:	2000      	movgt	r0, #0
 800fc8c:	2001      	movle	r0, #1
 800fc8e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fc90 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800fc90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc92:	4604      	mov	r4, r0
 800fc94:	4608      	mov	r0, r1
 800fc96:	460d      	mov	r5, r1
 800fc98:	f7fe f81f 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc9c:	b978      	cbnz	r0, 800fcbe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800fc9e:	4620      	mov	r0, r4
 800fca0:	f7fe f81b 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800fca4:	f9b5 6000 	ldrsh.w	r6, [r5]
 800fca8:	b150      	cbz	r0, 800fcc0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800fcaa:	8026      	strh	r6, [r4, #0]
 800fcac:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800fcb0:	8063      	strh	r3, [r4, #2]
 800fcb2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800fcb6:	80a3      	strh	r3, [r4, #4]
 800fcb8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fcbc:	80e3      	strh	r3, [r4, #6]
 800fcbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800fcc0:	f9b4 1000 	ldrsh.w	r1, [r4]
 800fcc4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800fcc8:	42b1      	cmp	r1, r6
 800fcca:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800fcce:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800fcd2:	460f      	mov	r7, r1
 800fcd4:	88ed      	ldrh	r5, [r5, #6]
 800fcd6:	bfa8      	it	ge
 800fcd8:	4637      	movge	r7, r6
 800fcda:	4293      	cmp	r3, r2
 800fcdc:	4618      	mov	r0, r3
 800fcde:	4466      	add	r6, ip
 800fce0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800fce4:	bfa8      	it	ge
 800fce6:	4610      	movge	r0, r2
 800fce8:	442a      	add	r2, r5
 800fcea:	88e5      	ldrh	r5, [r4, #6]
 800fcec:	4461      	add	r1, ip
 800fcee:	b236      	sxth	r6, r6
 800fcf0:	8027      	strh	r7, [r4, #0]
 800fcf2:	442b      	add	r3, r5
 800fcf4:	b209      	sxth	r1, r1
 800fcf6:	b212      	sxth	r2, r2
 800fcf8:	8060      	strh	r0, [r4, #2]
 800fcfa:	b21b      	sxth	r3, r3
 800fcfc:	428e      	cmp	r6, r1
 800fcfe:	bfac      	ite	ge
 800fd00:	ebc7 0106 	rsbge	r1, r7, r6
 800fd04:	ebc7 0101 	rsblt	r1, r7, r1
 800fd08:	429a      	cmp	r2, r3
 800fd0a:	bfac      	ite	ge
 800fd0c:	ebc0 0202 	rsbge	r2, r0, r2
 800fd10:	ebc0 0203 	rsblt	r2, r0, r3
 800fd14:	80a1      	strh	r1, [r4, #4]
 800fd16:	80e2      	strh	r2, [r4, #6]
 800fd18:	e7d1      	b.n	800fcbe <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800fd1c <_ZN8touchgfx11Application11getInstanceEv>:
 800fd1c:	4b01      	ldr	r3, [pc, #4]	@ (800fd24 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800fd1e:	6818      	ldr	r0, [r3, #0]
 800fd20:	4770      	bx	lr
 800fd22:	bf00      	nop
 800fd24:	20001bb8 	.word	0x20001bb8

0800fd28 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 800fd28:	2300      	movs	r3, #0
 800fd2a:	b510      	push	{r4, lr}
 800fd2c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 800fd30:	4604      	mov	r4, r0
 800fd32:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800fd36:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800fd3a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800fd3e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 800fd42:	429a      	cmp	r2, r3
 800fd44:	d90e      	bls.n	800fd64 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 800fd46:	18e2      	adds	r2, r4, r3
 800fd48:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 800fd4c:	b122      	cbz	r2, 800fd58 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 800fd4e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 800fd52:	6803      	ldr	r3, [r0, #0]
 800fd54:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800fd56:	4798      	blx	r3
 800fd58:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 800fd5c:	3301      	adds	r3, #1
 800fd5e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 800fd62:	e7ea      	b.n	800fd3a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 800fd64:	bd10      	pop	{r4, pc}

0800fd66 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 800fd66:	2300      	movs	r3, #0
 800fd68:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 800fd6c:	30a4      	adds	r0, #164	@ 0xa4
 800fd6e:	f820 3c24 	strh.w	r3, [r0, #-36]
 800fd72:	f802 3b01 	strb.w	r3, [r2], #1
 800fd76:	4282      	cmp	r2, r0
 800fd78:	d1fb      	bne.n	800fd72 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 800fd7a:	4770      	bx	lr

0800fd7c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800fd7c:	b570      	push	{r4, r5, r6, lr}
 800fd7e:	4c0b      	ldr	r4, [pc, #44]	@ (800fdac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 800fd80:	4605      	mov	r5, r0
 800fd82:	460e      	mov	r6, r1
 800fd84:	6820      	ldr	r0, [r4, #0]
 800fd86:	b110      	cbz	r0, 800fd8e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 800fd88:	6803      	ldr	r3, [r0, #0]
 800fd8a:	695b      	ldr	r3, [r3, #20]
 800fd8c:	4798      	blx	r3
 800fd8e:	1d28      	adds	r0, r5, #4
 800fd90:	f7ff ffe9 	bl	800fd66 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800fd94:	6026      	str	r6, [r4, #0]
 800fd96:	6833      	ldr	r3, [r6, #0]
 800fd98:	4630      	mov	r0, r6
 800fd9a:	68db      	ldr	r3, [r3, #12]
 800fd9c:	4798      	blx	r3
 800fd9e:	682b      	ldr	r3, [r5, #0]
 800fda0:	4628      	mov	r0, r5
 800fda2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800fda4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fda8:	4718      	bx	r3
 800fdaa:	bf00      	nop
 800fdac:	20001ba8 	.word	0x20001ba8

0800fdb0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 800fdb0:	2300      	movs	r3, #0
 800fdb2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 800fdb6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 800fdba:	461a      	mov	r2, r3
 800fdbc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fdbe:	461c      	mov	r4, r3
 800fdc0:	461d      	mov	r5, r3
 800fdc2:	459c      	cmp	ip, r3
 800fdc4:	dd1a      	ble.n	800fdfc <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 800fdc6:	18c6      	adds	r6, r0, r3
 800fdc8:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 800fdcc:	b16e      	cbz	r6, 800fdea <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 800fdce:	429a      	cmp	r2, r3
 800fdd0:	d008      	beq.n	800fde4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 800fdd2:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 800fdd6:	fa1f fe82 	uxth.w	lr, r2
 800fdda:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 800fdde:	1887      	adds	r7, r0, r2
 800fde0:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 800fde4:	3201      	adds	r2, #1
 800fde6:	3301      	adds	r3, #1
 800fde8:	e7eb      	b.n	800fdc2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 800fdea:	4299      	cmp	r1, r3
 800fdec:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 800fdf0:	bfa8      	it	ge
 800fdf2:	3501      	addge	r5, #1
 800fdf4:	429e      	cmp	r6, r3
 800fdf6:	bfc8      	it	gt
 800fdf8:	3401      	addgt	r4, #1
 800fdfa:	e7f4      	b.n	800fde6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 800fdfc:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 800fe00:	1b49      	subs	r1, r1, r5
 800fe02:	1b1b      	subs	r3, r3, r4
 800fe04:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 800fe08:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 800fe0c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 800fe10:	4293      	cmp	r3, r2
 800fe12:	dd03      	ble.n	800fe1c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 800fe14:	3b01      	subs	r3, #1
 800fe16:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 800fe1a:	e7f7      	b.n	800fe0c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 800fe1c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800fe20 <_ZN8touchgfx11Application15handleTickEventEv>:
 800fe20:	b570      	push	{r4, r5, r6, lr}
 800fe22:	4d16      	ldr	r5, [pc, #88]	@ (800fe7c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 800fe24:	4604      	mov	r4, r0
 800fe26:	6828      	ldr	r0, [r5, #0]
 800fe28:	b140      	cbz	r0, 800fe3c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fe2a:	7a03      	ldrb	r3, [r0, #8]
 800fe2c:	b933      	cbnz	r3, 800fe3c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800fe2e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800fe32:	6803      	ldr	r3, [r0, #0]
 800fe34:	689b      	ldr	r3, [r3, #8]
 800fe36:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fe3a:	4718      	bx	r3
 800fe3c:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 800fe40:	4e0f      	ldr	r6, [pc, #60]	@ (800fe80 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 800fe42:	b973      	cbnz	r3, 800fe62 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fe44:	b168      	cbz	r0, 800fe62 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fe46:	7a03      	ldrb	r3, [r0, #8]
 800fe48:	b15b      	cbz	r3, 800fe62 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800fe4a:	6830      	ldr	r0, [r6, #0]
 800fe4c:	b110      	cbz	r0, 800fe54 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800fe4e:	6803      	ldr	r3, [r0, #0]
 800fe50:	691b      	ldr	r3, [r3, #16]
 800fe52:	4798      	blx	r3
 800fe54:	6828      	ldr	r0, [r5, #0]
 800fe56:	6803      	ldr	r3, [r0, #0]
 800fe58:	68db      	ldr	r3, [r3, #12]
 800fe5a:	4798      	blx	r3
 800fe5c:	2301      	movs	r3, #1
 800fe5e:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 800fe62:	3404      	adds	r4, #4
 800fe64:	4620      	mov	r0, r4
 800fe66:	f7ff ff5f 	bl	800fd28 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 800fe6a:	4620      	mov	r0, r4
 800fe6c:	f7ff ffa0 	bl	800fdb0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 800fe70:	6830      	ldr	r0, [r6, #0]
 800fe72:	b110      	cbz	r0, 800fe7a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 800fe74:	6803      	ldr	r3, [r0, #0]
 800fe76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800fe78:	e7dd      	b.n	800fe36 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800fe7a:	bd70      	pop	{r4, r5, r6, pc}
 800fe7c:	20001bac 	.word	0x20001bac
 800fe80:	20001ba8 	.word	0x20001ba8

0800fe84 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800fe84:	4603      	mov	r3, r0
 800fe86:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 800fe8a:	2200      	movs	r2, #0
 800fe8c:	801a      	strh	r2, [r3, #0]
 800fe8e:	3308      	adds	r3, #8
 800fe90:	f823 2c06 	strh.w	r2, [r3, #-6]
 800fe94:	f823 2c04 	strh.w	r2, [r3, #-4]
 800fe98:	f823 2c02 	strh.w	r2, [r3, #-2]
 800fe9c:	428b      	cmp	r3, r1
 800fe9e:	d1f5      	bne.n	800fe8c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800fea0:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 800fea4:	4770      	bx	lr
	...

0800fea8 <_ZN8touchgfx11ApplicationC1Ev>:
 800fea8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800feaa:	4b1d      	ldr	r3, [pc, #116]	@ (800ff20 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800feac:	4606      	mov	r6, r0
 800feae:	4604      	mov	r4, r0
 800feb0:	2500      	movs	r5, #0
 800feb2:	f846 3b04 	str.w	r3, [r6], #4
 800feb6:	22a8      	movs	r2, #168	@ 0xa8
 800feb8:	2100      	movs	r1, #0
 800feba:	4630      	mov	r0, r6
 800febc:	f011 f8f1 	bl	80210a2 <memset>
 800fec0:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 800fec4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 800fec8:	4f16      	ldr	r7, [pc, #88]	@ (800ff24 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800feca:	f7ff ffdb 	bl	800fe84 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fece:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 800fed2:	f7ff ffd7 	bl	800fe84 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800fed6:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 800feda:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 800fede:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 800fee2:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 800fee6:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 800feea:	490f      	ldr	r1, [pc, #60]	@ (800ff28 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800feec:	480f      	ldr	r0, [pc, #60]	@ (800ff2c <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800feee:	f010 fd79 	bl	80209e4 <CRC_Lock>
 800fef2:	4b0f      	ldr	r3, [pc, #60]	@ (800ff30 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 800fef4:	b158      	cbz	r0, 800ff0e <_ZN8touchgfx11ApplicationC1Ev+0x66>
 800fef6:	801d      	strh	r5, [r3, #0]
 800fef8:	2300      	movs	r3, #0
 800fefa:	4a0e      	ldr	r2, [pc, #56]	@ (800ff34 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 800fefc:	4630      	mov	r0, r6
 800fefe:	6013      	str	r3, [r2, #0]
 800ff00:	4a0d      	ldr	r2, [pc, #52]	@ (800ff38 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 800ff02:	603b      	str	r3, [r7, #0]
 800ff04:	6013      	str	r3, [r2, #0]
 800ff06:	f7ff ff2e 	bl	800fd66 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800ff0a:	4620      	mov	r0, r4
 800ff0c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ff0e:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800ff12:	2002      	movs	r0, #2
 800ff14:	801a      	strh	r2, [r3, #0]
 800ff16:	6038      	str	r0, [r7, #0]
 800ff18:	f001 fa50 	bl	80113bc <_ZN8touchgfx6Screen4drawEv>
 800ff1c:	e7ec      	b.n	800fef8 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 800ff1e:	bf00      	nop
 800ff20:	08022f70 	.word	0x08022f70
 800ff24:	20001ba8 	.word	0x20001ba8
 800ff28:	b5e8b5cd 	.word	0xb5e8b5cd
 800ff2c:	f407a5c2 	.word	0xf407a5c2
 800ff30:	20000178 	.word	0x20000178
 800ff34:	20001bb8 	.word	0x20001bb8
 800ff38:	20001bac 	.word	0x20001bac

0800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800ff3c:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 800ff40:	3b01      	subs	r3, #1
 800ff42:	b29b      	uxth	r3, r3
 800ff44:	428b      	cmp	r3, r1
 800ff46:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 800ff4a:	b510      	push	{r4, lr}
 800ff4c:	d908      	bls.n	800ff60 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 800ff4e:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800ff52:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800ff56:	681a      	ldr	r2, [r3, #0]
 800ff58:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800ff5c:	685a      	ldr	r2, [r3, #4]
 800ff5e:	6062      	str	r2, [r4, #4]
 800ff60:	bd10      	pop	{r4, pc}
	...

0800ff64 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800ff64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff68:	b08f      	sub	sp, #60	@ 0x3c
 800ff6a:	4b8f      	ldr	r3, [pc, #572]	@ (80101a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 800ff6c:	4683      	mov	fp, r0
 800ff6e:	ac0a      	add	r4, sp, #40	@ 0x28
 800ff70:	e884 0006 	stmia.w	r4, {r1, r2}
 800ff74:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ff78:	4620      	mov	r0, r4
 800ff7a:	4b8c      	ldr	r3, [pc, #560]	@ (80101ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 800ff7c:	f9b3 1000 	ldrsh.w	r1, [r3]
 800ff80:	f7ff fe10 	bl	800fba4 <_ZN8touchgfx4Rect10restrictToEss>
 800ff84:	4620      	mov	r0, r4
 800ff86:	f7fd fea8 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 800ff8a:	2800      	cmp	r0, #0
 800ff8c:	d16a      	bne.n	8010064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 800ff8e:	9403      	str	r4, [sp, #12]
 800ff90:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 800ff94:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 800ff98:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 800ff9c:	9301      	str	r3, [sp, #4]
 800ff9e:	35a4      	adds	r5, #164	@ 0xa4
 800ffa0:	b15c      	cbz	r4, 800ffba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800ffa2:	4629      	mov	r1, r5
 800ffa4:	9803      	ldr	r0, [sp, #12]
 800ffa6:	f7ff fe4d 	bl	800fc44 <_ZNK8touchgfx4Rect8includesERKS0_>
 800ffaa:	3c01      	subs	r4, #1
 800ffac:	b118      	cbz	r0, 800ffb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 800ffae:	b2a1      	uxth	r1, r4
 800ffb0:	9801      	ldr	r0, [sp, #4]
 800ffb2:	f7ff ffc3 	bl	800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ffb6:	3d08      	subs	r5, #8
 800ffb8:	e7f2      	b.n	800ffa0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 800ffba:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 800ffbe:	f10a 33ff 	add.w	r3, sl, #4294967295
 800ffc2:	f8cd a010 	str.w	sl, [sp, #16]
 800ffc6:	9302      	str	r3, [sp, #8]
 800ffc8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 800ffcc:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800ffd0:	9306      	str	r3, [sp, #24]
 800ffd2:	445c      	add	r4, fp
 800ffd4:	2500      	movs	r5, #0
 800ffd6:	4626      	mov	r6, r4
 800ffd8:	f8cd a014 	str.w	sl, [sp, #20]
 800ffdc:	462f      	mov	r7, r5
 800ffde:	9b05      	ldr	r3, [sp, #20]
 800ffe0:	2b00      	cmp	r3, #0
 800ffe2:	d073      	beq.n	80100cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 800ffe4:	9903      	ldr	r1, [sp, #12]
 800ffe6:	4630      	mov	r0, r6
 800ffe8:	f7ff fdba 	bl	800fb60 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800ffec:	b350      	cbz	r0, 8010044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 800ffee:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 800fff2:	f9b6 c000 	ldrsh.w	ip, [r6]
 800fff6:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 800fffa:	45e6      	cmp	lr, ip
 800fffc:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010000:	db33      	blt.n	801006a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010002:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8010006:	88b3      	ldrh	r3, [r6, #4]
 8010008:	4472      	add	r2, lr
 801000a:	4463      	add	r3, ip
 801000c:	b212      	sxth	r2, r2
 801000e:	b21b      	sxth	r3, r3
 8010010:	429a      	cmp	r2, r3
 8010012:	dc2a      	bgt.n	801006a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8010014:	fa1f f289 	uxth.w	r2, r9
 8010018:	88f3      	ldrh	r3, [r6, #6]
 801001a:	45c8      	cmp	r8, r9
 801001c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010020:	4413      	add	r3, r2
 8010022:	fa1f fc88 	uxth.w	ip, r8
 8010026:	b29b      	uxth	r3, r3
 8010028:	fa0f fe83 	sxth.w	lr, r3
 801002c:	db0f      	blt.n	801004e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801002e:	eba3 030c 	sub.w	r3, r3, ip
 8010032:	1ac9      	subs	r1, r1, r3
 8010034:	b209      	sxth	r1, r1
 8010036:	2900      	cmp	r1, #0
 8010038:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 801003c:	dd12      	ble.n	8010064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801003e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8010042:	4605      	mov	r5, r0
 8010044:	9b05      	ldr	r3, [sp, #20]
 8010046:	3e08      	subs	r6, #8
 8010048:	3b01      	subs	r3, #1
 801004a:	9305      	str	r3, [sp, #20]
 801004c:	e7c7      	b.n	800ffde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801004e:	4461      	add	r1, ip
 8010050:	b209      	sxth	r1, r1
 8010052:	4571      	cmp	r1, lr
 8010054:	dc38      	bgt.n	80100c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010056:	eba2 020c 	sub.w	r2, r2, ip
 801005a:	b212      	sxth	r2, r2
 801005c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8010060:	2a00      	cmp	r2, #0
 8010062:	dcee      	bgt.n	8010042 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8010064:	b00f      	add	sp, #60	@ 0x3c
 8010066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801006a:	45c8      	cmp	r8, r9
 801006c:	db2c      	blt.n	80100c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801006e:	88f3      	ldrh	r3, [r6, #6]
 8010070:	4499      	add	r9, r3
 8010072:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8010076:	4498      	add	r8, r3
 8010078:	fa0f f989 	sxth.w	r9, r9
 801007c:	fa0f f888 	sxth.w	r8, r8
 8010080:	45c1      	cmp	r9, r8
 8010082:	db21      	blt.n	80100c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8010084:	fa1f f28c 	uxth.w	r2, ip
 8010088:	88b3      	ldrh	r3, [r6, #4]
 801008a:	45e6      	cmp	lr, ip
 801008c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8010090:	4413      	add	r3, r2
 8010092:	fa1f f88e 	uxth.w	r8, lr
 8010096:	b29b      	uxth	r3, r3
 8010098:	fa0f f983 	sxth.w	r9, r3
 801009c:	db0a      	blt.n	80100b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 801009e:	eba3 0308 	sub.w	r3, r3, r8
 80100a2:	1ac9      	subs	r1, r1, r3
 80100a4:	b209      	sxth	r1, r1
 80100a6:	2900      	cmp	r1, #0
 80100a8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80100ac:	ddda      	ble.n	8010064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80100ae:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80100b2:	e7c6      	b.n	8010042 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80100b4:	4441      	add	r1, r8
 80100b6:	b209      	sxth	r1, r1
 80100b8:	4549      	cmp	r1, r9
 80100ba:	dc05      	bgt.n	80100c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80100bc:	eba2 0208 	sub.w	r2, r2, r8
 80100c0:	b212      	sxth	r2, r2
 80100c2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80100c6:	e7cb      	b.n	8010060 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80100c8:	4607      	mov	r7, r0
 80100ca:	e7bb      	b.n	8010044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80100cc:	2d00      	cmp	r5, #0
 80100ce:	d181      	bne.n	800ffd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80100d0:	2f00      	cmp	r7, #0
 80100d2:	f000 81dd 	beq.w	8010490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80100d6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80100da:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80100de:	b2b3      	uxth	r3, r6
 80100e0:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80100e4:	9305      	str	r3, [sp, #20]
 80100e6:	9a05      	ldr	r2, [sp, #20]
 80100e8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80100ec:	4413      	add	r3, r2
 80100ee:	b2ba      	uxth	r2, r7
 80100f0:	4492      	add	sl, r2
 80100f2:	b29b      	uxth	r3, r3
 80100f4:	fa1f fa8a 	uxth.w	sl, sl
 80100f8:	fa0f f883 	sxth.w	r8, r3
 80100fc:	fa0f f98a 	sxth.w	r9, sl
 8010100:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8010104:	9b04      	ldr	r3, [sp, #16]
 8010106:	2b00      	cmp	r3, #0
 8010108:	d052      	beq.n	80101b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 801010a:	9903      	ldr	r1, [sp, #12]
 801010c:	4620      	mov	r0, r4
 801010e:	f7ff fd27 	bl	800fb60 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010112:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8010116:	b1c0      	cbz	r0, 801014a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010118:	f9b4 e000 	ldrsh.w	lr, [r4]
 801011c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010120:	4576      	cmp	r6, lr
 8010122:	dc22      	bgt.n	801016a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010124:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8010128:	44f4      	add	ip, lr
 801012a:	fa0f fc8c 	sxth.w	ip, ip
 801012e:	45e0      	cmp	r8, ip
 8010130:	db1b      	blt.n	801016a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8010132:	428f      	cmp	r7, r1
 8010134:	fa1f fc81 	uxth.w	ip, r1
 8010138:	88e1      	ldrh	r1, [r4, #6]
 801013a:	dc0d      	bgt.n	8010158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 801013c:	ebaa 0c0c 	sub.w	ip, sl, ip
 8010140:	f8a4 9002 	strh.w	r9, [r4, #2]
 8010144:	eba1 010c 	sub.w	r1, r1, ip
 8010148:	80e1      	strh	r1, [r4, #6]
 801014a:	4628      	mov	r0, r5
 801014c:	9904      	ldr	r1, [sp, #16]
 801014e:	3c08      	subs	r4, #8
 8010150:	4605      	mov	r5, r0
 8010152:	3901      	subs	r1, #1
 8010154:	9104      	str	r1, [sp, #16]
 8010156:	e7d3      	b.n	8010100 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8010158:	4461      	add	r1, ip
 801015a:	b209      	sxth	r1, r1
 801015c:	4549      	cmp	r1, r9
 801015e:	dcf5      	bgt.n	801014c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8010160:	eba2 0c0c 	sub.w	ip, r2, ip
 8010164:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010168:	e7ef      	b.n	801014a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801016a:	428f      	cmp	r7, r1
 801016c:	dcee      	bgt.n	801014c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801016e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8010172:	4461      	add	r1, ip
 8010174:	b209      	sxth	r1, r1
 8010176:	4589      	cmp	r9, r1
 8010178:	dbe8      	blt.n	801014c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801017a:	4576      	cmp	r6, lr
 801017c:	fa1f fc8e 	uxth.w	ip, lr
 8010180:	88a1      	ldrh	r1, [r4, #4]
 8010182:	dc07      	bgt.n	8010194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8010184:	eba3 0c0c 	sub.w	ip, r3, ip
 8010188:	f8a4 8000 	strh.w	r8, [r4]
 801018c:	eba1 010c 	sub.w	r1, r1, ip
 8010190:	80a1      	strh	r1, [r4, #4]
 8010192:	e7da      	b.n	801014a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8010194:	4461      	add	r1, ip
 8010196:	b209      	sxth	r1, r1
 8010198:	4588      	cmp	r8, r1
 801019a:	dbd7      	blt.n	801014c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801019c:	9905      	ldr	r1, [sp, #20]
 801019e:	eba1 0c0c 	sub.w	ip, r1, ip
 80101a2:	f8a4 c004 	strh.w	ip, [r4, #4]
 80101a6:	e7d0      	b.n	801014a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80101a8:	20001b62 	.word	0x20001b62
 80101ac:	20001b60 	.word	0x20001b60
 80101b0:	2d00      	cmp	r5, #0
 80101b2:	f000 816d 	beq.w	8010490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80101b6:	9b06      	ldr	r3, [sp, #24]
 80101b8:	445b      	add	r3, fp
 80101ba:	461c      	mov	r4, r3
 80101bc:	9b02      	ldr	r3, [sp, #8]
 80101be:	3301      	adds	r3, #1
 80101c0:	f000 8166 	beq.w	8010490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80101c4:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80101c8:	9803      	ldr	r0, [sp, #12]
 80101ca:	4629      	mov	r1, r5
 80101cc:	f7ff fd3a 	bl	800fc44 <_ZNK8touchgfx4Rect8includesERKS0_>
 80101d0:	b120      	cbz	r0, 80101dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80101d2:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80101d6:	9801      	ldr	r0, [sp, #4]
 80101d8:	f7ff feb0 	bl	800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80101dc:	9903      	ldr	r1, [sp, #12]
 80101de:	4628      	mov	r0, r5
 80101e0:	f7ff fcbe 	bl	800fb60 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80101e4:	2800      	cmp	r0, #0
 80101e6:	f000 809c 	beq.w	8010322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80101ea:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80101ee:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80101f2:	fa1f f189 	uxth.w	r1, r9
 80101f6:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80101fa:	9309      	str	r3, [sp, #36]	@ 0x24
 80101fc:	eb01 0c03 	add.w	ip, r1, r3
 8010200:	b283      	uxth	r3, r0
 8010202:	4548      	cmp	r0, r9
 8010204:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8010208:	fa1f fa8c 	uxth.w	sl, ip
 801020c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8010210:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8010214:	eb03 050c 	add.w	r5, r3, ip
 8010218:	b2ad      	uxth	r5, r5
 801021a:	9505      	str	r5, [sp, #20]
 801021c:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8010220:	9504      	str	r5, [sp, #16]
 8010222:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8010226:	f340 8099 	ble.w	801035c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801022a:	1a5b      	subs	r3, r3, r1
 801022c:	4596      	cmp	lr, r2
 801022e:	fa0f f08a 	sxth.w	r0, sl
 8010232:	b29b      	uxth	r3, r3
 8010234:	b21e      	sxth	r6, r3
 8010236:	dd2e      	ble.n	8010296 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8010238:	9f02      	ldr	r7, [sp, #8]
 801023a:	fa1f fe8e 	uxth.w	lr, lr
 801023e:	b292      	uxth	r2, r2
 8010240:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8010244:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8010248:	9f04      	ldr	r7, [sp, #16]
 801024a:	ebae 0102 	sub.w	r1, lr, r2
 801024e:	44a6      	add	lr, r4
 8010250:	1a3f      	subs	r7, r7, r0
 8010252:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8010256:	b289      	uxth	r1, r1
 8010258:	4402      	add	r2, r0
 801025a:	fa0f fe8e 	sxth.w	lr, lr
 801025e:	b20d      	sxth	r5, r1
 8010260:	b212      	sxth	r2, r2
 8010262:	436f      	muls	r7, r5
 8010264:	ebae 0202 	sub.w	r2, lr, r2
 8010268:	4372      	muls	r2, r6
 801026a:	4297      	cmp	r7, r2
 801026c:	db09      	blt.n	8010282 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801026e:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8010272:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8010276:	449c      	add	ip, r3
 8010278:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801027c:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8010280:	e686      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010282:	4421      	add	r1, r4
 8010284:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8010288:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 801028c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010290:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8010294:	e67c      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010296:	9f04      	ldr	r7, [sp, #16]
 8010298:	42b8      	cmp	r0, r7
 801029a:	da27      	bge.n	80102ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801029c:	9902      	ldr	r1, [sp, #8]
 801029e:	1a3f      	subs	r7, r7, r0
 80102a0:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80102a4:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80102a8:	eb05 010e 	add.w	r1, r5, lr
 80102ac:	fa1f f881 	uxth.w	r8, r1
 80102b0:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80102b4:	4411      	add	r1, r2
 80102b6:	fa0f f988 	sxth.w	r9, r8
 80102ba:	eba2 020e 	sub.w	r2, r2, lr
 80102be:	eba1 0108 	sub.w	r1, r1, r8
 80102c2:	4372      	muls	r2, r6
 80102c4:	b289      	uxth	r1, r1
 80102c6:	fa0f f881 	sxth.w	r8, r1
 80102ca:	fb08 f707 	mul.w	r7, r8, r7
 80102ce:	42ba      	cmp	r2, r7
 80102d0:	dc06      	bgt.n	80102e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80102d2:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80102d6:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80102da:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80102de:	e7ca      	b.n	8010276 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80102e0:	4429      	add	r1, r5
 80102e2:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80102e6:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80102ea:	e651      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80102ec:	9805      	ldr	r0, [sp, #20]
 80102ee:	2d06      	cmp	r5, #6
 80102f0:	ebaa 0000 	sub.w	r0, sl, r0
 80102f4:	b280      	uxth	r0, r0
 80102f6:	fa0f fe80 	sxth.w	lr, r0
 80102fa:	d817      	bhi.n	801032c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80102fc:	9b04      	ldr	r3, [sp, #16]
 80102fe:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8010302:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8010306:	1c6b      	adds	r3, r5, #1
 8010308:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 801030c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8010310:	9b01      	ldr	r3, [sp, #4]
 8010312:	9801      	ldr	r0, [sp, #4]
 8010314:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010318:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801031c:	805a      	strh	r2, [r3, #2]
 801031e:	809e      	strh	r6, [r3, #4]
 8010320:	80d9      	strh	r1, [r3, #6]
 8010322:	9b02      	ldr	r3, [sp, #8]
 8010324:	3c08      	subs	r4, #8
 8010326:	3b01      	subs	r3, #1
 8010328:	9302      	str	r3, [sp, #8]
 801032a:	e747      	b.n	80101bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 801032c:	9a02      	ldr	r2, [sp, #8]
 801032e:	45b6      	cmp	lr, r6
 8010330:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8010334:	db0d      	blt.n	8010352 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8010336:	449c      	add	ip, r3
 8010338:	445a      	add	r2, fp
 801033a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 801033e:	fa1f fc8c 	uxth.w	ip, ip
 8010342:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8010346:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801034a:	448c      	add	ip, r1
 801034c:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8010350:	e61e      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010352:	445a      	add	r2, fp
 8010354:	4484      	add	ip, r0
 8010356:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 801035a:	e78f      	b.n	801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801035c:	fa1f f18e 	uxth.w	r1, lr
 8010360:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8010364:	b293      	uxth	r3, r2
 8010366:	4596      	cmp	lr, r2
 8010368:	eb01 0806 	add.w	r8, r1, r6
 801036c:	9306      	str	r3, [sp, #24]
 801036e:	fa1f f888 	uxth.w	r8, r8
 8010372:	9f06      	ldr	r7, [sp, #24]
 8010374:	fa0f f388 	sxth.w	r3, r8
 8010378:	9307      	str	r3, [sp, #28]
 801037a:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801037e:	443b      	add	r3, r7
 8010380:	b29b      	uxth	r3, r3
 8010382:	9308      	str	r3, [sp, #32]
 8010384:	da24      	bge.n	80103d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8010386:	9905      	ldr	r1, [sp, #20]
 8010388:	eba3 0308 	sub.w	r3, r3, r8
 801038c:	eba2 020e 	sub.w	r2, r2, lr
 8010390:	eba9 0000 	sub.w	r0, r9, r0
 8010394:	ebaa 0401 	sub.w	r4, sl, r1
 8010398:	b29b      	uxth	r3, r3
 801039a:	b2a4      	uxth	r4, r4
 801039c:	b219      	sxth	r1, r3
 801039e:	b225      	sxth	r5, r4
 80103a0:	4348      	muls	r0, r1
 80103a2:	436a      	muls	r2, r5
 80103a4:	4282      	cmp	r2, r0
 80103a6:	9a02      	ldr	r2, [sp, #8]
 80103a8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80103ac:	445a      	add	r2, fp
 80103ae:	dc06      	bgt.n	80103be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80103b0:	9b07      	ldr	r3, [sp, #28]
 80103b2:	44a4      	add	ip, r4
 80103b4:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80103b8:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80103bc:	e75e      	b.n	801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80103be:	9904      	ldr	r1, [sp, #16]
 80103c0:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80103c4:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80103c8:	4433      	add	r3, r6
 80103ca:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80103ce:	e5df      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80103d0:	9f06      	ldr	r7, [sp, #24]
 80103d2:	9b04      	ldr	r3, [sp, #16]
 80103d4:	1bc9      	subs	r1, r1, r7
 80103d6:	fa0f f78a 	sxth.w	r7, sl
 80103da:	b289      	uxth	r1, r1
 80103dc:	429f      	cmp	r7, r3
 80103de:	fa0f fe81 	sxth.w	lr, r1
 80103e2:	dd23      	ble.n	801042c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80103e4:	9a05      	ldr	r2, [sp, #20]
 80103e6:	eba9 0000 	sub.w	r0, r9, r0
 80103ea:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80103ee:	ebaa 0202 	sub.w	r2, sl, r2
 80103f2:	9d07      	ldr	r5, [sp, #28]
 80103f4:	fb0e f000 	mul.w	r0, lr, r0
 80103f8:	b292      	uxth	r2, r2
 80103fa:	eba5 0a03 	sub.w	sl, r5, r3
 80103fe:	9b02      	ldr	r3, [sp, #8]
 8010400:	b214      	sxth	r4, r2
 8010402:	00db      	lsls	r3, r3, #3
 8010404:	fb04 fa0a 	mul.w	sl, r4, sl
 8010408:	445b      	add	r3, fp
 801040a:	4550      	cmp	r0, sl
 801040c:	db03      	blt.n	8010416 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801040e:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8010412:	4494      	add	ip, r2
 8010414:	e732      	b.n	801027c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8010416:	9a04      	ldr	r2, [sp, #16]
 8010418:	4431      	add	r1, r6
 801041a:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801041e:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8010422:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8010426:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801042a:	e75c      	b.n	80102e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 801042c:	9b08      	ldr	r3, [sp, #32]
 801042e:	2d06      	cmp	r5, #6
 8010430:	eba3 0308 	sub.w	r3, r3, r8
 8010434:	b29b      	uxth	r3, r3
 8010436:	b218      	sxth	r0, r3
 8010438:	d813      	bhi.n	8010462 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 801043a:	9b07      	ldr	r3, [sp, #28]
 801043c:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8010440:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8010444:	1c6b      	adds	r3, r5, #1
 8010446:	9901      	ldr	r1, [sp, #4]
 8010448:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801044c:	9b01      	ldr	r3, [sp, #4]
 801044e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8010452:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8010456:	805a      	strh	r2, [r3, #2]
 8010458:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801045a:	f8a3 e006 	strh.w	lr, [r3, #6]
 801045e:	809a      	strh	r2, [r3, #4]
 8010460:	e75f      	b.n	8010322 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8010462:	9c02      	ldr	r4, [sp, #8]
 8010464:	4570      	cmp	r0, lr
 8010466:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 801046a:	db0d      	blt.n	8010488 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 801046c:	4431      	add	r1, r6
 801046e:	9b06      	ldr	r3, [sp, #24]
 8010470:	445c      	add	r4, fp
 8010472:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8010476:	b289      	uxth	r1, r1
 8010478:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 801047c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8010480:	4419      	add	r1, r3
 8010482:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8010486:	e583      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010488:	445c      	add	r4, fp
 801048a:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 801048e:	e79b      	b.n	80103c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8010490:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8010494:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8010498:	1e65      	subs	r5, r4, #1
 801049a:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 801049e:	b2ad      	uxth	r5, r5
 80104a0:	42b5      	cmp	r5, r6
 80104a2:	d044      	beq.n	801052e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80104a4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80104a8:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80104ac:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80104b0:	4282      	cmp	r2, r0
 80104b2:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80104b6:	d11f      	bne.n	80104f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80104b8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80104bc:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80104c0:	459c      	cmp	ip, r3
 80104c2:	d119      	bne.n	80104f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80104c4:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80104c8:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80104cc:	19d8      	adds	r0, r3, r7
 80104ce:	b200      	sxth	r0, r0
 80104d0:	4288      	cmp	r0, r1
 80104d2:	d109      	bne.n	80104e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80104d4:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80104d8:	4413      	add	r3, r2
 80104da:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80104de:	4629      	mov	r1, r5
 80104e0:	9801      	ldr	r0, [sp, #4]
 80104e2:	f7ff fd2b 	bl	800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80104e6:	e003      	b.n	80104f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80104e8:	4411      	add	r1, r2
 80104ea:	b209      	sxth	r1, r1
 80104ec:	42b9      	cmp	r1, r7
 80104ee:	d0f3      	beq.n	80104d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80104f0:	3d01      	subs	r5, #1
 80104f2:	3c08      	subs	r4, #8
 80104f4:	b2ad      	uxth	r5, r5
 80104f6:	e7d3      	b.n	80104a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80104f8:	42b9      	cmp	r1, r7
 80104fa:	d1f9      	bne.n	80104f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80104fc:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8010500:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010504:	4299      	cmp	r1, r3
 8010506:	d1f3      	bne.n	80104f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8010508:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 801050c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8010510:	181f      	adds	r7, r3, r0
 8010512:	b23f      	sxth	r7, r7
 8010514:	42ba      	cmp	r2, r7
 8010516:	d105      	bne.n	8010524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8010518:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 801051c:	440b      	add	r3, r1
 801051e:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8010522:	e7dc      	b.n	80104de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8010524:	440a      	add	r2, r1
 8010526:	b212      	sxth	r2, r2
 8010528:	4290      	cmp	r0, r2
 801052a:	d1e1      	bne.n	80104f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 801052c:	e7f6      	b.n	801051c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801052e:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8010532:	2e07      	cmp	r6, #7
 8010534:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8010538:	d812      	bhi.n	8010560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 801053a:	1c75      	adds	r5, r6, #1
 801053c:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8010540:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8010544:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8010548:	9d01      	ldr	r5, [sp, #4]
 801054a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801054e:	442c      	add	r4, r5
 8010550:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8010554:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8010558:	8061      	strh	r1, [r4, #2]
 801055a:	80a2      	strh	r2, [r4, #4]
 801055c:	80e3      	strh	r3, [r4, #6]
 801055e:	e581      	b.n	8010064 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8010560:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8010564:	3e01      	subs	r6, #1
 8010566:	445c      	add	r4, fp
 8010568:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 801056c:	f04f 37ff 	mov.w	r7, #4294967295
 8010570:	2500      	movs	r5, #0
 8010572:	9305      	str	r3, [sp, #20]
 8010574:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8010578:	1e72      	subs	r2, r6, #1
 801057a:	9302      	str	r3, [sp, #8]
 801057c:	4691      	mov	r9, r2
 801057e:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8010582:	9304      	str	r3, [sp, #16]
 8010584:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8010588:	f1b9 3fff 	cmp.w	r9, #4294967295
 801058c:	6818      	ldr	r0, [r3, #0]
 801058e:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8010592:	9207      	str	r2, [sp, #28]
 8010594:	bf16      	itet	ne
 8010596:	9905      	ldrne	r1, [sp, #20]
 8010598:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801059c:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80105a0:	9306      	str	r3, [sp, #24]
 80105a2:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80105a6:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80105aa:	fb18 f801 	smulbb	r8, r8, r1
 80105ae:	6859      	ldr	r1, [r3, #4]
 80105b0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80105b4:	4671      	mov	r1, lr
 80105b6:	a80c      	add	r0, sp, #48	@ 0x30
 80105b8:	f7ff fb6a 	bl	800fc90 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80105bc:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80105c0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 80105c4:	f04f 0c08 	mov.w	ip, #8
 80105c8:	9b04      	ldr	r3, [sp, #16]
 80105ca:	9a02      	ldr	r2, [sp, #8]
 80105cc:	fb10 f001 	smulbb	r0, r0, r1
 80105d0:	fb02 8803 	mla	r8, r2, r3, r8
 80105d4:	eba0 0108 	sub.w	r1, r0, r8
 80105d8:	fb90 f0fc 	sdiv	r0, r0, ip
 80105dc:	4288      	cmp	r0, r1
 80105de:	dc20      	bgt.n	8010622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 80105e0:	4551      	cmp	r1, sl
 80105e2:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80105e6:	da03      	bge.n	80105f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 80105e8:	b1d9      	cbz	r1, 8010622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 80105ea:	468a      	mov	sl, r1
 80105ec:	464f      	mov	r7, r9
 80105ee:	4635      	mov	r5, r6
 80105f0:	f109 39ff 	add.w	r9, r9, #4294967295
 80105f4:	f119 0f02 	cmn.w	r9, #2
 80105f8:	d1c6      	bne.n	8010588 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80105fa:	4616      	mov	r6, r2
 80105fc:	3201      	adds	r2, #1
 80105fe:	f1a4 0408 	sub.w	r4, r4, #8
 8010602:	d1b7      	bne.n	8010574 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8010604:	9b01      	ldr	r3, [sp, #4]
 8010606:	b2ac      	uxth	r4, r5
 8010608:	00ed      	lsls	r5, r5, #3
 801060a:	1958      	adds	r0, r3, r5
 801060c:	1c7b      	adds	r3, r7, #1
 801060e:	d10b      	bne.n	8010628 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8010610:	4601      	mov	r1, r0
 8010612:	9803      	ldr	r0, [sp, #12]
 8010614:	f7ff fb3c 	bl	800fc90 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010618:	4621      	mov	r1, r4
 801061a:	9801      	ldr	r0, [sp, #4]
 801061c:	f7ff fc8e 	bl	800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010620:	e4b6      	b.n	800ff90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8010622:	464f      	mov	r7, r9
 8010624:	4635      	mov	r5, r6
 8010626:	e7ed      	b.n	8010604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8010628:	9b01      	ldr	r3, [sp, #4]
 801062a:	00ff      	lsls	r7, r7, #3
 801062c:	445d      	add	r5, fp
 801062e:	19d9      	adds	r1, r3, r7
 8010630:	445f      	add	r7, fp
 8010632:	f7ff fb2d 	bl	800fc90 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8010636:	9b03      	ldr	r3, [sp, #12]
 8010638:	cb03      	ldmia	r3!, {r0, r1}
 801063a:	9b03      	ldr	r3, [sp, #12]
 801063c:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8010640:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8010644:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8010648:	6869      	ldr	r1, [r5, #4]
 801064a:	c303      	stmia	r3!, {r0, r1}
 801064c:	e7e4      	b.n	8010618 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 801064e:	bf00      	nop

08010650 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8010650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010654:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8010658:	b09b      	sub	sp, #108	@ 0x6c
 801065a:	4604      	mov	r4, r0
 801065c:	4630      	mov	r0, r6
 801065e:	f7fd fb3c 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010662:	4605      	mov	r5, r0
 8010664:	b948      	cbnz	r0, 801067a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8010666:	6823      	ldr	r3, [r4, #0]
 8010668:	4620      	mov	r0, r4
 801066a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801066c:	e896 0006 	ldmia.w	r6, {r1, r2}
 8010670:	4798      	blx	r3
 8010672:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8010676:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 801067a:	4bc5      	ldr	r3, [pc, #788]	@ (8010990 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 801067c:	681b      	ldr	r3, [r3, #0]
 801067e:	2b00      	cmp	r3, #0
 8010680:	d03f      	beq.n	8010702 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010682:	4dc4      	ldr	r5, [pc, #784]	@ (8010994 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8010684:	4628      	mov	r0, r5
 8010686:	f7fd fb28 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 801068a:	4606      	mov	r6, r0
 801068c:	2800      	cmp	r0, #0
 801068e:	d138      	bne.n	8010702 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8010690:	4628      	mov	r0, r5
 8010692:	f7ff f99b 	bl	800f9cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010696:	6823      	ldr	r3, [r4, #0]
 8010698:	6829      	ldr	r1, [r5, #0]
 801069a:	4620      	mov	r0, r4
 801069c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 801069e:	686a      	ldr	r2, [r5, #4]
 80106a0:	4798      	blx	r3
 80106a2:	802e      	strh	r6, [r5, #0]
 80106a4:	806e      	strh	r6, [r5, #2]
 80106a6:	80ae      	strh	r6, [r5, #4]
 80106a8:	80ee      	strh	r6, [r5, #6]
 80106aa:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 80106ae:	4dba      	ldr	r5, [pc, #744]	@ (8010998 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80106b0:	4640      	mov	r0, r8
 80106b2:	f7ff fbe7 	bl	800fe84 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80106b6:	882e      	ldrh	r6, [r5, #0]
 80106b8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80106bc:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80106c0:	4633      	mov	r3, r6
 80106c2:	42bb      	cmp	r3, r7
 80106c4:	d224      	bcs.n	8010710 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80106c6:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 80106ca:	2907      	cmp	r1, #7
 80106cc:	d816      	bhi.n	80106fc <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 80106ce:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80106d2:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 80106d6:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 80106da:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80106de:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80106e2:	1c4a      	adds	r2, r1, #1
 80106e4:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 80106e8:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80106ec:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80106f0:	f8a2 a002 	strh.w	sl, [r2, #2]
 80106f4:	f8a2 e004 	strh.w	lr, [r2, #4]
 80106f8:	f8a2 c006 	strh.w	ip, [r2, #6]
 80106fc:	3301      	adds	r3, #1
 80106fe:	b29b      	uxth	r3, r3
 8010700:	e7df      	b.n	80106c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8010702:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010706:	2b00      	cmp	r3, #0
 8010708:	d1cf      	bne.n	80106aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 801070a:	b01b      	add	sp, #108	@ 0x6c
 801070c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010710:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8010714:	42b3      	cmp	r3, r6
 8010716:	d90c      	bls.n	8010732 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8010718:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 801071c:	6822      	ldr	r2, [r4, #0]
 801071e:	3601      	adds	r6, #1
 8010720:	4620      	mov	r0, r4
 8010722:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8010724:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8010728:	b2b6      	uxth	r6, r6
 801072a:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801072e:	47b8      	blx	r7
 8010730:	e7ee      	b.n	8010710 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8010732:	4a9a      	ldr	r2, [pc, #616]	@ (801099c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010734:	6813      	ldr	r3, [r2, #0]
 8010736:	4691      	mov	r9, r2
 8010738:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 801073c:	2b01      	cmp	r3, #1
 801073e:	f040 80e0 	bne.w	8010902 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8010742:	8829      	ldrh	r1, [r5, #0]
 8010744:	2600      	movs	r6, #0
 8010746:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 801074a:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 801074e:	33ae      	adds	r3, #174	@ 0xae
 8010750:	428f      	cmp	r7, r1
 8010752:	f103 0308 	add.w	r3, r3, #8
 8010756:	dd0a      	ble.n	801076e <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8010758:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 801075c:	3101      	adds	r1, #1
 801075e:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8010762:	4402      	add	r2, r0
 8010764:	b212      	sxth	r2, r2
 8010766:	4296      	cmp	r6, r2
 8010768:	bfb8      	it	lt
 801076a:	4616      	movlt	r6, r2
 801076c:	e7f0      	b.n	8010750 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 801076e:	4b8c      	ldr	r3, [pc, #560]	@ (80109a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8010770:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 801099c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8010774:	881b      	ldrh	r3, [r3, #0]
 8010776:	2b0f      	cmp	r3, #15
 8010778:	bf8c      	ite	hi
 801077a:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 801077e:	f04f 0b01 	movls.w	fp, #1
 8010782:	2300      	movs	r3, #0
 8010784:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8010788:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 801078c:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8010790:	4b82      	ldr	r3, [pc, #520]	@ (801099c <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8010792:	4438      	add	r0, r7
 8010794:	b207      	sxth	r7, r0
 8010796:	6818      	ldr	r0, [r3, #0]
 8010798:	42b7      	cmp	r7, r6
 801079a:	6803      	ldr	r3, [r0, #0]
 801079c:	f280 8083 	bge.w	80108a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 80107a0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80107a4:	4798      	blx	r3
 80107a6:	eb07 030b 	add.w	r3, r7, fp
 80107aa:	4298      	cmp	r0, r3
 80107ac:	da07      	bge.n	80107be <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80107ae:	42b0      	cmp	r0, r6
 80107b0:	da05      	bge.n	80107be <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 80107b2:	4287      	cmp	r7, r0
 80107b4:	dd6c      	ble.n	8010890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80107b6:	2f00      	cmp	r7, #0
 80107b8:	dd6a      	ble.n	8010890 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 80107ba:	4630      	mov	r0, r6
 80107bc:	e004      	b.n	80107c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 80107be:	4287      	cmp	r7, r0
 80107c0:	dcfb      	bgt.n	80107ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 80107c2:	42b0      	cmp	r0, r6
 80107c4:	bfa8      	it	ge
 80107c6:	4630      	movge	r0, r6
 80107c8:	4b76      	ldr	r3, [pc, #472]	@ (80109a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80107ca:	1bc0      	subs	r0, r0, r7
 80107cc:	2200      	movs	r2, #0
 80107ce:	f8ad 7016 	strh.w	r7, [sp, #22]
 80107d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80107d6:	882f      	ldrh	r7, [r5, #0]
 80107d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80107dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80107e0:	f8ad 001a 	strh.w	r0, [sp, #26]
 80107e4:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80107e8:	42bb      	cmp	r3, r7
 80107ea:	d9cd      	bls.n	8010788 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80107ec:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80107f0:	ab07      	add	r3, sp, #28
 80107f2:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80107f6:	6851      	ldr	r1, [r2, #4]
 80107f8:	c303      	stmia	r3!, {r0, r1}
 80107fa:	a905      	add	r1, sp, #20
 80107fc:	a807      	add	r0, sp, #28
 80107fe:	f7ff f9af 	bl	800fb60 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8010802:	2800      	cmp	r0, #0
 8010804:	d04c      	beq.n	80108a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8010806:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801080a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801080e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8010812:	4686      	mov	lr, r0
 8010814:	4290      	cmp	r0, r2
 8010816:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801081a:	4450      	add	r0, sl
 801081c:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8010820:	bfb8      	it	lt
 8010822:	4696      	movlt	lr, r2
 8010824:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8010828:	4452      	add	r2, sl
 801082a:	b280      	uxth	r0, r0
 801082c:	4299      	cmp	r1, r3
 801082e:	468c      	mov	ip, r1
 8010830:	b292      	uxth	r2, r2
 8010832:	9302      	str	r3, [sp, #8]
 8010834:	bfb8      	it	lt
 8010836:	469c      	movlt	ip, r3
 8010838:	b203      	sxth	r3, r0
 801083a:	fa0f fa82 	sxth.w	sl, r2
 801083e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8010842:	f8ad c01e 	strh.w	ip, [sp, #30]
 8010846:	4553      	cmp	r3, sl
 8010848:	bfb8      	it	lt
 801084a:	4602      	movlt	r2, r0
 801084c:	9b02      	ldr	r3, [sp, #8]
 801084e:	eba2 020e 	sub.w	r2, r2, lr
 8010852:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010856:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801085a:	4411      	add	r1, r2
 801085c:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010860:	4413      	add	r3, r2
 8010862:	b289      	uxth	r1, r1
 8010864:	b29b      	uxth	r3, r3
 8010866:	b208      	sxth	r0, r1
 8010868:	b21a      	sxth	r2, r3
 801086a:	4290      	cmp	r0, r2
 801086c:	bfb8      	it	lt
 801086e:	460b      	movlt	r3, r1
 8010870:	eba3 030c 	sub.w	r3, r3, ip
 8010874:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8010878:	a807      	add	r0, sp, #28
 801087a:	f7fd fa2e 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 801087e:	b920      	cbnz	r0, 801088a <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8010880:	6823      	ldr	r3, [r4, #0]
 8010882:	a907      	add	r1, sp, #28
 8010884:	4620      	mov	r0, r4
 8010886:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010888:	4798      	blx	r3
 801088a:	3701      	adds	r7, #1
 801088c:	b2bf      	uxth	r7, r7
 801088e:	e7a9      	b.n	80107e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8010890:	f8d9 0000 	ldr.w	r0, [r9]
 8010894:	2101      	movs	r1, #1
 8010896:	6803      	ldr	r3, [r0, #0]
 8010898:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 801089c:	4798      	blx	r3
 801089e:	e773      	b.n	8010788 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80108a0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80108a4:	e7e8      	b.n	8010878 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 80108a6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80108a8:	4798      	blx	r3
 80108aa:	4b3f      	ldr	r3, [pc, #252]	@ (80109a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80108ac:	781b      	ldrb	r3, [r3, #0]
 80108ae:	2b00      	cmp	r3, #0
 80108b0:	f43f af2b 	beq.w	801070a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80108b4:	2300      	movs	r3, #0
 80108b6:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80108ba:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 80108be:	882b      	ldrh	r3, [r5, #0]
 80108c0:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 80108c4:	42ab      	cmp	r3, r5
 80108c6:	f4bf af20 	bcs.w	801070a <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 80108ca:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 80108ce:	2907      	cmp	r1, #7
 80108d0:	d814      	bhi.n	80108fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 80108d2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 80108d6:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 80108da:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 80108de:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 80108e2:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80108e6:	1c4a      	adds	r2, r1, #1
 80108e8:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 80108ec:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80108f0:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80108f4:	f8a2 c002 	strh.w	ip, [r2, #2]
 80108f8:	8097      	strh	r7, [r2, #4]
 80108fa:	80d6      	strh	r6, [r2, #6]
 80108fc:	3301      	adds	r3, #1
 80108fe:	b29b      	uxth	r3, r3
 8010900:	e7e0      	b.n	80108c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8010902:	2b02      	cmp	r3, #2
 8010904:	f040 8133 	bne.w	8010b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8010908:	4b28      	ldr	r3, [pc, #160]	@ (80109ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801090a:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801090e:	781b      	ldrb	r3, [r3, #0]
 8010910:	2b01      	cmp	r3, #1
 8010912:	f000 8098 	beq.w	8010a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010916:	882a      	ldrh	r2, [r5, #0]
 8010918:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 801091c:	3201      	adds	r2, #1
 801091e:	b292      	uxth	r2, r2
 8010920:	2900      	cmp	r1, #0
 8010922:	d0c2      	beq.n	80108aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010924:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8010928:	4694      	mov	ip, r2
 801092a:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 801092e:	f04f 0900 	mov.w	r9, #0
 8010932:	441e      	add	r6, r3
 8010934:	b236      	sxth	r6, r6
 8010936:	fa1f f38c 	uxth.w	r3, ip
 801093a:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801093e:	4299      	cmp	r1, r3
 8010940:	f240 80be 	bls.w	8010ac0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8010944:	4427      	add	r7, r4
 8010946:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801094a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 801094e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8010952:	4283      	cmp	r3, r0
 8010954:	f340 80a0 	ble.w	8010a98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 8010958:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 801095c:	46e1      	mov	r9, ip
 801095e:	4406      	add	r6, r0
 8010960:	b236      	sxth	r6, r6
 8010962:	429e      	cmp	r6, r3
 8010964:	bfa8      	it	ge
 8010966:	461e      	movge	r6, r3
 8010968:	f10c 0c01 	add.w	ip, ip, #1
 801096c:	e7e3      	b.n	8010936 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 801096e:	d10a      	bne.n	8010986 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8010970:	4562      	cmp	r2, ip
 8010972:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8010976:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801097a:	bfb8      	it	lt
 801097c:	4662      	movlt	r2, ip
 801097e:	4288      	cmp	r0, r1
 8010980:	bfb8      	it	lt
 8010982:	461f      	movlt	r7, r3
 8010984:	e086      	b.n	8010a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8010986:	428a      	cmp	r2, r1
 8010988:	bfb8      	it	lt
 801098a:	460a      	movlt	r2, r1
 801098c:	e082      	b.n	8010a94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 801098e:	bf00      	nop
 8010990:	20001ba4 	.word	0x20001ba4
 8010994:	20001bb0 	.word	0x20001bb0
 8010998:	20000178 	.word	0x20000178
 801099c:	20001b6c 	.word	0x20001b6c
 80109a0:	20001b62 	.word	0x20001b62
 80109a4:	20001b60 	.word	0x20001b60
 80109a8:	20001b6a 	.word	0x20001b6a
 80109ac:	20001b64 	.word	0x20001b64
 80109b0:	19a1      	adds	r1, r4, r6
 80109b2:	ab07      	add	r3, sp, #28
 80109b4:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80109b8:	6849      	ldr	r1, [r1, #4]
 80109ba:	c303      	stmia	r3!, {r0, r1}
 80109bc:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80109c0:	a807      	add	r0, sp, #28
 80109c2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80109c6:	2b13      	cmp	r3, #19
 80109c8:	440b      	add	r3, r1
 80109ca:	bfd8      	it	le
 80109cc:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80109d0:	1a9b      	subs	r3, r3, r2
 80109d2:	f8ad 201c 	strh.w	r2, [sp, #28]
 80109d6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80109da:	f7ff f811 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80109de:	a807      	add	r0, sp, #28
 80109e0:	f7fd f97b 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 80109e4:	bb78      	cbnz	r0, 8010a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80109e6:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 80109ea:	4426      	add	r6, r4
 80109ec:	f8d9 0000 	ldr.w	r0, [r9]
 80109f0:	f1bc 0f14 	cmp.w	ip, #20
 80109f4:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80109f8:	f8d0 e000 	ldr.w	lr, [r0]
 80109fc:	bfa8      	it	ge
 80109fe:	f04f 0c14 	movge.w	ip, #20
 8010a02:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8010a06:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010a0a:	fa1f fc8c 	uxth.w	ip, ip
 8010a0e:	f8cd c000 	str.w	ip, [sp]
 8010a12:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8010a16:	47d8      	blx	fp
 8010a18:	4683      	mov	fp, r0
 8010a1a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8010a1e:	a807      	add	r0, sp, #28
 8010a20:	f7fe ffd4 	bl	800f9cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8010a24:	6823      	ldr	r3, [r4, #0]
 8010a26:	4620      	mov	r0, r4
 8010a28:	a907      	add	r1, sp, #28
 8010a2a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010a2c:	4798      	blx	r3
 8010a2e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8010a32:	eba0 000b 	sub.w	r0, r0, fp
 8010a36:	b200      	sxth	r0, r0
 8010a38:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8010a3c:	b918      	cbnz	r0, 8010a46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8010a3e:	b2b9      	uxth	r1, r7
 8010a40:	4650      	mov	r0, sl
 8010a42:	f7ff fa7b 	bl	800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010a46:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8010a4a:	f1bb 0f00 	cmp.w	fp, #0
 8010a4e:	f43f af2c 	beq.w	80108aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010a52:	882b      	ldrh	r3, [r5, #0]
 8010a54:	2700      	movs	r7, #0
 8010a56:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8010a5a:	3301      	adds	r3, #1
 8010a5c:	b29b      	uxth	r3, r3
 8010a5e:	b299      	uxth	r1, r3
 8010a60:	00fe      	lsls	r6, r7, #3
 8010a62:	458b      	cmp	fp, r1
 8010a64:	d9a4      	bls.n	80109b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 8010a66:	4426      	add	r6, r4
 8010a68:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8010a6c:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8010a70:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8010a74:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8010a78:	4408      	add	r0, r1
 8010a7a:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8010a7e:	4461      	add	r1, ip
 8010a80:	b200      	sxth	r0, r0
 8010a82:	b209      	sxth	r1, r1
 8010a84:	4288      	cmp	r0, r1
 8010a86:	f6bf af72 	bge.w	801096e <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 8010a8a:	4584      	cmp	ip, r0
 8010a8c:	4662      	mov	r2, ip
 8010a8e:	461f      	mov	r7, r3
 8010a90:	bfb8      	it	lt
 8010a92:	4602      	movlt	r2, r0
 8010a94:	3301      	adds	r3, #1
 8010a96:	e7e2      	b.n	8010a5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 8010a98:	d10e      	bne.n	8010ab8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 8010a9a:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8010a9e:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8010aa2:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8010aa6:	4473      	add	r3, lr
 8010aa8:	b21b      	sxth	r3, r3
 8010aaa:	429e      	cmp	r6, r3
 8010aac:	bfa8      	it	ge
 8010aae:	461e      	movge	r6, r3
 8010ab0:	4287      	cmp	r7, r0
 8010ab2:	bfb8      	it	lt
 8010ab4:	46e1      	movlt	r9, ip
 8010ab6:	e757      	b.n	8010968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010ab8:	4286      	cmp	r6, r0
 8010aba:	bfa8      	it	ge
 8010abc:	4606      	movge	r6, r0
 8010abe:	e753      	b.n	8010968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8010ac0:	eb0a 0007 	add.w	r0, sl, r7
 8010ac4:	4427      	add	r7, r4
 8010ac6:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8010aca:	f1bb 0f13 	cmp.w	fp, #19
 8010ace:	bfdc      	itt	le
 8010ad0:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8010ad4:	445e      	addle	r6, fp
 8010ad6:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8010ada:	bfd8      	it	le
 8010adc:	b236      	sxthle	r6, r6
 8010ade:	f7fd f8fc 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010ae2:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8010ae6:	2800      	cmp	r0, #0
 8010ae8:	f47f af1a 	bne.w	8010920 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8010aec:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8010af0:	fa1f fb8b 	uxth.w	fp, fp
 8010af4:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8010af8:	1ab6      	subs	r6, r6, r2
 8010afa:	4829      	ldr	r0, [pc, #164]	@ (8010ba0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8010afc:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 8010b00:	2e14      	cmp	r6, #20
 8010b02:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8010b06:	6800      	ldr	r0, [r0, #0]
 8010b08:	bfa8      	it	ge
 8010b0a:	2614      	movge	r6, #20
 8010b0c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010b10:	f8ad 201e 	strh.w	r2, [sp, #30]
 8010b14:	b289      	uxth	r1, r1
 8010b16:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010b1a:	b2b6      	uxth	r6, r6
 8010b1c:	f8d0 c000 	ldr.w	ip, [r0]
 8010b20:	b292      	uxth	r2, r2
 8010b22:	455e      	cmp	r6, fp
 8010b24:	bf94      	ite	ls
 8010b26:	9600      	strls	r6, [sp, #0]
 8010b28:	f8cd b000 	strhi.w	fp, [sp]
 8010b2c:	b29b      	uxth	r3, r3
 8010b2e:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8010b32:	47b0      	blx	r6
 8010b34:	6823      	ldr	r3, [r4, #0]
 8010b36:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8010b3a:	a907      	add	r1, sp, #28
 8010b3c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010b3e:	4620      	mov	r0, r4
 8010b40:	4798      	blx	r3
 8010b42:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8010b46:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 8010b4a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8010b4e:	1a5b      	subs	r3, r3, r1
 8010b50:	440a      	add	r2, r1
 8010b52:	b21b      	sxth	r3, r3
 8010b54:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8010b58:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8010b5c:	2b00      	cmp	r3, #0
 8010b5e:	f47f aeda 	bne.w	8010916 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8010b62:	fa1f f189 	uxth.w	r1, r9
 8010b66:	4650      	mov	r0, sl
 8010b68:	f7ff f9e8 	bl	800ff3c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8010b6c:	e6d3      	b.n	8010916 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8010b6e:	882e      	ldrh	r6, [r5, #0]
 8010b70:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8010b74:	42b3      	cmp	r3, r6
 8010b76:	f67f ae98 	bls.w	80108aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8010b7a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8010b7e:	ab07      	add	r3, sp, #28
 8010b80:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8010b84:	6851      	ldr	r1, [r2, #4]
 8010b86:	c303      	stmia	r3!, {r0, r1}
 8010b88:	a807      	add	r0, sp, #28
 8010b8a:	f7fd f8a6 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 8010b8e:	b920      	cbnz	r0, 8010b9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8010b90:	6823      	ldr	r3, [r4, #0]
 8010b92:	a907      	add	r1, sp, #28
 8010b94:	4620      	mov	r0, r4
 8010b96:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8010b98:	4798      	blx	r3
 8010b9a:	3601      	adds	r6, #1
 8010b9c:	b2b6      	uxth	r6, r6
 8010b9e:	e7e7      	b.n	8010b70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8010ba0:	20001b6c 	.word	0x20001b6c

08010ba4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8010ba4:	4b03      	ldr	r3, [pc, #12]	@ (8010bb4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8010ba6:	2200      	movs	r2, #0
 8010ba8:	801a      	strh	r2, [r3, #0]
 8010baa:	805a      	strh	r2, [r3, #2]
 8010bac:	809a      	strh	r2, [r3, #4]
 8010bae:	80da      	strh	r2, [r3, #6]
 8010bb0:	4770      	bx	lr
 8010bb2:	bf00      	nop
 8010bb4:	20001bb0 	.word	0x20001bb0

08010bb8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8010bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bbc:	b09d      	sub	sp, #116	@ 0x74
 8010bbe:	4606      	mov	r6, r0
 8010bc0:	4614      	mov	r4, r2
 8010bc2:	468a      	mov	sl, r1
 8010bc4:	a803      	add	r0, sp, #12
 8010bc6:	461d      	mov	r5, r3
 8010bc8:	f000 fd72 	bl	80116b0 <_ZN8touchgfx12TextProviderC1Ev>
 8010bcc:	6833      	ldr	r3, [r6, #0]
 8010bce:	4630      	mov	r0, r6
 8010bd0:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8010bd4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010bd6:	4798      	blx	r3
 8010bd8:	6833      	ldr	r3, [r6, #0]
 8010bda:	4607      	mov	r7, r0
 8010bdc:	4630      	mov	r0, r6
 8010bde:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010be0:	4798      	blx	r3
 8010be2:	462a      	mov	r2, r5
 8010be4:	2500      	movs	r5, #0
 8010be6:	4621      	mov	r1, r4
 8010be8:	9000      	str	r0, [sp, #0]
 8010bea:	463b      	mov	r3, r7
 8010bec:	462c      	mov	r4, r5
 8010bee:	46a9      	mov	r9, r5
 8010bf0:	46a8      	mov	r8, r5
 8010bf2:	a803      	add	r0, sp, #12
 8010bf4:	f000 fdaf 	bl	8011756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010bf8:	2300      	movs	r3, #0
 8010bfa:	9302      	str	r3, [sp, #8]
 8010bfc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8010c00:	429c      	cmp	r4, r3
 8010c02:	d002      	beq.n	8010c0a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8010c04:	455c      	cmp	r4, fp
 8010c06:	bf18      	it	ne
 8010c08:	4625      	movne	r5, r4
 8010c0a:	ab02      	add	r3, sp, #8
 8010c0c:	4632      	mov	r2, r6
 8010c0e:	4651      	mov	r1, sl
 8010c10:	a803      	add	r0, sp, #12
 8010c12:	f001 f8c3 	bl	8011d9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010c16:	4604      	mov	r4, r0
 8010c18:	b108      	cbz	r0, 8010c1e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8010c1a:	280a      	cmp	r0, #10
 8010c1c:	d10a      	bne.n	8010c34 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8010c1e:	45c1      	cmp	r9, r8
 8010c20:	bf38      	it	cc
 8010c22:	46c1      	movcc	r9, r8
 8010c24:	f04f 0800 	mov.w	r8, #0
 8010c28:	2c00      	cmp	r4, #0
 8010c2a:	d1e5      	bne.n	8010bf8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010c2c:	4648      	mov	r0, r9
 8010c2e:	b01d      	add	sp, #116	@ 0x74
 8010c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c34:	9a02      	ldr	r2, [sp, #8]
 8010c36:	2a00      	cmp	r2, #0
 8010c38:	d0de      	beq.n	8010bf8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8010c3a:	7b57      	ldrb	r7, [r2, #13]
 8010c3c:	4629      	mov	r1, r5
 8010c3e:	6833      	ldr	r3, [r6, #0]
 8010c40:	007f      	lsls	r7, r7, #1
 8010c42:	8894      	ldrh	r4, [r2, #4]
 8010c44:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8010c46:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8010c4a:	7a97      	ldrb	r7, [r2, #10]
 8010c4c:	4307      	orrs	r7, r0
 8010c4e:	4630      	mov	r0, r6
 8010c50:	4798      	blx	r3
 8010c52:	4438      	add	r0, r7
 8010c54:	4480      	add	r8, r0
 8010c56:	fa1f f888 	uxth.w	r8, r8
 8010c5a:	e7e5      	b.n	8010c28 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08010c5c <_ZNK8touchgfx4Font12getCharWidthEt>:
 8010c5c:	b508      	push	{r3, lr}
 8010c5e:	6803      	ldr	r3, [r0, #0]
 8010c60:	68db      	ldr	r3, [r3, #12]
 8010c62:	4798      	blx	r3
 8010c64:	b128      	cbz	r0, 8010c72 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8010c66:	7b43      	ldrb	r3, [r0, #13]
 8010c68:	7a80      	ldrb	r0, [r0, #10]
 8010c6a:	005b      	lsls	r3, r3, #1
 8010c6c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8010c70:	4318      	orrs	r0, r3
 8010c72:	bd08      	pop	{r3, pc}

08010c74 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8010c74:	b40e      	push	{r1, r2, r3}
 8010c76:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010c78:	b09e      	sub	sp, #120	@ 0x78
 8010c7a:	4605      	mov	r5, r0
 8010c7c:	ab23      	add	r3, sp, #140	@ 0x8c
 8010c7e:	a805      	add	r0, sp, #20
 8010c80:	f853 4b04 	ldr.w	r4, [r3], #4
 8010c84:	9303      	str	r3, [sp, #12]
 8010c86:	f000 fd13 	bl	80116b0 <_ZN8touchgfx12TextProviderC1Ev>
 8010c8a:	682b      	ldr	r3, [r5, #0]
 8010c8c:	4628      	mov	r0, r5
 8010c8e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010c90:	4798      	blx	r3
 8010c92:	682b      	ldr	r3, [r5, #0]
 8010c94:	4606      	mov	r6, r0
 8010c96:	4628      	mov	r0, r5
 8010c98:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010c9a:	4798      	blx	r3
 8010c9c:	4633      	mov	r3, r6
 8010c9e:	4621      	mov	r1, r4
 8010ca0:	ae1e      	add	r6, sp, #120	@ 0x78
 8010ca2:	2400      	movs	r4, #0
 8010ca4:	9000      	str	r0, [sp, #0]
 8010ca6:	9a03      	ldr	r2, [sp, #12]
 8010ca8:	a805      	add	r0, sp, #20
 8010caa:	f000 fd54 	bl	8011756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010cae:	f846 4d68 	str.w	r4, [r6, #-104]!
 8010cb2:	462a      	mov	r2, r5
 8010cb4:	4633      	mov	r3, r6
 8010cb6:	4621      	mov	r1, r4
 8010cb8:	a805      	add	r0, sp, #20
 8010cba:	f001 f86f 	bl	8011d9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010cbe:	b300      	cbz	r0, 8010d02 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 8010cc0:	280a      	cmp	r0, #10
 8010cc2:	d01a      	beq.n	8010cfa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8010cc4:	9f04      	ldr	r7, [sp, #16]
 8010cc6:	b1c7      	cbz	r7, 8010cfa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8010cc8:	7b78      	ldrb	r0, [r7, #13]
 8010cca:	7a3b      	ldrb	r3, [r7, #8]
 8010ccc:	00c1      	lsls	r1, r0, #3
 8010cce:	88ea      	ldrh	r2, [r5, #6]
 8010cd0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8010cd4:	4319      	orrs	r1, r3
 8010cd6:	0643      	lsls	r3, r0, #25
 8010cd8:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8010cdc:	bf48      	it	mi
 8010cde:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 8010ce2:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8010ce6:	bf48      	it	mi
 8010ce8:	b219      	sxthmi	r1, r3
 8010cea:	79fb      	ldrb	r3, [r7, #7]
 8010cec:	4303      	orrs	r3, r0
 8010cee:	4413      	add	r3, r2
 8010cf0:	1a5b      	subs	r3, r3, r1
 8010cf2:	b21b      	sxth	r3, r3
 8010cf4:	429c      	cmp	r4, r3
 8010cf6:	bfb8      	it	lt
 8010cf8:	461c      	movlt	r4, r3
 8010cfa:	4633      	mov	r3, r6
 8010cfc:	462a      	mov	r2, r5
 8010cfe:	2100      	movs	r1, #0
 8010d00:	e7da      	b.n	8010cb8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8010d02:	b2a0      	uxth	r0, r4
 8010d04:	b01e      	add	sp, #120	@ 0x78
 8010d06:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010d0a:	b003      	add	sp, #12
 8010d0c:	4770      	bx	lr

08010d0e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8010d0e:	7a43      	ldrb	r3, [r0, #9]
 8010d10:	8880      	ldrh	r0, [r0, #4]
 8010d12:	4418      	add	r0, r3
 8010d14:	b280      	uxth	r0, r0
 8010d16:	4770      	bx	lr

08010d18 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8010d18:	6803      	ldr	r3, [r0, #0]
 8010d1a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010d1c:	4718      	bx	r3

08010d1e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8010d1e:	b40e      	push	{r1, r2, r3}
 8010d20:	b570      	push	{r4, r5, r6, lr}
 8010d22:	b09d      	sub	sp, #116	@ 0x74
 8010d24:	4604      	mov	r4, r0
 8010d26:	ab21      	add	r3, sp, #132	@ 0x84
 8010d28:	a803      	add	r0, sp, #12
 8010d2a:	f853 5b04 	ldr.w	r5, [r3], #4
 8010d2e:	9302      	str	r3, [sp, #8]
 8010d30:	f000 fcbe 	bl	80116b0 <_ZN8touchgfx12TextProviderC1Ev>
 8010d34:	6823      	ldr	r3, [r4, #0]
 8010d36:	4620      	mov	r0, r4
 8010d38:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010d3a:	4798      	blx	r3
 8010d3c:	6823      	ldr	r3, [r4, #0]
 8010d3e:	4606      	mov	r6, r0
 8010d40:	4620      	mov	r0, r4
 8010d42:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010d44:	2401      	movs	r4, #1
 8010d46:	4798      	blx	r3
 8010d48:	4633      	mov	r3, r6
 8010d4a:	9000      	str	r0, [sp, #0]
 8010d4c:	4629      	mov	r1, r5
 8010d4e:	9a02      	ldr	r2, [sp, #8]
 8010d50:	a803      	add	r0, sp, #12
 8010d52:	f000 fd00 	bl	8011756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010d56:	a803      	add	r0, sp, #12
 8010d58:	f001 f8a0 	bl	8011e9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010d5c:	b2a3      	uxth	r3, r4
 8010d5e:	b138      	cbz	r0, 8010d70 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8010d60:	280a      	cmp	r0, #10
 8010d62:	a803      	add	r0, sp, #12
 8010d64:	bf04      	itt	eq
 8010d66:	3301      	addeq	r3, #1
 8010d68:	b21c      	sxtheq	r4, r3
 8010d6a:	f001 f897 	bl	8011e9c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010d6e:	e7f5      	b.n	8010d5c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8010d70:	4618      	mov	r0, r3
 8010d72:	b01d      	add	sp, #116	@ 0x74
 8010d74:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d78:	b003      	add	sp, #12
 8010d7a:	4770      	bx	lr

08010d7c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8010d7c:	b40e      	push	{r1, r2, r3}
 8010d7e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010d80:	b09e      	sub	sp, #120	@ 0x78
 8010d82:	4604      	mov	r4, r0
 8010d84:	ab23      	add	r3, sp, #140	@ 0x8c
 8010d86:	a805      	add	r0, sp, #20
 8010d88:	f853 5b04 	ldr.w	r5, [r3], #4
 8010d8c:	9303      	str	r3, [sp, #12]
 8010d8e:	f000 fc8f 	bl	80116b0 <_ZN8touchgfx12TextProviderC1Ev>
 8010d92:	6823      	ldr	r3, [r4, #0]
 8010d94:	4620      	mov	r0, r4
 8010d96:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8010d98:	4798      	blx	r3
 8010d9a:	6823      	ldr	r3, [r4, #0]
 8010d9c:	4606      	mov	r6, r0
 8010d9e:	4620      	mov	r0, r4
 8010da0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8010da2:	4798      	blx	r3
 8010da4:	4633      	mov	r3, r6
 8010da6:	4629      	mov	r1, r5
 8010da8:	9000      	str	r0, [sp, #0]
 8010daa:	9a03      	ldr	r2, [sp, #12]
 8010dac:	a805      	add	r0, sp, #20
 8010dae:	f000 fcd2 	bl	8011756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010db2:	ad1e      	add	r5, sp, #120	@ 0x78
 8010db4:	2100      	movs	r1, #0
 8010db6:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8010dba:	4622      	mov	r2, r4
 8010dbc:	a805      	add	r0, sp, #20
 8010dbe:	f845 1d68 	str.w	r1, [r5, #-104]!
 8010dc2:	462b      	mov	r3, r5
 8010dc4:	f000 ffea 	bl	8011d9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010dc8:	b1d8      	cbz	r0, 8010e02 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8010dca:	280a      	cmp	r0, #10
 8010dcc:	d012      	beq.n	8010df4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010dce:	9804      	ldr	r0, [sp, #16]
 8010dd0:	b180      	cbz	r0, 8010df4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8010dd2:	7b47      	ldrb	r7, [r0, #13]
 8010dd4:	88e2      	ldrh	r2, [r4, #6]
 8010dd6:	00fb      	lsls	r3, r7, #3
 8010dd8:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8010ddc:	7a03      	ldrb	r3, [r0, #8]
 8010dde:	430b      	orrs	r3, r1
 8010de0:	0679      	lsls	r1, r7, #25
 8010de2:	bf44      	itt	mi
 8010de4:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8010de8:	b21b      	sxthmi	r3, r3
 8010dea:	1ad3      	subs	r3, r2, r3
 8010dec:	b21b      	sxth	r3, r3
 8010dee:	429e      	cmp	r6, r3
 8010df0:	bfa8      	it	ge
 8010df2:	461e      	movge	r6, r3
 8010df4:	462b      	mov	r3, r5
 8010df6:	4622      	mov	r2, r4
 8010df8:	2100      	movs	r1, #0
 8010dfa:	a805      	add	r0, sp, #20
 8010dfc:	f000 ffce 	bl	8011d9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010e00:	e7e2      	b.n	8010dc8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8010e02:	4630      	mov	r0, r6
 8010e04:	b01e      	add	sp, #120	@ 0x78
 8010e06:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8010e0a:	b003      	add	sp, #12
 8010e0c:	4770      	bx	lr

08010e0e <_ZNK8touchgfx8Drawable10invalidateEv>:
 8010e0e:	b513      	push	{r0, r1, r4, lr}
 8010e10:	6803      	ldr	r3, [r0, #0]
 8010e12:	2400      	movs	r4, #0
 8010e14:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8010e18:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010e1c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8010e20:	4669      	mov	r1, sp
 8010e22:	691b      	ldr	r3, [r3, #16]
 8010e24:	9400      	str	r4, [sp, #0]
 8010e26:	f8ad 2006 	strh.w	r2, [sp, #6]
 8010e2a:	4798      	blx	r3
 8010e2c:	b002      	add	sp, #8
 8010e2e:	bd10      	pop	{r4, pc}

08010e30 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8010e30:	b538      	push	{r3, r4, r5, lr}
 8010e32:	680b      	ldr	r3, [r1, #0]
 8010e34:	460c      	mov	r4, r1
 8010e36:	4605      	mov	r5, r0
 8010e38:	68db      	ldr	r3, [r3, #12]
 8010e3a:	4798      	blx	r3
 8010e3c:	6823      	ldr	r3, [r4, #0]
 8010e3e:	4620      	mov	r0, r4
 8010e40:	4629      	mov	r1, r5
 8010e42:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010e44:	4798      	blx	r3
 8010e46:	4628      	mov	r0, r5
 8010e48:	bd38      	pop	{r3, r4, r5, pc}

08010e4a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8010e4a:	b410      	push	{r4}
 8010e4c:	880a      	ldrh	r2, [r1, #0]
 8010e4e:	8884      	ldrh	r4, [r0, #4]
 8010e50:	4422      	add	r2, r4
 8010e52:	800a      	strh	r2, [r1, #0]
 8010e54:	884a      	ldrh	r2, [r1, #2]
 8010e56:	88c4      	ldrh	r4, [r0, #6]
 8010e58:	4422      	add	r2, r4
 8010e5a:	804a      	strh	r2, [r1, #2]
 8010e5c:	6940      	ldr	r0, [r0, #20]
 8010e5e:	b120      	cbz	r0, 8010e6a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8010e60:	6803      	ldr	r3, [r0, #0]
 8010e62:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010e68:	4718      	bx	r3
 8010e6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010e6e:	4770      	bx	lr

08010e70 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8010e70:	b570      	push	{r4, r5, r6, lr}
 8010e72:	8882      	ldrh	r2, [r0, #4]
 8010e74:	460c      	mov	r4, r1
 8010e76:	880b      	ldrh	r3, [r1, #0]
 8010e78:	4605      	mov	r5, r0
 8010e7a:	4413      	add	r3, r2
 8010e7c:	800b      	strh	r3, [r1, #0]
 8010e7e:	884b      	ldrh	r3, [r1, #2]
 8010e80:	88c2      	ldrh	r2, [r0, #6]
 8010e82:	4413      	add	r3, r2
 8010e84:	804b      	strh	r3, [r1, #2]
 8010e86:	1d01      	adds	r1, r0, #4
 8010e88:	4620      	mov	r0, r4
 8010e8a:	f7fc fee3 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 8010e8e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010e92:	2b00      	cmp	r3, #0
 8010e94:	dd0b      	ble.n	8010eae <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010e96:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010e9a:	2b00      	cmp	r3, #0
 8010e9c:	dd07      	ble.n	8010eae <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010e9e:	6968      	ldr	r0, [r5, #20]
 8010ea0:	b128      	cbz	r0, 8010eae <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8010ea2:	6803      	ldr	r3, [r0, #0]
 8010ea4:	4621      	mov	r1, r4
 8010ea6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8010ea8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010eac:	4718      	bx	r3
 8010eae:	bd70      	pop	{r4, r5, r6, pc}

08010eb0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8010eb0:	b570      	push	{r4, r5, r6, lr}
 8010eb2:	8882      	ldrh	r2, [r0, #4]
 8010eb4:	460c      	mov	r4, r1
 8010eb6:	880b      	ldrh	r3, [r1, #0]
 8010eb8:	4605      	mov	r5, r0
 8010eba:	4413      	add	r3, r2
 8010ebc:	800b      	strh	r3, [r1, #0]
 8010ebe:	884b      	ldrh	r3, [r1, #2]
 8010ec0:	88c2      	ldrh	r2, [r0, #6]
 8010ec2:	4413      	add	r3, r2
 8010ec4:	804b      	strh	r3, [r1, #2]
 8010ec6:	1d01      	adds	r1, r0, #4
 8010ec8:	4620      	mov	r0, r4
 8010eca:	f7fc fec3 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 8010ece:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8010ed2:	2b00      	cmp	r3, #0
 8010ed4:	dd19      	ble.n	8010f0a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010ed6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8010eda:	2b00      	cmp	r3, #0
 8010edc:	dd15      	ble.n	8010f0a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010ede:	6968      	ldr	r0, [r5, #20]
 8010ee0:	b128      	cbz	r0, 8010eee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8010ee2:	6803      	ldr	r3, [r0, #0]
 8010ee4:	4621      	mov	r1, r4
 8010ee6:	691b      	ldr	r3, [r3, #16]
 8010ee8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010eec:	4718      	bx	r3
 8010eee:	4b07      	ldr	r3, [pc, #28]	@ (8010f0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8010ef0:	681b      	ldr	r3, [r3, #0]
 8010ef2:	3304      	adds	r3, #4
 8010ef4:	429d      	cmp	r5, r3
 8010ef6:	d108      	bne.n	8010f0a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8010ef8:	f7fe ff10 	bl	800fd1c <_ZN8touchgfx11Application11getInstanceEv>
 8010efc:	6803      	ldr	r3, [r0, #0]
 8010efe:	6821      	ldr	r1, [r4, #0]
 8010f00:	6862      	ldr	r2, [r4, #4]
 8010f02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8010f04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f08:	4718      	bx	r3
 8010f0a:	bd70      	pop	{r4, r5, r6, pc}
 8010f0c:	20001ba8 	.word	0x20001ba8

08010f10 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8010f10:	b570      	push	{r4, r5, r6, lr}
 8010f12:	4604      	mov	r4, r0
 8010f14:	4616      	mov	r6, r2
 8010f16:	460d      	mov	r5, r1
 8010f18:	b901      	cbnz	r1, 8010f1c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8010f1a:	b192      	cbz	r2, 8010f42 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8010f1c:	6823      	ldr	r3, [r4, #0]
 8010f1e:	4620      	mov	r0, r4
 8010f20:	699b      	ldr	r3, [r3, #24]
 8010f22:	4798      	blx	r3
 8010f24:	88e2      	ldrh	r2, [r4, #6]
 8010f26:	88a1      	ldrh	r1, [r4, #4]
 8010f28:	4620      	mov	r0, r4
 8010f2a:	4432      	add	r2, r6
 8010f2c:	4429      	add	r1, r5
 8010f2e:	b212      	sxth	r2, r2
 8010f30:	b209      	sxth	r1, r1
 8010f32:	f7f9 ff0c 	bl	800ad4e <_ZN8touchgfx8Drawable5setXYEss>
 8010f36:	6823      	ldr	r3, [r4, #0]
 8010f38:	4620      	mov	r0, r4
 8010f3a:	699b      	ldr	r3, [r3, #24]
 8010f3c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f40:	4718      	bx	r3
 8010f42:	bd70      	pop	{r4, r5, r6, pc}

08010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8010f44:	b510      	push	{r4, lr}
 8010f46:	2300      	movs	r3, #0
 8010f48:	4604      	mov	r4, r0
 8010f4a:	4608      	mov	r0, r1
 8010f4c:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8010f50:	8023      	strh	r3, [r4, #0]
 8010f52:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8010f56:	8063      	strh	r3, [r4, #2]
 8010f58:	6803      	ldr	r3, [r0, #0]
 8010f5a:	80a1      	strh	r1, [r4, #4]
 8010f5c:	4621      	mov	r1, r4
 8010f5e:	80e2      	strh	r2, [r4, #6]
 8010f60:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8010f62:	4798      	blx	r3
 8010f64:	4620      	mov	r0, r4
 8010f66:	bd10      	pop	{r4, pc}

08010f68 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8010f68:	b530      	push	{r4, r5, lr}
 8010f6a:	8083      	strh	r3, [r0, #4]
 8010f6c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8010f70:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8010f74:	80c3      	strh	r3, [r0, #6]
 8010f76:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010f7a:	6141      	str	r1, [r0, #20]
 8010f7c:	7203      	strb	r3, [r0, #8]
 8010f7e:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8010f82:	8302      	strh	r2, [r0, #24]
 8010f84:	7243      	strb	r3, [r0, #9]
 8010f86:	7a83      	ldrb	r3, [r0, #10]
 8010f88:	f365 0306 	bfi	r3, r5, #0, #7
 8010f8c:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8010f90:	f365 13c7 	bfi	r3, r5, #7, #1
 8010f94:	7283      	strb	r3, [r0, #10]
 8010f96:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8010f9a:	72c3      	strb	r3, [r0, #11]
 8010f9c:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8010fa0:	7303      	strb	r3, [r0, #12]
 8010fa2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8010fa6:	81c3      	strh	r3, [r0, #14]
 8010fa8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8010fac:	8203      	strh	r3, [r0, #16]
 8010fae:	4b01      	ldr	r3, [pc, #4]	@ (8010fb4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8010fb0:	6003      	str	r3, [r0, #0]
 8010fb2:	bd30      	pop	{r4, r5, pc}
 8010fb4:	0802302c 	.word	0x0802302c

08010fb8 <_ZNK8touchgfx9ConstFont4findEt>:
 8010fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fba:	6944      	ldr	r4, [r0, #20]
 8010fbc:	b3bc      	cbz	r4, 801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fbe:	88a3      	ldrh	r3, [r4, #4]
 8010fc0:	8b02      	ldrh	r2, [r0, #24]
 8010fc2:	1acb      	subs	r3, r1, r3
 8010fc4:	f102 32ff 	add.w	r2, r2, #4294967295
 8010fc8:	d431      	bmi.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fca:	4293      	cmp	r3, r2
 8010fcc:	dd0c      	ble.n	8010fe8 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8010fce:	230e      	movs	r3, #14
 8010fd0:	fb03 4302 	mla	r3, r3, r2, r4
 8010fd4:	889b      	ldrh	r3, [r3, #4]
 8010fd6:	1a5b      	subs	r3, r3, r1
 8010fd8:	1ad3      	subs	r3, r2, r3
 8010fda:	429a      	cmp	r2, r3
 8010fdc:	db27      	blt.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010fde:	2b00      	cmp	r3, #0
 8010fe0:	bfbc      	itt	lt
 8010fe2:	2302      	movlt	r3, #2
 8010fe4:	fb92 f3f3 	sdivlt	r3, r2, r3
 8010fe8:	2500      	movs	r5, #0
 8010fea:	260e      	movs	r6, #14
 8010fec:	4295      	cmp	r5, r2
 8010fee:	dc1e      	bgt.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8010ff0:	fb06 4003 	mla	r0, r6, r3, r4
 8010ff4:	8887      	ldrh	r7, [r0, #4]
 8010ff6:	42b9      	cmp	r1, r7
 8010ff8:	d01a      	beq.n	8011030 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8010ffa:	d20d      	bcs.n	8011018 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8010ffc:	1e5a      	subs	r2, r3, #1
 8010ffe:	4295      	cmp	r5, r2
 8011000:	dc15      	bgt.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011002:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8011006:	1a5b      	subs	r3, r3, r1
 8011008:	1ad3      	subs	r3, r2, r3
 801100a:	429a      	cmp	r2, r3
 801100c:	db0f      	blt.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801100e:	429d      	cmp	r5, r3
 8011010:	ddec      	ble.n	8010fec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011012:	1953      	adds	r3, r2, r5
 8011014:	105b      	asrs	r3, r3, #1
 8011016:	e7e9      	b.n	8010fec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8011018:	1c5d      	adds	r5, r3, #1
 801101a:	42aa      	cmp	r2, r5
 801101c:	db07      	blt.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801101e:	8a43      	ldrh	r3, [r0, #18]
 8011020:	1acb      	subs	r3, r1, r3
 8011022:	442b      	add	r3, r5
 8011024:	429d      	cmp	r5, r3
 8011026:	dc02      	bgt.n	801102e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8011028:	429a      	cmp	r2, r3
 801102a:	dadf      	bge.n	8010fec <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801102c:	e7f1      	b.n	8011012 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801102e:	2000      	movs	r0, #0
 8011030:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011032 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8011032:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011034:	4604      	mov	r4, r0
 8011036:	4617      	mov	r7, r2
 8011038:	461e      	mov	r6, r3
 801103a:	b911      	cbnz	r1, 8011042 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801103c:	2500      	movs	r5, #0
 801103e:	4628      	mov	r0, r5
 8011040:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011042:	290a      	cmp	r1, #10
 8011044:	d0fa      	beq.n	801103c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011046:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801104a:	4291      	cmp	r1, r2
 801104c:	d0f6      	beq.n	801103c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801104e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8011052:	4291      	cmp	r1, r2
 8011054:	d0f2      	beq.n	801103c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011056:	f7ff ffaf 	bl	8010fb8 <_ZNK8touchgfx9ConstFont4findEt>
 801105a:	4605      	mov	r5, r0
 801105c:	b950      	cbnz	r0, 8011074 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801105e:	6823      	ldr	r3, [r4, #0]
 8011060:	4620      	mov	r0, r4
 8011062:	691b      	ldr	r3, [r3, #16]
 8011064:	4798      	blx	r3
 8011066:	4601      	mov	r1, r0
 8011068:	4620      	mov	r0, r4
 801106a:	f7ff ffa5 	bl	8010fb8 <_ZNK8touchgfx9ConstFont4findEt>
 801106e:	4605      	mov	r5, r0
 8011070:	2800      	cmp	r0, #0
 8011072:	d0e3      	beq.n	801103c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8011074:	6823      	ldr	r3, [r4, #0]
 8011076:	4629      	mov	r1, r5
 8011078:	4620      	mov	r0, r4
 801107a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801107c:	4798      	blx	r3
 801107e:	6038      	str	r0, [r7, #0]
 8011080:	6823      	ldr	r3, [r4, #0]
 8011082:	4620      	mov	r0, r4
 8011084:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011086:	4798      	blx	r3
 8011088:	7030      	strb	r0, [r6, #0]
 801108a:	e7d8      	b.n	801103e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801108c <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801108c:	2000      	movs	r0, #0
 801108e:	4770      	bx	lr

08011090 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8011090:	2001      	movs	r0, #1
 8011092:	4770      	bx	lr

08011094 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8011094:	2002      	movs	r0, #2
 8011096:	4770      	bx	lr

08011098 <_ZN8touchgfx12GestureEventD1Ev>:
 8011098:	4770      	bx	lr

0801109a <_ZN8touchgfx9DragEventD1Ev>:
 801109a:	4770      	bx	lr

0801109c <_ZN8touchgfx10ClickEventD1Ev>:
 801109c:	4770      	bx	lr

0801109e <_ZN8touchgfx10ClickEventD0Ev>:
 801109e:	b510      	push	{r4, lr}
 80110a0:	4604      	mov	r4, r0
 80110a2:	210c      	movs	r1, #12
 80110a4:	f00f fdc7 	bl	8020c36 <_ZdlPvj>
 80110a8:	4620      	mov	r0, r4
 80110aa:	bd10      	pop	{r4, pc}

080110ac <_ZN8touchgfx9DragEventD0Ev>:
 80110ac:	b510      	push	{r4, lr}
 80110ae:	4604      	mov	r4, r0
 80110b0:	2110      	movs	r1, #16
 80110b2:	f00f fdc0 	bl	8020c36 <_ZdlPvj>
 80110b6:	4620      	mov	r0, r4
 80110b8:	bd10      	pop	{r4, pc}

080110ba <_ZN8touchgfx12GestureEventD0Ev>:
 80110ba:	b510      	push	{r4, lr}
 80110bc:	4604      	mov	r4, r0
 80110be:	210c      	movs	r1, #12
 80110c0:	f00f fdb9 	bl	8020c36 <_ZdlPvj>
 80110c4:	4620      	mov	r0, r4
 80110c6:	bd10      	pop	{r4, pc}

080110c8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80110c8:	b530      	push	{r4, r5, lr}
 80110ca:	460d      	mov	r5, r1
 80110cc:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80110ce:	b087      	sub	sp, #28
 80110d0:	4604      	mov	r4, r0
 80110d2:	b301      	cbz	r1, 8011116 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80110d4:	a801      	add	r0, sp, #4
 80110d6:	f7ff ff35 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80110da:	892a      	ldrh	r2, [r5, #8]
 80110dc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80110e0:	7928      	ldrb	r0, [r5, #4]
 80110e2:	1ad2      	subs	r2, r2, r3
 80110e4:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80110e6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80110ea:	441a      	add	r2, r3
 80110ec:	896b      	ldrh	r3, [r5, #10]
 80110ee:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80110f2:	f88d 0010 	strb.w	r0, [sp, #16]
 80110f6:	1b5b      	subs	r3, r3, r5
 80110f8:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80110fa:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80110fc:	442b      	add	r3, r5
 80110fe:	4d07      	ldr	r5, [pc, #28]	@ (801111c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8011100:	f8ad 1012 	strh.w	r1, [sp, #18]
 8011104:	a903      	add	r1, sp, #12
 8011106:	9503      	str	r5, [sp, #12]
 8011108:	f8ad 2014 	strh.w	r2, [sp, #20]
 801110c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011110:	6803      	ldr	r3, [r0, #0]
 8011112:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8011114:	4798      	blx	r3
 8011116:	b007      	add	sp, #28
 8011118:	bd30      	pop	{r4, r5, pc}
 801111a:	bf00      	nop
 801111c:	080230bc 	.word	0x080230bc

08011120 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8011120:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011124:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8011126:	b08a      	sub	sp, #40	@ 0x28
 8011128:	4604      	mov	r4, r0
 801112a:	460d      	mov	r5, r1
 801112c:	b113      	cbz	r3, 8011134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801112e:	790b      	ldrb	r3, [r1, #4]
 8011130:	2b00      	cmp	r3, #0
 8011132:	d044      	beq.n	80111be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011134:	f104 0804 	add.w	r8, r4, #4
 8011138:	a803      	add	r0, sp, #12
 801113a:	4641      	mov	r1, r8
 801113c:	f7ff ff02 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011140:	792b      	ldrb	r3, [r5, #4]
 8011142:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8011146:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801114a:	b983      	cbnz	r3, 801116e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801114c:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8011150:	892a      	ldrh	r2, [r5, #8]
 8011152:	88e9      	ldrh	r1, [r5, #6]
 8011154:	4640      	mov	r0, r8
 8011156:	1b92      	subs	r2, r2, r6
 8011158:	9301      	str	r3, [sp, #4]
 801115a:	1bc9      	subs	r1, r1, r7
 801115c:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8011160:	b212      	sxth	r2, r2
 8011162:	9300      	str	r3, [sp, #0]
 8011164:	b209      	sxth	r1, r1
 8011166:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 801116a:	f7fc fc91 	bl	800da90 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801116e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8011170:	b329      	cbz	r1, 80111be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8011172:	a805      	add	r0, sp, #20
 8011174:	f7ff fee6 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011178:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801117c:	792b      	ldrb	r3, [r5, #4]
 801117e:	a907      	add	r1, sp, #28
 8011180:	1abf      	subs	r7, r7, r2
 8011182:	88ea      	ldrh	r2, [r5, #6]
 8011184:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8011186:	4417      	add	r7, r2
 8011188:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 801118a:	f88d 3020 	strb.w	r3, [sp, #32]
 801118e:	4417      	add	r7, r2
 8011190:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8011194:	1ab6      	subs	r6, r6, r2
 8011196:	892a      	ldrh	r2, [r5, #8]
 8011198:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 801119c:	4416      	add	r6, r2
 801119e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80111a0:	4416      	add	r6, r2
 80111a2:	4a08      	ldr	r2, [pc, #32]	@ (80111c4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80111a4:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80111a8:	2600      	movs	r6, #0
 80111aa:	9207      	str	r2, [sp, #28]
 80111ac:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80111b0:	6803      	ldr	r3, [r0, #0]
 80111b2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80111b4:	4798      	blx	r3
 80111b6:	792b      	ldrb	r3, [r5, #4]
 80111b8:	b10b      	cbz	r3, 80111be <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80111ba:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80111be:	b00a      	add	sp, #40	@ 0x28
 80111c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80111c4:	08023094 	.word	0x08023094

080111c8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80111c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80111cc:	460c      	mov	r4, r1
 80111ce:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80111d0:	b088      	sub	sp, #32
 80111d2:	4605      	mov	r5, r0
 80111d4:	2900      	cmp	r1, #0
 80111d6:	d06d      	beq.n	80112b4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80111d8:	4668      	mov	r0, sp
 80111da:	f7ff feb3 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80111de:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80111e0:	88e3      	ldrh	r3, [r4, #6]
 80111e2:	f9bd 8000 	ldrsh.w	r8, [sp]
 80111e6:	440b      	add	r3, r1
 80111e8:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80111ec:	b21b      	sxth	r3, r3
 80111ee:	4543      	cmp	r3, r8
 80111f0:	db31      	blt.n	8011256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80111f2:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80111f6:	44c4      	add	ip, r8
 80111f8:	fa0f fc8c 	sxth.w	ip, ip
 80111fc:	4563      	cmp	r3, ip
 80111fe:	da2a      	bge.n	8011256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011200:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8011202:	8926      	ldrh	r6, [r4, #8]
 8011204:	4416      	add	r6, r2
 8011206:	b236      	sxth	r6, r6
 8011208:	42be      	cmp	r6, r7
 801120a:	db24      	blt.n	8011256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801120c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8011210:	4438      	add	r0, r7
 8011212:	b200      	sxth	r0, r0
 8011214:	4286      	cmp	r6, r0
 8011216:	da1e      	bge.n	8011256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011218:	8963      	ldrh	r3, [r4, #10]
 801121a:	4419      	add	r1, r3
 801121c:	b209      	sxth	r1, r1
 801121e:	4541      	cmp	r1, r8
 8011220:	db08      	blt.n	8011234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011222:	4561      	cmp	r1, ip
 8011224:	da06      	bge.n	8011234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011226:	89a3      	ldrh	r3, [r4, #12]
 8011228:	441a      	add	r2, r3
 801122a:	b212      	sxth	r2, r2
 801122c:	42ba      	cmp	r2, r7
 801122e:	db01      	blt.n	8011234 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8011230:	4282      	cmp	r2, r0
 8011232:	db10      	blt.n	8011256 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8011234:	4b21      	ldr	r3, [pc, #132]	@ (80112bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8011236:	a904      	add	r1, sp, #16
 8011238:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801123a:	9304      	str	r3, [sp, #16]
 801123c:	2302      	movs	r3, #2
 801123e:	f88d 3014 	strb.w	r3, [sp, #20]
 8011242:	2300      	movs	r3, #0
 8011244:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011248:	f8ad 3018 	strh.w	r3, [sp, #24]
 801124c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011250:	6803      	ldr	r3, [r0, #0]
 8011252:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011254:	4798      	blx	r3
 8011256:	1d29      	adds	r1, r5, #4
 8011258:	a802      	add	r0, sp, #8
 801125a:	f7ff fe73 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801125e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011262:	88e0      	ldrh	r0, [r4, #6]
 8011264:	eba3 0808 	sub.w	r8, r3, r8
 8011268:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801126c:	7921      	ldrb	r1, [r4, #4]
 801126e:	fa1f f888 	uxth.w	r8, r8
 8011272:	1bdf      	subs	r7, r3, r7
 8011274:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8011278:	b2bb      	uxth	r3, r7
 801127a:	4440      	add	r0, r8
 801127c:	8922      	ldrh	r2, [r4, #8]
 801127e:	8967      	ldrh	r7, [r4, #10]
 8011280:	4460      	add	r0, ip
 8011282:	89a4      	ldrh	r4, [r4, #12]
 8011284:	441a      	add	r2, r3
 8011286:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8011288:	44b8      	add	r8, r7
 801128a:	4423      	add	r3, r4
 801128c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8011290:	4432      	add	r2, r6
 8011292:	44e0      	add	r8, ip
 8011294:	4433      	add	r3, r6
 8011296:	4c0a      	ldr	r4, [pc, #40]	@ (80112c0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8011298:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 801129a:	f88d 1014 	strb.w	r1, [sp, #20]
 801129e:	a904      	add	r1, sp, #16
 80112a0:	9404      	str	r4, [sp, #16]
 80112a2:	f8ad 2018 	strh.w	r2, [sp, #24]
 80112a6:	f8ad 801a 	strh.w	r8, [sp, #26]
 80112aa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80112ae:	6803      	ldr	r3, [r0, #0]
 80112b0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80112b2:	4798      	blx	r3
 80112b4:	b008      	add	sp, #32
 80112b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112ba:	bf00      	nop
 80112bc:	08023094 	.word	0x08023094
 80112c0:	080230a8 	.word	0x080230a8

080112c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80112c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80112c6:	4604      	mov	r4, r0
 80112c8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80112cc:	3201      	adds	r2, #1
 80112ce:	d112      	bne.n	80112f6 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80112d0:	2500      	movs	r5, #0
 80112d2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80112d6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80112da:	6803      	ldr	r3, [r0, #0]
 80112dc:	9500      	str	r5, [sp, #0]
 80112de:	466d      	mov	r5, sp
 80112e0:	f8ad 1004 	strh.w	r1, [sp, #4]
 80112e4:	f8ad 2006 	strh.w	r2, [sp, #6]
 80112e8:	4629      	mov	r1, r5
 80112ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80112ec:	4798      	blx	r3
 80112ee:	e895 0003 	ldmia.w	r5, {r0, r1}
 80112f2:	e884 0003 	stmia.w	r4, {r0, r1}
 80112f6:	4620      	mov	r0, r4
 80112f8:	b003      	add	sp, #12
 80112fa:	bd30      	pop	{r4, r5, pc}

080112fc <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80112fc:	b513      	push	{r0, r1, r4, lr}
 80112fe:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8011302:	4604      	mov	r4, r0
 8011304:	3301      	adds	r3, #1
 8011306:	d109      	bne.n	801131c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8011308:	4601      	mov	r1, r0
 801130a:	4668      	mov	r0, sp
 801130c:	f7ff fe1a 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011310:	f8bd 3000 	ldrh.w	r3, [sp]
 8011314:	8423      	strh	r3, [r4, #32]
 8011316:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801131a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801131c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8011320:	b002      	add	sp, #8
 8011322:	bd10      	pop	{r4, pc}

08011324 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8011324:	b513      	push	{r0, r1, r4, lr}
 8011326:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801132a:	4604      	mov	r4, r0
 801132c:	3301      	adds	r3, #1
 801132e:	d109      	bne.n	8011344 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8011330:	4601      	mov	r1, r0
 8011332:	4668      	mov	r0, sp
 8011334:	f7ff fe06 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011338:	f8bd 3000 	ldrh.w	r3, [sp]
 801133c:	8423      	strh	r3, [r4, #32]
 801133e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011342:	8463      	strh	r3, [r4, #34]	@ 0x22
 8011344:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8011348:	b002      	add	sp, #8
 801134a:	bd10      	pop	{r4, pc}

0801134c <_ZN8touchgfx6ScreenC1Ev>:
 801134c:	b570      	push	{r4, r5, r6, lr}
 801134e:	4b17      	ldr	r3, [pc, #92]	@ (80113ac <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8011350:	4605      	mov	r5, r0
 8011352:	4a17      	ldr	r2, [pc, #92]	@ (80113b0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8011354:	2101      	movs	r1, #1
 8011356:	f845 3b04 	str.w	r3, [r5], #4
 801135a:	2300      	movs	r3, #0
 801135c:	6042      	str	r2, [r0, #4]
 801135e:	4604      	mov	r4, r0
 8011360:	8103      	strh	r3, [r0, #8]
 8011362:	8143      	strh	r3, [r0, #10]
 8011364:	8183      	strh	r3, [r0, #12]
 8011366:	81c3      	strh	r3, [r0, #14]
 8011368:	8203      	strh	r3, [r0, #16]
 801136a:	8243      	strh	r3, [r0, #18]
 801136c:	8283      	strh	r3, [r0, #20]
 801136e:	82c3      	strh	r3, [r0, #22]
 8011370:	6203      	str	r3, [r0, #32]
 8011372:	8483      	strh	r3, [r0, #36]	@ 0x24
 8011374:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8011376:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 801137a:	6343      	str	r3, [r0, #52]	@ 0x34
 801137c:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8011380:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8011384:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8011388:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801138c:	4b09      	ldr	r3, [pc, #36]	@ (80113b4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801138e:	4628      	mov	r0, r5
 8011390:	f9b3 6000 	ldrsh.w	r6, [r3]
 8011394:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8011396:	4a08      	ldr	r2, [pc, #32]	@ (80113b8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8011398:	f9b2 1000 	ldrsh.w	r1, [r2]
 801139c:	4798      	blx	r3
 801139e:	6863      	ldr	r3, [r4, #4]
 80113a0:	4628      	mov	r0, r5
 80113a2:	4631      	mov	r1, r6
 80113a4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80113a6:	4798      	blx	r3
 80113a8:	4620      	mov	r0, r4
 80113aa:	bd70      	pop	{r4, r5, r6, pc}
 80113ac:	080230d0 	.word	0x080230d0
 80113b0:	08022cc8 	.word	0x08022cc8
 80113b4:	20001b62 	.word	0x20001b62
 80113b8:	20001b60 	.word	0x20001b60

080113bc <_ZN8touchgfx6Screen4drawEv>:
 80113bc:	4b09      	ldr	r3, [pc, #36]	@ (80113e4 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80113be:	b507      	push	{r0, r1, r2, lr}
 80113c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80113c4:	2100      	movs	r1, #0
 80113c6:	4b08      	ldr	r3, [pc, #32]	@ (80113e8 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80113c8:	9100      	str	r1, [sp, #0]
 80113ca:	4669      	mov	r1, sp
 80113cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80113d0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80113d4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80113d8:	6803      	ldr	r3, [r0, #0]
 80113da:	689b      	ldr	r3, [r3, #8]
 80113dc:	4798      	blx	r3
 80113de:	b003      	add	sp, #12
 80113e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80113e4:	20001b60 	.word	0x20001b60
 80113e8:	20001b62 	.word	0x20001b62

080113ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80113ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113f0:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80113f4:	b089      	sub	sp, #36	@ 0x24
 80113f6:	4680      	mov	r8, r0
 80113f8:	460c      	mov	r4, r1
 80113fa:	2b00      	cmp	r3, #0
 80113fc:	4615      	mov	r5, r2
 80113fe:	dd0e      	ble.n	801141e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011400:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8011404:	2b00      	cmp	r3, #0
 8011406:	dd0a      	ble.n	801141e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8011408:	4628      	mov	r0, r5
 801140a:	f7ff ff5b 	bl	80112c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801140e:	4621      	mov	r1, r4
 8011410:	f7fe fba6 	bl	800fb60 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011414:	69eb      	ldr	r3, [r5, #28]
 8011416:	b928      	cbnz	r0, 8011424 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8011418:	461d      	mov	r5, r3
 801141a:	2b00      	cmp	r3, #0
 801141c:	d1f4      	bne.n	8011408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801141e:	b009      	add	sp, #36	@ 0x24
 8011420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011424:	ae04      	add	r6, sp, #16
 8011426:	2b00      	cmp	r3, #0
 8011428:	f000 80b5 	beq.w	8011596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801142c:	682b      	ldr	r3, [r5, #0]
 801142e:	4629      	mov	r1, r5
 8011430:	a802      	add	r0, sp, #8
 8011432:	68db      	ldr	r3, [r3, #12]
 8011434:	4798      	blx	r3
 8011436:	4628      	mov	r0, r5
 8011438:	f7ff ff60 	bl	80112fc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801143c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8011440:	4407      	add	r7, r0
 8011442:	4628      	mov	r0, r5
 8011444:	f7ff ff6e 	bl	8011324 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8011448:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801144c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8011450:	b23f      	sxth	r7, r7
 8011452:	4418      	add	r0, r3
 8011454:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011458:	4621      	mov	r1, r4
 801145a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801145e:	f8ad 0012 	strh.w	r0, [sp, #18]
 8011462:	4630      	mov	r0, r6
 8011464:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011468:	f8ad 7010 	strh.w	r7, [sp, #16]
 801146c:	f7fc fbf2 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 8011470:	4628      	mov	r0, r5
 8011472:	f7ff ff27 	bl	80112c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8011476:	ab06      	add	r3, sp, #24
 8011478:	4602      	mov	r2, r0
 801147a:	e896 0003 	ldmia.w	r6, {r0, r1}
 801147e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011482:	4611      	mov	r1, r2
 8011484:	4618      	mov	r0, r3
 8011486:	f7fc fbe5 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 801148a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801148e:	f9b4 1000 	ldrsh.w	r1, [r4]
 8011492:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8011496:	4299      	cmp	r1, r3
 8011498:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801149c:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80114a0:	d10b      	bne.n	80114ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80114a2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80114a6:	4552      	cmp	r2, sl
 80114a8:	d107      	bne.n	80114ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80114aa:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80114ae:	455a      	cmp	r2, fp
 80114b0:	d103      	bne.n	80114ba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80114b2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80114b6:	454a      	cmp	r2, r9
 80114b8:	d06d      	beq.n	8011596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80114ba:	f1bb 0f00 	cmp.w	fp, #0
 80114be:	dd65      	ble.n	801158c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80114c0:	f1b9 0f00 	cmp.w	r9, #0
 80114c4:	dd62      	ble.n	801158c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80114c6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80114ca:	fa1f f08a 	uxth.w	r0, sl
 80114ce:	4552      	cmp	r2, sl
 80114d0:	9000      	str	r0, [sp, #0]
 80114d2:	da12      	bge.n	80114fa <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80114d4:	9301      	str	r3, [sp, #4]
 80114d6:	9b00      	ldr	r3, [sp, #0]
 80114d8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80114dc:	f8ad 2012 	strh.w	r2, [sp, #18]
 80114e0:	1a9a      	subs	r2, r3, r2
 80114e2:	f8ad 1010 	strh.w	r1, [sp, #16]
 80114e6:	4631      	mov	r1, r6
 80114e8:	f8ad 0014 	strh.w	r0, [sp, #20]
 80114ec:	4640      	mov	r0, r8
 80114ee:	f8ad 2016 	strh.w	r2, [sp, #22]
 80114f2:	69ea      	ldr	r2, [r5, #28]
 80114f4:	f7ff ff7a 	bl	80113ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80114f8:	9b01      	ldr	r3, [sp, #4]
 80114fa:	f9b4 2000 	ldrsh.w	r2, [r4]
 80114fe:	b29f      	uxth	r7, r3
 8011500:	429a      	cmp	r2, r3
 8011502:	da0d      	bge.n	8011520 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8011504:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011508:	1aba      	subs	r2, r7, r2
 801150a:	f8ad a012 	strh.w	sl, [sp, #18]
 801150e:	4631      	mov	r1, r6
 8011510:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011514:	4640      	mov	r0, r8
 8011516:	f8ad 9016 	strh.w	r9, [sp, #22]
 801151a:	69ea      	ldr	r2, [r5, #28]
 801151c:	f7ff ff66 	bl	80113ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011520:	8822      	ldrh	r2, [r4, #0]
 8011522:	445f      	add	r7, fp
 8011524:	88a3      	ldrh	r3, [r4, #4]
 8011526:	b2bf      	uxth	r7, r7
 8011528:	4413      	add	r3, r2
 801152a:	b23a      	sxth	r2, r7
 801152c:	b29b      	uxth	r3, r3
 801152e:	b219      	sxth	r1, r3
 8011530:	4291      	cmp	r1, r2
 8011532:	dd0d      	ble.n	8011550 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8011534:	1bdb      	subs	r3, r3, r7
 8011536:	f8ad 2010 	strh.w	r2, [sp, #16]
 801153a:	f8ad a012 	strh.w	sl, [sp, #18]
 801153e:	4631      	mov	r1, r6
 8011540:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011544:	4640      	mov	r0, r8
 8011546:	f8ad 9016 	strh.w	r9, [sp, #22]
 801154a:	69ea      	ldr	r2, [r5, #28]
 801154c:	f7ff ff4e 	bl	80113ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011550:	88e2      	ldrh	r2, [r4, #6]
 8011552:	8863      	ldrh	r3, [r4, #2]
 8011554:	4413      	add	r3, r2
 8011556:	9a00      	ldr	r2, [sp, #0]
 8011558:	444a      	add	r2, r9
 801155a:	b29b      	uxth	r3, r3
 801155c:	fa1f f982 	uxth.w	r9, r2
 8011560:	b219      	sxth	r1, r3
 8011562:	fa0f f289 	sxth.w	r2, r9
 8011566:	428a      	cmp	r2, r1
 8011568:	da15      	bge.n	8011596 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801156a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801156e:	eba3 0309 	sub.w	r3, r3, r9
 8011572:	f9b4 0000 	ldrsh.w	r0, [r4]
 8011576:	f8ad 1014 	strh.w	r1, [sp, #20]
 801157a:	4631      	mov	r1, r6
 801157c:	f8ad 0010 	strh.w	r0, [sp, #16]
 8011580:	f8ad 2012 	strh.w	r2, [sp, #18]
 8011584:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011588:	69ea      	ldr	r2, [r5, #28]
 801158a:	e001      	b.n	8011590 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801158c:	69ea      	ldr	r2, [r5, #28]
 801158e:	4621      	mov	r1, r4
 8011590:	4640      	mov	r0, r8
 8011592:	f7ff ff2b 	bl	80113ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011596:	4628      	mov	r0, r5
 8011598:	f7ff fe94 	bl	80112c4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801159c:	6861      	ldr	r1, [r4, #4]
 801159e:	4602      	mov	r2, r0
 80115a0:	4633      	mov	r3, r6
 80115a2:	6820      	ldr	r0, [r4, #0]
 80115a4:	c303      	stmia	r3!, {r0, r1}
 80115a6:	4611      	mov	r1, r2
 80115a8:	4630      	mov	r0, r6
 80115aa:	f7fc fb53 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 80115ae:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80115b2:	2b00      	cmp	r3, #0
 80115b4:	f77f af33 	ble.w	801141e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80115b8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80115bc:	2b00      	cmp	r3, #0
 80115be:	f77f af2e 	ble.w	801141e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80115c2:	4628      	mov	r0, r5
 80115c4:	f7ff fe9a 	bl	80112fc <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80115c8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80115cc:	1a18      	subs	r0, r3, r0
 80115ce:	f8ad 0010 	strh.w	r0, [sp, #16]
 80115d2:	4628      	mov	r0, r5
 80115d4:	f7ff fea6 	bl	8011324 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80115d8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80115dc:	4631      	mov	r1, r6
 80115de:	1a18      	subs	r0, r3, r0
 80115e0:	f8ad 0012 	strh.w	r0, [sp, #18]
 80115e4:	4628      	mov	r0, r5
 80115e6:	682b      	ldr	r3, [r5, #0]
 80115e8:	689b      	ldr	r3, [r3, #8]
 80115ea:	4798      	blx	r3
 80115ec:	e717      	b.n	801141e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080115ee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80115ee:	b570      	push	{r4, r5, r6, lr}
 80115f0:	1d06      	adds	r6, r0, #4
 80115f2:	b086      	sub	sp, #24
 80115f4:	460c      	mov	r4, r1
 80115f6:	2300      	movs	r3, #0
 80115f8:	4631      	mov	r1, r6
 80115fa:	4605      	mov	r5, r0
 80115fc:	a802      	add	r0, sp, #8
 80115fe:	9301      	str	r3, [sp, #4]
 8011600:	f7ff fca0 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011604:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8011608:	8822      	ldrh	r2, [r4, #0]
 801160a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801160e:	1ad2      	subs	r2, r2, r3
 8011610:	8863      	ldrh	r3, [r4, #2]
 8011612:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011616:	1a5b      	subs	r3, r3, r1
 8011618:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801161c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011620:	aa01      	add	r2, sp, #4
 8011622:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011626:	4630      	mov	r0, r6
 8011628:	f8ad 1016 	strh.w	r1, [sp, #22]
 801162c:	a904      	add	r1, sp, #16
 801162e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8011632:	f7fc fbe7 	bl	800de04 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8011636:	9a01      	ldr	r2, [sp, #4]
 8011638:	b11a      	cbz	r2, 8011642 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801163a:	4621      	mov	r1, r4
 801163c:	4628      	mov	r0, r5
 801163e:	f7ff fed5 	bl	80113ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8011642:	b006      	add	sp, #24
 8011644:	bd70      	pop	{r4, r5, r6, pc}

08011646 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8011646:	4602      	mov	r2, r0
 8011648:	b530      	push	{r4, r5, lr}
 801164a:	4604      	mov	r4, r0
 801164c:	b085      	sub	sp, #20
 801164e:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8011652:	460d      	mov	r5, r1
 8011654:	466b      	mov	r3, sp
 8011656:	6851      	ldr	r1, [r2, #4]
 8011658:	c303      	stmia	r3!, {r0, r1}
 801165a:	4629      	mov	r1, r5
 801165c:	4668      	mov	r0, sp
 801165e:	f7fc faf9 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 8011662:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011666:	b12b      	cbz	r3, 8011674 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8011668:	4669      	mov	r1, sp
 801166a:	4620      	mov	r0, r4
 801166c:	f7ff ffbf 	bl	80115ee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8011670:	b005      	add	sp, #20
 8011672:	bd30      	pop	{r4, r5, pc}
 8011674:	3404      	adds	r4, #4
 8011676:	a802      	add	r0, sp, #8
 8011678:	4621      	mov	r1, r4
 801167a:	f7ff fc63 	bl	8010f44 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801167e:	f8bd 3000 	ldrh.w	r3, [sp]
 8011682:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8011686:	4669      	mov	r1, sp
 8011688:	4620      	mov	r0, r4
 801168a:	1a9b      	subs	r3, r3, r2
 801168c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011690:	f8ad 3000 	strh.w	r3, [sp]
 8011694:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011698:	1a9b      	subs	r3, r3, r2
 801169a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801169e:	f7fc fb78 	bl	800dd92 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80116a2:	e7e5      	b.n	8011670 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080116a4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80116a4:	460b      	mov	r3, r1
 80116a6:	680a      	ldr	r2, [r1, #0]
 80116a8:	1d01      	adds	r1, r0, #4
 80116aa:	6992      	ldr	r2, [r2, #24]
 80116ac:	4618      	mov	r0, r3
 80116ae:	4710      	bx	r2

080116b0 <_ZN8touchgfx12TextProviderC1Ev>:
 80116b0:	b538      	push	{r3, r4, r5, lr}
 80116b2:	2500      	movs	r5, #0
 80116b4:	2302      	movs	r3, #2
 80116b6:	4604      	mov	r4, r0
 80116b8:	220e      	movs	r2, #14
 80116ba:	7403      	strb	r3, [r0, #16]
 80116bc:	4629      	mov	r1, r5
 80116be:	6145      	str	r5, [r0, #20]
 80116c0:	7605      	strb	r5, [r0, #24]
 80116c2:	83c5      	strh	r5, [r0, #30]
 80116c4:	8405      	strh	r5, [r0, #32]
 80116c6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80116c8:	8705      	strh	r5, [r0, #56]	@ 0x38
 80116ca:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 80116cc:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 80116d0:	e9c0 5500 	strd	r5, r5, [r0]
 80116d4:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 80116d8:	304c      	adds	r0, #76	@ 0x4c
 80116da:	f00f fce2 	bl	80210a2 <memset>
 80116de:	2301      	movs	r3, #1
 80116e0:	4620      	mov	r0, r4
 80116e2:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 80116e6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80116ea:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 80116ee:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 80116f2:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 80116f6:	f7f9 ff31 	bl	800b55c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80116fa:	4620      	mov	r0, r4
 80116fc:	bd38      	pop	{r3, r4, r5, pc}

080116fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80116fe:	b530      	push	{r4, r5, lr}
 8011700:	2500      	movs	r5, #0
 8011702:	2401      	movs	r4, #1
 8011704:	6843      	ldr	r3, [r0, #4]
 8011706:	b913      	cbnz	r3, 801170e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8011708:	6803      	ldr	r3, [r0, #0]
 801170a:	b313      	cbz	r3, 8011752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801170c:	6043      	str	r3, [r0, #4]
 801170e:	7e03      	ldrb	r3, [r0, #24]
 8011710:	b143      	cbz	r3, 8011724 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8011712:	6943      	ldr	r3, [r0, #20]
 8011714:	b12b      	cbz	r3, 8011722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8011716:	881a      	ldrh	r2, [r3, #0]
 8011718:	b11a      	cbz	r2, 8011722 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 801171a:	1c9a      	adds	r2, r3, #2
 801171c:	6142      	str	r2, [r0, #20]
 801171e:	8818      	ldrh	r0, [r3, #0]
 8011720:	bd30      	pop	{r4, r5, pc}
 8011722:	7605      	strb	r5, [r0, #24]
 8011724:	6843      	ldr	r3, [r0, #4]
 8011726:	8819      	ldrh	r1, [r3, #0]
 8011728:	b199      	cbz	r1, 8011752 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 801172a:	1c9a      	adds	r2, r3, #2
 801172c:	2902      	cmp	r1, #2
 801172e:	6042      	str	r2, [r0, #4]
 8011730:	d1f5      	bne.n	801171e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8011732:	7c03      	ldrb	r3, [r0, #16]
 8011734:	2b01      	cmp	r3, #1
 8011736:	d8e5      	bhi.n	8011704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011738:	1c5a      	adds	r2, r3, #1
 801173a:	3302      	adds	r3, #2
 801173c:	7402      	strb	r2, [r0, #16]
 801173e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8011742:	6143      	str	r3, [r0, #20]
 8011744:	2b00      	cmp	r3, #0
 8011746:	d0dd      	beq.n	8011704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011748:	881b      	ldrh	r3, [r3, #0]
 801174a:	2b00      	cmp	r3, #0
 801174c:	d0da      	beq.n	8011704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801174e:	7604      	strb	r4, [r0, #24]
 8011750:	e7d8      	b.n	8011704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8011752:	2000      	movs	r0, #0
 8011754:	e7e4      	b.n	8011720 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08011756 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8011756:	6001      	str	r1, [r0, #0]
 8011758:	2100      	movs	r1, #0
 801175a:	b430      	push	{r4, r5}
 801175c:	6041      	str	r1, [r0, #4]
 801175e:	6815      	ldr	r5, [r2, #0]
 8011760:	6085      	str	r5, [r0, #8]
 8011762:	6852      	ldr	r2, [r2, #4]
 8011764:	6443      	str	r3, [r0, #68]	@ 0x44
 8011766:	9b02      	ldr	r3, [sp, #8]
 8011768:	60c2      	str	r2, [r0, #12]
 801176a:	7401      	strb	r1, [r0, #16]
 801176c:	6141      	str	r1, [r0, #20]
 801176e:	7601      	strb	r1, [r0, #24]
 8011770:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011772:	8401      	strh	r1, [r0, #32]
 8011774:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8011778:	6483      	str	r3, [r0, #72]	@ 0x48
 801177a:	bc30      	pop	{r4, r5}
 801177c:	f7f9 beee 	b.w	800b55c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08011780 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8011780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011782:	4605      	mov	r5, r0
 8011784:	4608      	mov	r0, r1
 8011786:	b1f1      	cbz	r1, 80117c6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8011788:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 801178c:	460b      	mov	r3, r1
 801178e:	f101 0708 	add.w	r7, r1, #8
 8011792:	4622      	mov	r2, r4
 8011794:	6818      	ldr	r0, [r3, #0]
 8011796:	3308      	adds	r3, #8
 8011798:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801179c:	4626      	mov	r6, r4
 801179e:	42bb      	cmp	r3, r7
 80117a0:	c603      	stmia	r6!, {r0, r1}
 80117a2:	4634      	mov	r4, r6
 80117a4:	d1f6      	bne.n	8011794 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80117a6:	6818      	ldr	r0, [r3, #0]
 80117a8:	6030      	str	r0, [r6, #0]
 80117aa:	4610      	mov	r0, r2
 80117ac:	889b      	ldrh	r3, [r3, #4]
 80117ae:	80b3      	strh	r3, [r6, #4]
 80117b0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80117b4:	015b      	lsls	r3, r3, #5
 80117b6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80117ba:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 80117be:	430b      	orrs	r3, r1
 80117c0:	425b      	negs	r3, r3
 80117c2:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 80117c6:	bdf0      	pop	{r4, r5, r6, r7, pc}

080117c8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80117c8:	b538      	push	{r3, r4, r5, lr}
 80117ca:	460c      	mov	r4, r1
 80117cc:	6811      	ldr	r1, [r2, #0]
 80117ce:	4610      	mov	r0, r2
 80117d0:	68cd      	ldr	r5, [r1, #12]
 80117d2:	4619      	mov	r1, r3
 80117d4:	47a8      	blx	r5
 80117d6:	2800      	cmp	r0, #0
 80117d8:	bf08      	it	eq
 80117da:	4620      	moveq	r0, r4
 80117dc:	bd38      	pop	{r3, r4, r5, pc}
	...

080117e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80117e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80117e4:	468c      	mov	ip, r1
 80117e6:	4605      	mov	r5, r0
 80117e8:	4614      	mov	r4, r2
 80117ea:	b942      	cbnz	r2, 80117fe <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 80117ec:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80117f0:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 80117f4:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 80117f8:	4620      	mov	r0, r4
 80117fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80117fe:	7b50      	ldrb	r0, [r2, #13]
 8011800:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8011804:	8893      	ldrh	r3, [r2, #4]
 8011806:	0106      	lsls	r6, r0, #4
 8011808:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 801180c:	79e6      	ldrb	r6, [r4, #7]
 801180e:	4316      	orrs	r6, r2
 8011810:	185a      	adds	r2, r3, r1
 8011812:	b291      	uxth	r1, r2
 8011814:	b2b7      	uxth	r7, r6
 8011816:	291d      	cmp	r1, #29
 8011818:	d87f      	bhi.n	801191a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 801181a:	2201      	movs	r2, #1
 801181c:	10f6      	asrs	r6, r6, #3
 801181e:	408a      	lsls	r2, r1
 8011820:	498b      	ldr	r1, [pc, #556]	@ (8011a50 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
 8011822:	420a      	tst	r2, r1
 8011824:	d12e      	bne.n	8011884 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8011826:	f412 7f60 	tst.w	r2, #896	@ 0x380
 801182a:	d076      	beq.n	801191a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 801182c:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011830:	4623      	mov	r3, r4
 8011832:	f104 0e08 	add.w	lr, r4, #8
 8011836:	4614      	mov	r4, r2
 8011838:	6818      	ldr	r0, [r3, #0]
 801183a:	3308      	adds	r3, #8
 801183c:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011840:	4694      	mov	ip, r2
 8011842:	4573      	cmp	r3, lr
 8011844:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8011848:	4662      	mov	r2, ip
 801184a:	d1f5      	bne.n	8011838 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 801184c:	6818      	ldr	r0, [r3, #0]
 801184e:	f8cc 0000 	str.w	r0, [ip]
 8011852:	889b      	ldrh	r3, [r3, #4]
 8011854:	f8ac 3004 	strh.w	r3, [ip, #4]
 8011858:	b2b3      	uxth	r3, r6
 801185a:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 801185e:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8011862:	1aca      	subs	r2, r1, r3
 8011864:	1bcf      	subs	r7, r1, r7
 8011866:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 801186a:	b292      	uxth	r2, r2
 801186c:	1afb      	subs	r3, r7, r3
 801186e:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8011872:	10d2      	asrs	r2, r2, #3
 8011874:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8011878:	4302      	orrs	r2, r0
 801187a:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 801187e:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8011882:	e7b9      	b.n	80117f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8011884:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8011888:	4623      	mov	r3, r4
 801188a:	f104 0808 	add.w	r8, r4, #8
 801188e:	4614      	mov	r4, r2
 8011890:	6818      	ldr	r0, [r3, #0]
 8011892:	3308      	adds	r3, #8
 8011894:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8011898:	4696      	mov	lr, r2
 801189a:	4543      	cmp	r3, r8
 801189c:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80118a0:	4672      	mov	r2, lr
 80118a2:	d1f5      	bne.n	8011890 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80118a4:	6818      	ldr	r0, [r3, #0]
 80118a6:	f8ce 0000 	str.w	r0, [lr]
 80118aa:	889b      	ldrh	r3, [r3, #4]
 80118ac:	f8ae 3004 	strh.w	r3, [lr, #4]
 80118b0:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 80118b2:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80118b6:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 80118b8:	f640 6333 	movw	r3, #3635	@ 0xe33
 80118bc:	4299      	cmp	r1, r3
 80118be:	d111      	bne.n	80118e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
 80118c0:	f8dc 3000 	ldr.w	r3, [ip]
 80118c4:	4660      	mov	r0, ip
 80118c6:	68db      	ldr	r3, [r3, #12]
 80118c8:	4798      	blx	r3
 80118ca:	7b41      	ldrb	r1, [r0, #13]
 80118cc:	00cb      	lsls	r3, r1, #3
 80118ce:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80118d2:	7a03      	ldrb	r3, [r0, #8]
 80118d4:	4313      	orrs	r3, r2
 80118d6:	064a      	lsls	r2, r1, #25
 80118d8:	bf44      	itt	mi
 80118da:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80118de:	b21b      	sxthmi	r3, r3
 80118e0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80118e4:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 80118e8:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 80118ec:	443b      	add	r3, r7
 80118ee:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80118f2:	4433      	add	r3, r6
 80118f4:	b29b      	uxth	r3, r3
 80118f6:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80118fa:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 80118fe:	10db      	asrs	r3, r3, #3
 8011900:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011904:	4313      	orrs	r3, r2
 8011906:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 801190a:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 801190e:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8011912:	1a9b      	subs	r3, r3, r2
 8011914:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8011918:	e76e      	b.n	80117f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 801191a:	f023 0204 	bic.w	r2, r3, #4
 801191e:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8011922:	428a      	cmp	r2, r1
 8011924:	d003      	beq.n	801192e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
 8011926:	f640 621d 	movw	r2, #3613	@ 0xe1d
 801192a:	4293      	cmp	r3, r2
 801192c:	d138      	bne.n	80119a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
 801192e:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8011932:	4622      	mov	r2, r4
 8011934:	f104 0808 	add.w	r8, r4, #8
 8011938:	4634      	mov	r4, r6
 801193a:	6810      	ldr	r0, [r2, #0]
 801193c:	3208      	adds	r2, #8
 801193e:	f852 1c04 	ldr.w	r1, [r2, #-4]
 8011942:	46b6      	mov	lr, r6
 8011944:	4542      	cmp	r2, r8
 8011946:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801194a:	4676      	mov	r6, lr
 801194c:	d1f5      	bne.n	801193a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
 801194e:	6810      	ldr	r0, [r2, #0]
 8011950:	3b01      	subs	r3, #1
 8011952:	4621      	mov	r1, r4
 8011954:	f8ce 0000 	str.w	r0, [lr]
 8011958:	b29b      	uxth	r3, r3
 801195a:	8892      	ldrh	r2, [r2, #4]
 801195c:	4628      	mov	r0, r5
 801195e:	f8ae 2004 	strh.w	r2, [lr, #4]
 8011962:	4662      	mov	r2, ip
 8011964:	f7ff ff30 	bl	80117c8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011968:	7b41      	ldrb	r1, [r0, #13]
 801196a:	00cb      	lsls	r3, r1, #3
 801196c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011970:	7a03      	ldrb	r3, [r0, #8]
 8011972:	0648      	lsls	r0, r1, #25
 8011974:	ea43 0302 	orr.w	r3, r3, r2
 8011978:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 801197c:	bf44      	itt	mi
 801197e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011982:	b21b      	sxthmi	r3, r3
 8011984:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8011988:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801198c:	005b      	lsls	r3, r3, #1
 801198e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011992:	4313      	orrs	r3, r2
 8011994:	115a      	asrs	r2, r3, #5
 8011996:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801199a:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 801199e:	e047      	b.n	8011a30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
 80119a0:	00c2      	lsls	r2, r0, #3
 80119a2:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80119a6:	7a22      	ldrb	r2, [r4, #8]
 80119a8:	430a      	orrs	r2, r1
 80119aa:	0641      	lsls	r1, r0, #25
 80119ac:	f640 6109 	movw	r1, #3593	@ 0xe09
 80119b0:	bf44      	itt	mi
 80119b2:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80119b6:	b212      	sxthmi	r2, r2
 80119b8:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 80119bc:	f023 0210 	bic.w	r2, r3, #16
 80119c0:	428a      	cmp	r2, r1
 80119c2:	d003      	beq.n	80119cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
 80119c4:	f640 6213 	movw	r2, #3603	@ 0xe13
 80119c8:	4293      	cmp	r3, r2
 80119ca:	d13e      	bne.n	8011a4a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
 80119cc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80119d0:	f104 0808 	add.w	r8, r4, #8
 80119d4:	4696      	mov	lr, r2
 80119d6:	6820      	ldr	r0, [r4, #0]
 80119d8:	3408      	adds	r4, #8
 80119da:	f854 1c04 	ldr.w	r1, [r4, #-4]
 80119de:	4616      	mov	r6, r2
 80119e0:	4544      	cmp	r4, r8
 80119e2:	c603      	stmia	r6!, {r0, r1}
 80119e4:	4632      	mov	r2, r6
 80119e6:	d1f6      	bne.n	80119d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
 80119e8:	6820      	ldr	r0, [r4, #0]
 80119ea:	6030      	str	r0, [r6, #0]
 80119ec:	4628      	mov	r0, r5
 80119ee:	88a1      	ldrh	r1, [r4, #4]
 80119f0:	4674      	mov	r4, lr
 80119f2:	80b1      	strh	r1, [r6, #4]
 80119f4:	4671      	mov	r1, lr
 80119f6:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 80119fa:	0076      	lsls	r6, r6, #1
 80119fc:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8011a00:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8011a04:	4316      	orrs	r6, r2
 8011a06:	f640 6213 	movw	r2, #3603	@ 0xe13
 8011a0a:	4293      	cmp	r3, r2
 8011a0c:	4662      	mov	r2, ip
 8011a0e:	bf16      	itet	ne
 8011a10:	f103 33ff 	addne.w	r3, r3, #4294967295
 8011a14:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8011a18:	b29b      	uxthne	r3, r3
 8011a1a:	f7ff fed5 	bl	80117c8 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8011a1e:	7b43      	ldrb	r3, [r0, #13]
 8011a20:	7a82      	ldrb	r2, [r0, #10]
 8011a22:	005b      	lsls	r3, r3, #1
 8011a24:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8011a28:	4313      	orrs	r3, r2
 8011a2a:	1af6      	subs	r6, r6, r3
 8011a2c:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8011a30:	7b61      	ldrb	r1, [r4, #13]
 8011a32:	00cb      	lsls	r3, r1, #3
 8011a34:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011a38:	7a23      	ldrb	r3, [r4, #8]
 8011a3a:	4313      	orrs	r3, r2
 8011a3c:	064a      	lsls	r2, r1, #25
 8011a3e:	bf44      	itt	mi
 8011a40:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011a44:	b21b      	sxthmi	r3, r3
 8011a46:	1bdb      	subs	r3, r3, r7
 8011a48:	e719      	b.n	801187e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8011a4a:	2300      	movs	r3, #0
 8011a4c:	e7a5      	b.n	801199a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 8011a4e:	bf00      	nop
 8011a50:	3fc00079 	.word	0x3fc00079

08011a54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8011a54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011a58:	4604      	mov	r4, r0
 8011a5a:	b942      	cbnz	r2, 8011a6e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8011a5c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8011a60:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8011a64:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8011a68:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8011a6c:	e047      	b.n	8011afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011a6e:	7b51      	ldrb	r1, [r2, #13]
 8011a70:	8893      	ldrh	r3, [r2, #4]
 8011a72:	010d      	lsls	r5, r1, #4
 8011a74:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8011a78:	79d5      	ldrb	r5, [r2, #7]
 8011a7a:	4305      	orrs	r5, r0
 8011a7c:	2d04      	cmp	r5, #4
 8011a7e:	bfcc      	ite	gt
 8011a80:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8011a84:	f04f 0e01 	movle.w	lr, #1
 8011a88:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8011a8c:	f200 80ab 	bhi.w	8011be6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8011a90:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8011a94:	4283      	cmp	r3, r0
 8011a96:	d216      	bcs.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011a98:	f240 605b 	movw	r0, #1627	@ 0x65b
 8011a9c:	4283      	cmp	r3, r0
 8011a9e:	d859      	bhi.n	8011b54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8011aa0:	f240 6057 	movw	r0, #1623	@ 0x657
 8011aa4:	4283      	cmp	r3, r0
 8011aa6:	d20e      	bcs.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011aa8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011aac:	d24a      	bcs.n	8011b44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8011aae:	f240 604e 	movw	r0, #1614	@ 0x64e
 8011ab2:	4283      	cmp	r3, r0
 8011ab4:	d207      	bcs.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011ab6:	f240 601a 	movw	r0, #1562	@ 0x61a
 8011aba:	4283      	cmp	r3, r0
 8011abc:	d02a      	beq.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011abe:	d821      	bhi.n	8011b04 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8011ac0:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 8011ac4:	d35b      	bcc.n	8011b7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011ac6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8011aca:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011ace:	f040 80d0 	bne.w	8011c72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011ad2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 8011ad6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011ada:	f040 80ca 	bne.w	8011c72 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8011ade:	00cb      	lsls	r3, r1, #3
 8011ae0:	0649      	lsls	r1, r1, #25
 8011ae2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011ae6:	7a13      	ldrb	r3, [r2, #8]
 8011ae8:	ea43 0300 	orr.w	r3, r3, r0
 8011aec:	bf44      	itt	mi
 8011aee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011af2:	b21b      	sxthmi	r3, r3
 8011af4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011af8:	1b5d      	subs	r5, r3, r5
 8011afa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011afe:	4610      	mov	r0, r2
 8011b00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011b04:	f240 604b 	movw	r0, #1611	@ 0x64b
 8011b08:	4283      	cmp	r3, r0
 8011b0a:	d338      	bcc.n	8011b7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011b0c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8011b10:	4283      	cmp	r3, r0
 8011b12:	d9d8      	bls.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011b14:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8011b18:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8011b1c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011b20:	f040 80f3 	bne.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8011b24:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011b28:	f040 80ef 	bne.w	8011d0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8011b2c:	00cb      	lsls	r3, r1, #3
 8011b2e:	064e      	lsls	r6, r1, #25
 8011b30:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011b34:	7a13      	ldrb	r3, [r2, #8]
 8011b36:	ea43 0300 	orr.w	r3, r3, r0
 8011b3a:	bf44      	itt	mi
 8011b3c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011b40:	b21b      	sxthmi	r3, r3
 8011b42:	e7d9      	b.n	8011af8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8011b44:	f240 6054 	movw	r0, #1620	@ 0x654
 8011b48:	4283      	cmp	r3, r0
 8011b4a:	d8e3      	bhi.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011b4c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8011b50:	d9e0      	bls.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011b52:	e7b8      	b.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011b54:	f240 6074 	movw	r0, #1652	@ 0x674
 8011b58:	4283      	cmp	r3, r0
 8011b5a:	d0b4      	beq.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011b5c:	d82d      	bhi.n	8011bba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8011b5e:	f240 605e 	movw	r0, #1630	@ 0x65e
 8011b62:	4283      	cmp	r3, r0
 8011b64:	d804      	bhi.n	8011b70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8011b66:	f240 605d 	movw	r0, #1629	@ 0x65d
 8011b6a:	4283      	cmp	r3, r0
 8011b6c:	d3d2      	bcc.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011b6e:	e7aa      	b.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011b70:	f240 605f 	movw	r0, #1631	@ 0x65f
 8011b74:	4283      	cmp	r3, r0
 8011b76:	d0cd      	beq.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011b78:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 8011b7c:	d0a3      	beq.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011b7e:	00cb      	lsls	r3, r1, #3
 8011b80:	0649      	lsls	r1, r1, #25
 8011b82:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8011b86:	7a13      	ldrb	r3, [r2, #8]
 8011b88:	ea43 0300 	orr.w	r3, r3, r0
 8011b8c:	bf44      	itt	mi
 8011b8e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011b92:	b21b      	sxthmi	r3, r3
 8011b94:	1b5d      	subs	r5, r3, r5
 8011b96:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011b9a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011b9e:	7b53      	ldrb	r3, [r2, #13]
 8011ba0:	015b      	lsls	r3, r3, #5
 8011ba2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8011ba6:	7993      	ldrb	r3, [r2, #6]
 8011ba8:	430b      	orrs	r3, r1
 8011baa:	2105      	movs	r1, #5
 8011bac:	005b      	lsls	r3, r3, #1
 8011bae:	fb93 f3f1 	sdiv	r3, r3, r1
 8011bb2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8011bb6:	440b      	add	r3, r1
 8011bb8:	e756      	b.n	8011a68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8011bba:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8011bbe:	4283      	cmp	r3, r0
 8011bc0:	d809      	bhi.n	8011bd6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8011bc2:	f240 60df 	movw	r0, #1759	@ 0x6df
 8011bc6:	4283      	cmp	r3, r0
 8011bc8:	f4bf af7d 	bcs.w	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011bcc:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8011bd0:	2b05      	cmp	r3, #5
 8011bd2:	d8d4      	bhi.n	8011b7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011bd4:	e777      	b.n	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011bd6:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8011bda:	4283      	cmp	r3, r0
 8011bdc:	d09a      	beq.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011bde:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 8011be2:	4283      	cmp	r3, r0
 8011be4:	e7ca      	b.n	8011b7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8011be6:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8011bea:	d22b      	bcs.n	8011c44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8011bec:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8011bf0:	4283      	cmp	r3, r0
 8011bf2:	d28f      	bcs.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011bf4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8011bf8:	4283      	cmp	r3, r0
 8011bfa:	d816      	bhi.n	8011c2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8011bfc:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8011c00:	4283      	cmp	r3, r0
 8011c02:	f4bf af60 	bcs.w	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c06:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8011c0a:	4283      	cmp	r3, r0
 8011c0c:	d80a      	bhi.n	8011c24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8011c0e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8011c12:	4283      	cmp	r3, r0
 8011c14:	f4bf af57 	bcs.w	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c18:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8011c1c:	4283      	cmp	r3, r0
 8011c1e:	f43f af79 	beq.w	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c22:	e7ac      	b.n	8011b7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8011c24:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8011c28:	e7f8      	b.n	8011c1c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8011c2a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8011c2e:	4283      	cmp	r3, r0
 8011c30:	d802      	bhi.n	8011c38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8011c32:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8011c36:	e798      	b.n	8011b6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8011c38:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8011c3c:	4283      	cmp	r3, r0
 8011c3e:	f47f af42 	bne.w	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c42:	e767      	b.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c44:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8011c48:	4283      	cmp	r3, r0
 8011c4a:	f43f af63 	beq.w	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c4e:	d802      	bhi.n	8011c56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8011c50:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8011c54:	e7f2      	b.n	8011c3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8011c56:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 8011c5a:	4283      	cmp	r3, r0
 8011c5c:	d805      	bhi.n	8011c6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8011c5e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8011c62:	4283      	cmp	r3, r0
 8011c64:	f4ff af2f 	bcc.w	8011ac6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8011c68:	e754      	b.n	8011b14 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8011c6a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 8011c6e:	4283      	cmp	r3, r0
 8011c70:	e7af      	b.n	8011bd2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8011c72:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011c76:	4617      	mov	r7, r2
 8011c78:	f102 0808 	add.w	r8, r2, #8
 8011c7c:	4666      	mov	r6, ip
 8011c7e:	6838      	ldr	r0, [r7, #0]
 8011c80:	3708      	adds	r7, #8
 8011c82:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011c86:	46e6      	mov	lr, ip
 8011c88:	4547      	cmp	r7, r8
 8011c8a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8011c8e:	46f4      	mov	ip, lr
 8011c90:	d1f5      	bne.n	8011c7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8011c92:	6838      	ldr	r0, [r7, #0]
 8011c94:	f8ce 0000 	str.w	r0, [lr]
 8011c98:	88b9      	ldrh	r1, [r7, #4]
 8011c9a:	f8ae 1004 	strh.w	r1, [lr, #4]
 8011c9e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011ca2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011ca6:	d009      	beq.n	8011cbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8011ca8:	7b51      	ldrb	r1, [r2, #13]
 8011caa:	7992      	ldrb	r2, [r2, #6]
 8011cac:	0149      	lsls	r1, r1, #5
 8011cae:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011cb2:	4311      	orrs	r1, r2
 8011cb4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011cb8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011cbc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011cc0:	b2ad      	uxth	r5, r5
 8011cc2:	d00d      	beq.n	8011ce0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 8011cc4:	442b      	add	r3, r5
 8011cc6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011cca:	b29b      	uxth	r3, r3
 8011ccc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011cd0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011cd4:	10db      	asrs	r3, r3, #3
 8011cd6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011cda:	4313      	orrs	r3, r2
 8011cdc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011ce0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011ce4:	00cb      	lsls	r3, r1, #3
 8011ce6:	064f      	lsls	r7, r1, #25
 8011ce8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011cec:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011cf0:	ea43 0302 	orr.w	r3, r3, r2
 8011cf4:	bf44      	itt	mi
 8011cf6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011cfa:	b21b      	sxthmi	r3, r3
 8011cfc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8011d00:	1b5b      	subs	r3, r3, r5
 8011d02:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8011d06:	4632      	mov	r2, r6
 8011d08:	e6f9      	b.n	8011afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8011d0a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8011d0e:	4617      	mov	r7, r2
 8011d10:	f102 0908 	add.w	r9, r2, #8
 8011d14:	4666      	mov	r6, ip
 8011d16:	6838      	ldr	r0, [r7, #0]
 8011d18:	3708      	adds	r7, #8
 8011d1a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8011d1e:	46e0      	mov	r8, ip
 8011d20:	454f      	cmp	r7, r9
 8011d22:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8011d26:	46c4      	mov	ip, r8
 8011d28:	d1f5      	bne.n	8011d16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8011d2a:	6838      	ldr	r0, [r7, #0]
 8011d2c:	f8c8 0000 	str.w	r0, [r8]
 8011d30:	88b9      	ldrh	r1, [r7, #4]
 8011d32:	f8a8 1004 	strh.w	r1, [r8, #4]
 8011d36:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8011d3a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8011d3e:	d009      	beq.n	8011d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8011d40:	7b51      	ldrb	r1, [r2, #13]
 8011d42:	7992      	ldrb	r2, [r2, #6]
 8011d44:	0149      	lsls	r1, r1, #5
 8011d46:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8011d4a:	4311      	orrs	r1, r2
 8011d4c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8011d50:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8011d54:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8011d58:	d00e      	beq.n	8011d78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 8011d5a:	eba3 030e 	sub.w	r3, r3, lr
 8011d5e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8011d62:	b29b      	uxth	r3, r3
 8011d64:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8011d68:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8011d6c:	10db      	asrs	r3, r3, #3
 8011d6e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8011d72:	4313      	orrs	r3, r2
 8011d74:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8011d78:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 8011d7c:	00cb      	lsls	r3, r1, #3
 8011d7e:	0648      	lsls	r0, r1, #25
 8011d80:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8011d84:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8011d88:	ea43 0302 	orr.w	r3, r3, r2
 8011d8c:	bf44      	itt	mi
 8011d8e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8011d92:	b21b      	sxthmi	r3, r3
 8011d94:	1b5d      	subs	r5, r3, r5
 8011d96:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8011d9a:	e7b4      	b.n	8011d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

08011d9c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8011d9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011da0:	461e      	mov	r6, r3
 8011da2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011da4:	4604      	mov	r4, r0
 8011da6:	4617      	mov	r7, r2
 8011da8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8011dac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8011db0:	f7f9 fb2e 	bl	800b410 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011db4:	4605      	mov	r5, r0
 8011db6:	b918      	cbnz	r0, 8011dc0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8011db8:	6030      	str	r0, [r6, #0]
 8011dba:	4628      	mov	r0, r5
 8011dbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011dc0:	683b      	ldr	r3, [r7, #0]
 8011dc2:	4601      	mov	r1, r0
 8011dc4:	4638      	mov	r0, r7
 8011dc6:	68db      	ldr	r3, [r3, #12]
 8011dc8:	4798      	blx	r3
 8011dca:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8011dce:	4602      	mov	r2, r0
 8011dd0:	6030      	str	r0, [r6, #0]
 8011dd2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8011dd6:	d213      	bcs.n	8011e00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8011dd8:	4643      	mov	r3, r8
 8011dda:	4639      	mov	r1, r7
 8011ddc:	4620      	mov	r0, r4
 8011dde:	f7ff fe39 	bl	8011a54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8011de2:	6030      	str	r0, [r6, #0]
 8011de4:	6833      	ldr	r3, [r6, #0]
 8011de6:	b143      	cbz	r3, 8011dfa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8011de8:	7b5a      	ldrb	r2, [r3, #13]
 8011dea:	7a9b      	ldrb	r3, [r3, #10]
 8011dec:	0052      	lsls	r2, r2, #1
 8011dee:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8011df2:	4313      	orrs	r3, r2
 8011df4:	bf0c      	ite	eq
 8011df6:	2301      	moveq	r3, #1
 8011df8:	2300      	movne	r3, #0
 8011dfa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8011dfe:	e7dc      	b.n	8011dba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8011e00:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8011e04:	b29b      	uxth	r3, r3
 8011e06:	2b7f      	cmp	r3, #127	@ 0x7f
 8011e08:	d804      	bhi.n	8011e14 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8011e0a:	4639      	mov	r1, r7
 8011e0c:	4620      	mov	r0, r4
 8011e0e:	f7ff fce7 	bl	80117e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8011e12:	e7e6      	b.n	8011de2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8011e14:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8011e18:	2b00      	cmp	r3, #0
 8011e1a:	d0e3      	beq.n	8011de4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011e1c:	f640 1302 	movw	r3, #2306	@ 0x902
 8011e20:	429d      	cmp	r5, r3
 8011e22:	d1df      	bne.n	8011de4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8011e24:	4601      	mov	r1, r0
 8011e26:	4620      	mov	r0, r4
 8011e28:	f7ff fcaa 	bl	8011780 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8011e2c:	e7d9      	b.n	8011de2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08011e2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8011e2e:	b510      	push	{r4, lr}
 8011e30:	4604      	mov	r4, r0
 8011e32:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8011e36:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011e38:	b1e1      	cbz	r1, 8011e74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8011e3a:	2b0a      	cmp	r3, #10
 8011e3c:	d02d      	beq.n	8011e9a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8011e3e:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8011e40:	3901      	subs	r1, #1
 8011e42:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8011e46:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8011e48:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8011e4c:	1c51      	adds	r1, r2, #1
 8011e4e:	b289      	uxth	r1, r1
 8011e50:	2901      	cmp	r1, #1
 8011e52:	bf8a      	itet	hi
 8011e54:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8011e58:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8011e5a:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8011e5c:	1c5a      	adds	r2, r3, #1
 8011e5e:	8722      	strh	r2, [r4, #56]	@ 0x38
 8011e60:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011e62:	4413      	add	r3, r2
 8011e64:	b29b      	uxth	r3, r3
 8011e66:	2b09      	cmp	r3, #9
 8011e68:	bf88      	it	hi
 8011e6a:	3b0a      	subhi	r3, #10
 8011e6c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011e70:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011e72:	e7de      	b.n	8011e32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8011e74:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011e76:	2b0a      	cmp	r3, #10
 8011e78:	d00f      	beq.n	8011e9a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8011e7a:	4620      	mov	r0, r4
 8011e7c:	f7ff fc3f 	bl	80116fe <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8011e80:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8011e82:	1c5a      	adds	r2, r3, #1
 8011e84:	8722      	strh	r2, [r4, #56]	@ 0x38
 8011e86:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8011e88:	4413      	add	r3, r2
 8011e8a:	b29b      	uxth	r3, r3
 8011e8c:	2b09      	cmp	r3, #9
 8011e8e:	bf88      	it	hi
 8011e90:	3b0a      	subhi	r3, #10
 8011e92:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8011e96:	8458      	strh	r0, [r3, #34]	@ 0x22
 8011e98:	e7ec      	b.n	8011e74 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8011e9a:	bd10      	pop	{r4, pc}

08011e9c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8011e9c:	b538      	push	{r3, r4, r5, lr}
 8011e9e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8011ea0:	4604      	mov	r4, r0
 8011ea2:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8011ea6:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8011ea8:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8011eaa:	3a01      	subs	r2, #1
 8011eac:	8702      	strh	r2, [r0, #56]	@ 0x38
 8011eae:	1c5a      	adds	r2, r3, #1
 8011eb0:	b292      	uxth	r2, r2
 8011eb2:	2a09      	cmp	r2, #9
 8011eb4:	bf8a      	itet	hi
 8011eb6:	3b09      	subhi	r3, #9
 8011eb8:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8011eba:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8011ebc:	f7ff ffb7 	bl	8011e2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8011ec0:	8c23      	ldrh	r3, [r4, #32]
 8011ec2:	2b01      	cmp	r3, #1
 8011ec4:	bf9c      	itt	ls
 8011ec6:	3301      	addls	r3, #1
 8011ec8:	8423      	strhls	r3, [r4, #32]
 8011eca:	8be3      	ldrh	r3, [r4, #30]
 8011ecc:	b90b      	cbnz	r3, 8011ed2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8011ece:	2302      	movs	r3, #2
 8011ed0:	83e3      	strh	r3, [r4, #30]
 8011ed2:	8be3      	ldrh	r3, [r4, #30]
 8011ed4:	4628      	mov	r0, r5
 8011ed6:	3b01      	subs	r3, #1
 8011ed8:	b29b      	uxth	r3, r3
 8011eda:	83e3      	strh	r3, [r4, #30]
 8011edc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011ee0:	8365      	strh	r5, [r4, #26]
 8011ee2:	bd38      	pop	{r3, r4, r5, pc}

08011ee4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8011ee4:	428a      	cmp	r2, r1
 8011ee6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011eea:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8011eec:	d932      	bls.n	8011f54 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8011eee:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8011ef0:	1a54      	subs	r4, r2, r1
 8011ef2:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8011ef6:	19ee      	adds	r6, r5, r7
 8011ef8:	fa1f fe84 	uxth.w	lr, r4
 8011efc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8011f00:	3e01      	subs	r6, #1
 8011f02:	b2b4      	uxth	r4, r6
 8011f04:	eba4 090e 	sub.w	r9, r4, lr
 8011f08:	fa1f f989 	uxth.w	r9, r9
 8011f0c:	2c09      	cmp	r4, #9
 8011f0e:	4626      	mov	r6, r4
 8011f10:	bf88      	it	hi
 8011f12:	f1a4 060a 	subhi.w	r6, r4, #10
 8011f16:	f1bc 0f00 	cmp.w	ip, #0
 8011f1a:	f104 34ff 	add.w	r4, r4, #4294967295
 8011f1e:	bf08      	it	eq
 8011f20:	f04f 0c02 	moveq.w	ip, #2
 8011f24:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8011f28:	b2a4      	uxth	r4, r4
 8011f2a:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011f2e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8011f32:	454c      	cmp	r4, r9
 8011f34:	fa1f fc8c 	uxth.w	ip, ip
 8011f38:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8011f3c:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8011f40:	d1e4      	bne.n	8011f0c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8011f42:	eba5 050e 	sub.w	r5, r5, lr
 8011f46:	eb0e 0408 	add.w	r4, lr, r8
 8011f4a:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8011f4e:	8705      	strh	r5, [r0, #56]	@ 0x38
 8011f50:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8011f54:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8011f56:	250a      	movs	r5, #10
 8011f58:	1a64      	subs	r4, r4, r1
 8011f5a:	4439      	add	r1, r7
 8011f5c:	b289      	uxth	r1, r1
 8011f5e:	8704      	strh	r4, [r0, #56]	@ 0x38
 8011f60:	2909      	cmp	r1, #9
 8011f62:	bf88      	it	hi
 8011f64:	390a      	subhi	r1, #10
 8011f66:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011f68:	b18a      	cbz	r2, 8011f8e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8011f6a:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8011f6c:	3a01      	subs	r2, #1
 8011f6e:	3101      	adds	r1, #1
 8011f70:	b292      	uxth	r2, r2
 8011f72:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8011f76:	8701      	strh	r1, [r0, #56]	@ 0x38
 8011f78:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8011f7a:	b901      	cbnz	r1, 8011f7e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8011f7c:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8011f7e:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8011f80:	3901      	subs	r1, #1
 8011f82:	b289      	uxth	r1, r1
 8011f84:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8011f86:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8011f8a:	844c      	strh	r4, [r1, #34]	@ 0x22
 8011f8c:	e7ec      	b.n	8011f68 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8011f8e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011f92:	f7ff bf4c 	b.w	8011e2e <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08011f96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8011f96:	b570      	push	{r4, r5, r6, lr}
 8011f98:	2500      	movs	r5, #0
 8011f9a:	4295      	cmp	r5, r2
 8011f9c:	d011      	beq.n	8011fc2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8011f9e:	8bc4      	ldrh	r4, [r0, #30]
 8011fa0:	f831 6b02 	ldrh.w	r6, [r1], #2
 8011fa4:	4414      	add	r4, r2
 8011fa6:	3c01      	subs	r4, #1
 8011fa8:	1b64      	subs	r4, r4, r5
 8011faa:	b2a4      	uxth	r4, r4
 8011fac:	2c01      	cmp	r4, #1
 8011fae:	bf88      	it	hi
 8011fb0:	3c02      	subhi	r4, #2
 8011fb2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011fb6:	8b64      	ldrh	r4, [r4, #26]
 8011fb8:	42b4      	cmp	r4, r6
 8011fba:	d117      	bne.n	8011fec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8011fbc:	3501      	adds	r5, #1
 8011fbe:	b2ad      	uxth	r5, r5
 8011fc0:	e7eb      	b.n	8011f9a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8011fc2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8011fc6:	2400      	movs	r4, #0
 8011fc8:	4413      	add	r3, r2
 8011fca:	b2a2      	uxth	r2, r4
 8011fcc:	429a      	cmp	r2, r3
 8011fce:	da0f      	bge.n	8011ff0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8011fd0:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8011fd2:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8011fd6:	3401      	adds	r4, #1
 8011fd8:	4432      	add	r2, r6
 8011fda:	b292      	uxth	r2, r2
 8011fdc:	2a09      	cmp	r2, #9
 8011fde:	bf88      	it	hi
 8011fe0:	3a0a      	subhi	r2, #10
 8011fe2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8011fe6:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8011fe8:	42aa      	cmp	r2, r5
 8011fea:	d0ee      	beq.n	8011fca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8011fec:	2000      	movs	r0, #0
 8011fee:	bd70      	pop	{r4, r5, r6, pc}
 8011ff0:	2001      	movs	r0, #1
 8011ff2:	e7fc      	b.n	8011fee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08011ff4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8011ff4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011ff8:	4605      	mov	r5, r0
 8011ffa:	4616      	mov	r6, r2
 8011ffc:	1c8c      	adds	r4, r1, #2
 8011ffe:	8809      	ldrh	r1, [r1, #0]
 8012000:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8012004:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8012008:	42b3      	cmp	r3, r6
 801200a:	d124      	bne.n	8012056 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 801200c:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8012010:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8012014:	f001 070f 	and.w	r7, r1, #15
 8012018:	4652      	mov	r2, sl
 801201a:	f8cd 8000 	str.w	r8, [sp]
 801201e:	464b      	mov	r3, r9
 8012020:	4621      	mov	r1, r4
 8012022:	4628      	mov	r0, r5
 8012024:	f7ff ffb7 	bl	8011f96 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8012028:	4683      	mov	fp, r0
 801202a:	b168      	cbz	r0, 8012048 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801202c:	eb0a 0109 	add.w	r1, sl, r9
 8012030:	463a      	mov	r2, r7
 8012032:	4628      	mov	r0, r5
 8012034:	4441      	add	r1, r8
 8012036:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801203a:	4649      	mov	r1, r9
 801203c:	f7ff ff52 	bl	8011ee4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8012040:	4658      	mov	r0, fp
 8012042:	b003      	add	sp, #12
 8012044:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012048:	eb07 010a 	add.w	r1, r7, sl
 801204c:	4449      	add	r1, r9
 801204e:	4441      	add	r1, r8
 8012050:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8012054:	e7d2      	b.n	8011ffc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8012056:	f04f 0b00 	mov.w	fp, #0
 801205a:	e7f1      	b.n	8012040 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801205c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801205c:	b570      	push	{r4, r5, r6, lr}
 801205e:	8810      	ldrh	r0, [r2, #0]
 8012060:	4298      	cmp	r0, r3
 8012062:	d817      	bhi.n	8012094 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012064:	1e48      	subs	r0, r1, #1
 8012066:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 801206a:	4298      	cmp	r0, r3
 801206c:	d312      	bcc.n	8012094 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801206e:	2400      	movs	r4, #0
 8012070:	428c      	cmp	r4, r1
 8012072:	d20f      	bcs.n	8012094 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8012074:	1860      	adds	r0, r4, r1
 8012076:	1040      	asrs	r0, r0, #1
 8012078:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801207c:	0085      	lsls	r5, r0, #2
 801207e:	42b3      	cmp	r3, r6
 8012080:	d902      	bls.n	8012088 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8012082:	3001      	adds	r0, #1
 8012084:	b284      	uxth	r4, r0
 8012086:	e7f3      	b.n	8012070 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8012088:	d201      	bcs.n	801208e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 801208a:	b281      	uxth	r1, r0
 801208c:	e7f0      	b.n	8012070 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801208e:	442a      	add	r2, r5
 8012090:	8850      	ldrh	r0, [r2, #2]
 8012092:	bd70      	pop	{r4, r5, r6, pc}
 8012094:	2000      	movs	r0, #0
 8012096:	e7fc      	b.n	8012092 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08012098 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8012098:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801209c:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801209e:	4604      	mov	r4, r0
 80120a0:	260b      	movs	r6, #11
 80120a2:	886f      	ldrh	r7, [r5, #2]
 80120a4:	087f      	lsrs	r7, r7, #1
 80120a6:	3e01      	subs	r6, #1
 80120a8:	d013      	beq.n	80120d2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80120aa:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 80120ac:	462a      	mov	r2, r5
 80120ae:	4639      	mov	r1, r7
 80120b0:	4620      	mov	r0, r4
 80120b2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80120b6:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80120ba:	4643      	mov	r3, r8
 80120bc:	f7ff ffce 	bl	801205c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80120c0:	b138      	cbz	r0, 80120d2 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80120c2:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80120c6:	4642      	mov	r2, r8
 80120c8:	4620      	mov	r0, r4
 80120ca:	f7ff ff93 	bl	8011ff4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80120ce:	2800      	cmp	r0, #0
 80120d0:	d1e9      	bne.n	80120a6 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80120d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080120d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80120d8:	b570      	push	{r4, r5, r6, lr}
 80120da:	694a      	ldr	r2, [r1, #20]
 80120dc:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80120de:	684b      	ldr	r3, [r1, #4]
 80120e0:	1b54      	subs	r4, r2, r5
 80120e2:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80120e4:	f000 8106 	beq.w	80122f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80120e8:	1b9b      	subs	r3, r3, r6
 80120ea:	d003      	beq.n	80120f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80120ec:	4363      	muls	r3, r4
 80120ee:	2210      	movs	r2, #16
 80120f0:	fb93 f3f2 	sdiv	r3, r3, r2
 80120f4:	680c      	ldr	r4, [r1, #0]
 80120f6:	698a      	ldr	r2, [r1, #24]
 80120f8:	1b65      	subs	r5, r4, r5
 80120fa:	f000 80fd 	beq.w	80122f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80120fe:	1b92      	subs	r2, r2, r6
 8012100:	d003      	beq.n	801210a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8012102:	436a      	muls	r2, r5
 8012104:	2410      	movs	r4, #16
 8012106:	fb92 f2f4 	sdiv	r2, r2, r4
 801210a:	1a9b      	subs	r3, r3, r2
 801210c:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8012334 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8012110:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012114:	460a      	mov	r2, r1
 8012116:	ee07 3a90 	vmov	s15, r3
 801211a:	f100 040c 	add.w	r4, r0, #12
 801211e:	4603      	mov	r3, r0
 8012120:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012124:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012128:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801212c:	eeb1 6a43 	vneg.f32	s12, s6
 8012130:	edd2 7a02 	vldr	s15, [r2, #8]
 8012134:	3214      	adds	r2, #20
 8012136:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801213a:	ece3 6a01 	vstmia	r3!, {s13}
 801213e:	429c      	cmp	r4, r3
 8012140:	ed52 7a02 	vldr	s15, [r2, #-8]
 8012144:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012148:	edc3 7a02 	vstr	s15, [r3, #8]
 801214c:	ed52 7a01 	vldr	s15, [r2, #-4]
 8012150:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012154:	edc3 7a05 	vstr	s15, [r3, #20]
 8012158:	d1ea      	bne.n	8012130 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801215a:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801215c:	698b      	ldr	r3, [r1, #24]
 801215e:	edd0 4a02 	vldr	s9, [r0, #8]
 8012162:	1a9b      	subs	r3, r3, r2
 8012164:	edd0 3a00 	vldr	s7, [r0]
 8012168:	edd0 6a01 	vldr	s13, [r0, #4]
 801216c:	ee07 3a90 	vmov	s15, r3
 8012170:	684b      	ldr	r3, [r1, #4]
 8012172:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8012176:	ed90 5a05 	vldr	s10, [r0, #20]
 801217a:	1a9b      	subs	r3, r3, r2
 801217c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012180:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8012184:	ed90 2a03 	vldr	s4, [r0, #12]
 8012188:	ee07 3a10 	vmov	s14, r3
 801218c:	edd0 5a04 	vldr	s11, [r0, #16]
 8012190:	ee67 7a84 	vmul.f32	s15, s15, s8
 8012194:	ed90 1a07 	vldr	s2, [r0, #28]
 8012198:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801219c:	edd0 2a06 	vldr	s5, [r0, #24]
 80121a0:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80121a4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80121a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80121ac:	ee32 5a45 	vsub.f32	s10, s4, s10
 80121b0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80121b4:	ee67 7a83 	vmul.f32	s15, s15, s6
 80121b8:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 80121bc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80121be:	694a      	ldr	r2, [r1, #20]
 80121c0:	1b13      	subs	r3, r2, r4
 80121c2:	ee07 3a10 	vmov	s14, r3
 80121c6:	680b      	ldr	r3, [r1, #0]
 80121c8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80121cc:	1b1b      	subs	r3, r3, r4
 80121ce:	ee27 7a04 	vmul.f32	s14, s14, s8
 80121d2:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80121d6:	ee07 3a10 	vmov	s14, r3
 80121da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80121de:	ee27 7a04 	vmul.f32	s14, s14, s8
 80121e2:	eee6 4a87 	vfma.f32	s9, s13, s14
 80121e6:	ee64 4a86 	vmul.f32	s9, s9, s12
 80121ea:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80121ee:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80121f0:	698b      	ldr	r3, [r1, #24]
 80121f2:	1a9b      	subs	r3, r3, r2
 80121f4:	ee06 3a90 	vmov	s13, r3
 80121f8:	684b      	ldr	r3, [r1, #4]
 80121fa:	1a9b      	subs	r3, r3, r2
 80121fc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012200:	ee07 3a10 	vmov	s14, r3
 8012204:	ee66 6a84 	vmul.f32	s13, s13, s8
 8012208:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801220c:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8012210:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012214:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012218:	ee66 6a83 	vmul.f32	s13, s13, s6
 801221c:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8012220:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012222:	694a      	ldr	r2, [r1, #20]
 8012224:	1b13      	subs	r3, r2, r4
 8012226:	ee07 3a10 	vmov	s14, r3
 801222a:	680b      	ldr	r3, [r1, #0]
 801222c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012230:	1b1b      	subs	r3, r3, r4
 8012232:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012236:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801223a:	ee07 3a10 	vmov	s14, r3
 801223e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012242:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012246:	eea5 5a87 	vfma.f32	s10, s11, s14
 801224a:	edd0 5a08 	vldr	s11, [r0, #32]
 801224e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8012252:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8012256:	ee25 5a06 	vmul.f32	s10, s10, s12
 801225a:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 801225e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8012260:	698b      	ldr	r3, [r1, #24]
 8012262:	1a9b      	subs	r3, r3, r2
 8012264:	ee07 3a10 	vmov	s14, r3
 8012268:	684b      	ldr	r3, [r1, #4]
 801226a:	1a9b      	subs	r3, r3, r2
 801226c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012270:	ee01 3a90 	vmov	s3, r3
 8012274:	ee27 7a04 	vmul.f32	s14, s14, s8
 8012278:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 801227c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8012280:	ee61 1a84 	vmul.f32	s3, s3, s8
 8012284:	eea1 7a21 	vfma.f32	s14, s2, s3
 8012288:	ee27 7a03 	vmul.f32	s14, s14, s6
 801228c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8012290:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8012292:	694a      	ldr	r2, [r1, #20]
 8012294:	1b13      	subs	r3, r2, r4
 8012296:	ee03 3a10 	vmov	s6, r3
 801229a:	680b      	ldr	r3, [r1, #0]
 801229c:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80122a0:	1b1b      	subs	r3, r3, r4
 80122a2:	ee23 3a04 	vmul.f32	s6, s6, s8
 80122a6:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80122aa:	ee03 3a10 	vmov	s6, r3
 80122ae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80122b2:	ee23 4a04 	vmul.f32	s8, s6, s8
 80122b6:	eee1 5a04 	vfma.f32	s11, s2, s8
 80122ba:	ee25 6a86 	vmul.f32	s12, s11, s12
 80122be:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80122c2:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80122c6:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80122ca:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80122ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80122d2:	dd13      	ble.n	80122fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80122d4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80122d8:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80122dc:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80122de:	eee3 7a87 	vfma.f32	s15, s7, s14
 80122e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80122e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80122ea:	dd15      	ble.n	8012318 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80122ec:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80122f0:	6403      	str	r3, [r0, #64]	@ 0x40
 80122f2:	bd70      	pop	{r4, r5, r6, pc}
 80122f4:	4623      	mov	r3, r4
 80122f6:	e6fd      	b.n	80120f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80122f8:	462a      	mov	r2, r5
 80122fa:	e706      	b.n	801210a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80122fc:	d502      	bpl.n	8012304 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80122fe:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8012302:	e7e9      	b.n	80122d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8012304:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8012308:	eea3 2a85 	vfma.f32	s4, s7, s10
 801230c:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8012310:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012314:	dade      	bge.n	80122d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8012316:	e7f2      	b.n	80122fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8012318:	d502      	bpl.n	8012320 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801231a:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 801231e:	e7e7      	b.n	80122f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8012320:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8012324:	eee3 4a86 	vfma.f32	s9, s7, s12
 8012328:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 801232c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012330:	dadc      	bge.n	80122ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8012332:	e7f2      	b.n	801231a <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8012334:	3d800000 	.word	0x3d800000

08012338 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8012338:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801233c:	2714      	movs	r7, #20
 801233e:	435f      	muls	r7, r3
 8012340:	eb02 0c07 	add.w	ip, r2, r7
 8012344:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8012348:	f115 0e0f 	adds.w	lr, r5, #15
 801234c:	f100 80a2 	bmi.w	8012494 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8012350:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8012354:	9c08      	ldr	r4, [sp, #32]
 8012356:	2614      	movs	r6, #20
 8012358:	f8c0 e014 	str.w	lr, [r0, #20]
 801235c:	4366      	muls	r6, r4
 801235e:	eb02 0806 	add.w	r8, r2, r6
 8012362:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8012366:	f115 040f 	adds.w	r4, r5, #15
 801236a:	f100 809f 	bmi.w	80124ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801236e:	1124      	asrs	r4, r4, #4
 8012370:	eba4 040e 	sub.w	r4, r4, lr
 8012374:	6184      	str	r4, [r0, #24]
 8012376:	2c00      	cmp	r4, #0
 8012378:	f000 808a 	beq.w	8012490 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 801237c:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8012380:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8012384:	5995      	ldr	r5, [r2, r6]
 8012386:	eba4 0809 	sub.w	r8, r4, r9
 801238a:	59d4      	ldr	r4, [r2, r7]
 801238c:	eba5 0a04 	sub.w	sl, r5, r4
 8012390:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8012394:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8012398:	fb0e fe05 	mul.w	lr, lr, r5
 801239c:	fb0a ee19 	mls	lr, sl, r9, lr
 80123a0:	fb08 e404 	mla	r4, r8, r4, lr
 80123a4:	3c01      	subs	r4, #1
 80123a6:	19a4      	adds	r4, r4, r6
 80123a8:	f100 808c 	bmi.w	80124c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80123ac:	fb94 fef6 	sdiv	lr, r4, r6
 80123b0:	fb06 441e 	mls	r4, r6, lr, r4
 80123b4:	f8c0 e000 	str.w	lr, [r0]
 80123b8:	6104      	str	r4, [r0, #16]
 80123ba:	2d00      	cmp	r5, #0
 80123bc:	f2c0 8095 	blt.w	80124ea <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80123c0:	fb95 f4f6 	sdiv	r4, r5, r6
 80123c4:	fb06 5514 	mls	r5, r6, r4, r5
 80123c8:	6044      	str	r4, [r0, #4]
 80123ca:	6085      	str	r5, [r0, #8]
 80123cc:	60c6      	str	r6, [r0, #12]
 80123ce:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80123d2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80123d6:	6945      	ldr	r5, [r0, #20]
 80123d8:	59d2      	ldr	r2, [r2, r7]
 80123da:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80123de:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 801250c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80123e2:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80123e6:	ee07 4a10 	vmov	s14, r4
 80123ea:	6804      	ldr	r4, [r0, #0]
 80123ec:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80123f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80123f4:	ee07 2a90 	vmov	s15, r2
 80123f8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80123fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012400:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8012404:	edd3 6a00 	vldr	s13, [r3]
 8012408:	eee6 6a07 	vfma.f32	s13, s12, s14
 801240c:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8012410:	eee6 6a27 	vfma.f32	s13, s12, s15
 8012414:	edc0 6a07 	vstr	s13, [r0, #28]
 8012418:	edd0 6a01 	vldr	s13, [r0, #4]
 801241c:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8012420:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8012424:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8012428:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801242c:	ed80 6a08 	vstr	s12, [r0, #32]
 8012430:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8012432:	6242      	str	r2, [r0, #36]	@ 0x24
 8012434:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8012438:	ed93 6a03 	vldr	s12, [r3, #12]
 801243c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8012440:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012444:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8012448:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 801244c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8012450:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8012454:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8012458:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 801245c:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 801245e:	6302      	str	r2, [r0, #48]	@ 0x30
 8012460:	ed93 6a06 	vldr	s12, [r3, #24]
 8012464:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8012468:	eea5 6a87 	vfma.f32	s12, s11, s14
 801246c:	eeb0 7a46 	vmov.f32	s14, s12
 8012470:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8012474:	eea6 7a27 	vfma.f32	s14, s12, s15
 8012478:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801247c:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8012480:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8012484:	eee6 7a87 	vfma.f32	s15, s13, s14
 8012488:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 801248c:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 801248e:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8012490:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8012494:	2410      	movs	r4, #16
 8012496:	f1c5 0501 	rsb	r5, r5, #1
 801249a:	fb9e fef4 	sdiv	lr, lr, r4
 801249e:	f015 050f 	ands.w	r5, r5, #15
 80124a2:	bf18      	it	ne
 80124a4:	2501      	movne	r5, #1
 80124a6:	ebae 0e05 	sub.w	lr, lr, r5
 80124aa:	e753      	b.n	8012354 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80124ac:	f04f 0910 	mov.w	r9, #16
 80124b0:	f1c5 0501 	rsb	r5, r5, #1
 80124b4:	fb94 f4f9 	sdiv	r4, r4, r9
 80124b8:	f015 050f 	ands.w	r5, r5, #15
 80124bc:	bf18      	it	ne
 80124be:	2501      	movne	r5, #1
 80124c0:	1b64      	subs	r4, r4, r5
 80124c2:	e755      	b.n	8012370 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80124c4:	4264      	negs	r4, r4
 80124c6:	fb94 fef6 	sdiv	lr, r4, r6
 80124ca:	f1ce 0800 	rsb	r8, lr, #0
 80124ce:	fb06 441e 	mls	r4, r6, lr, r4
 80124d2:	f8c0 8000 	str.w	r8, [r0]
 80124d6:	6104      	str	r4, [r0, #16]
 80124d8:	2c00      	cmp	r4, #0
 80124da:	f43f af6e 	beq.w	80123ba <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80124de:	ea6f 0e0e 	mvn.w	lr, lr
 80124e2:	1b34      	subs	r4, r6, r4
 80124e4:	f8c0 e000 	str.w	lr, [r0]
 80124e8:	e766      	b.n	80123b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80124ea:	426d      	negs	r5, r5
 80124ec:	fb95 f4f6 	sdiv	r4, r5, r6
 80124f0:	f1c4 0e00 	rsb	lr, r4, #0
 80124f4:	fb06 5514 	mls	r5, r6, r4, r5
 80124f8:	f8c0 e004 	str.w	lr, [r0, #4]
 80124fc:	6085      	str	r5, [r0, #8]
 80124fe:	2d00      	cmp	r5, #0
 8012500:	f43f af64 	beq.w	80123cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8012504:	43e4      	mvns	r4, r4
 8012506:	1b75      	subs	r5, r6, r5
 8012508:	6044      	str	r4, [r0, #4]
 801250a:	e75e      	b.n	80123ca <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 801250c:	3d800000 	.word	0x3d800000

08012510 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8012510:	4b01      	ldr	r3, [pc, #4]	@ (8012518 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8012512:	6018      	str	r0, [r3, #0]
 8012514:	4770      	bx	lr
 8012516:	bf00      	nop
 8012518:	20001bcc 	.word	0x20001bcc

0801251c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 801251c:	4b06      	ldr	r3, [pc, #24]	@ (8012538 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 801251e:	881a      	ldrh	r2, [r3, #0]
 8012520:	4282      	cmp	r2, r0
 8012522:	d807      	bhi.n	8012534 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8012524:	4b05      	ldr	r3, [pc, #20]	@ (801253c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8012526:	881b      	ldrh	r3, [r3, #0]
 8012528:	4413      	add	r3, r2
 801252a:	4298      	cmp	r0, r3
 801252c:	bfac      	ite	ge
 801252e:	2000      	movge	r0, #0
 8012530:	2001      	movlt	r0, #1
 8012532:	4770      	bx	lr
 8012534:	2000      	movs	r0, #0
 8012536:	4770      	bx	lr
 8012538:	20001bec 	.word	0x20001bec
 801253c:	20001bf0 	.word	0x20001bf0

08012540 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8012540:	b508      	push	{r3, lr}
 8012542:	4601      	mov	r1, r0
 8012544:	f7ff ffea 	bl	801251c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8012548:	b118      	cbz	r0, 8012552 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801254a:	4b02      	ldr	r3, [pc, #8]	@ (8012554 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 801254c:	681b      	ldr	r3, [r3, #0]
 801254e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012552:	bd08      	pop	{r3, pc}
 8012554:	20001bd0 	.word	0x20001bd0

08012558 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8012558:	b5f0      	push	{r4, r5, r6, r7, lr}
 801255a:	4c24      	ldr	r4, [pc, #144]	@ (80125ec <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 801255c:	6823      	ldr	r3, [r4, #0]
 801255e:	2b00      	cmp	r3, #0
 8012560:	d042      	beq.n	80125e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8012562:	4a23      	ldr	r2, [pc, #140]	@ (80125f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8012564:	4d23      	ldr	r5, [pc, #140]	@ (80125f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8012566:	8811      	ldrh	r1, [r2, #0]
 8012568:	f8b5 c000 	ldrh.w	ip, [r5]
 801256c:	4822      	ldr	r0, [pc, #136]	@ (80125f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 801256e:	4461      	add	r1, ip
 8012570:	1c4a      	adds	r2, r1, #1
 8012572:	008f      	lsls	r7, r1, #2
 8012574:	f022 0201 	bic.w	r2, r2, #1
 8012578:	19de      	adds	r6, r3, r7
 801257a:	0412      	lsls	r2, r2, #16
 801257c:	6006      	str	r6, [r0, #0]
 801257e:	4e1f      	ldr	r6, [pc, #124]	@ (80125fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8012580:	0c12      	lsrs	r2, r2, #16
 8012582:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8012586:	19da      	adds	r2, r3, r7
 8012588:	6032      	str	r2, [r6, #0]
 801258a:	220e      	movs	r2, #14
 801258c:	fb02 f20c 	mul.w	r2, r2, ip
 8012590:	3203      	adds	r2, #3
 8012592:	f022 0203 	bic.w	r2, r2, #3
 8012596:	443a      	add	r2, r7
 8012598:	4f19      	ldr	r7, [pc, #100]	@ (8012600 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801259a:	4413      	add	r3, r2
 801259c:	603b      	str	r3, [r7, #0]
 801259e:	2300      	movs	r3, #0
 80125a0:	4f18      	ldr	r7, [pc, #96]	@ (8012604 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80125a2:	469c      	mov	ip, r3
 80125a4:	803b      	strh	r3, [r7, #0]
 80125a6:	4f18      	ldr	r7, [pc, #96]	@ (8012608 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80125a8:	683f      	ldr	r7, [r7, #0]
 80125aa:	1aba      	subs	r2, r7, r2
 80125ac:	4f17      	ldr	r7, [pc, #92]	@ (801260c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 80125ae:	603a      	str	r2, [r7, #0]
 80125b0:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 80125b4:	4a16      	ldr	r2, [pc, #88]	@ (8012610 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 80125b6:	8013      	strh	r3, [r2, #0]
 80125b8:	428b      	cmp	r3, r1
 80125ba:	d10d      	bne.n	80125d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80125bc:	882d      	ldrh	r5, [r5, #0]
 80125be:	2300      	movs	r3, #0
 80125c0:	6830      	ldr	r0, [r6, #0]
 80125c2:	240e      	movs	r4, #14
 80125c4:	429d      	cmp	r5, r3
 80125c6:	d90f      	bls.n	80125e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80125c8:	fb04 0203 	mla	r2, r4, r3, r0
 80125cc:	3301      	adds	r3, #1
 80125ce:	7b11      	ldrb	r1, [r2, #12]
 80125d0:	f36f 1145 	bfc	r1, #5, #1
 80125d4:	7311      	strb	r1, [r2, #12]
 80125d6:	e7f5      	b.n	80125c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80125d8:	6822      	ldr	r2, [r4, #0]
 80125da:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80125de:	6802      	ldr	r2, [r0, #0]
 80125e0:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80125e4:	3301      	adds	r3, #1
 80125e6:	e7e7      	b.n	80125b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80125e8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80125ea:	bf00      	nop
 80125ec:	20001bd0 	.word	0x20001bd0
 80125f0:	20001bec 	.word	0x20001bec
 80125f4:	20001bf0 	.word	0x20001bf0
 80125f8:	20001be4 	.word	0x20001be4
 80125fc:	20001bd4 	.word	0x20001bd4
 8012600:	20001bdc 	.word	0x20001bdc
 8012604:	20001bee 	.word	0x20001bee
 8012608:	20001bd8 	.word	0x20001bd8
 801260c:	20001be8 	.word	0x20001be8
 8012610:	20001be0 	.word	0x20001be0

08012614 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8012614:	4b06      	ldr	r3, [pc, #24]	@ (8012630 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8012616:	681b      	ldr	r3, [r3, #0]
 8012618:	b943      	cbnz	r3, 801262c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801261a:	b139      	cbz	r1, 801262c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801261c:	4b05      	ldr	r3, [pc, #20]	@ (8012634 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 801261e:	801a      	strh	r2, [r3, #0]
 8012620:	4b05      	ldr	r3, [pc, #20]	@ (8012638 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8012622:	6019      	str	r1, [r3, #0]
 8012624:	4b05      	ldr	r3, [pc, #20]	@ (801263c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8012626:	6018      	str	r0, [r3, #0]
 8012628:	f7ff bf96 	b.w	8012558 <_ZN8touchgfx6Bitmap10clearCacheEv>
 801262c:	4770      	bx	lr
 801262e:	bf00      	nop
 8012630:	20001bdc 	.word	0x20001bdc
 8012634:	20001bf0 	.word	0x20001bf0
 8012638:	20001bd8 	.word	0x20001bd8
 801263c:	20001bd0 	.word	0x20001bd0

08012640 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8012640:	b470      	push	{r4, r5, r6}
 8012642:	4c07      	ldr	r4, [pc, #28]	@ (8012660 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8012644:	4605      	mov	r5, r0
 8012646:	4610      	mov	r0, r2
 8012648:	9a03      	ldr	r2, [sp, #12]
 801264a:	6826      	ldr	r6, [r4, #0]
 801264c:	b936      	cbnz	r6, 801265c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 801264e:	6025      	str	r5, [r4, #0]
 8012650:	4c04      	ldr	r4, [pc, #16]	@ (8012664 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8012652:	8021      	strh	r1, [r4, #0]
 8012654:	4619      	mov	r1, r3
 8012656:	bc70      	pop	{r4, r5, r6}
 8012658:	f7ff bfdc 	b.w	8012614 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 801265c:	bc70      	pop	{r4, r5, r6}
 801265e:	4770      	bx	lr
 8012660:	20001bf4 	.word	0x20001bf4
 8012664:	20001bec 	.word	0x20001bec

08012668 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8012668:	4a12      	ldr	r2, [pc, #72]	@ (80126b4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801266a:	8803      	ldrh	r3, [r0, #0]
 801266c:	8812      	ldrh	r2, [r2, #0]
 801266e:	4293      	cmp	r3, r2
 8012670:	d207      	bcs.n	8012682 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8012672:	4a11      	ldr	r2, [pc, #68]	@ (80126b8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8012674:	2114      	movs	r1, #20
 8012676:	6812      	ldr	r2, [r2, #0]
 8012678:	fb01 2303 	mla	r3, r1, r3, r2
 801267c:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8012680:	4770      	bx	lr
 8012682:	490e      	ldr	r1, [pc, #56]	@ (80126bc <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8012684:	8809      	ldrh	r1, [r1, #0]
 8012686:	4411      	add	r1, r2
 8012688:	428b      	cmp	r3, r1
 801268a:	da04      	bge.n	8012696 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 801268c:	1a9b      	subs	r3, r3, r2
 801268e:	4a0c      	ldr	r2, [pc, #48]	@ (80126c0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8012690:	210e      	movs	r1, #14
 8012692:	6812      	ldr	r2, [r2, #0]
 8012694:	e7f0      	b.n	8012678 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8012696:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801269a:	4293      	cmp	r3, r2
 801269c:	d108      	bne.n	80126b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 801269e:	4b09      	ldr	r3, [pc, #36]	@ (80126c4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80126a0:	781b      	ldrb	r3, [r3, #0]
 80126a2:	b91b      	cbnz	r3, 80126ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80126a4:	4b08      	ldr	r3, [pc, #32]	@ (80126c8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80126a6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80126aa:	4770      	bx	lr
 80126ac:	4b07      	ldr	r3, [pc, #28]	@ (80126cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 80126ae:	e7fa      	b.n	80126a6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 80126b0:	2000      	movs	r0, #0
 80126b2:	4770      	bx	lr
 80126b4:	20001bec 	.word	0x20001bec
 80126b8:	20001bf4 	.word	0x20001bf4
 80126bc:	20001bf0 	.word	0x20001bf0
 80126c0:	20001bd4 	.word	0x20001bd4
 80126c4:	20001b64 	.word	0x20001b64
 80126c8:	20001b66 	.word	0x20001b66
 80126cc:	20001b68 	.word	0x20001b68

080126d0 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80126d0:	4a12      	ldr	r2, [pc, #72]	@ (801271c <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80126d2:	8803      	ldrh	r3, [r0, #0]
 80126d4:	8812      	ldrh	r2, [r2, #0]
 80126d6:	4293      	cmp	r3, r2
 80126d8:	d207      	bcs.n	80126ea <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80126da:	4a11      	ldr	r2, [pc, #68]	@ (8012720 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80126dc:	2114      	movs	r1, #20
 80126de:	6812      	ldr	r2, [r2, #0]
 80126e0:	fb01 2303 	mla	r3, r1, r3, r2
 80126e4:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80126e8:	4770      	bx	lr
 80126ea:	490e      	ldr	r1, [pc, #56]	@ (8012724 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80126ec:	8809      	ldrh	r1, [r1, #0]
 80126ee:	4411      	add	r1, r2
 80126f0:	428b      	cmp	r3, r1
 80126f2:	da04      	bge.n	80126fe <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80126f4:	1a9b      	subs	r3, r3, r2
 80126f6:	4a0c      	ldr	r2, [pc, #48]	@ (8012728 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80126f8:	210e      	movs	r1, #14
 80126fa:	6812      	ldr	r2, [r2, #0]
 80126fc:	e7f0      	b.n	80126e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80126fe:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012702:	4293      	cmp	r3, r2
 8012704:	d108      	bne.n	8012718 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8012706:	4b09      	ldr	r3, [pc, #36]	@ (801272c <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8012708:	781b      	ldrb	r3, [r3, #0]
 801270a:	b91b      	cbnz	r3, 8012714 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 801270c:	4b08      	ldr	r3, [pc, #32]	@ (8012730 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 801270e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8012712:	4770      	bx	lr
 8012714:	4b07      	ldr	r3, [pc, #28]	@ (8012734 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8012716:	e7fa      	b.n	801270e <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8012718:	2000      	movs	r0, #0
 801271a:	4770      	bx	lr
 801271c:	20001bec 	.word	0x20001bec
 8012720:	20001bf4 	.word	0x20001bf4
 8012724:	20001bf0 	.word	0x20001bf0
 8012728:	20001bd4 	.word	0x20001bd4
 801272c:	20001b64 	.word	0x20001b64
 8012730:	20001b68 	.word	0x20001b68
 8012734:	20001b66 	.word	0x20001b66

08012738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8012738:	4a22      	ldr	r2, [pc, #136]	@ (80127c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801273a:	b530      	push	{r4, r5, lr}
 801273c:	880b      	ldrh	r3, [r1, #0]
 801273e:	8812      	ldrh	r2, [r2, #0]
 8012740:	4293      	cmp	r3, r2
 8012742:	d213      	bcs.n	801276c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8012744:	4a20      	ldr	r2, [pc, #128]	@ (80127c8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8012746:	2114      	movs	r1, #20
 8012748:	6812      	ldr	r2, [r2, #0]
 801274a:	fb01 2303 	mla	r3, r1, r3, r2
 801274e:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8012752:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8012756:	8a1a      	ldrh	r2, [r3, #16]
 8012758:	8a5b      	ldrh	r3, [r3, #18]
 801275a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 801275e:	8004      	strh	r4, [r0, #0]
 8012760:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8012764:	8041      	strh	r1, [r0, #2]
 8012766:	8082      	strh	r2, [r0, #4]
 8012768:	80c3      	strh	r3, [r0, #6]
 801276a:	e024      	b.n	80127b6 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 801276c:	4917      	ldr	r1, [pc, #92]	@ (80127cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 801276e:	8809      	ldrh	r1, [r1, #0]
 8012770:	4411      	add	r1, r2
 8012772:	428b      	cmp	r3, r1
 8012774:	da10      	bge.n	8012798 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8012776:	1a9b      	subs	r3, r3, r2
 8012778:	220e      	movs	r2, #14
 801277a:	4353      	muls	r3, r2
 801277c:	4a14      	ldr	r2, [pc, #80]	@ (80127d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 801277e:	6811      	ldr	r1, [r2, #0]
 8012780:	18ca      	adds	r2, r1, r3
 8012782:	5ecd      	ldrsh	r5, [r1, r3]
 8012784:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8012788:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 801278c:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8012790:	8005      	strh	r5, [r0, #0]
 8012792:	8044      	strh	r4, [r0, #2]
 8012794:	8081      	strh	r1, [r0, #4]
 8012796:	e7e7      	b.n	8012768 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8012798:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801279c:	4293      	cmp	r3, r2
 801279e:	d10b      	bne.n	80127b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 80127a0:	4b0c      	ldr	r3, [pc, #48]	@ (80127d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 80127a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80127a6:	4b0c      	ldr	r3, [pc, #48]	@ (80127d8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 80127a8:	8081      	strh	r1, [r0, #4]
 80127aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80127ae:	2300      	movs	r3, #0
 80127b0:	80c2      	strh	r2, [r0, #6]
 80127b2:	8003      	strh	r3, [r0, #0]
 80127b4:	8043      	strh	r3, [r0, #2]
 80127b6:	bd30      	pop	{r4, r5, pc}
 80127b8:	2300      	movs	r3, #0
 80127ba:	8003      	strh	r3, [r0, #0]
 80127bc:	8043      	strh	r3, [r0, #2]
 80127be:	8083      	strh	r3, [r0, #4]
 80127c0:	e7d2      	b.n	8012768 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80127c2:	bf00      	nop
 80127c4:	20001bec 	.word	0x20001bec
 80127c8:	20001bf4 	.word	0x20001bf4
 80127cc:	20001bf0 	.word	0x20001bf0
 80127d0:	20001bd4 	.word	0x20001bd4
 80127d4:	20001b60 	.word	0x20001b60
 80127d8:	20001b62 	.word	0x20001b62

080127dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80127dc:	4a17      	ldr	r2, [pc, #92]	@ (801283c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80127de:	8803      	ldrh	r3, [r0, #0]
 80127e0:	8812      	ldrh	r2, [r2, #0]
 80127e2:	4293      	cmp	r3, r2
 80127e4:	d213      	bcs.n	801280e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80127e6:	4a16      	ldr	r2, [pc, #88]	@ (8012840 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80127e8:	2114      	movs	r1, #20
 80127ea:	6812      	ldr	r2, [r2, #0]
 80127ec:	fb01 2303 	mla	r3, r1, r3, r2
 80127f0:	8a1a      	ldrh	r2, [r3, #16]
 80127f2:	8919      	ldrh	r1, [r3, #8]
 80127f4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80127f8:	428a      	cmp	r2, r1
 80127fa:	db1d      	blt.n	8012838 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80127fc:	8a58      	ldrh	r0, [r3, #18]
 80127fe:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8012802:	895b      	ldrh	r3, [r3, #10]
 8012804:	4298      	cmp	r0, r3
 8012806:	bfac      	ite	ge
 8012808:	2000      	movge	r0, #0
 801280a:	2001      	movlt	r0, #1
 801280c:	4770      	bx	lr
 801280e:	490d      	ldr	r1, [pc, #52]	@ (8012844 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8012810:	8809      	ldrh	r1, [r1, #0]
 8012812:	4411      	add	r1, r2
 8012814:	428b      	cmp	r3, r1
 8012816:	da0d      	bge.n	8012834 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8012818:	1a9b      	subs	r3, r3, r2
 801281a:	4a0b      	ldr	r2, [pc, #44]	@ (8012848 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 801281c:	210e      	movs	r1, #14
 801281e:	6812      	ldr	r2, [r2, #0]
 8012820:	fb01 2303 	mla	r3, r1, r3, r2
 8012824:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8012828:	891a      	ldrh	r2, [r3, #8]
 801282a:	4291      	cmp	r1, r2
 801282c:	db04      	blt.n	8012838 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801282e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8012832:	e7e6      	b.n	8012802 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8012834:	2000      	movs	r0, #0
 8012836:	4770      	bx	lr
 8012838:	2001      	movs	r0, #1
 801283a:	4770      	bx	lr
 801283c:	20001bec 	.word	0x20001bec
 8012840:	20001bf4 	.word	0x20001bf4
 8012844:	20001bf0 	.word	0x20001bf0
 8012848:	20001bd4 	.word	0x20001bd4

0801284c <_ZNK8touchgfx6Bitmap7getDataEv>:
 801284c:	4a12      	ldr	r2, [pc, #72]	@ (8012898 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801284e:	8803      	ldrh	r3, [r0, #0]
 8012850:	8811      	ldrh	r1, [r2, #0]
 8012852:	428b      	cmp	r3, r1
 8012854:	d20b      	bcs.n	801286e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8012856:	4a11      	ldr	r2, [pc, #68]	@ (801289c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8012858:	6812      	ldr	r2, [r2, #0]
 801285a:	b112      	cbz	r2, 8012862 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 801285c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012860:	b9c0      	cbnz	r0, 8012894 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8012862:	4a0f      	ldr	r2, [pc, #60]	@ (80128a0 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8012864:	6811      	ldr	r1, [r2, #0]
 8012866:	2214      	movs	r2, #20
 8012868:	4353      	muls	r3, r2
 801286a:	58c8      	ldr	r0, [r1, r3]
 801286c:	4770      	bx	lr
 801286e:	4a0d      	ldr	r2, [pc, #52]	@ (80128a4 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8012870:	8812      	ldrh	r2, [r2, #0]
 8012872:	440a      	add	r2, r1
 8012874:	4293      	cmp	r3, r2
 8012876:	da04      	bge.n	8012882 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8012878:	4a08      	ldr	r2, [pc, #32]	@ (801289c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801287a:	6812      	ldr	r2, [r2, #0]
 801287c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8012880:	4770      	bx	lr
 8012882:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8012886:	4293      	cmp	r3, r2
 8012888:	d103      	bne.n	8012892 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801288a:	4b07      	ldr	r3, [pc, #28]	@ (80128a8 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 801288c:	681b      	ldr	r3, [r3, #0]
 801288e:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8012890:	4770      	bx	lr
 8012892:	2000      	movs	r0, #0
 8012894:	4770      	bx	lr
 8012896:	bf00      	nop
 8012898:	20001bec 	.word	0x20001bec
 801289c:	20001bd0 	.word	0x20001bd0
 80128a0:	20001bf4 	.word	0x20001bf4
 80128a4:	20001bf0 	.word	0x20001bf0
 80128a8:	20001b6c 	.word	0x20001b6c

080128ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80128ac:	4b24      	ldr	r3, [pc, #144]	@ (8012940 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80128ae:	8802      	ldrh	r2, [r0, #0]
 80128b0:	8818      	ldrh	r0, [r3, #0]
 80128b2:	4282      	cmp	r2, r0
 80128b4:	d221      	bcs.n	80128fa <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 80128b6:	4b23      	ldr	r3, [pc, #140]	@ (8012944 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 80128b8:	6819      	ldr	r1, [r3, #0]
 80128ba:	2314      	movs	r3, #20
 80128bc:	fb03 1302 	mla	r3, r3, r2, r1
 80128c0:	6858      	ldr	r0, [r3, #4]
 80128c2:	2800      	cmp	r0, #0
 80128c4:	d03a      	beq.n	801293c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80128c6:	4920      	ldr	r1, [pc, #128]	@ (8012948 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80128c8:	6809      	ldr	r1, [r1, #0]
 80128ca:	2900      	cmp	r1, #0
 80128cc:	d036      	beq.n	801293c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80128ce:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80128d2:	2900      	cmp	r1, #0
 80128d4:	d032      	beq.n	801293c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80128d6:	891a      	ldrh	r2, [r3, #8]
 80128d8:	8958      	ldrh	r0, [r3, #10]
 80128da:	4350      	muls	r0, r2
 80128dc:	7c5a      	ldrb	r2, [r3, #17]
 80128de:	7cdb      	ldrb	r3, [r3, #19]
 80128e0:	0952      	lsrs	r2, r2, #5
 80128e2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80128e6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80128ea:	2b0b      	cmp	r3, #11
 80128ec:	bf18      	it	ne
 80128ee:	0040      	lslne	r0, r0, #1
 80128f0:	3003      	adds	r0, #3
 80128f2:	f020 0003 	bic.w	r0, r0, #3
 80128f6:	4408      	add	r0, r1
 80128f8:	4770      	bx	lr
 80128fa:	4b14      	ldr	r3, [pc, #80]	@ (801294c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80128fc:	881b      	ldrh	r3, [r3, #0]
 80128fe:	4403      	add	r3, r0
 8012900:	429a      	cmp	r2, r3
 8012902:	da1a      	bge.n	801293a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012904:	4b12      	ldr	r3, [pc, #72]	@ (8012950 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8012906:	1a10      	subs	r0, r2, r0
 8012908:	210e      	movs	r1, #14
 801290a:	681b      	ldr	r3, [r3, #0]
 801290c:	fb01 3000 	mla	r0, r1, r0, r3
 8012910:	7b03      	ldrb	r3, [r0, #12]
 8012912:	f003 031f 	and.w	r3, r3, #31
 8012916:	2b0b      	cmp	r3, #11
 8012918:	d10b      	bne.n	8012932 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 801291a:	8903      	ldrh	r3, [r0, #8]
 801291c:	8940      	ldrh	r0, [r0, #10]
 801291e:	4358      	muls	r0, r3
 8012920:	4b09      	ldr	r3, [pc, #36]	@ (8012948 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8012922:	3003      	adds	r0, #3
 8012924:	6819      	ldr	r1, [r3, #0]
 8012926:	f020 0303 	bic.w	r3, r0, #3
 801292a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801292e:	4418      	add	r0, r3
 8012930:	4770      	bx	lr
 8012932:	2b0d      	cmp	r3, #13
 8012934:	d101      	bne.n	801293a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8012936:	300d      	adds	r0, #13
 8012938:	4770      	bx	lr
 801293a:	2000      	movs	r0, #0
 801293c:	4770      	bx	lr
 801293e:	bf00      	nop
 8012940:	20001bec 	.word	0x20001bec
 8012944:	20001bf4 	.word	0x20001bf4
 8012948:	20001bd0 	.word	0x20001bd0
 801294c:	20001bf0 	.word	0x20001bf0
 8012950:	20001bd4 	.word	0x20001bd4

08012954 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8012954:	4b1f      	ldr	r3, [pc, #124]	@ (80129d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8012956:	b510      	push	{r4, lr}
 8012958:	8802      	ldrh	r2, [r0, #0]
 801295a:	881b      	ldrh	r3, [r3, #0]
 801295c:	429a      	cmp	r2, r3
 801295e:	d21a      	bcs.n	8012996 <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8012960:	4b1d      	ldr	r3, [pc, #116]	@ (80129d8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8012962:	2114      	movs	r1, #20
 8012964:	681b      	ldr	r3, [r3, #0]
 8012966:	fb01 3102 	mla	r1, r1, r2, r3
 801296a:	7c4b      	ldrb	r3, [r1, #17]
 801296c:	0958      	lsrs	r0, r3, #5
 801296e:	7ccb      	ldrb	r3, [r1, #19]
 8012970:	491a      	ldr	r1, [pc, #104]	@ (80129dc <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8012972:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8012976:	6809      	ldr	r1, [r1, #0]
 8012978:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 801297c:	b2d8      	uxtb	r0, r3
 801297e:	b149      	cbz	r1, 8012994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012980:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8012984:	b132      	cbz	r2, 8012994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8012986:	2b0e      	cmp	r3, #14
 8012988:	d021      	beq.n	80129ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 801298a:	280f      	cmp	r0, #15
 801298c:	d01d      	beq.n	80129ca <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 801298e:	2810      	cmp	r0, #16
 8012990:	bf08      	it	eq
 8012992:	2002      	moveq	r0, #2
 8012994:	bd10      	pop	{r4, pc}
 8012996:	4912      	ldr	r1, [pc, #72]	@ (80129e0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8012998:	8809      	ldrh	r1, [r1, #0]
 801299a:	4419      	add	r1, r3
 801299c:	428a      	cmp	r2, r1
 801299e:	da09      	bge.n	80129b4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80129a0:	1ad3      	subs	r3, r2, r3
 80129a2:	4a10      	ldr	r2, [pc, #64]	@ (80129e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80129a4:	210e      	movs	r1, #14
 80129a6:	6812      	ldr	r2, [r2, #0]
 80129a8:	fb01 2303 	mla	r3, r1, r3, r2
 80129ac:	7b18      	ldrb	r0, [r3, #12]
 80129ae:	f000 001f 	and.w	r0, r0, #31
 80129b2:	e7ef      	b.n	8012994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80129b4:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 80129b8:	429a      	cmp	r2, r3
 80129ba:	d108      	bne.n	80129ce <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80129bc:	f7f7 fc74 	bl	800a2a8 <_ZN8touchgfx3HAL3lcdEv>
 80129c0:	6803      	ldr	r3, [r0, #0]
 80129c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80129c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80129c8:	4718      	bx	r3
 80129ca:	2001      	movs	r0, #1
 80129cc:	e7e2      	b.n	8012994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80129ce:	2000      	movs	r0, #0
 80129d0:	e7e0      	b.n	8012994 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80129d2:	bf00      	nop
 80129d4:	20001bec 	.word	0x20001bec
 80129d8:	20001bf4 	.word	0x20001bf4
 80129dc:	20001bd0 	.word	0x20001bd0
 80129e0:	20001bf0 	.word	0x20001bf0
 80129e4:	20001bd4 	.word	0x20001bd4

080129e8 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 80129e8:	2010      	movs	r0, #16
 80129ea:	4770      	bx	lr

080129ec <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 80129ec:	2000      	movs	r0, #0
 80129ee:	4770      	bx	lr

080129f0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 80129f0:	4b02      	ldr	r3, [pc, #8]	@ (80129fc <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 80129f2:	8818      	ldrh	r0, [r3, #0]
 80129f4:	0040      	lsls	r0, r0, #1
 80129f6:	b280      	uxth	r0, r0
 80129f8:	4770      	bx	lr
 80129fa:	bf00      	nop
 80129fc:	20001b66 	.word	0x20001b66

08012a00 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012a00:	2bff      	cmp	r3, #255	@ 0xff
 8012a02:	d05e      	beq.n	8012ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8012a04:	2a0b      	cmp	r2, #11
 8012a06:	d058      	beq.n	8012aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012a08:	d80e      	bhi.n	8012a28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8012a0a:	2a03      	cmp	r2, #3
 8012a0c:	d04d      	beq.n	8012aaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8012a0e:	d804      	bhi.n	8012a1a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8012a10:	2a01      	cmp	r2, #1
 8012a12:	d04c      	beq.n	8012aae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8012a14:	d94d      	bls.n	8012ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8012a16:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8012a18:	e031      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a1a:	2a09      	cmp	r2, #9
 8012a1c:	d04d      	beq.n	8012aba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8012a1e:	d84a      	bhi.n	8012ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012a20:	2a08      	cmp	r2, #8
 8012a22:	d048      	beq.n	8012ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8012a24:	2300      	movs	r3, #0
 8012a26:	e02a      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a28:	2a2f      	cmp	r2, #47	@ 0x2f
 8012a2a:	d02c      	beq.n	8012a86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8012a2c:	d811      	bhi.n	8012a52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8012a2e:	2a2d      	cmp	r2, #45	@ 0x2d
 8012a30:	d018      	beq.n	8012a64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8012a32:	d831      	bhi.n	8012a98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8012a34:	2a2c      	cmp	r2, #44	@ 0x2c
 8012a36:	d1f5      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a38:	684a      	ldr	r2, [r1, #4]
 8012a3a:	7813      	ldrb	r3, [r2, #0]
 8012a3c:	7852      	ldrb	r2, [r2, #1]
 8012a3e:	2a00      	cmp	r2, #0
 8012a40:	d1f0      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a42:	2b01      	cmp	r3, #1
 8012a44:	d01d      	beq.n	8012a82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8012a46:	2b00      	cmp	r3, #0
 8012a48:	d02d      	beq.n	8012aa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8012a4a:	2b02      	cmp	r3, #2
 8012a4c:	d1ea      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a4e:	68c3      	ldr	r3, [r0, #12]
 8012a50:	e015      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a52:	2a31      	cmp	r2, #49	@ 0x31
 8012a54:	d004      	beq.n	8012a60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8012a56:	d332      	bcc.n	8012abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012a58:	2a32      	cmp	r2, #50	@ 0x32
 8012a5a:	d030      	beq.n	8012abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8012a5c:	2a33      	cmp	r2, #51	@ 0x33
 8012a5e:	d1e1      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a60:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8012a62:	e00c      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a64:	684a      	ldr	r2, [r1, #4]
 8012a66:	7813      	ldrb	r3, [r2, #0]
 8012a68:	7852      	ldrb	r2, [r2, #1]
 8012a6a:	2a00      	cmp	r2, #0
 8012a6c:	d1da      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a6e:	2b01      	cmp	r3, #1
 8012a70:	d004      	beq.n	8012a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8012a72:	d30f      	bcc.n	8012a94 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8012a74:	2b02      	cmp	r3, #2
 8012a76:	d1d5      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a78:	6943      	ldr	r3, [r0, #20]
 8012a7a:	e000      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a7c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8012a7e:	4618      	mov	r0, r3
 8012a80:	4770      	bx	lr
 8012a82:	69c3      	ldr	r3, [r0, #28]
 8012a84:	e7fb      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a86:	684b      	ldr	r3, [r1, #4]
 8012a88:	781a      	ldrb	r2, [r3, #0]
 8012a8a:	785b      	ldrb	r3, [r3, #1]
 8012a8c:	2b00      	cmp	r3, #0
 8012a8e:	d1c9      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012a90:	2a00      	cmp	r2, #0
 8012a92:	d1f4      	bne.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a94:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8012a96:	e7f2      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012a98:	684b      	ldr	r3, [r1, #4]
 8012a9a:	781a      	ldrb	r2, [r3, #0]
 8012a9c:	785b      	ldrb	r3, [r3, #1]
 8012a9e:	2b00      	cmp	r3, #0
 8012aa0:	d1c0      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012aa2:	2a00      	cmp	r2, #0
 8012aa4:	d1eb      	bne.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012aa6:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8012aa8:	e7e9      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012aaa:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8012aac:	e7e7      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012aae:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8012ab0:	e7e5      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ab2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8012ab4:	e7e3      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ab6:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8012ab8:	e7e1      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012aba:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8012abc:	e7df      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012abe:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8012ac0:	e7dd      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ac2:	2a0b      	cmp	r2, #11
 8012ac4:	d059      	beq.n	8012b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012ac6:	d80e      	bhi.n	8012ae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8012ac8:	2a03      	cmp	r2, #3
 8012aca:	d050      	beq.n	8012b6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8012acc:	d804      	bhi.n	8012ad8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8012ace:	2a01      	cmp	r2, #1
 8012ad0:	d04f      	beq.n	8012b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8012ad2:	d950      	bls.n	8012b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8012ad4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8012ad6:	e7d2      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ad8:	2a09      	cmp	r2, #9
 8012ada:	d04e      	beq.n	8012b7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8012adc:	d801      	bhi.n	8012ae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8012ade:	2a08      	cmp	r2, #8
 8012ae0:	d1a0      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012ae2:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8012ae4:	e7cb      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012ae6:	2a2f      	cmp	r2, #47	@ 0x2f
 8012ae8:	d02d      	beq.n	8012b46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8012aea:	d811      	bhi.n	8012b10 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8012aec:	2a2d      	cmp	r2, #45	@ 0x2d
 8012aee:	d018      	beq.n	8012b22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8012af0:	d833      	bhi.n	8012b5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8012af2:	2a2c      	cmp	r2, #44	@ 0x2c
 8012af4:	d196      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012af6:	684a      	ldr	r2, [r1, #4]
 8012af8:	7813      	ldrb	r3, [r2, #0]
 8012afa:	7852      	ldrb	r2, [r2, #1]
 8012afc:	2a00      	cmp	r2, #0
 8012afe:	d191      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b00:	2b01      	cmp	r3, #1
 8012b02:	d01e      	beq.n	8012b42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8012b04:	2b00      	cmp	r3, #0
 8012b06:	d030      	beq.n	8012b6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8012b08:	2b02      	cmp	r3, #2
 8012b0a:	d18b      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b0c:	6903      	ldr	r3, [r0, #16]
 8012b0e:	e7b6      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b10:	2a31      	cmp	r2, #49	@ 0x31
 8012b12:	d004      	beq.n	8012b1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8012b14:	d333      	bcc.n	8012b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012b16:	2a32      	cmp	r2, #50	@ 0x32
 8012b18:	d031      	beq.n	8012b7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8012b1a:	2a33      	cmp	r2, #51	@ 0x33
 8012b1c:	d182      	bne.n	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b1e:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8012b20:	e7ad      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b22:	684a      	ldr	r2, [r1, #4]
 8012b24:	7813      	ldrb	r3, [r2, #0]
 8012b26:	7852      	ldrb	r2, [r2, #1]
 8012b28:	2a00      	cmp	r2, #0
 8012b2a:	f47f af7b 	bne.w	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b2e:	2b01      	cmp	r3, #1
 8012b30:	d005      	beq.n	8012b3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8012b32:	d310      	bcc.n	8012b56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8012b34:	2b02      	cmp	r3, #2
 8012b36:	f47f af75 	bne.w	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b3a:	6983      	ldr	r3, [r0, #24]
 8012b3c:	e79f      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b3e:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012b40:	e79d      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b42:	6a03      	ldr	r3, [r0, #32]
 8012b44:	e79b      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b46:	684b      	ldr	r3, [r1, #4]
 8012b48:	781a      	ldrb	r2, [r3, #0]
 8012b4a:	785b      	ldrb	r3, [r3, #1]
 8012b4c:	2b00      	cmp	r3, #0
 8012b4e:	f47f af69 	bne.w	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b52:	2a00      	cmp	r2, #0
 8012b54:	d193      	bne.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b56:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8012b58:	e791      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b5a:	684b      	ldr	r3, [r1, #4]
 8012b5c:	781a      	ldrb	r2, [r3, #0]
 8012b5e:	785b      	ldrb	r3, [r3, #1]
 8012b60:	2b00      	cmp	r3, #0
 8012b62:	f47f af5f 	bne.w	8012a24 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8012b66:	2a00      	cmp	r2, #0
 8012b68:	d189      	bne.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b6a:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8012b6c:	e787      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b6e:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8012b70:	e785      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b72:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8012b74:	e783      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b76:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8012b78:	e781      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b7a:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8012b7c:	e77f      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8012b7e:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8012b80:	e77d      	b.n	8012a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08012b82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012b82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b86:	b087      	sub	sp, #28
 8012b88:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8012b8a:	9205      	str	r2, [sp, #20]
 8012b8c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012b90:	9101      	str	r1, [sp, #4]
 8012b92:	9202      	str	r2, [sp, #8]
 8012b94:	6841      	ldr	r1, [r0, #4]
 8012b96:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8012b9a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8012b9e:	fb01 2404 	mla	r4, r1, r4, r2
 8012ba2:	6802      	ldr	r2, [r0, #0]
 8012ba4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012ba8:	f8de 2000 	ldr.w	r2, [lr]
 8012bac:	9203      	str	r2, [sp, #12]
 8012bae:	f8de 2004 	ldr.w	r2, [lr, #4]
 8012bb2:	3204      	adds	r2, #4
 8012bb4:	9204      	str	r2, [sp, #16]
 8012bb6:	9a02      	ldr	r2, [sp, #8]
 8012bb8:	43d6      	mvns	r6, r2
 8012bba:	b2f6      	uxtb	r6, r6
 8012bbc:	9a01      	ldr	r2, [sp, #4]
 8012bbe:	2a00      	cmp	r2, #0
 8012bc0:	dc03      	bgt.n	8012bca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8012bc2:	9a05      	ldr	r2, [sp, #20]
 8012bc4:	2a00      	cmp	r2, #0
 8012bc6:	f340 8129 	ble.w	8012e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012bca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012bcc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8012bd0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012bd4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012bd6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8012bda:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012bde:	2b00      	cmp	r3, #0
 8012be0:	dd0e      	ble.n	8012c00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8012be2:	1408      	asrs	r0, r1, #16
 8012be4:	d405      	bmi.n	8012bf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012be6:	4560      	cmp	r0, ip
 8012be8:	da03      	bge.n	8012bf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012bea:	1410      	asrs	r0, r2, #16
 8012bec:	d401      	bmi.n	8012bf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012bee:	42b8      	cmp	r0, r7
 8012bf0:	db07      	blt.n	8012c02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8012bf2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012bf4:	3b01      	subs	r3, #1
 8012bf6:	3402      	adds	r4, #2
 8012bf8:	4401      	add	r1, r0
 8012bfa:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012bfc:	4402      	add	r2, r0
 8012bfe:	e7ee      	b.n	8012bde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8012c00:	d071      	beq.n	8012ce6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8012c02:	1e58      	subs	r0, r3, #1
 8012c04:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8012c06:	fb05 1500 	mla	r5, r5, r0, r1
 8012c0a:	142d      	asrs	r5, r5, #16
 8012c0c:	d45f      	bmi.n	8012cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012c0e:	4565      	cmp	r5, ip
 8012c10:	da5d      	bge.n	8012cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012c12:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8012c14:	fb05 2000 	mla	r0, r5, r0, r2
 8012c18:	1400      	asrs	r0, r0, #16
 8012c1a:	d458      	bmi.n	8012cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012c1c:	42b8      	cmp	r0, r7
 8012c1e:	da56      	bge.n	8012cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8012c20:	4699      	mov	r9, r3
 8012c22:	46a2      	mov	sl, r4
 8012c24:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8012c28:	f1b9 0f00 	cmp.w	r9, #0
 8012c2c:	dd57      	ble.n	8012cde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8012c2e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8012c32:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8012c36:	9803      	ldr	r0, [sp, #12]
 8012c38:	140d      	asrs	r5, r1, #16
 8012c3a:	f109 39ff 	add.w	r9, r9, #4294967295
 8012c3e:	fb07 000c 	mla	r0, r7, ip, r0
 8012c42:	5d40      	ldrb	r0, [r0, r5]
 8012c44:	9d04      	ldr	r5, [sp, #16]
 8012c46:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012c4a:	f8ba 5000 	ldrh.w	r5, [sl]
 8012c4e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012c52:	122f      	asrs	r7, r5, #8
 8012c54:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8012c58:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012c5c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012c60:	00ed      	lsls	r5, r5, #3
 8012c62:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8012c66:	fb17 f706 	smulbb	r7, r7, r6
 8012c6a:	b2ed      	uxtb	r5, r5
 8012c6c:	fb18 f806 	smulbb	r8, r8, r6
 8012c70:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8012c74:	10c7      	asrs	r7, r0, #3
 8012c76:	fb15 f506 	smulbb	r5, r5, r6
 8012c7a:	00c0      	lsls	r0, r0, #3
 8012c7c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012c80:	fa1f fc8c 	uxth.w	ip, ip
 8012c84:	b2c0      	uxtb	r0, r0
 8012c86:	fb07 870b 	mla	r7, r7, fp, r8
 8012c8a:	fb00 500b 	mla	r0, r0, fp, r5
 8012c8e:	f10c 0501 	add.w	r5, ip, #1
 8012c92:	b2bf      	uxth	r7, r7
 8012c94:	b280      	uxth	r0, r0
 8012c96:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012c9a:	f107 0801 	add.w	r8, r7, #1
 8012c9e:	1c45      	adds	r5, r0, #1
 8012ca0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8012ca4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012ca8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012cac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012cae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8012cb2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012cb6:	4401      	add	r1, r0
 8012cb8:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8012cbc:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012cbe:	ea45 0c0c 	orr.w	ip, r5, ip
 8012cc2:	4402      	add	r2, r0
 8012cc4:	ea4c 0c08 	orr.w	ip, ip, r8
 8012cc8:	f82a cb02 	strh.w	ip, [sl], #2
 8012ccc:	e7ac      	b.n	8012c28 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8012cce:	f04f 0800 	mov.w	r8, #0
 8012cd2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8012cd6:	eb03 0008 	add.w	r0, r3, r8
 8012cda:	2800      	cmp	r0, #0
 8012cdc:	dc41      	bgt.n	8012d62 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8012cde:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012ce2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012ce6:	9b01      	ldr	r3, [sp, #4]
 8012ce8:	2b00      	cmp	r3, #0
 8012cea:	f340 8097 	ble.w	8012e1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8012cee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8012cf2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012cf4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012cf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012cfc:	eef0 6a62 	vmov.f32	s13, s5
 8012d00:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8012d04:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012d08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012d0c:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8012d10:	eef0 6a43 	vmov.f32	s13, s6
 8012d14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012d18:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8012d1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012d20:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012d24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012d28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012d2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012d30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012d34:	ee12 2a90 	vmov	r2, s5
 8012d38:	eef0 2a47 	vmov.f32	s5, s14
 8012d3c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d40:	ee13 2a10 	vmov	r2, s6
 8012d44:	9313      	str	r3, [sp, #76]	@ 0x4c
 8012d46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d48:	eeb0 3a67 	vmov.f32	s6, s15
 8012d4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8012d50:	9314      	str	r3, [sp, #80]	@ 0x50
 8012d52:	9b01      	ldr	r3, [sp, #4]
 8012d54:	9a05      	ldr	r2, [sp, #20]
 8012d56:	3b01      	subs	r3, #1
 8012d58:	9301      	str	r3, [sp, #4]
 8012d5a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8012d5c:	bf08      	it	eq
 8012d5e:	4613      	moveq	r3, r2
 8012d60:	e72c      	b.n	8012bbc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8012d62:	140f      	asrs	r7, r1, #16
 8012d64:	d453      	bmi.n	8012e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012d66:	f8de 5008 	ldr.w	r5, [lr, #8]
 8012d6a:	42bd      	cmp	r5, r7
 8012d6c:	dd4f      	ble.n	8012e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012d6e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8012d72:	d44c      	bmi.n	8012e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012d74:	f8de 000c 	ldr.w	r0, [lr, #12]
 8012d78:	4560      	cmp	r0, ip
 8012d7a:	dd48      	ble.n	8012e0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012d7c:	9803      	ldr	r0, [sp, #12]
 8012d7e:	b22d      	sxth	r5, r5
 8012d80:	fb0c 0505 	mla	r5, ip, r5, r0
 8012d84:	5de8      	ldrb	r0, [r5, r7]
 8012d86:	9d04      	ldr	r5, [sp, #16]
 8012d88:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8012d8c:	f06f 0501 	mvn.w	r5, #1
 8012d90:	fb05 fb08 	mul.w	fp, r5, r8
 8012d94:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8012d98:	f834 500b 	ldrh.w	r5, [r4, fp]
 8012d9c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8012da0:	122f      	asrs	r7, r5, #8
 8012da2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8012da6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8012daa:	00ed      	lsls	r5, r5, #3
 8012dac:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8012db0:	fb17 f706 	smulbb	r7, r7, r6
 8012db4:	b2ed      	uxtb	r5, r5
 8012db6:	fb19 f906 	smulbb	r9, r9, r6
 8012dba:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8012dbe:	10c7      	asrs	r7, r0, #3
 8012dc0:	fb15 f506 	smulbb	r5, r5, r6
 8012dc4:	00c0      	lsls	r0, r0, #3
 8012dc6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8012dca:	fa1f fc8c 	uxth.w	ip, ip
 8012dce:	b2c0      	uxtb	r0, r0
 8012dd0:	fb07 970a 	mla	r7, r7, sl, r9
 8012dd4:	fb00 500a 	mla	r0, r0, sl, r5
 8012dd8:	f10c 0501 	add.w	r5, ip, #1
 8012ddc:	b2bf      	uxth	r7, r7
 8012dde:	b280      	uxth	r0, r0
 8012de0:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8012de4:	f107 0901 	add.w	r9, r7, #1
 8012de8:	1c45      	adds	r5, r0, #1
 8012dea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8012dee:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8012df2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8012df6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8012dfa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012dfe:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8012e02:	ea45 0c0c 	orr.w	ip, r5, ip
 8012e06:	ea4c 0c09 	orr.w	ip, ip, r9
 8012e0a:	f824 c00b 	strh.w	ip, [r4, fp]
 8012e0e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8012e10:	f108 38ff 	add.w	r8, r8, #4294967295
 8012e14:	4401      	add	r1, r0
 8012e16:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8012e18:	4402      	add	r2, r0
 8012e1a:	e75c      	b.n	8012cd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8012e1c:	b007      	add	sp, #28
 8012e1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012e22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012e22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e26:	b085      	sub	sp, #20
 8012e28:	4693      	mov	fp, r2
 8012e2a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8012e2e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8012e30:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8012e32:	6870      	ldr	r0, [r6, #4]
 8012e34:	9100      	str	r1, [sp, #0]
 8012e36:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8012e3a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8012e3e:	fb00 2404 	mla	r4, r0, r4, r2
 8012e42:	6832      	ldr	r2, [r6, #0]
 8012e44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8012e48:	682a      	ldr	r2, [r5, #0]
 8012e4a:	9201      	str	r2, [sp, #4]
 8012e4c:	686a      	ldr	r2, [r5, #4]
 8012e4e:	3204      	adds	r2, #4
 8012e50:	9202      	str	r2, [sp, #8]
 8012e52:	9a00      	ldr	r2, [sp, #0]
 8012e54:	2a00      	cmp	r2, #0
 8012e56:	dc03      	bgt.n	8012e60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8012e58:	f1bb 0f00 	cmp.w	fp, #0
 8012e5c:	f340 80a0 	ble.w	8012fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012e60:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8012e62:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8012e66:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8012e6a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012e6c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8012e70:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8012e74:	2b00      	cmp	r3, #0
 8012e76:	dd0c      	ble.n	8012e92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012e78:	1406      	asrs	r6, r0, #16
 8012e7a:	d405      	bmi.n	8012e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e7c:	454e      	cmp	r6, r9
 8012e7e:	da03      	bge.n	8012e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e80:	1416      	asrs	r6, r2, #16
 8012e82:	d401      	bmi.n	8012e88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012e84:	4546      	cmp	r6, r8
 8012e86:	db05      	blt.n	8012e94 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8012e88:	4470      	add	r0, lr
 8012e8a:	4462      	add	r2, ip
 8012e8c:	3b01      	subs	r3, #1
 8012e8e:	3402      	adds	r4, #2
 8012e90:	e7f0      	b.n	8012e74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8012e92:	d00f      	beq.n	8012eb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8012e94:	1e5e      	subs	r6, r3, #1
 8012e96:	fb0e 0706 	mla	r7, lr, r6, r0
 8012e9a:	143f      	asrs	r7, r7, #16
 8012e9c:	d541      	bpl.n	8012f22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8012e9e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8012ea2:	4698      	mov	r8, r3
 8012ea4:	9603      	str	r6, [sp, #12]
 8012ea6:	f1b8 0f00 	cmp.w	r8, #0
 8012eaa:	dc59      	bgt.n	8012f60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8012eac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8012eb0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8012eb4:	9b00      	ldr	r3, [sp, #0]
 8012eb6:	2b00      	cmp	r3, #0
 8012eb8:	dd72      	ble.n	8012fa0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8012eba:	ee30 0a04 	vadd.f32	s0, s0, s8
 8012ebe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012ec0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8012ec4:	eeb0 6a62 	vmov.f32	s12, s5
 8012ec8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8012ecc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8012ed0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ed4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8012ed8:	eeb0 6a43 	vmov.f32	s12, s6
 8012edc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8012ee0:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8012ee4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8012ee8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8012eec:	ee77 2a62 	vsub.f32	s5, s14, s5
 8012ef0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8012ef4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8012ef8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8012efc:	ee12 2a90 	vmov	r2, s5
 8012f00:	eef0 2a47 	vmov.f32	s5, s14
 8012f04:	fb92 fef3 	sdiv	lr, r2, r3
 8012f08:	ee13 2a10 	vmov	r2, s6
 8012f0c:	eeb0 3a67 	vmov.f32	s6, s15
 8012f10:	fb92 fcf3 	sdiv	ip, r2, r3
 8012f14:	9b00      	ldr	r3, [sp, #0]
 8012f16:	3b01      	subs	r3, #1
 8012f18:	9300      	str	r3, [sp, #0]
 8012f1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012f1c:	bf08      	it	eq
 8012f1e:	465b      	moveq	r3, fp
 8012f20:	e797      	b.n	8012e52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8012f22:	454f      	cmp	r7, r9
 8012f24:	dabb      	bge.n	8012e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012f26:	fb0c 2606 	mla	r6, ip, r6, r2
 8012f2a:	1436      	asrs	r6, r6, #16
 8012f2c:	d4b7      	bmi.n	8012e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012f2e:	4546      	cmp	r6, r8
 8012f30:	dab5      	bge.n	8012e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8012f32:	461e      	mov	r6, r3
 8012f34:	46a0      	mov	r8, r4
 8012f36:	2e00      	cmp	r6, #0
 8012f38:	ddb8      	ble.n	8012eac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8012f3a:	1417      	asrs	r7, r2, #16
 8012f3c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8012f40:	9901      	ldr	r1, [sp, #4]
 8012f42:	ea4f 4920 	mov.w	r9, r0, asr #16
 8012f46:	4462      	add	r2, ip
 8012f48:	4470      	add	r0, lr
 8012f4a:	fb0a 1707 	mla	r7, sl, r7, r1
 8012f4e:	9902      	ldr	r1, [sp, #8]
 8012f50:	3e01      	subs	r6, #1
 8012f52:	f817 7009 	ldrb.w	r7, [r7, r9]
 8012f56:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8012f5a:	f828 7b02 	strh.w	r7, [r8], #2
 8012f5e:	e7ea      	b.n	8012f36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8012f60:	ea5f 4920 	movs.w	r9, r0, asr #16
 8012f64:	d417      	bmi.n	8012f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012f66:	68ae      	ldr	r6, [r5, #8]
 8012f68:	454e      	cmp	r6, r9
 8012f6a:	dd14      	ble.n	8012f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012f6c:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8012f70:	d411      	bmi.n	8012f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012f72:	68ef      	ldr	r7, [r5, #12]
 8012f74:	4557      	cmp	r7, sl
 8012f76:	dd0e      	ble.n	8012f96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8012f78:	9f01      	ldr	r7, [sp, #4]
 8012f7a:	b236      	sxth	r6, r6
 8012f7c:	f06f 0101 	mvn.w	r1, #1
 8012f80:	fb0a 7606 	mla	r6, sl, r6, r7
 8012f84:	9f02      	ldr	r7, [sp, #8]
 8012f86:	f816 6009 	ldrb.w	r6, [r6, r9]
 8012f8a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8012f8e:	fb01 f608 	mul.w	r6, r1, r8
 8012f92:	9903      	ldr	r1, [sp, #12]
 8012f94:	538f      	strh	r7, [r1, r6]
 8012f96:	4470      	add	r0, lr
 8012f98:	4462      	add	r2, ip
 8012f9a:	f108 38ff 	add.w	r8, r8, #4294967295
 8012f9e:	e782      	b.n	8012ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8012fa0:	b005      	add	sp, #20
 8012fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012fa6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012fa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012faa:	b087      	sub	sp, #28
 8012fac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8012fae:	9205      	str	r2, [sp, #20]
 8012fb0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012fb4:	9102      	str	r1, [sp, #8]
 8012fb6:	9203      	str	r2, [sp, #12]
 8012fb8:	6861      	ldr	r1, [r4, #4]
 8012fba:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8012fbe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8012fc2:	fb01 2000 	mla	r0, r1, r0, r2
 8012fc6:	6822      	ldr	r2, [r4, #0]
 8012fc8:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8012fcc:	9200      	str	r2, [sp, #0]
 8012fce:	f8dc 2000 	ldr.w	r2, [ip]
 8012fd2:	9204      	str	r2, [sp, #16]
 8012fd4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8012fd8:	3204      	adds	r2, #4
 8012fda:	9201      	str	r2, [sp, #4]
 8012fdc:	9a03      	ldr	r2, [sp, #12]
 8012fde:	43d5      	mvns	r5, r2
 8012fe0:	b2ed      	uxtb	r5, r5
 8012fe2:	9a02      	ldr	r2, [sp, #8]
 8012fe4:	2a00      	cmp	r2, #0
 8012fe6:	dc03      	bgt.n	8012ff0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8012fe8:	9a05      	ldr	r2, [sp, #20]
 8012fea:	2a00      	cmp	r2, #0
 8012fec:	f340 812c 	ble.w	8013248 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8012ff0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8012ff2:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8012ff6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8012ffa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8012ffc:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8013000:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013004:	2b00      	cmp	r3, #0
 8013006:	dd10      	ble.n	801302a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013008:	140c      	asrs	r4, r1, #16
 801300a:	d405      	bmi.n	8013018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801300c:	4574      	cmp	r4, lr
 801300e:	da03      	bge.n	8013018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013010:	1414      	asrs	r4, r2, #16
 8013012:	d401      	bmi.n	8013018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8013014:	42bc      	cmp	r4, r7
 8013016:	db09      	blt.n	801302c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8013018:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801301a:	3b01      	subs	r3, #1
 801301c:	9800      	ldr	r0, [sp, #0]
 801301e:	4421      	add	r1, r4
 8013020:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013022:	3002      	adds	r0, #2
 8013024:	4422      	add	r2, r4
 8013026:	9000      	str	r0, [sp, #0]
 8013028:	e7ec      	b.n	8013004 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801302a:	d071      	beq.n	8013110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 801302c:	1e5c      	subs	r4, r3, #1
 801302e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8013030:	fb06 1604 	mla	r6, r6, r4, r1
 8013034:	1436      	asrs	r6, r6, #16
 8013036:	d45d      	bmi.n	80130f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013038:	4576      	cmp	r6, lr
 801303a:	da5b      	bge.n	80130f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801303c:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 801303e:	fb06 2404 	mla	r4, r6, r4, r2
 8013042:	1424      	asrs	r4, r4, #16
 8013044:	d456      	bmi.n	80130f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8013046:	42bc      	cmp	r4, r7
 8013048:	da54      	bge.n	80130f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801304a:	4698      	mov	r8, r3
 801304c:	f8dd 9000 	ldr.w	r9, [sp]
 8013050:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8013054:	f1b8 0f00 	cmp.w	r8, #0
 8013058:	dd54      	ble.n	8013104 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801305a:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801305e:	1414      	asrs	r4, r2, #16
 8013060:	9804      	ldr	r0, [sp, #16]
 8013062:	140e      	asrs	r6, r1, #16
 8013064:	f108 38ff 	add.w	r8, r8, #4294967295
 8013068:	fb07 0404 	mla	r4, r7, r4, r0
 801306c:	9801      	ldr	r0, [sp, #4]
 801306e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8013072:	f8b9 4000 	ldrh.w	r4, [r9]
 8013076:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801307a:	1227      	asrs	r7, r4, #8
 801307c:	eb00 0b0e 	add.w	fp, r0, lr
 8013080:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8013084:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013088:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801308a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801308e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8013092:	4401      	add	r1, r0
 8013094:	fb16 f60a 	smulbb	r6, r6, sl
 8013098:	9814      	ldr	r0, [sp, #80]	@ 0x50
 801309a:	fb1b fb0a 	smulbb	fp, fp, sl
 801309e:	fb07 6705 	mla	r7, r7, r5, r6
 80130a2:	10e6      	asrs	r6, r4, #3
 80130a4:	00e4      	lsls	r4, r4, #3
 80130a6:	4402      	add	r2, r0
 80130a8:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80130ac:	b2bf      	uxth	r7, r7
 80130ae:	b2e4      	uxtb	r4, r4
 80130b0:	fb06 b605 	mla	r6, r6, r5, fp
 80130b4:	fb14 f405 	smulbb	r4, r4, r5
 80130b8:	b2b6      	uxth	r6, r6
 80130ba:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80130be:	1c7c      	adds	r4, r7, #1
 80130c0:	f106 0b01 	add.w	fp, r6, #1
 80130c4:	fa1f fe8e 	uxth.w	lr, lr
 80130c8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80130cc:	f10e 0401 	add.w	r4, lr, #1
 80130d0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80130d4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80130d8:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80130dc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80130e0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80130e4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80130e8:	4327      	orrs	r7, r4
 80130ea:	ea47 070b 	orr.w	r7, r7, fp
 80130ee:	f829 7b02 	strh.w	r7, [r9], #2
 80130f2:	e7af      	b.n	8013054 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80130f4:	f04f 0e00 	mov.w	lr, #0
 80130f8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80130fc:	eb03 040e 	add.w	r4, r3, lr
 8013100:	2c00      	cmp	r4, #0
 8013102:	dc43      	bgt.n	801318c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8013104:	9a00      	ldr	r2, [sp, #0]
 8013106:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801310a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801310e:	9300      	str	r3, [sp, #0]
 8013110:	9b02      	ldr	r3, [sp, #8]
 8013112:	2b00      	cmp	r3, #0
 8013114:	f340 8098 	ble.w	8013248 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8013118:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801311c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801311e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013122:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013126:	eef0 6a62 	vmov.f32	s13, s5
 801312a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801312e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013136:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801313a:	eef0 6a43 	vmov.f32	s13, s6
 801313e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013142:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8013146:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801314a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801314e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013152:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013156:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801315a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801315e:	ee12 2a90 	vmov	r2, s5
 8013162:	eef0 2a47 	vmov.f32	s5, s14
 8013166:	fb92 f3f3 	sdiv	r3, r2, r3
 801316a:	ee13 2a10 	vmov	r2, s6
 801316e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013170:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013172:	eeb0 3a67 	vmov.f32	s6, s15
 8013176:	fb92 f3f3 	sdiv	r3, r2, r3
 801317a:	9314      	str	r3, [sp, #80]	@ 0x50
 801317c:	9b02      	ldr	r3, [sp, #8]
 801317e:	9a05      	ldr	r2, [sp, #20]
 8013180:	3b01      	subs	r3, #1
 8013182:	9302      	str	r3, [sp, #8]
 8013184:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013186:	bf08      	it	eq
 8013188:	4613      	moveq	r3, r2
 801318a:	e72a      	b.n	8012fe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801318c:	140f      	asrs	r7, r1, #16
 801318e:	d454      	bmi.n	801323a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013190:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8013194:	42be      	cmp	r6, r7
 8013196:	dd50      	ble.n	801323a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8013198:	ea5f 4822 	movs.w	r8, r2, asr #16
 801319c:	d44d      	bmi.n	801323a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801319e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80131a2:	4544      	cmp	r4, r8
 80131a4:	dd49      	ble.n	801323a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80131a6:	9c04      	ldr	r4, [sp, #16]
 80131a8:	b236      	sxth	r6, r6
 80131aa:	f06f 0001 	mvn.w	r0, #1
 80131ae:	fb08 4606 	mla	r6, r8, r6, r4
 80131b2:	9c01      	ldr	r4, [sp, #4]
 80131b4:	fb00 fa0e 	mul.w	sl, r0, lr
 80131b8:	9800      	ldr	r0, [sp, #0]
 80131ba:	f816 8007 	ldrb.w	r8, [r6, r7]
 80131be:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80131c2:	eb04 0b08 	add.w	fp, r4, r8
 80131c6:	f830 400a 	ldrh.w	r4, [r0, sl]
 80131ca:	9801      	ldr	r0, [sp, #4]
 80131cc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80131d0:	1227      	asrs	r7, r4, #8
 80131d2:	f89b b001 	ldrb.w	fp, [fp, #1]
 80131d6:	fb16 f609 	smulbb	r6, r6, r9
 80131da:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80131de:	f810 8008 	ldrb.w	r8, [r0, r8]
 80131e2:	fb1b fb09 	smulbb	fp, fp, r9
 80131e6:	fb07 6705 	mla	r7, r7, r5, r6
 80131ea:	10e6      	asrs	r6, r4, #3
 80131ec:	00e4      	lsls	r4, r4, #3
 80131ee:	9800      	ldr	r0, [sp, #0]
 80131f0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80131f4:	b2bf      	uxth	r7, r7
 80131f6:	b2e4      	uxtb	r4, r4
 80131f8:	fb06 b605 	mla	r6, r6, r5, fp
 80131fc:	fb14 f405 	smulbb	r4, r4, r5
 8013200:	b2b6      	uxth	r6, r6
 8013202:	fb08 4809 	mla	r8, r8, r9, r4
 8013206:	1c7c      	adds	r4, r7, #1
 8013208:	f106 0b01 	add.w	fp, r6, #1
 801320c:	fa1f f888 	uxth.w	r8, r8
 8013210:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8013214:	f108 0401 	add.w	r4, r8, #1
 8013218:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801321c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8013220:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8013224:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8013228:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801322c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8013230:	4327      	orrs	r7, r4
 8013232:	ea47 070b 	orr.w	r7, r7, fp
 8013236:	f820 700a 	strh.w	r7, [r0, sl]
 801323a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801323c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013240:	4401      	add	r1, r0
 8013242:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8013244:	4402      	add	r2, r0
 8013246:	e759      	b.n	80130fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013248:	b007      	add	sp, #28
 801324a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013250 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013254:	b085      	sub	sp, #20
 8013256:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801325a:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801325c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801325e:	9203      	str	r2, [sp, #12]
 8013260:	6870      	ldr	r0, [r6, #4]
 8013262:	686f      	ldr	r7, [r5, #4]
 8013264:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8013268:	3704      	adds	r7, #4
 801326a:	9101      	str	r1, [sp, #4]
 801326c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013270:	fb00 2404 	mla	r4, r0, r4, r2
 8013274:	6832      	ldr	r2, [r6, #0]
 8013276:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801327a:	682a      	ldr	r2, [r5, #0]
 801327c:	9202      	str	r2, [sp, #8]
 801327e:	9a01      	ldr	r2, [sp, #4]
 8013280:	2a00      	cmp	r2, #0
 8013282:	dc03      	bgt.n	801328c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8013284:	9a03      	ldr	r2, [sp, #12]
 8013286:	2a00      	cmp	r2, #0
 8013288:	f340 80cc 	ble.w	8013424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801328c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801328e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013292:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013296:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013298:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801329c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80132a0:	2b00      	cmp	r3, #0
 80132a2:	dd0d      	ble.n	80132c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80132a4:	1406      	asrs	r6, r0, #16
 80132a6:	d405      	bmi.n	80132b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80132a8:	454e      	cmp	r6, r9
 80132aa:	da03      	bge.n	80132b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80132ac:	1416      	asrs	r6, r2, #16
 80132ae:	d401      	bmi.n	80132b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80132b0:	4546      	cmp	r6, r8
 80132b2:	db06      	blt.n	80132c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80132b4:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 80132b6:	4460      	add	r0, ip
 80132b8:	3b01      	subs	r3, #1
 80132ba:	3402      	adds	r4, #2
 80132bc:	4432      	add	r2, r6
 80132be:	e7ef      	b.n	80132a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80132c0:	d00f      	beq.n	80132e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80132c2:	1e5e      	subs	r6, r3, #1
 80132c4:	fb0c 0e06 	mla	lr, ip, r6, r0
 80132c8:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80132cc:	d543      	bpl.n	8013356 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80132ce:	4698      	mov	r8, r3
 80132d0:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80132d4:	f1b8 0f00 	cmp.w	r8, #0
 80132d8:	dc71      	bgt.n	80133be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80132da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80132de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132e2:	9b01      	ldr	r3, [sp, #4]
 80132e4:	2b00      	cmp	r3, #0
 80132e6:	f340 809d 	ble.w	8013424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80132ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80132ee:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80132f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80132f4:	eeb0 6a62 	vmov.f32	s12, s5
 80132f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80132fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013300:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013304:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013308:	eeb0 6a43 	vmov.f32	s12, s6
 801330c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013310:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013314:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013318:	ee61 7a27 	vmul.f32	s15, s2, s15
 801331c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013320:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013324:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013328:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801332c:	ee12 2a90 	vmov	r2, s5
 8013330:	eef0 2a47 	vmov.f32	s5, s14
 8013334:	fb92 fcf3 	sdiv	ip, r2, r3
 8013338:	ee13 2a10 	vmov	r2, s6
 801333c:	eeb0 3a67 	vmov.f32	s6, s15
 8013340:	fb92 f3f3 	sdiv	r3, r2, r3
 8013344:	9312      	str	r3, [sp, #72]	@ 0x48
 8013346:	9b01      	ldr	r3, [sp, #4]
 8013348:	9a03      	ldr	r2, [sp, #12]
 801334a:	3b01      	subs	r3, #1
 801334c:	9301      	str	r3, [sp, #4]
 801334e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013350:	bf08      	it	eq
 8013352:	4613      	moveq	r3, r2
 8013354:	e793      	b.n	801327e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8013356:	45ce      	cmp	lr, r9
 8013358:	dab9      	bge.n	80132ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801335a:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801335c:	fb01 2606 	mla	r6, r1, r6, r2
 8013360:	1436      	asrs	r6, r6, #16
 8013362:	d4b4      	bmi.n	80132ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013364:	4546      	cmp	r6, r8
 8013366:	dab2      	bge.n	80132ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8013368:	4698      	mov	r8, r3
 801336a:	46a2      	mov	sl, r4
 801336c:	f1b8 0f00 	cmp.w	r8, #0
 8013370:	ddb3      	ble.n	80132da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8013372:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8013376:	1416      	asrs	r6, r2, #16
 8013378:	9902      	ldr	r1, [sp, #8]
 801337a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801337e:	f108 38ff 	add.w	r8, r8, #4294967295
 8013382:	4460      	add	r0, ip
 8013384:	fb09 1606 	mla	r6, r9, r6, r1
 8013388:	4928      	ldr	r1, [pc, #160]	@ (801342c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801338a:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801338e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8013392:	eb07 0b0e 	add.w	fp, r7, lr
 8013396:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801339a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801339e:	00f6      	lsls	r6, r6, #3
 80133a0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80133a4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80133a6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80133aa:	440a      	add	r2, r1
 80133ac:	ea49 0606 	orr.w	r6, r9, r6
 80133b0:	f817 900e 	ldrb.w	r9, [r7, lr]
 80133b4:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80133b8:	f82a 6b02 	strh.w	r6, [sl], #2
 80133bc:	e7d6      	b.n	801336c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80133be:	ea5f 4920 	movs.w	r9, r0, asr #16
 80133c2:	d429      	bmi.n	8013418 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80133c4:	68ae      	ldr	r6, [r5, #8]
 80133c6:	454e      	cmp	r6, r9
 80133c8:	dd26      	ble.n	8013418 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80133ca:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80133ce:	d423      	bmi.n	8013418 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80133d0:	68e9      	ldr	r1, [r5, #12]
 80133d2:	4559      	cmp	r1, fp
 80133d4:	dd20      	ble.n	8013418 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80133d6:	fa0f fe86 	sxth.w	lr, r6
 80133da:	9902      	ldr	r1, [sp, #8]
 80133dc:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80133e0:	f06f 0101 	mvn.w	r1, #1
 80133e4:	f81e e009 	ldrb.w	lr, [lr, r9]
 80133e8:	fb01 f908 	mul.w	r9, r1, r8
 80133ec:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80133f0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80133f4:	eb07 060e 	add.w	r6, r7, lr
 80133f8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80133fc:	7876      	ldrb	r6, [r6, #1]
 80133fe:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8013402:	00f6      	lsls	r6, r6, #3
 8013404:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8013408:	ea4b 0606 	orr.w	r6, fp, r6
 801340c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8013410:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8013414:	f82a 6009 	strh.w	r6, [sl, r9]
 8013418:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801341a:	4460      	add	r0, ip
 801341c:	f108 38ff 	add.w	r8, r8, #4294967295
 8013420:	440a      	add	r2, r1
 8013422:	e757      	b.n	80132d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8013424:	b005      	add	sp, #20
 8013426:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801342a:	bf00      	nop
 801342c:	fffff800 	.word	0xfffff800

08013430 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013434:	b087      	sub	sp, #28
 8013436:	468b      	mov	fp, r1
 8013438:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801343c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801343e:	9204      	str	r2, [sp, #16]
 8013440:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8013444:	6841      	ldr	r1, [r0, #4]
 8013446:	9205      	str	r2, [sp, #20]
 8013448:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 801344c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8013450:	fb01 2404 	mla	r4, r1, r4, r2
 8013454:	6802      	ldr	r2, [r0, #0]
 8013456:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801345a:	f8dc 2000 	ldr.w	r2, [ip]
 801345e:	9201      	str	r2, [sp, #4]
 8013460:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8013464:	3204      	adds	r2, #4
 8013466:	9202      	str	r2, [sp, #8]
 8013468:	f1bb 0f00 	cmp.w	fp, #0
 801346c:	dc03      	bgt.n	8013476 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801346e:	9a04      	ldr	r2, [sp, #16]
 8013470:	2a00      	cmp	r2, #0
 8013472:	f340 8138 	ble.w	80136e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8013476:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013478:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801347c:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8013480:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013482:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8013486:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801348a:	2b00      	cmp	r3, #0
 801348c:	dd0e      	ble.n	80134ac <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801348e:	1402      	asrs	r2, r0, #16
 8013490:	d405      	bmi.n	801349e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013492:	42ba      	cmp	r2, r7
 8013494:	da03      	bge.n	801349e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013496:	140a      	asrs	r2, r1, #16
 8013498:	d401      	bmi.n	801349e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801349a:	42b2      	cmp	r2, r6
 801349c:	db07      	blt.n	80134ae <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801349e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80134a0:	3b01      	subs	r3, #1
 80134a2:	3402      	adds	r4, #2
 80134a4:	4410      	add	r0, r2
 80134a6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80134a8:	4411      	add	r1, r2
 80134aa:	e7ee      	b.n	801348a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80134ac:	d019      	beq.n	80134e2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80134ae:	1e5a      	subs	r2, r3, #1
 80134b0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80134b2:	fb05 0502 	mla	r5, r5, r2, r0
 80134b6:	142d      	asrs	r5, r5, #16
 80134b8:	d409      	bmi.n	80134ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80134ba:	42bd      	cmp	r5, r7
 80134bc:	da07      	bge.n	80134ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80134be:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80134c0:	fb05 1202 	mla	r2, r5, r2, r1
 80134c4:	1412      	asrs	r2, r2, #16
 80134c6:	d402      	bmi.n	80134ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80134c8:	42b2      	cmp	r2, r6
 80134ca:	f2c0 80ac 	blt.w	8013626 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80134ce:	f04f 0e00 	mov.w	lr, #0
 80134d2:	eb03 020e 	add.w	r2, r3, lr
 80134d6:	2a00      	cmp	r2, #0
 80134d8:	dc3e      	bgt.n	8013558 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80134da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80134de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80134e2:	f1bb 0f00 	cmp.w	fp, #0
 80134e6:	f340 80fe 	ble.w	80136e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80134ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80134ee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80134f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80134f4:	f1bb 0b01 	subs.w	fp, fp, #1
 80134f8:	eeb0 6a62 	vmov.f32	s12, s5
 80134fc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013500:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013504:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013508:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801350c:	eeb0 6a43 	vmov.f32	s12, s6
 8013510:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013514:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013518:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801351c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013520:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013524:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013528:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801352c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013530:	ee12 2a90 	vmov	r2, s5
 8013534:	eef0 2a47 	vmov.f32	s5, s14
 8013538:	fb92 f3f3 	sdiv	r3, r2, r3
 801353c:	ee13 2a10 	vmov	r2, s6
 8013540:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013542:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013544:	eeb0 3a67 	vmov.f32	s6, s15
 8013548:	fb92 f3f3 	sdiv	r3, r2, r3
 801354c:	9a04      	ldr	r2, [sp, #16]
 801354e:	9314      	str	r3, [sp, #80]	@ 0x50
 8013550:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013552:	bf08      	it	eq
 8013554:	4613      	moveq	r3, r2
 8013556:	e787      	b.n	8013468 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8013558:	1406      	asrs	r6, r0, #16
 801355a:	d45d      	bmi.n	8013618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801355c:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8013560:	42b5      	cmp	r5, r6
 8013562:	dd59      	ble.n	8013618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013564:	140f      	asrs	r7, r1, #16
 8013566:	d457      	bmi.n	8013618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013568:	f8dc 200c 	ldr.w	r2, [ip, #12]
 801356c:	42ba      	cmp	r2, r7
 801356e:	dd53      	ble.n	8013618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013570:	9a01      	ldr	r2, [sp, #4]
 8013572:	b22d      	sxth	r5, r5
 8013574:	fb07 2505 	mla	r5, r7, r5, r2
 8013578:	5daa      	ldrb	r2, [r5, r6]
 801357a:	9d02      	ldr	r5, [sp, #8]
 801357c:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8013580:	0e2e      	lsrs	r6, r5, #24
 8013582:	d049      	beq.n	8013618 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8013584:	f06f 0201 	mvn.w	r2, #1
 8013588:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801358c:	fb02 f20e 	mul.w	r2, r2, lr
 8013590:	f834 8002 	ldrh.w	r8, [r4, r2]
 8013594:	9203      	str	r2, [sp, #12]
 8013596:	9a05      	ldr	r2, [sp, #20]
 8013598:	ea4f 2728 	mov.w	r7, r8, asr #8
 801359c:	4356      	muls	r6, r2
 801359e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80135a2:	1c72      	adds	r2, r6, #1
 80135a4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80135a8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80135ac:	b2ed      	uxtb	r5, r5
 80135ae:	1212      	asrs	r2, r2, #8
 80135b0:	fa1f f982 	uxth.w	r9, r2
 80135b4:	43d2      	mvns	r2, r2
 80135b6:	fb16 f609 	smulbb	r6, r6, r9
 80135ba:	b2d2      	uxtb	r2, r2
 80135bc:	fb15 f509 	smulbb	r5, r5, r9
 80135c0:	fb07 6702 	mla	r7, r7, r2, r6
 80135c4:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80135c8:	fb1a fa09 	smulbb	sl, sl, r9
 80135cc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80135d0:	b2bf      	uxth	r7, r7
 80135d2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80135d6:	fa5f f888 	uxtb.w	r8, r8
 80135da:	fb06 a602 	mla	r6, r6, r2, sl
 80135de:	fb08 5502 	mla	r5, r8, r2, r5
 80135e2:	1c7a      	adds	r2, r7, #1
 80135e4:	b2b6      	uxth	r6, r6
 80135e6:	b2ad      	uxth	r5, r5
 80135e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80135ec:	9a03      	ldr	r2, [sp, #12]
 80135ee:	f105 0a01 	add.w	sl, r5, #1
 80135f2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80135f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80135fa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80135fe:	ea4a 0707 	orr.w	r7, sl, r7
 8013602:	f106 0a01 	add.w	sl, r6, #1
 8013606:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801360a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801360e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013612:	ea47 070a 	orr.w	r7, r7, sl
 8013616:	52a7      	strh	r7, [r4, r2]
 8013618:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801361a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801361e:	4410      	add	r0, r2
 8013620:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8013622:	4411      	add	r1, r2
 8013624:	e755      	b.n	80134d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8013626:	f04f 0800 	mov.w	r8, #0
 801362a:	eba3 0208 	sub.w	r2, r3, r8
 801362e:	2a00      	cmp	r2, #0
 8013630:	f77f af53 	ble.w	80134da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013634:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8013638:	140a      	asrs	r2, r1, #16
 801363a:	9f01      	ldr	r7, [sp, #4]
 801363c:	1405      	asrs	r5, r0, #16
 801363e:	fb06 7202 	mla	r2, r6, r2, r7
 8013642:	5d52      	ldrb	r2, [r2, r5]
 8013644:	9d02      	ldr	r5, [sp, #8]
 8013646:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801364a:	0e2e      	lsrs	r6, r5, #24
 801364c:	d044      	beq.n	80136d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801364e:	9a05      	ldr	r2, [sp, #20]
 8013650:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013654:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8013658:	4356      	muls	r6, r2
 801365a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801365e:	1c72      	adds	r2, r6, #1
 8013660:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013664:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8013668:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801366c:	b2ed      	uxtb	r5, r5
 801366e:	1212      	asrs	r2, r2, #8
 8013670:	fa1f f982 	uxth.w	r9, r2
 8013674:	43d2      	mvns	r2, r2
 8013676:	fb16 f609 	smulbb	r6, r6, r9
 801367a:	b2d2      	uxtb	r2, r2
 801367c:	fb15 f509 	smulbb	r5, r5, r9
 8013680:	fb07 6702 	mla	r7, r7, r2, r6
 8013684:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013688:	fb1a fa09 	smulbb	sl, sl, r9
 801368c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013690:	b2bf      	uxth	r7, r7
 8013692:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013696:	fa5f fe8e 	uxtb.w	lr, lr
 801369a:	fb06 a602 	mla	r6, r6, r2, sl
 801369e:	fb0e 5502 	mla	r5, lr, r2, r5
 80136a2:	1c7a      	adds	r2, r7, #1
 80136a4:	b2b6      	uxth	r6, r6
 80136a6:	b2ad      	uxth	r5, r5
 80136a8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80136ac:	f105 0a01 	add.w	sl, r5, #1
 80136b0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80136b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80136b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80136bc:	ea4a 0707 	orr.w	r7, sl, r7
 80136c0:	f106 0a01 	add.w	sl, r6, #1
 80136c4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80136c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80136cc:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80136d0:	ea47 070a 	orr.w	r7, r7, sl
 80136d4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80136d8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80136da:	f108 0801 	add.w	r8, r8, #1
 80136de:	4410      	add	r0, r2
 80136e0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80136e2:	4411      	add	r1, r2
 80136e4:	e7a1      	b.n	801362a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80136e6:	b007      	add	sp, #28
 80136e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080136ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80136ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80136f0:	b085      	sub	sp, #20
 80136f2:	468b      	mov	fp, r1
 80136f4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80136f8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80136fa:	9203      	str	r2, [sp, #12]
 80136fc:	6841      	ldr	r1, [r0, #4]
 80136fe:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013702:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013706:	fb01 2404 	mla	r4, r1, r4, r2
 801370a:	6802      	ldr	r2, [r0, #0]
 801370c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013710:	f8de 2000 	ldr.w	r2, [lr]
 8013714:	9200      	str	r2, [sp, #0]
 8013716:	f8de 2004 	ldr.w	r2, [lr, #4]
 801371a:	3204      	adds	r2, #4
 801371c:	9201      	str	r2, [sp, #4]
 801371e:	f1bb 0f00 	cmp.w	fp, #0
 8013722:	dc03      	bgt.n	801372c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013724:	9a03      	ldr	r2, [sp, #12]
 8013726:	2a00      	cmp	r2, #0
 8013728:	f340 8153 	ble.w	80139d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801372c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801372e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013732:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013736:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013738:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801373c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013740:	2b00      	cmp	r3, #0
 8013742:	dd0e      	ble.n	8013762 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013744:	1408      	asrs	r0, r1, #16
 8013746:	d405      	bmi.n	8013754 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013748:	42b8      	cmp	r0, r7
 801374a:	da03      	bge.n	8013754 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801374c:	1410      	asrs	r0, r2, #16
 801374e:	d401      	bmi.n	8013754 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013750:	42b0      	cmp	r0, r6
 8013752:	db07      	blt.n	8013764 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013754:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013756:	3b01      	subs	r3, #1
 8013758:	3402      	adds	r4, #2
 801375a:	4401      	add	r1, r0
 801375c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801375e:	4402      	add	r2, r0
 8013760:	e7ee      	b.n	8013740 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013762:	d017      	beq.n	8013794 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013764:	1e58      	subs	r0, r3, #1
 8013766:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013768:	fb05 1500 	mla	r5, r5, r0, r1
 801376c:	142d      	asrs	r5, r5, #16
 801376e:	d409      	bmi.n	8013784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013770:	42bd      	cmp	r5, r7
 8013772:	da07      	bge.n	8013784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013774:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013776:	fb05 2000 	mla	r0, r5, r0, r2
 801377a:	1400      	asrs	r0, r0, #16
 801377c:	d402      	bmi.n	8013784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801377e:	42b0      	cmp	r0, r6
 8013780:	f2c0 80bc 	blt.w	80138fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8013784:	2600      	movs	r6, #0
 8013786:	1998      	adds	r0, r3, r6
 8013788:	2800      	cmp	r0, #0
 801378a:	dc3e      	bgt.n	801380a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 801378c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013790:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013794:	f1bb 0f00 	cmp.w	fp, #0
 8013798:	f340 811b 	ble.w	80139d2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 801379c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80137a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80137a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80137a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80137aa:	eeb0 6a62 	vmov.f32	s12, s5
 80137ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80137b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80137b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137ba:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80137be:	eeb0 6a43 	vmov.f32	s12, s6
 80137c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80137c6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80137ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80137ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80137d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80137d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80137da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80137de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80137e2:	ee12 2a90 	vmov	r2, s5
 80137e6:	eef0 2a47 	vmov.f32	s5, s14
 80137ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80137ee:	ee13 2a10 	vmov	r2, s6
 80137f2:	9311      	str	r3, [sp, #68]	@ 0x44
 80137f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80137f6:	eeb0 3a67 	vmov.f32	s6, s15
 80137fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80137fe:	9a03      	ldr	r2, [sp, #12]
 8013800:	9312      	str	r3, [sp, #72]	@ 0x48
 8013802:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013804:	bf08      	it	eq
 8013806:	4613      	moveq	r3, r2
 8013808:	e789      	b.n	801371e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801380a:	140f      	asrs	r7, r1, #16
 801380c:	d426      	bmi.n	801385c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801380e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013812:	42bd      	cmp	r5, r7
 8013814:	dd22      	ble.n	801385c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013816:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801381a:	d41f      	bmi.n	801385c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801381c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8013820:	4560      	cmp	r0, ip
 8013822:	dd1b      	ble.n	801385c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8013824:	9800      	ldr	r0, [sp, #0]
 8013826:	b22d      	sxth	r5, r5
 8013828:	fb0c 0505 	mla	r5, ip, r5, r0
 801382c:	5de8      	ldrb	r0, [r5, r7]
 801382e:	9d01      	ldr	r5, [sp, #4]
 8013830:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8013834:	0e07      	lsrs	r7, r0, #24
 8013836:	2fff      	cmp	r7, #255	@ 0xff
 8013838:	d116      	bne.n	8013868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801383a:	f06f 0501 	mvn.w	r5, #1
 801383e:	fb05 f706 	mul.w	r7, r5, r6
 8013842:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8013846:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801384a:	0945      	lsrs	r5, r0, #5
 801384c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8013850:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8013854:	ea4c 0505 	orr.w	r5, ip, r5
 8013858:	4305      	orrs	r5, r0
 801385a:	53e5      	strh	r5, [r4, r7]
 801385c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801385e:	3e01      	subs	r6, #1
 8013860:	4401      	add	r1, r0
 8013862:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013864:	4402      	add	r2, r0
 8013866:	e78e      	b.n	8013786 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8013868:	b2fd      	uxtb	r5, r7
 801386a:	2f00      	cmp	r7, #0
 801386c:	d0f6      	beq.n	801385c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801386e:	f06f 0701 	mvn.w	r7, #1
 8013872:	fa1f f985 	uxth.w	r9, r5
 8013876:	43ed      	mvns	r5, r5
 8013878:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801387c:	4377      	muls	r7, r6
 801387e:	fb1a fa09 	smulbb	sl, sl, r9
 8013882:	b2ed      	uxtb	r5, r5
 8013884:	f834 8007 	ldrh.w	r8, [r4, r7]
 8013888:	9702      	str	r7, [sp, #8]
 801388a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801388e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013892:	fb17 f709 	smulbb	r7, r7, r9
 8013896:	b2c0      	uxtb	r0, r0
 8013898:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801389c:	fb10 f009 	smulbb	r0, r0, r9
 80138a0:	fb0c 7c05 	mla	ip, ip, r5, r7
 80138a4:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80138a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80138ac:	fa1f fc8c 	uxth.w	ip, ip
 80138b0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80138b4:	fa5f f888 	uxtb.w	r8, r8
 80138b8:	fb07 a705 	mla	r7, r7, r5, sl
 80138bc:	fb08 0005 	mla	r0, r8, r5, r0
 80138c0:	f10c 0501 	add.w	r5, ip, #1
 80138c4:	b2bf      	uxth	r7, r7
 80138c6:	b280      	uxth	r0, r0
 80138c8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80138cc:	f100 0a01 	add.w	sl, r0, #1
 80138d0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80138d4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80138d8:	9802      	ldr	r0, [sp, #8]
 80138da:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80138de:	ea4a 0c0c 	orr.w	ip, sl, ip
 80138e2:	f107 0a01 	add.w	sl, r7, #1
 80138e6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80138ea:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80138ee:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80138f2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80138f6:	f824 c000 	strh.w	ip, [r4, r0]
 80138fa:	e7af      	b.n	801385c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80138fc:	f04f 0800 	mov.w	r8, #0
 8013900:	eba3 0008 	sub.w	r0, r3, r8
 8013904:	2800      	cmp	r0, #0
 8013906:	f77f af41 	ble.w	801378c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801390a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801390e:	1410      	asrs	r0, r2, #16
 8013910:	9f00      	ldr	r7, [sp, #0]
 8013912:	140d      	asrs	r5, r1, #16
 8013914:	fb06 7000 	mla	r0, r6, r0, r7
 8013918:	5d40      	ldrb	r0, [r0, r5]
 801391a:	9d01      	ldr	r5, [sp, #4]
 801391c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8013920:	0e2e      	lsrs	r6, r5, #24
 8013922:	2eff      	cmp	r6, #255	@ 0xff
 8013924:	d112      	bne.n	801394c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8013926:	482c      	ldr	r0, [pc, #176]	@ (80139d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8013928:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801392c:	0968      	lsrs	r0, r5, #5
 801392e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8013932:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8013936:	4330      	orrs	r0, r6
 8013938:	4328      	orrs	r0, r5
 801393a:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801393e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013940:	f108 0801 	add.w	r8, r8, #1
 8013944:	4401      	add	r1, r0
 8013946:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013948:	4402      	add	r2, r0
 801394a:	e7d9      	b.n	8013900 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801394c:	b2f0      	uxtb	r0, r6
 801394e:	2e00      	cmp	r6, #0
 8013950:	d0f5      	beq.n	801393e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8013952:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8013956:	fa1f f980 	uxth.w	r9, r0
 801395a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801395e:	43c0      	mvns	r0, r0
 8013960:	ea4f 272c 	mov.w	r7, ip, asr #8
 8013964:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8013968:	fb16 f609 	smulbb	r6, r6, r9
 801396c:	b2c0      	uxtb	r0, r0
 801396e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013972:	b2ed      	uxtb	r5, r5
 8013974:	fb1a fa09 	smulbb	sl, sl, r9
 8013978:	fb07 6700 	mla	r7, r7, r0, r6
 801397c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8013980:	fb15 f509 	smulbb	r5, r5, r9
 8013984:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013988:	b2bf      	uxth	r7, r7
 801398a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801398e:	fa5f fc8c 	uxtb.w	ip, ip
 8013992:	fb06 a600 	mla	r6, r6, r0, sl
 8013996:	fb0c 5500 	mla	r5, ip, r0, r5
 801399a:	1c78      	adds	r0, r7, #1
 801399c:	b2b6      	uxth	r6, r6
 801399e:	b2ad      	uxth	r5, r5
 80139a0:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80139a4:	f105 0a01 	add.w	sl, r5, #1
 80139a8:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80139ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80139b0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80139b4:	ea4a 0707 	orr.w	r7, sl, r7
 80139b8:	f106 0a01 	add.w	sl, r6, #1
 80139bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80139c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139c4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80139c8:	ea47 070a 	orr.w	r7, r7, sl
 80139cc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80139d0:	e7b5      	b.n	801393e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80139d2:	b005      	add	sp, #20
 80139d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80139d8:	fffff800 	.word	0xfffff800

080139dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80139dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139e0:	b087      	sub	sp, #28
 80139e2:	468b      	mov	fp, r1
 80139e4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80139e8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80139ea:	9204      	str	r2, [sp, #16]
 80139ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80139f0:	6861      	ldr	r1, [r4, #4]
 80139f2:	9205      	str	r2, [sp, #20]
 80139f4:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80139f8:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 80139fc:	fb01 2000 	mla	r0, r1, r0, r2
 8013a00:	6822      	ldr	r2, [r4, #0]
 8013a02:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013a06:	f8de 2000 	ldr.w	r2, [lr]
 8013a0a:	9201      	str	r2, [sp, #4]
 8013a0c:	f8de 2004 	ldr.w	r2, [lr, #4]
 8013a10:	9202      	str	r2, [sp, #8]
 8013a12:	f1bb 0f00 	cmp.w	fp, #0
 8013a16:	dc03      	bgt.n	8013a20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8013a18:	9a04      	ldr	r2, [sp, #16]
 8013a1a:	2a00      	cmp	r2, #0
 8013a1c:	f340 8142 	ble.w	8013ca4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013a20:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013a22:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8013a26:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013a2a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013a2c:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8013a30:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013a34:	2b00      	cmp	r3, #0
 8013a36:	dd0e      	ble.n	8013a56 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8013a38:	140c      	asrs	r4, r1, #16
 8013a3a:	d405      	bmi.n	8013a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013a3c:	42bc      	cmp	r4, r7
 8013a3e:	da03      	bge.n	8013a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013a40:	1414      	asrs	r4, r2, #16
 8013a42:	d401      	bmi.n	8013a48 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8013a44:	42b4      	cmp	r4, r6
 8013a46:	db07      	blt.n	8013a58 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8013a48:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013a4a:	3b01      	subs	r3, #1
 8013a4c:	3002      	adds	r0, #2
 8013a4e:	4421      	add	r1, r4
 8013a50:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013a52:	4422      	add	r2, r4
 8013a54:	e7ee      	b.n	8013a34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8013a56:	d019      	beq.n	8013a8c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8013a58:	1e5c      	subs	r4, r3, #1
 8013a5a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8013a5c:	fb05 1504 	mla	r5, r5, r4, r1
 8013a60:	142d      	asrs	r5, r5, #16
 8013a62:	d409      	bmi.n	8013a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013a64:	42bd      	cmp	r5, r7
 8013a66:	da07      	bge.n	8013a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013a68:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8013a6a:	fb05 2404 	mla	r4, r5, r4, r2
 8013a6e:	1424      	asrs	r4, r4, #16
 8013a70:	d402      	bmi.n	8013a78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8013a72:	42b4      	cmp	r4, r6
 8013a74:	f2c0 80b1 	blt.w	8013bda <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8013a78:	f04f 0800 	mov.w	r8, #0
 8013a7c:	eb03 0408 	add.w	r4, r3, r8
 8013a80:	2c00      	cmp	r4, #0
 8013a82:	dc3e      	bgt.n	8013b02 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8013a84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013a88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013a8c:	f1bb 0f00 	cmp.w	fp, #0
 8013a90:	f340 8108 	ble.w	8013ca4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8013a94:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013a98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013a9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013a9e:	f1bb 0b01 	subs.w	fp, fp, #1
 8013aa2:	eeb0 6a62 	vmov.f32	s12, s5
 8013aa6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013aaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013aae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013ab2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8013ab6:	eeb0 6a43 	vmov.f32	s12, s6
 8013aba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013abe:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8013ac2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013ac6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013aca:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013ace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013ad2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013ad6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013ada:	ee12 2a90 	vmov	r2, s5
 8013ade:	eef0 2a47 	vmov.f32	s5, s14
 8013ae2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013ae6:	ee13 2a10 	vmov	r2, s6
 8013aea:	9313      	str	r3, [sp, #76]	@ 0x4c
 8013aec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013aee:	eeb0 3a67 	vmov.f32	s6, s15
 8013af2:	fb92 f3f3 	sdiv	r3, r2, r3
 8013af6:	9a04      	ldr	r2, [sp, #16]
 8013af8:	9314      	str	r3, [sp, #80]	@ 0x50
 8013afa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8013afc:	bf08      	it	eq
 8013afe:	4613      	moveq	r3, r2
 8013b00:	e787      	b.n	8013a12 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8013b02:	140e      	asrs	r6, r1, #16
 8013b04:	d462      	bmi.n	8013bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013b06:	f8de 5008 	ldr.w	r5, [lr, #8]
 8013b0a:	42b5      	cmp	r5, r6
 8013b0c:	dd5e      	ble.n	8013bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013b0e:	1417      	asrs	r7, r2, #16
 8013b10:	d45c      	bmi.n	8013bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013b12:	f8de 400c 	ldr.w	r4, [lr, #12]
 8013b16:	42bc      	cmp	r4, r7
 8013b18:	dd58      	ble.n	8013bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013b1a:	b22d      	sxth	r5, r5
 8013b1c:	9c02      	ldr	r4, [sp, #8]
 8013b1e:	fb07 6505 	mla	r5, r7, r5, r6
 8013b22:	5d66      	ldrb	r6, [r4, r5]
 8013b24:	2e00      	cmp	r6, #0
 8013b26:	d051      	beq.n	8013bcc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8013b28:	9c01      	ldr	r4, [sp, #4]
 8013b2a:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8013b2e:	f06f 0401 	mvn.w	r4, #1
 8013b32:	fb04 f408 	mul.w	r4, r4, r8
 8013b36:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8013b3a:	5b05      	ldrh	r5, [r0, r4]
 8013b3c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013b40:	9403      	str	r4, [sp, #12]
 8013b42:	9c05      	ldr	r4, [sp, #20]
 8013b44:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013b48:	4366      	muls	r6, r4
 8013b4a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013b4e:	1c74      	adds	r4, r6, #1
 8013b50:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013b54:	122e      	asrs	r6, r5, #8
 8013b56:	1224      	asrs	r4, r4, #8
 8013b58:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013b5c:	00ed      	lsls	r5, r5, #3
 8013b5e:	b2a7      	uxth	r7, r4
 8013b60:	43e4      	mvns	r4, r4
 8013b62:	b2ed      	uxtb	r5, r5
 8013b64:	b2e4      	uxtb	r4, r4
 8013b66:	fb16 f604 	smulbb	r6, r6, r4
 8013b6a:	fb15 f504 	smulbb	r5, r5, r4
 8013b6e:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013b72:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8013b76:	fb1a fa04 	smulbb	sl, sl, r4
 8013b7a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013b7e:	fa1f fc8c 	uxth.w	ip, ip
 8013b82:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013b86:	fa5f f989 	uxtb.w	r9, r9
 8013b8a:	fb06 a607 	mla	r6, r6, r7, sl
 8013b8e:	f10c 0401 	add.w	r4, ip, #1
 8013b92:	fb09 5507 	mla	r5, r9, r7, r5
 8013b96:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013b9a:	9c03      	ldr	r4, [sp, #12]
 8013b9c:	b2ad      	uxth	r5, r5
 8013b9e:	b2b6      	uxth	r6, r6
 8013ba0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013ba4:	f105 0a01 	add.w	sl, r5, #1
 8013ba8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013bac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013bb0:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013bb4:	f106 0a01 	add.w	sl, r6, #1
 8013bb8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013bbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013bc0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013bc4:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013bc8:	f820 c004 	strh.w	ip, [r0, r4]
 8013bcc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013bce:	f108 38ff 	add.w	r8, r8, #4294967295
 8013bd2:	4421      	add	r1, r4
 8013bd4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013bd6:	4422      	add	r2, r4
 8013bd8:	e750      	b.n	8013a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8013bda:	f04f 0900 	mov.w	r9, #0
 8013bde:	eba3 0409 	sub.w	r4, r3, r9
 8013be2:	2c00      	cmp	r4, #0
 8013be4:	f77f af4e 	ble.w	8013a84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8013be8:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8013bec:	140d      	asrs	r5, r1, #16
 8013bee:	1414      	asrs	r4, r2, #16
 8013bf0:	fb06 5404 	mla	r4, r6, r4, r5
 8013bf4:	9d02      	ldr	r5, [sp, #8]
 8013bf6:	5d2e      	ldrb	r6, [r5, r4]
 8013bf8:	2e00      	cmp	r6, #0
 8013bfa:	d04c      	beq.n	8013c96 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8013bfc:	9d01      	ldr	r5, [sp, #4]
 8013bfe:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8013c02:	9c05      	ldr	r4, [sp, #20]
 8013c04:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013c08:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8013c0c:	4366      	muls	r6, r4
 8013c0e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013c12:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013c16:	1c74      	adds	r4, r6, #1
 8013c18:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013c1c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8013c20:	122e      	asrs	r6, r5, #8
 8013c22:	1224      	asrs	r4, r4, #8
 8013c24:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013c28:	00ed      	lsls	r5, r5, #3
 8013c2a:	b2a7      	uxth	r7, r4
 8013c2c:	43e4      	mvns	r4, r4
 8013c2e:	b2ed      	uxtb	r5, r5
 8013c30:	b2e4      	uxtb	r4, r4
 8013c32:	fb16 f604 	smulbb	r6, r6, r4
 8013c36:	fb15 f504 	smulbb	r5, r5, r4
 8013c3a:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013c3e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8013c42:	fb1a fa04 	smulbb	sl, sl, r4
 8013c46:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8013c4a:	fa1f fc8c 	uxth.w	ip, ip
 8013c4e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013c52:	fa5f f888 	uxtb.w	r8, r8
 8013c56:	fb06 a607 	mla	r6, r6, r7, sl
 8013c5a:	f10c 0401 	add.w	r4, ip, #1
 8013c5e:	fb08 5507 	mla	r5, r8, r7, r5
 8013c62:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013c66:	b2ad      	uxth	r5, r5
 8013c68:	b2b6      	uxth	r6, r6
 8013c6a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013c6e:	f105 0a01 	add.w	sl, r5, #1
 8013c72:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013c76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013c7a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013c7e:	f106 0a01 	add.w	sl, r6, #1
 8013c82:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013c86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013c8a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013c8e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013c92:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013c96:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013c98:	f109 0901 	add.w	r9, r9, #1
 8013c9c:	4421      	add	r1, r4
 8013c9e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8013ca0:	4422      	add	r2, r4
 8013ca2:	e79c      	b.n	8013bde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8013ca4:	b007      	add	sp, #28
 8013ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013caa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013caa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cae:	b085      	sub	sp, #20
 8013cb0:	468b      	mov	fp, r1
 8013cb2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8013cb6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8013cb8:	9203      	str	r2, [sp, #12]
 8013cba:	6861      	ldr	r1, [r4, #4]
 8013cbc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8013cc0:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8013cc4:	fb01 2000 	mla	r0, r1, r0, r2
 8013cc8:	6822      	ldr	r2, [r4, #0]
 8013cca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8013cce:	f8d8 2000 	ldr.w	r2, [r8]
 8013cd2:	9200      	str	r2, [sp, #0]
 8013cd4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8013cd8:	9201      	str	r2, [sp, #4]
 8013cda:	f1bb 0f00 	cmp.w	fp, #0
 8013cde:	dc03      	bgt.n	8013ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8013ce0:	9a03      	ldr	r2, [sp, #12]
 8013ce2:	2a00      	cmp	r2, #0
 8013ce4:	f340 8146 	ble.w	8013f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8013ce8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013cea:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8013cee:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013cf2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013cf4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8013cf8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013cfc:	2b00      	cmp	r3, #0
 8013cfe:	dd0e      	ble.n	8013d1e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8013d00:	140c      	asrs	r4, r1, #16
 8013d02:	d405      	bmi.n	8013d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013d04:	42bc      	cmp	r4, r7
 8013d06:	da03      	bge.n	8013d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013d08:	1414      	asrs	r4, r2, #16
 8013d0a:	d401      	bmi.n	8013d10 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8013d0c:	42b4      	cmp	r4, r6
 8013d0e:	db07      	blt.n	8013d20 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013d10:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013d12:	3b01      	subs	r3, #1
 8013d14:	3002      	adds	r0, #2
 8013d16:	4421      	add	r1, r4
 8013d18:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013d1a:	4422      	add	r2, r4
 8013d1c:	e7ee      	b.n	8013cfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8013d1e:	d017      	beq.n	8013d50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8013d20:	1e5c      	subs	r4, r3, #1
 8013d22:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013d24:	fb05 1504 	mla	r5, r5, r4, r1
 8013d28:	142d      	asrs	r5, r5, #16
 8013d2a:	d409      	bmi.n	8013d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013d2c:	42bd      	cmp	r5, r7
 8013d2e:	da07      	bge.n	8013d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013d30:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8013d32:	fb05 2404 	mla	r4, r5, r4, r2
 8013d36:	1424      	asrs	r4, r4, #16
 8013d38:	d402      	bmi.n	8013d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8013d3a:	42b4      	cmp	r4, r6
 8013d3c:	f2c0 80b3 	blt.w	8013ea6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8013d40:	2600      	movs	r6, #0
 8013d42:	199c      	adds	r4, r3, r6
 8013d44:	2c00      	cmp	r4, #0
 8013d46:	dc3e      	bgt.n	8013dc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8013d48:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013d4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013d50:	f1bb 0f00 	cmp.w	fp, #0
 8013d54:	f340 810e 	ble.w	8013f74 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8013d58:	ee30 0a04 	vadd.f32	s0, s0, s8
 8013d5c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013d5e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8013d62:	f1bb 0b01 	subs.w	fp, fp, #1
 8013d66:	eeb0 6a62 	vmov.f32	s12, s5
 8013d6a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8013d6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8013d72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d76:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8013d7a:	eeb0 6a43 	vmov.f32	s12, s6
 8013d7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8013d82:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8013d86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8013d8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8013d8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8013d92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8013d96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8013d9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8013d9e:	ee12 2a90 	vmov	r2, s5
 8013da2:	eef0 2a47 	vmov.f32	s5, s14
 8013da6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013daa:	ee13 2a10 	vmov	r2, s6
 8013dae:	9311      	str	r3, [sp, #68]	@ 0x44
 8013db0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013db2:	eeb0 3a67 	vmov.f32	s6, s15
 8013db6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013dba:	9a03      	ldr	r2, [sp, #12]
 8013dbc:	9312      	str	r3, [sp, #72]	@ 0x48
 8013dbe:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013dc0:	bf08      	it	eq
 8013dc2:	4613      	moveq	r3, r2
 8013dc4:	e789      	b.n	8013cda <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8013dc6:	140f      	asrs	r7, r1, #16
 8013dc8:	d418      	bmi.n	8013dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013dca:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8013dce:	42bd      	cmp	r5, r7
 8013dd0:	dd14      	ble.n	8013dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013dd2:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8013dd6:	d411      	bmi.n	8013dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013dd8:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8013ddc:	4564      	cmp	r4, ip
 8013dde:	dd0d      	ble.n	8013dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013de0:	b22d      	sxth	r5, r5
 8013de2:	9c01      	ldr	r4, [sp, #4]
 8013de4:	fb0c 7505 	mla	r5, ip, r5, r7
 8013de8:	5d64      	ldrb	r4, [r4, r5]
 8013dea:	2cff      	cmp	r4, #255	@ 0xff
 8013dec:	d10c      	bne.n	8013e08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8013dee:	9c00      	ldr	r4, [sp, #0]
 8013df0:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8013df4:	f06f 0401 	mvn.w	r4, #1
 8013df8:	4374      	muls	r4, r6
 8013dfa:	5305      	strh	r5, [r0, r4]
 8013dfc:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013dfe:	3e01      	subs	r6, #1
 8013e00:	4421      	add	r1, r4
 8013e02:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013e04:	4422      	add	r2, r4
 8013e06:	e79c      	b.n	8013d42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8013e08:	2c00      	cmp	r4, #0
 8013e0a:	d0f7      	beq.n	8013dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013e0c:	9f00      	ldr	r7, [sp, #0]
 8013e0e:	fa1f fc84 	uxth.w	ip, r4
 8013e12:	43e4      	mvns	r4, r4
 8013e14:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8013e18:	f06f 0501 	mvn.w	r5, #1
 8013e1c:	b2e4      	uxtb	r4, r4
 8013e1e:	4375      	muls	r5, r6
 8013e20:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8013e24:	9502      	str	r5, [sp, #8]
 8013e26:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8013e2a:	5b45      	ldrh	r5, [r0, r5]
 8013e2c:	122f      	asrs	r7, r5, #8
 8013e2e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013e32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8013e36:	00ed      	lsls	r5, r5, #3
 8013e38:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013e3c:	fb17 f704 	smulbb	r7, r7, r4
 8013e40:	b2ed      	uxtb	r5, r5
 8013e42:	fb1a fa04 	smulbb	sl, sl, r4
 8013e46:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8013e4a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8013e4e:	fb15 f504 	smulbb	r5, r5, r4
 8013e52:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8013e56:	fa1f fe8e 	uxth.w	lr, lr
 8013e5a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8013e5e:	fa5f f989 	uxtb.w	r9, r9
 8013e62:	fb07 a70c 	mla	r7, r7, ip, sl
 8013e66:	f10e 0401 	add.w	r4, lr, #1
 8013e6a:	fb09 550c 	mla	r5, r9, ip, r5
 8013e6e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8013e72:	9c02      	ldr	r4, [sp, #8]
 8013e74:	b2ad      	uxth	r5, r5
 8013e76:	b2bf      	uxth	r7, r7
 8013e78:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8013e7c:	f105 0a01 	add.w	sl, r5, #1
 8013e80:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013e84:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013e88:	ea4a 0e0e 	orr.w	lr, sl, lr
 8013e8c:	f107 0a01 	add.w	sl, r7, #1
 8013e90:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8013e94:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013e98:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013e9c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8013ea0:	f820 e004 	strh.w	lr, [r0, r4]
 8013ea4:	e7aa      	b.n	8013dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8013ea6:	f04f 0900 	mov.w	r9, #0
 8013eaa:	eba3 0409 	sub.w	r4, r3, r9
 8013eae:	2c00      	cmp	r4, #0
 8013eb0:	f77f af4a 	ble.w	8013d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013eb4:	1414      	asrs	r4, r2, #16
 8013eb6:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8013eba:	140d      	asrs	r5, r1, #16
 8013ebc:	fb06 5504 	mla	r5, r6, r4, r5
 8013ec0:	9c01      	ldr	r4, [sp, #4]
 8013ec2:	5d64      	ldrb	r4, [r4, r5]
 8013ec4:	2cff      	cmp	r4, #255	@ 0xff
 8013ec6:	d10b      	bne.n	8013ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8013ec8:	9c00      	ldr	r4, [sp, #0]
 8013eca:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8013ece:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8013ed2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8013ed4:	f109 0901 	add.w	r9, r9, #1
 8013ed8:	4421      	add	r1, r4
 8013eda:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8013edc:	4422      	add	r2, r4
 8013ede:	e7e4      	b.n	8013eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8013ee0:	2c00      	cmp	r4, #0
 8013ee2:	d0f6      	beq.n	8013ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013ee4:	9e00      	ldr	r6, [sp, #0]
 8013ee6:	b2a7      	uxth	r7, r4
 8013ee8:	43e4      	mvns	r4, r4
 8013eea:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8013eee:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8013ef2:	b2e4      	uxtb	r4, r4
 8013ef4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8013ef8:	122e      	asrs	r6, r5, #8
 8013efa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8013efe:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8013f02:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8013f06:	00ed      	lsls	r5, r5, #3
 8013f08:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8013f0c:	fb16 f604 	smulbb	r6, r6, r4
 8013f10:	b2ed      	uxtb	r5, r5
 8013f12:	fb1a fa04 	smulbb	sl, sl, r4
 8013f16:	fb0c 6c07 	mla	ip, ip, r7, r6
 8013f1a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8013f1e:	fb15 f504 	smulbb	r5, r5, r4
 8013f22:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013f26:	fa1f fc8c 	uxth.w	ip, ip
 8013f2a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8013f2e:	fa5f fe8e 	uxtb.w	lr, lr
 8013f32:	fb06 a607 	mla	r6, r6, r7, sl
 8013f36:	f10c 0401 	add.w	r4, ip, #1
 8013f3a:	fb0e 5507 	mla	r5, lr, r7, r5
 8013f3e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8013f42:	b2ad      	uxth	r5, r5
 8013f44:	b2b6      	uxth	r6, r6
 8013f46:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8013f4a:	f105 0a01 	add.w	sl, r5, #1
 8013f4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8013f52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8013f56:	ea4a 0c0c 	orr.w	ip, sl, ip
 8013f5a:	f106 0a01 	add.w	sl, r6, #1
 8013f5e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8013f62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8013f66:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8013f6a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8013f6e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8013f72:	e7ae      	b.n	8013ed2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8013f74:	b005      	add	sp, #20
 8013f76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013f7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013f7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f7e:	b085      	sub	sp, #20
 8013f80:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8013f82:	9203      	str	r2, [sp, #12]
 8013f84:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8013f88:	9100      	str	r1, [sp, #0]
 8013f8a:	9201      	str	r2, [sp, #4]
 8013f8c:	6841      	ldr	r1, [r0, #4]
 8013f8e:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8013f92:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8013f96:	fb01 2404 	mla	r4, r1, r4, r2
 8013f9a:	6802      	ldr	r2, [r0, #0]
 8013f9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8013fa0:	f8de 2000 	ldr.w	r2, [lr]
 8013fa4:	9202      	str	r2, [sp, #8]
 8013fa6:	9a01      	ldr	r2, [sp, #4]
 8013fa8:	43d6      	mvns	r6, r2
 8013faa:	b2f6      	uxtb	r6, r6
 8013fac:	9a00      	ldr	r2, [sp, #0]
 8013fae:	2a00      	cmp	r2, #0
 8013fb0:	dc03      	bgt.n	8013fba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8013fb2:	9a03      	ldr	r2, [sp, #12]
 8013fb4:	2a00      	cmp	r2, #0
 8013fb6:	f340 8124 	ble.w	8014202 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8013fba:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8013fbc:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8013fc0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8013fc4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013fc6:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8013fca:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8013fce:	2b00      	cmp	r3, #0
 8013fd0:	dd0e      	ble.n	8013ff0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8013fd2:	1408      	asrs	r0, r1, #16
 8013fd4:	d405      	bmi.n	8013fe2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013fd6:	4560      	cmp	r0, ip
 8013fd8:	da03      	bge.n	8013fe2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013fda:	1410      	asrs	r0, r2, #16
 8013fdc:	d401      	bmi.n	8013fe2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8013fde:	42b8      	cmp	r0, r7
 8013fe0:	db07      	blt.n	8013ff2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8013fe2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8013fe4:	3b01      	subs	r3, #1
 8013fe6:	3402      	adds	r4, #2
 8013fe8:	4401      	add	r1, r0
 8013fea:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8013fec:	4402      	add	r2, r0
 8013fee:	e7ee      	b.n	8013fce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8013ff0:	d06e      	beq.n	80140d0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8013ff2:	1e58      	subs	r0, r3, #1
 8013ff4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8013ff6:	fb05 1500 	mla	r5, r5, r0, r1
 8013ffa:	142d      	asrs	r5, r5, #16
 8013ffc:	d45c      	bmi.n	80140b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8013ffe:	4565      	cmp	r5, ip
 8014000:	da5a      	bge.n	80140b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014002:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8014004:	fb05 2000 	mla	r0, r5, r0, r2
 8014008:	1400      	asrs	r0, r0, #16
 801400a:	d455      	bmi.n	80140b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801400c:	42b8      	cmp	r0, r7
 801400e:	da53      	bge.n	80140b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014010:	4699      	mov	r9, r3
 8014012:	46a2      	mov	sl, r4
 8014014:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8014018:	f1b9 0f00 	cmp.w	r9, #0
 801401c:	dd54      	ble.n	80140c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801401e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014022:	140d      	asrs	r5, r1, #16
 8014024:	1410      	asrs	r0, r2, #16
 8014026:	f109 39ff 	add.w	r9, r9, #4294967295
 801402a:	fb07 5000 	mla	r0, r7, r0, r5
 801402e:	9d02      	ldr	r5, [sp, #8]
 8014030:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014034:	f8ba 5000 	ldrh.w	r5, [sl]
 8014038:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801403c:	122f      	asrs	r7, r5, #8
 801403e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014042:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014046:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801404a:	00ed      	lsls	r5, r5, #3
 801404c:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8014050:	fb17 f706 	smulbb	r7, r7, r6
 8014054:	b2ed      	uxtb	r5, r5
 8014056:	fb18 f806 	smulbb	r8, r8, r6
 801405a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801405e:	10c7      	asrs	r7, r0, #3
 8014060:	fb15 f506 	smulbb	r5, r5, r6
 8014064:	00c0      	lsls	r0, r0, #3
 8014066:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801406a:	fa1f fc8c 	uxth.w	ip, ip
 801406e:	b2c0      	uxtb	r0, r0
 8014070:	fb07 870b 	mla	r7, r7, fp, r8
 8014074:	fb00 500b 	mla	r0, r0, fp, r5
 8014078:	f10c 0501 	add.w	r5, ip, #1
 801407c:	b2bf      	uxth	r7, r7
 801407e:	b280      	uxth	r0, r0
 8014080:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014084:	f107 0801 	add.w	r8, r7, #1
 8014088:	1c45      	adds	r5, r0, #1
 801408a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801408e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014092:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014096:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8014098:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801409c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80140a0:	4401      	add	r1, r0
 80140a2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80140a6:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80140a8:	ea45 0c0c 	orr.w	ip, r5, ip
 80140ac:	4402      	add	r2, r0
 80140ae:	ea4c 0c08 	orr.w	ip, ip, r8
 80140b2:	f82a cb02 	strh.w	ip, [sl], #2
 80140b6:	e7af      	b.n	8014018 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80140b8:	f04f 0800 	mov.w	r8, #0
 80140bc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80140c0:	eb03 0008 	add.w	r0, r3, r8
 80140c4:	2800      	cmp	r0, #0
 80140c6:	dc41      	bgt.n	801414c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80140c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80140cc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80140d0:	9b00      	ldr	r3, [sp, #0]
 80140d2:	2b00      	cmp	r3, #0
 80140d4:	f340 8095 	ble.w	8014202 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80140d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80140dc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80140de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80140e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80140e6:	eef0 6a62 	vmov.f32	s13, s5
 80140ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80140ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80140f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80140f6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80140fa:	eef0 6a43 	vmov.f32	s13, s6
 80140fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014102:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8014106:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801410a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801410e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014112:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014116:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801411a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801411e:	ee12 2a90 	vmov	r2, s5
 8014122:	eef0 2a47 	vmov.f32	s5, s14
 8014126:	fb92 f3f3 	sdiv	r3, r2, r3
 801412a:	ee13 2a10 	vmov	r2, s6
 801412e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014130:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014132:	eeb0 3a67 	vmov.f32	s6, s15
 8014136:	fb92 f3f3 	sdiv	r3, r2, r3
 801413a:	9312      	str	r3, [sp, #72]	@ 0x48
 801413c:	9b00      	ldr	r3, [sp, #0]
 801413e:	9a03      	ldr	r2, [sp, #12]
 8014140:	3b01      	subs	r3, #1
 8014142:	9300      	str	r3, [sp, #0]
 8014144:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014146:	bf08      	it	eq
 8014148:	4613      	moveq	r3, r2
 801414a:	e72f      	b.n	8013fac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801414c:	140f      	asrs	r7, r1, #16
 801414e:	d451      	bmi.n	80141f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014150:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014154:	42bd      	cmp	r5, r7
 8014156:	dd4d      	ble.n	80141f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014158:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801415c:	d44a      	bmi.n	80141f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801415e:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014162:	4560      	cmp	r0, ip
 8014164:	dd46      	ble.n	80141f4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8014166:	b22d      	sxth	r5, r5
 8014168:	9802      	ldr	r0, [sp, #8]
 801416a:	fb0c 7505 	mla	r5, ip, r5, r7
 801416e:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8014172:	f06f 0501 	mvn.w	r5, #1
 8014176:	fb05 fb08 	mul.w	fp, r5, r8
 801417a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801417e:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014182:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014186:	122f      	asrs	r7, r5, #8
 8014188:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801418c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014190:	00ed      	lsls	r5, r5, #3
 8014192:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8014196:	fb17 f706 	smulbb	r7, r7, r6
 801419a:	b2ed      	uxtb	r5, r5
 801419c:	fb19 f906 	smulbb	r9, r9, r6
 80141a0:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80141a4:	10c7      	asrs	r7, r0, #3
 80141a6:	fb15 f506 	smulbb	r5, r5, r6
 80141aa:	00c0      	lsls	r0, r0, #3
 80141ac:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80141b0:	fa1f fc8c 	uxth.w	ip, ip
 80141b4:	b2c0      	uxtb	r0, r0
 80141b6:	fb07 970a 	mla	r7, r7, sl, r9
 80141ba:	fb00 500a 	mla	r0, r0, sl, r5
 80141be:	f10c 0501 	add.w	r5, ip, #1
 80141c2:	b2bf      	uxth	r7, r7
 80141c4:	b280      	uxth	r0, r0
 80141c6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80141ca:	f107 0901 	add.w	r9, r7, #1
 80141ce:	1c45      	adds	r5, r0, #1
 80141d0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80141d4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80141d8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80141dc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80141e0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80141e4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80141e8:	ea45 0c0c 	orr.w	ip, r5, ip
 80141ec:	ea4c 0c09 	orr.w	ip, ip, r9
 80141f0:	f824 c00b 	strh.w	ip, [r4, fp]
 80141f4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80141f6:	f108 38ff 	add.w	r8, r8, #4294967295
 80141fa:	4401      	add	r1, r0
 80141fc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80141fe:	4402      	add	r2, r0
 8014200:	e75e      	b.n	80140c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8014202:	b005      	add	sp, #20
 8014204:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014208 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801420c:	b085      	sub	sp, #20
 801420e:	4693      	mov	fp, r2
 8014210:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014214:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8014216:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8014218:	6870      	ldr	r0, [r6, #4]
 801421a:	9101      	str	r1, [sp, #4]
 801421c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8014220:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8014224:	fb00 2404 	mla	r4, r0, r4, r2
 8014228:	6832      	ldr	r2, [r6, #0]
 801422a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801422e:	682a      	ldr	r2, [r5, #0]
 8014230:	9202      	str	r2, [sp, #8]
 8014232:	9a01      	ldr	r2, [sp, #4]
 8014234:	2a00      	cmp	r2, #0
 8014236:	dc03      	bgt.n	8014240 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8014238:	f1bb 0f00 	cmp.w	fp, #0
 801423c:	f340 809a 	ble.w	8014374 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8014240:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8014242:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014246:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801424a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801424c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014250:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8014254:	2b00      	cmp	r3, #0
 8014256:	dd0c      	ble.n	8014272 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8014258:	1406      	asrs	r6, r0, #16
 801425a:	d405      	bmi.n	8014268 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801425c:	454e      	cmp	r6, r9
 801425e:	da03      	bge.n	8014268 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014260:	1416      	asrs	r6, r2, #16
 8014262:	d401      	bmi.n	8014268 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014264:	4546      	cmp	r6, r8
 8014266:	db05      	blt.n	8014274 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8014268:	4470      	add	r0, lr
 801426a:	4462      	add	r2, ip
 801426c:	3b01      	subs	r3, #1
 801426e:	3402      	adds	r4, #2
 8014270:	e7f0      	b.n	8014254 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8014272:	d00f      	beq.n	8014294 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8014274:	1e5e      	subs	r6, r3, #1
 8014276:	fb0e 0706 	mla	r7, lr, r6, r0
 801427a:	143f      	asrs	r7, r7, #16
 801427c:	d541      	bpl.n	8014302 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801427e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014282:	4698      	mov	r8, r3
 8014284:	9603      	str	r6, [sp, #12]
 8014286:	f1b8 0f00 	cmp.w	r8, #0
 801428a:	dc56      	bgt.n	801433a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801428c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014290:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014294:	9b01      	ldr	r3, [sp, #4]
 8014296:	2b00      	cmp	r3, #0
 8014298:	dd6c      	ble.n	8014374 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801429a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801429e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80142a0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80142a4:	eeb0 6a62 	vmov.f32	s12, s5
 80142a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80142ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 80142b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80142b4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80142b8:	eeb0 6a43 	vmov.f32	s12, s6
 80142bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80142c0:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80142c4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80142c8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80142cc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80142d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80142d4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80142d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80142dc:	ee12 2a90 	vmov	r2, s5
 80142e0:	eef0 2a47 	vmov.f32	s5, s14
 80142e4:	fb92 fef3 	sdiv	lr, r2, r3
 80142e8:	ee13 2a10 	vmov	r2, s6
 80142ec:	eeb0 3a67 	vmov.f32	s6, s15
 80142f0:	fb92 fcf3 	sdiv	ip, r2, r3
 80142f4:	9b01      	ldr	r3, [sp, #4]
 80142f6:	3b01      	subs	r3, #1
 80142f8:	9301      	str	r3, [sp, #4]
 80142fa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80142fc:	bf08      	it	eq
 80142fe:	465b      	moveq	r3, fp
 8014300:	e797      	b.n	8014232 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014302:	454f      	cmp	r7, r9
 8014304:	dabb      	bge.n	801427e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014306:	fb0c 2606 	mla	r6, ip, r6, r2
 801430a:	1436      	asrs	r6, r6, #16
 801430c:	d4b7      	bmi.n	801427e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801430e:	4546      	cmp	r6, r8
 8014310:	dab5      	bge.n	801427e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8014312:	461e      	mov	r6, r3
 8014314:	46a0      	mov	r8, r4
 8014316:	2e00      	cmp	r6, #0
 8014318:	ddb8      	ble.n	801428c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801431a:	1417      	asrs	r7, r2, #16
 801431c:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014320:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014324:	9902      	ldr	r1, [sp, #8]
 8014326:	4470      	add	r0, lr
 8014328:	4462      	add	r2, ip
 801432a:	fb0a 9707 	mla	r7, sl, r7, r9
 801432e:	3e01      	subs	r6, #1
 8014330:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014334:	f828 7b02 	strh.w	r7, [r8], #2
 8014338:	e7ed      	b.n	8014316 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801433a:	ea5f 4920 	movs.w	r9, r0, asr #16
 801433e:	d414      	bmi.n	801436a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014340:	68ae      	ldr	r6, [r5, #8]
 8014342:	454e      	cmp	r6, r9
 8014344:	dd11      	ble.n	801436a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014346:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801434a:	d40e      	bmi.n	801436a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801434c:	68ef      	ldr	r7, [r5, #12]
 801434e:	4557      	cmp	r7, sl
 8014350:	dd0b      	ble.n	801436a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8014352:	b236      	sxth	r6, r6
 8014354:	f06f 0101 	mvn.w	r1, #1
 8014358:	9f02      	ldr	r7, [sp, #8]
 801435a:	fb0a 9606 	mla	r6, sl, r6, r9
 801435e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014362:	fb01 f608 	mul.w	r6, r1, r8
 8014366:	9903      	ldr	r1, [sp, #12]
 8014368:	538f      	strh	r7, [r1, r6]
 801436a:	4470      	add	r0, lr
 801436c:	4462      	add	r2, ip
 801436e:	f108 38ff 	add.w	r8, r8, #4294967295
 8014372:	e788      	b.n	8014286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014374:	b005      	add	sp, #20
 8014376:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801437a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801437a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801437e:	b087      	sub	sp, #28
 8014380:	468b      	mov	fp, r1
 8014382:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014386:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014388:	9203      	str	r2, [sp, #12]
 801438a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801438e:	6841      	ldr	r1, [r0, #4]
 8014390:	9204      	str	r2, [sp, #16]
 8014392:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8014396:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801439a:	fb01 2505 	mla	r5, r1, r5, r2
 801439e:	6802      	ldr	r2, [r0, #0]
 80143a0:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80143a4:	f8d9 2000 	ldr.w	r2, [r9]
 80143a8:	9201      	str	r2, [sp, #4]
 80143aa:	f1bb 0f00 	cmp.w	fp, #0
 80143ae:	dc03      	bgt.n	80143b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80143b0:	9a03      	ldr	r2, [sp, #12]
 80143b2:	2a00      	cmp	r2, #0
 80143b4:	f340 8158 	ble.w	8014668 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 80143b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80143ba:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80143be:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80143c2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80143c4:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80143c8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80143cc:	2b00      	cmp	r3, #0
 80143ce:	dd0e      	ble.n	80143ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80143d0:	1402      	asrs	r2, r0, #16
 80143d2:	d405      	bmi.n	80143e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80143d4:	42ba      	cmp	r2, r7
 80143d6:	da03      	bge.n	80143e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80143d8:	140a      	asrs	r2, r1, #16
 80143da:	d401      	bmi.n	80143e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80143dc:	42b2      	cmp	r2, r6
 80143de:	db07      	blt.n	80143f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80143e0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80143e2:	3b01      	subs	r3, #1
 80143e4:	3502      	adds	r5, #2
 80143e6:	4410      	add	r0, r2
 80143e8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80143ea:	4411      	add	r1, r2
 80143ec:	e7ee      	b.n	80143cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80143ee:	d017      	beq.n	8014420 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80143f0:	1e5a      	subs	r2, r3, #1
 80143f2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80143f4:	fb04 0402 	mla	r4, r4, r2, r0
 80143f8:	1424      	asrs	r4, r4, #16
 80143fa:	d409      	bmi.n	8014410 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80143fc:	42bc      	cmp	r4, r7
 80143fe:	da07      	bge.n	8014410 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8014400:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8014402:	fb04 1202 	mla	r2, r4, r2, r1
 8014406:	1412      	asrs	r2, r2, #16
 8014408:	d402      	bmi.n	8014410 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801440a:	42b2      	cmp	r2, r6
 801440c:	f2c0 80bf 	blt.w	801458e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8014410:	2700      	movs	r7, #0
 8014412:	19da      	adds	r2, r3, r7
 8014414:	2a00      	cmp	r2, #0
 8014416:	dc3e      	bgt.n	8014496 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8014418:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801441c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8014420:	f1bb 0f00 	cmp.w	fp, #0
 8014424:	f340 8120 	ble.w	8014668 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8014428:	ee30 0a04 	vadd.f32	s0, s0, s8
 801442c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801442e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014432:	f1bb 0b01 	subs.w	fp, fp, #1
 8014436:	eeb0 6a62 	vmov.f32	s12, s5
 801443a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801443e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014442:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014446:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801444a:	eeb0 6a43 	vmov.f32	s12, s6
 801444e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014452:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014456:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801445a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801445e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014462:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014466:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801446a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801446e:	ee12 2a90 	vmov	r2, s5
 8014472:	eef0 2a47 	vmov.f32	s5, s14
 8014476:	fb92 f3f3 	sdiv	r3, r2, r3
 801447a:	ee13 2a10 	vmov	r2, s6
 801447e:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014480:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014482:	eeb0 3a67 	vmov.f32	s6, s15
 8014486:	fb92 f3f3 	sdiv	r3, r2, r3
 801448a:	9a03      	ldr	r2, [sp, #12]
 801448c:	9314      	str	r3, [sp, #80]	@ 0x50
 801448e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014490:	bf08      	it	eq
 8014492:	4613      	moveq	r3, r2
 8014494:	e789      	b.n	80143aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014496:	1406      	asrs	r6, r0, #16
 8014498:	d42d      	bmi.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801449a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801449e:	42b4      	cmp	r4, r6
 80144a0:	dd29      	ble.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80144a2:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80144a6:	d426      	bmi.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80144a8:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80144ac:	4562      	cmp	r2, ip
 80144ae:	dd22      	ble.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80144b0:	b224      	sxth	r4, r4
 80144b2:	9a01      	ldr	r2, [sp, #4]
 80144b4:	fb0c 6404 	mla	r4, ip, r4, r6
 80144b8:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80144bc:	0e22      	lsrs	r2, r4, #24
 80144be:	d01a      	beq.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80144c0:	9e04      	ldr	r6, [sp, #16]
 80144c2:	4372      	muls	r2, r6
 80144c4:	1c56      	adds	r6, r2, #1
 80144c6:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80144ca:	0a26      	lsrs	r6, r4, #8
 80144cc:	1212      	asrs	r2, r2, #8
 80144ce:	9605      	str	r6, [sp, #20]
 80144d0:	2aff      	cmp	r2, #255	@ 0xff
 80144d2:	d116      	bne.n	8014502 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80144d4:	f06f 0201 	mvn.w	r2, #1
 80144d8:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80144dc:	fb02 fc07 	mul.w	ip, r2, r7
 80144e0:	0962      	lsrs	r2, r4, #5
 80144e2:	f026 0607 	bic.w	r6, r6, #7
 80144e6:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80144ea:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80144ee:	4316      	orrs	r6, r2
 80144f0:	4326      	orrs	r6, r4
 80144f2:	f825 600c 	strh.w	r6, [r5, ip]
 80144f6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80144f8:	3f01      	subs	r7, #1
 80144fa:	4410      	add	r0, r2
 80144fc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80144fe:	4411      	add	r1, r2
 8014500:	e787      	b.n	8014412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014502:	f06f 0601 	mvn.w	r6, #1
 8014506:	fa1f fa82 	uxth.w	sl, r2
 801450a:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801450e:	43d2      	mvns	r2, r2
 8014510:	437e      	muls	r6, r7
 8014512:	b2e4      	uxtb	r4, r4
 8014514:	fb1c fc0a 	smulbb	ip, ip, sl
 8014518:	b2d2      	uxtb	r2, r2
 801451a:	f835 8006 	ldrh.w	r8, [r5, r6]
 801451e:	fb14 f40a 	smulbb	r4, r4, sl
 8014522:	9602      	str	r6, [sp, #8]
 8014524:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014528:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801452c:	fb16 f60a 	smulbb	r6, r6, sl
 8014530:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014534:	fb0e ce02 	mla	lr, lr, r2, ip
 8014538:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801453c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014540:	fa1f fe8e 	uxth.w	lr, lr
 8014544:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014548:	fa5f f888 	uxtb.w	r8, r8
 801454c:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014550:	fb08 4402 	mla	r4, r8, r2, r4
 8014554:	f10e 0201 	add.w	r2, lr, #1
 8014558:	fa1f fc8c 	uxth.w	ip, ip
 801455c:	b2a4      	uxth	r4, r4
 801455e:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014562:	9a02      	ldr	r2, [sp, #8]
 8014564:	1c66      	adds	r6, r4, #1
 8014566:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801456a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801456e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014572:	ea46 0e0e 	orr.w	lr, r6, lr
 8014576:	f10c 0601 	add.w	r6, ip, #1
 801457a:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801457e:	0976      	lsrs	r6, r6, #5
 8014580:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014584:	ea4e 0e06 	orr.w	lr, lr, r6
 8014588:	f825 e002 	strh.w	lr, [r5, r2]
 801458c:	e7b3      	b.n	80144f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801458e:	f04f 0800 	mov.w	r8, #0
 8014592:	eba3 0208 	sub.w	r2, r3, r8
 8014596:	2a00      	cmp	r2, #0
 8014598:	f77f af3e 	ble.w	8014418 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801459c:	1404      	asrs	r4, r0, #16
 801459e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80145a2:	140a      	asrs	r2, r1, #16
 80145a4:	fb06 4202 	mla	r2, r6, r2, r4
 80145a8:	9c01      	ldr	r4, [sp, #4]
 80145aa:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80145ae:	0e22      	lsrs	r2, r4, #24
 80145b0:	d015      	beq.n	80145de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 80145b2:	9e04      	ldr	r6, [sp, #16]
 80145b4:	4372      	muls	r2, r6
 80145b6:	1c56      	adds	r6, r2, #1
 80145b8:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80145bc:	0a26      	lsrs	r6, r4, #8
 80145be:	1212      	asrs	r2, r2, #8
 80145c0:	2aff      	cmp	r2, #255	@ 0xff
 80145c2:	d113      	bne.n	80145ec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80145c4:	0962      	lsrs	r2, r4, #5
 80145c6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80145ca:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80145ce:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80145d2:	f026 0607 	bic.w	r6, r6, #7
 80145d6:	4316      	orrs	r6, r2
 80145d8:	4326      	orrs	r6, r4
 80145da:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80145de:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80145e0:	f108 0801 	add.w	r8, r8, #1
 80145e4:	4410      	add	r0, r2
 80145e6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80145e8:	4411      	add	r1, r2
 80145ea:	e7d2      	b.n	8014592 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80145ec:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80145f0:	fa1f fa82 	uxth.w	sl, r2
 80145f4:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80145f8:	43d2      	mvns	r2, r2
 80145fa:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80145fe:	fb17 f70a 	smulbb	r7, r7, sl
 8014602:	b2d2      	uxtb	r2, r2
 8014604:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014608:	b2e4      	uxtb	r4, r4
 801460a:	b2f6      	uxtb	r6, r6
 801460c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014610:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014614:	fb14 f40a 	smulbb	r4, r4, sl
 8014618:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801461c:	fa1f fc8c 	uxth.w	ip, ip
 8014620:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014624:	fb16 f60a 	smulbb	r6, r6, sl
 8014628:	fa5f fe8e 	uxtb.w	lr, lr
 801462c:	fb0e 4402 	mla	r4, lr, r2, r4
 8014630:	fb07 6702 	mla	r7, r7, r2, r6
 8014634:	f10c 0201 	add.w	r2, ip, #1
 8014638:	b2a4      	uxth	r4, r4
 801463a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801463e:	1c66      	adds	r6, r4, #1
 8014640:	b2bf      	uxth	r7, r7
 8014642:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014646:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801464a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801464e:	ea46 0c0c 	orr.w	ip, r6, ip
 8014652:	1c7e      	adds	r6, r7, #1
 8014654:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8014658:	0976      	lsrs	r6, r6, #5
 801465a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801465e:	ea4c 0c06 	orr.w	ip, ip, r6
 8014662:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8014666:	e7ba      	b.n	80145de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8014668:	b007      	add	sp, #28
 801466a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014670 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014670:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014674:	b085      	sub	sp, #20
 8014676:	468b      	mov	fp, r1
 8014678:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801467c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801467e:	9203      	str	r2, [sp, #12]
 8014680:	6841      	ldr	r1, [r0, #4]
 8014682:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8014686:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801468a:	fb01 2404 	mla	r4, r1, r4, r2
 801468e:	6802      	ldr	r2, [r0, #0]
 8014690:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014694:	f8d8 2000 	ldr.w	r2, [r8]
 8014698:	9201      	str	r2, [sp, #4]
 801469a:	f1bb 0f00 	cmp.w	fp, #0
 801469e:	dc03      	bgt.n	80146a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80146a0:	9a03      	ldr	r2, [sp, #12]
 80146a2:	2a00      	cmp	r2, #0
 80146a4:	f340 814f 	ble.w	8014946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80146a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80146aa:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80146ae:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80146b2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80146b4:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80146b8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80146bc:	2b00      	cmp	r3, #0
 80146be:	dd0e      	ble.n	80146de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80146c0:	1408      	asrs	r0, r1, #16
 80146c2:	d405      	bmi.n	80146d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80146c4:	42b8      	cmp	r0, r7
 80146c6:	da03      	bge.n	80146d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80146c8:	1410      	asrs	r0, r2, #16
 80146ca:	d401      	bmi.n	80146d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80146cc:	42b0      	cmp	r0, r6
 80146ce:	db07      	blt.n	80146e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80146d0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80146d2:	3b01      	subs	r3, #1
 80146d4:	3402      	adds	r4, #2
 80146d6:	4401      	add	r1, r0
 80146d8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80146da:	4402      	add	r2, r0
 80146dc:	e7ee      	b.n	80146bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80146de:	d017      	beq.n	8014710 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80146e0:	1e58      	subs	r0, r3, #1
 80146e2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80146e4:	fb05 1500 	mla	r5, r5, r0, r1
 80146e8:	142d      	asrs	r5, r5, #16
 80146ea:	d409      	bmi.n	8014700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80146ec:	42bd      	cmp	r5, r7
 80146ee:	da07      	bge.n	8014700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80146f0:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80146f2:	fb05 2000 	mla	r0, r5, r0, r2
 80146f6:	1400      	asrs	r0, r0, #16
 80146f8:	d402      	bmi.n	8014700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80146fa:	42b0      	cmp	r0, r6
 80146fc:	f2c0 80ba 	blt.w	8014874 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8014700:	2600      	movs	r6, #0
 8014702:	1998      	adds	r0, r3, r6
 8014704:	2800      	cmp	r0, #0
 8014706:	dc3e      	bgt.n	8014786 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8014708:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801470c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014710:	f1bb 0f00 	cmp.w	fp, #0
 8014714:	f340 8117 	ble.w	8014946 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8014718:	ee30 0a04 	vadd.f32	s0, s0, s8
 801471c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801471e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014722:	f1bb 0b01 	subs.w	fp, fp, #1
 8014726:	eeb0 6a62 	vmov.f32	s12, s5
 801472a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801472e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014732:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014736:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801473a:	eeb0 6a43 	vmov.f32	s12, s6
 801473e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014742:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8014746:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801474a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801474e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014752:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014756:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801475a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801475e:	ee12 2a90 	vmov	r2, s5
 8014762:	eef0 2a47 	vmov.f32	s5, s14
 8014766:	fb92 f3f3 	sdiv	r3, r2, r3
 801476a:	ee13 2a10 	vmov	r2, s6
 801476e:	9311      	str	r3, [sp, #68]	@ 0x44
 8014770:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014772:	eeb0 3a67 	vmov.f32	s6, s15
 8014776:	fb92 f3f3 	sdiv	r3, r2, r3
 801477a:	9a03      	ldr	r2, [sp, #12]
 801477c:	9312      	str	r3, [sp, #72]	@ 0x48
 801477e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014780:	bf08      	it	eq
 8014782:	4613      	moveq	r3, r2
 8014784:	e789      	b.n	801469a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8014786:	140f      	asrs	r7, r1, #16
 8014788:	d424      	bmi.n	80147d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801478a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801478e:	42bd      	cmp	r5, r7
 8014790:	dd20      	ble.n	80147d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014792:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014796:	d41d      	bmi.n	80147d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014798:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801479c:	4560      	cmp	r0, ip
 801479e:	dd19      	ble.n	80147d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80147a0:	b22d      	sxth	r5, r5
 80147a2:	9801      	ldr	r0, [sp, #4]
 80147a4:	fb0c 7505 	mla	r5, ip, r5, r7
 80147a8:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80147ac:	0e07      	lsrs	r7, r0, #24
 80147ae:	2fff      	cmp	r7, #255	@ 0xff
 80147b0:	d116      	bne.n	80147e0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80147b2:	f06f 0501 	mvn.w	r5, #1
 80147b6:	fb05 f706 	mul.w	r7, r5, r6
 80147ba:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80147be:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80147c2:	0945      	lsrs	r5, r0, #5
 80147c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80147c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80147cc:	ea4c 0505 	orr.w	r5, ip, r5
 80147d0:	4305      	orrs	r5, r0
 80147d2:	53e5      	strh	r5, [r4, r7]
 80147d4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80147d6:	3e01      	subs	r6, #1
 80147d8:	4401      	add	r1, r0
 80147da:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80147dc:	4402      	add	r2, r0
 80147de:	e790      	b.n	8014702 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80147e0:	b2fd      	uxtb	r5, r7
 80147e2:	2f00      	cmp	r7, #0
 80147e4:	d0f6      	beq.n	80147d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80147e6:	f06f 0701 	mvn.w	r7, #1
 80147ea:	fa1f f985 	uxth.w	r9, r5
 80147ee:	43ed      	mvns	r5, r5
 80147f0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80147f4:	4377      	muls	r7, r6
 80147f6:	fb1a fa09 	smulbb	sl, sl, r9
 80147fa:	b2ed      	uxtb	r5, r5
 80147fc:	f834 e007 	ldrh.w	lr, [r4, r7]
 8014800:	9702      	str	r7, [sp, #8]
 8014802:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8014806:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801480a:	fb17 f709 	smulbb	r7, r7, r9
 801480e:	b2c0      	uxtb	r0, r0
 8014810:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014814:	fb10 f009 	smulbb	r0, r0, r9
 8014818:	fb0c 7c05 	mla	ip, ip, r5, r7
 801481c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014820:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014824:	fa1f fc8c 	uxth.w	ip, ip
 8014828:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801482c:	fa5f fe8e 	uxtb.w	lr, lr
 8014830:	fb07 a705 	mla	r7, r7, r5, sl
 8014834:	fb0e 0005 	mla	r0, lr, r5, r0
 8014838:	f10c 0501 	add.w	r5, ip, #1
 801483c:	b2bf      	uxth	r7, r7
 801483e:	b280      	uxth	r0, r0
 8014840:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014844:	f100 0a01 	add.w	sl, r0, #1
 8014848:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801484c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8014850:	9802      	ldr	r0, [sp, #8]
 8014852:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014856:	ea4a 0c0c 	orr.w	ip, sl, ip
 801485a:	f107 0a01 	add.w	sl, r7, #1
 801485e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014862:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014866:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801486a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801486e:	f824 c000 	strh.w	ip, [r4, r0]
 8014872:	e7af      	b.n	80147d4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014874:	f04f 0e00 	mov.w	lr, #0
 8014878:	eba3 000e 	sub.w	r0, r3, lr
 801487c:	2800      	cmp	r0, #0
 801487e:	f77f af43 	ble.w	8014708 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8014882:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8014886:	140d      	asrs	r5, r1, #16
 8014888:	1410      	asrs	r0, r2, #16
 801488a:	fb06 5000 	mla	r0, r6, r0, r5
 801488e:	9d01      	ldr	r5, [sp, #4]
 8014890:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8014894:	0e2e      	lsrs	r6, r5, #24
 8014896:	2eff      	cmp	r6, #255	@ 0xff
 8014898:	d112      	bne.n	80148c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801489a:	482c      	ldr	r0, [pc, #176]	@ (801494c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801489c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80148a0:	0968      	lsrs	r0, r5, #5
 80148a2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80148a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80148aa:	4330      	orrs	r0, r6
 80148ac:	4328      	orrs	r0, r5
 80148ae:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80148b2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80148b4:	f10e 0e01 	add.w	lr, lr, #1
 80148b8:	4401      	add	r1, r0
 80148ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80148bc:	4402      	add	r2, r0
 80148be:	e7db      	b.n	8014878 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80148c0:	b2f0      	uxtb	r0, r6
 80148c2:	2e00      	cmp	r6, #0
 80148c4:	d0f5      	beq.n	80148b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80148c6:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80148ca:	fa1f f980 	uxth.w	r9, r0
 80148ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80148d2:	43c0      	mvns	r0, r0
 80148d4:	ea4f 272c 	mov.w	r7, ip, asr #8
 80148d8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80148dc:	fb16 f609 	smulbb	r6, r6, r9
 80148e0:	b2c0      	uxtb	r0, r0
 80148e2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80148e6:	b2ed      	uxtb	r5, r5
 80148e8:	fb1a fa09 	smulbb	sl, sl, r9
 80148ec:	fb07 6700 	mla	r7, r7, r0, r6
 80148f0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80148f4:	fb15 f509 	smulbb	r5, r5, r9
 80148f8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80148fc:	b2bf      	uxth	r7, r7
 80148fe:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014902:	fa5f fc8c 	uxtb.w	ip, ip
 8014906:	fb06 a600 	mla	r6, r6, r0, sl
 801490a:	fb0c 5500 	mla	r5, ip, r0, r5
 801490e:	1c78      	adds	r0, r7, #1
 8014910:	b2b6      	uxth	r6, r6
 8014912:	b2ad      	uxth	r5, r5
 8014914:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8014918:	f105 0a01 	add.w	sl, r5, #1
 801491c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014920:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014924:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014928:	ea4a 0707 	orr.w	r7, sl, r7
 801492c:	f106 0a01 	add.w	sl, r6, #1
 8014930:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014934:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014938:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801493c:	ea47 070a 	orr.w	r7, r7, sl
 8014940:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8014944:	e7b5      	b.n	80148b2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8014946:	b005      	add	sp, #20
 8014948:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801494c:	fffff800 	.word	0xfffff800

08014950 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014950:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014954:	b087      	sub	sp, #28
 8014956:	468b      	mov	fp, r1
 8014958:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801495c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801495e:	9203      	str	r2, [sp, #12]
 8014960:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8014964:	6841      	ldr	r1, [r0, #4]
 8014966:	9204      	str	r2, [sp, #16]
 8014968:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801496c:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014970:	fb01 2404 	mla	r4, r1, r4, r2
 8014974:	6802      	ldr	r2, [r0, #0]
 8014976:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801497a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801497e:	3201      	adds	r2, #1
 8014980:	f022 0201 	bic.w	r2, r2, #1
 8014984:	9200      	str	r2, [sp, #0]
 8014986:	f8d9 2000 	ldr.w	r2, [r9]
 801498a:	9201      	str	r2, [sp, #4]
 801498c:	f1bb 0f00 	cmp.w	fp, #0
 8014990:	dc03      	bgt.n	801499a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014992:	9a03      	ldr	r2, [sp, #12]
 8014994:	2a00      	cmp	r2, #0
 8014996:	f340 816a 	ble.w	8014c6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801499a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801499c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80149a0:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80149a4:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80149a6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80149aa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80149ae:	2b00      	cmp	r3, #0
 80149b0:	dd0e      	ble.n	80149d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80149b2:	1402      	asrs	r2, r0, #16
 80149b4:	d405      	bmi.n	80149c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149b6:	42ba      	cmp	r2, r7
 80149b8:	da03      	bge.n	80149c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149ba:	140a      	asrs	r2, r1, #16
 80149bc:	d401      	bmi.n	80149c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80149be:	42b2      	cmp	r2, r6
 80149c0:	db07      	blt.n	80149d2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80149c2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80149c4:	3b01      	subs	r3, #1
 80149c6:	3402      	adds	r4, #2
 80149c8:	4410      	add	r0, r2
 80149ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80149cc:	4411      	add	r1, r2
 80149ce:	e7ee      	b.n	80149ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80149d0:	d017      	beq.n	8014a02 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80149d2:	1e5a      	subs	r2, r3, #1
 80149d4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80149d6:	fb05 0502 	mla	r5, r5, r2, r0
 80149da:	142d      	asrs	r5, r5, #16
 80149dc:	d409      	bmi.n	80149f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80149de:	42bd      	cmp	r5, r7
 80149e0:	da07      	bge.n	80149f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80149e2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80149e4:	fb05 1202 	mla	r2, r5, r2, r1
 80149e8:	1412      	asrs	r2, r2, #16
 80149ea:	d402      	bmi.n	80149f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80149ec:	42b2      	cmp	r2, r6
 80149ee:	f2c0 80c8 	blt.w	8014b82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80149f2:	2700      	movs	r7, #0
 80149f4:	19da      	adds	r2, r3, r7
 80149f6:	2a00      	cmp	r2, #0
 80149f8:	dc3e      	bgt.n	8014a78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80149fa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80149fe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014a02:	f1bb 0f00 	cmp.w	fp, #0
 8014a06:	f340 8132 	ble.w	8014c6e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8014a0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014a0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a10:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014a14:	f1bb 0b01 	subs.w	fp, fp, #1
 8014a18:	eeb0 6a62 	vmov.f32	s12, s5
 8014a1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014a20:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014a24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a28:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014a2c:	eeb0 6a43 	vmov.f32	s12, s6
 8014a30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014a34:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014a38:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014a3c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014a40:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014a44:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014a48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014a4c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014a50:	ee12 2a90 	vmov	r2, s5
 8014a54:	eef0 2a47 	vmov.f32	s5, s14
 8014a58:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a5c:	ee13 2a10 	vmov	r2, s6
 8014a60:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014a62:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a64:	eeb0 3a67 	vmov.f32	s6, s15
 8014a68:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a6c:	9a03      	ldr	r2, [sp, #12]
 8014a6e:	9314      	str	r3, [sp, #80]	@ 0x50
 8014a70:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014a72:	bf08      	it	eq
 8014a74:	4613      	moveq	r3, r2
 8014a76:	e789      	b.n	801498c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014a78:	1405      	asrs	r5, r0, #16
 8014a7a:	d436      	bmi.n	8014aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014a7c:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8014a80:	42aa      	cmp	r2, r5
 8014a82:	dd32      	ble.n	8014aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014a84:	140e      	asrs	r6, r1, #16
 8014a86:	d430      	bmi.n	8014aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014a88:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8014a8c:	42b2      	cmp	r2, r6
 8014a8e:	dd2c      	ble.n	8014aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014a90:	9a00      	ldr	r2, [sp, #0]
 8014a92:	fb06 5502 	mla	r5, r6, r2, r5
 8014a96:	9e01      	ldr	r6, [sp, #4]
 8014a98:	086a      	lsrs	r2, r5, #1
 8014a9a:	5cb2      	ldrb	r2, [r6, r2]
 8014a9c:	07ee      	lsls	r6, r5, #31
 8014a9e:	bf54      	ite	pl
 8014aa0:	f002 020f 	andpl.w	r2, r2, #15
 8014aa4:	1112      	asrmi	r2, r2, #4
 8014aa6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014aaa:	b2d2      	uxtb	r2, r2
 8014aac:	b1ea      	cbz	r2, 8014aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014aae:	9d04      	ldr	r5, [sp, #16]
 8014ab0:	436a      	muls	r2, r5
 8014ab2:	1c55      	adds	r5, r2, #1
 8014ab4:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014ab8:	4d6e      	ldr	r5, [pc, #440]	@ (8014c74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014aba:	1212      	asrs	r2, r2, #8
 8014abc:	682d      	ldr	r5, [r5, #0]
 8014abe:	2aff      	cmp	r2, #255	@ 0xff
 8014ac0:	ea4f 2615 	mov.w	r6, r5, lsr #8
 8014ac4:	9605      	str	r6, [sp, #20]
 8014ac6:	d116      	bne.n	8014af6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8014ac8:	f06f 0201 	mvn.w	r2, #1
 8014acc:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8014ad0:	fb02 fc07 	mul.w	ip, r2, r7
 8014ad4:	096a      	lsrs	r2, r5, #5
 8014ad6:	f026 0607 	bic.w	r6, r6, #7
 8014ada:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014ade:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014ae2:	4316      	orrs	r6, r2
 8014ae4:	432e      	orrs	r6, r5
 8014ae6:	f824 600c 	strh.w	r6, [r4, ip]
 8014aea:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014aec:	3f01      	subs	r7, #1
 8014aee:	4410      	add	r0, r2
 8014af0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014af2:	4411      	add	r1, r2
 8014af4:	e77e      	b.n	80149f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8014af6:	f06f 0601 	mvn.w	r6, #1
 8014afa:	fa1f fa82 	uxth.w	sl, r2
 8014afe:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8014b02:	43d2      	mvns	r2, r2
 8014b04:	437e      	muls	r6, r7
 8014b06:	b2ed      	uxtb	r5, r5
 8014b08:	fb1c fc0a 	smulbb	ip, ip, sl
 8014b0c:	b2d2      	uxtb	r2, r2
 8014b0e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8014b12:	fb15 f50a 	smulbb	r5, r5, sl
 8014b16:	9602      	str	r6, [sp, #8]
 8014b18:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8014b1c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8014b20:	fb16 f60a 	smulbb	r6, r6, sl
 8014b24:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8014b28:	fb0e ce02 	mla	lr, lr, r2, ip
 8014b2c:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8014b30:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8014b34:	fa1f fe8e 	uxth.w	lr, lr
 8014b38:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8014b3c:	fa5f f888 	uxtb.w	r8, r8
 8014b40:	fb0c 6c02 	mla	ip, ip, r2, r6
 8014b44:	fb08 5502 	mla	r5, r8, r2, r5
 8014b48:	f10e 0201 	add.w	r2, lr, #1
 8014b4c:	fa1f fc8c 	uxth.w	ip, ip
 8014b50:	b2ad      	uxth	r5, r5
 8014b52:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8014b56:	9a02      	ldr	r2, [sp, #8]
 8014b58:	1c6e      	adds	r6, r5, #1
 8014b5a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8014b5e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8014b62:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8014b66:	ea46 0e0e 	orr.w	lr, r6, lr
 8014b6a:	f10c 0601 	add.w	r6, ip, #1
 8014b6e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8014b72:	0976      	lsrs	r6, r6, #5
 8014b74:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014b78:	ea4e 0e06 	orr.w	lr, lr, r6
 8014b7c:	f824 e002 	strh.w	lr, [r4, r2]
 8014b80:	e7b3      	b.n	8014aea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8014b82:	f04f 0800 	mov.w	r8, #0
 8014b86:	eba3 0208 	sub.w	r2, r3, r8
 8014b8a:	2a00      	cmp	r2, #0
 8014b8c:	f77f af35 	ble.w	80149fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8014b90:	1402      	asrs	r2, r0, #16
 8014b92:	9e00      	ldr	r6, [sp, #0]
 8014b94:	140d      	asrs	r5, r1, #16
 8014b96:	fb06 2505 	mla	r5, r6, r5, r2
 8014b9a:	9e01      	ldr	r6, [sp, #4]
 8014b9c:	086a      	lsrs	r2, r5, #1
 8014b9e:	07ed      	lsls	r5, r5, #31
 8014ba0:	5cb2      	ldrb	r2, [r6, r2]
 8014ba2:	bf54      	ite	pl
 8014ba4:	f002 020f 	andpl.w	r2, r2, #15
 8014ba8:	1112      	asrmi	r2, r2, #4
 8014baa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014bae:	b2d2      	uxtb	r2, r2
 8014bb0:	b1c2      	cbz	r2, 8014be4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014bb2:	9d04      	ldr	r5, [sp, #16]
 8014bb4:	436a      	muls	r2, r5
 8014bb6:	1c55      	adds	r5, r2, #1
 8014bb8:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8014bbc:	4d2d      	ldr	r5, [pc, #180]	@ (8014c74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8014bbe:	1212      	asrs	r2, r2, #8
 8014bc0:	682e      	ldr	r6, [r5, #0]
 8014bc2:	2aff      	cmp	r2, #255	@ 0xff
 8014bc4:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8014bc8:	d113      	bne.n	8014bf2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014bca:	0972      	lsrs	r2, r6, #5
 8014bcc:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8014bd0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8014bd4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014bd8:	f025 0507 	bic.w	r5, r5, #7
 8014bdc:	4315      	orrs	r5, r2
 8014bde:	4335      	orrs	r5, r6
 8014be0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8014be4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014be6:	f108 0801 	add.w	r8, r8, #1
 8014bea:	4410      	add	r0, r2
 8014bec:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014bee:	4411      	add	r1, r2
 8014bf0:	e7c9      	b.n	8014b86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8014bf2:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8014bf6:	fa1f fa82 	uxth.w	sl, r2
 8014bfa:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8014bfe:	43d2      	mvns	r2, r2
 8014c00:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8014c04:	fb17 f70a 	smulbb	r7, r7, sl
 8014c08:	b2d2      	uxtb	r2, r2
 8014c0a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8014c0e:	b2f6      	uxtb	r6, r6
 8014c10:	b2ed      	uxtb	r5, r5
 8014c12:	fb0c 7c02 	mla	ip, ip, r2, r7
 8014c16:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8014c1a:	fb16 f60a 	smulbb	r6, r6, sl
 8014c1e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014c22:	fa1f fc8c 	uxth.w	ip, ip
 8014c26:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8014c2a:	fb15 f50a 	smulbb	r5, r5, sl
 8014c2e:	fa5f fe8e 	uxtb.w	lr, lr
 8014c32:	fb0e 6602 	mla	r6, lr, r2, r6
 8014c36:	fb07 5702 	mla	r7, r7, r2, r5
 8014c3a:	f10c 0201 	add.w	r2, ip, #1
 8014c3e:	b2b6      	uxth	r6, r6
 8014c40:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8014c44:	1c75      	adds	r5, r6, #1
 8014c46:	b2bf      	uxth	r7, r7
 8014c48:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8014c4c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8014c50:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014c54:	ea45 0c0c 	orr.w	ip, r5, ip
 8014c58:	1c7d      	adds	r5, r7, #1
 8014c5a:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8014c5e:	096d      	lsrs	r5, r5, #5
 8014c60:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8014c64:	ea4c 0c05 	orr.w	ip, ip, r5
 8014c68:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8014c6c:	e7ba      	b.n	8014be4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014c6e:	b007      	add	sp, #28
 8014c70:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c74:	20001b74 	.word	0x20001b74

08014c78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c7c:	b087      	sub	sp, #28
 8014c7e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8014c82:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 8014f8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8014c86:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8014c88:	9101      	str	r1, [sp, #4]
 8014c8a:	9205      	str	r2, [sp, #20]
 8014c8c:	6841      	ldr	r1, [r0, #4]
 8014c8e:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8014c92:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8014c96:	fb01 2404 	mla	r4, r1, r4, r2
 8014c9a:	6802      	ldr	r2, [r0, #0]
 8014c9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014ca0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014ca4:	3201      	adds	r2, #1
 8014ca6:	f022 0201 	bic.w	r2, r2, #1
 8014caa:	9202      	str	r2, [sp, #8]
 8014cac:	f8db 2000 	ldr.w	r2, [fp]
 8014cb0:	9203      	str	r2, [sp, #12]
 8014cb2:	9a01      	ldr	r2, [sp, #4]
 8014cb4:	2a00      	cmp	r2, #0
 8014cb6:	dc03      	bgt.n	8014cc0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014cb8:	9a05      	ldr	r2, [sp, #20]
 8014cba:	2a00      	cmp	r2, #0
 8014cbc:	f340 8162 	ble.w	8014f84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014cc0:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8014cc2:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8014cc6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8014cca:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8014ccc:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8014cd0:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8014cd4:	2b00      	cmp	r3, #0
 8014cd6:	dd0e      	ble.n	8014cf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014cd8:	1402      	asrs	r2, r0, #16
 8014cda:	d405      	bmi.n	8014ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014cdc:	42ba      	cmp	r2, r7
 8014cde:	da03      	bge.n	8014ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ce0:	140a      	asrs	r2, r1, #16
 8014ce2:	d401      	bmi.n	8014ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ce4:	42b2      	cmp	r2, r6
 8014ce6:	db07      	blt.n	8014cf8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014ce8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014cea:	3b01      	subs	r3, #1
 8014cec:	3402      	adds	r4, #2
 8014cee:	4410      	add	r0, r2
 8014cf0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014cf2:	4411      	add	r1, r2
 8014cf4:	e7ee      	b.n	8014cd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014cf6:	d017      	beq.n	8014d28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8014cf8:	1e5a      	subs	r2, r3, #1
 8014cfa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8014cfc:	fb05 0502 	mla	r5, r5, r2, r0
 8014d00:	142d      	asrs	r5, r5, #16
 8014d02:	d409      	bmi.n	8014d18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014d04:	42bd      	cmp	r5, r7
 8014d06:	da07      	bge.n	8014d18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014d08:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8014d0a:	fb05 1202 	mla	r2, r5, r2, r1
 8014d0e:	1412      	asrs	r2, r2, #16
 8014d10:	d402      	bmi.n	8014d18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8014d12:	42b2      	cmp	r2, r6
 8014d14:	f2c0 80c3 	blt.w	8014e9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8014d18:	2500      	movs	r5, #0
 8014d1a:	195a      	adds	r2, r3, r5
 8014d1c:	2a00      	cmp	r2, #0
 8014d1e:	dc3f      	bgt.n	8014da0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8014d20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014d24:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014d28:	9b01      	ldr	r3, [sp, #4]
 8014d2a:	2b00      	cmp	r3, #0
 8014d2c:	f340 812a 	ble.w	8014f84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8014d30:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014d34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014d3a:	eeb0 6a62 	vmov.f32	s12, s5
 8014d3e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014d42:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014d46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d4a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8014d4e:	eeb0 6a43 	vmov.f32	s12, s6
 8014d52:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014d56:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8014d5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014d5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014d62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014d66:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014d6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014d6e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014d72:	ee12 2a90 	vmov	r2, s5
 8014d76:	eef0 2a47 	vmov.f32	s5, s14
 8014d7a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d7e:	ee13 2a10 	vmov	r2, s6
 8014d82:	9313      	str	r3, [sp, #76]	@ 0x4c
 8014d84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d86:	eeb0 3a67 	vmov.f32	s6, s15
 8014d8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014d8e:	9314      	str	r3, [sp, #80]	@ 0x50
 8014d90:	9b01      	ldr	r3, [sp, #4]
 8014d92:	9a05      	ldr	r2, [sp, #20]
 8014d94:	3b01      	subs	r3, #1
 8014d96:	9301      	str	r3, [sp, #4]
 8014d98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d9a:	bf08      	it	eq
 8014d9c:	4613      	moveq	r3, r2
 8014d9e:	e788      	b.n	8014cb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014da0:	1406      	asrs	r6, r0, #16
 8014da2:	d42c      	bmi.n	8014dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014da4:	f8db 2008 	ldr.w	r2, [fp, #8]
 8014da8:	42b2      	cmp	r2, r6
 8014daa:	dd28      	ble.n	8014dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014dac:	140f      	asrs	r7, r1, #16
 8014dae:	d426      	bmi.n	8014dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014db0:	f8db 200c 	ldr.w	r2, [fp, #12]
 8014db4:	42ba      	cmp	r2, r7
 8014db6:	dd22      	ble.n	8014dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014db8:	9a02      	ldr	r2, [sp, #8]
 8014dba:	fb07 6602 	mla	r6, r7, r2, r6
 8014dbe:	9f03      	ldr	r7, [sp, #12]
 8014dc0:	0872      	lsrs	r2, r6, #1
 8014dc2:	07f6      	lsls	r6, r6, #31
 8014dc4:	5cba      	ldrb	r2, [r7, r2]
 8014dc6:	bf54      	ite	pl
 8014dc8:	f002 020f 	andpl.w	r2, r2, #15
 8014dcc:	1112      	asrmi	r2, r2, #4
 8014dce:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014dd2:	b2d2      	uxtb	r2, r2
 8014dd4:	2aff      	cmp	r2, #255	@ 0xff
 8014dd6:	d118      	bne.n	8014e0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8014dd8:	f06f 0601 	mvn.w	r6, #1
 8014ddc:	f8d8 2000 	ldr.w	r2, [r8]
 8014de0:	fb06 f705 	mul.w	r7, r6, r5
 8014de4:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8014de8:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8014dec:	0956      	lsrs	r6, r2, #5
 8014dee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8014df2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8014df6:	ea4c 0606 	orr.w	r6, ip, r6
 8014dfa:	4316      	orrs	r6, r2
 8014dfc:	53e6      	strh	r6, [r4, r7]
 8014dfe:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014e00:	3d01      	subs	r5, #1
 8014e02:	4410      	add	r0, r2
 8014e04:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014e06:	4411      	add	r1, r2
 8014e08:	e787      	b.n	8014d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8014e0a:	2a00      	cmp	r2, #0
 8014e0c:	d0f7      	beq.n	8014dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014e0e:	f06f 0601 	mvn.w	r6, #1
 8014e12:	f8d8 c000 	ldr.w	ip, [r8]
 8014e16:	fa1f f982 	uxth.w	r9, r2
 8014e1a:	43d2      	mvns	r2, r2
 8014e1c:	436e      	muls	r6, r5
 8014e1e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8014e22:	b2d2      	uxtb	r2, r2
 8014e24:	f834 e006 	ldrh.w	lr, [r4, r6]
 8014e28:	fb1a fa09 	smulbb	sl, sl, r9
 8014e2c:	9604      	str	r6, [sp, #16]
 8014e2e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8014e32:	ea4f 272e 	mov.w	r7, lr, asr #8
 8014e36:	fb16 f609 	smulbb	r6, r6, r9
 8014e3a:	fa5f fc8c 	uxtb.w	ip, ip
 8014e3e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8014e42:	fb1c fc09 	smulbb	ip, ip, r9
 8014e46:	fb07 6702 	mla	r7, r7, r2, r6
 8014e4a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8014e4e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014e52:	b2bf      	uxth	r7, r7
 8014e54:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8014e58:	fa5f fe8e 	uxtb.w	lr, lr
 8014e5c:	fb06 a602 	mla	r6, r6, r2, sl
 8014e60:	fb0e cc02 	mla	ip, lr, r2, ip
 8014e64:	1c7a      	adds	r2, r7, #1
 8014e66:	b2b6      	uxth	r6, r6
 8014e68:	fa1f fc8c 	uxth.w	ip, ip
 8014e6c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8014e70:	9a04      	ldr	r2, [sp, #16]
 8014e72:	f10c 0a01 	add.w	sl, ip, #1
 8014e76:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8014e7a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8014e7e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014e82:	ea4a 0707 	orr.w	r7, sl, r7
 8014e86:	f106 0a01 	add.w	sl, r6, #1
 8014e8a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8014e8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014e92:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014e96:	ea47 070a 	orr.w	r7, r7, sl
 8014e9a:	52a7      	strh	r7, [r4, r2]
 8014e9c:	e7af      	b.n	8014dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8014e9e:	f04f 0e00 	mov.w	lr, #0
 8014ea2:	eba3 020e 	sub.w	r2, r3, lr
 8014ea6:	2a00      	cmp	r2, #0
 8014ea8:	f77f af3a 	ble.w	8014d20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8014eac:	1402      	asrs	r2, r0, #16
 8014eae:	9e02      	ldr	r6, [sp, #8]
 8014eb0:	140d      	asrs	r5, r1, #16
 8014eb2:	fb06 2505 	mla	r5, r6, r5, r2
 8014eb6:	9e03      	ldr	r6, [sp, #12]
 8014eb8:	086a      	lsrs	r2, r5, #1
 8014eba:	07ed      	lsls	r5, r5, #31
 8014ebc:	5cb2      	ldrb	r2, [r6, r2]
 8014ebe:	bf54      	ite	pl
 8014ec0:	f002 020f 	andpl.w	r2, r2, #15
 8014ec4:	1112      	asrmi	r2, r2, #4
 8014ec6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8014eca:	b2d2      	uxtb	r2, r2
 8014ecc:	2aff      	cmp	r2, #255	@ 0xff
 8014ece:	d115      	bne.n	8014efc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8014ed0:	f8d8 5000 	ldr.w	r5, [r8]
 8014ed4:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8014ed8:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8014edc:	096a      	lsrs	r2, r5, #5
 8014ede:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8014ee2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8014ee6:	4332      	orrs	r2, r6
 8014ee8:	432a      	orrs	r2, r5
 8014eea:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8014eee:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8014ef0:	f10e 0e01 	add.w	lr, lr, #1
 8014ef4:	4410      	add	r0, r2
 8014ef6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8014ef8:	4411      	add	r1, r2
 8014efa:	e7d2      	b.n	8014ea2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8014efc:	2a00      	cmp	r2, #0
 8014efe:	d0f6      	beq.n	8014eee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014f00:	f8d8 7000 	ldr.w	r7, [r8]
 8014f04:	fa1f f982 	uxth.w	r9, r2
 8014f08:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8014f0c:	43d2      	mvns	r2, r2
 8014f0e:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8014f12:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8014f16:	ea4f 262c 	mov.w	r6, ip, asr #8
 8014f1a:	fb15 f509 	smulbb	r5, r5, r9
 8014f1e:	b2d2      	uxtb	r2, r2
 8014f20:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8014f24:	b2ff      	uxtb	r7, r7
 8014f26:	fb1a fa09 	smulbb	sl, sl, r9
 8014f2a:	fb06 5602 	mla	r6, r6, r2, r5
 8014f2e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8014f32:	fb17 f709 	smulbb	r7, r7, r9
 8014f36:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8014f3a:	b2b6      	uxth	r6, r6
 8014f3c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8014f40:	fa5f fc8c 	uxtb.w	ip, ip
 8014f44:	fb05 a502 	mla	r5, r5, r2, sl
 8014f48:	fb0c 7702 	mla	r7, ip, r2, r7
 8014f4c:	1c72      	adds	r2, r6, #1
 8014f4e:	b2ad      	uxth	r5, r5
 8014f50:	b2bf      	uxth	r7, r7
 8014f52:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8014f56:	f107 0a01 	add.w	sl, r7, #1
 8014f5a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8014f5e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8014f62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8014f66:	ea4a 0606 	orr.w	r6, sl, r6
 8014f6a:	f105 0a01 	add.w	sl, r5, #1
 8014f6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8014f72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8014f76:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8014f7a:	ea46 060a 	orr.w	r6, r6, sl
 8014f7e:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8014f82:	e7b4      	b.n	8014eee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8014f84:	b007      	add	sp, #28
 8014f86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f8a:	bf00      	nop
 8014f8c:	20001b74 	.word	0x20001b74

08014f90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8014f90:	4770      	bx	lr

08014f92 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8014f92:	4770      	bx	lr

08014f94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8014f94:	4770      	bx	lr

08014f96 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8014f96:	4770      	bx	lr

08014f98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8014f98:	4770      	bx	lr

08014f9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8014f9a:	4770      	bx	lr

08014f9c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8014f9c:	4770      	bx	lr

08014f9e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8014f9e:	4770      	bx	lr

08014fa0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014fa0:	4770      	bx	lr

08014fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014fa2:	4770      	bx	lr

08014fa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014fa4:	4770      	bx	lr

08014fa6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014fa6:	4770      	bx	lr

08014fa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014fa8:	4770      	bx	lr

08014faa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014faa:	4770      	bx	lr

08014fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014fac:	4770      	bx	lr

08014fae <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014fae:	4770      	bx	lr

08014fb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014fb0:	4770      	bx	lr

08014fb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014fb2:	4770      	bx	lr

08014fb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014fb4:	4770      	bx	lr

08014fb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014fb6:	4770      	bx	lr

08014fb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8014fb8:	4770      	bx	lr

08014fba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8014fba:	4770      	bx	lr

08014fbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8014fbc:	4770      	bx	lr

08014fbe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8014fbe:	4770      	bx	lr

08014fc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014fc0:	4770      	bx	lr

08014fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8014fc2:	4770      	bx	lr

08014fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014fc4:	4770      	bx	lr

08014fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8014fc6:	4770      	bx	lr

08014fc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8014fc8:	4770      	bx	lr

08014fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8014fca:	4770      	bx	lr

08014fcc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8014fcc:	4770      	bx	lr

08014fce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8014fce:	4770      	bx	lr

08014fd0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8014fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014fd4:	b088      	sub	sp, #32
 8014fd6:	4606      	mov	r6, r0
 8014fd8:	4688      	mov	r8, r1
 8014fda:	4691      	mov	r9, r2
 8014fdc:	ac08      	add	r4, sp, #32
 8014fde:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8014fe2:	4620      	mov	r0, r4
 8014fe4:	f7fd fc32 	bl	801284c <_ZNK8touchgfx6Bitmap7getDataEv>
 8014fe8:	6833      	ldr	r3, [r6, #0]
 8014fea:	4605      	mov	r5, r0
 8014fec:	4620      	mov	r0, r4
 8014fee:	699f      	ldr	r7, [r3, #24]
 8014ff0:	f7fd fb3a 	bl	8012668 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014ff4:	4682      	mov	sl, r0
 8014ff6:	4620      	mov	r0, r4
 8014ff8:	f7fd fb6a 	bl	80126d0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014ffc:	9500      	str	r5, [sp, #0]
 8014ffe:	464b      	mov	r3, r9
 8015000:	4642      	mov	r2, r8
 8015002:	4631      	mov	r1, r6
 8015004:	e9cd a001 	strd	sl, r0, [sp, #4]
 8015008:	a806      	add	r0, sp, #24
 801500a:	47b8      	blx	r7
 801500c:	4628      	mov	r0, r5
 801500e:	b008      	add	sp, #32
 8015010:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015014 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8015014:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8015018:	2300      	movs	r3, #0
 801501a:	9300      	str	r3, [sp, #0]
 801501c:	4b3d      	ldr	r3, [pc, #244]	@ (8015114 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801501e:	781b      	ldrb	r3, [r3, #0]
 8015020:	2b00      	cmp	r3, #0
 8015022:	d137      	bne.n	8015094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8015024:	4a3c      	ldr	r2, [pc, #240]	@ (8015118 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8015026:	f9b2 2000 	ldrsh.w	r2, [r2]
 801502a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801502e:	2b00      	cmp	r3, #0
 8015030:	d132      	bne.n	8015098 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8015032:	4b3a      	ldr	r3, [pc, #232]	@ (801511c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015034:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015038:	ac02      	add	r4, sp, #8
 801503a:	6808      	ldr	r0, [r1, #0]
 801503c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015040:	ab02      	add	r3, sp, #8
 8015042:	6849      	ldr	r1, [r1, #4]
 8015044:	4d36      	ldr	r5, [pc, #216]	@ (8015120 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8015046:	c303      	stmia	r3!, {r0, r1}
 8015048:	4669      	mov	r1, sp
 801504a:	4620      	mov	r0, r4
 801504c:	f7fa fd00 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015050:	4668      	mov	r0, sp
 8015052:	f7fa fcd5 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015056:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801505a:	f8bd 2000 	ldrh.w	r2, [sp]
 801505e:	462f      	mov	r7, r5
 8015060:	6828      	ldr	r0, [r5, #0]
 8015062:	4413      	add	r3, r2
 8015064:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8015068:	f8ad 3008 	strh.w	r3, [sp, #8]
 801506c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015070:	4413      	add	r3, r2
 8015072:	f8ad 300a 	strh.w	r3, [sp, #10]
 8015076:	6803      	ldr	r3, [r0, #0]
 8015078:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801507a:	4798      	blx	r3
 801507c:	f010 0f01 	tst.w	r0, #1
 8015080:	d00c      	beq.n	801509c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8015082:	6828      	ldr	r0, [r5, #0]
 8015084:	6803      	ldr	r3, [r0, #0]
 8015086:	e894 0006 	ldmia.w	r4, {r1, r2}
 801508a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801508c:	4798      	blx	r3
 801508e:	b004      	add	sp, #16
 8015090:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8015094:	4a21      	ldr	r2, [pc, #132]	@ (801511c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8015096:	e7c6      	b.n	8015026 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8015098:	4b1f      	ldr	r3, [pc, #124]	@ (8015118 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801509a:	e7cb      	b.n	8015034 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801509c:	6838      	ldr	r0, [r7, #0]
 801509e:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 80150a2:	6803      	ldr	r3, [r0, #0]
 80150a4:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80150a8:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80150ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80150ae:	4798      	blx	r3
 80150b0:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80150b4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80150b8:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80150bc:	fb16 3602 	smlabb	r6, r6, r2, r3
 80150c0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80150c4:	6838      	ldr	r0, [r7, #0]
 80150c6:	6803      	ldr	r3, [r0, #0]
 80150c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80150ca:	4798      	blx	r3
 80150cc:	4a12      	ldr	r2, [pc, #72]	@ (8015118 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80150ce:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80150d2:	8813      	ldrh	r3, [r2, #0]
 80150d4:	4691      	mov	r9, r2
 80150d6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80150da:	435d      	muls	r5, r3
 80150dc:	fb03 1404 	mla	r4, r3, r4, r1
 80150e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80150e4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80150e8:	6838      	ldr	r0, [r7, #0]
 80150ea:	42ac      	cmp	r4, r5
 80150ec:	6803      	ldr	r3, [r0, #0]
 80150ee:	d20e      	bcs.n	801510e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80150f0:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 80150f4:	4632      	mov	r2, r6
 80150f6:	4643      	mov	r3, r8
 80150f8:	4621      	mov	r1, r4
 80150fa:	47d0      	blx	sl
 80150fc:	f8b9 3000 	ldrh.w	r3, [r9]
 8015100:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015104:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8015108:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801510c:	e7ec      	b.n	80150e8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801510e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015110:	4798      	blx	r3
 8015112:	e7bc      	b.n	801508e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8015114:	20001b64 	.word	0x20001b64
 8015118:	20001b66 	.word	0x20001b66
 801511c:	20001b68 	.word	0x20001b68
 8015120:	20001b6c 	.word	0x20001b6c

08015124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8015124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015128:	b08b      	sub	sp, #44	@ 0x2c
 801512a:	460f      	mov	r7, r1
 801512c:	4616      	mov	r6, r2
 801512e:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8015132:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8015136:	f1bb 0f00 	cmp.w	fp, #0
 801513a:	d04a      	beq.n	80151d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801513c:	6810      	ldr	r0, [r2, #0]
 801513e:	ad06      	add	r5, sp, #24
 8015140:	6851      	ldr	r1, [r2, #4]
 8015142:	c503      	stmia	r5!, {r0, r1}
 8015144:	6818      	ldr	r0, [r3, #0]
 8015146:	ad08      	add	r5, sp, #32
 8015148:	6859      	ldr	r1, [r3, #4]
 801514a:	c503      	stmia	r5!, {r0, r1}
 801514c:	a806      	add	r0, sp, #24
 801514e:	f7fa fc57 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015152:	4631      	mov	r1, r6
 8015154:	a808      	add	r0, sp, #32
 8015156:	f7fa fc7b 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801515a:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801515e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8015162:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8015166:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801516a:	fb16 2103 	smlabb	r1, r6, r3, r2
 801516e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8015172:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8015176:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801517a:	4f5f      	ldr	r7, [pc, #380]	@ (80152f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801517c:	440a      	add	r2, r1
 801517e:	6838      	ldr	r0, [r7, #0]
 8015180:	46b9      	mov	r9, r7
 8015182:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015186:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801518a:	4413      	add	r3, r2
 801518c:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8015190:	6803      	ldr	r3, [r0, #0]
 8015192:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8015194:	4798      	blx	r3
 8015196:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801519a:	d11d      	bne.n	80151d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801519c:	b9fc      	cbnz	r4, 80151de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801519e:	f010 0f01 	tst.w	r0, #1
 80151a2:	d01c      	beq.n	80151de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80151a4:	f8d9 0000 	ldr.w	r0, [r9]
 80151a8:	2700      	movs	r7, #0
 80151aa:	b2ad      	uxth	r5, r5
 80151ac:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80151b0:	6801      	ldr	r1, [r0, #0]
 80151b2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80151b6:	f8cd b00c 	str.w	fp, [sp, #12]
 80151ba:	9501      	str	r5, [sp, #4]
 80151bc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80151c0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80151c4:	9402      	str	r4, [sp, #8]
 80151c6:	fa1f f488 	uxth.w	r4, r8
 80151ca:	9400      	str	r4, [sp, #0]
 80151cc:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 80151ce:	4631      	mov	r1, r6
 80151d0:	47a0      	blx	r4
 80151d2:	b00b      	add	sp, #44	@ 0x2c
 80151d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151d8:	f010 0f04 	tst.w	r0, #4
 80151dc:	e7e1      	b.n	80151a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 80151de:	f8d9 0000 	ldr.w	r0, [r9]
 80151e2:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80151e6:	6803      	ldr	r3, [r0, #0]
 80151e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80151ea:	4798      	blx	r3
 80151ec:	4b43      	ldr	r3, [pc, #268]	@ (80152fc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80151ee:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 80151f2:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 80151f6:	881a      	ldrh	r2, [r3, #0]
 80151f8:	469a      	mov	sl, r3
 80151fa:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80151fe:	fb05 f502 	mul.w	r5, r5, r2
 8015202:	fb02 1404 	mla	r4, r2, r4, r1
 8015206:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801520a:	d059      	beq.n	80152c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801520c:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8015210:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8015214:	fa1f f28b 	uxth.w	r2, fp
 8015218:	469e      	mov	lr, r3
 801521a:	fa1f f989 	uxth.w	r9, r9
 801521e:	42ac      	cmp	r4, r5
 8015220:	d264      	bcs.n	80152ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8015222:	eb04 0a07 	add.w	sl, r4, r7
 8015226:	4554      	cmp	r4, sl
 8015228:	d23d      	bcs.n	80152a6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801522a:	8821      	ldrh	r1, [r4, #0]
 801522c:	f836 3b02 	ldrh.w	r3, [r6], #2
 8015230:	1208      	asrs	r0, r1, #8
 8015232:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8015236:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801523a:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801523e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8015242:	00c9      	lsls	r1, r1, #3
 8015244:	fb10 f009 	smulbb	r0, r0, r9
 8015248:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801524c:	b2c9      	uxtb	r1, r1
 801524e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8015252:	10d8      	asrs	r0, r3, #3
 8015254:	fb1b fb09 	smulbb	fp, fp, r9
 8015258:	00db      	lsls	r3, r3, #3
 801525a:	fa1f fc8c 	uxth.w	ip, ip
 801525e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8015262:	fb11 f109 	smulbb	r1, r1, r9
 8015266:	b2db      	uxtb	r3, r3
 8015268:	fb00 b002 	mla	r0, r0, r2, fp
 801526c:	f10c 0b01 	add.w	fp, ip, #1
 8015270:	fb03 1302 	mla	r3, r3, r2, r1
 8015274:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8015278:	b29b      	uxth	r3, r3
 801527a:	b280      	uxth	r0, r0
 801527c:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8015280:	f103 0c01 	add.w	ip, r3, #1
 8015284:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8015288:	1c43      	adds	r3, r0, #1
 801528a:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801528e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8015292:	0940      	lsrs	r0, r0, #5
 8015294:	ea4c 0c0b 	orr.w	ip, ip, fp
 8015298:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801529c:	ea4c 0c00 	orr.w	ip, ip, r0
 80152a0:	f824 cb02 	strh.w	ip, [r4], #2
 80152a4:	e7bf      	b.n	8015226 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80152a6:	f8be 3000 	ldrh.w	r3, [lr]
 80152aa:	eba3 0308 	sub.w	r3, r3, r8
 80152ae:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152b2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80152b6:	eba3 0308 	sub.w	r3, r3, r8
 80152ba:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80152be:	e7ae      	b.n	801521e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80152c0:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80152c4:	f8d9 0000 	ldr.w	r0, [r9]
 80152c8:	42ac      	cmp	r4, r5
 80152ca:	6803      	ldr	r3, [r0, #0]
 80152cc:	d20e      	bcs.n	80152ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80152ce:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 80152d2:	4632      	mov	r2, r6
 80152d4:	463b      	mov	r3, r7
 80152d6:	4621      	mov	r1, r4
 80152d8:	47c0      	blx	r8
 80152da:	f8ba 3000 	ldrh.w	r3, [sl]
 80152de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152e2:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80152e6:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80152ea:	e7eb      	b.n	80152c4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80152ec:	4b02      	ldr	r3, [pc, #8]	@ (80152f8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80152ee:	6818      	ldr	r0, [r3, #0]
 80152f0:	6803      	ldr	r3, [r0, #0]
 80152f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80152f4:	4798      	blx	r3
 80152f6:	e76c      	b.n	80151d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 80152f8:	20001b6c 	.word	0x20001b6c
 80152fc:	20001b66 	.word	0x20001b66

08015300 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8015300:	b510      	push	{r4, lr}
 8015302:	4604      	mov	r4, r0
 8015304:	2104      	movs	r1, #4
 8015306:	f00b fc96 	bl	8020c36 <_ZdlPvj>
 801530a:	4620      	mov	r0, r4
 801530c:	bd10      	pop	{r4, pc}

0801530e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801530e:	b510      	push	{r4, lr}
 8015310:	4604      	mov	r4, r0
 8015312:	2104      	movs	r1, #4
 8015314:	f00b fc8f 	bl	8020c36 <_ZdlPvj>
 8015318:	4620      	mov	r0, r4
 801531a:	bd10      	pop	{r4, pc}

0801531c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801531c:	b510      	push	{r4, lr}
 801531e:	4604      	mov	r4, r0
 8015320:	f640 0144 	movw	r1, #2116	@ 0x844
 8015324:	f00b fc87 	bl	8020c36 <_ZdlPvj>
 8015328:	4620      	mov	r0, r4
 801532a:	bd10      	pop	{r4, pc}

0801532c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801532c:	b510      	push	{r4, lr}
 801532e:	4604      	mov	r4, r0
 8015330:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8015334:	f00b fc7f 	bl	8020c36 <_ZdlPvj>
 8015338:	4620      	mov	r0, r4
 801533a:	bd10      	pop	{r4, pc}

0801533c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801533c:	b510      	push	{r4, lr}
 801533e:	4604      	mov	r4, r0
 8015340:	2104      	movs	r1, #4
 8015342:	f00b fc78 	bl	8020c36 <_ZdlPvj>
 8015346:	4620      	mov	r0, r4
 8015348:	bd10      	pop	{r4, pc}

0801534a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801534a:	b510      	push	{r4, lr}
 801534c:	4604      	mov	r4, r0
 801534e:	2104      	movs	r1, #4
 8015350:	f00b fc71 	bl	8020c36 <_ZdlPvj>
 8015354:	4620      	mov	r0, r4
 8015356:	bd10      	pop	{r4, pc}

08015358 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015358:	b510      	push	{r4, lr}
 801535a:	4604      	mov	r4, r0
 801535c:	2104      	movs	r1, #4
 801535e:	f00b fc6a 	bl	8020c36 <_ZdlPvj>
 8015362:	4620      	mov	r0, r4
 8015364:	bd10      	pop	{r4, pc}

08015366 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8015366:	b510      	push	{r4, lr}
 8015368:	4604      	mov	r4, r0
 801536a:	2104      	movs	r1, #4
 801536c:	f00b fc63 	bl	8020c36 <_ZdlPvj>
 8015370:	4620      	mov	r0, r4
 8015372:	bd10      	pop	{r4, pc}

08015374 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8015374:	b510      	push	{r4, lr}
 8015376:	4604      	mov	r4, r0
 8015378:	2104      	movs	r1, #4
 801537a:	f00b fc5c 	bl	8020c36 <_ZdlPvj>
 801537e:	4620      	mov	r0, r4
 8015380:	bd10      	pop	{r4, pc}

08015382 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8015382:	b510      	push	{r4, lr}
 8015384:	4604      	mov	r4, r0
 8015386:	2104      	movs	r1, #4
 8015388:	f00b fc55 	bl	8020c36 <_ZdlPvj>
 801538c:	4620      	mov	r0, r4
 801538e:	bd10      	pop	{r4, pc}

08015390 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8015390:	b510      	push	{r4, lr}
 8015392:	4604      	mov	r4, r0
 8015394:	2104      	movs	r1, #4
 8015396:	f00b fc4e 	bl	8020c36 <_ZdlPvj>
 801539a:	4620      	mov	r0, r4
 801539c:	bd10      	pop	{r4, pc}

0801539e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801539e:	b510      	push	{r4, lr}
 80153a0:	4604      	mov	r4, r0
 80153a2:	2104      	movs	r1, #4
 80153a4:	f00b fc47 	bl	8020c36 <_ZdlPvj>
 80153a8:	4620      	mov	r0, r4
 80153aa:	bd10      	pop	{r4, pc}

080153ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80153ac:	b510      	push	{r4, lr}
 80153ae:	4604      	mov	r4, r0
 80153b0:	2104      	movs	r1, #4
 80153b2:	f00b fc40 	bl	8020c36 <_ZdlPvj>
 80153b6:	4620      	mov	r0, r4
 80153b8:	bd10      	pop	{r4, pc}

080153ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80153ba:	b510      	push	{r4, lr}
 80153bc:	4604      	mov	r4, r0
 80153be:	2104      	movs	r1, #4
 80153c0:	f00b fc39 	bl	8020c36 <_ZdlPvj>
 80153c4:	4620      	mov	r0, r4
 80153c6:	bd10      	pop	{r4, pc}

080153c8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80153c8:	b510      	push	{r4, lr}
 80153ca:	4604      	mov	r4, r0
 80153cc:	2104      	movs	r1, #4
 80153ce:	f00b fc32 	bl	8020c36 <_ZdlPvj>
 80153d2:	4620      	mov	r0, r4
 80153d4:	bd10      	pop	{r4, pc}

080153d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80153d6:	b510      	push	{r4, lr}
 80153d8:	4604      	mov	r4, r0
 80153da:	2104      	movs	r1, #4
 80153dc:	f00b fc2b 	bl	8020c36 <_ZdlPvj>
 80153e0:	4620      	mov	r0, r4
 80153e2:	bd10      	pop	{r4, pc}

080153e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80153e4:	b510      	push	{r4, lr}
 80153e6:	4604      	mov	r4, r0
 80153e8:	2104      	movs	r1, #4
 80153ea:	f00b fc24 	bl	8020c36 <_ZdlPvj>
 80153ee:	4620      	mov	r0, r4
 80153f0:	bd10      	pop	{r4, pc}

080153f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80153f2:	b510      	push	{r4, lr}
 80153f4:	4604      	mov	r4, r0
 80153f6:	2104      	movs	r1, #4
 80153f8:	f00b fc1d 	bl	8020c36 <_ZdlPvj>
 80153fc:	4620      	mov	r0, r4
 80153fe:	bd10      	pop	{r4, pc}

08015400 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015400:	b510      	push	{r4, lr}
 8015402:	4604      	mov	r4, r0
 8015404:	2104      	movs	r1, #4
 8015406:	f00b fc16 	bl	8020c36 <_ZdlPvj>
 801540a:	4620      	mov	r0, r4
 801540c:	bd10      	pop	{r4, pc}

0801540e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801540e:	b510      	push	{r4, lr}
 8015410:	4604      	mov	r4, r0
 8015412:	2104      	movs	r1, #4
 8015414:	f00b fc0f 	bl	8020c36 <_ZdlPvj>
 8015418:	4620      	mov	r0, r4
 801541a:	bd10      	pop	{r4, pc}

0801541c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801541c:	b510      	push	{r4, lr}
 801541e:	4604      	mov	r4, r0
 8015420:	2104      	movs	r1, #4
 8015422:	f00b fc08 	bl	8020c36 <_ZdlPvj>
 8015426:	4620      	mov	r0, r4
 8015428:	bd10      	pop	{r4, pc}

0801542a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801542a:	b510      	push	{r4, lr}
 801542c:	4604      	mov	r4, r0
 801542e:	2104      	movs	r1, #4
 8015430:	f00b fc01 	bl	8020c36 <_ZdlPvj>
 8015434:	4620      	mov	r0, r4
 8015436:	bd10      	pop	{r4, pc}

08015438 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015438:	b510      	push	{r4, lr}
 801543a:	4604      	mov	r4, r0
 801543c:	2104      	movs	r1, #4
 801543e:	f00b fbfa 	bl	8020c36 <_ZdlPvj>
 8015442:	4620      	mov	r0, r4
 8015444:	bd10      	pop	{r4, pc}

08015446 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8015446:	b510      	push	{r4, lr}
 8015448:	4604      	mov	r4, r0
 801544a:	2104      	movs	r1, #4
 801544c:	f00b fbf3 	bl	8020c36 <_ZdlPvj>
 8015450:	4620      	mov	r0, r4
 8015452:	bd10      	pop	{r4, pc}

08015454 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8015454:	b510      	push	{r4, lr}
 8015456:	4604      	mov	r4, r0
 8015458:	2104      	movs	r1, #4
 801545a:	f00b fbec 	bl	8020c36 <_ZdlPvj>
 801545e:	4620      	mov	r0, r4
 8015460:	bd10      	pop	{r4, pc}

08015462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8015462:	b510      	push	{r4, lr}
 8015464:	4604      	mov	r4, r0
 8015466:	2104      	movs	r1, #4
 8015468:	f00b fbe5 	bl	8020c36 <_ZdlPvj>
 801546c:	4620      	mov	r0, r4
 801546e:	bd10      	pop	{r4, pc}

08015470 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8015470:	b510      	push	{r4, lr}
 8015472:	4604      	mov	r4, r0
 8015474:	2104      	movs	r1, #4
 8015476:	f00b fbde 	bl	8020c36 <_ZdlPvj>
 801547a:	4620      	mov	r0, r4
 801547c:	bd10      	pop	{r4, pc}

0801547e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801547e:	b510      	push	{r4, lr}
 8015480:	4604      	mov	r4, r0
 8015482:	2104      	movs	r1, #4
 8015484:	f00b fbd7 	bl	8020c36 <_ZdlPvj>
 8015488:	4620      	mov	r0, r4
 801548a:	bd10      	pop	{r4, pc}

0801548c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801548c:	b510      	push	{r4, lr}
 801548e:	4604      	mov	r4, r0
 8015490:	2104      	movs	r1, #4
 8015492:	f00b fbd0 	bl	8020c36 <_ZdlPvj>
 8015496:	4620      	mov	r0, r4
 8015498:	bd10      	pop	{r4, pc}

0801549a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801549a:	b510      	push	{r4, lr}
 801549c:	4604      	mov	r4, r0
 801549e:	2104      	movs	r1, #4
 80154a0:	f00b fbc9 	bl	8020c36 <_ZdlPvj>
 80154a4:	4620      	mov	r0, r4
 80154a6:	bd10      	pop	{r4, pc}

080154a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80154a8:	b510      	push	{r4, lr}
 80154aa:	4604      	mov	r4, r0
 80154ac:	2104      	movs	r1, #4
 80154ae:	f00b fbc2 	bl	8020c36 <_ZdlPvj>
 80154b2:	4620      	mov	r0, r4
 80154b4:	bd10      	pop	{r4, pc}

080154b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80154b6:	b510      	push	{r4, lr}
 80154b8:	4604      	mov	r4, r0
 80154ba:	2104      	movs	r1, #4
 80154bc:	f00b fbbb 	bl	8020c36 <_ZdlPvj>
 80154c0:	4620      	mov	r0, r4
 80154c2:	bd10      	pop	{r4, pc}

080154c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 80154c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154c8:	b08f      	sub	sp, #60	@ 0x3c
 80154ca:	4616      	mov	r6, r2
 80154cc:	4682      	mov	sl, r0
 80154ce:	460d      	mov	r5, r1
 80154d0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 80154d4:	9205      	str	r2, [sp, #20]
 80154d6:	2a00      	cmp	r2, #0
 80154d8:	f000 82b7 	beq.w	8015a4a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 80154dc:	6830      	ldr	r0, [r6, #0]
 80154de:	ac0a      	add	r4, sp, #40	@ 0x28
 80154e0:	6871      	ldr	r1, [r6, #4]
 80154e2:	c403      	stmia	r4!, {r0, r1}
 80154e4:	6818      	ldr	r0, [r3, #0]
 80154e6:	ac0c      	add	r4, sp, #48	@ 0x30
 80154e8:	6859      	ldr	r1, [r3, #4]
 80154ea:	c403      	stmia	r4!, {r0, r1}
 80154ec:	a80a      	add	r0, sp, #40	@ 0x28
 80154ee:	f7fa fa87 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80154f2:	4631      	mov	r1, r6
 80154f4:	a80c      	add	r0, sp, #48	@ 0x30
 80154f6:	f7fa faab 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80154fa:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80154fe:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 8015502:	bfdb      	ittet	le
 8015504:	b293      	uxthle	r3, r2
 8015506:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801550a:	2301      	movgt	r3, #1
 801550c:	fb91 f3f3 	sdivle	r3, r1, r3
 8015510:	9300      	str	r3, [sp, #0]
 8015512:	f105 0308 	add.w	r3, r5, #8
 8015516:	9900      	ldr	r1, [sp, #0]
 8015518:	9306      	str	r3, [sp, #24]
 801551a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801551e:	440b      	add	r3, r1
 8015520:	3b01      	subs	r3, #1
 8015522:	fb93 f3f1 	sdiv	r3, r3, r1
 8015526:	3b01      	subs	r3, #1
 8015528:	9906      	ldr	r1, [sp, #24]
 801552a:	b29b      	uxth	r3, r3
 801552c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015530:	9900      	ldr	r1, [sp, #0]
 8015532:	9307      	str	r3, [sp, #28]
 8015534:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8015538:	fb93 f0f1 	sdiv	r0, r3, r1
 801553c:	b284      	uxth	r4, r0
 801553e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8015542:	9402      	str	r4, [sp, #8]
 8015544:	9d02      	ldr	r5, [sp, #8]
 8015546:	9c00      	ldr	r4, [sp, #0]
 8015548:	fb05 3414 	mls	r4, r5, r4, r3
 801554c:	fb14 f402 	smulbb	r4, r4, r2
 8015550:	440c      	add	r4, r1
 8015552:	b2a4      	uxth	r4, r4
 8015554:	2d00      	cmp	r5, #0
 8015556:	d06c      	beq.n	8015632 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 8015558:	1e6a      	subs	r2, r5, #1
 801555a:	9806      	ldr	r0, [sp, #24]
 801555c:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 8015560:	9a07      	ldr	r2, [sp, #28]
 8015562:	ba36      	rev	r6, r6
 8015564:	4416      	add	r6, r2
 8015566:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801556a:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801556e:	4411      	add	r1, r2
 8015570:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8015574:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 80158a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 8015578:	4413      	add	r3, r2
 801557a:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801557e:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8015582:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8015586:	9301      	str	r3, [sp, #4]
 8015588:	4bc4      	ldr	r3, [pc, #784]	@ (801589c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801558a:	6818      	ldr	r0, [r3, #0]
 801558c:	6803      	ldr	r3, [r0, #0]
 801558e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015590:	4798      	blx	r3
 8015592:	4bc3      	ldr	r3, [pc, #780]	@ (80158a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 8015594:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8015598:	881b      	ldrh	r3, [r3, #0]
 801559a:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801559e:	fb03 2808 	mla	r8, r3, r8, r2
 80155a2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80155a6:	436b      	muls	r3, r5
 80155a8:	2500      	movs	r5, #0
 80155aa:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 80155ae:	4629      	mov	r1, r5
 80155b0:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 80155b4:	9309      	str	r3, [sp, #36]	@ 0x24
 80155b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80155ba:	fb94 f3f3 	sdiv	r3, r4, r3
 80155be:	9304      	str	r3, [sp, #16]
 80155c0:	f10a 0304 	add.w	r3, sl, #4
 80155c4:	4618      	mov	r0, r3
 80155c6:	9308      	str	r3, [sp, #32]
 80155c8:	f00b fd6b 	bl	80210a2 <memset>
 80155cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80155ce:	4543      	cmp	r3, r8
 80155d0:	f240 8236 	bls.w	8015a40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 80155d4:	2203      	movs	r2, #3
 80155d6:	2107      	movs	r1, #7
 80155d8:	200b      	movs	r0, #11
 80155da:	2c00      	cmp	r4, #0
 80155dc:	f000 8131 	beq.w	8015842 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 80155e0:	7833      	ldrb	r3, [r6, #0]
 80155e2:	b2db      	uxtb	r3, r3
 80155e4:	2bfe      	cmp	r3, #254	@ 0xfe
 80155e6:	d126      	bne.n	8015636 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 80155e8:	f896 e001 	ldrb.w	lr, [r6, #1]
 80155ec:	3c01      	subs	r4, #1
 80155ee:	f896 c002 	ldrb.w	ip, [r6, #2]
 80155f2:	1d37      	adds	r7, r6, #4
 80155f4:	fa5f fe8e 	uxtb.w	lr, lr
 80155f8:	f896 b003 	ldrb.w	fp, [r6, #3]
 80155fc:	fa5f fc8c 	uxtb.w	ip, ip
 8015600:	f36e 0507 	bfi	r5, lr, #0, #8
 8015604:	fa5f fb8b 	uxtb.w	fp, fp
 8015608:	b2a4      	uxth	r4, r4
 801560a:	f36c 250f 	bfi	r5, ip, #8, #8
 801560e:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 8015612:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 8015616:	f36b 4517 	bfi	r5, fp, #16, #8
 801561a:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801561e:	0e2b      	lsrs	r3, r5, #24
 8015620:	fb10 c303 	smlabb	r3, r0, r3, ip
 8015624:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015628:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801562c:	605d      	str	r5, [r3, #4]
 801562e:	463e      	mov	r6, r7
 8015630:	e7d3      	b.n	80155da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 8015632:	9e07      	ldr	r6, [sp, #28]
 8015634:	e797      	b.n	8015566 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 8015636:	2bff      	cmp	r3, #255	@ 0xff
 8015638:	d127      	bne.n	801568a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801563a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801563e:	3c01      	subs	r4, #1
 8015640:	78b3      	ldrb	r3, [r6, #2]
 8015642:	1d77      	adds	r7, r6, #5
 8015644:	fa5f fc8c 	uxtb.w	ip, ip
 8015648:	f896 e003 	ldrb.w	lr, [r6, #3]
 801564c:	b2db      	uxtb	r3, r3
 801564e:	f896 b004 	ldrb.w	fp, [r6, #4]
 8015652:	f36c 0507 	bfi	r5, ip, #0, #8
 8015656:	fa5f fe8e 	uxtb.w	lr, lr
 801565a:	fa5f fb8b 	uxtb.w	fp, fp
 801565e:	f363 250f 	bfi	r5, r3, #8, #8
 8015662:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8015666:	b2a4      	uxth	r4, r4
 8015668:	fb12 330e 	smlabb	r3, r2, lr, r3
 801566c:	f36e 4517 	bfi	r5, lr, #16, #8
 8015670:	fb11 330c 	smlabb	r3, r1, ip, r3
 8015674:	f36b 651f 	bfi	r5, fp, #24, #8
 8015678:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801567c:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 8015680:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 8015684:	f8cb 5004 	str.w	r5, [fp, #4]
 8015688:	e7d1      	b.n	801562e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801568a:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801568e:	f106 0701 	add.w	r7, r6, #1
 8015692:	d107      	bne.n	80156a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 8015694:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015698:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801569c:	685d      	ldr	r5, [r3, #4]
 801569e:	3c01      	subs	r4, #1
 80156a0:	b2a4      	uxth	r4, r4
 80156a2:	e7c4      	b.n	801562e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 80156a4:	f1bc 0f01 	cmp.w	ip, #1
 80156a8:	d12c      	bne.n	8015704 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 80156aa:	f003 0e03 	and.w	lr, r3, #3
 80156ae:	f003 0c0c 	and.w	ip, r3, #12
 80156b2:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80156b6:	f1ae 0e02 	sub.w	lr, lr, #2
 80156ba:	f1ac 0c08 	sub.w	ip, ip, #8
 80156be:	3b02      	subs	r3, #2
 80156c0:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 80156c4:	fa5f fe8e 	uxtb.w	lr, lr
 80156c8:	f36e 0507 	bfi	r5, lr, #0, #8
 80156cc:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 80156d0:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 80156d4:	f36c 250f 	bfi	r5, ip, #8, #8
 80156d8:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 80156dc:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80156e0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 80156e4:	b2db      	uxtb	r3, r3
 80156e6:	fb12 cc03 	smlabb	ip, r2, r3, ip
 80156ea:	f363 4517 	bfi	r5, r3, #16, #8
 80156ee:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 80156f2:	0e2e      	lsrs	r6, r5, #24
 80156f4:	fb10 c606 	smlabb	r6, r0, r6, ip
 80156f8:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 80156fc:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 8015700:	6075      	str	r5, [r6, #4]
 8015702:	e7cc      	b.n	801569e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 8015704:	f1bc 0f02 	cmp.w	ip, #2
 8015708:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801570c:	d12a      	bne.n	8015764 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801570e:	1cb7      	adds	r7, r6, #2
 8015710:	7876      	ldrb	r6, [r6, #1]
 8015712:	3b20      	subs	r3, #32
 8015714:	b2f6      	uxtb	r6, r6
 8015716:	f006 0c0f 	and.w	ip, r6, #15
 801571a:	1136      	asrs	r6, r6, #4
 801571c:	f1ac 0c08 	sub.w	ip, ip, #8
 8015720:	3e08      	subs	r6, #8
 8015722:	449c      	add	ip, r3
 8015724:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 8015728:	fa5f fc8c 	uxtb.w	ip, ip
 801572c:	f36c 0507 	bfi	r5, ip, #0, #8
 8015730:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 8015734:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 8015738:	4433      	add	r3, r6
 801573a:	fa5f fe8e 	uxtb.w	lr, lr
 801573e:	f36e 250f 	bfi	r5, lr, #8, #8
 8015742:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 8015746:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801574a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801574e:	b2db      	uxtb	r3, r3
 8015750:	fb12 ee03 	smlabb	lr, r2, r3, lr
 8015754:	f363 4517 	bfi	r5, r3, #16, #8
 8015758:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801575c:	0e2e      	lsrs	r6, r5, #24
 801575e:	fb10 e606 	smlabb	r6, r0, r6, lr
 8015762:	e7c9      	b.n	80156f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 8015764:	1c5e      	adds	r6, r3, #1
 8015766:	42a6      	cmp	r6, r4
 8015768:	dd4e      	ble.n	8015808 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801576a:	1b36      	subs	r6, r6, r4
 801576c:	2e00      	cmp	r6, #0
 801576e:	dc4e      	bgt.n	801580e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 8015770:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015774:	2400      	movs	r4, #0
 8015776:	f1bb 0f00 	cmp.w	fp, #0
 801577a:	f340 8122 	ble.w	80159c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801577e:	1c7b      	adds	r3, r7, #1
 8015780:	9303      	str	r3, [sp, #12]
 8015782:	783b      	ldrb	r3, [r7, #0]
 8015784:	b2db      	uxtb	r3, r3
 8015786:	2bfe      	cmp	r3, #254	@ 0xfe
 8015788:	d160      	bne.n	801584c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801578a:	7879      	ldrb	r1, [r7, #1]
 801578c:	1d3b      	adds	r3, r7, #4
 801578e:	78ba      	ldrb	r2, [r7, #2]
 8015790:	b2c9      	uxtb	r1, r1
 8015792:	78f8      	ldrb	r0, [r7, #3]
 8015794:	b2d2      	uxtb	r2, r2
 8015796:	9303      	str	r3, [sp, #12]
 8015798:	f361 0507 	bfi	r5, r1, #0, #8
 801579c:	b2c0      	uxtb	r0, r0
 801579e:	2303      	movs	r3, #3
 80157a0:	f362 250f 	bfi	r5, r2, #8, #8
 80157a4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80157a8:	fb13 2200 	smlabb	r2, r3, r0, r2
 80157ac:	f360 4517 	bfi	r5, r0, #16, #8
 80157b0:	2307      	movs	r3, #7
 80157b2:	0e2e      	lsrs	r6, r5, #24
 80157b4:	fb13 2101 	smlabb	r1, r3, r1, r2
 80157b8:	230b      	movs	r3, #11
 80157ba:	fb13 1306 	smlabb	r3, r3, r6, r1
 80157be:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80157c2:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 80157c6:	605d      	str	r5, [r3, #4]
 80157c8:	2601      	movs	r6, #1
 80157ca:	4637      	mov	r7, r6
 80157cc:	0e2b      	lsrs	r3, r5, #24
 80157ce:	ebab 0b07 	sub.w	fp, fp, r7
 80157d2:	eba6 0607 	sub.w	r6, r6, r7
 80157d6:	f040 80d3 	bne.w	8015980 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 80157da:	b18c      	cbz	r4, 8015800 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 80157dc:	4648      	mov	r0, r9
 80157de:	00a1      	lsls	r1, r4, #2
 80157e0:	f7f7 f8c6 	bl	800c970 <_ZN8touchgfx5paint9flushLineEPmi>
 80157e4:	9b05      	ldr	r3, [sp, #20]
 80157e6:	4622      	mov	r2, r4
 80157e8:	4649      	mov	r1, r9
 80157ea:	4640      	mov	r0, r8
 80157ec:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80157f0:	f7f7 f924 	bl	800ca3c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80157f4:	4b2b      	ldr	r3, [pc, #172]	@ (80158a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 80157f6:	4a2c      	ldr	r2, [pc, #176]	@ (80158a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 80157f8:	4599      	cmp	r9, r3
 80157fa:	bf08      	it	eq
 80157fc:	4613      	moveq	r3, r2
 80157fe:	4699      	mov	r9, r3
 8015800:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 8015804:	2400      	movs	r4, #0
 8015806:	e0da      	b.n	80159be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 8015808:	1ba6      	subs	r6, r4, r6
 801580a:	b2b4      	uxth	r4, r6
 801580c:	e70f      	b.n	801562e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801580e:	9b01      	ldr	r3, [sp, #4]
 8015810:	9a01      	ldr	r2, [sp, #4]
 8015812:	42b3      	cmp	r3, r6
 8015814:	bfa8      	it	ge
 8015816:	4633      	movge	r3, r6
 8015818:	0e2c      	lsrs	r4, r5, #24
 801581a:	eba2 0b03 	sub.w	fp, r2, r3
 801581e:	eba6 0603 	sub.w	r6, r6, r3
 8015822:	d00b      	beq.n	801583c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 8015824:	f1a9 0104 	sub.w	r1, r9, #4
 8015828:	461a      	mov	r2, r3
 801582a:	2a00      	cmp	r2, #0
 801582c:	dc02      	bgt.n	8015834 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801582e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8015832:	e7a0      	b.n	8015776 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015834:	f841 5f04 	str.w	r5, [r1, #4]!
 8015838:	3a01      	subs	r2, #1
 801583a:	e7f6      	b.n	801582a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801583c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 8015840:	e799      	b.n	8015776 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 8015842:	4637      	mov	r7, r6
 8015844:	f8dd b004 	ldr.w	fp, [sp, #4]
 8015848:	4626      	mov	r6, r4
 801584a:	e794      	b.n	8015776 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801584c:	2bff      	cmp	r3, #255	@ 0xff
 801584e:	d11d      	bne.n	801588c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 8015850:	7878      	ldrb	r0, [r7, #1]
 8015852:	1d7b      	adds	r3, r7, #5
 8015854:	78ba      	ldrb	r2, [r7, #2]
 8015856:	b2c0      	uxtb	r0, r0
 8015858:	78fe      	ldrb	r6, [r7, #3]
 801585a:	b2d2      	uxtb	r2, r2
 801585c:	9303      	str	r3, [sp, #12]
 801585e:	f360 0507 	bfi	r5, r0, #0, #8
 8015862:	793b      	ldrb	r3, [r7, #4]
 8015864:	b2f6      	uxtb	r6, r6
 8015866:	b2d9      	uxtb	r1, r3
 8015868:	f362 250f 	bfi	r5, r2, #8, #8
 801586c:	2303      	movs	r3, #3
 801586e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8015872:	f366 4517 	bfi	r5, r6, #16, #8
 8015876:	fb13 2206 	smlabb	r2, r3, r6, r2
 801587a:	2307      	movs	r3, #7
 801587c:	f361 651f 	bfi	r5, r1, #24, #8
 8015880:	fb13 2000 	smlabb	r0, r3, r0, r2
 8015884:	230b      	movs	r3, #11
 8015886:	fb13 0301 	smlabb	r3, r3, r1, r0
 801588a:	e798      	b.n	80157be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801588c:	119e      	asrs	r6, r3, #6
 801588e:	d10d      	bne.n	80158ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 8015890:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015894:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 8015898:	685d      	ldr	r5, [r3, #4]
 801589a:	e795      	b.n	80157c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801589c:	20001b6c 	.word	0x20001b6c
 80158a0:	20001b66 	.word	0x20001b66
 80158a4:	20000260 	.word	0x20000260
 80158a8:	20000360 	.word	0x20000360
 80158ac:	2e01      	cmp	r6, #1
 80158ae:	ea4f 6115 	mov.w	r1, r5, lsr #24
 80158b2:	d12b      	bne.n	801590c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 80158b4:	f003 0003 	and.w	r0, r3, #3
 80158b8:	f003 020c 	and.w	r2, r3, #12
 80158bc:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80158c0:	3802      	subs	r0, #2
 80158c2:	3a08      	subs	r2, #8
 80158c4:	1e9f      	subs	r7, r3, #2
 80158c6:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 80158ca:	b2c0      	uxtb	r0, r0
 80158cc:	f360 0507 	bfi	r5, r0, #0, #8
 80158d0:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80158d4:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 80158d8:	f362 250f 	bfi	r5, r2, #8, #8
 80158dc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 80158e0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 80158e4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80158e8:	2703      	movs	r7, #3
 80158ea:	b2db      	uxtb	r3, r3
 80158ec:	fb17 2203 	smlabb	r2, r7, r3, r2
 80158f0:	2707      	movs	r7, #7
 80158f2:	f363 4517 	bfi	r5, r3, #16, #8
 80158f6:	230b      	movs	r3, #11
 80158f8:	fb17 2000 	smlabb	r0, r7, r0, r2
 80158fc:	fb13 0101 	smlabb	r1, r3, r1, r0
 8015900:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 8015904:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015908:	604d      	str	r5, [r1, #4]
 801590a:	e75e      	b.n	80157ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801590c:	2e02      	cmp	r6, #2
 801590e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8015912:	d12f      	bne.n	8015974 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 8015914:	7878      	ldrb	r0, [r7, #1]
 8015916:	1cba      	adds	r2, r7, #2
 8015918:	3b20      	subs	r3, #32
 801591a:	b2c0      	uxtb	r0, r0
 801591c:	9203      	str	r2, [sp, #12]
 801591e:	f000 020f 	and.w	r2, r0, #15
 8015922:	1100      	asrs	r0, r0, #4
 8015924:	3a08      	subs	r2, #8
 8015926:	3808      	subs	r0, #8
 8015928:	441a      	add	r2, r3
 801592a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801592e:	b2d2      	uxtb	r2, r2
 8015930:	f362 0507 	bfi	r5, r2, #0, #8
 8015934:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015938:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801593c:	4403      	add	r3, r0
 801593e:	b2f6      	uxtb	r6, r6
 8015940:	f366 250f 	bfi	r5, r6, #8, #8
 8015944:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 8015948:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801594c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8015950:	2003      	movs	r0, #3
 8015952:	b2db      	uxtb	r3, r3
 8015954:	fb10 6603 	smlabb	r6, r0, r3, r6
 8015958:	2007      	movs	r0, #7
 801595a:	f363 4517 	bfi	r5, r3, #16, #8
 801595e:	230b      	movs	r3, #11
 8015960:	fb10 6202 	smlabb	r2, r0, r2, r6
 8015964:	fb13 2101 	smlabb	r1, r3, r1, r2
 8015968:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801596c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 8015970:	604d      	str	r5, [r1, #4]
 8015972:	e729      	b.n	80157c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 8015974:	1c5e      	adds	r6, r3, #1
 8015976:	465f      	mov	r7, fp
 8015978:	45b3      	cmp	fp, r6
 801597a:	bfa8      	it	ge
 801597c:	4637      	movge	r7, r6
 801597e:	e725      	b.n	80157cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 8015980:	193b      	adds	r3, r7, r4
 8015982:	2b40      	cmp	r3, #64	@ 0x40
 8015984:	dd13      	ble.n	80159ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 8015986:	4648      	mov	r0, r9
 8015988:	00a1      	lsls	r1, r4, #2
 801598a:	f7f6 fff1 	bl	800c970 <_ZN8touchgfx5paint9flushLineEPmi>
 801598e:	4649      	mov	r1, r9
 8015990:	9b05      	ldr	r3, [sp, #20]
 8015992:	4622      	mov	r2, r4
 8015994:	4640      	mov	r0, r8
 8015996:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801599a:	f7f7 f84f 	bl	800ca3c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801599e:	4b2c      	ldr	r3, [pc, #176]	@ (8015a50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 80159a0:	2400      	movs	r4, #0
 80159a2:	4599      	cmp	r9, r3
 80159a4:	bf0c      	ite	eq
 80159a6:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 8015a5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 80159aa:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 8015a50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 80159ae:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 80159b2:	463b      	mov	r3, r7
 80159b4:	3b01      	subs	r3, #1
 80159b6:	f842 5b04 	str.w	r5, [r2], #4
 80159ba:	d1fb      	bne.n	80159b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 80159bc:	443c      	add	r4, r7
 80159be:	9f03      	ldr	r7, [sp, #12]
 80159c0:	e6d9      	b.n	8015776 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 80159c2:	b15c      	cbz	r4, 80159dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 80159c4:	00a1      	lsls	r1, r4, #2
 80159c6:	4648      	mov	r0, r9
 80159c8:	f7f6 ffd2 	bl	800c970 <_ZN8touchgfx5paint9flushLineEPmi>
 80159cc:	4640      	mov	r0, r8
 80159ce:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80159d2:	9b05      	ldr	r3, [sp, #20]
 80159d4:	4622      	mov	r2, r4
 80159d6:	4649      	mov	r1, r9
 80159d8:	f7f7 f830 	bl	800ca3c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 80159dc:	4b1d      	ldr	r3, [pc, #116]	@ (8015a54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 80159de:	9a01      	ldr	r2, [sp, #4]
 80159e0:	881b      	ldrh	r3, [r3, #0]
 80159e2:	1a9b      	subs	r3, r3, r2
 80159e4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 80159e8:	9b04      	ldr	r3, [sp, #16]
 80159ea:	3301      	adds	r3, #1
 80159ec:	9304      	str	r3, [sp, #16]
 80159ee:	9a04      	ldr	r2, [sp, #16]
 80159f0:	9b00      	ldr	r3, [sp, #0]
 80159f2:	4293      	cmp	r3, r2
 80159f4:	d11d      	bne.n	8015a32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 80159f6:	9b02      	ldr	r3, [sp, #8]
 80159f8:	2500      	movs	r5, #0
 80159fa:	9a02      	ldr	r2, [sp, #8]
 80159fc:	f103 0b01 	add.w	fp, r3, #1
 8015a00:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 8015a04:	9b06      	ldr	r3, [sp, #24]
 8015a06:	4629      	mov	r1, r5
 8015a08:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 8015a0c:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 8015a10:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8015a14:	1ba4      	subs	r4, r4, r6
 8015a16:	9b07      	ldr	r3, [sp, #28]
 8015a18:	ba3f      	rev	r7, r7
 8015a1a:	9808      	ldr	r0, [sp, #32]
 8015a1c:	b2a4      	uxth	r4, r4
 8015a1e:	441f      	add	r7, r3
 8015a20:	f00b fb3f 	bl	80210a2 <memset>
 8015a24:	f8cd b008 	str.w	fp, [sp, #8]
 8015a28:	9504      	str	r5, [sp, #16]
 8015a2a:	f7f6 ff89 	bl	800c940 <_ZN8touchgfx5paint8tearDownEv>
 8015a2e:	463e      	mov	r6, r7
 8015a30:	e5cc      	b.n	80155cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 8015a32:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015a36:	9b01      	ldr	r3, [sp, #4]
 8015a38:	1ae4      	subs	r4, r4, r3
 8015a3a:	1ba4      	subs	r4, r4, r6
 8015a3c:	b2a4      	uxth	r4, r4
 8015a3e:	e7f4      	b.n	8015a2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 8015a40:	4b05      	ldr	r3, [pc, #20]	@ (8015a58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 8015a42:	6818      	ldr	r0, [r3, #0]
 8015a44:	6803      	ldr	r3, [r0, #0]
 8015a46:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015a48:	4798      	blx	r3
 8015a4a:	b00f      	add	sp, #60	@ 0x3c
 8015a4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a50:	20000260 	.word	0x20000260
 8015a54:	20001b66 	.word	0x20001b66
 8015a58:	20001b6c 	.word	0x20001b6c
 8015a5c:	20000360 	.word	0x20000360

08015a60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015a60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a64:	b08f      	sub	sp, #60	@ 0x3c
 8015a66:	461c      	mov	r4, r3
 8015a68:	9205      	str	r2, [sp, #20]
 8015a6a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8015a6e:	9100      	str	r1, [sp, #0]
 8015a70:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8015a72:	9201      	str	r2, [sp, #4]
 8015a74:	2a00      	cmp	r2, #0
 8015a76:	f000 8116 	beq.w	8015ca6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 8015a7a:	6820      	ldr	r0, [r4, #0]
 8015a7c:	aa0a      	add	r2, sp, #40	@ 0x28
 8015a7e:	6861      	ldr	r1, [r4, #4]
 8015a80:	c203      	stmia	r2!, {r0, r1}
 8015a82:	6818      	ldr	r0, [r3, #0]
 8015a84:	aa0c      	add	r2, sp, #48	@ 0x30
 8015a86:	6859      	ldr	r1, [r3, #4]
 8015a88:	c203      	stmia	r2!, {r0, r1}
 8015a8a:	a80a      	add	r0, sp, #40	@ 0x28
 8015a8c:	f7f9 ffb8 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015a90:	4621      	mov	r1, r4
 8015a92:	a80c      	add	r0, sp, #48	@ 0x30
 8015a94:	f7f9 ffdc 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015a98:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8015a9c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8015aa0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8015aa4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8015aa8:	bfdb      	ittet	le
 8015aaa:	b2b3      	uxthle	r3, r6
 8015aac:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8015ab0:	2301      	movgt	r3, #1
 8015ab2:	fb92 f3f3 	sdivle	r3, r2, r3
 8015ab6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015aba:	441d      	add	r5, r3
 8015abc:	fb92 f1f3 	sdiv	r1, r2, r3
 8015ac0:	fa1f fc81 	uxth.w	ip, r1
 8015ac4:	3d01      	subs	r5, #1
 8015ac6:	fb0c 2413 	mls	r4, ip, r3, r2
 8015aca:	4661      	mov	r1, ip
 8015acc:	fb14 f406 	smulbb	r4, r4, r6
 8015ad0:	4404      	add	r4, r0
 8015ad2:	fb95 f5f3 	sdiv	r5, r5, r3
 8015ad6:	b2a4      	uxth	r4, r4
 8015ad8:	b131      	cbz	r1, 8015ae8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 8015ada:	9b05      	ldr	r3, [sp, #20]
 8015adc:	9900      	ldr	r1, [sp, #0]
 8015ade:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8015ae2:	ba1b      	rev	r3, r3
 8015ae4:	4419      	add	r1, r3
 8015ae6:	9100      	str	r1, [sp, #0]
 8015ae8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015aec:	b2ad      	uxth	r5, r5
 8015aee:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 8015af2:	4418      	add	r0, r3
 8015af4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8015af8:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8015afc:	00ad      	lsls	r5, r5, #2
 8015afe:	441a      	add	r2, r3
 8015b00:	4b6a      	ldr	r3, [pc, #424]	@ (8015cac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015b02:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 8015b06:	6818      	ldr	r0, [r3, #0]
 8015b08:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8015b0c:	6803      	ldr	r3, [r0, #0]
 8015b0e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015b10:	4798      	blx	r3
 8015b12:	4967      	ldr	r1, [pc, #412]	@ (8015cb0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 8015b14:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8015b18:	2c00      	cmp	r4, #0
 8015b1a:	880b      	ldrh	r3, [r1, #0]
 8015b1c:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 8015b20:	bf0c      	ite	eq
 8015b22:	46c6      	moveq	lr, r8
 8015b24:	f04f 0e00 	movne.w	lr, #0
 8015b28:	9109      	str	r1, [sp, #36]	@ 0x24
 8015b2a:	fb03 c202 	mla	r2, r3, r2, ip
 8015b2e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8015b32:	4373      	muls	r3, r6
 8015b34:	fa1f fe8e 	uxth.w	lr, lr
 8015b38:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015b3c:	9103      	str	r1, [sp, #12]
 8015b3e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8015b42:	9306      	str	r3, [sp, #24]
 8015b44:	1d2b      	adds	r3, r5, #4
 8015b46:	9307      	str	r3, [sp, #28]
 8015b48:	9b01      	ldr	r3, [sp, #4]
 8015b4a:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 8015b4e:	2300      	movs	r3, #0
 8015b50:	b292      	uxth	r2, r2
 8015b52:	9302      	str	r3, [sp, #8]
 8015b54:	9204      	str	r2, [sp, #16]
 8015b56:	9a06      	ldr	r2, [sp, #24]
 8015b58:	4282      	cmp	r2, r0
 8015b5a:	f240 809f 	bls.w	8015c9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 8015b5e:	b963      	cbnz	r3, 8015b7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015b60:	9b00      	ldr	r3, [sp, #0]
 8015b62:	781a      	ldrb	r2, [r3, #0]
 8015b64:	0993      	lsrs	r3, r2, #6
 8015b66:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8015b6a:	9202      	str	r2, [sp, #8]
 8015b6c:	1e5a      	subs	r2, r3, #1
 8015b6e:	2a02      	cmp	r2, #2
 8015b70:	d815      	bhi.n	8015b9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8015b72:	9a00      	ldr	r2, [sp, #0]
 8015b74:	b29b      	uxth	r3, r3
 8015b76:	3201      	adds	r2, #1
 8015b78:	9200      	str	r2, [sp, #0]
 8015b7a:	b1b4      	cbz	r4, 8015baa <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 8015b7c:	429c      	cmp	r4, r3
 8015b7e:	bf91      	iteee	ls
 8015b80:	1b1c      	subls	r4, r3, r4
 8015b82:	1ae4      	subhi	r4, r4, r3
 8015b84:	4671      	movhi	r1, lr
 8015b86:	f04f 0a00 	movhi.w	sl, #0
 8015b8a:	bf9b      	ittet	ls
 8015b8c:	fa1f fa84 	uxthls.w	sl, r4
 8015b90:	2400      	movls	r4, #0
 8015b92:	b2a4      	uxthhi	r4, r4
 8015b94:	fa1f f188 	uxthls.w	r1, r8
 8015b98:	4653      	mov	r3, sl
 8015b9a:	468e      	mov	lr, r1
 8015b9c:	e7db      	b.n	8015b56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 8015b9e:	9a00      	ldr	r2, [sp, #0]
 8015ba0:	9b00      	ldr	r3, [sp, #0]
 8015ba2:	3202      	adds	r2, #2
 8015ba4:	785b      	ldrb	r3, [r3, #1]
 8015ba6:	9200      	str	r2, [sp, #0]
 8015ba8:	e7e7      	b.n	8015b7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 8015baa:	2202      	movs	r2, #2
 8015bac:	9907      	ldr	r1, [sp, #28]
 8015bae:	4573      	cmp	r3, lr
 8015bb0:	4615      	mov	r5, r2
 8015bb2:	9a02      	ldr	r2, [sp, #8]
 8015bb4:	bf24      	itt	cs
 8015bb6:	eba3 0a0e 	subcs.w	sl, r3, lr
 8015bba:	46f1      	movcs	r9, lr
 8015bbc:	fb15 1202 	smlabb	r2, r5, r2, r1
 8015bc0:	9905      	ldr	r1, [sp, #20]
 8015bc2:	bf34      	ite	cc
 8015bc4:	4699      	movcc	r9, r3
 8015bc6:	fa1f fa8a 	uxthcs.w	sl, sl
 8015bca:	f831 c002 	ldrh.w	ip, [r1, r2]
 8015bce:	bf38      	it	cc
 8015bd0:	ebae 0103 	subcc.w	r1, lr, r3
 8015bd4:	9a01      	ldr	r2, [sp, #4]
 8015bd6:	bf2e      	itee	cs
 8015bd8:	4621      	movcs	r1, r4
 8015bda:	b289      	uxthcc	r1, r1
 8015bdc:	46a2      	movcc	sl, r4
 8015bde:	2aff      	cmp	r2, #255	@ 0xff
 8015be0:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015be4:	d105      	bne.n	8015bf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 8015be6:	4481      	add	r9, r0
 8015be8:	4581      	cmp	r9, r0
 8015bea:	d045      	beq.n	8015c78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015bec:	f820 cb02 	strh.w	ip, [r0], #2
 8015bf0:	e7fa      	b.n	8015be8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 8015bf2:	ea4f 222c 	mov.w	r2, ip, asr #8
 8015bf6:	9d03      	ldr	r5, [sp, #12]
 8015bf8:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8015bfc:	4481      	add	r9, r0
 8015bfe:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015c02:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8015c06:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8015c0a:	fa5f fc8c 	uxtb.w	ip, ip
 8015c0e:	436a      	muls	r2, r5
 8015c10:	fb0b fb05 	mul.w	fp, fp, r5
 8015c14:	fb0c fc05 	mul.w	ip, ip, r5
 8015c18:	9208      	str	r2, [sp, #32]
 8015c1a:	4581      	cmp	r9, r0
 8015c1c:	d02c      	beq.n	8015c78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 8015c1e:	8802      	ldrh	r2, [r0, #0]
 8015c20:	9d04      	ldr	r5, [sp, #16]
 8015c22:	1216      	asrs	r6, r2, #8
 8015c24:	9f04      	ldr	r7, [sp, #16]
 8015c26:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8015c2a:	fb16 f605 	smulbb	r6, r6, r5
 8015c2e:	9d08      	ldr	r5, [sp, #32]
 8015c30:	442e      	add	r6, r5
 8015c32:	10d5      	asrs	r5, r2, #3
 8015c34:	00d2      	lsls	r2, r2, #3
 8015c36:	b2b6      	uxth	r6, r6
 8015c38:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8015c3c:	b2d2      	uxtb	r2, r2
 8015c3e:	fb15 f507 	smulbb	r5, r5, r7
 8015c42:	fb12 f207 	smulbb	r2, r2, r7
 8015c46:	1c77      	adds	r7, r6, #1
 8015c48:	445d      	add	r5, fp
 8015c4a:	4462      	add	r2, ip
 8015c4c:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 8015c50:	b2ad      	uxth	r5, r5
 8015c52:	b292      	uxth	r2, r2
 8015c54:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8015c58:	1c57      	adds	r7, r2, #1
 8015c5a:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 8015c5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8015c62:	4316      	orrs	r6, r2
 8015c64:	1c6a      	adds	r2, r5, #1
 8015c66:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8015c6a:	096d      	lsrs	r5, r5, #5
 8015c6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8015c70:	432e      	orrs	r6, r5
 8015c72:	f820 6b02 	strh.w	r6, [r0], #2
 8015c76:	e7d0      	b.n	8015c1a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 8015c78:	4573      	cmp	r3, lr
 8015c7a:	d38d      	bcc.n	8015b98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8015c7c:	fa1f f188 	uxth.w	r1, r8
 8015c80:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 8015c84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015c86:	1a64      	subs	r4, r4, r1
 8015c88:	881b      	ldrh	r3, [r3, #0]
 8015c8a:	b2a4      	uxth	r4, r4
 8015c8c:	eba3 0308 	sub.w	r3, r3, r8
 8015c90:	2c00      	cmp	r4, #0
 8015c92:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015c96:	bf18      	it	ne
 8015c98:	2100      	movne	r1, #0
 8015c9a:	e77d      	b.n	8015b98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 8015c9c:	4b03      	ldr	r3, [pc, #12]	@ (8015cac <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 8015c9e:	6818      	ldr	r0, [r3, #0]
 8015ca0:	6803      	ldr	r3, [r0, #0]
 8015ca2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015ca4:	4798      	blx	r3
 8015ca6:	b00f      	add	sp, #60	@ 0x3c
 8015ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cac:	20001b6c 	.word	0x20001b6c
 8015cb0:	20001b66 	.word	0x20001b66

08015cb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8015cb4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015cb8:	b09f      	sub	sp, #124	@ 0x7c
 8015cba:	461d      	mov	r5, r3
 8015cbc:	4604      	mov	r4, r0
 8015cbe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8015cc0:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8015cc4:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 8015cc8:	9209      	str	r2, [sp, #36]	@ 0x24
 8015cca:	2a00      	cmp	r2, #0
 8015ccc:	f000 81ed 	beq.w	80160aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 8015cd0:	6828      	ldr	r0, [r5, #0]
 8015cd2:	aa1a      	add	r2, sp, #104	@ 0x68
 8015cd4:	6869      	ldr	r1, [r5, #4]
 8015cd6:	c203      	stmia	r2!, {r0, r1}
 8015cd8:	6818      	ldr	r0, [r3, #0]
 8015cda:	aa1c      	add	r2, sp, #112	@ 0x70
 8015cdc:	6859      	ldr	r1, [r3, #4]
 8015cde:	c203      	stmia	r2!, {r0, r1}
 8015ce0:	a81a      	add	r0, sp, #104	@ 0x68
 8015ce2:	f7f9 fe8d 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015ce6:	4629      	mov	r1, r5
 8015ce8:	a81c      	add	r0, sp, #112	@ 0x70
 8015cea:	f7f9 feb1 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8015cee:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8015cf2:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 8015cf6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8015cfa:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 8015cfe:	bfdb      	ittet	le
 8015d00:	b29a      	uxthle	r2, r3
 8015d02:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8015d06:	2201      	movgt	r2, #1
 8015d08:	fb91 f2f2 	sdivle	r2, r1, r2
 8015d0c:	9202      	str	r2, [sp, #8]
 8015d0e:	9802      	ldr	r0, [sp, #8]
 8015d10:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8015d14:	9902      	ldr	r1, [sp, #8]
 8015d16:	fb92 f0f0 	sdiv	r0, r2, r0
 8015d1a:	b280      	uxth	r0, r0
 8015d1c:	4488      	add	r8, r1
 8015d1e:	9010      	str	r0, [sp, #64]	@ 0x40
 8015d20:	f108 38ff 	add.w	r8, r8, #4294967295
 8015d24:	9802      	ldr	r0, [sp, #8]
 8015d26:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8015d28:	fb05 2510 	mls	r5, r5, r0, r2
 8015d2c:	fb98 f8f1 	sdiv	r8, r8, r1
 8015d30:	fb15 f503 	smulbb	r5, r5, r3
 8015d34:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 8015d38:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8015d3c:	f108 0801 	add.w	r8, r8, #1
 8015d40:	440d      	add	r5, r1
 8015d42:	4419      	add	r1, r3
 8015d44:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8015d48:	fa1f f888 	uxth.w	r8, r8
 8015d4c:	441a      	add	r2, r3
 8015d4e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8015d52:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8015d56:	b2ad      	uxth	r5, r5
 8015d58:	9304      	str	r3, [sp, #16]
 8015d5a:	4b94      	ldr	r3, [pc, #592]	@ (8015fac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 8015d5c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 8015d60:	6818      	ldr	r0, [r3, #0]
 8015d62:	6803      	ldr	r3, [r0, #0]
 8015d64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015d66:	4798      	blx	r3
 8015d68:	4b91      	ldr	r3, [pc, #580]	@ (8015fb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 8015d6a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 8015d6e:	2d00      	cmp	r5, #0
 8015d70:	881a      	ldrh	r2, [r3, #0]
 8015d72:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8015d76:	fb02 f606 	mul.w	r6, r2, r6
 8015d7a:	fb02 7101 	mla	r1, r2, r1, r7
 8015d7e:	9318      	str	r3, [sp, #96]	@ 0x60
 8015d80:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015d84:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 8015d88:	f04f 0100 	mov.w	r1, #0
 8015d8c:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 8015d90:	930f      	str	r3, [sp, #60]	@ 0x3c
 8015d92:	4b88      	ldr	r3, [pc, #544]	@ (8015fb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 8015d94:	920a      	str	r2, [sp, #40]	@ 0x28
 8015d96:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8015d98:	eba3 0304 	sub.w	r3, r3, r4
 8015d9c:	910d      	str	r1, [sp, #52]	@ 0x34
 8015d9e:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 8015da2:	9319      	str	r3, [sp, #100]	@ 0x64
 8015da4:	f108 0204 	add.w	r2, r8, #4
 8015da8:	9211      	str	r2, [sp, #68]	@ 0x44
 8015daa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8015dac:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 8015db0:	9215      	str	r2, [sp, #84]	@ 0x54
 8015db2:	9a04      	ldr	r2, [sp, #16]
 8015db4:	bf18      	it	ne
 8015db6:	2200      	movne	r2, #0
 8015db8:	b292      	uxth	r2, r2
 8015dba:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8015dbc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015dbe:	fa11 f383 	uxtah	r3, r1, r3
 8015dc2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8015dc4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8015dc8:	3304      	adds	r3, #4
 8015dca:	9306      	str	r3, [sp, #24]
 8015dcc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015dce:	4283      	cmp	r3, r0
 8015dd0:	f240 8166 	bls.w	80160a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 8015dd4:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8015dd8:	f04f 0a01 	mov.w	sl, #1
 8015ddc:	9902      	ldr	r1, [sp, #8]
 8015dde:	9e06      	ldr	r6, [sp, #24]
 8015de0:	46d3      	mov	fp, sl
 8015de2:	4657      	mov	r7, sl
 8015de4:	7836      	ldrb	r6, [r6, #0]
 8015de6:	fbb5 f3f3 	udiv	r3, r5, r3
 8015dea:	1acb      	subs	r3, r1, r3
 8015dec:	9612      	str	r6, [sp, #72]	@ 0x48
 8015dee:	3601      	adds	r6, #1
 8015df0:	b29b      	uxth	r3, r3
 8015df2:	9605      	str	r6, [sp, #20]
 8015df4:	9316      	str	r3, [sp, #88]	@ 0x58
 8015df6:	9b06      	ldr	r3, [sp, #24]
 8015df8:	7859      	ldrb	r1, [r3, #1]
 8015dfa:	789b      	ldrb	r3, [r3, #2]
 8015dfc:	021b      	lsls	r3, r3, #8
 8015dfe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8015e02:	9906      	ldr	r1, [sp, #24]
 8015e04:	78c9      	ldrb	r1, [r1, #3]
 8015e06:	430b      	orrs	r3, r1
 8015e08:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8015e0a:	4419      	add	r1, r3
 8015e0c:	1c4e      	adds	r6, r1, #1
 8015e0e:	7849      	ldrb	r1, [r1, #1]
 8015e10:	9603      	str	r6, [sp, #12]
 8015e12:	0209      	lsls	r1, r1, #8
 8015e14:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8015e16:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 8015e1a:	5cf3      	ldrb	r3, [r6, r3]
 8015e1c:	4319      	orrs	r1, r3
 8015e1e:	b28b      	uxth	r3, r1
 8015e20:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 8015e24:	930c      	str	r3, [sp, #48]	@ 0x30
 8015e26:	2300      	movs	r3, #0
 8015e28:	9307      	str	r3, [sp, #28]
 8015e2a:	469c      	mov	ip, r3
 8015e2c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8015e30:	930e      	str	r3, [sp, #56]	@ 0x38
 8015e32:	2d00      	cmp	r5, #0
 8015e34:	d07e      	beq.n	8015f34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 8015e36:	42af      	cmp	r7, r5
 8015e38:	d26e      	bcs.n	8015f18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 8015e3a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8015e3c:	1bed      	subs	r5, r5, r7
 8015e3e:	9201      	str	r2, [sp, #4]
 8015e40:	4283      	cmp	r3, r0
 8015e42:	b2ad      	uxth	r5, r5
 8015e44:	d802      	bhi.n	8015e4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 8015e46:	e073      	b.n	8015f30 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 8015e48:	2b00      	cmp	r3, #0
 8015e4a:	d15f      	bne.n	8015f0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 8015e4c:	9b03      	ldr	r3, [sp, #12]
 8015e4e:	f1cb 0207 	rsb	r2, fp, #7
 8015e52:	785b      	ldrb	r3, [r3, #1]
 8015e54:	4093      	lsls	r3, r2
 8015e56:	005b      	lsls	r3, r3, #1
 8015e58:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8015e5c:	9b03      	ldr	r3, [sp, #12]
 8015e5e:	781b      	ldrb	r3, [r3, #0]
 8015e60:	fa43 f30b 	asr.w	r3, r3, fp
 8015e64:	b2db      	uxtb	r3, r3
 8015e66:	4313      	orrs	r3, r2
 8015e68:	f10b 0201 	add.w	r2, fp, #1
 8015e6c:	fa5f fb82 	uxtb.w	fp, r2
 8015e70:	9a03      	ldr	r2, [sp, #12]
 8015e72:	b29f      	uxth	r7, r3
 8015e74:	f1bb 0f08 	cmp.w	fp, #8
 8015e78:	bf13      	iteet	ne
 8015e7a:	3201      	addne	r2, #1
 8015e7c:	3202      	addeq	r2, #2
 8015e7e:	f04f 0b00 	moveq.w	fp, #0
 8015e82:	9203      	strne	r2, [sp, #12]
 8015e84:	bf08      	it	eq
 8015e86:	9203      	streq	r2, [sp, #12]
 8015e88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8015e8a:	42ba      	cmp	r2, r7
 8015e8c:	d309      	bcc.n	8015ea2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 8015e8e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 8015e92:	2301      	movs	r3, #1
 8015e94:	9a05      	ldr	r2, [sp, #20]
 8015e96:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 8015e9a:	d30e      	bcc.n	8015eba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8015e9c:	469a      	mov	sl, r3
 8015e9e:	2600      	movs	r6, #0
 8015ea0:	e035      	b.n	8015f0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 8015ea2:	9b05      	ldr	r3, [sp, #20]
 8015ea4:	429f      	cmp	r7, r3
 8015ea6:	d318      	bcc.n	8015eda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 8015ea8:	eb04 030a 	add.w	r3, r4, sl
 8015eac:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 8015eb0:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 8015eb4:	f10a 0301 	add.w	r3, sl, #1
 8015eb8:	b29b      	uxth	r3, r3
 8015eba:	9a05      	ldr	r2, [sp, #20]
 8015ebc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8015ec0:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015ec4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015ec6:	7116      	strb	r6, [r2, #4]
 8015ec8:	f10a 0601 	add.w	r6, sl, #1
 8015ecc:	80d1      	strh	r1, [r2, #6]
 8015ece:	7156      	strb	r6, [r2, #5]
 8015ed0:	9a05      	ldr	r2, [sp, #20]
 8015ed2:	3201      	adds	r2, #1
 8015ed4:	b292      	uxth	r2, r2
 8015ed6:	9205      	str	r2, [sp, #20]
 8015ed8:	e7e0      	b.n	8015e9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 8015eda:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 8015ede:	463a      	mov	r2, r7
 8015ee0:	795b      	ldrb	r3, [r3, #5]
 8015ee2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 8015ee6:	4426      	add	r6, r4
 8015ee8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 8015eea:	eb01 0c06 	add.w	ip, r1, r6
 8015eee:	f1bc 0f00 	cmp.w	ip, #0
 8015ef2:	dd07      	ble.n	8015f04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 8015ef4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 8015ef8:	f892 c004 	ldrb.w	ip, [r2, #4]
 8015efc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 8015f00:	88d2      	ldrh	r2, [r2, #6]
 8015f02:	e7f1      	b.n	8015ee8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 8015f04:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8015f08:	b29b      	uxth	r3, r3
 8015f0a:	e7c3      	b.n	8015e94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 8015f0c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8015f0e:	970c      	str	r7, [sp, #48]	@ 0x30
 8015f10:	46b4      	mov	ip, r6
 8015f12:	9a01      	ldr	r2, [sp, #4]
 8015f14:	461f      	mov	r7, r3
 8015f16:	e78c      	b.n	8015e32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 8015f18:	1b7b      	subs	r3, r7, r5
 8015f1a:	eb0c 0605 	add.w	r6, ip, r5
 8015f1e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8015f22:	b29b      	uxth	r3, r3
 8015f24:	b2b6      	uxth	r6, r6
 8015f26:	9201      	str	r2, [sp, #4]
 8015f28:	2500      	movs	r5, #0
 8015f2a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015f2c:	4282      	cmp	r2, r0
 8015f2e:	d88b      	bhi.n	8015e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 8015f30:	9a01      	ldr	r2, [sp, #4]
 8015f32:	e74b      	b.n	8015dcc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 8015f34:	4297      	cmp	r7, r2
 8015f36:	d332      	bcc.n	8015f9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 8015f38:	1abb      	subs	r3, r7, r2
 8015f3a:	9208      	str	r2, [sp, #32]
 8015f3c:	9501      	str	r5, [sp, #4]
 8015f3e:	b29b      	uxth	r3, r3
 8015f40:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8015f42:	29ff      	cmp	r1, #255	@ 0xff
 8015f44:	9908      	ldr	r1, [sp, #32]
 8015f46:	eb0c 0601 	add.w	r6, ip, r1
 8015f4a:	d135      	bne.n	8015fb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 8015f4c:	f1a0 0e02 	sub.w	lr, r0, #2
 8015f50:	b2b6      	uxth	r6, r6
 8015f52:	45b4      	cmp	ip, r6
 8015f54:	f040 808c 	bne.w	8016070 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 8015f58:	9908      	ldr	r1, [sp, #32]
 8015f5a:	4297      	cmp	r7, r2
 8015f5c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8015f60:	d3e2      	bcc.n	8015f28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 8015f62:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8015f64:	9904      	ldr	r1, [sp, #16]
 8015f66:	8812      	ldrh	r2, [r2, #0]
 8015f68:	1a52      	subs	r2, r2, r1
 8015f6a:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8015f6c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8015f70:	9a07      	ldr	r2, [sp, #28]
 8015f72:	3201      	adds	r2, #1
 8015f74:	428a      	cmp	r2, r1
 8015f76:	9207      	str	r2, [sp, #28]
 8015f78:	f040 8087 	bne.w	801608a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 8015f7c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 8015f80:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 8015f84:	9b04      	ldr	r3, [sp, #16]
 8015f86:	1bed      	subs	r5, r5, r7
 8015f88:	b2ad      	uxth	r5, r5
 8015f8a:	2d00      	cmp	r5, #0
 8015f8c:	bf08      	it	eq
 8015f8e:	461a      	moveq	r2, r3
 8015f90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015f92:	bf18      	it	ne
 8015f94:	2200      	movne	r2, #0
 8015f96:	3301      	adds	r3, #1
 8015f98:	b292      	uxth	r2, r2
 8015f9a:	930d      	str	r3, [sp, #52]	@ 0x34
 8015f9c:	e70d      	b.n	8015dba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 8015f9e:	1bd1      	subs	r1, r2, r7
 8015fa0:	9708      	str	r7, [sp, #32]
 8015fa2:	b28b      	uxth	r3, r1
 8015fa4:	9301      	str	r3, [sp, #4]
 8015fa6:	462b      	mov	r3, r5
 8015fa8:	e7ca      	b.n	8015f40 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 8015faa:	bf00      	nop
 8015fac:	20001b6c 	.word	0x20001b6c
 8015fb0:	20001b66 	.word	0x20001b66
 8015fb4:	fffff7fb 	.word	0xfffff7fb
 8015fb8:	b2b6      	uxth	r6, r6
 8015fba:	900b      	str	r0, [sp, #44]	@ 0x2c
 8015fbc:	45b4      	cmp	ip, r6
 8015fbe:	d0cb      	beq.n	8015f58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 8015fc0:	f10c 0101 	add.w	r1, ip, #1
 8015fc4:	44a4      	add	ip, r4
 8015fc6:	9117      	str	r1, [sp, #92]	@ 0x5c
 8015fc8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 8015fcc:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8015fce:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8015fd2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8015fd4:	ea4f 2825 	mov.w	r8, r5, asr #8
 8015fd8:	f8b1 c000 	ldrh.w	ip, [r1]
 8015fdc:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8015fde:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8015fe2:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 8015fe6:	ea4f 09ec 	mov.w	r9, ip, asr #3
 8015fea:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8015fee:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015ff2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8015ff6:	fb1e fe01 	smulbb	lr, lr, r1
 8015ffa:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8015ffc:	fa5f fc8c 	uxtb.w	ip, ip
 8016000:	fb08 e801 	mla	r8, r8, r1, lr
 8016004:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 8016008:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801600a:	00ed      	lsls	r5, r5, #3
 801600c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016010:	fa1f f888 	uxth.w	r8, r8
 8016014:	fb19 f901 	smulbb	r9, r9, r1
 8016018:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801601a:	b2ed      	uxtb	r5, r5
 801601c:	fb0e 9e01 	mla	lr, lr, r1, r9
 8016020:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8016022:	fb1c fc01 	smulbb	ip, ip, r1
 8016026:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8016028:	fa1f fe8e 	uxth.w	lr, lr
 801602c:	fb05 c501 	mla	r5, r5, r1, ip
 8016030:	f108 0c01 	add.w	ip, r8, #1
 8016034:	f10e 0901 	add.w	r9, lr, #1
 8016038:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801603a:	b2ad      	uxth	r5, r5
 801603c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016040:	f105 0c01 	add.w	ip, r5, #1
 8016044:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 8016048:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801604c:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 8016050:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016054:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8016058:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801605c:	ea4c 0808 	orr.w	r8, ip, r8
 8016060:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 8016064:	ea48 0809 	orr.w	r8, r8, r9
 8016068:	f821 8b02 	strh.w	r8, [r1], #2
 801606c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801606e:	e7a5      	b.n	8015fbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 8016070:	f10c 0801 	add.w	r8, ip, #1
 8016074:	44a4      	add	ip, r4
 8016076:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016078:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801607c:	fa1f fc88 	uxth.w	ip, r8
 8016080:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 8016084:	f82e 5f02 	strh.w	r5, [lr, #2]!
 8016088:	e763      	b.n	8015f52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801608a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801608e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 8016092:	1aad      	subs	r5, r5, r2
 8016094:	b2ad      	uxth	r5, r5
 8016096:	2d00      	cmp	r5, #0
 8016098:	bf18      	it	ne
 801609a:	2200      	movne	r2, #0
 801609c:	9201      	str	r2, [sp, #4]
 801609e:	e744      	b.n	8015f2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 80160a0:	4b03      	ldr	r3, [pc, #12]	@ (80160b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 80160a2:	6818      	ldr	r0, [r3, #0]
 80160a4:	6803      	ldr	r3, [r0, #0]
 80160a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80160a8:	4798      	blx	r3
 80160aa:	b01f      	add	sp, #124	@ 0x7c
 80160ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80160b0:	20001b6c 	.word	0x20001b6c

080160b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 80160b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80160b8:	b093      	sub	sp, #76	@ 0x4c
 80160ba:	4616      	mov	r6, r2
 80160bc:	460d      	mov	r5, r1
 80160be:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 80160c2:	9003      	str	r0, [sp, #12]
 80160c4:	9201      	str	r2, [sp, #4]
 80160c6:	2a00      	cmp	r2, #0
 80160c8:	f000 8303 	beq.w	80166d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
 80160cc:	6830      	ldr	r0, [r6, #0]
 80160ce:	ac0e      	add	r4, sp, #56	@ 0x38
 80160d0:	6871      	ldr	r1, [r6, #4]
 80160d2:	c403      	stmia	r4!, {r0, r1}
 80160d4:	6818      	ldr	r0, [r3, #0]
 80160d6:	ac10      	add	r4, sp, #64	@ 0x40
 80160d8:	6859      	ldr	r1, [r3, #4]
 80160da:	c403      	stmia	r4!, {r0, r1}
 80160dc:	a80e      	add	r0, sp, #56	@ 0x38
 80160de:	f7f9 fc8f 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80160e2:	4631      	mov	r1, r6
 80160e4:	a810      	add	r0, sp, #64	@ 0x40
 80160e6:	f7f9 fcb3 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80160ea:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 80160ee:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 80160f2:	bfdb      	ittet	le
 80160f4:	b293      	uxthle	r3, r2
 80160f6:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 80160fa:	2301      	movgt	r3, #1
 80160fc:	fb91 f3f3 	sdivle	r3, r1, r3
 8016100:	9304      	str	r3, [sp, #16]
 8016102:	f105 0308 	add.w	r3, r5, #8
 8016106:	9904      	ldr	r1, [sp, #16]
 8016108:	9308      	str	r3, [sp, #32]
 801610a:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801610e:	440b      	add	r3, r1
 8016110:	3b01      	subs	r3, #1
 8016112:	fb93 f3f1 	sdiv	r3, r3, r1
 8016116:	3b01      	subs	r3, #1
 8016118:	9908      	ldr	r1, [sp, #32]
 801611a:	b29b      	uxth	r3, r3
 801611c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016120:	9904      	ldr	r1, [sp, #16]
 8016122:	9309      	str	r3, [sp, #36]	@ 0x24
 8016124:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8016128:	fb93 f0f1 	sdiv	r0, r3, r1
 801612c:	b284      	uxth	r4, r0
 801612e:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 8016132:	9405      	str	r4, [sp, #20]
 8016134:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 8016138:	fb05 3914 	mls	r9, r5, r4, r3
 801613c:	fb19 f902 	smulbb	r9, r9, r2
 8016140:	4489      	add	r9, r1
 8016142:	fa1f f989 	uxth.w	r9, r9
 8016146:	2d00      	cmp	r5, #0
 8016148:	d05d      	beq.n	8016206 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801614a:	1e6a      	subs	r2, r5, #1
 801614c:	9808      	ldr	r0, [sp, #32]
 801614e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 8016152:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016154:	fa9a fa8a 	rev.w	sl, sl
 8016158:	4492      	add	sl, r2
 801615a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801615e:	f04f 0600 	mov.w	r6, #0
 8016162:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8016166:	4411      	add	r1, r2
 8016168:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801616c:	4413      	add	r3, r2
 801616e:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 8016172:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8016176:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801617a:	9302      	str	r3, [sp, #8]
 801617c:	4bca      	ldr	r3, [pc, #808]	@ (80164a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801617e:	6818      	ldr	r0, [r3, #0]
 8016180:	6803      	ldr	r3, [r0, #0]
 8016182:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016184:	4798      	blx	r3
 8016186:	4bc9      	ldr	r3, [pc, #804]	@ (80164ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 8016188:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801618c:	2100      	movs	r1, #0
 801618e:	881b      	ldrh	r3, [r3, #0]
 8016190:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 8016194:	fb03 2404 	mla	r4, r3, r4, r2
 8016198:	2280      	movs	r2, #128	@ 0x80
 801619a:	436b      	muls	r3, r5
 801619c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80161a0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80161a4:	930d      	str	r3, [sp, #52]	@ 0x34
 80161a6:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 80161aa:	fb99 f3f3 	sdiv	r3, r9, r3
 80161ae:	9306      	str	r3, [sp, #24]
 80161b0:	9b01      	ldr	r3, [sp, #4]
 80161b2:	43db      	mvns	r3, r3
 80161b4:	b2db      	uxtb	r3, r3
 80161b6:	930a      	str	r3, [sp, #40]	@ 0x28
 80161b8:	9b03      	ldr	r3, [sp, #12]
 80161ba:	3304      	adds	r3, #4
 80161bc:	4618      	mov	r0, r3
 80161be:	930b      	str	r3, [sp, #44]	@ 0x2c
 80161c0:	f00a ff6f 	bl	80210a2 <memset>
 80161c4:	4bba      	ldr	r3, [pc, #744]	@ (80164b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 80161c6:	9300      	str	r3, [sp, #0]
 80161c8:	2300      	movs	r3, #0
 80161ca:	9307      	str	r3, [sp, #28]
 80161cc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80161ce:	42a3      	cmp	r3, r4
 80161d0:	f240 827a 	bls.w	80166c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
 80161d4:	f04f 0e07 	mov.w	lr, #7
 80161d8:	f1b9 0f00 	cmp.w	r9, #0
 80161dc:	f000 8159 	beq.w	8016492 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 80161e0:	f89a 5000 	ldrb.w	r5, [sl]
 80161e4:	f10a 0701 	add.w	r7, sl, #1
 80161e8:	b2ed      	uxtb	r5, r5
 80161ea:	11aa      	asrs	r2, r5, #6
 80161ec:	d10e      	bne.n	801620c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 80161ee:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 80161f2:	9b03      	ldr	r3, [sp, #12]
 80161f4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80161f8:	88ae      	ldrh	r6, [r5, #4]
 80161fa:	f109 39ff 	add.w	r9, r9, #4294967295
 80161fe:	fa1f f989 	uxth.w	r9, r9
 8016202:	46ba      	mov	sl, r7
 8016204:	e7e8      	b.n	80161d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 8016206:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801620a:	e7a6      	b.n	801615a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801620c:	2a01      	cmp	r2, #1
 801620e:	d129      	bne.n	8016264 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 8016210:	f3c6 0304 	ubfx	r3, r6, #0, #5
 8016214:	f005 0203 	and.w	r2, r5, #3
 8016218:	2103      	movs	r1, #3
 801621a:	3b02      	subs	r3, #2
 801621c:	4413      	add	r3, r2
 801621e:	f3c5 0281 	ubfx	r2, r5, #2, #2
 8016222:	f3c5 1501 	ubfx	r5, r5, #4, #2
 8016226:	f003 031f 	and.w	r3, r3, #31
 801622a:	3a02      	subs	r2, #2
 801622c:	3d02      	subs	r5, #2
 801622e:	f363 0604 	bfi	r6, r3, #0, #5
 8016232:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 8016236:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801623a:	f362 164a 	bfi	r6, r2, #5, #6
 801623e:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 8016242:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 8016246:	f005 051f 	and.w	r5, r5, #31
 801624a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801624e:	f365 26cf 	bfi	r6, r5, #11, #5
 8016252:	fb1e 2303 	smlabb	r3, lr, r3, r2
 8016256:	9a03      	ldr	r2, [sp, #12]
 8016258:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801625c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016260:	809e      	strh	r6, [r3, #4]
 8016262:	e7ca      	b.n	80161fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 8016264:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 8016268:	2a02      	cmp	r2, #2
 801626a:	b2ab      	uxth	r3, r5
 801626c:	d136      	bne.n	80162dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801626e:	2101      	movs	r1, #1
 8016270:	fb12 1205 	smlabb	r2, r2, r5, r1
 8016274:	4492      	add	sl, r2
 8016276:	463a      	mov	r2, r7
 8016278:	4552      	cmp	r2, sl
 801627a:	d01c      	beq.n	80162b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801627c:	4694      	mov	ip, r2
 801627e:	f04f 0b03 	mov.w	fp, #3
 8016282:	f81c 1b02 	ldrb.w	r1, [ip], #2
 8016286:	7852      	ldrb	r2, [r2, #1]
 8016288:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801628c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 8016290:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 8016294:	f001 021f 	and.w	r2, r1, #31
 8016298:	460e      	mov	r6, r1
 801629a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801629e:	fb1b 0008 	smlabb	r0, fp, r8, r0
 80162a2:	fb1e 0002 	smlabb	r0, lr, r2, r0
 80162a6:	9a03      	ldr	r2, [sp, #12]
 80162a8:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80162ac:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80162b0:	4662      	mov	r2, ip
 80162b2:	8081      	strh	r1, [r0, #4]
 80162b4:	e7e0      	b.n	8016278 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 80162b6:	4599      	cmp	r9, r3
 80162b8:	d20b      	bcs.n	80162d2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 80162ba:	eba5 0509 	sub.w	r5, r5, r9
 80162be:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 80162c2:	2d00      	cmp	r5, #0
 80162c4:	f300 8208 	bgt.w	80166d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
 80162c8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80162cc:	2301      	movs	r3, #1
 80162ce:	9307      	str	r3, [sp, #28]
 80162d0:	e00c      	b.n	80162ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 80162d2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 80162d6:	eba9 0903 	sub.w	r9, r9, r3
 80162da:	e790      	b.n	80161fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 80162dc:	4599      	cmp	r9, r3
 80162de:	d2fa      	bcs.n	80162d6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 80162e0:	eba5 0509 	sub.w	r5, r5, r9
 80162e4:	2d00      	cmp	r5, #0
 80162e6:	dc1d      	bgt.n	8016324 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 80162e8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 80162ec:	f04f 0b00 	mov.w	fp, #0
 80162f0:	f1b8 0f00 	cmp.w	r8, #0
 80162f4:	f340 81a0 	ble.w	8016638 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
 80162f8:	783b      	ldrb	r3, [r7, #0]
 80162fa:	f107 0a01 	add.w	sl, r7, #1
 80162fe:	b2db      	uxtb	r3, r3
 8016300:	119a      	asrs	r2, r3, #6
 8016302:	f040 80d7 	bne.w	80164b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 8016306:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801630a:	9a03      	ldr	r2, [sp, #12]
 801630c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8016310:	889e      	ldrh	r6, [r3, #4]
 8016312:	9b01      	ldr	r3, [sp, #4]
 8016314:	2bff      	cmp	r3, #255	@ 0xff
 8016316:	f040 81e8 	bne.w	80166ea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
 801631a:	8026      	strh	r6, [r4, #0]
 801631c:	f108 38ff 	add.w	r8, r8, #4294967295
 8016320:	3402      	adds	r4, #2
 8016322:	e0be      	b.n	80164a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016324:	9b02      	ldr	r3, [sp, #8]
 8016326:	9a02      	ldr	r2, [sp, #8]
 8016328:	42ab      	cmp	r3, r5
 801632a:	bfa8      	it	ge
 801632c:	462b      	movge	r3, r5
 801632e:	eba2 0803 	sub.w	r8, r2, r3
 8016332:	9a07      	ldr	r2, [sp, #28]
 8016334:	1aed      	subs	r5, r5, r3
 8016336:	2a00      	cmp	r2, #0
 8016338:	d05a      	beq.n	80163f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801633a:	9a01      	ldr	r2, [sp, #4]
 801633c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016340:	2aff      	cmp	r2, #255	@ 0xff
 8016342:	d049      	beq.n	80163d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 8016344:	f8bd e004 	ldrh.w	lr, [sp, #4]
 8016348:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801634c:	42a3      	cmp	r3, r4
 801634e:	f240 80a5 	bls.w	801649c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 8016352:	46bc      	mov	ip, r7
 8016354:	8820      	ldrh	r0, [r4, #0]
 8016356:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801635a:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801635e:	7879      	ldrb	r1, [r7, #1]
 8016360:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 8016364:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8016368:	fb1a fa09 	smulbb	sl, sl, r9
 801636c:	b212      	sxth	r2, r2
 801636e:	b291      	uxth	r1, r2
 8016370:	00d2      	lsls	r2, r2, #3
 8016372:	120f      	asrs	r7, r1, #8
 8016374:	10c9      	asrs	r1, r1, #3
 8016376:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801637a:	b2d2      	uxtb	r2, r2
 801637c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016380:	fb07 a70e 	mla	r7, r7, lr, sl
 8016384:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 8016388:	00c0      	lsls	r0, r0, #3
 801638a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801638e:	b2bf      	uxth	r7, r7
 8016390:	b2c0      	uxtb	r0, r0
 8016392:	fb1a fa09 	smulbb	sl, sl, r9
 8016396:	fb10 f009 	smulbb	r0, r0, r9
 801639a:	fb01 a10e 	mla	r1, r1, lr, sl
 801639e:	fb02 020e 	mla	r2, r2, lr, r0
 80163a2:	1c78      	adds	r0, r7, #1
 80163a4:	b289      	uxth	r1, r1
 80163a6:	b292      	uxth	r2, r2
 80163a8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80163ac:	f101 0a01 	add.w	sl, r1, #1
 80163b0:	1c50      	adds	r0, r2, #1
 80163b2:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 80163b6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80163ba:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80163be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80163c2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80163c6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80163ca:	4307      	orrs	r7, r0
 80163cc:	ea47 070a 	orr.w	r7, r7, sl
 80163d0:	f824 7b02 	strh.w	r7, [r4], #2
 80163d4:	4667      	mov	r7, ip
 80163d6:	e7b9      	b.n	801634c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 80163d8:	42a3      	cmp	r3, r4
 80163da:	d95f      	bls.n	801649c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 80163dc:	463a      	mov	r2, r7
 80163de:	f812 1b02 	ldrb.w	r1, [r2], #2
 80163e2:	7878      	ldrb	r0, [r7, #1]
 80163e4:	4617      	mov	r7, r2
 80163e6:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 80163ea:	f824 1b02 	strh.w	r1, [r4], #2
 80163ee:	e7f3      	b.n	80163d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 80163f0:	9901      	ldr	r1, [sp, #4]
 80163f2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80163f6:	b2b2      	uxth	r2, r6
 80163f8:	29ff      	cmp	r1, #255	@ 0xff
 80163fa:	d044      	beq.n	8016486 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 80163fc:	ea4f 2922 	mov.w	r9, r2, asr #8
 8016400:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8016404:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8016408:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801640c:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 8016410:	4608      	mov	r0, r1
 8016412:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8016416:	fb09 f901 	mul.w	r9, r9, r1
 801641a:	fb0e fe01 	mul.w	lr, lr, r1
 801641e:	00d1      	lsls	r1, r2, #3
 8016420:	b2c9      	uxtb	r1, r1
 8016422:	4341      	muls	r1, r0
 8016424:	429c      	cmp	r4, r3
 8016426:	f4bf af61 	bcs.w	80162ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801642a:	8822      	ldrh	r2, [r4, #0]
 801642c:	1210      	asrs	r0, r2, #8
 801642e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016432:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8016436:	00d2      	lsls	r2, r2, #3
 8016438:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801643c:	fb00 900a 	mla	r0, r0, sl, r9
 8016440:	b2d2      	uxtb	r2, r2
 8016442:	fb0c ec0a 	mla	ip, ip, sl, lr
 8016446:	b280      	uxth	r0, r0
 8016448:	fb02 120a 	mla	r2, r2, sl, r1
 801644c:	fa1f fc8c 	uxth.w	ip, ip
 8016450:	b292      	uxth	r2, r2
 8016452:	f100 0b01 	add.w	fp, r0, #1
 8016456:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801645a:	1c50      	adds	r0, r2, #1
 801645c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8016460:	f10c 0201 	add.w	r2, ip, #1
 8016464:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 8016468:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801646c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8016470:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016474:	ea40 0b0b 	orr.w	fp, r0, fp
 8016478:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801647c:	ea4b 0b0c 	orr.w	fp, fp, ip
 8016480:	f824 bb02 	strh.w	fp, [r4], #2
 8016484:	e7ce      	b.n	8016424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 8016486:	429c      	cmp	r4, r3
 8016488:	f4bf af30 	bcs.w	80162ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801648c:	f824 2b02 	strh.w	r2, [r4], #2
 8016490:	e7f9      	b.n	8016486 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 8016492:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8016496:	4657      	mov	r7, sl
 8016498:	464d      	mov	r5, r9
 801649a:	e727      	b.n	80162ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801649c:	2300      	movs	r3, #0
 801649e:	e716      	b.n	80162ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 80164a0:	44bb      	add	fp, r7
 80164a2:	4657      	mov	r7, sl
 80164a4:	e724      	b.n	80162f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 80164a6:	bf00      	nop
 80164a8:	20001b6c 	.word	0x20001b6c
 80164ac:	20001b66 	.word	0x20001b66
 80164b0:	20000260 	.word	0x20000260
 80164b4:	2a01      	cmp	r2, #1
 80164b6:	d12a      	bne.n	801650e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 80164b8:	f3c6 0104 	ubfx	r1, r6, #0, #5
 80164bc:	f003 0203 	and.w	r2, r3, #3
 80164c0:	f3c3 0081 	ubfx	r0, r3, #2, #2
 80164c4:	f3c3 1301 	ubfx	r3, r3, #4, #2
 80164c8:	3902      	subs	r1, #2
 80164ca:	3802      	subs	r0, #2
 80164cc:	3b02      	subs	r3, #2
 80164ce:	4411      	add	r1, r2
 80164d0:	f001 011f 	and.w	r1, r1, #31
 80164d4:	f361 0604 	bfi	r6, r1, #0, #5
 80164d8:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 80164dc:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 80164e0:	f360 164a 	bfi	r6, r0, #5, #6
 80164e4:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80164e8:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 80164ec:	f002 031f 	and.w	r3, r2, #31
 80164f0:	2203      	movs	r2, #3
 80164f2:	f363 26cf 	bfi	r6, r3, #11, #5
 80164f6:	fb12 0303 	smlabb	r3, r2, r3, r0
 80164fa:	2207      	movs	r2, #7
 80164fc:	fb12 3301 	smlabb	r3, r2, r1, r3
 8016500:	9a03      	ldr	r2, [sp, #12]
 8016502:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8016506:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801650a:	809e      	strh	r6, [r3, #4]
 801650c:	e701      	b.n	8016312 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801650e:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 8016512:	4647      	mov	r7, r8
 8016514:	45a8      	cmp	r8, r5
 8016516:	bfa8      	it	ge
 8016518:	462f      	movge	r7, r5
 801651a:	2a02      	cmp	r2, #2
 801651c:	d154      	bne.n	80165c8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801651e:	9b01      	ldr	r3, [sp, #4]
 8016520:	2bff      	cmp	r3, #255	@ 0xff
 8016522:	d01a      	beq.n	801655a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 8016524:	eb0b 0307 	add.w	r3, fp, r7
 8016528:	2b40      	cmp	r3, #64	@ 0x40
 801652a:	dd16      	ble.n	801655a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801652c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 8016530:	9800      	ldr	r0, [sp, #0]
 8016532:	4649      	mov	r1, r9
 8016534:	f7f6 fa1c 	bl	800c970 <_ZN8touchgfx5paint9flushLineEPmi>
 8016538:	465a      	mov	r2, fp
 801653a:	9b01      	ldr	r3, [sp, #4]
 801653c:	4620      	mov	r0, r4
 801653e:	9900      	ldr	r1, [sp, #0]
 8016540:	444c      	add	r4, r9
 8016542:	f7f6 fa2f 	bl	800c9a4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016546:	9b00      	ldr	r3, [sp, #0]
 8016548:	f04f 0b00 	mov.w	fp, #0
 801654c:	461a      	mov	r2, r3
 801654e:	4b6a      	ldr	r3, [pc, #424]	@ (80166f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 8016550:	429a      	cmp	r2, r3
 8016552:	bf0c      	ite	eq
 8016554:	4b69      	ldreq	r3, [pc, #420]	@ (80166fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 8016556:	4b68      	ldrne	r3, [pc, #416]	@ (80166f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 8016558:	9300      	str	r3, [sp, #0]
 801655a:	4652      	mov	r2, sl
 801655c:	2100      	movs	r1, #0
 801655e:	42a9      	cmp	r1, r5
 8016560:	da2c      	bge.n	80165bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 8016562:	4694      	mov	ip, r2
 8016564:	f04f 0903 	mov.w	r9, #3
 8016568:	42b9      	cmp	r1, r7
 801656a:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801656e:	7852      	ldrb	r2, [r2, #1]
 8016570:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8016574:	f3c3 1045 	ubfx	r0, r3, #5, #6
 8016578:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801657c:	f003 021f 	and.w	r2, r3, #31
 8016580:	461e      	mov	r6, r3
 8016582:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8016586:	fb19 000e 	smlabb	r0, r9, lr, r0
 801658a:	f04f 0e07 	mov.w	lr, #7
 801658e:	fb1e 0002 	smlabb	r0, lr, r2, r0
 8016592:	9a03      	ldr	r2, [sp, #12]
 8016594:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 8016598:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801659c:	8083      	strh	r3, [r0, #4]
 801659e:	da0a      	bge.n	80165b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 80165a0:	9a01      	ldr	r2, [sp, #4]
 80165a2:	2aff      	cmp	r2, #255	@ 0xff
 80165a4:	bf13      	iteet	ne
 80165a6:	9a00      	ldrne	r2, [sp, #0]
 80165a8:	8023      	strheq	r3, [r4, #0]
 80165aa:	3402      	addeq	r4, #2
 80165ac:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 80165b0:	bf18      	it	ne
 80165b2:	f10b 0b01 	addne.w	fp, fp, #1
 80165b6:	3101      	adds	r1, #1
 80165b8:	4662      	mov	r2, ip
 80165ba:	e7d0      	b.n	801655e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 80165bc:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80165c0:	eba8 0807 	sub.w	r8, r8, r7
 80165c4:	1bed      	subs	r5, r5, r7
 80165c6:	e76c      	b.n	80164a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 80165c8:	9b01      	ldr	r3, [sp, #4]
 80165ca:	eba8 0807 	sub.w	r8, r8, r7
 80165ce:	1bed      	subs	r5, r5, r7
 80165d0:	fa1f f986 	uxth.w	r9, r6
 80165d4:	2bff      	cmp	r3, #255	@ 0xff
 80165d6:	d027      	beq.n	8016628 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
 80165d8:	eb0b 0307 	add.w	r3, fp, r7
 80165dc:	2b40      	cmp	r3, #64	@ 0x40
 80165de:	dd18      	ble.n	8016612 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
 80165e0:	ea4f 034b 	mov.w	r3, fp, lsl #1
 80165e4:	9800      	ldr	r0, [sp, #0]
 80165e6:	4619      	mov	r1, r3
 80165e8:	930c      	str	r3, [sp, #48]	@ 0x30
 80165ea:	f7f6 f9c1 	bl	800c970 <_ZN8touchgfx5paint9flushLineEPmi>
 80165ee:	465a      	mov	r2, fp
 80165f0:	9b01      	ldr	r3, [sp, #4]
 80165f2:	4620      	mov	r0, r4
 80165f4:	9900      	ldr	r1, [sp, #0]
 80165f6:	f04f 0b00 	mov.w	fp, #0
 80165fa:	f7f6 f9d3 	bl	800c9a4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 80165fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8016600:	441c      	add	r4, r3
 8016602:	9b00      	ldr	r3, [sp, #0]
 8016604:	461a      	mov	r2, r3
 8016606:	4b3c      	ldr	r3, [pc, #240]	@ (80166f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 8016608:	429a      	cmp	r2, r3
 801660a:	bf0c      	ite	eq
 801660c:	4b3b      	ldreq	r3, [pc, #236]	@ (80166fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801660e:	4b3a      	ldrne	r3, [pc, #232]	@ (80166f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 8016610:	9300      	str	r3, [sp, #0]
 8016612:	9b00      	ldr	r3, [sp, #0]
 8016614:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 8016618:	463b      	mov	r3, r7
 801661a:	2b00      	cmp	r3, #0
 801661c:	f43f af40 	beq.w	80164a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 8016620:	f822 9b02 	strh.w	r9, [r2], #2
 8016624:	3b01      	subs	r3, #1
 8016626:	e7f8      	b.n	801661a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
 8016628:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801662c:	42a7      	cmp	r7, r4
 801662e:	f67f af38 	bls.w	80164a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 8016632:	f824 9b02 	strh.w	r9, [r4], #2
 8016636:	e7f9      	b.n	801662c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
 8016638:	f1bb 0f00 	cmp.w	fp, #0
 801663c:	d00c      	beq.n	8016658 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
 801663e:	ea4f 084b 	mov.w	r8, fp, lsl #1
 8016642:	9800      	ldr	r0, [sp, #0]
 8016644:	4641      	mov	r1, r8
 8016646:	f7f6 f993 	bl	800c970 <_ZN8touchgfx5paint9flushLineEPmi>
 801664a:	4620      	mov	r0, r4
 801664c:	4444      	add	r4, r8
 801664e:	9b01      	ldr	r3, [sp, #4]
 8016650:	465a      	mov	r2, fp
 8016652:	9900      	ldr	r1, [sp, #0]
 8016654:	f7f6 f9a6 	bl	800c9a4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 8016658:	4b29      	ldr	r3, [pc, #164]	@ (8016700 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801665a:	9a02      	ldr	r2, [sp, #8]
 801665c:	881b      	ldrh	r3, [r3, #0]
 801665e:	1a9b      	subs	r3, r3, r2
 8016660:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016664:	9b06      	ldr	r3, [sp, #24]
 8016666:	3301      	adds	r3, #1
 8016668:	9306      	str	r3, [sp, #24]
 801666a:	9a06      	ldr	r2, [sp, #24]
 801666c:	9b04      	ldr	r3, [sp, #16]
 801666e:	4293      	cmp	r3, r2
 8016670:	d120      	bne.n	80166b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
 8016672:	9b05      	ldr	r3, [sp, #20]
 8016674:	2100      	movs	r1, #0
 8016676:	9a05      	ldr	r2, [sp, #20]
 8016678:	f04f 0600 	mov.w	r6, #0
 801667c:	f103 0801 	add.w	r8, r3, #1
 8016680:	9b08      	ldr	r3, [sp, #32]
 8016682:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 8016686:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801668a:	2280      	movs	r2, #128	@ 0x80
 801668c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8016690:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8016692:	ba3f      	rev	r7, r7
 8016694:	eba9 0905 	sub.w	r9, r9, r5
 8016698:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801669a:	441f      	add	r7, r3
 801669c:	f00a fd01 	bl	80210a2 <memset>
 80166a0:	fa1f f989 	uxth.w	r9, r9
 80166a4:	2300      	movs	r3, #0
 80166a6:	f8cd 8014 	str.w	r8, [sp, #20]
 80166aa:	9306      	str	r3, [sp, #24]
 80166ac:	f7f6 f948 	bl	800c940 <_ZN8touchgfx5paint8tearDownEv>
 80166b0:	46ba      	mov	sl, r7
 80166b2:	e58b      	b.n	80161cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 80166b4:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 80166b8:	9b02      	ldr	r3, [sp, #8]
 80166ba:	eba9 0903 	sub.w	r9, r9, r3
 80166be:	eba9 0505 	sub.w	r5, r9, r5
 80166c2:	fa1f f985 	uxth.w	r9, r5
 80166c6:	e7f1      	b.n	80166ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
 80166c8:	4b0e      	ldr	r3, [pc, #56]	@ (8016704 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 80166ca:	6818      	ldr	r0, [r3, #0]
 80166cc:	6803      	ldr	r3, [r0, #0]
 80166ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80166d0:	4798      	blx	r3
 80166d2:	b013      	add	sp, #76	@ 0x4c
 80166d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80166d8:	9b02      	ldr	r3, [sp, #8]
 80166da:	9a02      	ldr	r2, [sp, #8]
 80166dc:	42ab      	cmp	r3, r5
 80166de:	bfa8      	it	ge
 80166e0:	462b      	movge	r3, r5
 80166e2:	eba2 0803 	sub.w	r8, r2, r3
 80166e6:	1aed      	subs	r5, r5, r3
 80166e8:	e627      	b.n	801633a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 80166ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80166ee:	fa1f f986 	uxth.w	r9, r6
 80166f2:	2500      	movs	r5, #0
 80166f4:	2701      	movs	r7, #1
 80166f6:	e76f      	b.n	80165d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
 80166f8:	20000260 	.word	0x20000260
 80166fc:	20000360 	.word	0x20000360
 8016700:	20001b66 	.word	0x20001b66
 8016704:	20001b6c 	.word	0x20001b6c

08016708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016708:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801670c:	b08f      	sub	sp, #60	@ 0x3c
 801670e:	461c      	mov	r4, r3
 8016710:	460f      	mov	r7, r1
 8016712:	9203      	str	r2, [sp, #12]
 8016714:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8016718:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801671a:	9202      	str	r2, [sp, #8]
 801671c:	2a00      	cmp	r2, #0
 801671e:	f000 8128 	beq.w	8016972 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 8016722:	6820      	ldr	r0, [r4, #0]
 8016724:	aa0a      	add	r2, sp, #40	@ 0x28
 8016726:	6861      	ldr	r1, [r4, #4]
 8016728:	c203      	stmia	r2!, {r0, r1}
 801672a:	6818      	ldr	r0, [r3, #0]
 801672c:	aa0c      	add	r2, sp, #48	@ 0x30
 801672e:	6859      	ldr	r1, [r3, #4]
 8016730:	c203      	stmia	r2!, {r0, r1}
 8016732:	a80a      	add	r0, sp, #40	@ 0x28
 8016734:	f7f9 f964 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016738:	4621      	mov	r1, r4
 801673a:	a80c      	add	r0, sp, #48	@ 0x30
 801673c:	f7f9 f988 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016740:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 8016744:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 8016748:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801674c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 8016750:	bfdb      	ittet	le
 8016752:	b2b3      	uxthle	r3, r6
 8016754:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 8016758:	2301      	movgt	r3, #1
 801675a:	fb92 f3f3 	sdivle	r3, r2, r3
 801675e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8016762:	441d      	add	r5, r3
 8016764:	fb92 f1f3 	sdiv	r1, r2, r3
 8016768:	fa1f fc81 	uxth.w	ip, r1
 801676c:	3d01      	subs	r5, #1
 801676e:	fb0c 2413 	mls	r4, ip, r3, r2
 8016772:	4661      	mov	r1, ip
 8016774:	fb14 f406 	smulbb	r4, r4, r6
 8016778:	4404      	add	r4, r0
 801677a:	fb95 f5f3 	sdiv	r5, r5, r3
 801677e:	b2a4      	uxth	r4, r4
 8016780:	b121      	cbz	r1, 801678c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 8016782:	9b03      	ldr	r3, [sp, #12]
 8016784:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016788:	ba1b      	rev	r3, r3
 801678a:	441f      	add	r7, r3
 801678c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8016790:	b2ad      	uxth	r5, r5
 8016792:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8016796:	4418      	add	r0, r3
 8016798:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801679c:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 80167a0:	00ad      	lsls	r5, r5, #2
 80167a2:	441a      	add	r2, r3
 80167a4:	4b74      	ldr	r3, [pc, #464]	@ (8016978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 80167a6:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 80167aa:	6818      	ldr	r0, [r3, #0]
 80167ac:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 80167b0:	6803      	ldr	r3, [r0, #0]
 80167b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80167b4:	4798      	blx	r3
 80167b6:	4a71      	ldr	r2, [pc, #452]	@ (801697c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 80167b8:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80167bc:	2c00      	cmp	r4, #0
 80167be:	8813      	ldrh	r3, [r2, #0]
 80167c0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 80167c4:	bf0c      	ite	eq
 80167c6:	46c8      	moveq	r8, r9
 80167c8:	f04f 0800 	movne.w	r8, #0
 80167cc:	9209      	str	r2, [sp, #36]	@ 0x24
 80167ce:	fb03 c101 	mla	r1, r3, r1, ip
 80167d2:	4373      	muls	r3, r6
 80167d4:	fa1f f888 	uxth.w	r8, r8
 80167d8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80167dc:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80167e0:	9304      	str	r3, [sp, #16]
 80167e2:	1d2b      	adds	r3, r5, #4
 80167e4:	9305      	str	r3, [sp, #20]
 80167e6:	2300      	movs	r3, #0
 80167e8:	9301      	str	r3, [sp, #4]
 80167ea:	9a04      	ldr	r2, [sp, #16]
 80167ec:	4282      	cmp	r2, r0
 80167ee:	f240 80bb 	bls.w	8016968 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 80167f2:	b95b      	cbnz	r3, 801680c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 80167f4:	783a      	ldrb	r2, [r7, #0]
 80167f6:	0993      	lsrs	r3, r2, #6
 80167f8:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80167fc:	9201      	str	r2, [sp, #4]
 80167fe:	1e5a      	subs	r2, r3, #1
 8016800:	2a02      	cmp	r2, #2
 8016802:	bf8d      	iteet	hi
 8016804:	787b      	ldrbhi	r3, [r7, #1]
 8016806:	3701      	addls	r7, #1
 8016808:	b29b      	uxthls	r3, r3
 801680a:	3702      	addhi	r7, #2
 801680c:	b184      	cbz	r4, 8016830 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801680e:	429c      	cmp	r4, r3
 8016810:	bf91      	iteee	ls
 8016812:	1b1c      	subls	r4, r3, r4
 8016814:	1ae4      	subhi	r4, r4, r3
 8016816:	46c4      	movhi	ip, r8
 8016818:	f04f 0a00 	movhi.w	sl, #0
 801681c:	bf9b      	ittet	ls
 801681e:	fa1f fa84 	uxthls.w	sl, r4
 8016822:	2400      	movls	r4, #0
 8016824:	b2a4      	uxthhi	r4, r4
 8016826:	fa1f fc89 	uxthls.w	ip, r9
 801682a:	4653      	mov	r3, sl
 801682c:	46e0      	mov	r8, ip
 801682e:	e7dc      	b.n	80167ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 8016830:	2204      	movs	r2, #4
 8016832:	9905      	ldr	r1, [sp, #20]
 8016834:	4543      	cmp	r3, r8
 8016836:	4615      	mov	r5, r2
 8016838:	9a01      	ldr	r2, [sp, #4]
 801683a:	bf24      	itt	cs
 801683c:	eba3 0a08 	subcs.w	sl, r3, r8
 8016840:	46c6      	movcs	lr, r8
 8016842:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016846:	9903      	ldr	r1, [sp, #12]
 8016848:	bf3c      	itt	cc
 801684a:	eba8 0c03 	subcc.w	ip, r8, r3
 801684e:	469e      	movcc	lr, r3
 8016850:	588a      	ldr	r2, [r1, r2]
 8016852:	bf26      	itte	cs
 8016854:	fa1f fa8a 	uxthcs.w	sl, sl
 8016858:	46a4      	movcs	ip, r4
 801685a:	fa1f fc8c 	uxthcc.w	ip, ip
 801685e:	ea4f 6112 	mov.w	r1, r2, lsr #24
 8016862:	bf38      	it	cc
 8016864:	46a2      	movcc	sl, r4
 8016866:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801686a:	2900      	cmp	r1, #0
 801686c:	d066      	beq.n	801693c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801686e:	29ff      	cmp	r1, #255	@ 0xff
 8016870:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8016874:	d114      	bne.n	80168a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 8016876:	9d02      	ldr	r5, [sp, #8]
 8016878:	2dff      	cmp	r5, #255	@ 0xff
 801687a:	d111      	bne.n	80168a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801687c:	0951      	lsrs	r1, r2, #5
 801687e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8016882:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016886:	4486      	add	lr, r0
 8016888:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801688c:	f026 0607 	bic.w	r6, r6, #7
 8016890:	430e      	orrs	r6, r1
 8016892:	4316      	orrs	r6, r2
 8016894:	b2b6      	uxth	r6, r6
 8016896:	4586      	cmp	lr, r0
 8016898:	d051      	beq.n	801693e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801689a:	f820 6b02 	strh.w	r6, [r0], #2
 801689e:	e7fa      	b.n	8016896 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 80168a0:	9d02      	ldr	r5, [sp, #8]
 80168a2:	b2f6      	uxtb	r6, r6
 80168a4:	4486      	add	lr, r0
 80168a6:	4369      	muls	r1, r5
 80168a8:	1c4d      	adds	r5, r1, #1
 80168aa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 80168ae:	f3c2 4107 	ubfx	r1, r2, #16, #8
 80168b2:	b2d2      	uxtb	r2, r2
 80168b4:	122d      	asrs	r5, r5, #8
 80168b6:	ea6f 0b05 	mvn.w	fp, r5
 80168ba:	b2ad      	uxth	r5, r5
 80168bc:	fb11 f105 	smulbb	r1, r1, r5
 80168c0:	fa5f fb8b 	uxtb.w	fp, fp
 80168c4:	fb16 f605 	smulbb	r6, r6, r5
 80168c8:	fb12 f205 	smulbb	r2, r2, r5
 80168cc:	b289      	uxth	r1, r1
 80168ce:	b2b6      	uxth	r6, r6
 80168d0:	b292      	uxth	r2, r2
 80168d2:	9106      	str	r1, [sp, #24]
 80168d4:	9607      	str	r6, [sp, #28]
 80168d6:	9208      	str	r2, [sp, #32]
 80168d8:	4586      	cmp	lr, r0
 80168da:	d030      	beq.n	801693e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 80168dc:	8802      	ldrh	r2, [r0, #0]
 80168de:	9906      	ldr	r1, [sp, #24]
 80168e0:	1216      	asrs	r6, r2, #8
 80168e2:	10d5      	asrs	r5, r2, #3
 80168e4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80168e8:	00d2      	lsls	r2, r2, #3
 80168ea:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80168ee:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80168f2:	b2d2      	uxtb	r2, r2
 80168f4:	fb06 160b 	mla	r6, r6, fp, r1
 80168f8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80168fc:	9907      	ldr	r1, [sp, #28]
 80168fe:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016902:	b2b6      	uxth	r6, r6
 8016904:	fb05 150b 	mla	r5, r5, fp, r1
 8016908:	9908      	ldr	r1, [sp, #32]
 801690a:	fb02 120b 	mla	r2, r2, fp, r1
 801690e:	1c71      	adds	r1, r6, #1
 8016910:	b2ad      	uxth	r5, r5
 8016912:	b292      	uxth	r2, r2
 8016914:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 8016918:	1c51      	adds	r1, r2, #1
 801691a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801691e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016922:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016926:	4316      	orrs	r6, r2
 8016928:	1c6a      	adds	r2, r5, #1
 801692a:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801692e:	096d      	lsrs	r5, r5, #5
 8016930:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016934:	432e      	orrs	r6, r5
 8016936:	f820 6b02 	strh.w	r6, [r0], #2
 801693a:	e7cd      	b.n	80168d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801693c:	4470      	add	r0, lr
 801693e:	4543      	cmp	r3, r8
 8016940:	f4ff af73 	bcc.w	801682a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8016944:	fa1f fc89 	uxth.w	ip, r9
 8016948:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801694c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801694e:	eba4 040c 	sub.w	r4, r4, ip
 8016952:	881b      	ldrh	r3, [r3, #0]
 8016954:	b2a4      	uxth	r4, r4
 8016956:	eba3 0309 	sub.w	r3, r3, r9
 801695a:	2c00      	cmp	r4, #0
 801695c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016960:	bf18      	it	ne
 8016962:	f04f 0c00 	movne.w	ip, #0
 8016966:	e760      	b.n	801682a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8016968:	4b03      	ldr	r3, [pc, #12]	@ (8016978 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801696a:	6818      	ldr	r0, [r3, #0]
 801696c:	6803      	ldr	r3, [r0, #0]
 801696e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016970:	4798      	blx	r3
 8016972:	b00f      	add	sp, #60	@ 0x3c
 8016974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016978:	20001b6c 	.word	0x20001b6c
 801697c:	20001b66 	.word	0x20001b66

08016980 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016980:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016984:	b093      	sub	sp, #76	@ 0x4c
 8016986:	461c      	mov	r4, r3
 8016988:	9205      	str	r2, [sp, #20]
 801698a:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801698e:	9101      	str	r1, [sp, #4]
 8016990:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8016992:	9202      	str	r2, [sp, #8]
 8016994:	2a00      	cmp	r2, #0
 8016996:	f000 812e 	beq.w	8016bf6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801699a:	6820      	ldr	r0, [r4, #0]
 801699c:	aa0e      	add	r2, sp, #56	@ 0x38
 801699e:	6861      	ldr	r1, [r4, #4]
 80169a0:	c203      	stmia	r2!, {r0, r1}
 80169a2:	6818      	ldr	r0, [r3, #0]
 80169a4:	aa10      	add	r2, sp, #64	@ 0x40
 80169a6:	6859      	ldr	r1, [r3, #4]
 80169a8:	c203      	stmia	r2!, {r0, r1}
 80169aa:	a80e      	add	r0, sp, #56	@ 0x38
 80169ac:	f7f9 f828 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80169b0:	4621      	mov	r1, r4
 80169b2:	a810      	add	r0, sp, #64	@ 0x40
 80169b4:	f7f9 f84c 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80169b8:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 80169bc:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 80169c0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 80169c4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 80169c8:	bfdb      	ittet	le
 80169ca:	b2b3      	uxthle	r3, r6
 80169cc:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 80169d0:	2301      	movgt	r3, #1
 80169d2:	fb92 f3f3 	sdivle	r3, r2, r3
 80169d6:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 80169da:	441d      	add	r5, r3
 80169dc:	fb92 f1f3 	sdiv	r1, r2, r3
 80169e0:	fa1f fc81 	uxth.w	ip, r1
 80169e4:	3d01      	subs	r5, #1
 80169e6:	fb0c 2413 	mls	r4, ip, r3, r2
 80169ea:	4661      	mov	r1, ip
 80169ec:	fb14 f406 	smulbb	r4, r4, r6
 80169f0:	4404      	add	r4, r0
 80169f2:	fb95 f5f3 	sdiv	r5, r5, r3
 80169f6:	b2a4      	uxth	r4, r4
 80169f8:	b131      	cbz	r1, 8016a08 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 80169fa:	9b05      	ldr	r3, [sp, #20]
 80169fc:	9901      	ldr	r1, [sp, #4]
 80169fe:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 8016a02:	ba1b      	rev	r3, r3
 8016a04:	4419      	add	r1, r3
 8016a06:	9101      	str	r1, [sp, #4]
 8016a08:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8016a0c:	b2ad      	uxth	r5, r5
 8016a0e:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 8016a12:	4418      	add	r0, r3
 8016a14:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 8016a18:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 8016a1c:	00ad      	lsls	r5, r5, #2
 8016a1e:	441a      	add	r2, r3
 8016a20:	4b76      	ldr	r3, [pc, #472]	@ (8016bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016a22:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 8016a26:	6818      	ldr	r0, [r3, #0]
 8016a28:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8016a2c:	6803      	ldr	r3, [r0, #0]
 8016a2e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016a30:	4798      	blx	r3
 8016a32:	4973      	ldr	r1, [pc, #460]	@ (8016c00 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 8016a34:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 8016a38:	2c00      	cmp	r4, #0
 8016a3a:	880b      	ldrh	r3, [r1, #0]
 8016a3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8016a40:	910d      	str	r1, [sp, #52]	@ 0x34
 8016a42:	fb03 c202 	mla	r2, r3, r2, ip
 8016a46:	bf08      	it	eq
 8016a48:	46dc      	moveq	ip, fp
 8016a4a:	fb03 f306 	mul.w	r3, r3, r6
 8016a4e:	bf18      	it	ne
 8016a50:	f04f 0c00 	movne.w	ip, #0
 8016a54:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8016a58:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8016a5c:	fa1f fc8c 	uxth.w	ip, ip
 8016a60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016a64:	9106      	str	r1, [sp, #24]
 8016a66:	9308      	str	r3, [sp, #32]
 8016a68:	1d2b      	adds	r3, r5, #4
 8016a6a:	9309      	str	r3, [sp, #36]	@ 0x24
 8016a6c:	9b02      	ldr	r3, [sp, #8]
 8016a6e:	43da      	mvns	r2, r3
 8016a70:	2300      	movs	r3, #0
 8016a72:	b2d2      	uxtb	r2, r2
 8016a74:	9303      	str	r3, [sp, #12]
 8016a76:	9207      	str	r2, [sp, #28]
 8016a78:	9a08      	ldr	r2, [sp, #32]
 8016a7a:	4282      	cmp	r2, r0
 8016a7c:	f240 80b6 	bls.w	8016bec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 8016a80:	b963      	cbnz	r3, 8016a9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8016a82:	9b01      	ldr	r3, [sp, #4]
 8016a84:	781a      	ldrb	r2, [r3, #0]
 8016a86:	0993      	lsrs	r3, r2, #6
 8016a88:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 8016a8c:	9203      	str	r2, [sp, #12]
 8016a8e:	1e5a      	subs	r2, r3, #1
 8016a90:	2a02      	cmp	r2, #2
 8016a92:	d815      	bhi.n	8016ac0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 8016a94:	9a01      	ldr	r2, [sp, #4]
 8016a96:	b29b      	uxth	r3, r3
 8016a98:	3201      	adds	r2, #1
 8016a9a:	9201      	str	r2, [sp, #4]
 8016a9c:	b1b4      	cbz	r4, 8016acc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 8016a9e:	429c      	cmp	r4, r3
 8016aa0:	bf91      	iteee	ls
 8016aa2:	1b1c      	subls	r4, r3, r4
 8016aa4:	1ae4      	subhi	r4, r4, r3
 8016aa6:	4666      	movhi	r6, ip
 8016aa8:	f04f 0800 	movhi.w	r8, #0
 8016aac:	bf9b      	ittet	ls
 8016aae:	fa1f f884 	uxthls.w	r8, r4
 8016ab2:	2400      	movls	r4, #0
 8016ab4:	b2a4      	uxthhi	r4, r4
 8016ab6:	fa1f f68b 	uxthls.w	r6, fp
 8016aba:	4643      	mov	r3, r8
 8016abc:	46b4      	mov	ip, r6
 8016abe:	e7db      	b.n	8016a78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 8016ac0:	9a01      	ldr	r2, [sp, #4]
 8016ac2:	9b01      	ldr	r3, [sp, #4]
 8016ac4:	3202      	adds	r2, #2
 8016ac6:	785b      	ldrb	r3, [r3, #1]
 8016ac8:	9201      	str	r2, [sp, #4]
 8016aca:	e7e7      	b.n	8016a9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 8016acc:	2203      	movs	r2, #3
 8016ace:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8016ad0:	4563      	cmp	r3, ip
 8016ad2:	4615      	mov	r5, r2
 8016ad4:	9a03      	ldr	r2, [sp, #12]
 8016ad6:	bf2c      	ite	cs
 8016ad8:	eba3 080c 	subcs.w	r8, r3, ip
 8016adc:	ebac 0603 	subcc.w	r6, ip, r3
 8016ae0:	fb15 1202 	smlabb	r2, r5, r2, r1
 8016ae4:	9905      	ldr	r1, [sp, #20]
 8016ae6:	bf24      	itt	cs
 8016ae8:	fa1f f888 	uxthcs.w	r8, r8
 8016aec:	46e1      	movcs	r9, ip
 8016aee:	eb01 0502 	add.w	r5, r1, r2
 8016af2:	9902      	ldr	r1, [sp, #8]
 8016af4:	bf2f      	iteee	cs
 8016af6:	4626      	movcs	r6, r4
 8016af8:	b2b6      	uxthcc	r6, r6
 8016afa:	4699      	movcc	r9, r3
 8016afc:	46a0      	movcc	r8, r4
 8016afe:	29ff      	cmp	r1, #255	@ 0xff
 8016b00:	d04a      	beq.n	8016b98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 8016b02:	9f06      	ldr	r7, [sp, #24]
 8016b04:	46ca      	mov	sl, r9
 8016b06:	78a9      	ldrb	r1, [r5, #2]
 8016b08:	9004      	str	r0, [sp, #16]
 8016b0a:	4379      	muls	r1, r7
 8016b0c:	910a      	str	r1, [sp, #40]	@ 0x28
 8016b0e:	7869      	ldrb	r1, [r5, #1]
 8016b10:	4379      	muls	r1, r7
 8016b12:	910b      	str	r1, [sp, #44]	@ 0x2c
 8016b14:	9905      	ldr	r1, [sp, #20]
 8016b16:	5c8a      	ldrb	r2, [r1, r2]
 8016b18:	437a      	muls	r2, r7
 8016b1a:	920c      	str	r2, [sp, #48]	@ 0x30
 8016b1c:	f1ba 0f00 	cmp.w	sl, #0
 8016b20:	d03d      	beq.n	8016b9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 8016b22:	9a04      	ldr	r2, [sp, #16]
 8016b24:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016b28:	9f07      	ldr	r7, [sp, #28]
 8016b2a:	8812      	ldrh	r2, [r2, #0]
 8016b2c:	fa1f fa8a 	uxth.w	sl, sl
 8016b30:	46be      	mov	lr, r7
 8016b32:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8016b34:	1215      	asrs	r5, r2, #8
 8016b36:	10d1      	asrs	r1, r2, #3
 8016b38:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8016b3c:	00d2      	lsls	r2, r2, #3
 8016b3e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8016b42:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8016b46:	b2d2      	uxtb	r2, r2
 8016b48:	fb05 750e 	mla	r5, r5, lr, r7
 8016b4c:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8016b50:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8016b52:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8016b56:	b2ad      	uxth	r5, r5
 8016b58:	fb01 710e 	mla	r1, r1, lr, r7
 8016b5c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8016b5e:	fb02 720e 	mla	r2, r2, lr, r7
 8016b62:	f105 0e01 	add.w	lr, r5, #1
 8016b66:	b289      	uxth	r1, r1
 8016b68:	b292      	uxth	r2, r2
 8016b6a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8016b6e:	f102 0e01 	add.w	lr, r2, #1
 8016b72:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8016b76:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 8016b7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016b7e:	4315      	orrs	r5, r2
 8016b80:	1c4a      	adds	r2, r1, #1
 8016b82:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016b86:	9a04      	ldr	r2, [sp, #16]
 8016b88:	0949      	lsrs	r1, r1, #5
 8016b8a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8016b8e:	430d      	orrs	r5, r1
 8016b90:	f822 5b02 	strh.w	r5, [r2], #2
 8016b94:	9204      	str	r2, [sp, #16]
 8016b96:	e7c1      	b.n	8016b1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 8016b98:	4649      	mov	r1, r9
 8016b9a:	4686      	mov	lr, r0
 8016b9c:	b999      	cbnz	r1, 8016bc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 8016b9e:	4563      	cmp	r3, ip
 8016ba0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 8016ba4:	d389      	bcc.n	8016aba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8016ba6:	fa1f f68b 	uxth.w	r6, fp
 8016baa:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 8016bae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016bb0:	1ba4      	subs	r4, r4, r6
 8016bb2:	881b      	ldrh	r3, [r3, #0]
 8016bb4:	b2a4      	uxth	r4, r4
 8016bb6:	eba3 030b 	sub.w	r3, r3, fp
 8016bba:	2c00      	cmp	r4, #0
 8016bbc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016bc0:	bf18      	it	ne
 8016bc2:	2600      	movne	r6, #0
 8016bc4:	e779      	b.n	8016aba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 8016bc6:	78aa      	ldrb	r2, [r5, #2]
 8016bc8:	3901      	subs	r1, #1
 8016bca:	4f0e      	ldr	r7, [pc, #56]	@ (8016c04 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 8016bcc:	b289      	uxth	r1, r1
 8016bce:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 8016bd2:	786a      	ldrb	r2, [r5, #1]
 8016bd4:	00d2      	lsls	r2, r2, #3
 8016bd6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016bda:	ea4a 0202 	orr.w	r2, sl, r2
 8016bde:	f895 a000 	ldrb.w	sl, [r5]
 8016be2:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 8016be6:	f82e 2b02 	strh.w	r2, [lr], #2
 8016bea:	e7d7      	b.n	8016b9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 8016bec:	4b03      	ldr	r3, [pc, #12]	@ (8016bfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 8016bee:	6818      	ldr	r0, [r3, #0]
 8016bf0:	6803      	ldr	r3, [r0, #0]
 8016bf2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016bf4:	4798      	blx	r3
 8016bf6:	b013      	add	sp, #76	@ 0x4c
 8016bf8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016bfc:	20001b6c 	.word	0x20001b6c
 8016c00:	20001b66 	.word	0x20001b66
 8016c04:	fffff800 	.word	0xfffff800

08016c08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8016c08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c0c:	b09d      	sub	sp, #116	@ 0x74
 8016c0e:	461c      	mov	r4, r3
 8016c10:	4683      	mov	fp, r0
 8016c12:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8016c14:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 8016c18:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 8016c1c:	920e      	str	r2, [sp, #56]	@ 0x38
 8016c1e:	2a00      	cmp	r2, #0
 8016c20:	f000 81e4 	beq.w	8016fec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 8016c24:	6820      	ldr	r0, [r4, #0]
 8016c26:	aa18      	add	r2, sp, #96	@ 0x60
 8016c28:	6861      	ldr	r1, [r4, #4]
 8016c2a:	c203      	stmia	r2!, {r0, r1}
 8016c2c:	6818      	ldr	r0, [r3, #0]
 8016c2e:	aa1a      	add	r2, sp, #104	@ 0x68
 8016c30:	6859      	ldr	r1, [r3, #4]
 8016c32:	c203      	stmia	r2!, {r0, r1}
 8016c34:	a818      	add	r0, sp, #96	@ 0x60
 8016c36:	f7f8 fee3 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016c3a:	4621      	mov	r1, r4
 8016c3c:	a81a      	add	r0, sp, #104	@ 0x68
 8016c3e:	f7f8 ff07 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016c42:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 8016c46:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 8016c4a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8016c4e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 8016c52:	bfdb      	ittet	le
 8016c54:	b29a      	uxthle	r2, r3
 8016c56:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 8016c5a:	2201      	movgt	r2, #1
 8016c5c:	fb91 f2f2 	sdivle	r2, r1, r2
 8016c60:	9202      	str	r2, [sp, #8]
 8016c62:	9802      	ldr	r0, [sp, #8]
 8016c64:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 8016c68:	9902      	ldr	r1, [sp, #8]
 8016c6a:	fb92 f0f0 	sdiv	r0, r2, r0
 8016c6e:	b280      	uxth	r0, r0
 8016c70:	440c      	add	r4, r1
 8016c72:	900f      	str	r0, [sp, #60]	@ 0x3c
 8016c74:	3c01      	subs	r4, #1
 8016c76:	9802      	ldr	r0, [sp, #8]
 8016c78:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8016c7a:	fb05 2510 	mls	r5, r5, r0, r2
 8016c7e:	fb94 f4f1 	sdiv	r4, r4, r1
 8016c82:	fb15 f503 	smulbb	r5, r5, r3
 8016c86:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 8016c8a:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 8016c8e:	3401      	adds	r4, #1
 8016c90:	440d      	add	r5, r1
 8016c92:	4419      	add	r1, r3
 8016c94:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 8016c98:	b2a4      	uxth	r4, r4
 8016c9a:	441a      	add	r2, r3
 8016c9c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8016ca0:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 8016ca4:	00a4      	lsls	r4, r4, #2
 8016ca6:	9306      	str	r3, [sp, #24]
 8016ca8:	b2ad      	uxth	r5, r5
 8016caa:	4bb3      	ldr	r3, [pc, #716]	@ (8016f78 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 8016cac:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 8016cb0:	6818      	ldr	r0, [r3, #0]
 8016cb2:	6803      	ldr	r3, [r0, #0]
 8016cb4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016cb6:	4798      	blx	r3
 8016cb8:	4bb0      	ldr	r3, [pc, #704]	@ (8016f7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 8016cba:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 8016cbe:	2d00      	cmp	r5, #0
 8016cc0:	881a      	ldrh	r2, [r3, #0]
 8016cc2:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 8016cc6:	fb02 f606 	mul.w	r6, r2, r6
 8016cca:	fb02 7101 	mla	r1, r2, r1, r7
 8016cce:	9316      	str	r3, [sp, #88]	@ 0x58
 8016cd0:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 8016cd4:	4baa      	ldr	r3, [pc, #680]	@ (8016f80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 8016cd6:	bf18      	it	ne
 8016cd8:	2100      	movne	r1, #0
 8016cda:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 8016cde:	eba3 030b 	sub.w	r3, r3, fp
 8016ce2:	920a      	str	r2, [sp, #40]	@ 0x28
 8016ce4:	f104 0204 	add.w	r2, r4, #4
 8016ce8:	9317      	str	r3, [sp, #92]	@ 0x5c
 8016cea:	9213      	str	r2, [sp, #76]	@ 0x4c
 8016cec:	9a06      	ldr	r2, [sp, #24]
 8016cee:	bf08      	it	eq
 8016cf0:	4611      	moveq	r1, r2
 8016cf2:	2200      	movs	r2, #0
 8016cf4:	b289      	uxth	r1, r1
 8016cf6:	920d      	str	r2, [sp, #52]	@ 0x34
 8016cf8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8016cfa:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016cfc:	fa12 f383 	uxtah	r3, r2, r3
 8016d00:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8016d02:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8016d06:	3304      	adds	r3, #4
 8016d08:	9308      	str	r3, [sp, #32]
 8016d0a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016d0c:	4543      	cmp	r3, r8
 8016d0e:	f240 8168 	bls.w	8016fe2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 8016d12:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 8016d16:	f04f 0e01 	mov.w	lr, #1
 8016d1a:	9a02      	ldr	r2, [sp, #8]
 8016d1c:	9808      	ldr	r0, [sp, #32]
 8016d1e:	fbb5 f3f3 	udiv	r3, r5, r3
 8016d22:	1ad3      	subs	r3, r2, r3
 8016d24:	7800      	ldrb	r0, [r0, #0]
 8016d26:	b29b      	uxth	r3, r3
 8016d28:	9010      	str	r0, [sp, #64]	@ 0x40
 8016d2a:	3001      	adds	r0, #1
 8016d2c:	9314      	str	r3, [sp, #80]	@ 0x50
 8016d2e:	9b08      	ldr	r3, [sp, #32]
 8016d30:	9007      	str	r0, [sp, #28]
 8016d32:	785a      	ldrb	r2, [r3, #1]
 8016d34:	789b      	ldrb	r3, [r3, #2]
 8016d36:	021b      	lsls	r3, r3, #8
 8016d38:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8016d3c:	9a08      	ldr	r2, [sp, #32]
 8016d3e:	78d2      	ldrb	r2, [r2, #3]
 8016d40:	4313      	orrs	r3, r2
 8016d42:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8016d44:	441a      	add	r2, r3
 8016d46:	1c50      	adds	r0, r2, #1
 8016d48:	7852      	ldrb	r2, [r2, #1]
 8016d4a:	9005      	str	r0, [sp, #20]
 8016d4c:	0212      	lsls	r2, r2, #8
 8016d4e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8016d50:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8016d54:	5cc3      	ldrb	r3, [r0, r3]
 8016d56:	431a      	orrs	r2, r3
 8016d58:	b293      	uxth	r3, r2
 8016d5a:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 8016d5e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8016d60:	2300      	movs	r3, #0
 8016d62:	9309      	str	r3, [sp, #36]	@ 0x24
 8016d64:	2301      	movs	r3, #1
 8016d66:	9301      	str	r3, [sp, #4]
 8016d68:	9304      	str	r3, [sp, #16]
 8016d6a:	2300      	movs	r3, #0
 8016d6c:	9303      	str	r3, [sp, #12]
 8016d6e:	2d00      	cmp	r5, #0
 8016d70:	d07d      	beq.n	8016e6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 8016d72:	45ae      	cmp	lr, r5
 8016d74:	d26c      	bcs.n	8016e50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 8016d76:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8016d78:	eba5 050e 	sub.w	r5, r5, lr
 8016d7c:	460c      	mov	r4, r1
 8016d7e:	4543      	cmp	r3, r8
 8016d80:	b2ad      	uxth	r5, r5
 8016d82:	d802      	bhi.n	8016d8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 8016d84:	e071      	b.n	8016e6a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 8016d86:	2b00      	cmp	r3, #0
 8016d88:	d15d      	bne.n	8016e46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 8016d8a:	9b05      	ldr	r3, [sp, #20]
 8016d8c:	9a04      	ldr	r2, [sp, #16]
 8016d8e:	785b      	ldrb	r3, [r3, #1]
 8016d90:	f1c2 0207 	rsb	r2, r2, #7
 8016d94:	9904      	ldr	r1, [sp, #16]
 8016d96:	4093      	lsls	r3, r2
 8016d98:	005b      	lsls	r3, r3, #1
 8016d9a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 8016d9e:	9b05      	ldr	r3, [sp, #20]
 8016da0:	781b      	ldrb	r3, [r3, #0]
 8016da2:	410b      	asrs	r3, r1
 8016da4:	3101      	adds	r1, #1
 8016da6:	b2c9      	uxtb	r1, r1
 8016da8:	b2db      	uxtb	r3, r3
 8016daa:	2908      	cmp	r1, #8
 8016dac:	9104      	str	r1, [sp, #16]
 8016dae:	9905      	ldr	r1, [sp, #20]
 8016db0:	ea43 0302 	orr.w	r3, r3, r2
 8016db4:	bf0c      	ite	eq
 8016db6:	3102      	addeq	r1, #2
 8016db8:	3101      	addne	r1, #1
 8016dba:	b29a      	uxth	r2, r3
 8016dbc:	bf05      	ittet	eq
 8016dbe:	9105      	streq	r1, [sp, #20]
 8016dc0:	2100      	moveq	r1, #0
 8016dc2:	9105      	strne	r1, [sp, #20]
 8016dc4:	9104      	streq	r1, [sp, #16]
 8016dc6:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8016dc8:	4291      	cmp	r1, r2
 8016dca:	d30a      	bcc.n	8016de2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 8016dcc:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 8016dd0:	2301      	movs	r3, #1
 8016dd2:	9907      	ldr	r1, [sp, #28]
 8016dd4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 8016dd8:	d30f      	bcc.n	8016dfa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 8016dda:	2100      	movs	r1, #0
 8016ddc:	9301      	str	r3, [sp, #4]
 8016dde:	9103      	str	r1, [sp, #12]
 8016de0:	e032      	b.n	8016e48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 8016de2:	9b07      	ldr	r3, [sp, #28]
 8016de4:	429a      	cmp	r2, r3
 8016de6:	d318      	bcc.n	8016e1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 8016de8:	9b01      	ldr	r3, [sp, #4]
 8016dea:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 8016dee:	445b      	add	r3, fp
 8016df0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 8016df4:	9b01      	ldr	r3, [sp, #4]
 8016df6:	3301      	adds	r3, #1
 8016df8:	b29b      	uxth	r3, r3
 8016dfa:	9907      	ldr	r1, [sp, #28]
 8016dfc:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 8016e00:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016e04:	7108      	strb	r0, [r1, #4]
 8016e06:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8016e08:	80c8      	strh	r0, [r1, #6]
 8016e0a:	9801      	ldr	r0, [sp, #4]
 8016e0c:	3001      	adds	r0, #1
 8016e0e:	7148      	strb	r0, [r1, #5]
 8016e10:	9907      	ldr	r1, [sp, #28]
 8016e12:	3101      	adds	r1, #1
 8016e14:	b289      	uxth	r1, r1
 8016e16:	9107      	str	r1, [sp, #28]
 8016e18:	e7df      	b.n	8016dda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 8016e1a:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 8016e1e:	4611      	mov	r1, r2
 8016e20:	795b      	ldrb	r3, [r3, #5]
 8016e22:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 8016e26:	4458      	add	r0, fp
 8016e28:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 8016e2a:	4406      	add	r6, r0
 8016e2c:	2e00      	cmp	r6, #0
 8016e2e:	dd06      	ble.n	8016e3e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 8016e30:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 8016e34:	790e      	ldrb	r6, [r1, #4]
 8016e36:	f800 6d01 	strb.w	r6, [r0, #-1]!
 8016e3a:	88c9      	ldrh	r1, [r1, #6]
 8016e3c:	e7f4      	b.n	8016e28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 8016e3e:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 8016e42:	b29b      	uxth	r3, r3
 8016e44:	e7c5      	b.n	8016dd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 8016e46:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8016e48:	4621      	mov	r1, r4
 8016e4a:	920b      	str	r2, [sp, #44]	@ 0x2c
 8016e4c:	469e      	mov	lr, r3
 8016e4e:	e78e      	b.n	8016d6e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 8016e50:	9a03      	ldr	r2, [sp, #12]
 8016e52:	ebae 0305 	sub.w	r3, lr, r5
 8016e56:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016e5a:	442a      	add	r2, r5
 8016e5c:	b29b      	uxth	r3, r3
 8016e5e:	b292      	uxth	r2, r2
 8016e60:	9203      	str	r2, [sp, #12]
 8016e62:	2500      	movs	r5, #0
 8016e64:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8016e66:	4542      	cmp	r2, r8
 8016e68:	d88d      	bhi.n	8016d86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 8016e6a:	4621      	mov	r1, r4
 8016e6c:	e74d      	b.n	8016d0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 8016e6e:	458e      	cmp	lr, r1
 8016e70:	f04f 0900 	mov.w	r9, #0
 8016e74:	bf2b      	itete	cs
 8016e76:	ebae 0301 	subcs.w	r3, lr, r1
 8016e7a:	eba1 040e 	subcc.w	r4, r1, lr
 8016e7e:	462c      	movcs	r4, r5
 8016e80:	462b      	movcc	r3, r5
 8016e82:	bf27      	ittee	cs
 8016e84:	b29b      	uxthcs	r3, r3
 8016e86:	910c      	strcs	r1, [sp, #48]	@ 0x30
 8016e88:	b2a4      	uxthcc	r4, r4
 8016e8a:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 8016e8e:	9a03      	ldr	r2, [sp, #12]
 8016e90:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8016e92:	444a      	add	r2, r9
 8016e94:	4548      	cmp	r0, r9
 8016e96:	b292      	uxth	r2, r2
 8016e98:	d074      	beq.n	8016f84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 8016e9a:	2004      	movs	r0, #4
 8016e9c:	445a      	add	r2, fp
 8016e9e:	4605      	mov	r5, r0
 8016ea0:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 8016ea4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8016ea6:	fb15 0202 	smlabb	r2, r5, r2, r0
 8016eaa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8016eac:	5880      	ldr	r0, [r0, r2]
 8016eae:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 8016eb2:	d014      	beq.n	8016ede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016eb4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8016eb8:	ea4f 2510 	mov.w	r5, r0, lsr #8
 8016ebc:	d112      	bne.n	8016ee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016ebe:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016ec0:	2aff      	cmp	r2, #255	@ 0xff
 8016ec2:	d10f      	bne.n	8016ee4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 8016ec4:	0942      	lsrs	r2, r0, #5
 8016ec6:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8016eca:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016ece:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8016ed2:	f025 0507 	bic.w	r5, r5, #7
 8016ed6:	4315      	orrs	r5, r2
 8016ed8:	4305      	orrs	r5, r0
 8016eda:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 8016ede:	f109 0901 	add.w	r9, r9, #1
 8016ee2:	e7d4      	b.n	8016e8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 8016ee4:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 8016ee8:	b2ed      	uxtb	r5, r5
 8016eea:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016eee:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016ef2:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 8016ef6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016efa:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8016efe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8016f02:	9215      	str	r2, [sp, #84]	@ 0x54
 8016f04:	fa5f fc8c 	uxtb.w	ip, ip
 8016f08:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8016f0a:	b2c0      	uxtb	r0, r0
 8016f0c:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8016f10:	fb02 fa0a 	mul.w	sl, r2, sl
 8016f14:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 8016f18:	f10a 0201 	add.w	r2, sl, #1
 8016f1c:	eb02 222a 	add.w	r2, r2, sl, asr #8
 8016f20:	1212      	asrs	r2, r2, #8
 8016f22:	fa1f fa82 	uxth.w	sl, r2
 8016f26:	43d2      	mvns	r2, r2
 8016f28:	fb16 f60a 	smulbb	r6, r6, sl
 8016f2c:	b2d2      	uxtb	r2, r2
 8016f2e:	fb10 f00a 	smulbb	r0, r0, sl
 8016f32:	fb07 6702 	mla	r7, r7, r2, r6
 8016f36:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8016f38:	fb0c 0002 	mla	r0, ip, r2, r0
 8016f3c:	fb15 f50a 	smulbb	r5, r5, sl
 8016f40:	b2bf      	uxth	r7, r7
 8016f42:	b280      	uxth	r0, r0
 8016f44:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8016f48:	fb06 5602 	mla	r6, r6, r2, r5
 8016f4c:	1c7a      	adds	r2, r7, #1
 8016f4e:	1c45      	adds	r5, r0, #1
 8016f50:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016f54:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016f58:	b2b6      	uxth	r6, r6
 8016f5a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8016f5e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016f62:	432f      	orrs	r7, r5
 8016f64:	1c75      	adds	r5, r6, #1
 8016f66:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016f6a:	096d      	lsrs	r5, r5, #5
 8016f6c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8016f70:	432f      	orrs	r7, r5
 8016f72:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 8016f76:	e7b2      	b.n	8016ede <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 8016f78:	20001b6c 	.word	0x20001b6c
 8016f7c:	20001b66 	.word	0x20001b66
 8016f80:	fffff7fb 	.word	0xfffff7fb
 8016f84:	9203      	str	r2, [sp, #12]
 8016f86:	458e      	cmp	lr, r1
 8016f88:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8016f8a:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016f8e:	f4ff af68 	bcc.w	8016e62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 8016f92:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8016f94:	9906      	ldr	r1, [sp, #24]
 8016f96:	8812      	ldrh	r2, [r2, #0]
 8016f98:	1a52      	subs	r2, r2, r1
 8016f9a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 8016f9c:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 8016fa0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016fa2:	3201      	adds	r2, #1
 8016fa4:	428a      	cmp	r2, r1
 8016fa6:	9209      	str	r2, [sp, #36]	@ 0x24
 8016fa8:	d111      	bne.n	8016fce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 8016faa:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 8016fae:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 8016fb2:	9b06      	ldr	r3, [sp, #24]
 8016fb4:	eba5 0509 	sub.w	r5, r5, r9
 8016fb8:	b2ad      	uxth	r5, r5
 8016fba:	2d00      	cmp	r5, #0
 8016fbc:	bf08      	it	eq
 8016fbe:	4619      	moveq	r1, r3
 8016fc0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016fc2:	bf18      	it	ne
 8016fc4:	2100      	movne	r1, #0
 8016fc6:	3301      	adds	r3, #1
 8016fc8:	b289      	uxth	r1, r1
 8016fca:	930d      	str	r3, [sp, #52]	@ 0x34
 8016fcc:	e694      	b.n	8016cf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 8016fce:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 8016fd2:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8016fd6:	1b2d      	subs	r5, r5, r4
 8016fd8:	b2ad      	uxth	r5, r5
 8016fda:	2d00      	cmp	r5, #0
 8016fdc:	bf18      	it	ne
 8016fde:	2400      	movne	r4, #0
 8016fe0:	e740      	b.n	8016e64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 8016fe2:	4b04      	ldr	r3, [pc, #16]	@ (8016ff4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 8016fe4:	6818      	ldr	r0, [r3, #0]
 8016fe6:	6803      	ldr	r3, [r0, #0]
 8016fe8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8016fea:	4798      	blx	r3
 8016fec:	b01d      	add	sp, #116	@ 0x74
 8016fee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ff2:	bf00      	nop
 8016ff4:	20001b6c 	.word	0x20001b6c

08016ff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8016ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016ffc:	b09f      	sub	sp, #124	@ 0x7c
 8016ffe:	461d      	mov	r5, r3
 8017000:	4604      	mov	r4, r0
 8017002:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8017004:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 8017008:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801700c:	920a      	str	r2, [sp, #40]	@ 0x28
 801700e:	2a00      	cmp	r2, #0
 8017010:	f000 81fe 	beq.w	8017410 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 8017014:	6828      	ldr	r0, [r5, #0]
 8017016:	aa1a      	add	r2, sp, #104	@ 0x68
 8017018:	6869      	ldr	r1, [r5, #4]
 801701a:	c203      	stmia	r2!, {r0, r1}
 801701c:	6818      	ldr	r0, [r3, #0]
 801701e:	aa1c      	add	r2, sp, #112	@ 0x70
 8017020:	6859      	ldr	r1, [r3, #4]
 8017022:	c203      	stmia	r2!, {r0, r1}
 8017024:	a81a      	add	r0, sp, #104	@ 0x68
 8017026:	f7f8 fceb 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801702a:	4629      	mov	r1, r5
 801702c:	a81c      	add	r0, sp, #112	@ 0x70
 801702e:	f7f8 fd0f 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017032:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 8017036:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801703a:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801703e:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 8017042:	bfdb      	ittet	le
 8017044:	b29a      	uxthle	r2, r3
 8017046:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801704a:	2201      	movgt	r2, #1
 801704c:	fb91 f2f2 	sdivle	r2, r1, r2
 8017050:	9201      	str	r2, [sp, #4]
 8017052:	9801      	ldr	r0, [sp, #4]
 8017054:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 8017058:	9901      	ldr	r1, [sp, #4]
 801705a:	fb92 f0f0 	sdiv	r0, r2, r0
 801705e:	b280      	uxth	r0, r0
 8017060:	440e      	add	r6, r1
 8017062:	9010      	str	r0, [sp, #64]	@ 0x40
 8017064:	3e01      	subs	r6, #1
 8017066:	9801      	ldr	r0, [sp, #4]
 8017068:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801706a:	fb05 2510 	mls	r5, r5, r0, r2
 801706e:	fb96 f6f1 	sdiv	r6, r6, r1
 8017072:	fb15 f503 	smulbb	r5, r5, r3
 8017076:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801707a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801707e:	3601      	adds	r6, #1
 8017080:	440d      	add	r5, r1
 8017082:	4419      	add	r1, r3
 8017084:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 8017088:	b2b6      	uxth	r6, r6
 801708a:	441a      	add	r2, r3
 801708c:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 8017090:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 8017094:	b2ad      	uxth	r5, r5
 8017096:	9304      	str	r3, [sp, #16]
 8017098:	4b96      	ldr	r3, [pc, #600]	@ (80172f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801709a:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801709e:	6818      	ldr	r0, [r3, #0]
 80170a0:	6803      	ldr	r3, [r0, #0]
 80170a2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80170a4:	4798      	blx	r3
 80170a6:	4b94      	ldr	r3, [pc, #592]	@ (80172f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 80170a8:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 80170ac:	2d00      	cmp	r5, #0
 80170ae:	881a      	ldrh	r2, [r3, #0]
 80170b0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 80170b4:	fb02 f707 	mul.w	r7, r2, r7
 80170b8:	fb02 c101 	mla	r1, r2, r1, ip
 80170bc:	9318      	str	r3, [sp, #96]	@ 0x60
 80170be:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 80170c2:	4b8e      	ldr	r3, [pc, #568]	@ (80172fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 80170c4:	bf18      	it	ne
 80170c6:	2100      	movne	r1, #0
 80170c8:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 80170cc:	eba3 0304 	sub.w	r3, r3, r4
 80170d0:	920b      	str	r2, [sp, #44]	@ 0x2c
 80170d2:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80170d4:	9319      	str	r3, [sp, #100]	@ 0x64
 80170d6:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80170da:	f106 0204 	add.w	r2, r6, #4
 80170de:	9206      	str	r2, [sp, #24]
 80170e0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80170e2:	ea6f 0202 	mvn.w	r2, r2
 80170e6:	b2d2      	uxtb	r2, r2
 80170e8:	9215      	str	r2, [sp, #84]	@ 0x54
 80170ea:	9a04      	ldr	r2, [sp, #16]
 80170ec:	bf08      	it	eq
 80170ee:	4611      	moveq	r1, r2
 80170f0:	2200      	movs	r2, #0
 80170f2:	b289      	uxth	r1, r1
 80170f4:	920d      	str	r2, [sp, #52]	@ 0x34
 80170f6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80170f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80170fa:	fa12 f383 	uxtah	r3, r2, r3
 80170fe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8017100:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8017104:	3304      	adds	r3, #4
 8017106:	9307      	str	r3, [sp, #28]
 8017108:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801710a:	455b      	cmp	r3, fp
 801710c:	f240 817b 	bls.w	8017406 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 8017110:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 8017114:	f04f 0801 	mov.w	r8, #1
 8017118:	9a01      	ldr	r2, [sp, #4]
 801711a:	9807      	ldr	r0, [sp, #28]
 801711c:	46c4      	mov	ip, r8
 801711e:	f8cd 8008 	str.w	r8, [sp, #8]
 8017122:	7800      	ldrb	r0, [r0, #0]
 8017124:	fbb5 f3f3 	udiv	r3, r5, r3
 8017128:	1ad3      	subs	r3, r2, r3
 801712a:	9011      	str	r0, [sp, #68]	@ 0x44
 801712c:	3001      	adds	r0, #1
 801712e:	b29b      	uxth	r3, r3
 8017130:	9005      	str	r0, [sp, #20]
 8017132:	9316      	str	r3, [sp, #88]	@ 0x58
 8017134:	9b07      	ldr	r3, [sp, #28]
 8017136:	785a      	ldrb	r2, [r3, #1]
 8017138:	789b      	ldrb	r3, [r3, #2]
 801713a:	021b      	lsls	r3, r3, #8
 801713c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8017140:	9a07      	ldr	r2, [sp, #28]
 8017142:	78d2      	ldrb	r2, [r2, #3]
 8017144:	4313      	orrs	r3, r2
 8017146:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8017148:	441a      	add	r2, r3
 801714a:	1c50      	adds	r0, r2, #1
 801714c:	7852      	ldrb	r2, [r2, #1]
 801714e:	9003      	str	r0, [sp, #12]
 8017150:	0212      	lsls	r2, r2, #8
 8017152:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017154:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 8017158:	5cc3      	ldrb	r3, [r0, r3]
 801715a:	431a      	orrs	r2, r3
 801715c:	b293      	uxth	r3, r2
 801715e:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 8017162:	930c      	str	r3, [sp, #48]	@ 0x30
 8017164:	2300      	movs	r3, #0
 8017166:	9308      	str	r3, [sp, #32]
 8017168:	461a      	mov	r2, r3
 801716a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801716e:	930e      	str	r3, [sp, #56]	@ 0x38
 8017170:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8017174:	930f      	str	r3, [sp, #60]	@ 0x3c
 8017176:	2d00      	cmp	r5, #0
 8017178:	d07d      	beq.n	8017276 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 801717a:	45ac      	cmp	ip, r5
 801717c:	d26d      	bcs.n	801725a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 801717e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017180:	eba5 050c 	sub.w	r5, r5, ip
 8017184:	4608      	mov	r0, r1
 8017186:	455b      	cmp	r3, fp
 8017188:	b2ad      	uxth	r5, r5
 801718a:	d802      	bhi.n	8017192 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801718c:	e071      	b.n	8017272 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801718e:	2b00      	cmp	r3, #0
 8017190:	d15d      	bne.n	801724e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 8017192:	9b03      	ldr	r3, [sp, #12]
 8017194:	9a02      	ldr	r2, [sp, #8]
 8017196:	785b      	ldrb	r3, [r3, #1]
 8017198:	f1c2 0207 	rsb	r2, r2, #7
 801719c:	9902      	ldr	r1, [sp, #8]
 801719e:	4093      	lsls	r3, r2
 80171a0:	005b      	lsls	r3, r3, #1
 80171a2:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 80171a6:	9b03      	ldr	r3, [sp, #12]
 80171a8:	781b      	ldrb	r3, [r3, #0]
 80171aa:	410b      	asrs	r3, r1
 80171ac:	3101      	adds	r1, #1
 80171ae:	b2c9      	uxtb	r1, r1
 80171b0:	b2db      	uxtb	r3, r3
 80171b2:	2908      	cmp	r1, #8
 80171b4:	9102      	str	r1, [sp, #8]
 80171b6:	9903      	ldr	r1, [sp, #12]
 80171b8:	ea43 0302 	orr.w	r3, r3, r2
 80171bc:	bf0c      	ite	eq
 80171be:	3102      	addeq	r1, #2
 80171c0:	3101      	addne	r1, #1
 80171c2:	b29a      	uxth	r2, r3
 80171c4:	bf05      	ittet	eq
 80171c6:	9103      	streq	r1, [sp, #12]
 80171c8:	2100      	moveq	r1, #0
 80171ca:	9103      	strne	r1, [sp, #12]
 80171cc:	9102      	streq	r1, [sp, #8]
 80171ce:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80171d0:	4291      	cmp	r1, r2
 80171d2:	d30a      	bcc.n	80171ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 80171d4:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 80171d8:	2301      	movs	r3, #1
 80171da:	9905      	ldr	r1, [sp, #20]
 80171dc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 80171e0:	d30f      	bcc.n	8017202 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 80171e2:	2100      	movs	r1, #0
 80171e4:	4698      	mov	r8, r3
 80171e6:	9100      	str	r1, [sp, #0]
 80171e8:	e032      	b.n	8017250 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 80171ea:	9b05      	ldr	r3, [sp, #20]
 80171ec:	429a      	cmp	r2, r3
 80171ee:	d318      	bcc.n	8017222 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 80171f0:	eb04 0308 	add.w	r3, r4, r8
 80171f4:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 80171f8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 80171fc:	f108 0301 	add.w	r3, r8, #1
 8017200:	b29b      	uxth	r3, r3
 8017202:	9905      	ldr	r1, [sp, #20]
 8017204:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 8017208:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801720c:	710e      	strb	r6, [r1, #4]
 801720e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8017210:	80ce      	strh	r6, [r1, #6]
 8017212:	f108 0601 	add.w	r6, r8, #1
 8017216:	714e      	strb	r6, [r1, #5]
 8017218:	9905      	ldr	r1, [sp, #20]
 801721a:	3101      	adds	r1, #1
 801721c:	b289      	uxth	r1, r1
 801721e:	9105      	str	r1, [sp, #20]
 8017220:	e7df      	b.n	80171e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 8017222:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8017226:	4611      	mov	r1, r2
 8017228:	795b      	ldrb	r3, [r3, #5]
 801722a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801722e:	4426      	add	r6, r4
 8017230:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 8017232:	4437      	add	r7, r6
 8017234:	2f00      	cmp	r7, #0
 8017236:	dd06      	ble.n	8017246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 8017238:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801723c:	790f      	ldrb	r7, [r1, #4]
 801723e:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8017242:	88c9      	ldrh	r1, [r1, #6]
 8017244:	e7f4      	b.n	8017230 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 8017246:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801724a:	b29b      	uxth	r3, r3
 801724c:	e7c5      	b.n	80171da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801724e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8017250:	920c      	str	r2, [sp, #48]	@ 0x30
 8017252:	4601      	mov	r1, r0
 8017254:	9a00      	ldr	r2, [sp, #0]
 8017256:	469c      	mov	ip, r3
 8017258:	e78d      	b.n	8017176 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801725a:	ebac 0305 	sub.w	r3, ip, r5
 801725e:	1957      	adds	r7, r2, r5
 8017260:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 8017264:	b2ba      	uxth	r2, r7
 8017266:	b29b      	uxth	r3, r3
 8017268:	9200      	str	r2, [sp, #0]
 801726a:	2500      	movs	r5, #0
 801726c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801726e:	455a      	cmp	r2, fp
 8017270:	d88d      	bhi.n	801718e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8017272:	4601      	mov	r1, r0
 8017274:	e748      	b.n	8017108 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 8017276:	458c      	cmp	ip, r1
 8017278:	bf27      	ittee	cs
 801727a:	ebac 0301 	subcs.w	r3, ip, r1
 801727e:	4628      	movcs	r0, r5
 8017280:	eba1 000c 	subcc.w	r0, r1, ip
 8017284:	462b      	movcc	r3, r5
 8017286:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8017288:	bf27      	ittee	cs
 801728a:	b29b      	uxthcs	r3, r3
 801728c:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801728e:	b280      	uxthcc	r0, r0
 8017290:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 8017294:	2dff      	cmp	r5, #255	@ 0xff
 8017296:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8017298:	eb02 0705 	add.w	r7, r2, r5
 801729c:	b2bd      	uxth	r5, r7
 801729e:	9500      	str	r5, [sp, #0]
 80172a0:	d12e      	bne.n	8017300 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 80172a2:	465e      	mov	r6, fp
 80172a4:	9d00      	ldr	r5, [sp, #0]
 80172a6:	42aa      	cmp	r2, r5
 80172a8:	f040 8083 	bne.w	80173b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 80172ac:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80172ae:	458c      	cmp	ip, r1
 80172b0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80172b4:	d3d9      	bcc.n	801726a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 80172b6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80172b8:	9904      	ldr	r1, [sp, #16]
 80172ba:	8812      	ldrh	r2, [r2, #0]
 80172bc:	1a52      	subs	r2, r2, r1
 80172be:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80172c0:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 80172c4:	9a08      	ldr	r2, [sp, #32]
 80172c6:	3201      	adds	r2, #1
 80172c8:	428a      	cmp	r2, r1
 80172ca:	9208      	str	r2, [sp, #32]
 80172cc:	f040 8091 	bne.w	80173f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 80172d0:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 80172d4:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 80172d8:	9b04      	ldr	r3, [sp, #16]
 80172da:	eba5 050c 	sub.w	r5, r5, ip
 80172de:	b2ad      	uxth	r5, r5
 80172e0:	2d00      	cmp	r5, #0
 80172e2:	bf08      	it	eq
 80172e4:	4619      	moveq	r1, r3
 80172e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80172e8:	bf18      	it	ne
 80172ea:	2100      	movne	r1, #0
 80172ec:	3301      	adds	r3, #1
 80172ee:	b289      	uxth	r1, r1
 80172f0:	930d      	str	r3, [sp, #52]	@ 0x34
 80172f2:	e700      	b.n	80170f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 80172f4:	20001b6c 	.word	0x20001b6c
 80172f8:	20001b66 	.word	0x20001b66
 80172fc:	fffff7fb 	.word	0xfffff7fb
 8017300:	46d9      	mov	r9, fp
 8017302:	9d00      	ldr	r5, [sp, #0]
 8017304:	42aa      	cmp	r2, r5
 8017306:	d0d1      	beq.n	80172ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 8017308:	1c55      	adds	r5, r2, #1
 801730a:	4422      	add	r2, r4
 801730c:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 8017310:	9a06      	ldr	r2, [sp, #24]
 8017312:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017316:	9517      	str	r5, [sp, #92]	@ 0x5c
 8017318:	4472      	add	r2, lr
 801731a:	9212      	str	r2, [sp, #72]	@ 0x48
 801731c:	f8b9 2000 	ldrh.w	r2, [r9]
 8017320:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8017322:	1216      	asrs	r6, r2, #8
 8017324:	f897 a002 	ldrb.w	sl, [r7, #2]
 8017328:	10d5      	asrs	r5, r2, #3
 801732a:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801732c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8017330:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017334:	00d2      	lsls	r2, r2, #3
 8017336:	fb1a fa07 	smulbb	sl, sl, r7
 801733a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801733e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8017340:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017344:	b2d2      	uxtb	r2, r2
 8017346:	fb06 a607 	mla	r6, r6, r7, sl
 801734a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801734c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017350:	f897 a001 	ldrb.w	sl, [r7, #1]
 8017354:	b2b6      	uxth	r6, r6
 8017356:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017358:	fb1a fa07 	smulbb	sl, sl, r7
 801735c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801735e:	fb05 a507 	mla	r5, r5, r7, sl
 8017362:	9f06      	ldr	r7, [sp, #24]
 8017364:	f106 0a01 	add.w	sl, r6, #1
 8017368:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801736c:	b2ad      	uxth	r5, r5
 801736e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 8017370:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8017374:	f105 0a01 	add.w	sl, r5, #1
 8017378:	fb1e fe07 	smulbb	lr, lr, r7
 801737c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801737e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8017382:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8017386:	fb02 e207 	mla	r2, r2, r7, lr
 801738a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801738e:	b292      	uxth	r2, r2
 8017390:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8017394:	f102 0e01 	add.w	lr, r2, #1
 8017398:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801739c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 80173a0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80173a4:	ea4e 0606 	orr.w	r6, lr, r6
 80173a8:	ea46 060a 	orr.w	r6, r6, sl
 80173ac:	f829 6b02 	strh.w	r6, [r9], #2
 80173b0:	e7a7      	b.n	8017302 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 80173b2:	f102 0e01 	add.w	lr, r2, #1
 80173b6:	4422      	add	r2, r4
 80173b8:	9f06      	ldr	r7, [sp, #24]
 80173ba:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 80173be:	9a06      	ldr	r2, [sp, #24]
 80173c0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80173c4:	eb02 0a05 	add.w	sl, r2, r5
 80173c8:	4a13      	ldr	r2, [pc, #76]	@ (8017418 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 80173ca:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80173ce:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 80173d2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80173d6:	00d2      	lsls	r2, r2, #3
 80173d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80173dc:	ea49 0202 	orr.w	r2, r9, r2
 80173e0:	f817 9005 	ldrb.w	r9, [r7, r5]
 80173e4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80173e8:	f826 2b02 	strh.w	r2, [r6], #2
 80173ec:	fa1f f28e 	uxth.w	r2, lr
 80173f0:	e758      	b.n	80172a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 80173f2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 80173f6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 80173fa:	1a2d      	subs	r5, r5, r0
 80173fc:	b2ad      	uxth	r5, r5
 80173fe:	2d00      	cmp	r5, #0
 8017400:	bf18      	it	ne
 8017402:	2000      	movne	r0, #0
 8017404:	e732      	b.n	801726c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 8017406:	4b05      	ldr	r3, [pc, #20]	@ (801741c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 8017408:	6818      	ldr	r0, [r3, #0]
 801740a:	6803      	ldr	r3, [r0, #0]
 801740c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801740e:	4798      	blx	r3
 8017410:	b01f      	add	sp, #124	@ 0x7c
 8017412:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017416:	bf00      	nop
 8017418:	fffff800 	.word	0xfffff800
 801741c:	20001b6c 	.word	0x20001b6c

08017420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017424:	b091      	sub	sp, #68	@ 0x44
 8017426:	469b      	mov	fp, r3
 8017428:	4616      	mov	r6, r2
 801742a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801742e:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 8017432:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017436:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801743a:	4604      	mov	r4, r0
 801743c:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 8017440:	4640      	mov	r0, r8
 8017442:	460d      	mov	r5, r1
 8017444:	4659      	mov	r1, fp
 8017446:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801744a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801744e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 8017452:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 8017456:	f7f6 fbfd 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 801745a:	4631      	mov	r1, r6
 801745c:	4640      	mov	r0, r8
 801745e:	f7f6 fbf9 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 8017462:	4b74      	ldr	r3, [pc, #464]	@ (8017634 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017464:	8818      	ldrh	r0, [r3, #0]
 8017466:	4b74      	ldr	r3, [pc, #464]	@ (8017638 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017468:	b202      	sxth	r2, r0
 801746a:	8819      	ldrh	r1, [r3, #0]
 801746c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8017470:	b20e      	sxth	r6, r1
 8017472:	2b00      	cmp	r3, #0
 8017474:	da07      	bge.n	8017486 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017476:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801747a:	4463      	add	r3, ip
 801747c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8017480:	2300      	movs	r3, #0
 8017482:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8017486:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801748a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801748e:	1ad2      	subs	r2, r2, r3
 8017490:	4594      	cmp	ip, r2
 8017492:	bfc4      	itt	gt
 8017494:	1ac2      	subgt	r2, r0, r3
 8017496:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801749a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801749e:	2a00      	cmp	r2, #0
 80174a0:	da07      	bge.n	80174b2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 80174a2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 80174a6:	4462      	add	r2, ip
 80174a8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 80174ac:	2200      	movs	r2, #0
 80174ae:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 80174b2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 80174b6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 80174ba:	eba6 060a 	sub.w	r6, r6, sl
 80174be:	42b2      	cmp	r2, r6
 80174c0:	bfc4      	itt	gt
 80174c2:	eba1 020a 	subgt.w	r2, r1, sl
 80174c6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 80174ca:	4a5c      	ldr	r2, [pc, #368]	@ (801763c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80174cc:	7812      	ldrb	r2, [r2, #0]
 80174ce:	b9a2      	cbnz	r2, 80174fa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80174d0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 80174d4:	4286      	cmp	r6, r0
 80174d6:	4640      	mov	r0, r8
 80174d8:	9303      	str	r3, [sp, #12]
 80174da:	bf14      	ite	ne
 80174dc:	2600      	movne	r6, #0
 80174de:	2601      	moveq	r6, #1
 80174e0:	f7f6 fbfb 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 80174e4:	9b03      	ldr	r3, [sp, #12]
 80174e6:	b160      	cbz	r0, 8017502 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80174e8:	2300      	movs	r3, #0
 80174ea:	8023      	strh	r3, [r4, #0]
 80174ec:	8063      	strh	r3, [r4, #2]
 80174ee:	80a3      	strh	r3, [r4, #4]
 80174f0:	4620      	mov	r0, r4
 80174f2:	80e3      	strh	r3, [r4, #6]
 80174f4:	b011      	add	sp, #68	@ 0x44
 80174f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80174fa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80174fe:	428e      	cmp	r6, r1
 8017500:	e7e9      	b.n	80174d6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017502:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8017506:	a90e      	add	r1, sp, #56	@ 0x38
 8017508:	900e      	str	r0, [sp, #56]	@ 0x38
 801750a:	a80c      	add	r0, sp, #48	@ 0x30
 801750c:	9205      	str	r2, [sp, #20]
 801750e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 8017512:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 8017516:	9206      	str	r2, [sp, #24]
 8017518:	f8bb 2000 	ldrh.w	r2, [fp]
 801751c:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 8017520:	1a9b      	subs	r3, r3, r2
 8017522:	b21b      	sxth	r3, r3
 8017524:	9303      	str	r3, [sp, #12]
 8017526:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801752a:	f8df b118 	ldr.w	fp, [pc, #280]	@ 8017644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801752e:	ebaa 0a03 	sub.w	sl, sl, r3
 8017532:	fa0f f38a 	sxth.w	r3, sl
 8017536:	9304      	str	r3, [sp, #16]
 8017538:	9b03      	ldr	r3, [sp, #12]
 801753a:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801753e:	9b04      	ldr	r3, [sp, #16]
 8017540:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017544:	9b05      	ldr	r3, [sp, #20]
 8017546:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801754a:	9b06      	ldr	r3, [sp, #24]
 801754c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8017550:	f7f8 fa7e 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017554:	4640      	mov	r0, r8
 8017556:	f7f8 fa53 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801755a:	a80e      	add	r0, sp, #56	@ 0x38
 801755c:	f7f8 fa50 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017560:	4b37      	ldr	r3, [pc, #220]	@ (8017640 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8017562:	4628      	mov	r0, r5
 8017564:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 8017568:	881b      	ldrh	r3, [r3, #0]
 801756a:	9307      	str	r3, [sp, #28]
 801756c:	682b      	ldr	r3, [r5, #0]
 801756e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017570:	4798      	blx	r3
 8017572:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 8017576:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801757a:	4681      	mov	r9, r0
 801757c:	f8db 0000 	ldr.w	r0, [fp]
 8017580:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017584:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8017586:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801758a:	6803      	ldr	r3, [r0, #0]
 801758c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801758e:	4798      	blx	r3
 8017590:	4607      	mov	r7, r0
 8017592:	f8db 0000 	ldr.w	r0, [fp]
 8017596:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801759a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801759e:	6803      	ldr	r3, [r0, #0]
 80175a0:	9109      	str	r1, [sp, #36]	@ 0x24
 80175a2:	9208      	str	r2, [sp, #32]
 80175a4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80175a6:	4798      	blx	r3
 80175a8:	f010 0f01 	tst.w	r0, #1
 80175ac:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80175b0:	d012      	beq.n	80175d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 80175b2:	f8db 0000 	ldr.w	r0, [fp]
 80175b6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 80175ba:	6803      	ldr	r3, [r0, #0]
 80175bc:	9200      	str	r2, [sp, #0]
 80175be:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80175c0:	462b      	mov	r3, r5
 80175c2:	e898 0006 	ldmia.w	r8, {r1, r2}
 80175c6:	47b0      	blx	r6
 80175c8:	9b03      	ldr	r3, [sp, #12]
 80175ca:	8023      	strh	r3, [r4, #0]
 80175cc:	9b04      	ldr	r3, [sp, #16]
 80175ce:	8063      	strh	r3, [r4, #2]
 80175d0:	9b05      	ldr	r3, [sp, #20]
 80175d2:	80a3      	strh	r3, [r4, #4]
 80175d4:	9b06      	ldr	r3, [sp, #24]
 80175d6:	e78b      	b.n	80174f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 80175d8:	fb09 f202 	mul.w	r2, r9, r2
 80175dc:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 80175e0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 80175e4:	440f      	add	r7, r1
 80175e6:	b166      	cbz	r6, 8017602 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80175e8:	9a07      	ldr	r2, [sp, #28]
 80175ea:	4592      	cmp	sl, r2
 80175ec:	d109      	bne.n	8017602 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 80175ee:	f8db 0000 	ldr.w	r0, [fp]
 80175f2:	fb09 f303 	mul.w	r3, r9, r3
 80175f6:	4629      	mov	r1, r5
 80175f8:	6802      	ldr	r2, [r0, #0]
 80175fa:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 80175fc:	463a      	mov	r2, r7
 80175fe:	47b0      	blx	r6
 8017600:	e7e2      	b.n	80175c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017602:	fb0a f303 	mul.w	r3, sl, r3
 8017606:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801760a:	f8df b038 	ldr.w	fp, [pc, #56]	@ 8017644 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801760e:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017612:	4545      	cmp	r5, r8
 8017614:	d2d8      	bcs.n	80175c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017616:	f8db 0000 	ldr.w	r0, [fp]
 801761a:	4629      	mov	r1, r5
 801761c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8017620:	4435      	add	r5, r6
 8017622:	6802      	ldr	r2, [r0, #0]
 8017624:	005b      	lsls	r3, r3, #1
 8017626:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801762a:	463a      	mov	r2, r7
 801762c:	47d0      	blx	sl
 801762e:	444f      	add	r7, r9
 8017630:	e7ef      	b.n	8017612 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017632:	bf00      	nop
 8017634:	20001b60 	.word	0x20001b60
 8017638:	20001b62 	.word	0x20001b62
 801763c:	20001b64 	.word	0x20001b64
 8017640:	20001b66 	.word	0x20001b66
 8017644:	20001b6c 	.word	0x20001b6c

08017648 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017648:	b5f0      	push	{r4, r5, r6, r7, lr}
 801764a:	4606      	mov	r6, r0
 801764c:	b087      	sub	sp, #28
 801764e:	460c      	mov	r4, r1
 8017650:	4617      	mov	r7, r2
 8017652:	461d      	mov	r5, r3
 8017654:	b333      	cbz	r3, 80176a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017656:	4608      	mov	r0, r1
 8017658:	f7f6 fb3f 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 801765c:	bb10      	cbnz	r0, 80176a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801765e:	6820      	ldr	r0, [r4, #0]
 8017660:	ab04      	add	r3, sp, #16
 8017662:	6861      	ldr	r1, [r4, #4]
 8017664:	4c1b      	ldr	r4, [pc, #108]	@ (80176d4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017666:	c303      	stmia	r3!, {r0, r1}
 8017668:	a804      	add	r0, sp, #16
 801766a:	f7f8 f9c9 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801766e:	6820      	ldr	r0, [r4, #0]
 8017670:	6803      	ldr	r3, [r0, #0]
 8017672:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017674:	4798      	blx	r3
 8017676:	2dff      	cmp	r5, #255	@ 0xff
 8017678:	d016      	beq.n	80176a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801767a:	f010 0f08 	tst.w	r0, #8
 801767e:	6820      	ldr	r0, [r4, #0]
 8017680:	d015      	beq.n	80176ae <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017682:	2400      	movs	r4, #0
 8017684:	6801      	ldr	r1, [r0, #0]
 8017686:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801768a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801768e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017692:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017696:	9401      	str	r4, [sp, #4]
 8017698:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801769c:	9400      	str	r4, [sp, #0]
 801769e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 80176a0:	4639      	mov	r1, r7
 80176a2:	47a0      	blx	r4
 80176a4:	b007      	add	sp, #28
 80176a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80176a8:	f010 0f02 	tst.w	r0, #2
 80176ac:	e7e7      	b.n	801767e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80176ae:	6803      	ldr	r3, [r0, #0]
 80176b0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80176b2:	4798      	blx	r3
 80176b4:	4b08      	ldr	r3, [pc, #32]	@ (80176d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 80176b6:	4601      	mov	r1, r0
 80176b8:	4630      	mov	r0, r6
 80176ba:	881a      	ldrh	r2, [r3, #0]
 80176bc:	6833      	ldr	r3, [r6, #0]
 80176be:	e9cd 7500 	strd	r7, r5, [sp]
 80176c2:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 80176c4:	ab04      	add	r3, sp, #16
 80176c6:	47a8      	blx	r5
 80176c8:	6820      	ldr	r0, [r4, #0]
 80176ca:	6803      	ldr	r3, [r0, #0]
 80176cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80176ce:	4798      	blx	r3
 80176d0:	e7e8      	b.n	80176a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80176d2:	bf00      	nop
 80176d4:	20001b6c 	.word	0x20001b6c
 80176d8:	20001b66 	.word	0x20001b66

080176dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80176dc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80176e0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 80176e4:	4688      	mov	r8, r1
 80176e6:	4614      	mov	r4, r2
 80176e8:	461d      	mov	r5, r3
 80176ea:	9e08      	ldr	r6, [sp, #32]
 80176ec:	2f00      	cmp	r7, #0
 80176ee:	f000 80ab 	beq.w	8017848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80176f2:	4618      	mov	r0, r3
 80176f4:	f7f6 faf1 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 80176f8:	2800      	cmp	r0, #0
 80176fa:	f040 80a5 	bne.w	8017848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80176fe:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017702:	2fff      	cmp	r7, #255	@ 0xff
 8017704:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017708:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801770c:	fb04 1303 	mla	r3, r4, r3, r1
 8017710:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017714:	eba4 0200 	sub.w	r2, r4, r0
 8017718:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801771c:	fb04 f505 	mul.w	r5, r4, r5
 8017720:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017724:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017728:	d04a      	beq.n	80177c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801772a:	b2bc      	uxth	r4, r7
 801772c:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 8017730:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017734:	fa5f f788 	uxtb.w	r7, r8
 8017738:	b2f3      	uxtb	r3, r6
 801773a:	0040      	lsls	r0, r0, #1
 801773c:	fb0e fe04 	mul.w	lr, lr, r4
 8017740:	4367      	muls	r7, r4
 8017742:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017746:	4363      	muls	r3, r4
 8017748:	fa1f fc8c 	uxth.w	ip, ip
 801774c:	42a9      	cmp	r1, r5
 801774e:	d27b      	bcs.n	8017848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017750:	eb01 0900 	add.w	r9, r1, r0
 8017754:	4549      	cmp	r1, r9
 8017756:	d231      	bcs.n	80177bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 8017758:	880a      	ldrh	r2, [r1, #0]
 801775a:	1214      	asrs	r4, r2, #8
 801775c:	10d6      	asrs	r6, r2, #3
 801775e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8017762:	00d2      	lsls	r2, r2, #3
 8017764:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017768:	b2d2      	uxtb	r2, r2
 801776a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801776e:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017772:	fb14 f40c 	smulbb	r4, r4, ip
 8017776:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801777a:	fb12 f20c 	smulbb	r2, r2, ip
 801777e:	fb16 f60c 	smulbb	r6, r6, ip
 8017782:	4474      	add	r4, lr
 8017784:	441a      	add	r2, r3
 8017786:	b2a4      	uxth	r4, r4
 8017788:	443e      	add	r6, r7
 801778a:	b292      	uxth	r2, r2
 801778c:	f104 0a01 	add.w	sl, r4, #1
 8017790:	b2b6      	uxth	r6, r6
 8017792:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017796:	f102 0a01 	add.w	sl, r2, #1
 801779a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801779e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80177a2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80177a6:	4322      	orrs	r2, r4
 80177a8:	1c74      	adds	r4, r6, #1
 80177aa:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80177ae:	0976      	lsrs	r6, r6, #5
 80177b0:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80177b4:	4332      	orrs	r2, r6
 80177b6:	f821 2b02 	strh.w	r2, [r1], #2
 80177ba:	e7cb      	b.n	8017754 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 80177bc:	4441      	add	r1, r8
 80177be:	e7c5      	b.n	801774c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 80177c0:	0973      	lsrs	r3, r6, #5
 80177c2:	4f22      	ldr	r7, [pc, #136]	@ (801784c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 80177c4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80177c8:	ea08 0707 	and.w	r7, r8, r7
 80177cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80177d0:	433b      	orrs	r3, r7
 80177d2:	07e7      	lsls	r7, r4, #31
 80177d4:	ea43 0306 	orr.w	r3, r3, r6
 80177d8:	b29b      	uxth	r3, r3
 80177da:	d50b      	bpl.n	80177f4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 80177dc:	0040      	lsls	r0, r0, #1
 80177de:	0052      	lsls	r2, r2, #1
 80177e0:	42a9      	cmp	r1, r5
 80177e2:	d231      	bcs.n	8017848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 80177e4:	180c      	adds	r4, r1, r0
 80177e6:	42a1      	cmp	r1, r4
 80177e8:	d202      	bcs.n	80177f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 80177ea:	f821 3b02 	strh.w	r3, [r1], #2
 80177ee:	e7fa      	b.n	80177e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 80177f0:	4411      	add	r1, r2
 80177f2:	e7f5      	b.n	80177e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 80177f4:	078e      	lsls	r6, r1, #30
 80177f6:	d008      	beq.n	801780a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 80177f8:	0066      	lsls	r6, r4, #1
 80177fa:	460a      	mov	r2, r1
 80177fc:	42aa      	cmp	r2, r5
 80177fe:	d202      	bcs.n	8017806 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017800:	8013      	strh	r3, [r2, #0]
 8017802:	4432      	add	r2, r6
 8017804:	e7fa      	b.n	80177fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 8017806:	3102      	adds	r1, #2
 8017808:	3801      	subs	r0, #1
 801780a:	07c2      	lsls	r2, r0, #31
 801780c:	d50b      	bpl.n	8017826 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801780e:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 8017812:	0066      	lsls	r6, r4, #1
 8017814:	3a01      	subs	r2, #1
 8017816:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801781a:	42aa      	cmp	r2, r5
 801781c:	d202      	bcs.n	8017824 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801781e:	8013      	strh	r3, [r2, #0]
 8017820:	4432      	add	r2, r6
 8017822:	e7fa      	b.n	801781a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 8017824:	3801      	subs	r0, #1
 8017826:	b178      	cbz	r0, 8017848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017828:	1040      	asrs	r0, r0, #1
 801782a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801782e:	0080      	lsls	r0, r0, #2
 8017830:	0064      	lsls	r4, r4, #1
 8017832:	42a9      	cmp	r1, r5
 8017834:	d208      	bcs.n	8017848 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 8017836:	180e      	adds	r6, r1, r0
 8017838:	460a      	mov	r2, r1
 801783a:	42b2      	cmp	r2, r6
 801783c:	d202      	bcs.n	8017844 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801783e:	f842 3b04 	str.w	r3, [r2], #4
 8017842:	e7fa      	b.n	801783a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 8017844:	4421      	add	r1, r4
 8017846:	e7f4      	b.n	8017832 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 8017848:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801784c:	00fff800 	.word	0x00fff800

08017850 <_ZN8touchgfx8LCD16bppC1Ev>:
 8017850:	2200      	movs	r2, #0
 8017852:	4912      	ldr	r1, [pc, #72]	@ (801789c <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 8017854:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8017858:	6001      	str	r1, [r0, #0]
 801785a:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801785e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8017862:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8017866:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801786a:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801786e:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 8017872:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8017876:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801787a:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801787e:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 8017882:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 8017886:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801788a:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801788e:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 8017892:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 8017896:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801789a:	4770      	bx	lr
 801789c:	080233a0 	.word	0x080233a0

080178a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80178a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178a4:	b08d      	sub	sp, #52	@ 0x34
 80178a6:	460d      	mov	r5, r1
 80178a8:	4604      	mov	r4, r0
 80178aa:	4699      	mov	r9, r3
 80178ac:	6808      	ldr	r0, [r1, #0]
 80178ae:	ab08      	add	r3, sp, #32
 80178b0:	6849      	ldr	r1, [r1, #4]
 80178b2:	c303      	stmia	r3!, {r0, r1}
 80178b4:	6810      	ldr	r0, [r2, #0]
 80178b6:	ab0a      	add	r3, sp, #40	@ 0x28
 80178b8:	6851      	ldr	r1, [r2, #4]
 80178ba:	c303      	stmia	r3!, {r0, r1}
 80178bc:	a808      	add	r0, sp, #32
 80178be:	f7f8 f89f 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178c2:	4629      	mov	r1, r5
 80178c4:	a80a      	add	r0, sp, #40	@ 0x28
 80178c6:	4d67      	ldr	r5, [pc, #412]	@ (8017a64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80178c8:	f7f8 f8c2 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80178cc:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 80178d0:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 80178d4:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 80178d8:	6828      	ldr	r0, [r5, #0]
 80178da:	fb11 2103 	smlabb	r1, r1, r3, r2
 80178de:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 80178e2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 80178e6:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 80178ea:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 80178ee:	440a      	add	r2, r1
 80178f0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80178f4:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80178f8:	4413      	add	r3, r2
 80178fa:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80178fe:	6803      	ldr	r3, [r0, #0]
 8017900:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017902:	4798      	blx	r3
 8017904:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017908:	d119      	bne.n	801793e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801790a:	f010 0f20 	tst.w	r0, #32
 801790e:	6828      	ldr	r0, [r5, #0]
 8017910:	d018      	beq.n	8017944 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017912:	2500      	movs	r5, #0
 8017914:	6801      	ldr	r1, [r0, #0]
 8017916:	b2b6      	uxth	r6, r6
 8017918:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801791c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 8017920:	9601      	str	r6, [sp, #4]
 8017922:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017926:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801792a:	9502      	str	r5, [sp, #8]
 801792c:	fa1f f588 	uxth.w	r5, r8
 8017930:	9500      	str	r5, [sp, #0]
 8017932:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 8017934:	4621      	mov	r1, r4
 8017936:	47a8      	blx	r5
 8017938:	b00d      	add	sp, #52	@ 0x34
 801793a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801793e:	f010 0f40 	tst.w	r0, #64	@ 0x40
 8017942:	e7e4      	b.n	801790e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017944:	6803      	ldr	r3, [r0, #0]
 8017946:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017948:	4798      	blx	r3
 801794a:	4947      	ldr	r1, [pc, #284]	@ (8017a68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801794c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8017950:	880b      	ldrh	r3, [r1, #0]
 8017952:	468a      	mov	sl, r1
 8017954:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 8017958:	fb03 5202 	mla	r2, r3, r2, r5
 801795c:	4373      	muls	r3, r6
 801795e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017962:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017966:	9307      	str	r3, [sp, #28]
 8017968:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801796c:	9306      	str	r3, [sp, #24]
 801796e:	9b07      	ldr	r3, [sp, #28]
 8017970:	4298      	cmp	r0, r3
 8017972:	d270      	bcs.n	8017a56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017974:	9b06      	ldr	r3, [sp, #24]
 8017976:	4621      	mov	r1, r4
 8017978:	eb00 0b03 	add.w	fp, r0, r3
 801797c:	4558      	cmp	r0, fp
 801797e:	d25d      	bcs.n	8017a3c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017980:	f851 4b04 	ldr.w	r4, [r1], #4
 8017984:	0e23      	lsrs	r3, r4, #24
 8017986:	d014      	beq.n	80179b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017988:	2bff      	cmp	r3, #255	@ 0xff
 801798a:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801798e:	d112      	bne.n	80179b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017990:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8017994:	d10f      	bne.n	80179b6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017996:	0963      	lsrs	r3, r4, #5
 8017998:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801799c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80179a0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80179a4:	f02c 0c07 	bic.w	ip, ip, #7
 80179a8:	ea43 0c0c 	orr.w	ip, r3, ip
 80179ac:	ea4c 0404 	orr.w	r4, ip, r4
 80179b0:	8004      	strh	r4, [r0, #0]
 80179b2:	3002      	adds	r0, #2
 80179b4:	e7e2      	b.n	801797c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 80179b6:	fb09 f303 	mul.w	r3, r9, r3
 80179ba:	8807      	ldrh	r7, [r0, #0]
 80179bc:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 80179c0:	fa5f fc8c 	uxtb.w	ip, ip
 80179c4:	1c5a      	adds	r2, r3, #1
 80179c6:	123e      	asrs	r6, r7, #8
 80179c8:	10fd      	asrs	r5, r7, #3
 80179ca:	eb02 2223 	add.w	r2, r2, r3, asr #8
 80179ce:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80179d2:	00ff      	lsls	r7, r7, #3
 80179d4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80179d8:	1212      	asrs	r2, r2, #8
 80179da:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80179de:	b293      	uxth	r3, r2
 80179e0:	43d2      	mvns	r2, r2
 80179e2:	b2ff      	uxtb	r7, r7
 80179e4:	fb1e fe03 	smulbb	lr, lr, r3
 80179e8:	b2d2      	uxtb	r2, r2
 80179ea:	fb1c fc03 	smulbb	ip, ip, r3
 80179ee:	b2e4      	uxtb	r4, r4
 80179f0:	fb06 e602 	mla	r6, r6, r2, lr
 80179f4:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80179f8:	fb14 f403 	smulbb	r4, r4, r3
 80179fc:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017a00:	b2b6      	uxth	r6, r6
 8017a02:	fb05 c502 	mla	r5, r5, r2, ip
 8017a06:	fb07 4702 	mla	r7, r7, r2, r4
 8017a0a:	f106 0e01 	add.w	lr, r6, #1
 8017a0e:	b2ad      	uxth	r5, r5
 8017a10:	b2bf      	uxth	r7, r7
 8017a12:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017a16:	f105 0c01 	add.w	ip, r5, #1
 8017a1a:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 8017a1e:	1c7e      	adds	r6, r7, #1
 8017a20:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017a24:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017a28:	096d      	lsrs	r5, r5, #5
 8017a2a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017a2e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017a32:	ea46 060e 	orr.w	r6, r6, lr
 8017a36:	432e      	orrs	r6, r5
 8017a38:	8006      	strh	r6, [r0, #0]
 8017a3a:	e7ba      	b.n	80179b2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017a3c:	f8ba 3000 	ldrh.w	r3, [sl]
 8017a40:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 8017a44:	eba3 0308 	sub.w	r3, r3, r8
 8017a48:	eba4 0408 	sub.w	r4, r4, r8
 8017a4c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017a50:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017a54:	e78b      	b.n	801796e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017a56:	4b03      	ldr	r3, [pc, #12]	@ (8017a64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017a58:	6818      	ldr	r0, [r3, #0]
 8017a5a:	6803      	ldr	r3, [r0, #0]
 8017a5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017a5e:	4798      	blx	r3
 8017a60:	e76a      	b.n	8017938 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017a62:	bf00      	nop
 8017a64:	20001b6c 	.word	0x20001b6c
 8017a68:	20001b66 	.word	0x20001b66

08017a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017a6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017a70:	b085      	sub	sp, #20
 8017a72:	6810      	ldr	r0, [r2, #0]
 8017a74:	460c      	mov	r4, r1
 8017a76:	6851      	ldr	r1, [r2, #4]
 8017a78:	466d      	mov	r5, sp
 8017a7a:	4616      	mov	r6, r2
 8017a7c:	c503      	stmia	r5!, {r0, r1}
 8017a7e:	6818      	ldr	r0, [r3, #0]
 8017a80:	6859      	ldr	r1, [r3, #4]
 8017a82:	c503      	stmia	r5!, {r0, r1}
 8017a84:	4668      	mov	r0, sp
 8017a86:	4d2e      	ldr	r5, [pc, #184]	@ (8017b40 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017a88:	f7f7 ffba 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a8c:	4631      	mov	r1, r6
 8017a8e:	a802      	add	r0, sp, #8
 8017a90:	4e2c      	ldr	r6, [pc, #176]	@ (8017b44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017a92:	f7f7 ffdd 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a96:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017a9a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017a9e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017aa2:	6828      	ldr	r0, [r5, #0]
 8017aa4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017aa8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017aac:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017ab0:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017ab4:	f8bd 1000 	ldrh.w	r1, [sp]
 8017ab8:	440a      	add	r2, r1
 8017aba:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017abe:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017ac2:	4413      	add	r3, r2
 8017ac4:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017ac8:	6803      	ldr	r3, [r0, #0]
 8017aca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017acc:	4798      	blx	r3
 8017ace:	8833      	ldrh	r3, [r6, #0]
 8017ad0:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017ad4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017ad8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017adc:	f8df e068 	ldr.w	lr, [pc, #104]	@ 8017b48 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017ae0:	fb03 1202 	mla	r2, r3, r2, r1
 8017ae4:	fb08 f303 	mul.w	r3, r8, r3
 8017ae8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017aec:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017af0:	4298      	cmp	r0, r3
 8017af2:	d21d      	bcs.n	8017b30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017af4:	eb00 080c 	add.w	r8, r0, ip
 8017af8:	4540      	cmp	r0, r8
 8017afa:	d20f      	bcs.n	8017b1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017afc:	f854 1b04 	ldr.w	r1, [r4], #4
 8017b00:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017b04:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017b08:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017b0c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017b10:	ea42 0209 	orr.w	r2, r2, r9
 8017b14:	430a      	orrs	r2, r1
 8017b16:	f820 2b02 	strh.w	r2, [r0], #2
 8017b1a:	e7ed      	b.n	8017af8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017b1c:	8832      	ldrh	r2, [r6, #0]
 8017b1e:	1bd2      	subs	r2, r2, r7
 8017b20:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017b24:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017b28:	1bd2      	subs	r2, r2, r7
 8017b2a:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017b2e:	e7df      	b.n	8017af0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017b30:	6828      	ldr	r0, [r5, #0]
 8017b32:	6803      	ldr	r3, [r0, #0]
 8017b34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017b36:	4798      	blx	r3
 8017b38:	b005      	add	sp, #20
 8017b3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017b3e:	bf00      	nop
 8017b40:	20001b6c 	.word	0x20001b6c
 8017b44:	20001b66 	.word	0x20001b66
 8017b48:	fffff800 	.word	0xfffff800

08017b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017b4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b50:	b08e      	sub	sp, #56	@ 0x38
 8017b52:	460e      	mov	r6, r1
 8017b54:	4604      	mov	r4, r0
 8017b56:	461d      	mov	r5, r3
 8017b58:	6808      	ldr	r0, [r1, #0]
 8017b5a:	ab0a      	add	r3, sp, #40	@ 0x28
 8017b5c:	6849      	ldr	r1, [r1, #4]
 8017b5e:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 8017d34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017b62:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 8017d38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017b66:	c303      	stmia	r3!, {r0, r1}
 8017b68:	6810      	ldr	r0, [r2, #0]
 8017b6a:	ab0c      	add	r3, sp, #48	@ 0x30
 8017b6c:	6851      	ldr	r1, [r2, #4]
 8017b6e:	c303      	stmia	r3!, {r0, r1}
 8017b70:	a80a      	add	r0, sp, #40	@ 0x28
 8017b72:	f7f7 ff45 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017b76:	4631      	mov	r1, r6
 8017b78:	a80c      	add	r0, sp, #48	@ 0x30
 8017b7a:	f7f7 ff69 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b7e:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8017b82:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8017b86:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017b8a:	f8d8 0000 	ldr.w	r0, [r8]
 8017b8e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017b92:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 8017b96:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 8017b9a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017b9e:	440c      	add	r4, r1
 8017ba0:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8017ba4:	440a      	add	r2, r1
 8017ba6:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8017baa:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 8017bae:	4413      	add	r3, r2
 8017bb0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017bb4:	6803      	ldr	r3, [r0, #0]
 8017bb6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017bb8:	4798      	blx	r3
 8017bba:	2dff      	cmp	r5, #255	@ 0xff
 8017bbc:	d124      	bne.n	8017c08 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017bbe:	f010 0f01 	tst.w	r0, #1
 8017bc2:	f8d8 0000 	ldr.w	r0, [r8]
 8017bc6:	d022      	beq.n	8017c0e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017bc8:	2100      	movs	r1, #0
 8017bca:	f04f 0e01 	mov.w	lr, #1
 8017bce:	f8d0 c000 	ldr.w	ip, [r0]
 8017bd2:	b2b6      	uxth	r6, r6
 8017bd4:	f8cd e018 	str.w	lr, [sp, #24]
 8017bd8:	b2bf      	uxth	r7, r7
 8017bda:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8017bde:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8017be2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017be6:	f8b9 e000 	ldrh.w	lr, [r9]
 8017bea:	9503      	str	r5, [sp, #12]
 8017bec:	9601      	str	r6, [sp, #4]
 8017bee:	9700      	str	r7, [sp, #0]
 8017bf0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017bf4:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8017bf8:	9102      	str	r1, [sp, #8]
 8017bfa:	4621      	mov	r1, r4
 8017bfc:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 8017c00:	47a8      	blx	r5
 8017c02:	b00e      	add	sp, #56	@ 0x38
 8017c04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017c08:	f010 0f04 	tst.w	r0, #4
 8017c0c:	e7d9      	b.n	8017bc2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017c0e:	6803      	ldr	r3, [r0, #0]
 8017c10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017c12:	4798      	blx	r3
 8017c14:	f8b9 3000 	ldrh.w	r3, [r9]
 8017c18:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 8017c1c:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017c20:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 8017c24:	435e      	muls	r6, r3
 8017c26:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 8017c2a:	2dff      	cmp	r5, #255	@ 0xff
 8017c2c:	fb03 1202 	mla	r2, r3, r2, r1
 8017c30:	ebac 0c07 	sub.w	ip, ip, r7
 8017c34:	eba3 0707 	sub.w	r7, r3, r7
 8017c38:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c3c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017c40:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017c44:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017c48:	d049      	beq.n	8017cde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017c4a:	43eb      	mvns	r3, r5
 8017c4c:	fa1f f985 	uxth.w	r9, r5
 8017c50:	b2db      	uxtb	r3, r3
 8017c52:	42b0      	cmp	r0, r6
 8017c54:	d266      	bcs.n	8017d24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017c56:	eb00 0a0e 	add.w	sl, r0, lr
 8017c5a:	4550      	cmp	r0, sl
 8017c5c:	4621      	mov	r1, r4
 8017c5e:	f104 0403 	add.w	r4, r4, #3
 8017c62:	d25b      	bcs.n	8017d1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017c64:	8802      	ldrh	r2, [r0, #0]
 8017c66:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017c6a:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017c6e:	fb11 f109 	smulbb	r1, r1, r9
 8017c72:	10d5      	asrs	r5, r2, #3
 8017c74:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 8017c78:	00d2      	lsls	r2, r2, #3
 8017c7a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8017c7e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017c82:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017c86:	fb08 1803 	mla	r8, r8, r3, r1
 8017c8a:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017c8e:	b2d2      	uxtb	r2, r2
 8017c90:	fb11 f109 	smulbb	r1, r1, r9
 8017c94:	fa1f f888 	uxth.w	r8, r8
 8017c98:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017c9c:	fb05 1503 	mla	r5, r5, r3, r1
 8017ca0:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017ca4:	fb11 f109 	smulbb	r1, r1, r9
 8017ca8:	b2ad      	uxth	r5, r5
 8017caa:	fb02 1203 	mla	r2, r2, r3, r1
 8017cae:	f108 0101 	add.w	r1, r8, #1
 8017cb2:	b292      	uxth	r2, r2
 8017cb4:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017cb8:	1c51      	adds	r1, r2, #1
 8017cba:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 8017cbe:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017cc2:	1c69      	adds	r1, r5, #1
 8017cc4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017cc8:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017ccc:	096d      	lsrs	r5, r5, #5
 8017cce:	ea42 0208 	orr.w	r2, r2, r8
 8017cd2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8017cd6:	432a      	orrs	r2, r5
 8017cd8:	f820 2b02 	strh.w	r2, [r0], #2
 8017cdc:	e7bd      	b.n	8017c5a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017cde:	4a14      	ldr	r2, [pc, #80]	@ (8017d30 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017ce0:	42b0      	cmp	r0, r6
 8017ce2:	d21f      	bcs.n	8017d24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017ce4:	eb00 050e 	add.w	r5, r0, lr
 8017ce8:	42a8      	cmp	r0, r5
 8017cea:	4621      	mov	r1, r4
 8017cec:	f104 0403 	add.w	r4, r4, #3
 8017cf0:	d210      	bcs.n	8017d14 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017cf2:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017cf6:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017cfa:	00db      	lsls	r3, r3, #3
 8017cfc:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017d00:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017d04:	430b      	orrs	r3, r1
 8017d06:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017d0a:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017d0e:	f820 3b02 	strh.w	r3, [r0], #2
 8017d12:	e7e9      	b.n	8017ce8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017d14:	4438      	add	r0, r7
 8017d16:	eb01 040c 	add.w	r4, r1, ip
 8017d1a:	e7e1      	b.n	8017ce0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017d1c:	4438      	add	r0, r7
 8017d1e:	eb01 040c 	add.w	r4, r1, ip
 8017d22:	e796      	b.n	8017c52 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017d24:	4b03      	ldr	r3, [pc, #12]	@ (8017d34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017d26:	6818      	ldr	r0, [r3, #0]
 8017d28:	6803      	ldr	r3, [r0, #0]
 8017d2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017d2c:	4798      	blx	r3
 8017d2e:	e768      	b.n	8017c02 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017d30:	fffff800 	.word	0xfffff800
 8017d34:	20001b6c 	.word	0x20001b6c
 8017d38:	20001b66 	.word	0x20001b66

08017d3c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017d3c:	b4f0      	push	{r4, r5, r6, r7}
 8017d3e:	4616      	mov	r6, r2
 8017d40:	461c      	mov	r4, r3
 8017d42:	460d      	mov	r5, r1
 8017d44:	9a04      	ldr	r2, [sp, #16]
 8017d46:	2e01      	cmp	r6, #1
 8017d48:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017d4c:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017d50:	d012      	beq.n	8017d78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017d52:	d303      	bcc.n	8017d5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017d54:	2e02      	cmp	r6, #2
 8017d56:	d00a      	beq.n	8017d6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017d58:	bcf0      	pop	{r4, r5, r6, r7}
 8017d5a:	4770      	bx	lr
 8017d5c:	6805      	ldr	r5, [r0, #0]
 8017d5e:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017d62:	68ed      	ldr	r5, [r5, #12]
 8017d64:	4613      	mov	r3, r2
 8017d66:	4622      	mov	r2, r4
 8017d68:	46ac      	mov	ip, r5
 8017d6a:	bcf0      	pop	{r4, r5, r6, r7}
 8017d6c:	4760      	bx	ip
 8017d6e:	4621      	mov	r1, r4
 8017d70:	4628      	mov	r0, r5
 8017d72:	bcf0      	pop	{r4, r5, r6, r7}
 8017d74:	f7ff bd94 	b.w	80178a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017d78:	4621      	mov	r1, r4
 8017d7a:	4628      	mov	r0, r5
 8017d7c:	bcf0      	pop	{r4, r5, r6, r7}
 8017d7e:	f7ff bee5 	b.w	8017b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017d84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d88:	b093      	sub	sp, #76	@ 0x4c
 8017d8a:	4681      	mov	r9, r0
 8017d8c:	4688      	mov	r8, r1
 8017d8e:	6810      	ldr	r0, [r2, #0]
 8017d90:	6851      	ldr	r1, [r2, #4]
 8017d92:	ac0e      	add	r4, sp, #56	@ 0x38
 8017d94:	4616      	mov	r6, r2
 8017d96:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 8017d9a:	4f6b      	ldr	r7, [pc, #428]	@ (8017f48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017d9c:	c403      	stmia	r4!, {r0, r1}
 8017d9e:	6818      	ldr	r0, [r3, #0]
 8017da0:	ac10      	add	r4, sp, #64	@ 0x40
 8017da2:	6859      	ldr	r1, [r3, #4]
 8017da4:	c403      	stmia	r4!, {r0, r1}
 8017da6:	a80e      	add	r0, sp, #56	@ 0x38
 8017da8:	f7f7 fe2a 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017dac:	4631      	mov	r1, r6
 8017dae:	a810      	add	r0, sp, #64	@ 0x40
 8017db0:	4e66      	ldr	r6, [pc, #408]	@ (8017f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017db2:	f7f7 fe4d 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017db6:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 8017dba:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 8017dbe:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 8017dc2:	6830      	ldr	r0, [r6, #0]
 8017dc4:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017dc8:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 8017dcc:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 8017dd0:	4489      	add	r9, r1
 8017dd2:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 8017dd6:	440a      	add	r2, r1
 8017dd8:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8017ddc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8017de0:	4413      	add	r3, r2
 8017de2:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 8017de6:	6803      	ldr	r3, [r0, #0]
 8017de8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8017dea:	4798      	blx	r3
 8017dec:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8017df0:	6830      	ldr	r0, [r6, #0]
 8017df2:	d01d      	beq.n	8017e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017df4:	2200      	movs	r2, #0
 8017df6:	6801      	ldr	r1, [r0, #0]
 8017df8:	b2a4      	uxth	r4, r4
 8017dfa:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8017dfe:	b2ad      	uxth	r5, r5
 8017e00:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017e04:	220b      	movs	r2, #11
 8017e06:	9207      	str	r2, [sp, #28]
 8017e08:	883a      	ldrh	r2, [r7, #0]
 8017e0a:	9502      	str	r5, [sp, #8]
 8017e0c:	9206      	str	r2, [sp, #24]
 8017e0e:	2201      	movs	r2, #1
 8017e10:	9401      	str	r4, [sp, #4]
 8017e12:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017e16:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 8017e1a:	9203      	str	r2, [sp, #12]
 8017e1c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8017e20:	9200      	str	r2, [sp, #0]
 8017e22:	4642      	mov	r2, r8
 8017e24:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 8017e26:	4649      	mov	r1, r9
 8017e28:	47a0      	blx	r4
 8017e2a:	b013      	add	sp, #76	@ 0x4c
 8017e2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e30:	6803      	ldr	r3, [r0, #0]
 8017e32:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017e34:	4798      	blx	r3
 8017e36:	883b      	ldrh	r3, [r7, #0]
 8017e38:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 8017e3c:	f04f 0e04 	mov.w	lr, #4
 8017e40:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 8017e44:	435d      	muls	r5, r3
 8017e46:	fb03 1202 	mla	r2, r3, r2, r1
 8017e4a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017e4e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017e52:	920c      	str	r2, [sp, #48]	@ 0x30
 8017e54:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 8017e58:	1b12      	subs	r2, r2, r4
 8017e5a:	920d      	str	r2, [sp, #52]	@ 0x34
 8017e5c:	0062      	lsls	r2, r4, #1
 8017e5e:	1b1c      	subs	r4, r3, r4
 8017e60:	920a      	str	r2, [sp, #40]	@ 0x28
 8017e62:	0063      	lsls	r3, r4, #1
 8017e64:	930b      	str	r3, [sp, #44]	@ 0x2c
 8017e66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8017e68:	4298      	cmp	r0, r3
 8017e6a:	d266      	bcs.n	8017f3a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017e6c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8017e6e:	eb00 0b03 	add.w	fp, r0, r3
 8017e72:	4558      	cmp	r0, fp
 8017e74:	d25c      	bcs.n	8017f30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017e76:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017e7a:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017e7e:	f858 2003 	ldr.w	r2, [r8, r3]
 8017e82:	0e11      	lsrs	r1, r2, #24
 8017e84:	d012      	beq.n	8017eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017e86:	29ff      	cmp	r1, #255	@ 0xff
 8017e88:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017e8c:	d110      	bne.n	8017eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017e8e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8017e92:	d10d      	bne.n	8017eb0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017e94:	0953      	lsrs	r3, r2, #5
 8017e96:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 8017e9a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017e9e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8017ea2:	f027 0707 	bic.w	r7, r7, #7
 8017ea6:	431f      	orrs	r7, r3
 8017ea8:	433a      	orrs	r2, r7
 8017eaa:	8002      	strh	r2, [r0, #0]
 8017eac:	3002      	adds	r0, #2
 8017eae:	e7e0      	b.n	8017e72 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017eb0:	fb0a f101 	mul.w	r1, sl, r1
 8017eb4:	8806      	ldrh	r6, [r0, #0]
 8017eb6:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017eba:	b2d2      	uxtb	r2, r2
 8017ebc:	1c4b      	adds	r3, r1, #1
 8017ebe:	1235      	asrs	r5, r6, #8
 8017ec0:	10f4      	asrs	r4, r6, #3
 8017ec2:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017ec6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8017eca:	00f6      	lsls	r6, r6, #3
 8017ecc:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8017ed0:	121b      	asrs	r3, r3, #8
 8017ed2:	b2f6      	uxtb	r6, r6
 8017ed4:	b299      	uxth	r1, r3
 8017ed6:	43db      	mvns	r3, r3
 8017ed8:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017edc:	fb1c fc01 	smulbb	ip, ip, r1
 8017ee0:	b2db      	uxtb	r3, r3
 8017ee2:	fb12 f201 	smulbb	r2, r2, r1
 8017ee6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017eea:	fb05 c503 	mla	r5, r5, r3, ip
 8017eee:	b2ff      	uxtb	r7, r7
 8017ef0:	fb06 2203 	mla	r2, r6, r3, r2
 8017ef4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017ef8:	fb17 f701 	smulbb	r7, r7, r1
 8017efc:	b2ad      	uxth	r5, r5
 8017efe:	b292      	uxth	r2, r2
 8017f00:	fb04 7403 	mla	r4, r4, r3, r7
 8017f04:	f105 0c01 	add.w	ip, r5, #1
 8017f08:	1c57      	adds	r7, r2, #1
 8017f0a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017f0e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017f12:	b2a4      	uxth	r4, r4
 8017f14:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8017f18:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017f1c:	433d      	orrs	r5, r7
 8017f1e:	1c67      	adds	r7, r4, #1
 8017f20:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017f24:	0964      	lsrs	r4, r4, #5
 8017f26:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8017f2a:	4325      	orrs	r5, r4
 8017f2c:	8005      	strh	r5, [r0, #0]
 8017f2e:	e7bd      	b.n	8017eac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017f30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8017f32:	4418      	add	r0, r3
 8017f34:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017f36:	4499      	add	r9, r3
 8017f38:	e795      	b.n	8017e66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017f3a:	4b04      	ldr	r3, [pc, #16]	@ (8017f4c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017f3c:	6818      	ldr	r0, [r3, #0]
 8017f3e:	6803      	ldr	r3, [r0, #0]
 8017f40:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017f42:	4798      	blx	r3
 8017f44:	e771      	b.n	8017e2a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017f46:	bf00      	nop
 8017f48:	20001b66 	.word	0x20001b66
 8017f4c:	20001b6c 	.word	0x20001b6c

08017f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f54:	b087      	sub	sp, #28
 8017f56:	4680      	mov	r8, r0
 8017f58:	460d      	mov	r5, r1
 8017f5a:	4614      	mov	r4, r2
 8017f5c:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 8017f60:	2e00      	cmp	r6, #0
 8017f62:	f000 80b9 	beq.w	80180d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017f66:	6810      	ldr	r0, [r2, #0]
 8017f68:	af02      	add	r7, sp, #8
 8017f6a:	6851      	ldr	r1, [r2, #4]
 8017f6c:	c703      	stmia	r7!, {r0, r1}
 8017f6e:	6818      	ldr	r0, [r3, #0]
 8017f70:	af04      	add	r7, sp, #16
 8017f72:	6859      	ldr	r1, [r3, #4]
 8017f74:	c703      	stmia	r7!, {r0, r1}
 8017f76:	a802      	add	r0, sp, #8
 8017f78:	f7f7 fd42 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f7c:	4621      	mov	r1, r4
 8017f7e:	a804      	add	r0, sp, #16
 8017f80:	f7f7 fd66 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f84:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017f88:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017f8c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017f90:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017f94:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017f98:	eb08 0401 	add.w	r4, r8, r1
 8017f9c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017fa0:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017fa4:	440a      	add	r2, r1
 8017fa6:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017faa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017fae:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017fb2:	4413      	add	r3, r2
 8017fb4:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017fb8:	4b49      	ldr	r3, [pc, #292]	@ (80180e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017fba:	6818      	ldr	r0, [r3, #0]
 8017fbc:	6803      	ldr	r3, [r0, #0]
 8017fbe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017fc0:	4798      	blx	r3
 8017fc2:	4b48      	ldr	r3, [pc, #288]	@ (80180e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017fc4:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017fc8:	2eff      	cmp	r6, #255	@ 0xff
 8017fca:	881a      	ldrh	r2, [r3, #0]
 8017fcc:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017fd0:	fb02 c101 	mla	r1, r2, r1, ip
 8017fd4:	fb02 f207 	mul.w	r2, r2, r7
 8017fd8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017fdc:	f105 0104 	add.w	r1, r5, #4
 8017fe0:	461d      	mov	r5, r3
 8017fe2:	d05a      	beq.n	801809a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017fe4:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 8017fe8:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017fec:	b2b6      	uxth	r6, r6
 8017fee:	9301      	str	r3, [sp, #4]
 8017ff0:	fa1f fe8e 	uxth.w	lr, lr
 8017ff4:	4282      	cmp	r2, r0
 8017ff6:	d96a      	bls.n	80180ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017ff8:	eb00 0b0a 	add.w	fp, r0, sl
 8017ffc:	4583      	cmp	fp, r0
 8017ffe:	d940      	bls.n	8018082 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018000:	8805      	ldrh	r5, [r0, #0]
 8018002:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018006:	122f      	asrs	r7, r5, #8
 8018008:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801800c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018010:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018014:	00ed      	lsls	r5, r5, #3
 8018016:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801801a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801801e:	fb17 f70e 	smulbb	r7, r7, lr
 8018022:	b2ed      	uxtb	r5, r5
 8018024:	fb19 f90e 	smulbb	r9, r9, lr
 8018028:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801802c:	fb15 f50e 	smulbb	r5, r5, lr
 8018030:	fb0c 7c06 	mla	ip, ip, r6, r7
 8018034:	10df      	asrs	r7, r3, #3
 8018036:	00db      	lsls	r3, r3, #3
 8018038:	fa1f fc8c 	uxth.w	ip, ip
 801803c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018040:	b2db      	uxtb	r3, r3
 8018042:	fb07 9706 	mla	r7, r7, r6, r9
 8018046:	f10c 0901 	add.w	r9, ip, #1
 801804a:	fb03 5306 	mla	r3, r3, r6, r5
 801804e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8018052:	b29b      	uxth	r3, r3
 8018054:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 8018058:	b2bf      	uxth	r7, r7
 801805a:	f103 0c01 	add.w	ip, r3, #1
 801805e:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018062:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018066:	ea4c 0c09 	orr.w	ip, ip, r9
 801806a:	f107 0901 	add.w	r9, r7, #1
 801806e:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8018072:	097f      	lsrs	r7, r7, #5
 8018074:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8018078:	ea4c 0c07 	orr.w	ip, ip, r7
 801807c:	f820 cb02 	strh.w	ip, [r0], #2
 8018080:	e7bc      	b.n	8017ffc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018082:	9b01      	ldr	r3, [sp, #4]
 8018084:	881b      	ldrh	r3, [r3, #0]
 8018086:	eba3 0308 	sub.w	r3, r3, r8
 801808a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801808e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018092:	eba3 0308 	sub.w	r3, r3, r8
 8018096:	441c      	add	r4, r3
 8018098:	e7ac      	b.n	8017ff4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801809a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801809e:	4282      	cmp	r2, r0
 80180a0:	d915      	bls.n	80180ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80180a2:	eb00 060a 	add.w	r6, r0, sl
 80180a6:	4286      	cmp	r6, r0
 80180a8:	d906      	bls.n	80180b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80180aa:	f814 3b01 	ldrb.w	r3, [r4], #1
 80180ae:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80180b2:	f820 3b02 	strh.w	r3, [r0], #2
 80180b6:	e7f6      	b.n	80180a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80180b8:	882b      	ldrh	r3, [r5, #0]
 80180ba:	eba3 0308 	sub.w	r3, r3, r8
 80180be:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180c2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80180c6:	eba3 0308 	sub.w	r3, r3, r8
 80180ca:	441c      	add	r4, r3
 80180cc:	e7e7      	b.n	801809e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80180ce:	4b04      	ldr	r3, [pc, #16]	@ (80180e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80180d0:	6818      	ldr	r0, [r3, #0]
 80180d2:	6803      	ldr	r3, [r0, #0]
 80180d4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80180d6:	4798      	blx	r3
 80180d8:	b007      	add	sp, #28
 80180da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80180de:	bf00      	nop
 80180e0:	20001b6c 	.word	0x20001b6c
 80180e4:	20001b66 	.word	0x20001b66

080180e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80180e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80180ec:	b091      	sub	sp, #68	@ 0x44
 80180ee:	4680      	mov	r8, r0
 80180f0:	460f      	mov	r7, r1
 80180f2:	4614      	mov	r4, r2
 80180f4:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 80180f8:	2d00      	cmp	r5, #0
 80180fa:	d051      	beq.n	80181a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80180fc:	6810      	ldr	r0, [r2, #0]
 80180fe:	ae0c      	add	r6, sp, #48	@ 0x30
 8018100:	6851      	ldr	r1, [r2, #4]
 8018102:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 8018304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018106:	c603      	stmia	r6!, {r0, r1}
 8018108:	6818      	ldr	r0, [r3, #0]
 801810a:	ae0e      	add	r6, sp, #56	@ 0x38
 801810c:	6859      	ldr	r1, [r3, #4]
 801810e:	c603      	stmia	r6!, {r0, r1}
 8018110:	a80c      	add	r0, sp, #48	@ 0x30
 8018112:	f7f7 fc75 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018116:	4621      	mov	r1, r4
 8018118:	a80e      	add	r0, sp, #56	@ 0x38
 801811a:	f7f7 fc99 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801811e:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 8018122:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 8018126:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801812a:	f8d9 0000 	ldr.w	r0, [r9]
 801812e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018132:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 8018136:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801813a:	eb08 0401 	add.w	r4, r8, r1
 801813e:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 8018142:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 8018308 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018146:	440a      	add	r2, r1
 8018148:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801814c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8018150:	4413      	add	r3, r2
 8018152:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 8018156:	6803      	ldr	r3, [r0, #0]
 8018158:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801815a:	4798      	blx	r3
 801815c:	f010 0f80 	tst.w	r0, #128	@ 0x80
 8018160:	f8d9 0000 	ldr.w	r0, [r9]
 8018164:	d01f      	beq.n	80181a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018166:	2200      	movs	r2, #0
 8018168:	6801      	ldr	r1, [r0, #0]
 801816a:	b2b6      	uxth	r6, r6
 801816c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8018170:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018174:	220b      	movs	r2, #11
 8018176:	9207      	str	r2, [sp, #28]
 8018178:	f8b8 2000 	ldrh.w	r2, [r8]
 801817c:	9601      	str	r6, [sp, #4]
 801817e:	9206      	str	r2, [sp, #24]
 8018180:	2201      	movs	r2, #1
 8018182:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018186:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801818a:	9203      	str	r2, [sp, #12]
 801818c:	fa1f f28a 	uxth.w	r2, sl
 8018190:	9202      	str	r2, [sp, #8]
 8018192:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8018196:	9200      	str	r2, [sp, #0]
 8018198:	463a      	mov	r2, r7
 801819a:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801819c:	4621      	mov	r1, r4
 801819e:	47a8      	blx	r5
 80181a0:	b011      	add	sp, #68	@ 0x44
 80181a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181a6:	6803      	ldr	r3, [r0, #0]
 80181a8:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80181ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80181ae:	4798      	blx	r3
 80181b0:	f8b8 2000 	ldrh.w	r2, [r8]
 80181b4:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 80181b8:	2dff      	cmp	r5, #255	@ 0xff
 80181ba:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 80181be:	fb0a fa02 	mul.w	sl, sl, r2
 80181c2:	fb02 1303 	mla	r3, r2, r3, r1
 80181c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80181ca:	d062      	beq.n	8018292 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80181cc:	ea6f 0c05 	mvn.w	ip, r5
 80181d0:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80181d4:	b2ad      	uxth	r5, r5
 80181d6:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 80181da:	fa5f fc8c 	uxtb.w	ip, ip
 80181de:	930a      	str	r3, [sp, #40]	@ 0x28
 80181e0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80181e2:	4298      	cmp	r0, r3
 80181e4:	f080 8085 	bcs.w	80182f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80181e8:	eb00 0b09 	add.w	fp, r0, r9
 80181ec:	4558      	cmp	r0, fp
 80181ee:	d246      	bcs.n	801827e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80181f0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80181f4:	2303      	movs	r3, #3
 80181f6:	2204      	movs	r2, #4
 80181f8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80181fc:	8803      	ldrh	r3, [r0, #0]
 80181fe:	eb07 0a0e 	add.w	sl, r7, lr
 8018202:	1219      	asrs	r1, r3, #8
 8018204:	10da      	asrs	r2, r3, #3
 8018206:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801820a:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801820e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8018212:	00db      	lsls	r3, r3, #3
 8018214:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8018218:	fb18 f805 	smulbb	r8, r8, r5
 801821c:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018220:	fb1e fe05 	smulbb	lr, lr, r5
 8018224:	b2db      	uxtb	r3, r3
 8018226:	fb01 810c 	mla	r1, r1, ip, r8
 801822a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801822e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8018232:	fb18 f805 	smulbb	r8, r8, r5
 8018236:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801823a:	b289      	uxth	r1, r1
 801823c:	fb02 820c 	mla	r2, r2, ip, r8
 8018240:	fb03 e30c 	mla	r3, r3, ip, lr
 8018244:	f101 0801 	add.w	r8, r1, #1
 8018248:	b292      	uxth	r2, r2
 801824a:	b29b      	uxth	r3, r3
 801824c:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018250:	f102 0801 	add.w	r8, r2, #1
 8018254:	f103 0e01 	add.w	lr, r3, #1
 8018258:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801825c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8018260:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018264:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018268:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801826c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018270:	ea4e 0101 	orr.w	r1, lr, r1
 8018274:	ea41 0108 	orr.w	r1, r1, r8
 8018278:	f820 1b02 	strh.w	r1, [r0], #2
 801827c:	e7b6      	b.n	80181ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801827e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018280:	881b      	ldrh	r3, [r3, #0]
 8018282:	1b9b      	subs	r3, r3, r6
 8018284:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018288:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801828c:	1b9b      	subs	r3, r3, r6
 801828e:	441c      	add	r4, r3
 8018290:	e7a6      	b.n	80181e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018292:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018296:	2203      	movs	r2, #3
 8018298:	2504      	movs	r5, #4
 801829a:	4919      	ldr	r1, [pc, #100]	@ (8018300 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801829c:	4550      	cmp	r0, sl
 801829e:	d228      	bcs.n	80182f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80182a0:	eb00 0c09 	add.w	ip, r0, r9
 80182a4:	4560      	cmp	r0, ip
 80182a6:	4623      	mov	r3, r4
 80182a8:	d219      	bcs.n	80182de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80182aa:	f893 e000 	ldrb.w	lr, [r3]
 80182ae:	3401      	adds	r4, #1
 80182b0:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 80182b4:	eb07 0b0e 	add.w	fp, r7, lr
 80182b8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80182bc:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80182c0:	f89b b001 	ldrb.w	fp, [fp, #1]
 80182c4:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80182c8:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80182cc:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80182d0:	ea43 030b 	orr.w	r3, r3, fp
 80182d4:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80182d8:	f820 3b02 	strh.w	r3, [r0], #2
 80182dc:	e7e2      	b.n	80182a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80182de:	f8b8 3000 	ldrh.w	r3, [r8]
 80182e2:	1b9b      	subs	r3, r3, r6
 80182e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80182e8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80182ec:	1b9b      	subs	r3, r3, r6
 80182ee:	441c      	add	r4, r3
 80182f0:	e7d4      	b.n	801829c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80182f2:	4b04      	ldr	r3, [pc, #16]	@ (8018304 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80182f4:	6818      	ldr	r0, [r3, #0]
 80182f6:	6803      	ldr	r3, [r0, #0]
 80182f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80182fa:	4798      	blx	r3
 80182fc:	e750      	b.n	80181a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80182fe:	bf00      	nop
 8018300:	fffff800 	.word	0xfffff800
 8018304:	20001b6c 	.word	0x20001b6c
 8018308:	20001b66 	.word	0x20001b66

0801830c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801830c:	b4f0      	push	{r4, r5, r6, r7}
 801830e:	460c      	mov	r4, r1
 8018310:	4611      	mov	r1, r2
 8018312:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8018316:	461a      	mov	r2, r3
 8018318:	780f      	ldrb	r7, [r1, #0]
 801831a:	9b04      	ldr	r3, [sp, #16]
 801831c:	2f01      	cmp	r7, #1
 801831e:	784e      	ldrb	r6, [r1, #1]
 8018320:	d038      	beq.n	8018394 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 8018322:	d31f      	bcc.n	8018364 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 8018324:	2f02      	cmp	r7, #2
 8018326:	d14d      	bne.n	80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018328:	2e03      	cmp	r6, #3
 801832a:	d84b      	bhi.n	80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801832c:	e8df f006 	tbb	[pc, r6]
 8018330:	17140702 	.word	0x17140702
 8018334:	9504      	str	r5, [sp, #16]
 8018336:	4620      	mov	r0, r4
 8018338:	bcf0      	pop	{r4, r5, r6, r7}
 801833a:	f7ff be09 	b.w	8017f50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801833e:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 8018340:	2800      	cmp	r0, #0
 8018342:	d03f      	beq.n	80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018344:	6806      	ldr	r6, [r0, #0]
 8018346:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801834a:	68b5      	ldr	r5, [r6, #8]
 801834c:	4613      	mov	r3, r2
 801834e:	46ac      	mov	ip, r5
 8018350:	460a      	mov	r2, r1
 8018352:	4621      	mov	r1, r4
 8018354:	bcf0      	pop	{r4, r5, r6, r7}
 8018356:	4760      	bx	ip
 8018358:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801835c:	e7f0      	b.n	8018340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801835e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018362:	e7ed      	b.n	8018340 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 8018364:	2e03      	cmp	r6, #3
 8018366:	d82d      	bhi.n	80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018368:	e8df f006 	tbb	[pc, r6]
 801836c:	110e0702 	.word	0x110e0702
 8018370:	9504      	str	r5, [sp, #16]
 8018372:	4620      	mov	r0, r4
 8018374:	bcf0      	pop	{r4, r5, r6, r7}
 8018376:	f7ff bd05 	b.w	8017d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801837a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801837c:	b310      	cbz	r0, 80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801837e:	6806      	ldr	r6, [r0, #0]
 8018380:	e9cd 3504 	strd	r3, r5, [sp, #16]
 8018384:	68f5      	ldr	r5, [r6, #12]
 8018386:	e7e1      	b.n	801834c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 8018388:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801838c:	e7f6      	b.n	801837c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801838e:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 8018392:	e7f3      	b.n	801837c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 8018394:	2e03      	cmp	r6, #3
 8018396:	d815      	bhi.n	80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 8018398:	e8df f006 	tbb	[pc, r6]
 801839c:	110e0702 	.word	0x110e0702
 80183a0:	9504      	str	r5, [sp, #16]
 80183a2:	4620      	mov	r0, r4
 80183a4:	bcf0      	pop	{r4, r5, r6, r7}
 80183a6:	f7ff be9f 	b.w	80180e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80183aa:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 80183ac:	b150      	cbz	r0, 80183c4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 80183ae:	6806      	ldr	r6, [r0, #0]
 80183b0:	e9cd 3504 	strd	r3, r5, [sp, #16]
 80183b4:	6935      	ldr	r5, [r6, #16]
 80183b6:	e7c9      	b.n	801834c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 80183b8:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 80183bc:	e7f6      	b.n	80183ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80183be:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 80183c2:	e7f3      	b.n	80183ac <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 80183c4:	bcf0      	pop	{r4, r5, r6, r7}
 80183c6:	4770      	bx	lr

080183c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80183c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183cc:	b087      	sub	sp, #28
 80183ce:	4604      	mov	r4, r0
 80183d0:	460e      	mov	r6, r1
 80183d2:	6810      	ldr	r0, [r2, #0]
 80183d4:	6851      	ldr	r1, [r2, #4]
 80183d6:	ad02      	add	r5, sp, #8
 80183d8:	4617      	mov	r7, r2
 80183da:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 80183de:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 8018610 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80183e2:	c503      	stmia	r5!, {r0, r1}
 80183e4:	6818      	ldr	r0, [r3, #0]
 80183e6:	ad04      	add	r5, sp, #16
 80183e8:	6859      	ldr	r1, [r3, #4]
 80183ea:	c503      	stmia	r5!, {r0, r1}
 80183ec:	a802      	add	r0, sp, #8
 80183ee:	f7f7 fb07 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183f2:	4639      	mov	r1, r7
 80183f4:	a804      	add	r0, sp, #16
 80183f6:	f7f7 fb2b 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183fa:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80183fe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018402:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8018406:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801840a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801840e:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018412:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8018416:	440e      	add	r6, r1
 8018418:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801841c:	440a      	add	r2, r1
 801841e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018422:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018426:	4413      	add	r3, r2
 8018428:	f8ad 3012 	strh.w	r3, [sp, #18]
 801842c:	4b77      	ldr	r3, [pc, #476]	@ (801860c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801842e:	6818      	ldr	r0, [r3, #0]
 8018430:	6803      	ldr	r3, [r0, #0]
 8018432:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018434:	4798      	blx	r3
 8018436:	f8b9 b000 	ldrh.w	fp, [r9]
 801843a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801843e:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 8018442:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018446:	fb05 f50b 	mul.w	r5, r5, fp
 801844a:	fb0b 2303 	mla	r3, fp, r3, r2
 801844e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018452:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018456:	9300      	str	r3, [sp, #0]
 8018458:	d069      	beq.n	801852e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801845a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801845e:	4558      	cmp	r0, fp
 8018460:	f080 80cc 	bcs.w	80185fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018464:	9b00      	ldr	r3, [sp, #0]
 8018466:	4631      	mov	r1, r6
 8018468:	18c3      	adds	r3, r0, r3
 801846a:	9301      	str	r3, [sp, #4]
 801846c:	9b01      	ldr	r3, [sp, #4]
 801846e:	4298      	cmp	r0, r3
 8018470:	d24f      	bcs.n	8018512 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018472:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018476:	2a00      	cmp	r2, #0
 8018478:	d048      	beq.n	801850c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801847a:	fb0a f202 	mul.w	r2, sl, r2
 801847e:	1c53      	adds	r3, r2, #1
 8018480:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018484:	121b      	asrs	r3, r3, #8
 8018486:	d041      	beq.n	801850c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018488:	8802      	ldrh	r2, [r0, #0]
 801848a:	b29e      	uxth	r6, r3
 801848c:	f8b4 c000 	ldrh.w	ip, [r4]
 8018490:	43db      	mvns	r3, r3
 8018492:	1215      	asrs	r5, r2, #8
 8018494:	b2db      	uxtb	r3, r3
 8018496:	ea4f 272c 	mov.w	r7, ip, asr #8
 801849a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801849e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80184a2:	fb15 f503 	smulbb	r5, r5, r3
 80184a6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80184aa:	00d2      	lsls	r2, r2, #3
 80184ac:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80184b0:	fb07 5706 	mla	r7, r7, r6, r5
 80184b4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80184b8:	b2d2      	uxtb	r2, r2
 80184ba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80184be:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80184c2:	fb1e fe03 	smulbb	lr, lr, r3
 80184c6:	b2bf      	uxth	r7, r7
 80184c8:	fb12 f203 	smulbb	r2, r2, r3
 80184cc:	fa5f fc8c 	uxtb.w	ip, ip
 80184d0:	fb05 e506 	mla	r5, r5, r6, lr
 80184d4:	f107 0e01 	add.w	lr, r7, #1
 80184d8:	fb0c 2c06 	mla	ip, ip, r6, r2
 80184dc:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80184e0:	fa1f fc8c 	uxth.w	ip, ip
 80184e4:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 80184e8:	b2ad      	uxth	r5, r5
 80184ea:	f10c 0701 	add.w	r7, ip, #1
 80184ee:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80184f2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80184f6:	ea47 070e 	orr.w	r7, r7, lr
 80184fa:	f105 0e01 	add.w	lr, r5, #1
 80184fe:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018502:	096d      	lsrs	r5, r5, #5
 8018504:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018508:	432f      	orrs	r7, r5
 801850a:	8007      	strh	r7, [r0, #0]
 801850c:	3002      	adds	r0, #2
 801850e:	3402      	adds	r4, #2
 8018510:	e7ac      	b.n	801846c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018512:	f8b9 3000 	ldrh.w	r3, [r9]
 8018516:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801851a:	eba3 0308 	sub.w	r3, r3, r8
 801851e:	eba6 0608 	sub.w	r6, r6, r8
 8018522:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018526:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801852a:	440e      	add	r6, r1
 801852c:	e797      	b.n	801845e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801852e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018532:	42a8      	cmp	r0, r5
 8018534:	d262      	bcs.n	80185fc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018536:	9b00      	ldr	r3, [sp, #0]
 8018538:	4631      	mov	r1, r6
 801853a:	eb00 0b03 	add.w	fp, r0, r3
 801853e:	4558      	cmp	r0, fp
 8018540:	d24e      	bcs.n	80185e0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018542:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018546:	b12b      	cbz	r3, 8018554 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018548:	2bff      	cmp	r3, #255	@ 0xff
 801854a:	f8b4 e000 	ldrh.w	lr, [r4]
 801854e:	d104      	bne.n	801855a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018550:	f8a0 e000 	strh.w	lr, [r0]
 8018554:	3002      	adds	r0, #2
 8018556:	3402      	adds	r4, #2
 8018558:	e7f1      	b.n	801853e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801855a:	8802      	ldrh	r2, [r0, #0]
 801855c:	b29f      	uxth	r7, r3
 801855e:	43db      	mvns	r3, r3
 8018560:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018564:	1216      	asrs	r6, r2, #8
 8018566:	b2db      	uxtb	r3, r3
 8018568:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801856c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018570:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018574:	00d2      	lsls	r2, r2, #3
 8018576:	fb16 f603 	smulbb	r6, r6, r3
 801857a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801857e:	b2d2      	uxtb	r2, r2
 8018580:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018584:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018588:	fb1a fa03 	smulbb	sl, sl, r3
 801858c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018590:	fa1f fc8c 	uxth.w	ip, ip
 8018594:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018598:	fb12 f303 	smulbb	r3, r2, r3
 801859c:	fa5f fe8e 	uxtb.w	lr, lr
 80185a0:	fb06 a607 	mla	r6, r6, r7, sl
 80185a4:	f10c 0201 	add.w	r2, ip, #1
 80185a8:	fb0e 3307 	mla	r3, lr, r7, r3
 80185ac:	b2b6      	uxth	r6, r6
 80185ae:	b29b      	uxth	r3, r3
 80185b0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80185b4:	f106 0a01 	add.w	sl, r6, #1
 80185b8:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 80185bc:	f103 0c01 	add.w	ip, r3, #1
 80185c0:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80185c4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80185c8:	0976      	lsrs	r6, r6, #5
 80185ca:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80185ce:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80185d2:	ea4c 0c02 	orr.w	ip, ip, r2
 80185d6:	ea4c 0c06 	orr.w	ip, ip, r6
 80185da:	f8a0 c000 	strh.w	ip, [r0]
 80185de:	e7b9      	b.n	8018554 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80185e0:	f8b9 3000 	ldrh.w	r3, [r9]
 80185e4:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80185e8:	eba3 0308 	sub.w	r3, r3, r8
 80185ec:	eba6 0608 	sub.w	r6, r6, r8
 80185f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80185f4:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80185f8:	440e      	add	r6, r1
 80185fa:	e79a      	b.n	8018532 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80185fc:	4b03      	ldr	r3, [pc, #12]	@ (801860c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80185fe:	6818      	ldr	r0, [r3, #0]
 8018600:	6803      	ldr	r3, [r0, #0]
 8018602:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018604:	4798      	blx	r3
 8018606:	b007      	add	sp, #28
 8018608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801860c:	20001b6c 	.word	0x20001b6c
 8018610:	20001b66 	.word	0x20001b66

08018614 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018618:	b089      	sub	sp, #36	@ 0x24
 801861a:	4607      	mov	r7, r0
 801861c:	4688      	mov	r8, r1
 801861e:	4692      	mov	sl, r2
 8018620:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 8018624:	4699      	mov	r9, r3
 8018626:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018628:	2e00      	cmp	r6, #0
 801862a:	d048      	beq.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801862c:	4608      	mov	r0, r1
 801862e:	f7fa f81b 	bl	8012668 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018632:	4605      	mov	r5, r0
 8018634:	4640      	mov	r0, r8
 8018636:	f7fa f84b 	bl	80126d0 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801863a:	f8ad 000e 	strh.w	r0, [sp, #14]
 801863e:	4640      	mov	r0, r8
 8018640:	f8ad a008 	strh.w	sl, [sp, #8]
 8018644:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018648:	f8ad 900a 	strh.w	r9, [sp, #10]
 801864c:	f7fa f8fe 	bl	801284c <_ZNK8touchgfx6Bitmap7getDataEv>
 8018650:	4605      	mov	r5, r0
 8018652:	4640      	mov	r0, r8
 8018654:	f7fa f92a 	bl	80128ac <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018658:	4682      	mov	sl, r0
 801865a:	4640      	mov	r0, r8
 801865c:	f7fa f97a 	bl	8012954 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018660:	2810      	cmp	r0, #16
 8018662:	d82c      	bhi.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018664:	e8df f010 	tbh	[pc, r0, lsl #1]
 8018668:	00ba00ca 	.word	0x00ba00ca
 801866c:	002b0011 	.word	0x002b0011
 8018670:	002b002b 	.word	0x002b002b
 8018674:	002b002b 	.word	0x002b002b
 8018678:	002b002b 	.word	0x002b002b
 801867c:	00c1002b 	.word	0x00c1002b
 8018680:	002b002b 	.word	0x002b002b
 8018684:	002b0180 	.word	0x002b0180
 8018688:	0173      	.short	0x0173
 801868a:	4bbc      	ldr	r3, [pc, #752]	@ (801897c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801868c:	6818      	ldr	r0, [r3, #0]
 801868e:	6803      	ldr	r3, [r0, #0]
 8018690:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018692:	4798      	blx	r3
 8018694:	2eff      	cmp	r6, #255	@ 0xff
 8018696:	d101      	bne.n	801869c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8018698:	0683      	lsls	r3, r0, #26
 801869a:	d506      	bpl.n	80186aa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801869c:	4633      	mov	r3, r6
 801869e:	4622      	mov	r2, r4
 80186a0:	a902      	add	r1, sp, #8
 80186a2:	4628      	mov	r0, r5
 80186a4:	f7ff f8fc 	bl	80178a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80186a8:	e009      	b.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80186aa:	4640      	mov	r0, r8
 80186ac:	f7fa f896 	bl	80127dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80186b0:	b940      	cbnz	r0, 80186c4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 80186b2:	4623      	mov	r3, r4
 80186b4:	aa02      	add	r2, sp, #8
 80186b6:	4629      	mov	r1, r5
 80186b8:	4638      	mov	r0, r7
 80186ba:	f7ff f9d7 	bl	8017a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 80186be:	b009      	add	sp, #36	@ 0x24
 80186c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80186c4:	f10d 0918 	add.w	r9, sp, #24
 80186c8:	4641      	mov	r1, r8
 80186ca:	f10d 0810 	add.w	r8, sp, #16
 80186ce:	4648      	mov	r0, r9
 80186d0:	f7fa f832 	bl	8012738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80186d4:	e899 0003 	ldmia.w	r9, {r0, r1}
 80186d8:	e888 0003 	stmia.w	r8, {r0, r1}
 80186dc:	4640      	mov	r0, r8
 80186de:	4621      	mov	r1, r4
 80186e0:	f7f5 fab8 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 80186e4:	4640      	mov	r0, r8
 80186e6:	f7f5 faf8 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 80186ea:	2800      	cmp	r0, #0
 80186ec:	d1d6      	bne.n	801869c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 80186ee:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80186f2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80186f6:	4293      	cmp	r3, r2
 80186f8:	dd12      	ble.n	8018720 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 80186fa:	1a9b      	subs	r3, r3, r2
 80186fc:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018700:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018704:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018708:	4628      	mov	r0, r5
 801870a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801870e:	464a      	mov	r2, r9
 8018710:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018714:	a902      	add	r1, sp, #8
 8018716:	f8ad 301e 	strh.w	r3, [sp, #30]
 801871a:	4633      	mov	r3, r6
 801871c:	f7ff f8c0 	bl	80178a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018720:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018724:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018728:	4293      	cmp	r3, r2
 801872a:	dd12      	ble.n	8018752 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801872c:	1a9b      	subs	r3, r3, r2
 801872e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018732:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018736:	f8ad 2018 	strh.w	r2, [sp, #24]
 801873a:	464a      	mov	r2, r9
 801873c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018740:	4628      	mov	r0, r5
 8018742:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018746:	23ff      	movs	r3, #255	@ 0xff
 8018748:	f8ad 101e 	strh.w	r1, [sp, #30]
 801874c:	a902      	add	r1, sp, #8
 801874e:	f7ff f8a7 	bl	80178a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018752:	4643      	mov	r3, r8
 8018754:	aa02      	add	r2, sp, #8
 8018756:	4629      	mov	r1, r5
 8018758:	4638      	mov	r0, r7
 801875a:	f7ff f987 	bl	8017a6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801875e:	88a2      	ldrh	r2, [r4, #4]
 8018760:	8823      	ldrh	r3, [r4, #0]
 8018762:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018766:	4413      	add	r3, r2
 8018768:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801876c:	440a      	add	r2, r1
 801876e:	b29b      	uxth	r3, r3
 8018770:	b292      	uxth	r2, r2
 8018772:	b218      	sxth	r0, r3
 8018774:	b211      	sxth	r1, r2
 8018776:	4288      	cmp	r0, r1
 8018778:	dd12      	ble.n	80187a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801877a:	1a9b      	subs	r3, r3, r2
 801877c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018780:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018784:	464a      	mov	r2, r9
 8018786:	f8ad 1018 	strh.w	r1, [sp, #24]
 801878a:	a902      	add	r1, sp, #8
 801878c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018790:	23ff      	movs	r3, #255	@ 0xff
 8018792:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018796:	4628      	mov	r0, r5
 8018798:	f8ad 601a 	strh.w	r6, [sp, #26]
 801879c:	f7ff f880 	bl	80178a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80187a0:	88e2      	ldrh	r2, [r4, #6]
 80187a2:	8863      	ldrh	r3, [r4, #2]
 80187a4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80187a8:	4413      	add	r3, r2
 80187aa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80187ae:	440a      	add	r2, r1
 80187b0:	b29b      	uxth	r3, r3
 80187b2:	b292      	uxth	r2, r2
 80187b4:	b218      	sxth	r0, r3
 80187b6:	b211      	sxth	r1, r2
 80187b8:	4288      	cmp	r0, r1
 80187ba:	dd80      	ble.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80187bc:	1a9b      	subs	r3, r3, r2
 80187be:	f9b4 6000 	ldrsh.w	r6, [r4]
 80187c2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80187c6:	464a      	mov	r2, r9
 80187c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80187cc:	23ff      	movs	r3, #255	@ 0xff
 80187ce:	f8ad 6018 	strh.w	r6, [sp, #24]
 80187d2:	f8ad 101a 	strh.w	r1, [sp, #26]
 80187d6:	f8ad 001c 	strh.w	r0, [sp, #28]
 80187da:	e761      	b.n	80186a0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 80187dc:	4633      	mov	r3, r6
 80187de:	4622      	mov	r2, r4
 80187e0:	a902      	add	r1, sp, #8
 80187e2:	4628      	mov	r0, r5
 80187e4:	f7ff f9b2 	bl	8017b4c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80187e8:	e769      	b.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80187ea:	e9cd 4600 	strd	r4, r6, [sp]
 80187ee:	ab02      	add	r3, sp, #8
 80187f0:	4652      	mov	r2, sl
 80187f2:	4629      	mov	r1, r5
 80187f4:	4638      	mov	r0, r7
 80187f6:	f7ff fd89 	bl	801830c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80187fa:	e760      	b.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 80187fc:	4640      	mov	r0, r8
 80187fe:	f7f9 ffed 	bl	80127dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018802:	b948      	cbnz	r0, 8018818 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 8018804:	683b      	ldr	r3, [r7, #0]
 8018806:	aa02      	add	r2, sp, #8
 8018808:	4629      	mov	r1, r5
 801880a:	e9cd 6000 	strd	r6, r0, [sp]
 801880e:	4638      	mov	r0, r7
 8018810:	68de      	ldr	r6, [r3, #12]
 8018812:	4623      	mov	r3, r4
 8018814:	47b0      	blx	r6
 8018816:	e752      	b.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018818:	f10d 0918 	add.w	r9, sp, #24
 801881c:	4641      	mov	r1, r8
 801881e:	f10d 0810 	add.w	r8, sp, #16
 8018822:	4648      	mov	r0, r9
 8018824:	f7f9 ff88 	bl	8012738 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018828:	e899 0003 	ldmia.w	r9, {r0, r1}
 801882c:	e888 0003 	stmia.w	r8, {r0, r1}
 8018830:	4640      	mov	r0, r8
 8018832:	4621      	mov	r1, r4
 8018834:	f7f5 fa0e 	bl	800dc54 <_ZN8touchgfx4RectaNERKS0_>
 8018838:	4640      	mov	r0, r8
 801883a:	f7f5 fa4e 	bl	800dcda <_ZNK8touchgfx4Rect7isEmptyEv>
 801883e:	b138      	cbz	r0, 8018850 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 8018840:	4623      	mov	r3, r4
 8018842:	9600      	str	r6, [sp, #0]
 8018844:	aa02      	add	r2, sp, #8
 8018846:	4651      	mov	r1, sl
 8018848:	4628      	mov	r0, r5
 801884a:	f7ff fdbd 	bl	80183c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801884e:	e736      	b.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018850:	683b      	ldr	r3, [r7, #0]
 8018852:	aa02      	add	r2, sp, #8
 8018854:	4629      	mov	r1, r5
 8018856:	e9cd 6000 	strd	r6, r0, [sp]
 801885a:	4638      	mov	r0, r7
 801885c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018860:	4643      	mov	r3, r8
 8018862:	47d8      	blx	fp
 8018864:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018868:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801886c:	4293      	cmp	r3, r2
 801886e:	dd13      	ble.n	8018898 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 8018870:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018874:	1a9b      	subs	r3, r3, r2
 8018876:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801887a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801887e:	4628      	mov	r0, r5
 8018880:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018884:	aa02      	add	r2, sp, #8
 8018886:	f8ad 101c 	strh.w	r1, [sp, #28]
 801888a:	4651      	mov	r1, sl
 801888c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018890:	464b      	mov	r3, r9
 8018892:	9600      	str	r6, [sp, #0]
 8018894:	f7ff fd98 	bl	80183c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018898:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801889c:	f9b4 2000 	ldrsh.w	r2, [r4]
 80188a0:	4293      	cmp	r3, r2
 80188a2:	dd13      	ble.n	80188cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 80188a4:	1a9b      	subs	r3, r3, r2
 80188a6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80188aa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80188ae:	f8ad 2018 	strh.w	r2, [sp, #24]
 80188b2:	aa02      	add	r2, sp, #8
 80188b4:	f8ad 001a 	strh.w	r0, [sp, #26]
 80188b8:	4628      	mov	r0, r5
 80188ba:	f8ad 301c 	strh.w	r3, [sp, #28]
 80188be:	464b      	mov	r3, r9
 80188c0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80188c4:	4651      	mov	r1, sl
 80188c6:	9600      	str	r6, [sp, #0]
 80188c8:	f7ff fd7e 	bl	80183c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80188cc:	88a2      	ldrh	r2, [r4, #4]
 80188ce:	8823      	ldrh	r3, [r4, #0]
 80188d0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80188d4:	4413      	add	r3, r2
 80188d6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80188da:	440a      	add	r2, r1
 80188dc:	b29b      	uxth	r3, r3
 80188de:	b292      	uxth	r2, r2
 80188e0:	b218      	sxth	r0, r3
 80188e2:	b211      	sxth	r1, r2
 80188e4:	4288      	cmp	r0, r1
 80188e6:	dd13      	ble.n	8018910 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 80188e8:	1a9b      	subs	r3, r3, r2
 80188ea:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80188ee:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80188f2:	aa02      	add	r2, sp, #8
 80188f4:	f8ad 1018 	strh.w	r1, [sp, #24]
 80188f8:	4651      	mov	r1, sl
 80188fa:	f8ad 301c 	strh.w	r3, [sp, #28]
 80188fe:	464b      	mov	r3, r9
 8018900:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018904:	4628      	mov	r0, r5
 8018906:	9600      	str	r6, [sp, #0]
 8018908:	f8ad 701a 	strh.w	r7, [sp, #26]
 801890c:	f7ff fd5c 	bl	80183c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018910:	88e2      	ldrh	r2, [r4, #6]
 8018912:	8863      	ldrh	r3, [r4, #2]
 8018914:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018918:	4413      	add	r3, r2
 801891a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801891e:	440a      	add	r2, r1
 8018920:	b29b      	uxth	r3, r3
 8018922:	b292      	uxth	r2, r2
 8018924:	b218      	sxth	r0, r3
 8018926:	b211      	sxth	r1, r2
 8018928:	4288      	cmp	r0, r1
 801892a:	f77f aec8 	ble.w	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801892e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018932:	1a9b      	subs	r3, r3, r2
 8018934:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018938:	f8ad 301e 	strh.w	r3, [sp, #30]
 801893c:	464b      	mov	r3, r9
 801893e:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018942:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018946:	f8ad 001c 	strh.w	r0, [sp, #28]
 801894a:	9600      	str	r6, [sp, #0]
 801894c:	e77a      	b.n	8018844 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801894e:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 8018952:	2800      	cmp	r0, #0
 8018954:	f43f aeb3 	beq.w	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018958:	6803      	ldr	r3, [r0, #0]
 801895a:	9600      	str	r6, [sp, #0]
 801895c:	68de      	ldr	r6, [r3, #12]
 801895e:	4623      	mov	r3, r4
 8018960:	aa02      	add	r2, sp, #8
 8018962:	4629      	mov	r1, r5
 8018964:	47b0      	blx	r6
 8018966:	e6aa      	b.n	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018968:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801896c:	2800      	cmp	r0, #0
 801896e:	f43f aea6 	beq.w	80186be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 8018972:	6803      	ldr	r3, [r0, #0]
 8018974:	9600      	str	r6, [sp, #0]
 8018976:	689e      	ldr	r6, [r3, #8]
 8018978:	e7f1      	b.n	801895e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801897a:	bf00      	nop
 801897c:	20001b6c 	.word	0x20001b6c

08018980 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018980:	b180      	cbz	r0, 80189a4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018982:	2903      	cmp	r1, #3
 8018984:	d81c      	bhi.n	80189c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018986:	e8df f001 	tbb	[pc, r1]
 801898a:	1d02      	.short	0x1d02
 801898c:	1f08      	.short	0x1f08
 801898e:	4b10      	ldr	r3, [pc, #64]	@ (80189d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018990:	8818      	ldrh	r0, [r3, #0]
 8018992:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018996:	4240      	negs	r0, r0
 8018998:	4770      	bx	lr
 801899a:	4b0d      	ldr	r3, [pc, #52]	@ (80189d0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801899c:	8818      	ldrh	r0, [r3, #0]
 801899e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80189a2:	4770      	bx	lr
 80189a4:	2903      	cmp	r1, #3
 80189a6:	d80b      	bhi.n	80189c0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 80189a8:	a301      	add	r3, pc, #4	@ (adr r3, 80189b0 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 80189aa:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80189ae:	bf00      	nop
 80189b0:	080189c5 	.word	0x080189c5
 80189b4:	0801899b 	.word	0x0801899b
 80189b8:	080189c9 	.word	0x080189c9
 80189bc:	0801898f 	.word	0x0801898f
 80189c0:	2000      	movs	r0, #0
 80189c2:	4770      	bx	lr
 80189c4:	2001      	movs	r0, #1
 80189c6:	4770      	bx	lr
 80189c8:	f04f 30ff 	mov.w	r0, #4294967295
 80189cc:	4770      	bx	lr
 80189ce:	bf00      	nop
 80189d0:	20001b66 	.word	0x20001b66

080189d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80189d4:	b180      	cbz	r0, 80189f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 80189d6:	2903      	cmp	r1, #3
 80189d8:	d81c      	bhi.n	8018a14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80189da:	e8df f001 	tbb	[pc, r1]
 80189de:	021d      	.short	0x021d
 80189e0:	071f      	.short	0x071f
 80189e2:	4b10      	ldr	r3, [pc, #64]	@ (8018a24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80189e4:	8818      	ldrh	r0, [r3, #0]
 80189e6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80189ea:	4770      	bx	lr
 80189ec:	4b0d      	ldr	r3, [pc, #52]	@ (8018a24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80189ee:	8818      	ldrh	r0, [r3, #0]
 80189f0:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80189f4:	4240      	negs	r0, r0
 80189f6:	4770      	bx	lr
 80189f8:	2903      	cmp	r1, #3
 80189fa:	d80b      	bhi.n	8018a14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80189fc:	a301      	add	r3, pc, #4	@ (adr r3, 8018a04 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80189fe:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018a02:	bf00      	nop
 8018a04:	080189e3 	.word	0x080189e3
 8018a08:	08018a1d 	.word	0x08018a1d
 8018a0c:	080189ed 	.word	0x080189ed
 8018a10:	08018a19 	.word	0x08018a19
 8018a14:	2000      	movs	r0, #0
 8018a16:	4770      	bx	lr
 8018a18:	2001      	movs	r0, #1
 8018a1a:	4770      	bx	lr
 8018a1c:	f04f 30ff 	mov.w	r0, #4294967295
 8018a20:	4770      	bx	lr
 8018a22:	bf00      	nop
 8018a24:	20001b66 	.word	0x20001b66

08018a28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018a28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a2c:	b099      	sub	sp, #100	@ 0x64
 8018a2e:	910b      	str	r1, [sp, #44]	@ 0x2c
 8018a30:	a914      	add	r1, sp, #80	@ 0x50
 8018a32:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 8018a36:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 8018a3a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 8018a3e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 8018a42:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 8018a46:	e881 000c 	stmia.w	r1, {r2, r3}
 8018a4a:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 8018a4e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 8018a52:	9309      	str	r3, [sp, #36]	@ 0x24
 8018a54:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018a58:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8018a5c:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018a60:	9310      	str	r3, [sp, #64]	@ 0x40
 8018a62:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 8018a66:	930c      	str	r3, [sp, #48]	@ 0x30
 8018a68:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 8018a6c:	798f      	ldrb	r7, [r1, #6]
 8018a6e:	431f      	orrs	r7, r3
 8018a70:	f000 8195 	beq.w	8018d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a74:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018a78:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8018a7c:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018a80:	ea59 0903 	orrs.w	r9, r9, r3
 8018a84:	f000 818b 	beq.w	8018d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a88:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018a8c:	b29b      	uxth	r3, r3
 8018a8e:	2d00      	cmp	r5, #0
 8018a90:	f000 812e 	beq.w	8018cf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018a94:	1aed      	subs	r5, r5, r3
 8018a96:	b2ad      	uxth	r5, r5
 8018a98:	042b      	lsls	r3, r5, #16
 8018a9a:	d502      	bpl.n	8018aa2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018a9c:	1b64      	subs	r4, r4, r5
 8018a9e:	2500      	movs	r5, #0
 8018aa0:	b224      	sxth	r4, r4
 8018aa2:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018aa6:	a814      	add	r0, sp, #80	@ 0x50
 8018aa8:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 8018aac:	428c      	cmp	r4, r1
 8018aae:	b28b      	uxth	r3, r1
 8018ab0:	bfbf      	itttt	lt
 8018ab2:	18ed      	addlt	r5, r5, r3
 8018ab4:	1b2c      	sublt	r4, r5, r4
 8018ab6:	b2a5      	uxthlt	r5, r4
 8018ab8:	460c      	movlt	r4, r1
 8018aba:	8891      	ldrh	r1, [r2, #4]
 8018abc:	440b      	add	r3, r1
 8018abe:	4621      	mov	r1, r4
 8018ac0:	b21b      	sxth	r3, r3
 8018ac2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018ac4:	88d3      	ldrh	r3, [r2, #6]
 8018ac6:	8852      	ldrh	r2, [r2, #2]
 8018ac8:	4413      	add	r3, r2
 8018aca:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018acc:	b21b      	sxth	r3, r3
 8018ace:	930d      	str	r3, [sp, #52]	@ 0x34
 8018ad0:	4bbd      	ldr	r3, [pc, #756]	@ (8018dc8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018ad2:	f893 b000 	ldrb.w	fp, [r3]
 8018ad6:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018ada:	f1dc 0300 	rsbs	r3, ip, #0
 8018ade:	eb43 030c 	adc.w	r3, r3, ip
 8018ae2:	930e      	str	r3, [sp, #56]	@ 0x38
 8018ae4:	4653      	mov	r3, sl
 8018ae6:	f7f6 fdff 	bl	800f6e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018aea:	4621      	mov	r1, r4
 8018aec:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 8018af0:	4653      	mov	r3, sl
 8018af2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8018af4:	a814      	add	r0, sp, #80	@ 0x50
 8018af6:	f7f6 fe14 	bl	800f722 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018afa:	a918      	add	r1, sp, #96	@ 0x60
 8018afc:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018b00:	a817      	add	r0, sp, #92	@ 0x5c
 8018b02:	f7f6 ff3b 	bl	800f97c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018b06:	f1ba 0f00 	cmp.w	sl, #0
 8018b0a:	f040 80f4 	bne.w	8018cf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018b0e:	f1bb 0f01 	cmp.w	fp, #1
 8018b12:	f040 80f8 	bne.w	8018d06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018b16:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018b18:	2b00      	cmp	r3, #0
 8018b1a:	f040 8145 	bne.w	8018da8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8018b1e:	b2ba      	uxth	r2, r7
 8018b20:	b905      	cbnz	r5, 8018b24 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018b22:	b16e      	cbz	r6, 8018b40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018b24:	fb06 5302 	mla	r3, r6, r2, r5
 8018b28:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 8018b2a:	4631      	mov	r1, r6
 8018b2c:	fb08 f303 	mul.w	r3, r8, r3
 8018b30:	f003 0607 	and.w	r6, r3, #7
 8018b34:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018b38:	9328      	str	r3, [sp, #160]	@ 0xa0
 8018b3a:	eba9 0301 	sub.w	r3, r9, r1
 8018b3e:	930a      	str	r3, [sp, #40]	@ 0x28
 8018b40:	4651      	mov	r1, sl
 8018b42:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8018b44:	f7ff ff1c 	bl	8018980 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018b48:	4681      	mov	r9, r0
 8018b4a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8018b4c:	f7ff ff42 	bl	80189d4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018b50:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018b52:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8018b54:	4683      	mov	fp, r0
 8018b56:	eba3 0a01 	sub.w	sl, r3, r1
 8018b5a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018b5c:	459a      	cmp	sl, r3
 8018b5e:	bfa8      	it	ge
 8018b60:	469a      	movge	sl, r3
 8018b62:	f1ba 0f00 	cmp.w	sl, #0
 8018b66:	f340 811a 	ble.w	8018d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b6a:	1b64      	subs	r4, r4, r5
 8018b6c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018b6e:	1b1c      	subs	r4, r3, r4
 8018b70:	42bc      	cmp	r4, r7
 8018b72:	bfd4      	ite	le
 8018b74:	ebc5 0504 	rsble	r5, r5, r4
 8018b78:	ebc5 0507 	rsbgt	r5, r5, r7
 8018b7c:	2d00      	cmp	r5, #0
 8018b7e:	f340 810e 	ble.w	8018d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b82:	1b52      	subs	r2, r2, r5
 8018b84:	fb08 f302 	mul.w	r3, r8, r2
 8018b88:	930f      	str	r3, [sp, #60]	@ 0x3c
 8018b8a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018b8c:	2b00      	cmp	r3, #0
 8018b8e:	f040 8116 	bne.w	8018dbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018b92:	4b8e      	ldr	r3, [pc, #568]	@ (8018dcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018b94:	6818      	ldr	r0, [r3, #0]
 8018b96:	6803      	ldr	r3, [r0, #0]
 8018b98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8018b9a:	4798      	blx	r3
 8018b9c:	2301      	movs	r3, #1
 8018b9e:	4a8c      	ldr	r2, [pc, #560]	@ (8018dd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018ba0:	fa03 f308 	lsl.w	r3, r3, r8
 8018ba4:	8811      	ldrh	r1, [r2, #0]
 8018ba6:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 8018baa:	3b01      	subs	r3, #1
 8018bac:	b2db      	uxtb	r3, r3
 8018bae:	930e      	str	r3, [sp, #56]	@ 0x38
 8018bb0:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 8018bb4:	fb01 2303 	mla	r3, r1, r3, r2
 8018bb8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018bbc:	930a      	str	r3, [sp, #40]	@ 0x28
 8018bbe:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018bc0:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018bc4:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018bc6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018bc8:	0a19      	lsrs	r1, r3, #8
 8018bca:	b2cb      	uxtb	r3, r1
 8018bcc:	9312      	str	r3, [sp, #72]	@ 0x48
 8018bce:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018bd0:	b2db      	uxtb	r3, r3
 8018bd2:	9311      	str	r3, [sp, #68]	@ 0x44
 8018bd4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8018bd6:	095a      	lsrs	r2, r3, #5
 8018bd8:	4b7e      	ldr	r3, [pc, #504]	@ (8018dd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 8018bda:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8018bde:	400b      	ands	r3, r1
 8018be0:	4313      	orrs	r3, r2
 8018be2:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8018be4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018be8:	4313      	orrs	r3, r2
 8018bea:	b29b      	uxth	r3, r3
 8018bec:	9310      	str	r3, [sp, #64]	@ 0x40
 8018bee:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018bf0:	781a      	ldrb	r2, [r3, #0]
 8018bf2:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018bf6:	fb05 b919 	mls	r9, r5, r9, fp
 8018bfa:	4132      	asrs	r2, r6
 8018bfc:	fb03 fb05 	mul.w	fp, r3, r5
 8018c00:	930d      	str	r3, [sp, #52]	@ 0x34
 8018c02:	b2d2      	uxtb	r2, r2
 8018c04:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018c08:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018c0c:	f0c0 80f5 	bcc.w	8018dfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018c10:	46ae      	mov	lr, r5
 8018c12:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 8018c16:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018c1a:	f0c0 80dd 	bcc.w	8018dd8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018c1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018c20:	4013      	ands	r3, r2
 8018c22:	d055      	beq.n	8018cd0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018c24:	20ff      	movs	r0, #255	@ 0xff
 8018c26:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8018c28:	fb90 f1f1 	sdiv	r1, r0, r1
 8018c2c:	434b      	muls	r3, r1
 8018c2e:	2bfe      	cmp	r3, #254	@ 0xfe
 8018c30:	dd03      	ble.n	8018c3a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018c32:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018c34:	4281      	cmp	r1, r0
 8018c36:	f000 80c4 	beq.w	8018dc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 8018c3a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018c3c:	f8bc 4000 	ldrh.w	r4, [ip]
 8018c40:	fb11 f303 	smulbb	r3, r1, r3
 8018c44:	1220      	asrs	r0, r4, #8
 8018c46:	b29b      	uxth	r3, r3
 8018c48:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8018c4c:	1c59      	adds	r1, r3, #1
 8018c4e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018c52:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018c56:	10e1      	asrs	r1, r4, #3
 8018c58:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018c5c:	00e4      	lsls	r4, r4, #3
 8018c5e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8018c62:	b29f      	uxth	r7, r3
 8018c64:	43db      	mvns	r3, r3
 8018c66:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018c6a:	b2db      	uxtb	r3, r3
 8018c6c:	b2e4      	uxtb	r4, r4
 8018c6e:	9309      	str	r3, [sp, #36]	@ 0x24
 8018c70:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8018c72:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018c76:	fb13 f907 	smulbb	r9, r3, r7
 8018c7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c7c:	fb00 9003 	mla	r0, r0, r3, r9
 8018c80:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8018c82:	fb13 f907 	smulbb	r9, r3, r7
 8018c86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c88:	b280      	uxth	r0, r0
 8018c8a:	fb01 9103 	mla	r1, r1, r3, r9
 8018c8e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8018c90:	fb13 f707 	smulbb	r7, r3, r7
 8018c94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018c96:	b289      	uxth	r1, r1
 8018c98:	fb04 7403 	mla	r4, r4, r3, r7
 8018c9c:	1c43      	adds	r3, r0, #1
 8018c9e:	b2a4      	uxth	r4, r4
 8018ca0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018ca4:	f104 0901 	add.w	r9, r4, #1
 8018ca8:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8018cac:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018cb0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018cb4:	ea49 0000 	orr.w	r0, r9, r0
 8018cb8:	f101 0901 	add.w	r9, r1, #1
 8018cbc:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018cc0:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018cc4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018cc8:	ea40 0009 	orr.w	r0, r0, r9
 8018ccc:	f8ac 0000 	strh.w	r0, [ip]
 8018cd0:	4446      	add	r6, r8
 8018cd2:	b2b6      	uxth	r6, r6
 8018cd4:	2e07      	cmp	r6, #7
 8018cd6:	bf89      	itett	hi
 8018cd8:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 8018cda:	fa42 f208 	asrls.w	r2, r2, r8
 8018cde:	2600      	movhi	r6, #0
 8018ce0:	785a      	ldrbhi	r2, [r3, #1]
 8018ce2:	bf8a      	itet	hi
 8018ce4:	3301      	addhi	r3, #1
 8018ce6:	b2d2      	uxtbls	r2, r2
 8018ce8:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 8018cea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8018cec:	449c      	add	ip, r3
 8018cee:	e792      	b.n	8018c16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018cf0:	441c      	add	r4, r3
 8018cf2:	b224      	sxth	r4, r4
 8018cf4:	e6d5      	b.n	8018aa2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018cf6:	f1ba 0f01 	cmp.w	sl, #1
 8018cfa:	f47f af0c 	bne.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018cfe:	f1bb 0f01 	cmp.w	fp, #1
 8018d02:	f47f af08 	bne.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d06:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 8018dcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 8018d0a:	f8db 0000 	ldr.w	r0, [fp]
 8018d0e:	6803      	ldr	r3, [r0, #0]
 8018d10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8018d12:	4798      	blx	r3
 8018d14:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 8018d18:	465a      	mov	r2, fp
 8018d1a:	d006      	beq.n	8018d2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018d1c:	f1b8 0f04 	cmp.w	r8, #4
 8018d20:	d140      	bne.n	8018da4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018d22:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018d24:	3300      	adds	r3, #0
 8018d26:	bf18      	it	ne
 8018d28:	2301      	movne	r3, #1
 8018d2a:	0580      	lsls	r0, r0, #22
 8018d2c:	d56e      	bpl.n	8018e0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018d2e:	f1b8 0f08 	cmp.w	r8, #8
 8018d32:	d16b      	bne.n	8018e0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018d34:	2b00      	cmp	r3, #0
 8018d36:	bf0c      	ite	eq
 8018d38:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 8018d3c:	f44f 7180 	movne.w	r1, #256	@ 0x100
 8018d40:	2d00      	cmp	r5, #0
 8018d42:	f47f aee8 	bne.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d46:	2e00      	cmp	r6, #0
 8018d48:	f47f aee5 	bne.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d4c:	19e3      	adds	r3, r4, r7
 8018d4e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8018d50:	4283      	cmp	r3, r0
 8018d52:	f73f aee0 	bgt.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8018d58:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8018d5a:	444b      	add	r3, r9
 8018d5c:	4283      	cmp	r3, r0
 8018d5e:	f73f aeda 	bgt.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018d62:	b2bf      	uxth	r7, r7
 8018d64:	f1b8 0f08 	cmp.w	r8, #8
 8018d68:	6810      	ldr	r0, [r2, #0]
 8018d6a:	f04f 0500 	mov.w	r5, #0
 8018d6e:	bf18      	it	ne
 8018d70:	3701      	addne	r7, #1
 8018d72:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 8018d76:	6804      	ldr	r4, [r0, #0]
 8018d78:	bf18      	it	ne
 8018d7a:	f027 0701 	bicne.w	r7, r7, #1
 8018d7e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 8018d82:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018d86:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8018d88:	bf18      	it	ne
 8018d8a:	b2bf      	uxthne	r7, r7
 8018d8c:	9104      	str	r1, [sp, #16]
 8018d8e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8018d90:	e9cd 7900 	strd	r7, r9, [sp]
 8018d94:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018d98:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8018d9a:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 8018d9c:	47a0      	blx	r4
 8018d9e:	b019      	add	sp, #100	@ 0x64
 8018da0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018da4:	2300      	movs	r3, #0
 8018da6:	e7c0      	b.n	8018d2a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018da8:	2208      	movs	r2, #8
 8018daa:	fb92 f3f8 	sdiv	r3, r2, r8
 8018dae:	1e5a      	subs	r2, r3, #1
 8018db0:	443a      	add	r2, r7
 8018db2:	fb92 f2f3 	sdiv	r2, r2, r3
 8018db6:	fb12 f203 	smulbb	r2, r2, r3
 8018dba:	b292      	uxth	r2, r2
 8018dbc:	e6b0      	b.n	8018b20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018dbe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8018dc0:	e6ec      	b.n	8018b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018dc2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8018dc4:	e782      	b.n	8018ccc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018dc6:	bf00      	nop
 8018dc8:	20001b64 	.word	0x20001b64
 8018dcc:	20001b6c 	.word	0x20001b6c
 8018dd0:	20001b66 	.word	0x20001b66
 8018dd4:	00fff800 	.word	0x00fff800
 8018dd8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8018dda:	b153      	cbz	r3, 8018df2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018ddc:	441e      	add	r6, r3
 8018dde:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8018de0:	b2b6      	uxth	r6, r6
 8018de2:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018de6:	f006 0607 	and.w	r6, r6, #7
 8018dea:	781a      	ldrb	r2, [r3, #0]
 8018dec:	9328      	str	r3, [sp, #160]	@ 0xa0
 8018dee:	4132      	asrs	r2, r6
 8018df0:	b2d2      	uxtb	r2, r2
 8018df2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8018df4:	445b      	add	r3, fp
 8018df6:	930a      	str	r3, [sp, #40]	@ 0x28
 8018df8:	e706      	b.n	8018c08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018dfa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8018dfc:	2b00      	cmp	r3, #0
 8018dfe:	d1ce      	bne.n	8018d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018e00:	4b05      	ldr	r3, [pc, #20]	@ (8018e18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018e02:	6818      	ldr	r0, [r3, #0]
 8018e04:	6803      	ldr	r3, [r0, #0]
 8018e06:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8018e08:	4798      	blx	r3
 8018e0a:	e7c8      	b.n	8018d9e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018e0c:	2b00      	cmp	r3, #0
 8018e0e:	f43f ae82 	beq.w	8018b16 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018e12:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8018e16:	e793      	b.n	8018d40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018e18:	20001b6c 	.word	0x20001b6c

08018e1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018e1c:	b538      	push	{r3, r4, r5, lr}
 8018e1e:	4c15      	ldr	r4, [pc, #84]	@ (8018e74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018e20:	4605      	mov	r5, r0
 8018e22:	7823      	ldrb	r3, [r4, #0]
 8018e24:	f3bf 8f5b 	dmb	ish
 8018e28:	07da      	lsls	r2, r3, #31
 8018e2a:	d40b      	bmi.n	8018e44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018e2c:	4620      	mov	r0, r4
 8018e2e:	f007 ff04 	bl	8020c3a <__cxa_guard_acquire>
 8018e32:	b138      	cbz	r0, 8018e44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018e34:	4620      	mov	r0, r4
 8018e36:	f007 ff0c 	bl	8020c52 <__cxa_guard_release>
 8018e3a:	4a0f      	ldr	r2, [pc, #60]	@ (8018e78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018e3c:	490f      	ldr	r1, [pc, #60]	@ (8018e7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018e3e:	4810      	ldr	r0, [pc, #64]	@ (8018e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018e40:	f007 fef4 	bl	8020c2c <__aeabi_atexit>
 8018e44:	4c0f      	ldr	r4, [pc, #60]	@ (8018e84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018e46:	7823      	ldrb	r3, [r4, #0]
 8018e48:	f3bf 8f5b 	dmb	ish
 8018e4c:	07db      	lsls	r3, r3, #31
 8018e4e:	d40b      	bmi.n	8018e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018e50:	4620      	mov	r0, r4
 8018e52:	f007 fef2 	bl	8020c3a <__cxa_guard_acquire>
 8018e56:	b138      	cbz	r0, 8018e68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018e58:	4620      	mov	r0, r4
 8018e5a:	f007 fefa 	bl	8020c52 <__cxa_guard_release>
 8018e5e:	4a06      	ldr	r2, [pc, #24]	@ (8018e78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018e60:	4909      	ldr	r1, [pc, #36]	@ (8018e88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018e62:	480a      	ldr	r0, [pc, #40]	@ (8018e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018e64:	f007 fee2 	bl	8020c2c <__aeabi_atexit>
 8018e68:	4b05      	ldr	r3, [pc, #20]	@ (8018e80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018e6a:	616b      	str	r3, [r5, #20]
 8018e6c:	4b07      	ldr	r3, [pc, #28]	@ (8018e8c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018e6e:	61ab      	str	r3, [r5, #24]
 8018e70:	bd38      	pop	{r3, r4, r5, pc}
 8018e72:	bf00      	nop
 8018e74:	20001c48 	.word	0x20001c48
 8018e78:	20000000 	.word	0x20000000
 8018e7c:	08014fcb 	.word	0x08014fcb
 8018e80:	200001c4 	.word	0x200001c4
 8018e84:	20001c4c 	.word	0x20001c4c
 8018e88:	08014fc9 	.word	0x08014fc9
 8018e8c:	200001c8 	.word	0x200001c8

08018e90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018e90:	b538      	push	{r3, r4, r5, lr}
 8018e92:	4c15      	ldr	r4, [pc, #84]	@ (8018ee8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018e94:	4605      	mov	r5, r0
 8018e96:	7823      	ldrb	r3, [r4, #0]
 8018e98:	f3bf 8f5b 	dmb	ish
 8018e9c:	07da      	lsls	r2, r3, #31
 8018e9e:	d40b      	bmi.n	8018eb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018ea0:	4620      	mov	r0, r4
 8018ea2:	f007 feca 	bl	8020c3a <__cxa_guard_acquire>
 8018ea6:	b138      	cbz	r0, 8018eb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018ea8:	4620      	mov	r0, r4
 8018eaa:	f007 fed2 	bl	8020c52 <__cxa_guard_release>
 8018eae:	4a0f      	ldr	r2, [pc, #60]	@ (8018eec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018eb0:	490f      	ldr	r1, [pc, #60]	@ (8018ef0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018eb2:	4810      	ldr	r0, [pc, #64]	@ (8018ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018eb4:	f007 feba 	bl	8020c2c <__aeabi_atexit>
 8018eb8:	4c0f      	ldr	r4, [pc, #60]	@ (8018ef8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018eba:	7823      	ldrb	r3, [r4, #0]
 8018ebc:	f3bf 8f5b 	dmb	ish
 8018ec0:	07db      	lsls	r3, r3, #31
 8018ec2:	d40b      	bmi.n	8018edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018ec4:	4620      	mov	r0, r4
 8018ec6:	f007 feb8 	bl	8020c3a <__cxa_guard_acquire>
 8018eca:	b138      	cbz	r0, 8018edc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018ecc:	4620      	mov	r0, r4
 8018ece:	f007 fec0 	bl	8020c52 <__cxa_guard_release>
 8018ed2:	4a06      	ldr	r2, [pc, #24]	@ (8018eec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018ed4:	4909      	ldr	r1, [pc, #36]	@ (8018efc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018ed6:	480a      	ldr	r0, [pc, #40]	@ (8018f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018ed8:	f007 fea8 	bl	8020c2c <__aeabi_atexit>
 8018edc:	4b05      	ldr	r3, [pc, #20]	@ (8018ef4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018ede:	60eb      	str	r3, [r5, #12]
 8018ee0:	4b07      	ldr	r3, [pc, #28]	@ (8018f00 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018ee2:	612b      	str	r3, [r5, #16]
 8018ee4:	bd38      	pop	{r3, r4, r5, pc}
 8018ee6:	bf00      	nop
 8018ee8:	20001c20 	.word	0x20001c20
 8018eec:	20000000 	.word	0x20000000
 8018ef0:	08014fcf 	.word	0x08014fcf
 8018ef4:	2000019c 	.word	0x2000019c
 8018ef8:	20001c24 	.word	0x20001c24
 8018efc:	08014fcd 	.word	0x08014fcd
 8018f00:	200001a0 	.word	0x200001a0

08018f04 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018f04:	b510      	push	{r4, lr}
 8018f06:	4604      	mov	r4, r0
 8018f08:	f7ff ff88 	bl	8018e1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018f0c:	4620      	mov	r0, r4
 8018f0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018f12:	f7ff bfbd 	b.w	8018e90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018f18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018f18:	b538      	push	{r3, r4, r5, lr}
 8018f1a:	4c15      	ldr	r4, [pc, #84]	@ (8018f70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018f1c:	4605      	mov	r5, r0
 8018f1e:	7823      	ldrb	r3, [r4, #0]
 8018f20:	f3bf 8f5b 	dmb	ish
 8018f24:	07da      	lsls	r2, r3, #31
 8018f26:	d40b      	bmi.n	8018f40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018f28:	4620      	mov	r0, r4
 8018f2a:	f007 fe86 	bl	8020c3a <__cxa_guard_acquire>
 8018f2e:	b138      	cbz	r0, 8018f40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018f30:	4620      	mov	r0, r4
 8018f32:	f007 fe8e 	bl	8020c52 <__cxa_guard_release>
 8018f36:	4a0f      	ldr	r2, [pc, #60]	@ (8018f74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018f38:	490f      	ldr	r1, [pc, #60]	@ (8018f78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018f3a:	4810      	ldr	r0, [pc, #64]	@ (8018f7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018f3c:	f007 fe76 	bl	8020c2c <__aeabi_atexit>
 8018f40:	4c0f      	ldr	r4, [pc, #60]	@ (8018f80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018f42:	7823      	ldrb	r3, [r4, #0]
 8018f44:	f3bf 8f5b 	dmb	ish
 8018f48:	07db      	lsls	r3, r3, #31
 8018f4a:	d40b      	bmi.n	8018f64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018f4c:	4620      	mov	r0, r4
 8018f4e:	f007 fe74 	bl	8020c3a <__cxa_guard_acquire>
 8018f52:	b138      	cbz	r0, 8018f64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018f54:	4620      	mov	r0, r4
 8018f56:	f007 fe7c 	bl	8020c52 <__cxa_guard_release>
 8018f5a:	4a06      	ldr	r2, [pc, #24]	@ (8018f74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018f5c:	4909      	ldr	r1, [pc, #36]	@ (8018f84 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018f5e:	480a      	ldr	r0, [pc, #40]	@ (8018f88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018f60:	f007 fe64 	bl	8020c2c <__aeabi_atexit>
 8018f64:	4b05      	ldr	r3, [pc, #20]	@ (8018f7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018f66:	626b      	str	r3, [r5, #36]	@ 0x24
 8018f68:	4b07      	ldr	r3, [pc, #28]	@ (8018f88 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018f6a:	62ab      	str	r3, [r5, #40]	@ 0x28
 8018f6c:	bd38      	pop	{r3, r4, r5, pc}
 8018f6e:	bf00      	nop
 8018f70:	20001c50 	.word	0x20001c50
 8018f74:	20000000 	.word	0x20000000
 8018f78:	08014fc3 	.word	0x08014fc3
 8018f7c:	200001cc 	.word	0x200001cc
 8018f80:	20001c54 	.word	0x20001c54
 8018f84:	08014fc1 	.word	0x08014fc1
 8018f88:	200001d0 	.word	0x200001d0

08018f8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018f8c:	b538      	push	{r3, r4, r5, lr}
 8018f8e:	4c15      	ldr	r4, [pc, #84]	@ (8018fe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018f90:	4605      	mov	r5, r0
 8018f92:	7823      	ldrb	r3, [r4, #0]
 8018f94:	f3bf 8f5b 	dmb	ish
 8018f98:	07da      	lsls	r2, r3, #31
 8018f9a:	d40b      	bmi.n	8018fb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018f9c:	4620      	mov	r0, r4
 8018f9e:	f007 fe4c 	bl	8020c3a <__cxa_guard_acquire>
 8018fa2:	b138      	cbz	r0, 8018fb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018fa4:	4620      	mov	r0, r4
 8018fa6:	f007 fe54 	bl	8020c52 <__cxa_guard_release>
 8018faa:	4a0f      	ldr	r2, [pc, #60]	@ (8018fe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018fac:	490f      	ldr	r1, [pc, #60]	@ (8018fec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018fae:	4810      	ldr	r0, [pc, #64]	@ (8018ff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018fb0:	f007 fe3c 	bl	8020c2c <__aeabi_atexit>
 8018fb4:	4c0f      	ldr	r4, [pc, #60]	@ (8018ff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018fb6:	7823      	ldrb	r3, [r4, #0]
 8018fb8:	f3bf 8f5b 	dmb	ish
 8018fbc:	07db      	lsls	r3, r3, #31
 8018fbe:	d40b      	bmi.n	8018fd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018fc0:	4620      	mov	r0, r4
 8018fc2:	f007 fe3a 	bl	8020c3a <__cxa_guard_acquire>
 8018fc6:	b138      	cbz	r0, 8018fd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018fc8:	4620      	mov	r0, r4
 8018fca:	f007 fe42 	bl	8020c52 <__cxa_guard_release>
 8018fce:	4a06      	ldr	r2, [pc, #24]	@ (8018fe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018fd0:	4909      	ldr	r1, [pc, #36]	@ (8018ff8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018fd2:	480a      	ldr	r0, [pc, #40]	@ (8018ffc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018fd4:	f007 fe2a 	bl	8020c2c <__aeabi_atexit>
 8018fd8:	4b05      	ldr	r3, [pc, #20]	@ (8018ff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018fda:	61eb      	str	r3, [r5, #28]
 8018fdc:	4b07      	ldr	r3, [pc, #28]	@ (8018ffc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018fde:	622b      	str	r3, [r5, #32]
 8018fe0:	bd38      	pop	{r3, r4, r5, pc}
 8018fe2:	bf00      	nop
 8018fe4:	20001c28 	.word	0x20001c28
 8018fe8:	20000000 	.word	0x20000000
 8018fec:	08014fc7 	.word	0x08014fc7
 8018ff0:	200001a4 	.word	0x200001a4
 8018ff4:	20001c2c 	.word	0x20001c2c
 8018ff8:	08014fc5 	.word	0x08014fc5
 8018ffc:	200001a8 	.word	0x200001a8

08019000 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019000:	b510      	push	{r4, lr}
 8019002:	4604      	mov	r4, r0
 8019004:	f7ff ff88 	bl	8018f18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8019008:	4620      	mov	r0, r4
 801900a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801900e:	f7ff bfbd 	b.w	8018f8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019014 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019014:	b538      	push	{r3, r4, r5, lr}
 8019016:	4c15      	ldr	r4, [pc, #84]	@ (801906c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8019018:	4605      	mov	r5, r0
 801901a:	7823      	ldrb	r3, [r4, #0]
 801901c:	f3bf 8f5b 	dmb	ish
 8019020:	07da      	lsls	r2, r3, #31
 8019022:	d40b      	bmi.n	801903c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8019024:	4620      	mov	r0, r4
 8019026:	f007 fe08 	bl	8020c3a <__cxa_guard_acquire>
 801902a:	b138      	cbz	r0, 801903c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801902c:	4620      	mov	r0, r4
 801902e:	f007 fe10 	bl	8020c52 <__cxa_guard_release>
 8019032:	4a0f      	ldr	r2, [pc, #60]	@ (8019070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019034:	490f      	ldr	r1, [pc, #60]	@ (8019074 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8019036:	4810      	ldr	r0, [pc, #64]	@ (8019078 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019038:	f007 fdf8 	bl	8020c2c <__aeabi_atexit>
 801903c:	4c0f      	ldr	r4, [pc, #60]	@ (801907c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801903e:	7823      	ldrb	r3, [r4, #0]
 8019040:	f3bf 8f5b 	dmb	ish
 8019044:	07db      	lsls	r3, r3, #31
 8019046:	d40b      	bmi.n	8019060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019048:	4620      	mov	r0, r4
 801904a:	f007 fdf6 	bl	8020c3a <__cxa_guard_acquire>
 801904e:	b138      	cbz	r0, 8019060 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8019050:	4620      	mov	r0, r4
 8019052:	f007 fdfe 	bl	8020c52 <__cxa_guard_release>
 8019056:	4a06      	ldr	r2, [pc, #24]	@ (8019070 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8019058:	4909      	ldr	r1, [pc, #36]	@ (8019080 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801905a:	480a      	ldr	r0, [pc, #40]	@ (8019084 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801905c:	f007 fde6 	bl	8020c2c <__aeabi_atexit>
 8019060:	4b05      	ldr	r3, [pc, #20]	@ (8019078 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8019062:	636b      	str	r3, [r5, #52]	@ 0x34
 8019064:	4b07      	ldr	r3, [pc, #28]	@ (8019084 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8019066:	63ab      	str	r3, [r5, #56]	@ 0x38
 8019068:	bd38      	pop	{r3, r4, r5, pc}
 801906a:	bf00      	nop
 801906c:	20001c60 	.word	0x20001c60
 8019070:	20000000 	.word	0x20000000
 8019074:	08014fbb 	.word	0x08014fbb
 8019078:	200001dc 	.word	0x200001dc
 801907c:	20001c64 	.word	0x20001c64
 8019080:	08014fb9 	.word	0x08014fb9
 8019084:	200001e0 	.word	0x200001e0

08019088 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8019088:	b538      	push	{r3, r4, r5, lr}
 801908a:	4c15      	ldr	r4, [pc, #84]	@ (80190e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801908c:	4605      	mov	r5, r0
 801908e:	7823      	ldrb	r3, [r4, #0]
 8019090:	f3bf 8f5b 	dmb	ish
 8019094:	07da      	lsls	r2, r3, #31
 8019096:	d40b      	bmi.n	80190b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019098:	4620      	mov	r0, r4
 801909a:	f007 fdce 	bl	8020c3a <__cxa_guard_acquire>
 801909e:	b138      	cbz	r0, 80190b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80190a0:	4620      	mov	r0, r4
 80190a2:	f007 fdd6 	bl	8020c52 <__cxa_guard_release>
 80190a6:	4a0f      	ldr	r2, [pc, #60]	@ (80190e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80190a8:	490f      	ldr	r1, [pc, #60]	@ (80190e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80190aa:	4810      	ldr	r0, [pc, #64]	@ (80190ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80190ac:	f007 fdbe 	bl	8020c2c <__aeabi_atexit>
 80190b0:	4c0f      	ldr	r4, [pc, #60]	@ (80190f0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80190b2:	7823      	ldrb	r3, [r4, #0]
 80190b4:	f3bf 8f5b 	dmb	ish
 80190b8:	07db      	lsls	r3, r3, #31
 80190ba:	d40b      	bmi.n	80190d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80190bc:	4620      	mov	r0, r4
 80190be:	f007 fdbc 	bl	8020c3a <__cxa_guard_acquire>
 80190c2:	b138      	cbz	r0, 80190d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80190c4:	4620      	mov	r0, r4
 80190c6:	f007 fdc4 	bl	8020c52 <__cxa_guard_release>
 80190ca:	4a06      	ldr	r2, [pc, #24]	@ (80190e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80190cc:	4909      	ldr	r1, [pc, #36]	@ (80190f4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80190ce:	480a      	ldr	r0, [pc, #40]	@ (80190f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80190d0:	f007 fdac 	bl	8020c2c <__aeabi_atexit>
 80190d4:	4b05      	ldr	r3, [pc, #20]	@ (80190ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80190d6:	62eb      	str	r3, [r5, #44]	@ 0x2c
 80190d8:	4b07      	ldr	r3, [pc, #28]	@ (80190f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80190da:	632b      	str	r3, [r5, #48]	@ 0x30
 80190dc:	bd38      	pop	{r3, r4, r5, pc}
 80190de:	bf00      	nop
 80190e0:	20001c30 	.word	0x20001c30
 80190e4:	20000000 	.word	0x20000000
 80190e8:	08014fbf 	.word	0x08014fbf
 80190ec:	200001ac 	.word	0x200001ac
 80190f0:	20001c34 	.word	0x20001c34
 80190f4:	08014fbd 	.word	0x08014fbd
 80190f8:	200001b0 	.word	0x200001b0

080190fc <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 80190fc:	b510      	push	{r4, lr}
 80190fe:	4604      	mov	r4, r0
 8019100:	f7ff ff88 	bl	8019014 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019104:	4620      	mov	r0, r4
 8019106:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801910a:	f7ff bfbd 	b.w	8019088 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019110 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019110:	b538      	push	{r3, r4, r5, lr}
 8019112:	4c15      	ldr	r4, [pc, #84]	@ (8019168 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019114:	4605      	mov	r5, r0
 8019116:	7823      	ldrb	r3, [r4, #0]
 8019118:	f3bf 8f5b 	dmb	ish
 801911c:	07da      	lsls	r2, r3, #31
 801911e:	d40b      	bmi.n	8019138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019120:	4620      	mov	r0, r4
 8019122:	f007 fd8a 	bl	8020c3a <__cxa_guard_acquire>
 8019126:	b138      	cbz	r0, 8019138 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8019128:	4620      	mov	r0, r4
 801912a:	f007 fd92 	bl	8020c52 <__cxa_guard_release>
 801912e:	4a0f      	ldr	r2, [pc, #60]	@ (801916c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019130:	490f      	ldr	r1, [pc, #60]	@ (8019170 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8019132:	4810      	ldr	r0, [pc, #64]	@ (8019174 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019134:	f007 fd7a 	bl	8020c2c <__aeabi_atexit>
 8019138:	4c0f      	ldr	r4, [pc, #60]	@ (8019178 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801913a:	7823      	ldrb	r3, [r4, #0]
 801913c:	f3bf 8f5b 	dmb	ish
 8019140:	07db      	lsls	r3, r3, #31
 8019142:	d40b      	bmi.n	801915c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019144:	4620      	mov	r0, r4
 8019146:	f007 fd78 	bl	8020c3a <__cxa_guard_acquire>
 801914a:	b138      	cbz	r0, 801915c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801914c:	4620      	mov	r0, r4
 801914e:	f007 fd80 	bl	8020c52 <__cxa_guard_release>
 8019152:	4a06      	ldr	r2, [pc, #24]	@ (801916c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019154:	4909      	ldr	r1, [pc, #36]	@ (801917c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8019156:	480a      	ldr	r0, [pc, #40]	@ (8019180 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019158:	f007 fd68 	bl	8020c2c <__aeabi_atexit>
 801915c:	4b05      	ldr	r3, [pc, #20]	@ (8019174 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801915e:	656b      	str	r3, [r5, #84]	@ 0x54
 8019160:	4b07      	ldr	r3, [pc, #28]	@ (8019180 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019162:	65ab      	str	r3, [r5, #88]	@ 0x58
 8019164:	bd38      	pop	{r3, r4, r5, pc}
 8019166:	bf00      	nop
 8019168:	20001c68 	.word	0x20001c68
 801916c:	20000000 	.word	0x20000000
 8019170:	08014fab 	.word	0x08014fab
 8019174:	200001e4 	.word	0x200001e4
 8019178:	20001c6c 	.word	0x20001c6c
 801917c:	08014fa9 	.word	0x08014fa9
 8019180:	200001e8 	.word	0x200001e8

08019184 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019184:	b538      	push	{r3, r4, r5, lr}
 8019186:	4c15      	ldr	r4, [pc, #84]	@ (80191dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019188:	4605      	mov	r5, r0
 801918a:	7823      	ldrb	r3, [r4, #0]
 801918c:	f3bf 8f5b 	dmb	ish
 8019190:	07da      	lsls	r2, r3, #31
 8019192:	d40b      	bmi.n	80191ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019194:	4620      	mov	r0, r4
 8019196:	f007 fd50 	bl	8020c3a <__cxa_guard_acquire>
 801919a:	b138      	cbz	r0, 80191ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801919c:	4620      	mov	r0, r4
 801919e:	f007 fd58 	bl	8020c52 <__cxa_guard_release>
 80191a2:	4a0f      	ldr	r2, [pc, #60]	@ (80191e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80191a4:	490f      	ldr	r1, [pc, #60]	@ (80191e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80191a6:	4810      	ldr	r0, [pc, #64]	@ (80191e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80191a8:	f007 fd40 	bl	8020c2c <__aeabi_atexit>
 80191ac:	4c0f      	ldr	r4, [pc, #60]	@ (80191ec <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80191ae:	7823      	ldrb	r3, [r4, #0]
 80191b0:	f3bf 8f5b 	dmb	ish
 80191b4:	07db      	lsls	r3, r3, #31
 80191b6:	d40b      	bmi.n	80191d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80191b8:	4620      	mov	r0, r4
 80191ba:	f007 fd3e 	bl	8020c3a <__cxa_guard_acquire>
 80191be:	b138      	cbz	r0, 80191d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80191c0:	4620      	mov	r0, r4
 80191c2:	f007 fd46 	bl	8020c52 <__cxa_guard_release>
 80191c6:	4a06      	ldr	r2, [pc, #24]	@ (80191e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80191c8:	4909      	ldr	r1, [pc, #36]	@ (80191f0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80191ca:	480a      	ldr	r0, [pc, #40]	@ (80191f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80191cc:	f007 fd2e 	bl	8020c2c <__aeabi_atexit>
 80191d0:	4b05      	ldr	r3, [pc, #20]	@ (80191e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80191d2:	64eb      	str	r3, [r5, #76]	@ 0x4c
 80191d4:	4b07      	ldr	r3, [pc, #28]	@ (80191f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80191d6:	652b      	str	r3, [r5, #80]	@ 0x50
 80191d8:	bd38      	pop	{r3, r4, r5, pc}
 80191da:	bf00      	nop
 80191dc:	20001c70 	.word	0x20001c70
 80191e0:	20000000 	.word	0x20000000
 80191e4:	08014faf 	.word	0x08014faf
 80191e8:	200001ec 	.word	0x200001ec
 80191ec:	20001c74 	.word	0x20001c74
 80191f0:	08014fad 	.word	0x08014fad
 80191f4:	200001f0 	.word	0x200001f0

080191f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80191f8:	b538      	push	{r3, r4, r5, lr}
 80191fa:	4c15      	ldr	r4, [pc, #84]	@ (8019250 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80191fc:	4605      	mov	r5, r0
 80191fe:	7823      	ldrb	r3, [r4, #0]
 8019200:	f3bf 8f5b 	dmb	ish
 8019204:	07da      	lsls	r2, r3, #31
 8019206:	d40b      	bmi.n	8019220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019208:	4620      	mov	r0, r4
 801920a:	f007 fd16 	bl	8020c3a <__cxa_guard_acquire>
 801920e:	b138      	cbz	r0, 8019220 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019210:	4620      	mov	r0, r4
 8019212:	f007 fd1e 	bl	8020c52 <__cxa_guard_release>
 8019216:	4a0f      	ldr	r2, [pc, #60]	@ (8019254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019218:	490f      	ldr	r1, [pc, #60]	@ (8019258 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801921a:	4810      	ldr	r0, [pc, #64]	@ (801925c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801921c:	f007 fd06 	bl	8020c2c <__aeabi_atexit>
 8019220:	4c0f      	ldr	r4, [pc, #60]	@ (8019260 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019222:	7823      	ldrb	r3, [r4, #0]
 8019224:	f3bf 8f5b 	dmb	ish
 8019228:	07db      	lsls	r3, r3, #31
 801922a:	d40b      	bmi.n	8019244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801922c:	4620      	mov	r0, r4
 801922e:	f007 fd04 	bl	8020c3a <__cxa_guard_acquire>
 8019232:	b138      	cbz	r0, 8019244 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019234:	4620      	mov	r0, r4
 8019236:	f007 fd0c 	bl	8020c52 <__cxa_guard_release>
 801923a:	4a06      	ldr	r2, [pc, #24]	@ (8019254 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801923c:	4909      	ldr	r1, [pc, #36]	@ (8019264 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801923e:	480a      	ldr	r0, [pc, #40]	@ (8019268 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019240:	f007 fcf4 	bl	8020c2c <__aeabi_atexit>
 8019244:	4b05      	ldr	r3, [pc, #20]	@ (801925c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019246:	646b      	str	r3, [r5, #68]	@ 0x44
 8019248:	4b07      	ldr	r3, [pc, #28]	@ (8019268 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801924a:	64ab      	str	r3, [r5, #72]	@ 0x48
 801924c:	bd38      	pop	{r3, r4, r5, pc}
 801924e:	bf00      	nop
 8019250:	20001c38 	.word	0x20001c38
 8019254:	20000000 	.word	0x20000000
 8019258:	08014fb3 	.word	0x08014fb3
 801925c:	200001b4 	.word	0x200001b4
 8019260:	20001c3c 	.word	0x20001c3c
 8019264:	08014fb1 	.word	0x08014fb1
 8019268:	200001b8 	.word	0x200001b8

0801926c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801926c:	b538      	push	{r3, r4, r5, lr}
 801926e:	4c15      	ldr	r4, [pc, #84]	@ (80192c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019270:	4605      	mov	r5, r0
 8019272:	7823      	ldrb	r3, [r4, #0]
 8019274:	f3bf 8f5b 	dmb	ish
 8019278:	07da      	lsls	r2, r3, #31
 801927a:	d40b      	bmi.n	8019294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801927c:	4620      	mov	r0, r4
 801927e:	f007 fcdc 	bl	8020c3a <__cxa_guard_acquire>
 8019282:	b138      	cbz	r0, 8019294 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019284:	4620      	mov	r0, r4
 8019286:	f007 fce4 	bl	8020c52 <__cxa_guard_release>
 801928a:	4a0f      	ldr	r2, [pc, #60]	@ (80192c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801928c:	490f      	ldr	r1, [pc, #60]	@ (80192cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801928e:	4810      	ldr	r0, [pc, #64]	@ (80192d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019290:	f007 fccc 	bl	8020c2c <__aeabi_atexit>
 8019294:	4c0f      	ldr	r4, [pc, #60]	@ (80192d4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8019296:	7823      	ldrb	r3, [r4, #0]
 8019298:	f3bf 8f5b 	dmb	ish
 801929c:	07db      	lsls	r3, r3, #31
 801929e:	d40b      	bmi.n	80192b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80192a0:	4620      	mov	r0, r4
 80192a2:	f007 fcca 	bl	8020c3a <__cxa_guard_acquire>
 80192a6:	b138      	cbz	r0, 80192b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80192a8:	4620      	mov	r0, r4
 80192aa:	f007 fcd2 	bl	8020c52 <__cxa_guard_release>
 80192ae:	4a06      	ldr	r2, [pc, #24]	@ (80192c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80192b0:	4909      	ldr	r1, [pc, #36]	@ (80192d8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80192b2:	480a      	ldr	r0, [pc, #40]	@ (80192dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80192b4:	f007 fcba 	bl	8020c2c <__aeabi_atexit>
 80192b8:	4b05      	ldr	r3, [pc, #20]	@ (80192d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80192ba:	63eb      	str	r3, [r5, #60]	@ 0x3c
 80192bc:	4b07      	ldr	r3, [pc, #28]	@ (80192dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80192be:	642b      	str	r3, [r5, #64]	@ 0x40
 80192c0:	bd38      	pop	{r3, r4, r5, pc}
 80192c2:	bf00      	nop
 80192c4:	20001c58 	.word	0x20001c58
 80192c8:	20000000 	.word	0x20000000
 80192cc:	08014fb7 	.word	0x08014fb7
 80192d0:	200001d4 	.word	0x200001d4
 80192d4:	20001c5c 	.word	0x20001c5c
 80192d8:	08014fb5 	.word	0x08014fb5
 80192dc:	200001d8 	.word	0x200001d8

080192e0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80192e0:	b510      	push	{r4, lr}
 80192e2:	4604      	mov	r4, r0
 80192e4:	f7ff ff14 	bl	8019110 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 80192e8:	4620      	mov	r0, r4
 80192ea:	f7ff ff85 	bl	80191f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80192ee:	4620      	mov	r0, r4
 80192f0:	f7ff ff48 	bl	8019184 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80192f4:	4620      	mov	r0, r4
 80192f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192fa:	f7ff bfb7 	b.w	801926c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019300 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019300:	b538      	push	{r3, r4, r5, lr}
 8019302:	4c15      	ldr	r4, [pc, #84]	@ (8019358 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019304:	4605      	mov	r5, r0
 8019306:	7823      	ldrb	r3, [r4, #0]
 8019308:	f3bf 8f5b 	dmb	ish
 801930c:	07da      	lsls	r2, r3, #31
 801930e:	d40b      	bmi.n	8019328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019310:	4620      	mov	r0, r4
 8019312:	f007 fc92 	bl	8020c3a <__cxa_guard_acquire>
 8019316:	b138      	cbz	r0, 8019328 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019318:	4620      	mov	r0, r4
 801931a:	f007 fc9a 	bl	8020c52 <__cxa_guard_release>
 801931e:	4a0f      	ldr	r2, [pc, #60]	@ (801935c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019320:	490f      	ldr	r1, [pc, #60]	@ (8019360 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019322:	4810      	ldr	r0, [pc, #64]	@ (8019364 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019324:	f007 fc82 	bl	8020c2c <__aeabi_atexit>
 8019328:	4c0f      	ldr	r4, [pc, #60]	@ (8019368 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801932a:	7823      	ldrb	r3, [r4, #0]
 801932c:	f3bf 8f5b 	dmb	ish
 8019330:	07db      	lsls	r3, r3, #31
 8019332:	d40b      	bmi.n	801934c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019334:	4620      	mov	r0, r4
 8019336:	f007 fc80 	bl	8020c3a <__cxa_guard_acquire>
 801933a:	b138      	cbz	r0, 801934c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801933c:	4620      	mov	r0, r4
 801933e:	f007 fc88 	bl	8020c52 <__cxa_guard_release>
 8019342:	4a06      	ldr	r2, [pc, #24]	@ (801935c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019344:	4909      	ldr	r1, [pc, #36]	@ (801936c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019346:	480a      	ldr	r0, [pc, #40]	@ (8019370 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019348:	f007 fc70 	bl	8020c2c <__aeabi_atexit>
 801934c:	4b05      	ldr	r3, [pc, #20]	@ (8019364 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801934e:	666b      	str	r3, [r5, #100]	@ 0x64
 8019350:	4b07      	ldr	r3, [pc, #28]	@ (8019370 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019352:	66ab      	str	r3, [r5, #104]	@ 0x68
 8019354:	bd38      	pop	{r3, r4, r5, pc}
 8019356:	bf00      	nop
 8019358:	20001c40 	.word	0x20001c40
 801935c:	20000000 	.word	0x20000000
 8019360:	08014fa3 	.word	0x08014fa3
 8019364:	200001bc 	.word	0x200001bc
 8019368:	20001c44 	.word	0x20001c44
 801936c:	08014fa1 	.word	0x08014fa1
 8019370:	200001c0 	.word	0x200001c0

08019374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019374:	b538      	push	{r3, r4, r5, lr}
 8019376:	4c15      	ldr	r4, [pc, #84]	@ (80193cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8019378:	4605      	mov	r5, r0
 801937a:	7823      	ldrb	r3, [r4, #0]
 801937c:	f3bf 8f5b 	dmb	ish
 8019380:	07da      	lsls	r2, r3, #31
 8019382:	d40b      	bmi.n	801939c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019384:	4620      	mov	r0, r4
 8019386:	f007 fc58 	bl	8020c3a <__cxa_guard_acquire>
 801938a:	b138      	cbz	r0, 801939c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801938c:	4620      	mov	r0, r4
 801938e:	f007 fc60 	bl	8020c52 <__cxa_guard_release>
 8019392:	4a0f      	ldr	r2, [pc, #60]	@ (80193d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019394:	490f      	ldr	r1, [pc, #60]	@ (80193d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8019396:	4810      	ldr	r0, [pc, #64]	@ (80193d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019398:	f007 fc48 	bl	8020c2c <__aeabi_atexit>
 801939c:	4c0f      	ldr	r4, [pc, #60]	@ (80193dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801939e:	7823      	ldrb	r3, [r4, #0]
 80193a0:	f3bf 8f5b 	dmb	ish
 80193a4:	07db      	lsls	r3, r3, #31
 80193a6:	d40b      	bmi.n	80193c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80193a8:	4620      	mov	r0, r4
 80193aa:	f007 fc46 	bl	8020c3a <__cxa_guard_acquire>
 80193ae:	b138      	cbz	r0, 80193c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80193b0:	4620      	mov	r0, r4
 80193b2:	f007 fc4e 	bl	8020c52 <__cxa_guard_release>
 80193b6:	4a06      	ldr	r2, [pc, #24]	@ (80193d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80193b8:	4909      	ldr	r1, [pc, #36]	@ (80193e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80193ba:	480a      	ldr	r0, [pc, #40]	@ (80193e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80193bc:	f007 fc36 	bl	8020c2c <__aeabi_atexit>
 80193c0:	4b05      	ldr	r3, [pc, #20]	@ (80193d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80193c2:	65eb      	str	r3, [r5, #92]	@ 0x5c
 80193c4:	4b07      	ldr	r3, [pc, #28]	@ (80193e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80193c6:	662b      	str	r3, [r5, #96]	@ 0x60
 80193c8:	bd38      	pop	{r3, r4, r5, pc}
 80193ca:	bf00      	nop
 80193cc:	20001c18 	.word	0x20001c18
 80193d0:	20000000 	.word	0x20000000
 80193d4:	08014fa7 	.word	0x08014fa7
 80193d8:	20000194 	.word	0x20000194
 80193dc:	20001c1c 	.word	0x20001c1c
 80193e0:	08014fa5 	.word	0x08014fa5
 80193e4:	20000198 	.word	0x20000198

080193e8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80193e8:	b510      	push	{r4, lr}
 80193ea:	4604      	mov	r4, r0
 80193ec:	f7ff ff88 	bl	8019300 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80193f0:	4620      	mov	r0, r4
 80193f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193f6:	f7ff bfbd 	b.w	8019374 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080193fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80193fc:	b538      	push	{r3, r4, r5, lr}
 80193fe:	4c15      	ldr	r4, [pc, #84]	@ (8019454 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019400:	4605      	mov	r5, r0
 8019402:	7823      	ldrb	r3, [r4, #0]
 8019404:	f3bf 8f5b 	dmb	ish
 8019408:	07da      	lsls	r2, r3, #31
 801940a:	d40b      	bmi.n	8019424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801940c:	4620      	mov	r0, r4
 801940e:	f007 fc14 	bl	8020c3a <__cxa_guard_acquire>
 8019412:	b138      	cbz	r0, 8019424 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019414:	4620      	mov	r0, r4
 8019416:	f007 fc1c 	bl	8020c52 <__cxa_guard_release>
 801941a:	4a0f      	ldr	r2, [pc, #60]	@ (8019458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801941c:	490f      	ldr	r1, [pc, #60]	@ (801945c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801941e:	4810      	ldr	r0, [pc, #64]	@ (8019460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019420:	f007 fc04 	bl	8020c2c <__aeabi_atexit>
 8019424:	4c0f      	ldr	r4, [pc, #60]	@ (8019464 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019426:	7823      	ldrb	r3, [r4, #0]
 8019428:	f3bf 8f5b 	dmb	ish
 801942c:	07db      	lsls	r3, r3, #31
 801942e:	d40b      	bmi.n	8019448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019430:	4620      	mov	r0, r4
 8019432:	f007 fc02 	bl	8020c3a <__cxa_guard_acquire>
 8019436:	b138      	cbz	r0, 8019448 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019438:	4620      	mov	r0, r4
 801943a:	f007 fc0a 	bl	8020c52 <__cxa_guard_release>
 801943e:	4a06      	ldr	r2, [pc, #24]	@ (8019458 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019440:	4909      	ldr	r1, [pc, #36]	@ (8019468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019442:	480a      	ldr	r0, [pc, #40]	@ (801946c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019444:	f007 fbf2 	bl	8020c2c <__aeabi_atexit>
 8019448:	4b05      	ldr	r3, [pc, #20]	@ (8019460 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801944a:	676b      	str	r3, [r5, #116]	@ 0x74
 801944c:	4b07      	ldr	r3, [pc, #28]	@ (801946c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801944e:	67ab      	str	r3, [r5, #120]	@ 0x78
 8019450:	bd38      	pop	{r3, r4, r5, pc}
 8019452:	bf00      	nop
 8019454:	20001c10 	.word	0x20001c10
 8019458:	20000000 	.word	0x20000000
 801945c:	08014f9b 	.word	0x08014f9b
 8019460:	2000018c 	.word	0x2000018c
 8019464:	20001c14 	.word	0x20001c14
 8019468:	08014f99 	.word	0x08014f99
 801946c:	20000190 	.word	0x20000190

08019470 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019470:	b538      	push	{r3, r4, r5, lr}
 8019472:	4c15      	ldr	r4, [pc, #84]	@ (80194c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019474:	4605      	mov	r5, r0
 8019476:	7823      	ldrb	r3, [r4, #0]
 8019478:	f3bf 8f5b 	dmb	ish
 801947c:	07da      	lsls	r2, r3, #31
 801947e:	d40b      	bmi.n	8019498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019480:	4620      	mov	r0, r4
 8019482:	f007 fbda 	bl	8020c3a <__cxa_guard_acquire>
 8019486:	b138      	cbz	r0, 8019498 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019488:	4620      	mov	r0, r4
 801948a:	f007 fbe2 	bl	8020c52 <__cxa_guard_release>
 801948e:	4a0f      	ldr	r2, [pc, #60]	@ (80194cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019490:	490f      	ldr	r1, [pc, #60]	@ (80194d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019492:	4810      	ldr	r0, [pc, #64]	@ (80194d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019494:	f007 fbca 	bl	8020c2c <__aeabi_atexit>
 8019498:	4c0f      	ldr	r4, [pc, #60]	@ (80194d8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801949a:	7823      	ldrb	r3, [r4, #0]
 801949c:	f3bf 8f5b 	dmb	ish
 80194a0:	07db      	lsls	r3, r3, #31
 80194a2:	d40b      	bmi.n	80194bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80194a4:	4620      	mov	r0, r4
 80194a6:	f007 fbc8 	bl	8020c3a <__cxa_guard_acquire>
 80194aa:	b138      	cbz	r0, 80194bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80194ac:	4620      	mov	r0, r4
 80194ae:	f007 fbd0 	bl	8020c52 <__cxa_guard_release>
 80194b2:	4a06      	ldr	r2, [pc, #24]	@ (80194cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80194b4:	4909      	ldr	r1, [pc, #36]	@ (80194dc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80194b6:	480a      	ldr	r0, [pc, #40]	@ (80194e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80194b8:	f007 fbb8 	bl	8020c2c <__aeabi_atexit>
 80194bc:	4b05      	ldr	r3, [pc, #20]	@ (80194d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80194be:	66eb      	str	r3, [r5, #108]	@ 0x6c
 80194c0:	4b07      	ldr	r3, [pc, #28]	@ (80194e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80194c2:	672b      	str	r3, [r5, #112]	@ 0x70
 80194c4:	bd38      	pop	{r3, r4, r5, pc}
 80194c6:	bf00      	nop
 80194c8:	20001c08 	.word	0x20001c08
 80194cc:	20000000 	.word	0x20000000
 80194d0:	08014f9f 	.word	0x08014f9f
 80194d4:	20000184 	.word	0x20000184
 80194d8:	20001c0c 	.word	0x20001c0c
 80194dc:	08014f9d 	.word	0x08014f9d
 80194e0:	20000188 	.word	0x20000188

080194e4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80194e4:	b510      	push	{r4, lr}
 80194e6:	4604      	mov	r4, r0
 80194e8:	f7ff ff88 	bl	80193fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80194ec:	4620      	mov	r0, r4
 80194ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80194f2:	f7ff bfbd 	b.w	8019470 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080194f6 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80194f6:	b510      	push	{r4, lr}
 80194f8:	4604      	mov	r4, r0
 80194fa:	f7ff fff3 	bl	80194e4 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80194fe:	4620      	mov	r0, r4
 8019500:	f7ff ff72 	bl	80193e8 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019504:	4620      	mov	r0, r4
 8019506:	f7ff fdf9 	bl	80190fc <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801950a:	4620      	mov	r0, r4
 801950c:	f7ff fcfa 	bl	8018f04 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019510:	4620      	mov	r0, r4
 8019512:	f7ff fd75 	bl	8019000 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019516:	4620      	mov	r0, r4
 8019518:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801951c:	f7ff bee0 	b.w	80192e0 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019520 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 8019520:	b538      	push	{r3, r4, r5, lr}
 8019522:	4c0b      	ldr	r4, [pc, #44]	@ (8019550 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 8019524:	4605      	mov	r5, r0
 8019526:	7823      	ldrb	r3, [r4, #0]
 8019528:	f3bf 8f5b 	dmb	ish
 801952c:	07db      	lsls	r3, r3, #31
 801952e:	d40b      	bmi.n	8019548 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019530:	4620      	mov	r0, r4
 8019532:	f007 fb82 	bl	8020c3a <__cxa_guard_acquire>
 8019536:	b138      	cbz	r0, 8019548 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 8019538:	4620      	mov	r0, r4
 801953a:	f007 fb8a 	bl	8020c52 <__cxa_guard_release>
 801953e:	4a05      	ldr	r2, [pc, #20]	@ (8019554 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 8019540:	4905      	ldr	r1, [pc, #20]	@ (8019558 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 8019542:	4806      	ldr	r0, [pc, #24]	@ (801955c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 8019544:	f007 fb72 	bl	8020c2c <__aeabi_atexit>
 8019548:	4b04      	ldr	r3, [pc, #16]	@ (801955c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801954a:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801954c:	bd38      	pop	{r3, r4, r5, pc}
 801954e:	bf00      	nop
 8019550:	20001bfc 	.word	0x20001bfc
 8019554:	20000000 	.word	0x20000000
 8019558:	08014f97 	.word	0x08014f97
 801955c:	2000017c 	.word	0x2000017c

08019560 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 8019560:	b538      	push	{r3, r4, r5, lr}
 8019562:	4c0b      	ldr	r4, [pc, #44]	@ (8019590 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 8019564:	4605      	mov	r5, r0
 8019566:	7823      	ldrb	r3, [r4, #0]
 8019568:	f3bf 8f5b 	dmb	ish
 801956c:	07db      	lsls	r3, r3, #31
 801956e:	d40b      	bmi.n	8019588 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019570:	4620      	mov	r0, r4
 8019572:	f007 fb62 	bl	8020c3a <__cxa_guard_acquire>
 8019576:	b138      	cbz	r0, 8019588 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 8019578:	4620      	mov	r0, r4
 801957a:	f007 fb6a 	bl	8020c52 <__cxa_guard_release>
 801957e:	4a05      	ldr	r2, [pc, #20]	@ (8019594 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 8019580:	4905      	ldr	r1, [pc, #20]	@ (8019598 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 8019582:	4806      	ldr	r0, [pc, #24]	@ (801959c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 8019584:	f007 fb52 	bl	8020c2c <__aeabi_atexit>
 8019588:	4b04      	ldr	r3, [pc, #16]	@ (801959c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801958a:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801958e:	bd38      	pop	{r3, r4, r5, pc}
 8019590:	20001c00 	.word	0x20001c00
 8019594:	20000000 	.word	0x20000000
 8019598:	08014f95 	.word	0x08014f95
 801959c:	20000180 	.word	0x20000180

080195a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 80195a0:	b570      	push	{r4, r5, r6, lr}
 80195a2:	4d0d      	ldr	r5, [pc, #52]	@ (80195d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 80195a4:	4606      	mov	r6, r0
 80195a6:	4c0d      	ldr	r4, [pc, #52]	@ (80195dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 80195a8:	782b      	ldrb	r3, [r5, #0]
 80195aa:	f3bf 8f5b 	dmb	ish
 80195ae:	f013 0f01 	tst.w	r3, #1
 80195b2:	d10d      	bne.n	80195d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80195b4:	4628      	mov	r0, r5
 80195b6:	f007 fb40 	bl	8020c3a <__cxa_guard_acquire>
 80195ba:	b148      	cbz	r0, 80195d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 80195bc:	4b08      	ldr	r3, [pc, #32]	@ (80195e0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 80195be:	4628      	mov	r0, r5
 80195c0:	6023      	str	r3, [r4, #0]
 80195c2:	f007 fb46 	bl	8020c52 <__cxa_guard_release>
 80195c6:	4a07      	ldr	r2, [pc, #28]	@ (80195e4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 80195c8:	4620      	mov	r0, r4
 80195ca:	4907      	ldr	r1, [pc, #28]	@ (80195e8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 80195cc:	f007 fb2e 	bl	8020c2c <__aeabi_atexit>
 80195d0:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 80195d4:	bd70      	pop	{r4, r5, r6, pc}
 80195d6:	bf00      	nop
 80195d8:	20001c04 	.word	0x20001c04
 80195dc:	20001d7c 	.word	0x20001d7c
 80195e0:	0802313c 	.word	0x0802313c
 80195e4:	20000000 	.word	0x20000000
 80195e8:	08014f93 	.word	0x08014f93

080195ec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 80195ec:	b510      	push	{r4, lr}
 80195ee:	4604      	mov	r4, r0
 80195f0:	f7ff ff96 	bl	8019520 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 80195f4:	4620      	mov	r0, r4
 80195f6:	f7ff ffb3 	bl	8019560 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 80195fa:	4620      	mov	r0, r4
 80195fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019600:	f7ff bfce 	b.w	80195a0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

08019604 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 8019604:	b570      	push	{r4, r5, r6, lr}
 8019606:	4d0d      	ldr	r5, [pc, #52]	@ (801963c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 8019608:	4606      	mov	r6, r0
 801960a:	4c0d      	ldr	r4, [pc, #52]	@ (8019640 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801960c:	782b      	ldrb	r3, [r5, #0]
 801960e:	f3bf 8f5b 	dmb	ish
 8019612:	f013 0f01 	tst.w	r3, #1
 8019616:	d10d      	bne.n	8019634 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019618:	4628      	mov	r0, r5
 801961a:	f007 fb0e 	bl	8020c3a <__cxa_guard_acquire>
 801961e:	b148      	cbz	r0, 8019634 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 8019620:	4b08      	ldr	r3, [pc, #32]	@ (8019644 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 8019622:	4628      	mov	r0, r5
 8019624:	6023      	str	r3, [r4, #0]
 8019626:	f007 fb14 	bl	8020c52 <__cxa_guard_release>
 801962a:	4a07      	ldr	r2, [pc, #28]	@ (8019648 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801962c:	4620      	mov	r0, r4
 801962e:	4907      	ldr	r1, [pc, #28]	@ (801964c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 8019630:	f007 fafc 	bl	8020c2c <__aeabi_atexit>
 8019634:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 8019638:	bd70      	pop	{r4, r5, r6, pc}
 801963a:	bf00      	nop
 801963c:	20001bf8 	.word	0x20001bf8
 8019640:	20001c78 	.word	0x20001c78
 8019644:	08023158 	.word	0x08023158
 8019648:	20000000 	.word	0x20000000
 801964c:	08014f91 	.word	0x08014f91

08019650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019650:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019654:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 8019658:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801965c:	2d00      	cmp	r5, #0
 801965e:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 8019662:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019666:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801966a:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801966e:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 8019672:	eb02 0a0c 	add.w	sl, r2, ip
 8019676:	8808      	ldrh	r0, [r1, #0]
 8019678:	f2c0 80b0 	blt.w	80197dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801967c:	45ab      	cmp	fp, r5
 801967e:	f340 80ad 	ble.w	80197dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019682:	2c00      	cmp	r4, #0
 8019684:	f2c0 80a8 	blt.w	80197d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019688:	45a6      	cmp	lr, r4
 801968a:	f340 80a5 	ble.w	80197d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801968e:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019692:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019696:	1c62      	adds	r2, r4, #1
 8019698:	f100 80a3 	bmi.w	80197e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801969c:	4596      	cmp	lr, r2
 801969e:	f340 80a0 	ble.w	80197e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80196a2:	f1b9 0f00 	cmp.w	r9, #0
 80196a6:	f000 809c 	beq.w	80197e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80196aa:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80196ae:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 80196b2:	3501      	adds	r5, #1
 80196b4:	f100 8099 	bmi.w	80197ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80196b8:	45ab      	cmp	fp, r5
 80196ba:	f340 8096 	ble.w	80197ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80196be:	2f00      	cmp	r7, #0
 80196c0:	f000 8093 	beq.w	80197ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80196c4:	2c00      	cmp	r4, #0
 80196c6:	f2c0 808e 	blt.w	80197e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80196ca:	45a6      	cmp	lr, r4
 80196cc:	f340 808b 	ble.w	80197e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80196d0:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80196d4:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80196d8:	3401      	adds	r4, #1
 80196da:	f100 8089 	bmi.w	80197f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80196de:	45a6      	cmp	lr, r4
 80196e0:	f340 8086 	ble.w	80197f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80196e4:	f1b9 0f00 	cmp.w	r9, #0
 80196e8:	f000 8082 	beq.w	80197f0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80196ec:	44d6      	add	lr, sl
 80196ee:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80196f2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80196f6:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80196fa:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80196fe:	fb19 fe07 	smulbb	lr, r9, r7
 8019702:	f1c7 0210 	rsb	r2, r7, #16
 8019706:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801970a:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801970e:	eba2 0209 	sub.w	r2, r2, r9
 8019712:	ea44 0808 	orr.w	r8, r4, r8
 8019716:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801971a:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801971e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019722:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8019726:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801972a:	ea44 0c0c 	orr.w	ip, r4, ip
 801972e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019732:	fb04 f40c 	mul.w	r4, r4, ip
 8019736:	fb02 4808 	mla	r8, r2, r8, r4
 801973a:	041a      	lsls	r2, r3, #16
 801973c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019740:	b2b4      	uxth	r4, r6
 8019742:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019746:	43f6      	mvns	r6, r6
 8019748:	4313      	orrs	r3, r2
 801974a:	042a      	lsls	r2, r5, #16
 801974c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019750:	b2f6      	uxtb	r6, r6
 8019752:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8019756:	fb0e 8303 	mla	r3, lr, r3, r8
 801975a:	432a      	orrs	r2, r5
 801975c:	fb07 3202 	mla	r2, r7, r2, r3
 8019760:	10c7      	asrs	r7, r0, #3
 8019762:	0d53      	lsrs	r3, r2, #21
 8019764:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019768:	0952      	lsrs	r2, r2, #5
 801976a:	fb17 f706 	smulbb	r7, r7, r6
 801976e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019772:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019776:	431a      	orrs	r2, r3
 8019778:	b293      	uxth	r3, r2
 801977a:	1202      	asrs	r2, r0, #8
 801977c:	121d      	asrs	r5, r3, #8
 801977e:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8019782:	00c0      	lsls	r0, r0, #3
 8019784:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8019788:	fb12 f206 	smulbb	r2, r2, r6
 801978c:	b2c0      	uxtb	r0, r0
 801978e:	fb05 2504 	mla	r5, r5, r4, r2
 8019792:	10da      	asrs	r2, r3, #3
 8019794:	fb10 f006 	smulbb	r0, r0, r6
 8019798:	00db      	lsls	r3, r3, #3
 801979a:	b2ad      	uxth	r5, r5
 801979c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80197a0:	b2db      	uxtb	r3, r3
 80197a2:	fb02 7204 	mla	r2, r2, r4, r7
 80197a6:	fb03 0004 	mla	r0, r3, r4, r0
 80197aa:	1c6b      	adds	r3, r5, #1
 80197ac:	b292      	uxth	r2, r2
 80197ae:	b280      	uxth	r0, r0
 80197b0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80197b4:	1c43      	adds	r3, r0, #1
 80197b6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80197ba:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80197be:	1c50      	adds	r0, r2, #1
 80197c0:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80197c4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80197c8:	0952      	lsrs	r2, r2, #5
 80197ca:	432b      	orrs	r3, r5
 80197cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80197d0:	4313      	orrs	r3, r2
 80197d2:	800b      	strh	r3, [r1, #0]
 80197d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80197d8:	4680      	mov	r8, r0
 80197da:	e75c      	b.n	8019696 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 80197dc:	4684      	mov	ip, r0
 80197de:	4680      	mov	r8, r0
 80197e0:	e767      	b.n	80196b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80197e2:	4684      	mov	ip, r0
 80197e4:	e765      	b.n	80196b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 80197e6:	4605      	mov	r5, r0
 80197e8:	e776      	b.n	80196d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 80197ea:	4603      	mov	r3, r0
 80197ec:	4605      	mov	r5, r0
 80197ee:	e782      	b.n	80196f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 80197f0:	4603      	mov	r3, r0
 80197f2:	e780      	b.n	80196f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

080197f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80197f8:	b099      	sub	sp, #100	@ 0x64
 80197fa:	9215      	str	r2, [sp, #84]	@ 0x54
 80197fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80197fe:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8019800:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 8019804:	9016      	str	r0, [sp, #88]	@ 0x58
 8019806:	930d      	str	r3, [sp, #52]	@ 0x34
 8019808:	6850      	ldr	r0, [r2, #4]
 801980a:	910c      	str	r1, [sp, #48]	@ 0x30
 801980c:	6812      	ldr	r2, [r2, #0]
 801980e:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 8019812:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 8019816:	fb00 1303 	mla	r3, r0, r3, r1
 801981a:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801981e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019820:	681b      	ldr	r3, [r3, #0]
 8019822:	930b      	str	r3, [sp, #44]	@ 0x2c
 8019824:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019826:	685e      	ldr	r6, [r3, #4]
 8019828:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801982a:	3604      	adds	r6, #4
 801982c:	43db      	mvns	r3, r3
 801982e:	b2db      	uxtb	r3, r3
 8019830:	930a      	str	r3, [sp, #40]	@ 0x28
 8019832:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019834:	2b00      	cmp	r3, #0
 8019836:	dc03      	bgt.n	8019840 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019838:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801983a:	2b00      	cmp	r3, #0
 801983c:	f340 8225 	ble.w	8019c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019840:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019842:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019846:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801984a:	1e48      	subs	r0, r1, #1
 801984c:	1e57      	subs	r7, r2, #1
 801984e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019850:	2b00      	cmp	r3, #0
 8019852:	f340 80e3 	ble.w	8019a1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019856:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801985a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801985e:	d406      	bmi.n	801986e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019860:	4584      	cmp	ip, r0
 8019862:	da04      	bge.n	801986e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019864:	2b00      	cmp	r3, #0
 8019866:	db02      	blt.n	801986e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019868:	42bb      	cmp	r3, r7
 801986a:	f2c0 80d8 	blt.w	8019a1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801986e:	f11c 0c01 	adds.w	ip, ip, #1
 8019872:	f100 80c9 	bmi.w	8019a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019876:	4561      	cmp	r1, ip
 8019878:	f2c0 80c6 	blt.w	8019a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801987c:	3301      	adds	r3, #1
 801987e:	f100 80c3 	bmi.w	8019a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019882:	429a      	cmp	r2, r3
 8019884:	f2c0 80c0 	blt.w	8019a08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019888:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801988c:	4647      	mov	r7, r8
 801988e:	f1bb 0f00 	cmp.w	fp, #0
 8019892:	f340 80e3 	ble.w	8019a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019896:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 8019898:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801989c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801989e:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80198a2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80198a6:	ea5f 422a 	movs.w	r2, sl, asr #16
 80198aa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80198ae:	689b      	ldr	r3, [r3, #8]
 80198b0:	f100 8121 	bmi.w	8019af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80198b4:	f103 39ff 	add.w	r9, r3, #4294967295
 80198b8:	454a      	cmp	r2, r9
 80198ba:	f280 811c 	bge.w	8019af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80198be:	f1bc 0f00 	cmp.w	ip, #0
 80198c2:	f2c0 8118 	blt.w	8019af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80198c6:	f10e 39ff 	add.w	r9, lr, #4294967295
 80198ca:	45cc      	cmp	ip, r9
 80198cc:	f280 8113 	bge.w	8019af6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 80198d0:	b21b      	sxth	r3, r3
 80198d2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80198d4:	fb0c 2203 	mla	r2, ip, r3, r2
 80198d8:	eb04 0902 	add.w	r9, r4, r2
 80198dc:	5ca2      	ldrb	r2, [r4, r2]
 80198de:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80198e2:	2800      	cmp	r0, #0
 80198e4:	f000 80fe 	beq.w	8019ae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80198e8:	f899 2001 	ldrb.w	r2, [r9, #1]
 80198ec:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80198f0:	9211      	str	r2, [sp, #68]	@ 0x44
 80198f2:	b151      	cbz	r1, 801990a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80198f4:	eb09 0203 	add.w	r2, r9, r3
 80198f8:	f819 3003 	ldrb.w	r3, [r9, r3]
 80198fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019900:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019902:	7853      	ldrb	r3, [r2, #1]
 8019904:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019908:	9312      	str	r3, [sp, #72]	@ 0x48
 801990a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801990c:	fb10 f201 	smulbb	r2, r0, r1
 8019910:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8019912:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019916:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801991a:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801991e:	10d2      	asrs	r2, r2, #3
 8019920:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019924:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019928:	ea4c 0c03 	orr.w	ip, ip, r3
 801992c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801992e:	041b      	lsls	r3, r3, #16
 8019930:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019934:	4323      	orrs	r3, r4
 8019936:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019938:	4353      	muls	r3, r2
 801993a:	fb09 330c 	mla	r3, r9, ip, r3
 801993e:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019942:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019946:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801994a:	ea4c 0e0e 	orr.w	lr, ip, lr
 801994e:	f1c1 0c10 	rsb	ip, r1, #16
 8019952:	ebac 0c00 	sub.w	ip, ip, r0
 8019956:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801995a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801995e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019962:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019964:	0418      	lsls	r0, r3, #16
 8019966:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801996a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801996e:	4318      	orrs	r0, r3
 8019970:	fb02 c200 	mla	r2, r2, r0, ip
 8019974:	8838      	ldrh	r0, [r7, #0]
 8019976:	0d53      	lsrs	r3, r2, #21
 8019978:	0952      	lsrs	r2, r2, #5
 801997a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801997e:	1201      	asrs	r1, r0, #8
 8019980:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019984:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019988:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801998c:	00c0      	lsls	r0, r0, #3
 801998e:	431a      	orrs	r2, r3
 8019990:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 8019994:	fb11 f104 	smulbb	r1, r1, r4
 8019998:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801999c:	b292      	uxth	r2, r2
 801999e:	fb1e fe04 	smulbb	lr, lr, r4
 80199a2:	b2c0      	uxtb	r0, r0
 80199a4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80199a8:	fb10 f004 	smulbb	r0, r0, r4
 80199ac:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80199b0:	fb0c 1c03 	mla	ip, ip, r3, r1
 80199b4:	10d1      	asrs	r1, r2, #3
 80199b6:	00d2      	lsls	r2, r2, #3
 80199b8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80199bc:	fa1f fc8c 	uxth.w	ip, ip
 80199c0:	b2d2      	uxtb	r2, r2
 80199c2:	fb01 e103 	mla	r1, r1, r3, lr
 80199c6:	fb02 0303 	mla	r3, r2, r3, r0
 80199ca:	b289      	uxth	r1, r1
 80199cc:	b29a      	uxth	r2, r3
 80199ce:	f10c 0301 	add.w	r3, ip, #1
 80199d2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80199d6:	1c53      	adds	r3, r2, #1
 80199d8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80199dc:	1c4a      	adds	r2, r1, #1
 80199de:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80199e2:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80199e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80199ea:	0949      	lsrs	r1, r1, #5
 80199ec:	ea43 030c 	orr.w	r3, r3, ip
 80199f0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80199f4:	430b      	orrs	r3, r1
 80199f6:	803b      	strh	r3, [r7, #0]
 80199f8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80199fa:	3702      	adds	r7, #2
 80199fc:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019a00:	449a      	add	sl, r3
 8019a02:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019a04:	441d      	add	r5, r3
 8019a06:	e742      	b.n	801988e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019a08:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019a0a:	f108 0802 	add.w	r8, r8, #2
 8019a0e:	449a      	add	sl, r3
 8019a10:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019a12:	441d      	add	r5, r3
 8019a14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a16:	3b01      	subs	r3, #1
 8019a18:	9309      	str	r3, [sp, #36]	@ 0x24
 8019a1a:	e718      	b.n	801984e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019a1c:	d023      	beq.n	8019a66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019a1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a20:	9825      	ldr	r0, [sp, #148]	@ 0x94
 8019a22:	3b01      	subs	r3, #1
 8019a24:	fb00 a003 	mla	r0, r0, r3, sl
 8019a28:	1400      	asrs	r0, r0, #16
 8019a2a:	f53f af2d 	bmi.w	8019888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019a2e:	3901      	subs	r1, #1
 8019a30:	4288      	cmp	r0, r1
 8019a32:	f6bf af29 	bge.w	8019888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019a36:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8019a38:	fb01 5303 	mla	r3, r1, r3, r5
 8019a3c:	141b      	asrs	r3, r3, #16
 8019a3e:	f53f af23 	bmi.w	8019888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019a42:	3a01      	subs	r2, #1
 8019a44:	4293      	cmp	r3, r2
 8019a46:	f6bf af1f 	bge.w	8019888 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019a4a:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8019a4e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 8019a52:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 8019a56:	f1be 0f00 	cmp.w	lr, #0
 8019a5a:	dc6c      	bgt.n	8019b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019a5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019a5e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019a62:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019a66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019a68:	2b00      	cmp	r3, #0
 8019a6a:	f340 810e 	ble.w	8019c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019a6e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019a72:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019a74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a7c:	eef0 6a62 	vmov.f32	s13, s5
 8019a80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019a84:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019a88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a8c:	ee16 aa90 	vmov	sl, s13
 8019a90:	eef0 6a43 	vmov.f32	s13, s6
 8019a94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019a98:	ee16 5a90 	vmov	r5, s13
 8019a9c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019aa0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019aa4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019aa8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019aac:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ab0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ab4:	ee12 2a90 	vmov	r2, s5
 8019ab8:	eef0 2a47 	vmov.f32	s5, s14
 8019abc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ac0:	ee13 2a10 	vmov	r2, s6
 8019ac4:	9325      	str	r3, [sp, #148]	@ 0x94
 8019ac6:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019ac8:	eeb0 3a67 	vmov.f32	s6, s15
 8019acc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ad0:	9326      	str	r3, [sp, #152]	@ 0x98
 8019ad2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019ad4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8019ad6:	3b01      	subs	r3, #1
 8019ad8:	930c      	str	r3, [sp, #48]	@ 0x30
 8019ada:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8019adc:	bf08      	it	eq
 8019ade:	4613      	moveq	r3, r2
 8019ae0:	9309      	str	r3, [sp, #36]	@ 0x24
 8019ae2:	e6a6      	b.n	8019832 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019ae4:	2900      	cmp	r1, #0
 8019ae6:	f43f af10 	beq.w	801990a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019aea:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019aee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019af2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8019af4:	e709      	b.n	801990a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019af6:	f112 0901 	adds.w	r9, r2, #1
 8019afa:	f53f af7d 	bmi.w	80199f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019afe:	454b      	cmp	r3, r9
 8019b00:	f6ff af7a 	blt.w	80199f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019b04:	f11c 0901 	adds.w	r9, ip, #1
 8019b08:	f53f af76 	bmi.w	80199f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019b0c:	45ce      	cmp	lr, r9
 8019b0e:	f6ff af73 	blt.w	80199f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019b12:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8019b14:	b21b      	sxth	r3, r3
 8019b16:	9202      	str	r2, [sp, #8]
 8019b18:	fa0f f28e 	sxth.w	r2, lr
 8019b1c:	9300      	str	r3, [sp, #0]
 8019b1e:	4633      	mov	r3, r6
 8019b20:	9201      	str	r2, [sp, #4]
 8019b22:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019b24:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019b28:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019b2c:	4639      	mov	r1, r7
 8019b2e:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8019b30:	f7ff fd8e 	bl	8019650 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019b34:	e760      	b.n	80199f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019b36:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8019b38:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019b3c:	1429      	asrs	r1, r5, #16
 8019b3e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8019b40:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019b44:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019b48:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019b4c:	fb03 2101 	mla	r1, r3, r1, r2
 8019b50:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8019b52:	440a      	add	r2, r1
 8019b54:	5c61      	ldrb	r1, [r4, r1]
 8019b56:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019b5a:	f1bc 0f00 	cmp.w	ip, #0
 8019b5e:	f000 808c 	beq.w	8019c7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019b62:	7857      	ldrb	r7, [r2, #1]
 8019b64:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019b68:	9413      	str	r4, [sp, #76]	@ 0x4c
 8019b6a:	b140      	cbz	r0, 8019b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019b6c:	18d7      	adds	r7, r2, r3
 8019b6e:	5cd3      	ldrb	r3, [r2, r3]
 8019b70:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019b74:	9310      	str	r3, [sp, #64]	@ 0x40
 8019b76:	787b      	ldrb	r3, [r7, #1]
 8019b78:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019b7c:	9314      	str	r3, [sp, #80]	@ 0x50
 8019b7e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8019b80:	fb1c f200 	smulbb	r2, ip, r0
 8019b84:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8019b86:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019b8a:	041f      	lsls	r7, r3, #16
 8019b8c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019b90:	10d2      	asrs	r2, r2, #3
 8019b92:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 8019b96:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 8019b9a:	431f      	orrs	r7, r3
 8019b9c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019ba0:	9317      	str	r3, [sp, #92]	@ 0x5c
 8019ba2:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8019ba4:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8019ba6:	041b      	lsls	r3, r3, #16
 8019ba8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019bac:	ea43 030b 	orr.w	r3, r3, fp
 8019bb0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019bb4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8019bb8:	4353      	muls	r3, r2
 8019bba:	fb04 3707 	mla	r7, r4, r7, r3
 8019bbe:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 8019bc2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8019bc4:	ea43 0b01 	orr.w	fp, r3, r1
 8019bc8:	f1c0 0110 	rsb	r1, r0, #16
 8019bcc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019bce:	eba1 0c0c 	sub.w	ip, r1, ip
 8019bd2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019bd6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019bda:	fb0c 770b 	mla	r7, ip, fp, r7
 8019bde:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019be2:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 8019be6:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019bea:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019bee:	fb02 770c 	mla	r7, r2, ip, r7
 8019bf2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8019bf4:	0d79      	lsrs	r1, r7, #21
 8019bf6:	8812      	ldrh	r2, [r2, #0]
 8019bf8:	097f      	lsrs	r7, r7, #5
 8019bfa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019bfe:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019c02:	430f      	orrs	r7, r1
 8019c04:	1211      	asrs	r1, r2, #8
 8019c06:	b2bb      	uxth	r3, r7
 8019c08:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8019c0c:	10d7      	asrs	r7, r2, #3
 8019c0e:	fb11 f104 	smulbb	r1, r1, r4
 8019c12:	1218      	asrs	r0, r3, #8
 8019c14:	00d2      	lsls	r2, r2, #3
 8019c16:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019c1a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019c1e:	fb17 f704 	smulbb	r7, r7, r4
 8019c22:	b2d2      	uxtb	r2, r2
 8019c24:	fb00 1009 	mla	r0, r0, r9, r1
 8019c28:	10d9      	asrs	r1, r3, #3
 8019c2a:	fb12 f204 	smulbb	r2, r2, r4
 8019c2e:	00db      	lsls	r3, r3, #3
 8019c30:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8019c34:	b280      	uxth	r0, r0
 8019c36:	b2db      	uxtb	r3, r3
 8019c38:	fb01 7109 	mla	r1, r1, r9, r7
 8019c3c:	fb03 2309 	mla	r3, r3, r9, r2
 8019c40:	1c42      	adds	r2, r0, #1
 8019c42:	b289      	uxth	r1, r1
 8019c44:	b29b      	uxth	r3, r3
 8019c46:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019c4a:	1c4f      	adds	r7, r1, #1
 8019c4c:	1c5a      	adds	r2, r3, #1
 8019c4e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019c52:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8019c56:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019c5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019c5c:	0949      	lsrs	r1, r1, #5
 8019c5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019c62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8019c66:	4310      	orrs	r0, r2
 8019c68:	4308      	orrs	r0, r1
 8019c6a:	f823 0b02 	strh.w	r0, [r3], #2
 8019c6e:	930e      	str	r3, [sp, #56]	@ 0x38
 8019c70:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8019c72:	449a      	add	sl, r3
 8019c74:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8019c76:	441d      	add	r5, r3
 8019c78:	e6ed      	b.n	8019a56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019c7a:	2800      	cmp	r0, #0
 8019c7c:	f43f af7f 	beq.w	8019b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c80:	5cd3      	ldrb	r3, [r2, r3]
 8019c82:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019c86:	9310      	str	r3, [sp, #64]	@ 0x40
 8019c88:	e779      	b.n	8019b7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019c8a:	b019      	add	sp, #100	@ 0x64
 8019c8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019c90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019c94:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 8019c98:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019c9c:	f1b8 0f00 	cmp.w	r8, #0
 8019ca0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 8019ca4:	fb08 470e 	mla	r7, r8, lr, r4
 8019ca8:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8019cac:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8019cb0:	eb02 0907 	add.w	r9, r2, r7
 8019cb4:	8808      	ldrh	r0, [r1, #0]
 8019cb6:	db67      	blt.n	8019d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019cb8:	45c2      	cmp	sl, r8
 8019cba:	dd65      	ble.n	8019d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019cbc:	2c00      	cmp	r4, #0
 8019cbe:	db61      	blt.n	8019d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019cc0:	45a6      	cmp	lr, r4
 8019cc2:	dd5f      	ble.n	8019d84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019cc4:	5dd2      	ldrb	r2, [r2, r7]
 8019cc6:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019cca:	1c62      	adds	r2, r4, #1
 8019ccc:	d45f      	bmi.n	8019d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019cce:	4596      	cmp	lr, r2
 8019cd0:	dd5d      	ble.n	8019d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019cd2:	2d00      	cmp	r5, #0
 8019cd4:	d05b      	beq.n	8019d8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019cd6:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019cda:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019cde:	f118 0801 	adds.w	r8, r8, #1
 8019ce2:	d458      	bmi.n	8019d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019ce4:	45c2      	cmp	sl, r8
 8019ce6:	dd56      	ble.n	8019d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019ce8:	2e00      	cmp	r6, #0
 8019cea:	d054      	beq.n	8019d96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019cec:	2c00      	cmp	r4, #0
 8019cee:	db50      	blt.n	8019d92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019cf0:	45a6      	cmp	lr, r4
 8019cf2:	dd4e      	ble.n	8019d92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019cf4:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019cf8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019cfc:	3401      	adds	r4, #1
 8019cfe:	d407      	bmi.n	8019d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019d00:	45a6      	cmp	lr, r4
 8019d02:	dd05      	ble.n	8019d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019d04:	b125      	cbz	r5, 8019d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019d06:	44ce      	add	lr, r9
 8019d08:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019d0c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019d10:	fb15 f406 	smulbb	r4, r5, r6
 8019d14:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019d18:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019d1c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8019d20:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019d24:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019d28:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8019d2c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8019d30:	ea43 0c0c 	orr.w	ip, r3, ip
 8019d34:	f1c6 0310 	rsb	r3, r6, #16
 8019d38:	ea4e 0707 	orr.w	r7, lr, r7
 8019d3c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019d40:	1b5b      	subs	r3, r3, r5
 8019d42:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019d46:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019d4a:	437d      	muls	r5, r7
 8019d4c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019d50:	0403      	lsls	r3, r0, #16
 8019d52:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019d56:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019d5a:	4318      	orrs	r0, r3
 8019d5c:	0413      	lsls	r3, r2, #16
 8019d5e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019d62:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019d66:	fb04 c000 	mla	r0, r4, r0, ip
 8019d6a:	4313      	orrs	r3, r2
 8019d6c:	fb06 0003 	mla	r0, r6, r3, r0
 8019d70:	0d43      	lsrs	r3, r0, #21
 8019d72:	0940      	lsrs	r0, r0, #5
 8019d74:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019d78:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8019d7c:	4318      	orrs	r0, r3
 8019d7e:	8008      	strh	r0, [r1, #0]
 8019d80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019d84:	4684      	mov	ip, r0
 8019d86:	e7a0      	b.n	8019cca <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019d88:	4607      	mov	r7, r0
 8019d8a:	4684      	mov	ip, r0
 8019d8c:	e7a7      	b.n	8019cde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019d8e:	4607      	mov	r7, r0
 8019d90:	e7a5      	b.n	8019cde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019d92:	4602      	mov	r2, r0
 8019d94:	e7b2      	b.n	8019cfc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019d96:	4602      	mov	r2, r0
 8019d98:	e7ba      	b.n	8019d10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d9e:	b093      	sub	sp, #76	@ 0x4c
 8019da0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019da4:	920f      	str	r2, [sp, #60]	@ 0x3c
 8019da6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8019da8:	9010      	str	r0, [sp, #64]	@ 0x40
 8019daa:	9108      	str	r1, [sp, #32]
 8019dac:	6850      	ldr	r0, [r2, #4]
 8019dae:	9306      	str	r3, [sp, #24]
 8019db0:	6812      	ldr	r2, [r2, #0]
 8019db2:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8019db6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8019dba:	fb00 1303 	mla	r3, r0, r3, r1
 8019dbe:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019dc2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019dc4:	681b      	ldr	r3, [r3, #0]
 8019dc6:	9307      	str	r3, [sp, #28]
 8019dc8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019dca:	685f      	ldr	r7, [r3, #4]
 8019dcc:	3704      	adds	r7, #4
 8019dce:	9b08      	ldr	r3, [sp, #32]
 8019dd0:	2b00      	cmp	r3, #0
 8019dd2:	dc03      	bgt.n	8019ddc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019dd4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8019dd6:	2b00      	cmp	r3, #0
 8019dd8:	f340 81b2 	ble.w	801a140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019ddc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019dde:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019de2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019de6:	1e48      	subs	r0, r1, #1
 8019de8:	f102 3cff 	add.w	ip, r2, #4294967295
 8019dec:	9b06      	ldr	r3, [sp, #24]
 8019dee:	2b00      	cmp	r3, #0
 8019df0:	f340 80a9 	ble.w	8019f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019df4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019df8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019dfc:	d406      	bmi.n	8019e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019dfe:	4586      	cmp	lr, r0
 8019e00:	da04      	bge.n	8019e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e02:	2b00      	cmp	r3, #0
 8019e04:	db02      	blt.n	8019e0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019e06:	4563      	cmp	r3, ip
 8019e08:	f2c0 809e 	blt.w	8019f48 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019e0c:	f11e 0e01 	adds.w	lr, lr, #1
 8019e10:	f100 808f 	bmi.w	8019f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e14:	4571      	cmp	r1, lr
 8019e16:	f2c0 808c 	blt.w	8019f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e1a:	3301      	adds	r3, #1
 8019e1c:	f100 8089 	bmi.w	8019f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e20:	429a      	cmp	r2, r3
 8019e22:	f2c0 8086 	blt.w	8019f32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019e26:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019e2a:	46c8      	mov	r8, r9
 8019e2c:	f1bb 0f00 	cmp.w	fp, #0
 8019e30:	f340 80a6 	ble.w	8019f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019e34:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8019e36:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019e3a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8019e3c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019e40:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019e44:	1422      	asrs	r2, r4, #16
 8019e46:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019e4a:	689b      	ldr	r3, [r3, #8]
 8019e4c:	f100 80e3 	bmi.w	801a016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019e50:	f103 3aff 	add.w	sl, r3, #4294967295
 8019e54:	4552      	cmp	r2, sl
 8019e56:	f280 80de 	bge.w	801a016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019e5a:	f1bc 0f00 	cmp.w	ip, #0
 8019e5e:	f2c0 80da 	blt.w	801a016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019e62:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019e66:	45d4      	cmp	ip, sl
 8019e68:	f280 80d5 	bge.w	801a016 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019e6c:	b21b      	sxth	r3, r3
 8019e6e:	9d07      	ldr	r5, [sp, #28]
 8019e70:	fb0c 2203 	mla	r2, ip, r3, r2
 8019e74:	eb05 0a02 	add.w	sl, r5, r2
 8019e78:	5caa      	ldrb	r2, [r5, r2]
 8019e7a:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019e7e:	2800      	cmp	r0, #0
 8019e80:	f000 80c0 	beq.w	801a004 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019e84:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019e88:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019e8c:	920b      	str	r2, [sp, #44]	@ 0x2c
 8019e8e:	b151      	cbz	r1, 8019ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019e90:	eb0a 0203 	add.w	r2, sl, r3
 8019e94:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019e98:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019e9c:	9309      	str	r3, [sp, #36]	@ 0x24
 8019e9e:	7853      	ldrb	r3, [r2, #1]
 8019ea0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ea4:	930c      	str	r3, [sp, #48]	@ 0x30
 8019ea6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8019ea8:	fb10 f201 	smulbb	r2, r0, r1
 8019eac:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8019eae:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019eb2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019eb6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8019eba:	10d2      	asrs	r2, r2, #3
 8019ebc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019ec0:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019ec4:	ea4c 0c03 	orr.w	ip, ip, r3
 8019ec8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8019eca:	041b      	lsls	r3, r3, #16
 8019ecc:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8019ed0:	432b      	orrs	r3, r5
 8019ed2:	4353      	muls	r3, r2
 8019ed4:	fb0a 330c 	mla	r3, sl, ip, r3
 8019ed8:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019edc:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8019ee0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8019ee4:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019ee8:	f1c1 0c10 	rsb	ip, r1, #16
 8019eec:	ebac 0c00 	sub.w	ip, ip, r0
 8019ef0:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019ef4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019ef8:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019efc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8019efe:	0418      	lsls	r0, r3, #16
 8019f00:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8019f04:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8019f08:	4318      	orrs	r0, r3
 8019f0a:	fb02 c200 	mla	r2, r2, r0, ip
 8019f0e:	0d53      	lsrs	r3, r2, #21
 8019f10:	0952      	lsrs	r2, r2, #5
 8019f12:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8019f16:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8019f1a:	431a      	orrs	r2, r3
 8019f1c:	f8a8 2000 	strh.w	r2, [r8]
 8019f20:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019f22:	f108 0802 	add.w	r8, r8, #2
 8019f26:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019f2a:	441c      	add	r4, r3
 8019f2c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019f2e:	441e      	add	r6, r3
 8019f30:	e77c      	b.n	8019e2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019f32:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8019f34:	f109 0902 	add.w	r9, r9, #2
 8019f38:	441c      	add	r4, r3
 8019f3a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8019f3c:	441e      	add	r6, r3
 8019f3e:	9b06      	ldr	r3, [sp, #24]
 8019f40:	3b01      	subs	r3, #1
 8019f42:	9306      	str	r3, [sp, #24]
 8019f44:	e752      	b.n	8019dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019f46:	d020      	beq.n	8019f8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019f48:	9b06      	ldr	r3, [sp, #24]
 8019f4a:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8019f4c:	3b01      	subs	r3, #1
 8019f4e:	fb00 4003 	mla	r0, r0, r3, r4
 8019f52:	1400      	asrs	r0, r0, #16
 8019f54:	f53f af67 	bmi.w	8019e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019f58:	3901      	subs	r1, #1
 8019f5a:	4288      	cmp	r0, r1
 8019f5c:	f6bf af63 	bge.w	8019e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019f60:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8019f62:	fb01 6303 	mla	r3, r1, r3, r6
 8019f66:	141b      	asrs	r3, r3, #16
 8019f68:	f53f af5d 	bmi.w	8019e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019f6c:	3a01      	subs	r2, #1
 8019f6e:	4293      	cmp	r3, r2
 8019f70:	f6bf af59 	bge.w	8019e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019f74:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019f78:	46ca      	mov	sl, r9
 8019f7a:	f1b8 0f00 	cmp.w	r8, #0
 8019f7e:	dc67      	bgt.n	801a050 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019f80:	9b06      	ldr	r3, [sp, #24]
 8019f82:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019f86:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019f8a:	9b08      	ldr	r3, [sp, #32]
 8019f8c:	2b00      	cmp	r3, #0
 8019f8e:	f340 80d7 	ble.w	801a140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019f92:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019f96:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019f98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019f9c:	eeb0 6a62 	vmov.f32	s12, s5
 8019fa0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019fa4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019fa8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fac:	ee16 4a10 	vmov	r4, s12
 8019fb0:	eeb0 6a43 	vmov.f32	s12, s6
 8019fb4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019fb8:	ee16 6a10 	vmov	r6, s12
 8019fbc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019fc0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019fc4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019fc8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019fcc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019fd0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019fd4:	ee12 2a90 	vmov	r2, s5
 8019fd8:	eef0 2a47 	vmov.f32	s5, s14
 8019fdc:	fb92 f3f3 	sdiv	r3, r2, r3
 8019fe0:	ee13 2a10 	vmov	r2, s6
 8019fe4:	931f      	str	r3, [sp, #124]	@ 0x7c
 8019fe6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019fe8:	eeb0 3a67 	vmov.f32	s6, s15
 8019fec:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ff0:	9320      	str	r3, [sp, #128]	@ 0x80
 8019ff2:	9b08      	ldr	r3, [sp, #32]
 8019ff4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019ff6:	3b01      	subs	r3, #1
 8019ff8:	9308      	str	r3, [sp, #32]
 8019ffa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8019ffc:	bf08      	it	eq
 8019ffe:	4613      	moveq	r3, r2
 801a000:	9306      	str	r3, [sp, #24]
 801a002:	e6e4      	b.n	8019dce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a004:	2900      	cmp	r1, #0
 801a006:	f43f af4e 	beq.w	8019ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a00a:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a00e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a012:	9309      	str	r3, [sp, #36]	@ 0x24
 801a014:	e747      	b.n	8019ea6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a016:	f112 0a01 	adds.w	sl, r2, #1
 801a01a:	d481      	bmi.n	8019f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a01c:	4553      	cmp	r3, sl
 801a01e:	f6ff af7f 	blt.w	8019f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a022:	f11c 0a01 	adds.w	sl, ip, #1
 801a026:	f53f af7b 	bmi.w	8019f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a02a:	45d6      	cmp	lr, sl
 801a02c:	f6ff af78 	blt.w	8019f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a030:	b21b      	sxth	r3, r3
 801a032:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a036:	fa0f f28e 	sxth.w	r2, lr
 801a03a:	9300      	str	r3, [sp, #0]
 801a03c:	463b      	mov	r3, r7
 801a03e:	9201      	str	r2, [sp, #4]
 801a040:	9a07      	ldr	r2, [sp, #28]
 801a042:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a046:	4641      	mov	r1, r8
 801a048:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801a04a:	f7ff fe21 	bl	8019c90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a04e:	e767      	b.n	8019f20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a050:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801a052:	1422      	asrs	r2, r4, #16
 801a054:	1431      	asrs	r1, r6, #16
 801a056:	9d07      	ldr	r5, [sp, #28]
 801a058:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a05c:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a060:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a064:	fb03 2101 	mla	r1, r3, r1, r2
 801a068:	9a07      	ldr	r2, [sp, #28]
 801a06a:	440a      	add	r2, r1
 801a06c:	5c69      	ldrb	r1, [r5, r1]
 801a06e:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a072:	f1be 0f00 	cmp.w	lr, #0
 801a076:	d05c      	beq.n	801a132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a078:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a07c:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a080:	950d      	str	r5, [sp, #52]	@ 0x34
 801a082:	b150      	cbz	r0, 801a09a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a084:	eb02 0c03 	add.w	ip, r2, r3
 801a088:	5cd3      	ldrb	r3, [r2, r3]
 801a08a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a08e:	930a      	str	r3, [sp, #40]	@ 0x28
 801a090:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a094:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a098:	930e      	str	r3, [sp, #56]	@ 0x38
 801a09a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a09c:	fb1e f200 	smulbb	r2, lr, r0
 801a0a0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801a0a2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0a6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a0aa:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801a0ae:	10d2      	asrs	r2, r2, #3
 801a0b0:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801a0b4:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801a0b8:	ea4c 0c03 	orr.w	ip, ip, r3
 801a0bc:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a0c0:	9311      	str	r3, [sp, #68]	@ 0x44
 801a0c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a0c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a0c6:	041b      	lsls	r3, r3, #16
 801a0c8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801a0cc:	ea43 030b 	orr.w	r3, r3, fp
 801a0d0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a0d4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801a0d8:	4353      	muls	r3, r2
 801a0da:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a0de:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801a0e2:	ea43 0b01 	orr.w	fp, r3, r1
 801a0e6:	f1c0 0110 	rsb	r1, r0, #16
 801a0ea:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a0ec:	eba1 0e0e 	sub.w	lr, r1, lr
 801a0f0:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a0f4:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a0f8:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a0fc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a100:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801a104:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801a108:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a10c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a110:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a114:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a118:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a11c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801a120:	ea43 0c0c 	orr.w	ip, r3, ip
 801a124:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a126:	441c      	add	r4, r3
 801a128:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a12a:	f82a cb02 	strh.w	ip, [sl], #2
 801a12e:	441e      	add	r6, r3
 801a130:	e723      	b.n	8019f7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a132:	2800      	cmp	r0, #0
 801a134:	d0b1      	beq.n	801a09a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a136:	5cd3      	ldrb	r3, [r2, r3]
 801a138:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a13c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a13e:	e7ac      	b.n	801a09a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a140:	b013      	add	sp, #76	@ 0x4c
 801a142:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a146 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a146:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a14a:	880d      	ldrh	r5, [r1, #0]
 801a14c:	b087      	sub	sp, #28
 801a14e:	10ef      	asrs	r7, r5, #3
 801a150:	9103      	str	r1, [sp, #12]
 801a152:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a156:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801a15a:	00ed      	lsls	r5, r5, #3
 801a15c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a160:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801a164:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801a168:	b2ed      	uxtb	r5, r5
 801a16a:	9701      	str	r7, [sp, #4]
 801a16c:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801a170:	9502      	str	r5, [sp, #8]
 801a172:	9d01      	ldr	r5, [sp, #4]
 801a174:	9902      	ldr	r1, [sp, #8]
 801a176:	022d      	lsls	r5, r5, #8
 801a178:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801a17c:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801a180:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a184:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801a188:	430d      	orrs	r5, r1
 801a18a:	fb06 0709 	mla	r7, r6, r9, r0
 801a18e:	2e00      	cmp	r6, #0
 801a190:	9505      	str	r5, [sp, #20]
 801a192:	eb02 0c07 	add.w	ip, r2, r7
 801a196:	f2c0 80b6 	blt.w	801a306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a19a:	45b3      	cmp	fp, r6
 801a19c:	f340 80b3 	ble.w	801a306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a1a0:	2800      	cmp	r0, #0
 801a1a2:	f2c0 80ae 	blt.w	801a302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a1a6:	4581      	cmp	r9, r0
 801a1a8:	f340 80ab 	ble.w	801a302 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a1ac:	5dd7      	ldrb	r7, [r2, r7]
 801a1ae:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a1b2:	441f      	add	r7, r3
 801a1b4:	1c42      	adds	r2, r0, #1
 801a1b6:	f100 80a9 	bmi.w	801a30c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a1ba:	4591      	cmp	r9, r2
 801a1bc:	f340 80a6 	ble.w	801a30c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a1c0:	2c00      	cmp	r4, #0
 801a1c2:	f000 80a3 	beq.w	801a30c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a1c6:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a1ca:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a1ce:	441d      	add	r5, r3
 801a1d0:	3601      	adds	r6, #1
 801a1d2:	f100 809f 	bmi.w	801a314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a1d6:	45b3      	cmp	fp, r6
 801a1d8:	f340 809c 	ble.w	801a314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a1dc:	f1be 0f00 	cmp.w	lr, #0
 801a1e0:	f000 8098 	beq.w	801a314 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a1e4:	2800      	cmp	r0, #0
 801a1e6:	f2c0 8093 	blt.w	801a310 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a1ea:	4581      	cmp	r9, r0
 801a1ec:	f340 8090 	ble.w	801a310 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a1f0:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a1f4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a1f8:	441e      	add	r6, r3
 801a1fa:	3001      	adds	r0, #1
 801a1fc:	f100 808d 	bmi.w	801a31a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a200:	4581      	cmp	r9, r0
 801a202:	f340 808a 	ble.w	801a31a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a206:	2c00      	cmp	r4, #0
 801a208:	f000 8087 	beq.w	801a31a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a20c:	44e1      	add	r9, ip
 801a20e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a212:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a216:	4413      	add	r3, r2
 801a218:	b2a4      	uxth	r4, r4
 801a21a:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a21e:	fa1f fe8e 	uxth.w	lr, lr
 801a222:	9901      	ldr	r1, [sp, #4]
 801a224:	fb04 fb0e 	mul.w	fp, r4, lr
 801a228:	0124      	lsls	r4, r4, #4
 801a22a:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a22e:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801a232:	eba4 040b 	sub.w	r4, r4, fp
 801a236:	fa1f f08e 	uxth.w	r0, lr
 801a23a:	b2a2      	uxth	r2, r4
 801a23c:	78ac      	ldrb	r4, [r5, #2]
 801a23e:	eba9 0900 	sub.w	r9, r9, r0
 801a242:	fa1f fe88 	uxth.w	lr, r8
 801a246:	4354      	muls	r4, r2
 801a248:	ea6f 0808 	mvn.w	r8, r8
 801a24c:	fa1f f989 	uxth.w	r9, r9
 801a250:	fa5f f888 	uxtb.w	r8, r8
 801a254:	fb09 440c 	mla	r4, r9, ip, r4
 801a258:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a25c:	fb1a fa08 	smulbb	sl, sl, r8
 801a260:	fb00 440c 	mla	r4, r0, ip, r4
 801a264:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a268:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a26c:	787c      	ldrb	r4, [r7, #1]
 801a26e:	783f      	ldrb	r7, [r7, #0]
 801a270:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a274:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a278:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a27c:	782d      	ldrb	r5, [r5, #0]
 801a27e:	fb02 fa0a 	mul.w	sl, r2, sl
 801a282:	fa1f fc8c 	uxth.w	ip, ip
 801a286:	436a      	muls	r2, r5
 801a288:	7835      	ldrb	r5, [r6, #0]
 801a28a:	fb09 aa04 	mla	sl, r9, r4, sl
 801a28e:	7874      	ldrb	r4, [r6, #1]
 801a290:	fb09 2207 	mla	r2, r9, r7, r2
 801a294:	fb00 aa04 	mla	sl, r0, r4, sl
 801a298:	785c      	ldrb	r4, [r3, #1]
 801a29a:	fb00 2005 	mla	r0, r0, r5, r2
 801a29e:	781b      	ldrb	r3, [r3, #0]
 801a2a0:	fb0b a404 	mla	r4, fp, r4, sl
 801a2a4:	fb11 fa08 	smulbb	sl, r1, r8
 801a2a8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a2ac:	9b02      	ldr	r3, [sp, #8]
 801a2ae:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a2b2:	fb13 f808 	smulbb	r8, r3, r8
 801a2b6:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a2ba:	fb04 a40e 	mla	r4, r4, lr, sl
 801a2be:	f10c 0301 	add.w	r3, ip, #1
 801a2c2:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a2c6:	b2a4      	uxth	r4, r4
 801a2c8:	fa1f fe8e 	uxth.w	lr, lr
 801a2cc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a2d0:	f104 0a01 	add.w	sl, r4, #1
 801a2d4:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801a2d8:	f10e 0c01 	add.w	ip, lr, #1
 801a2dc:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a2e0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a2e4:	0964      	lsrs	r4, r4, #5
 801a2e6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a2ea:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801a2ee:	ea4c 0c03 	orr.w	ip, ip, r3
 801a2f2:	9b03      	ldr	r3, [sp, #12]
 801a2f4:	ea4c 0c04 	orr.w	ip, ip, r4
 801a2f8:	f8a3 c000 	strh.w	ip, [r3]
 801a2fc:	b007      	add	sp, #28
 801a2fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a302:	af05      	add	r7, sp, #20
 801a304:	e756      	b.n	801a1b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a306:	ad05      	add	r5, sp, #20
 801a308:	462f      	mov	r7, r5
 801a30a:	e761      	b.n	801a1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a30c:	ad05      	add	r5, sp, #20
 801a30e:	e75f      	b.n	801a1d0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a310:	ae05      	add	r6, sp, #20
 801a312:	e772      	b.n	801a1fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a314:	ab05      	add	r3, sp, #20
 801a316:	461e      	mov	r6, r3
 801a318:	e77e      	b.n	801a218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a31a:	ab05      	add	r3, sp, #20
 801a31c:	e77c      	b.n	801a218 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a31e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a31e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a322:	b095      	sub	sp, #84	@ 0x54
 801a324:	9212      	str	r2, [sp, #72]	@ 0x48
 801a326:	9309      	str	r3, [sp, #36]	@ 0x24
 801a328:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801a32a:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801a32e:	9013      	str	r0, [sp, #76]	@ 0x4c
 801a330:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a332:	6850      	ldr	r0, [r2, #4]
 801a334:	910e      	str	r1, [sp, #56]	@ 0x38
 801a336:	6812      	ldr	r2, [r2, #0]
 801a338:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801a33c:	fb00 1303 	mla	r3, r0, r3, r1
 801a340:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a344:	930a      	str	r3, [sp, #40]	@ 0x28
 801a346:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a348:	681b      	ldr	r3, [r3, #0]
 801a34a:	930d      	str	r3, [sp, #52]	@ 0x34
 801a34c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a34e:	685c      	ldr	r4, [r3, #4]
 801a350:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801a352:	3404      	adds	r4, #4
 801a354:	43db      	mvns	r3, r3
 801a356:	b2db      	uxtb	r3, r3
 801a358:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a35a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a35c:	2b00      	cmp	r3, #0
 801a35e:	dc03      	bgt.n	801a368 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a360:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801a362:	2b00      	cmp	r3, #0
 801a364:	f340 8255 	ble.w	801a812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a368:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801a36a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a36e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a372:	1e48      	subs	r0, r1, #1
 801a374:	1e55      	subs	r5, r2, #1
 801a376:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a378:	2b00      	cmp	r3, #0
 801a37a:	f340 80f9 	ble.w	801a570 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a37e:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801a380:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a382:	1436      	asrs	r6, r6, #16
 801a384:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a388:	d406      	bmi.n	801a398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a38a:	4286      	cmp	r6, r0
 801a38c:	da04      	bge.n	801a398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a38e:	2b00      	cmp	r3, #0
 801a390:	db02      	blt.n	801a398 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a392:	42ab      	cmp	r3, r5
 801a394:	f2c0 80ed 	blt.w	801a572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a398:	3601      	adds	r6, #1
 801a39a:	f100 80da 	bmi.w	801a552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a39e:	42b1      	cmp	r1, r6
 801a3a0:	f2c0 80d7 	blt.w	801a552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a3a4:	3301      	adds	r3, #1
 801a3a6:	f100 80d4 	bmi.w	801a552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a3aa:	429a      	cmp	r2, r3
 801a3ac:	f2c0 80d1 	blt.w	801a552 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a3b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a3b2:	9311      	str	r3, [sp, #68]	@ 0x44
 801a3b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a3b6:	930c      	str	r3, [sp, #48]	@ 0x30
 801a3b8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a3ba:	2b00      	cmp	r3, #0
 801a3bc:	f340 80fa 	ble.w	801a5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a3c0:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801a3c2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a3c4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a3c6:	68c6      	ldr	r6, [r0, #12]
 801a3c8:	141d      	asrs	r5, r3, #16
 801a3ca:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801a3cc:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a3d0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a3d2:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a3d4:	1400      	asrs	r0, r0, #16
 801a3d6:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a3da:	6892      	ldr	r2, [r2, #8]
 801a3dc:	f100 813e 	bmi.w	801a65c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a3e0:	1e57      	subs	r7, r2, #1
 801a3e2:	42b8      	cmp	r0, r7
 801a3e4:	f280 813a 	bge.w	801a65c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a3e8:	2d00      	cmp	r5, #0
 801a3ea:	f2c0 8137 	blt.w	801a65c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a3ee:	1e77      	subs	r7, r6, #1
 801a3f0:	42bd      	cmp	r5, r7
 801a3f2:	f280 8133 	bge.w	801a65c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a3f6:	b212      	sxth	r2, r2
 801a3f8:	fb05 0002 	mla	r0, r5, r2, r0
 801a3fc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a3fe:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a402:	182e      	adds	r6, r5, r0
 801a404:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a408:	eb04 050a 	add.w	r5, r4, sl
 801a40c:	2b00      	cmp	r3, #0
 801a40e:	f000 8117 	beq.w	801a640 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a412:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a416:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a41a:	44a4      	add	ip, r4
 801a41c:	2900      	cmp	r1, #0
 801a41e:	f000 8117 	beq.w	801a650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a422:	18b0      	adds	r0, r6, r2
 801a424:	5cb2      	ldrb	r2, [r6, r2]
 801a426:	7840      	ldrb	r0, [r0, #1]
 801a428:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a42c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a430:	4422      	add	r2, r4
 801a432:	4420      	add	r0, r4
 801a434:	b29b      	uxth	r3, r3
 801a436:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a43a:	b289      	uxth	r1, r1
 801a43c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a440:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a442:	fb03 f901 	mul.w	r9, r3, r1
 801a446:	011b      	lsls	r3, r3, #4
 801a448:	f8b6 e000 	ldrh.w	lr, [r6]
 801a44c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a450:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801a454:	eba3 0309 	sub.w	r3, r3, r9
 801a458:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801a45c:	b289      	uxth	r1, r1
 801a45e:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a462:	b29b      	uxth	r3, r3
 801a464:	eba8 0801 	sub.w	r8, r8, r1
 801a468:	435f      	muls	r7, r3
 801a46a:	fa1f f888 	uxth.w	r8, r8
 801a46e:	9310      	str	r3, [sp, #64]	@ 0x40
 801a470:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a472:	fb08 770b 	mla	r7, r8, fp, r7
 801a476:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a47a:	fb01 770b 	mla	r7, r1, fp, r7
 801a47e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a482:	fb09 770b 	mla	r7, r9, fp, r7
 801a486:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a48a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a48e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a492:	fb1b fb03 	smulbb	fp, fp, r3
 801a496:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a498:	fb07 b706 	mla	r7, r7, r6, fp
 801a49c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a4a0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a4a4:	f89c c000 	ldrb.w	ip, [ip]
 801a4a8:	b2bf      	uxth	r7, r7
 801a4aa:	435d      	muls	r5, r3
 801a4ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a4ae:	fb08 550b 	mla	r5, r8, fp, r5
 801a4b2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a4b6:	fb01 550b 	mla	r5, r1, fp, r5
 801a4ba:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a4be:	fb09 550b 	mla	r5, r9, fp, r5
 801a4c2:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a4c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a4ca:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a4ce:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a4d2:	fa5f fe8e 	uxtb.w	lr, lr
 801a4d6:	fb1b fb03 	smulbb	fp, fp, r3
 801a4da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a4dc:	fb03 f30c 	mul.w	r3, r3, ip
 801a4e0:	f892 c000 	ldrb.w	ip, [r2]
 801a4e4:	fb05 b506 	mla	r5, r5, r6, fp
 801a4e8:	fb08 330a 	mla	r3, r8, sl, r3
 801a4ec:	b2ad      	uxth	r5, r5
 801a4ee:	fb01 330c 	mla	r3, r1, ip, r3
 801a4f2:	f890 c000 	ldrb.w	ip, [r0]
 801a4f6:	f105 0b01 	add.w	fp, r5, #1
 801a4fa:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a4fe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a500:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a504:	fb1e fe03 	smulbb	lr, lr, r3
 801a508:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a50c:	1c7b      	adds	r3, r7, #1
 801a50e:	096d      	lsrs	r5, r5, #5
 801a510:	fb0c e606 	mla	r6, ip, r6, lr
 801a514:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a518:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a51c:	b2b6      	uxth	r6, r6
 801a51e:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801a522:	1c77      	adds	r7, r6, #1
 801a524:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a528:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a52c:	431f      	orrs	r7, r3
 801a52e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a530:	433d      	orrs	r5, r7
 801a532:	801d      	strh	r5, [r3, #0]
 801a534:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a536:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a538:	3302      	adds	r3, #2
 801a53a:	930c      	str	r3, [sp, #48]	@ 0x30
 801a53c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a53e:	4413      	add	r3, r2
 801a540:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a542:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a544:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a546:	4413      	add	r3, r2
 801a548:	9320      	str	r3, [sp, #128]	@ 0x80
 801a54a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a54c:	3b01      	subs	r3, #1
 801a54e:	9311      	str	r3, [sp, #68]	@ 0x44
 801a550:	e732      	b.n	801a3b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a552:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a554:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801a556:	4433      	add	r3, r6
 801a558:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801a55a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a55c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a55e:	4433      	add	r3, r6
 801a560:	9320      	str	r3, [sp, #128]	@ 0x80
 801a562:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a564:	3b01      	subs	r3, #1
 801a566:	9309      	str	r3, [sp, #36]	@ 0x24
 801a568:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a56a:	3302      	adds	r3, #2
 801a56c:	930a      	str	r3, [sp, #40]	@ 0x28
 801a56e:	e702      	b.n	801a376 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a570:	d027      	beq.n	801a5c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a572:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a574:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801a576:	3b01      	subs	r3, #1
 801a578:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a57a:	fb00 5003 	mla	r0, r0, r3, r5
 801a57e:	1400      	asrs	r0, r0, #16
 801a580:	f53f af16 	bmi.w	801a3b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a584:	3901      	subs	r1, #1
 801a586:	4288      	cmp	r0, r1
 801a588:	f6bf af12 	bge.w	801a3b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a58c:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801a58e:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a590:	fb01 0303 	mla	r3, r1, r3, r0
 801a594:	141b      	asrs	r3, r3, #16
 801a596:	f53f af0b 	bmi.w	801a3b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a59a:	3a01      	subs	r2, #1
 801a59c:	4293      	cmp	r3, r2
 801a59e:	f6bf af07 	bge.w	801a3b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a5a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5a4:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801a5a8:	9311      	str	r3, [sp, #68]	@ 0x44
 801a5aa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a5ac:	930c      	str	r3, [sp, #48]	@ 0x30
 801a5ae:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a5b0:	2b00      	cmp	r3, #0
 801a5b2:	dc70      	bgt.n	801a696 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a5b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a5b6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801a5b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5bc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a5c0:	930a      	str	r3, [sp, #40]	@ 0x28
 801a5c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a5c4:	2b00      	cmp	r3, #0
 801a5c6:	f340 8124 	ble.w	801a812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a5ca:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a5ce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a5d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5d8:	eef0 6a62 	vmov.f32	s13, s5
 801a5dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a5e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5e8:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801a5ec:	eef0 6a43 	vmov.f32	s13, s6
 801a5f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a5f4:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801a5f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a600:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a604:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a608:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a60c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a610:	ee12 2a90 	vmov	r2, s5
 801a614:	eef0 2a47 	vmov.f32	s5, s14
 801a618:	fb92 f3f3 	sdiv	r3, r2, r3
 801a61c:	ee13 2a10 	vmov	r2, s6
 801a620:	9321      	str	r3, [sp, #132]	@ 0x84
 801a622:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a624:	eeb0 3a67 	vmov.f32	s6, s15
 801a628:	fb92 f3f3 	sdiv	r3, r2, r3
 801a62c:	9322      	str	r3, [sp, #136]	@ 0x88
 801a62e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a630:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a632:	3b01      	subs	r3, #1
 801a634:	930e      	str	r3, [sp, #56]	@ 0x38
 801a636:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801a638:	bf08      	it	eq
 801a63a:	4613      	moveq	r3, r2
 801a63c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a63e:	e68c      	b.n	801a35a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a640:	b149      	cbz	r1, 801a656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a642:	5cb2      	ldrb	r2, [r6, r2]
 801a644:	4628      	mov	r0, r5
 801a646:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a64a:	4422      	add	r2, r4
 801a64c:	46ac      	mov	ip, r5
 801a64e:	e6f1      	b.n	801a434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a650:	4628      	mov	r0, r5
 801a652:	462a      	mov	r2, r5
 801a654:	e6ee      	b.n	801a434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a656:	4628      	mov	r0, r5
 801a658:	462a      	mov	r2, r5
 801a65a:	e7f7      	b.n	801a64c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a65c:	1c47      	adds	r7, r0, #1
 801a65e:	f53f af69 	bmi.w	801a534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a662:	42ba      	cmp	r2, r7
 801a664:	f6ff af66 	blt.w	801a534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a668:	1c6f      	adds	r7, r5, #1
 801a66a:	f53f af63 	bmi.w	801a534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a66e:	42be      	cmp	r6, r7
 801a670:	f6ff af60 	blt.w	801a534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a674:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801a676:	b236      	sxth	r6, r6
 801a678:	b212      	sxth	r2, r2
 801a67a:	9002      	str	r0, [sp, #8]
 801a67c:	9601      	str	r6, [sp, #4]
 801a67e:	9200      	str	r2, [sp, #0]
 801a680:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a682:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a686:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a68a:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801a68e:	4623      	mov	r3, r4
 801a690:	f7ff fd59 	bl	801a146 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a694:	e74e      	b.n	801a534 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a696:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801a698:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801a69a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a69e:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801a6a0:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801a6a2:	1400      	asrs	r0, r0, #16
 801a6a4:	142d      	asrs	r5, r5, #16
 801a6a6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a6a8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a6ac:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a6b0:	fb02 5000 	mla	r0, r2, r0, r5
 801a6b4:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801a6b6:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a6ba:	182e      	adds	r6, r5, r0
 801a6bc:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a6c0:	eb04 0509 	add.w	r5, r4, r9
 801a6c4:	2b00      	cmp	r3, #0
 801a6c6:	f000 8096 	beq.w	801a7f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a6ca:	7877      	ldrb	r7, [r6, #1]
 801a6cc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a6d0:	4427      	add	r7, r4
 801a6d2:	2900      	cmp	r1, #0
 801a6d4:	f000 8097 	beq.w	801a806 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a6d8:	18b0      	adds	r0, r6, r2
 801a6da:	5cb2      	ldrb	r2, [r6, r2]
 801a6dc:	7840      	ldrb	r0, [r0, #1]
 801a6de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a6e2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a6e6:	4422      	add	r2, r4
 801a6e8:	4420      	add	r0, r4
 801a6ea:	b29b      	uxth	r3, r3
 801a6ec:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801a6ee:	b289      	uxth	r1, r1
 801a6f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a6f4:	f8b6 c000 	ldrh.w	ip, [r6]
 801a6f8:	fb03 f801 	mul.w	r8, r3, r1
 801a6fc:	011b      	lsls	r3, r3, #4
 801a6fe:	78be      	ldrb	r6, [r7, #2]
 801a700:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a704:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801a708:	eba3 0308 	sub.w	r3, r3, r8
 801a70c:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a710:	b289      	uxth	r1, r1
 801a712:	b29b      	uxth	r3, r3
 801a714:	ebae 0e01 	sub.w	lr, lr, r1
 801a718:	435e      	muls	r6, r3
 801a71a:	fa1f fe8e 	uxth.w	lr, lr
 801a71e:	9310      	str	r3, [sp, #64]	@ 0x40
 801a720:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a722:	fb0e 660b 	mla	r6, lr, fp, r6
 801a726:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a72a:	fb01 660b 	mla	r6, r1, fp, r6
 801a72e:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a732:	fb08 660b 	mla	r6, r8, fp, r6
 801a736:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a73a:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801a73e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a742:	fb1b fb03 	smulbb	fp, fp, r3
 801a746:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a748:	fb06 b60a 	mla	r6, r6, sl, fp
 801a74c:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a750:	787d      	ldrb	r5, [r7, #1]
 801a752:	783f      	ldrb	r7, [r7, #0]
 801a754:	b2b6      	uxth	r6, r6
 801a756:	435d      	muls	r5, r3
 801a758:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a75a:	fb0e 550b 	mla	r5, lr, fp, r5
 801a75e:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a762:	fb01 550b 	mla	r5, r1, fp, r5
 801a766:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a76a:	fb08 550b 	mla	r5, r8, fp, r5
 801a76e:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a772:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a776:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a77a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a77e:	fa5f fc8c 	uxtb.w	ip, ip
 801a782:	fb1b fb03 	smulbb	fp, fp, r3
 801a786:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a788:	437b      	muls	r3, r7
 801a78a:	7817      	ldrb	r7, [r2, #0]
 801a78c:	fb05 b50a 	mla	r5, r5, sl, fp
 801a790:	fb0e 3309 	mla	r3, lr, r9, r3
 801a794:	b2ad      	uxth	r5, r5
 801a796:	fb01 3307 	mla	r3, r1, r7, r3
 801a79a:	7807      	ldrb	r7, [r0, #0]
 801a79c:	f105 0b01 	add.w	fp, r5, #1
 801a7a0:	fb08 3707 	mla	r7, r8, r7, r3
 801a7a4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a7a6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a7aa:	fb1c fc03 	smulbb	ip, ip, r3
 801a7ae:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a7b2:	1c73      	adds	r3, r6, #1
 801a7b4:	096d      	lsrs	r5, r5, #5
 801a7b6:	fb07 c70a 	mla	r7, r7, sl, ip
 801a7ba:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a7be:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a7c2:	b2bf      	uxth	r7, r7
 801a7c4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a7c6:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a7ca:	1c7a      	adds	r2, r7, #1
 801a7cc:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a7d0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a7d4:	4316      	orrs	r6, r2
 801a7d6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801a7d8:	432e      	orrs	r6, r5
 801a7da:	f823 6b02 	strh.w	r6, [r3], #2
 801a7de:	930c      	str	r3, [sp, #48]	@ 0x30
 801a7e0:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801a7e2:	4413      	add	r3, r2
 801a7e4:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801a7e6:	931f      	str	r3, [sp, #124]	@ 0x7c
 801a7e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a7ea:	4413      	add	r3, r2
 801a7ec:	9320      	str	r3, [sp, #128]	@ 0x80
 801a7ee:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801a7f0:	3b01      	subs	r3, #1
 801a7f2:	9311      	str	r3, [sp, #68]	@ 0x44
 801a7f4:	e6db      	b.n	801a5ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a7f6:	b149      	cbz	r1, 801a80c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a7f8:	5cb2      	ldrb	r2, [r6, r2]
 801a7fa:	4628      	mov	r0, r5
 801a7fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a800:	4422      	add	r2, r4
 801a802:	462f      	mov	r7, r5
 801a804:	e771      	b.n	801a6ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a806:	4628      	mov	r0, r5
 801a808:	462a      	mov	r2, r5
 801a80a:	e76e      	b.n	801a6ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a80c:	4628      	mov	r0, r5
 801a80e:	462a      	mov	r2, r5
 801a810:	e7f7      	b.n	801a802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a812:	b015      	add	sp, #84	@ 0x54
 801a814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a818:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a81c:	880f      	ldrh	r7, [r1, #0]
 801a81e:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801a822:	023c      	lsls	r4, r7, #8
 801a824:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801a828:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801a82c:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801a830:	017c      	lsls	r4, r7, #5
 801a832:	00ff      	lsls	r7, r7, #3
 801a834:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801a838:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801a83c:	b2ff      	uxtb	r7, r7
 801a83e:	ea4b 0404 	orr.w	r4, fp, r4
 801a842:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801a846:	4327      	orrs	r7, r4
 801a848:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a84c:	2d00      	cmp	r5, #0
 801a84e:	9701      	str	r7, [sp, #4]
 801a850:	eb02 080a 	add.w	r8, r2, sl
 801a854:	db7e      	blt.n	801a954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a856:	45a9      	cmp	r9, r5
 801a858:	dd7c      	ble.n	801a954 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a85a:	f1bc 0f00 	cmp.w	ip, #0
 801a85e:	db77      	blt.n	801a950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a860:	45e6      	cmp	lr, ip
 801a862:	dd75      	ble.n	801a950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a864:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a868:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a86c:	441f      	add	r7, r3
 801a86e:	f11c 0201 	adds.w	r2, ip, #1
 801a872:	d472      	bmi.n	801a95a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a874:	4596      	cmp	lr, r2
 801a876:	dd70      	ble.n	801a95a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a878:	2800      	cmp	r0, #0
 801a87a:	d06e      	beq.n	801a95a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a87c:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a880:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a884:	441c      	add	r4, r3
 801a886:	3501      	adds	r5, #1
 801a888:	d46b      	bmi.n	801a962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a88a:	45a9      	cmp	r9, r5
 801a88c:	dd69      	ble.n	801a962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a88e:	2e00      	cmp	r6, #0
 801a890:	d067      	beq.n	801a962 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a892:	f1bc 0f00 	cmp.w	ip, #0
 801a896:	db62      	blt.n	801a95e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a898:	45e6      	cmp	lr, ip
 801a89a:	dd60      	ble.n	801a95e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a89c:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a8a0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a8a4:	441d      	add	r5, r3
 801a8a6:	f11c 0201 	adds.w	r2, ip, #1
 801a8aa:	d45d      	bmi.n	801a968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a8ac:	4596      	cmp	lr, r2
 801a8ae:	dd5b      	ble.n	801a968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a8b0:	2800      	cmp	r0, #0
 801a8b2:	d059      	beq.n	801a968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a8b4:	44c6      	add	lr, r8
 801a8b6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a8ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8be:	4413      	add	r3, r2
 801a8c0:	b280      	uxth	r0, r0
 801a8c2:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a8c6:	b2b2      	uxth	r2, r6
 801a8c8:	f897 9000 	ldrb.w	r9, [r7]
 801a8cc:	787f      	ldrb	r7, [r7, #1]
 801a8ce:	fb00 f602 	mul.w	r6, r0, r2
 801a8d2:	0100      	lsls	r0, r0, #4
 801a8d4:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a8d8:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801a8dc:	1b80      	subs	r0, r0, r6
 801a8de:	fa1f fc82 	uxth.w	ip, r2
 801a8e2:	b282      	uxth	r2, r0
 801a8e4:	78a0      	ldrb	r0, [r4, #2]
 801a8e6:	eba8 080c 	sub.w	r8, r8, ip
 801a8ea:	4350      	muls	r0, r2
 801a8ec:	fa1f f888 	uxth.w	r8, r8
 801a8f0:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a8f4:	78a8      	ldrb	r0, [r5, #2]
 801a8f6:	fb0c e000 	mla	r0, ip, r0, lr
 801a8fa:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a8fe:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a902:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801a906:	f894 e000 	ldrb.w	lr, [r4]
 801a90a:	fb02 fe0e 	mul.w	lr, r2, lr
 801a90e:	fb08 e909 	mla	r9, r8, r9, lr
 801a912:	f895 e000 	ldrb.w	lr, [r5]
 801a916:	fb0c 990e 	mla	r9, ip, lr, r9
 801a91a:	f893 e000 	ldrb.w	lr, [r3]
 801a91e:	785b      	ldrb	r3, [r3, #1]
 801a920:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a924:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a928:	ea4e 0e00 	orr.w	lr, lr, r0
 801a92c:	7860      	ldrb	r0, [r4, #1]
 801a92e:	4350      	muls	r0, r2
 801a930:	786a      	ldrb	r2, [r5, #1]
 801a932:	fb08 0007 	mla	r0, r8, r7, r0
 801a936:	fb0c 0202 	mla	r2, ip, r2, r0
 801a93a:	fb06 2303 	mla	r3, r6, r3, r2
 801a93e:	095b      	lsrs	r3, r3, #5
 801a940:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801a944:	ea4e 0303 	orr.w	r3, lr, r3
 801a948:	800b      	strh	r3, [r1, #0]
 801a94a:	b003      	add	sp, #12
 801a94c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a950:	af01      	add	r7, sp, #4
 801a952:	e78c      	b.n	801a86e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a954:	ac01      	add	r4, sp, #4
 801a956:	4627      	mov	r7, r4
 801a958:	e795      	b.n	801a886 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a95a:	ac01      	add	r4, sp, #4
 801a95c:	e793      	b.n	801a886 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a95e:	ad01      	add	r5, sp, #4
 801a960:	e7a1      	b.n	801a8a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a962:	ab01      	add	r3, sp, #4
 801a964:	461d      	mov	r5, r3
 801a966:	e7ab      	b.n	801a8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a968:	ab01      	add	r3, sp, #4
 801a96a:	e7a9      	b.n	801a8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a96c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a970:	b08f      	sub	sp, #60	@ 0x3c
 801a972:	920c      	str	r2, [sp, #48]	@ 0x30
 801a974:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801a976:	900d      	str	r0, [sp, #52]	@ 0x34
 801a978:	910a      	str	r1, [sp, #40]	@ 0x28
 801a97a:	6850      	ldr	r0, [r2, #4]
 801a97c:	9306      	str	r3, [sp, #24]
 801a97e:	6812      	ldr	r2, [r2, #0]
 801a980:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801a984:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801a988:	fb00 1303 	mla	r3, r0, r3, r1
 801a98c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a990:	9307      	str	r3, [sp, #28]
 801a992:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a994:	681b      	ldr	r3, [r3, #0]
 801a996:	9308      	str	r3, [sp, #32]
 801a998:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a99a:	685c      	ldr	r4, [r3, #4]
 801a99c:	3404      	adds	r4, #4
 801a99e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a9a0:	2b00      	cmp	r3, #0
 801a9a2:	dc03      	bgt.n	801a9ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a9a4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801a9a6:	2b00      	cmp	r3, #0
 801a9a8:	f340 81d5 	ble.w	801ad56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801a9ac:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801a9ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a9b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a9b6:	1e48      	subs	r0, r1, #1
 801a9b8:	1e56      	subs	r6, r2, #1
 801a9ba:	9b06      	ldr	r3, [sp, #24]
 801a9bc:	2b00      	cmp	r3, #0
 801a9be:	f340 80b6 	ble.w	801ab2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801a9c2:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a9c6:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a9ca:	d406      	bmi.n	801a9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a9cc:	4287      	cmp	r7, r0
 801a9ce:	da04      	bge.n	801a9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a9d0:	2b00      	cmp	r3, #0
 801a9d2:	db02      	blt.n	801a9da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a9d4:	42b3      	cmp	r3, r6
 801a9d6:	f2c0 80ab 	blt.w	801ab30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a9da:	3701      	adds	r7, #1
 801a9dc:	f100 809c 	bmi.w	801ab18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a9e0:	42b9      	cmp	r1, r7
 801a9e2:	f2c0 8099 	blt.w	801ab18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a9e6:	3301      	adds	r3, #1
 801a9e8:	f100 8096 	bmi.w	801ab18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a9ec:	429a      	cmp	r2, r3
 801a9ee:	f2c0 8093 	blt.w	801ab18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a9f2:	9b06      	ldr	r3, [sp, #24]
 801a9f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 801a9f6:	9b07      	ldr	r3, [sp, #28]
 801a9f8:	9309      	str	r3, [sp, #36]	@ 0x24
 801a9fa:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801a9fc:	2b00      	cmp	r3, #0
 801a9fe:	f340 80b4 	ble.w	801ab6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801aa02:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801aa04:	142e      	asrs	r6, r5, #16
 801aa06:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801aa08:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801aa0c:	68c7      	ldr	r7, [r0, #12]
 801aa0e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801aa12:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801aa16:	6892      	ldr	r2, [r2, #8]
 801aa18:	f100 80fb 	bmi.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801aa1c:	f102 3cff 	add.w	ip, r2, #4294967295
 801aa20:	4560      	cmp	r0, ip
 801aa22:	f280 80f6 	bge.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801aa26:	2e00      	cmp	r6, #0
 801aa28:	f2c0 80f3 	blt.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801aa2c:	f107 3cff 	add.w	ip, r7, #4294967295
 801aa30:	4566      	cmp	r6, ip
 801aa32:	f280 80ee 	bge.w	801ac12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801aa36:	b212      	sxth	r2, r2
 801aa38:	fb06 0002 	mla	r0, r6, r2, r0
 801aa3c:	9e08      	ldr	r6, [sp, #32]
 801aa3e:	1837      	adds	r7, r6, r0
 801aa40:	5c30      	ldrb	r0, [r6, r0]
 801aa42:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801aa46:	eb04 0c08 	add.w	ip, r4, r8
 801aa4a:	2b00      	cmp	r3, #0
 801aa4c:	f000 80d3 	beq.w	801abf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801aa50:	787e      	ldrb	r6, [r7, #1]
 801aa52:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801aa56:	4426      	add	r6, r4
 801aa58:	2900      	cmp	r1, #0
 801aa5a:	f000 80d4 	beq.w	801ac06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801aa5e:	18b8      	adds	r0, r7, r2
 801aa60:	5cba      	ldrb	r2, [r7, r2]
 801aa62:	7840      	ldrb	r0, [r0, #1]
 801aa64:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa68:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa6c:	4422      	add	r2, r4
 801aa6e:	4420      	add	r0, r4
 801aa70:	b29b      	uxth	r3, r3
 801aa72:	78b7      	ldrb	r7, [r6, #2]
 801aa74:	b289      	uxth	r1, r1
 801aa76:	f89c a002 	ldrb.w	sl, [ip, #2]
 801aa7a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801aa7e:	fb03 f901 	mul.w	r9, r3, r1
 801aa82:	011b      	lsls	r3, r3, #4
 801aa84:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aa88:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801aa8c:	eba3 0309 	sub.w	r3, r3, r9
 801aa90:	b289      	uxth	r1, r1
 801aa92:	b29b      	uxth	r3, r3
 801aa94:	ebae 0e01 	sub.w	lr, lr, r1
 801aa98:	435f      	muls	r7, r3
 801aa9a:	fa1f fe8e 	uxth.w	lr, lr
 801aa9e:	fb0e 770a 	mla	r7, lr, sl, r7
 801aaa2:	f892 a002 	ldrb.w	sl, [r2, #2]
 801aaa6:	fb01 770a 	mla	r7, r1, sl, r7
 801aaaa:	f890 a002 	ldrb.w	sl, [r0, #2]
 801aaae:	fb09 7a0a 	mla	sl, r9, sl, r7
 801aab2:	f814 7008 	ldrb.w	r7, [r4, r8]
 801aab6:	f896 8000 	ldrb.w	r8, [r6]
 801aaba:	7876      	ldrb	r6, [r6, #1]
 801aabc:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801aac0:	fb03 f808 	mul.w	r8, r3, r8
 801aac4:	4373      	muls	r3, r6
 801aac6:	fb0e 8807 	mla	r8, lr, r7, r8
 801aaca:	7817      	ldrb	r7, [r2, #0]
 801aacc:	fb0e 330c 	mla	r3, lr, ip, r3
 801aad0:	fb01 8807 	mla	r8, r1, r7, r8
 801aad4:	7807      	ldrb	r7, [r0, #0]
 801aad6:	fb09 8707 	mla	r7, r9, r7, r8
 801aada:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801aade:	ea47 070a 	orr.w	r7, r7, sl
 801aae2:	f892 a001 	ldrb.w	sl, [r2, #1]
 801aae6:	fb01 310a 	mla	r1, r1, sl, r3
 801aaea:	f890 a001 	ldrb.w	sl, [r0, #1]
 801aaee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801aaf0:	fb09 1a0a 	mla	sl, r9, sl, r1
 801aaf4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aaf8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801aafc:	ea47 070a 	orr.w	r7, r7, sl
 801ab00:	801f      	strh	r7, [r3, #0]
 801ab02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ab04:	3302      	adds	r3, #2
 801ab06:	9309      	str	r3, [sp, #36]	@ 0x24
 801ab08:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ab0a:	449b      	add	fp, r3
 801ab0c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ab0e:	441d      	add	r5, r3
 801ab10:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ab12:	3b01      	subs	r3, #1
 801ab14:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ab16:	e770      	b.n	801a9fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ab18:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ab1a:	449b      	add	fp, r3
 801ab1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ab1e:	441d      	add	r5, r3
 801ab20:	9b06      	ldr	r3, [sp, #24]
 801ab22:	3b01      	subs	r3, #1
 801ab24:	9306      	str	r3, [sp, #24]
 801ab26:	9b07      	ldr	r3, [sp, #28]
 801ab28:	3302      	adds	r3, #2
 801ab2a:	9307      	str	r3, [sp, #28]
 801ab2c:	e745      	b.n	801a9ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801ab2e:	d023      	beq.n	801ab78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801ab30:	9b06      	ldr	r3, [sp, #24]
 801ab32:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801ab34:	3b01      	subs	r3, #1
 801ab36:	fb00 b003 	mla	r0, r0, r3, fp
 801ab3a:	1400      	asrs	r0, r0, #16
 801ab3c:	f53f af59 	bmi.w	801a9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ab40:	3901      	subs	r1, #1
 801ab42:	4288      	cmp	r0, r1
 801ab44:	f6bf af55 	bge.w	801a9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ab48:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801ab4a:	fb01 5303 	mla	r3, r1, r3, r5
 801ab4e:	141b      	asrs	r3, r3, #16
 801ab50:	f53f af4f 	bmi.w	801a9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ab54:	3a01      	subs	r2, #1
 801ab56:	4293      	cmp	r3, r2
 801ab58:	f6bf af4b 	bge.w	801a9f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ab5c:	9b06      	ldr	r3, [sp, #24]
 801ab5e:	9309      	str	r3, [sp, #36]	@ 0x24
 801ab60:	9b07      	ldr	r3, [sp, #28]
 801ab62:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ab64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ab66:	2b00      	cmp	r3, #0
 801ab68:	dc70      	bgt.n	801ac4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801ab6a:	9b06      	ldr	r3, [sp, #24]
 801ab6c:	9a07      	ldr	r2, [sp, #28]
 801ab6e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ab72:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ab76:	9307      	str	r3, [sp, #28]
 801ab78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ab7a:	2b00      	cmp	r3, #0
 801ab7c:	f340 80eb 	ble.w	801ad56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801ab80:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ab84:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ab86:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ab8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ab8e:	eef0 6a62 	vmov.f32	s13, s5
 801ab92:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ab96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ab9e:	ee16 ba90 	vmov	fp, s13
 801aba2:	eef0 6a43 	vmov.f32	s13, s6
 801aba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801abaa:	ee16 5a90 	vmov	r5, s13
 801abae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801abb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801abb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801abba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801abbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801abc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801abc6:	ee12 2a90 	vmov	r2, s5
 801abca:	eef0 2a47 	vmov.f32	s5, s14
 801abce:	fb92 f3f3 	sdiv	r3, r2, r3
 801abd2:	ee13 2a10 	vmov	r2, s6
 801abd6:	931b      	str	r3, [sp, #108]	@ 0x6c
 801abd8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801abda:	eeb0 3a67 	vmov.f32	s6, s15
 801abde:	fb92 f3f3 	sdiv	r3, r2, r3
 801abe2:	931c      	str	r3, [sp, #112]	@ 0x70
 801abe4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801abe6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801abe8:	3b01      	subs	r3, #1
 801abea:	930a      	str	r3, [sp, #40]	@ 0x28
 801abec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801abee:	bf08      	it	eq
 801abf0:	4613      	moveq	r3, r2
 801abf2:	9306      	str	r3, [sp, #24]
 801abf4:	e6d3      	b.n	801a99e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801abf6:	b149      	cbz	r1, 801ac0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801abf8:	5cba      	ldrb	r2, [r7, r2]
 801abfa:	4660      	mov	r0, ip
 801abfc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac00:	4422      	add	r2, r4
 801ac02:	4666      	mov	r6, ip
 801ac04:	e734      	b.n	801aa70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801ac06:	4660      	mov	r0, ip
 801ac08:	4662      	mov	r2, ip
 801ac0a:	e731      	b.n	801aa70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801ac0c:	4660      	mov	r0, ip
 801ac0e:	4662      	mov	r2, ip
 801ac10:	e7f7      	b.n	801ac02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ac12:	f110 0c01 	adds.w	ip, r0, #1
 801ac16:	f53f af74 	bmi.w	801ab02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801ac1a:	4562      	cmp	r2, ip
 801ac1c:	f6ff af71 	blt.w	801ab02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801ac20:	f116 0c01 	adds.w	ip, r6, #1
 801ac24:	f53f af6d 	bmi.w	801ab02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801ac28:	4567      	cmp	r7, ip
 801ac2a:	f6ff af6a 	blt.w	801ab02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801ac2e:	b23f      	sxth	r7, r7
 801ac30:	b212      	sxth	r2, r2
 801ac32:	9701      	str	r7, [sp, #4]
 801ac34:	9200      	str	r2, [sp, #0]
 801ac36:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ac3a:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ac3e:	4623      	mov	r3, r4
 801ac40:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801ac42:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ac46:	f7ff fde7 	bl	801a818 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ac4a:	e75a      	b.n	801ab02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801ac4c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ac4e:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ac52:	1428      	asrs	r0, r5, #16
 801ac54:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ac58:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ac5c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ac60:	fb02 6000 	mla	r0, r2, r0, r6
 801ac64:	9e08      	ldr	r6, [sp, #32]
 801ac66:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ac6a:	1837      	adds	r7, r6, r0
 801ac6c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ac70:	eb04 0c08 	add.w	ip, r4, r8
 801ac74:	2b00      	cmp	r3, #0
 801ac76:	d060      	beq.n	801ad3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801ac78:	787e      	ldrb	r6, [r7, #1]
 801ac7a:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ac7e:	4426      	add	r6, r4
 801ac80:	2900      	cmp	r1, #0
 801ac82:	d062      	beq.n	801ad4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801ac84:	18b8      	adds	r0, r7, r2
 801ac86:	5cba      	ldrb	r2, [r7, r2]
 801ac88:	7840      	ldrb	r0, [r0, #1]
 801ac8a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ac8e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ac92:	4422      	add	r2, r4
 801ac94:	4420      	add	r0, r4
 801ac96:	b29b      	uxth	r3, r3
 801ac98:	78b7      	ldrb	r7, [r6, #2]
 801ac9a:	b289      	uxth	r1, r1
 801ac9c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801aca0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801aca4:	fb03 f901 	mul.w	r9, r3, r1
 801aca8:	011b      	lsls	r3, r3, #4
 801acaa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801acae:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801acb2:	eba3 0309 	sub.w	r3, r3, r9
 801acb6:	b289      	uxth	r1, r1
 801acb8:	b29b      	uxth	r3, r3
 801acba:	ebae 0e01 	sub.w	lr, lr, r1
 801acbe:	435f      	muls	r7, r3
 801acc0:	fa1f fe8e 	uxth.w	lr, lr
 801acc4:	fb0e 770a 	mla	r7, lr, sl, r7
 801acc8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801accc:	fb01 770a 	mla	r7, r1, sl, r7
 801acd0:	f890 a002 	ldrb.w	sl, [r0, #2]
 801acd4:	fb09 7a0a 	mla	sl, r9, sl, r7
 801acd8:	f814 7008 	ldrb.w	r7, [r4, r8]
 801acdc:	f896 8000 	ldrb.w	r8, [r6]
 801ace0:	7876      	ldrb	r6, [r6, #1]
 801ace2:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801ace6:	fb03 f808 	mul.w	r8, r3, r8
 801acea:	4373      	muls	r3, r6
 801acec:	7856      	ldrb	r6, [r2, #1]
 801acee:	fb0e 8807 	mla	r8, lr, r7, r8
 801acf2:	7817      	ldrb	r7, [r2, #0]
 801acf4:	fb0e 330c 	mla	r3, lr, ip, r3
 801acf8:	fb01 8807 	mla	r8, r1, r7, r8
 801acfc:	7807      	ldrb	r7, [r0, #0]
 801acfe:	fb01 3306 	mla	r3, r1, r6, r3
 801ad02:	fb09 8707 	mla	r7, r9, r7, r8
 801ad06:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ad0a:	ea47 070a 	orr.w	r7, r7, sl
 801ad0e:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ad12:	fb09 3a0a 	mla	sl, r9, sl, r3
 801ad16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ad18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad1c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801ad20:	ea47 070a 	orr.w	r7, r7, sl
 801ad24:	f823 7b02 	strh.w	r7, [r3], #2
 801ad28:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ad2a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ad2c:	449b      	add	fp, r3
 801ad2e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ad30:	441d      	add	r5, r3
 801ad32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad34:	3b01      	subs	r3, #1
 801ad36:	9309      	str	r3, [sp, #36]	@ 0x24
 801ad38:	e714      	b.n	801ab64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801ad3a:	b149      	cbz	r1, 801ad50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801ad3c:	5cba      	ldrb	r2, [r7, r2]
 801ad3e:	4660      	mov	r0, ip
 801ad40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ad44:	4422      	add	r2, r4
 801ad46:	4666      	mov	r6, ip
 801ad48:	e7a5      	b.n	801ac96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801ad4a:	4660      	mov	r0, ip
 801ad4c:	4662      	mov	r2, ip
 801ad4e:	e7a2      	b.n	801ac96 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801ad50:	4660      	mov	r0, ip
 801ad52:	4662      	mov	r2, ip
 801ad54:	e7f7      	b.n	801ad46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801ad56:	b00f      	add	sp, #60	@ 0x3c
 801ad58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ad5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801ad5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad60:	b085      	sub	sp, #20
 801ad62:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801ad66:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801ad6a:	9102      	str	r1, [sp, #8]
 801ad6c:	2c00      	cmp	r4, #0
 801ad6e:	fb04 710c 	mla	r1, r4, ip, r7
 801ad72:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801ad76:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801ad7a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801ad7e:	eb02 0e01 	add.w	lr, r2, r1
 801ad82:	f2c0 8122 	blt.w	801afca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ad86:	45a0      	cmp	r8, r4
 801ad88:	f340 811f 	ble.w	801afca <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ad8c:	2f00      	cmp	r7, #0
 801ad8e:	f2c0 811a 	blt.w	801afc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ad92:	45bc      	cmp	ip, r7
 801ad94:	f340 8117 	ble.w	801afc6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ad98:	5c52      	ldrb	r2, [r2, r1]
 801ad9a:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ad9e:	1c7a      	adds	r2, r7, #1
 801ada0:	f100 8116 	bmi.w	801afd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ada4:	4594      	cmp	ip, r2
 801ada6:	f340 8113 	ble.w	801afd0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801adaa:	2e00      	cmp	r6, #0
 801adac:	f000 8112 	beq.w	801afd4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801adb0:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801adb4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801adb8:	3401      	adds	r4, #1
 801adba:	f100 810f 	bmi.w	801afdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801adbe:	45a0      	cmp	r8, r4
 801adc0:	f340 810c 	ble.w	801afdc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801adc4:	2800      	cmp	r0, #0
 801adc6:	f000 810c 	beq.w	801afe2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801adca:	2f00      	cmp	r7, #0
 801adcc:	f2c0 8104 	blt.w	801afd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801add0:	45bc      	cmp	ip, r7
 801add2:	f340 8101 	ble.w	801afd8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801add6:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801adda:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801adde:	3701      	adds	r7, #1
 801ade0:	f100 8102 	bmi.w	801afe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ade4:	45bc      	cmp	ip, r7
 801ade6:	f340 80ff 	ble.w	801afe8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801adea:	2e00      	cmp	r6, #0
 801adec:	f000 80fe 	beq.w	801afec <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801adf0:	44f4      	add	ip, lr
 801adf2:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801adf6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801adfa:	b2b6      	uxth	r6, r6
 801adfc:	b280      	uxth	r0, r0
 801adfe:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ae02:	fb00 fe06 	mul.w	lr, r0, r6
 801ae06:	0136      	lsls	r6, r6, #4
 801ae08:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ae0c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ae10:	eba6 070e 	sub.w	r7, r6, lr
 801ae14:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801ae18:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ae1c:	b280      	uxth	r0, r0
 801ae1e:	b2bf      	uxth	r7, r7
 801ae20:	1a1b      	subs	r3, r3, r0
 801ae22:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ae26:	fb0a f607 	mul.w	r6, sl, r7
 801ae2a:	b29b      	uxth	r3, r3
 801ae2c:	fb0b 6603 	mla	r6, fp, r3, r6
 801ae30:	fb00 6609 	mla	r6, r0, r9, r6
 801ae34:	fb0e 6608 	mla	r6, lr, r8, r6
 801ae38:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ae3c:	9600      	str	r6, [sp, #0]
 801ae3e:	2e00      	cmp	r6, #0
 801ae40:	f000 80be 	beq.w	801afc0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ae44:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ae48:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ae4c:	9e02      	ldr	r6, [sp, #8]
 801ae4e:	fb0b fc0c 	mul.w	ip, fp, ip
 801ae52:	fb0b f505 	mul.w	r5, fp, r5
 801ae56:	8836      	ldrh	r6, [r6, #0]
 801ae58:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ae5c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ae60:	9501      	str	r5, [sp, #4]
 801ae62:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ae66:	44dc      	add	ip, fp
 801ae68:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ae6c:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ae70:	9503      	str	r5, [sp, #12]
 801ae72:	9d01      	ldr	r5, [sp, #4]
 801ae74:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ae78:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ae7c:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ae80:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ae84:	fb0a fc0c 	mul.w	ip, sl, ip
 801ae88:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ae8c:	fb0a fa01 	mul.w	sl, sl, r1
 801ae90:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ae94:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ae98:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ae9c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aea0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801aea4:	4465      	add	r5, ip
 801aea6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801aeaa:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801aeae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeb2:	fb09 fc0c 	mul.w	ip, r9, ip
 801aeb6:	0a2d      	lsrs	r5, r5, #8
 801aeb8:	fb09 f904 	mul.w	r9, r9, r4
 801aebc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801aec0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801aec4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801aec8:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801aecc:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801aed0:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aed4:	437d      	muls	r5, r7
 801aed6:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801aeda:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801aede:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801aee2:	4461      	add	r1, ip
 801aee4:	fb08 f404 	mul.w	r4, r8, r4
 801aee8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801aeec:	fb08 f802 	mul.w	r8, r8, r2
 801aef0:	0a09      	lsrs	r1, r1, #8
 801aef2:	0a22      	lsrs	r2, r4, #8
 801aef4:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801aef8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801aefc:	fb07 f70a 	mul.w	r7, r7, sl
 801af00:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801af04:	4414      	add	r4, r2
 801af06:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801af0a:	0a24      	lsrs	r4, r4, #8
 801af0c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801af10:	9a03      	ldr	r2, [sp, #12]
 801af12:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801af16:	fb02 5503 	mla	r5, r2, r3, r5
 801af1a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801af1e:	9a00      	ldr	r2, [sp, #0]
 801af20:	fb04 540e 	mla	r4, r4, lr, r5
 801af24:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801af28:	1235      	asrs	r5, r6, #8
 801af2a:	fb01 4100 	mla	r1, r1, r0, r4
 801af2e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801af32:	0a09      	lsrs	r1, r1, #8
 801af34:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801af38:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801af3c:	fb03 7101 	mla	r1, r3, r1, r7
 801af40:	fb0e 1e08 	mla	lr, lr, r8, r1
 801af44:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801af48:	fb00 e101 	mla	r1, r0, r1, lr
 801af4c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801af50:	b287      	uxth	r7, r0
 801af52:	0a09      	lsrs	r1, r1, #8
 801af54:	437a      	muls	r2, r7
 801af56:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801af5a:	1c53      	adds	r3, r2, #1
 801af5c:	4321      	orrs	r1, r4
 801af5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801af62:	0c0a      	lsrs	r2, r1, #16
 801af64:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801af68:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801af6c:	b2c8      	uxtb	r0, r1
 801af6e:	fb12 f207 	smulbb	r2, r2, r7
 801af72:	fb14 f407 	smulbb	r4, r4, r7
 801af76:	b2db      	uxtb	r3, r3
 801af78:	fb10 f007 	smulbb	r0, r0, r7
 801af7c:	fb05 2503 	mla	r5, r5, r3, r2
 801af80:	10f2      	asrs	r2, r6, #3
 801af82:	00f6      	lsls	r6, r6, #3
 801af84:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801af88:	b2ad      	uxth	r5, r5
 801af8a:	b2f6      	uxtb	r6, r6
 801af8c:	fb02 4203 	mla	r2, r2, r3, r4
 801af90:	fb06 0303 	mla	r3, r6, r3, r0
 801af94:	b294      	uxth	r4, r2
 801af96:	b299      	uxth	r1, r3
 801af98:	1c6b      	adds	r3, r5, #1
 801af9a:	1c62      	adds	r2, r4, #1
 801af9c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801afa0:	1c4b      	adds	r3, r1, #1
 801afa2:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801afa6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801afaa:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801afae:	0952      	lsrs	r2, r2, #5
 801afb0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801afb4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801afb8:	432b      	orrs	r3, r5
 801afba:	4313      	orrs	r3, r2
 801afbc:	9a02      	ldr	r2, [sp, #8]
 801afbe:	8013      	strh	r3, [r2, #0]
 801afc0:	b005      	add	sp, #20
 801afc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801afc6:	2500      	movs	r5, #0
 801afc8:	e6e9      	b.n	801ad9e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801afca:	2100      	movs	r1, #0
 801afcc:	460d      	mov	r5, r1
 801afce:	e6f3      	b.n	801adb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801afd0:	2100      	movs	r1, #0
 801afd2:	e6f1      	b.n	801adb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801afd4:	4631      	mov	r1, r6
 801afd6:	e6ef      	b.n	801adb8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801afd8:	2400      	movs	r4, #0
 801afda:	e700      	b.n	801adde <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801afdc:	2200      	movs	r2, #0
 801afde:	4614      	mov	r4, r2
 801afe0:	e70b      	b.n	801adfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801afe2:	4602      	mov	r2, r0
 801afe4:	4604      	mov	r4, r0
 801afe6:	e708      	b.n	801adfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801afe8:	2200      	movs	r2, #0
 801afea:	e706      	b.n	801adfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801afec:	4632      	mov	r2, r6
 801afee:	e704      	b.n	801adfa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801aff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aff4:	b09f      	sub	sp, #124	@ 0x7c
 801aff6:	921b      	str	r2, [sp, #108]	@ 0x6c
 801aff8:	9309      	str	r3, [sp, #36]	@ 0x24
 801affa:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801affc:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801b000:	901d      	str	r0, [sp, #116]	@ 0x74
 801b002:	931c      	str	r3, [sp, #112]	@ 0x70
 801b004:	6850      	ldr	r0, [r2, #4]
 801b006:	9119      	str	r1, [sp, #100]	@ 0x64
 801b008:	6812      	ldr	r2, [r2, #0]
 801b00a:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801b00c:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801b010:	fb00 1303 	mla	r3, r0, r3, r1
 801b014:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b018:	930c      	str	r3, [sp, #48]	@ 0x30
 801b01a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b01c:	681b      	ldr	r3, [r3, #0]
 801b01e:	9312      	str	r3, [sp, #72]	@ 0x48
 801b020:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b022:	685e      	ldr	r6, [r3, #4]
 801b024:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801b028:	3604      	adds	r6, #4
 801b02a:	930d      	str	r3, [sp, #52]	@ 0x34
 801b02c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b02e:	2b00      	cmp	r3, #0
 801b030:	dc03      	bgt.n	801b03a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b032:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801b034:	2b00      	cmp	r3, #0
 801b036:	f340 8387 	ble.w	801b748 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801b03a:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b03c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b040:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b044:	1e48      	subs	r0, r1, #1
 801b046:	1e57      	subs	r7, r2, #1
 801b048:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b04a:	2b00      	cmp	r3, #0
 801b04c:	f340 8194 	ble.w	801b378 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801b050:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b052:	142b      	asrs	r3, r5, #16
 801b054:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b058:	d406      	bmi.n	801b068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b05a:	4584      	cmp	ip, r0
 801b05c:	da04      	bge.n	801b068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b05e:	2b00      	cmp	r3, #0
 801b060:	db02      	blt.n	801b068 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801b062:	42bb      	cmp	r3, r7
 801b064:	f2c0 8189 	blt.w	801b37a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b068:	f11c 0c01 	adds.w	ip, ip, #1
 801b06c:	f100 8177 	bmi.w	801b35e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b070:	4561      	cmp	r1, ip
 801b072:	f2c0 8174 	blt.w	801b35e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b076:	3301      	adds	r3, #1
 801b078:	f100 8171 	bmi.w	801b35e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b07c:	429a      	cmp	r2, r3
 801b07e:	f2c0 816e 	blt.w	801b35e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801b082:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b084:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b086:	931a      	str	r3, [sp, #104]	@ 0x68
 801b088:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b08a:	2b00      	cmp	r3, #0
 801b08c:	f340 8193 	ble.w	801b3b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801b090:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b092:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b096:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b09a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b09e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b0a0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b0a4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b0a6:	141b      	asrs	r3, r3, #16
 801b0a8:	f100 81d6 	bmi.w	801b458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b0ac:	f100 38ff 	add.w	r8, r0, #4294967295
 801b0b0:	4543      	cmp	r3, r8
 801b0b2:	f280 81d1 	bge.w	801b458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b0b6:	f1bc 0f00 	cmp.w	ip, #0
 801b0ba:	f2c0 81cd 	blt.w	801b458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b0be:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b0c2:	45c4      	cmp	ip, r8
 801b0c4:	f280 81c8 	bge.w	801b458 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801b0c8:	b200      	sxth	r0, r0
 801b0ca:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b0cc:	fb0c 3300 	mla	r3, ip, r0, r3
 801b0d0:	eb04 0803 	add.w	r8, r4, r3
 801b0d4:	5ce3      	ldrb	r3, [r4, r3]
 801b0d6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b0da:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b0de:	2a00      	cmp	r2, #0
 801b0e0:	f000 81af 	beq.w	801b442 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801b0e4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b0e8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b0ec:	940e      	str	r4, [sp, #56]	@ 0x38
 801b0ee:	0e24      	lsrs	r4, r4, #24
 801b0f0:	9415      	str	r4, [sp, #84]	@ 0x54
 801b0f2:	b179      	cbz	r1, 801b114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b0f4:	eb08 0c00 	add.w	ip, r8, r0
 801b0f8:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b0fc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b100:	900a      	str	r0, [sp, #40]	@ 0x28
 801b102:	0e00      	lsrs	r0, r0, #24
 801b104:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b106:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b10a:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b10e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b110:	0e00      	lsrs	r0, r0, #24
 801b112:	9016      	str	r0, [sp, #88]	@ 0x58
 801b114:	b292      	uxth	r2, r2
 801b116:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b118:	b289      	uxth	r1, r1
 801b11a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b11c:	fb02 f901 	mul.w	r9, r2, r1
 801b120:	0112      	lsls	r2, r2, #4
 801b122:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b126:	eba2 0809 	sub.w	r8, r2, r9
 801b12a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b12e:	b289      	uxth	r1, r1
 801b130:	fa1f f888 	uxth.w	r8, r8
 801b134:	1a52      	subs	r2, r2, r1
 801b136:	fb08 f000 	mul.w	r0, r8, r0
 801b13a:	b292      	uxth	r2, r2
 801b13c:	fb02 000e 	mla	r0, r2, lr, r0
 801b140:	fb01 0004 	mla	r0, r1, r4, r0
 801b144:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b146:	fb09 0004 	mla	r0, r9, r4, r0
 801b14a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b14e:	2800      	cmp	r0, #0
 801b150:	f000 80fa 	beq.w	801b348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b154:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801b158:	d01b      	beq.n	801b192 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801b15a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b15e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b162:	fb0e fa0a 	mul.w	sl, lr, sl
 801b166:	fb0e fe03 	mul.w	lr, lr, r3
 801b16a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b16e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b172:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801b176:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b17a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b17e:	4453      	add	r3, sl
 801b180:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b184:	0a1b      	lsrs	r3, r3, #8
 801b186:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b18a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b18e:	ea43 030c 	orr.w	r3, r3, ip
 801b192:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b194:	2cff      	cmp	r4, #255	@ 0xff
 801b196:	d021      	beq.n	801b1dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801b198:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b19a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b19e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b1a0:	fb04 fb0b 	mul.w	fp, r4, fp
 801b1a4:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b1a6:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b1aa:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801b1ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1b0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b1b4:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1b8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b1bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b1c0:	44de      	add	lr, fp
 801b1c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b1c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b1ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b1ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b1d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b1d6:	ea4e 040a 	orr.w	r4, lr, sl
 801b1da:	940e      	str	r4, [sp, #56]	@ 0x38
 801b1dc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b1de:	2cff      	cmp	r4, #255	@ 0xff
 801b1e0:	d021      	beq.n	801b226 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b1e2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b1e4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b1e8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b1ea:	fb04 fb0b 	mul.w	fp, r4, fp
 801b1ee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b1f0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b1f4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801b1f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b1fa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b1fe:	fb04 fa0a 	mul.w	sl, r4, sl
 801b202:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b206:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b20a:	44de      	add	lr, fp
 801b20c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b210:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b214:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b218:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b21c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b220:	ea4e 040a 	orr.w	r4, lr, sl
 801b224:	940a      	str	r4, [sp, #40]	@ 0x28
 801b226:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b228:	2cff      	cmp	r4, #255	@ 0xff
 801b22a:	d021      	beq.n	801b270 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801b22c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b22e:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801b232:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b234:	fb04 fb0b 	mul.w	fp, r4, fp
 801b238:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b23a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b23e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801b240:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b244:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801b248:	fb04 fa0a 	mul.w	sl, r4, sl
 801b24c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b250:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801b254:	44de      	add	lr, fp
 801b256:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b25a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b25e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b262:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801b266:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b26a:	ea4e 040a 	orr.w	r4, lr, sl
 801b26e:	940f      	str	r4, [sp, #60]	@ 0x3c
 801b270:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b272:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801b276:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b27a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b27e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801b280:	fb08 fc0c 	mul.w	ip, r8, ip
 801b284:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b288:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b28c:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801b28e:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b292:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801b296:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801b298:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b29c:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801b2a0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b2a2:	fb08 f80e 	mul.w	r8, r8, lr
 801b2a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2aa:	fb02 8303 	mla	r3, r2, r3, r8
 801b2ae:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b2b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b2b4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b2b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b2ba:	fb01 330a 	mla	r3, r1, sl, r3
 801b2be:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801b2c2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801b2c4:	fb09 3901 	mla	r9, r9, r1, r3
 801b2c8:	883b      	ldrh	r3, [r7, #0]
 801b2ca:	4342      	muls	r2, r0
 801b2cc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b2d0:	1c50      	adds	r0, r2, #1
 801b2d2:	1219      	asrs	r1, r3, #8
 801b2d4:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801b2d8:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b2dc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801b2e0:	ea4c 0c09 	orr.w	ip, ip, r9
 801b2e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b2e8:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b2ec:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b2f0:	b2c0      	uxtb	r0, r0
 801b2f2:	fb12 f204 	smulbb	r2, r2, r4
 801b2f6:	fa5f fc8c 	uxtb.w	ip, ip
 801b2fa:	fb1e fe04 	smulbb	lr, lr, r4
 801b2fe:	fb01 2100 	mla	r1, r1, r0, r2
 801b302:	10da      	asrs	r2, r3, #3
 801b304:	fb1c fc04 	smulbb	ip, ip, r4
 801b308:	00db      	lsls	r3, r3, #3
 801b30a:	b289      	uxth	r1, r1
 801b30c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801b310:	b2db      	uxtb	r3, r3
 801b312:	fb02 e200 	mla	r2, r2, r0, lr
 801b316:	fb03 c300 	mla	r3, r3, r0, ip
 801b31a:	b292      	uxth	r2, r2
 801b31c:	fa1f fc83 	uxth.w	ip, r3
 801b320:	1c4b      	adds	r3, r1, #1
 801b322:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b326:	f10c 0301 	add.w	r3, ip, #1
 801b32a:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b32e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801b332:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b336:	430b      	orrs	r3, r1
 801b338:	1c51      	adds	r1, r2, #1
 801b33a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b33e:	0952      	lsrs	r2, r2, #5
 801b340:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b344:	4313      	orrs	r3, r2
 801b346:	803b      	strh	r3, [r7, #0]
 801b348:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b34a:	3702      	adds	r7, #2
 801b34c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b34e:	441a      	add	r2, r3
 801b350:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b352:	441d      	add	r5, r3
 801b354:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801b356:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b358:	3b01      	subs	r3, #1
 801b35a:	931a      	str	r3, [sp, #104]	@ 0x68
 801b35c:	e694      	b.n	801b088 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b35e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b360:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b362:	441c      	add	r4, r3
 801b364:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b366:	441d      	add	r5, r3
 801b368:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b36a:	9429      	str	r4, [sp, #164]	@ 0xa4
 801b36c:	3b01      	subs	r3, #1
 801b36e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b370:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b372:	3302      	adds	r3, #2
 801b374:	930c      	str	r3, [sp, #48]	@ 0x30
 801b376:	e667      	b.n	801b048 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b378:	d024      	beq.n	801b3c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801b37a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b37c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801b37e:	3b01      	subs	r3, #1
 801b380:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b382:	fb00 4003 	mla	r0, r0, r3, r4
 801b386:	1400      	asrs	r0, r0, #16
 801b388:	f53f ae7b 	bmi.w	801b082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b38c:	3901      	subs	r1, #1
 801b38e:	4288      	cmp	r0, r1
 801b390:	f6bf ae77 	bge.w	801b082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b394:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801b396:	fb01 5303 	mla	r3, r1, r3, r5
 801b39a:	141b      	asrs	r3, r3, #16
 801b39c:	f53f ae71 	bmi.w	801b082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b3a0:	3a01      	subs	r2, #1
 801b3a2:	4293      	cmp	r3, r2
 801b3a4:	f6bf ae6d 	bge.w	801b082 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b3a8:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801b3ac:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801b3b0:	f1bb 0f00 	cmp.w	fp, #0
 801b3b4:	dc70      	bgt.n	801b498 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801b3b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b3b8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b3bc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b3be:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b3c2:	930c      	str	r3, [sp, #48]	@ 0x30
 801b3c4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b3c6:	2b00      	cmp	r3, #0
 801b3c8:	f340 81be 	ble.w	801b748 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801b3cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801b3d0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b3d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b3d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b3da:	eef0 6a62 	vmov.f32	s13, s5
 801b3de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b3e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b3e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3ea:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801b3ee:	eef0 6a43 	vmov.f32	s13, s6
 801b3f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b3f6:	ee16 5a90 	vmov	r5, s13
 801b3fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b3fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b402:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b406:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b40a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b40e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b412:	ee12 2a90 	vmov	r2, s5
 801b416:	eef0 2a47 	vmov.f32	s5, s14
 801b41a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b41e:	ee13 2a10 	vmov	r2, s6
 801b422:	932b      	str	r3, [sp, #172]	@ 0xac
 801b424:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b426:	eeb0 3a67 	vmov.f32	s6, s15
 801b42a:	fb92 f3f3 	sdiv	r3, r2, r3
 801b42e:	932c      	str	r3, [sp, #176]	@ 0xb0
 801b430:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801b432:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801b434:	3b01      	subs	r3, #1
 801b436:	9319      	str	r3, [sp, #100]	@ 0x64
 801b438:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801b43a:	bf08      	it	eq
 801b43c:	4613      	moveq	r3, r2
 801b43e:	9309      	str	r3, [sp, #36]	@ 0x24
 801b440:	e5f4      	b.n	801b02c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b442:	2900      	cmp	r1, #0
 801b444:	f43f ae66 	beq.w	801b114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b448:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b44c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b450:	900a      	str	r0, [sp, #40]	@ 0x28
 801b452:	0e00      	lsrs	r0, r0, #24
 801b454:	9013      	str	r0, [sp, #76]	@ 0x4c
 801b456:	e65d      	b.n	801b114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801b458:	f113 0801 	adds.w	r8, r3, #1
 801b45c:	f53f af74 	bmi.w	801b348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b460:	4540      	cmp	r0, r8
 801b462:	f6ff af71 	blt.w	801b348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b466:	f11c 0801 	adds.w	r8, ip, #1
 801b46a:	f53f af6d 	bmi.w	801b348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b46e:	45c6      	cmp	lr, r8
 801b470:	f6ff af6a 	blt.w	801b348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b474:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 801b476:	b200      	sxth	r0, r0
 801b478:	9302      	str	r3, [sp, #8]
 801b47a:	fa0f f38e 	sxth.w	r3, lr
 801b47e:	9000      	str	r0, [sp, #0]
 801b480:	9301      	str	r3, [sp, #4]
 801b482:	4633      	mov	r3, r6
 801b484:	981d      	ldr	r0, [sp, #116]	@ 0x74
 801b486:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b48a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b48e:	4639      	mov	r1, r7
 801b490:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b492:	f7ff fc63 	bl	801ad5c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b496:	e757      	b.n	801b348 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801b498:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801b49a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b49e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801b4a0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b4a4:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801b4a6:	1427      	asrs	r7, r4, #16
 801b4a8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801b4aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b4ae:	142b      	asrs	r3, r5, #16
 801b4b0:	fb01 7303 	mla	r3, r1, r3, r7
 801b4b4:	18e7      	adds	r7, r4, r3
 801b4b6:	5ce3      	ldrb	r3, [r4, r3]
 801b4b8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b4bc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b4c0:	2a00      	cmp	r2, #0
 801b4c2:	f000 8137 	beq.w	801b734 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 801b4c6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b4ca:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b4ce:	9410      	str	r4, [sp, #64]	@ 0x40
 801b4d0:	0e24      	lsrs	r4, r4, #24
 801b4d2:	9417      	str	r4, [sp, #92]	@ 0x5c
 801b4d4:	b170      	cbz	r0, 801b4f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b4d6:	eb07 0e01 	add.w	lr, r7, r1
 801b4da:	5c79      	ldrb	r1, [r7, r1]
 801b4dc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b4e0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b4e2:	0e09      	lsrs	r1, r1, #24
 801b4e4:	9114      	str	r1, [sp, #80]	@ 0x50
 801b4e6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b4ea:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b4ee:	9111      	str	r1, [sp, #68]	@ 0x44
 801b4f0:	0e09      	lsrs	r1, r1, #24
 801b4f2:	9118      	str	r1, [sp, #96]	@ 0x60
 801b4f4:	b292      	uxth	r2, r2
 801b4f6:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801b4f8:	b280      	uxth	r0, r0
 801b4fa:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b4fc:	fb02 f800 	mul.w	r8, r2, r0
 801b500:	0112      	lsls	r2, r2, #4
 801b502:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b506:	eba2 0e08 	sub.w	lr, r2, r8
 801b50a:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801b50e:	b280      	uxth	r0, r0
 801b510:	fa1f fe8e 	uxth.w	lr, lr
 801b514:	1a12      	subs	r2, r2, r0
 801b516:	fb0e f101 	mul.w	r1, lr, r1
 801b51a:	b292      	uxth	r2, r2
 801b51c:	fb02 110c 	mla	r1, r2, ip, r1
 801b520:	fb00 1104 	mla	r1, r0, r4, r1
 801b524:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b526:	fb08 1104 	mla	r1, r8, r4, r1
 801b52a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b52e:	2900      	cmp	r1, #0
 801b530:	f000 80f5 	beq.w	801b71e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 801b534:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801b538:	d019      	beq.n	801b56e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 801b53a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801b53e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b542:	fb0c fa0a 	mul.w	sl, ip, sl
 801b546:	fb0c fc03 	mul.w	ip, ip, r3
 801b54a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b54e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801b552:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801b556:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b55a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b55e:	4453      	add	r3, sl
 801b560:	0a3f      	lsrs	r7, r7, #8
 801b562:	0a1b      	lsrs	r3, r3, #8
 801b564:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b568:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801b56c:	433b      	orrs	r3, r7
 801b56e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b570:	2cff      	cmp	r4, #255	@ 0xff
 801b572:	d020      	beq.n	801b5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 801b574:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b576:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b57a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b57c:	4367      	muls	r7, r4
 801b57e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b580:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b584:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b588:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801b58a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b58e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b592:	fb04 fa0a 	mul.w	sl, r4, sl
 801b596:	44bc      	add	ip, r7
 801b598:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b59c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b5a4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5ac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5b0:	ea4c 040a 	orr.w	r4, ip, sl
 801b5b4:	9410      	str	r4, [sp, #64]	@ 0x40
 801b5b6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b5b8:	2cff      	cmp	r4, #255	@ 0xff
 801b5ba:	d020      	beq.n	801b5fe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 801b5bc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b5be:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b5c2:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b5c4:	4367      	muls	r7, r4
 801b5c6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b5c8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b5cc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b5d0:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801b5d2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b5d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5da:	fb04 fa0a 	mul.w	sl, r4, sl
 801b5de:	44bc      	add	ip, r7
 801b5e0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b5e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5e8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b5ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b5f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b5f4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b5f8:	ea4c 040a 	orr.w	r4, ip, sl
 801b5fc:	940b      	str	r4, [sp, #44]	@ 0x2c
 801b5fe:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b600:	2cff      	cmp	r4, #255	@ 0xff
 801b602:	d020      	beq.n	801b646 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 801b604:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b606:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b60a:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b60c:	4367      	muls	r7, r4
 801b60e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b610:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b614:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801b618:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 801b61a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b61e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b622:	fb04 fa0a 	mul.w	sl, r4, sl
 801b626:	44bc      	add	ip, r7
 801b628:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801b62c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b630:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b634:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b638:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b63c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801b640:	ea4c 040a 	orr.w	r4, ip, sl
 801b644:	9411      	str	r4, [sp, #68]	@ 0x44
 801b646:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b648:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801b64c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b650:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801b654:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801b656:	fb0e f707 	mul.w	r7, lr, r7
 801b65a:	fb02 770c 	mla	r7, r2, ip, r7
 801b65e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b662:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801b664:	fb00 770c 	mla	r7, r0, ip, r7
 801b668:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801b66c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801b66e:	fb08 770c 	mla	r7, r8, ip, r7
 801b672:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801b676:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801b678:	fb0e fe0c 	mul.w	lr, lr, ip
 801b67c:	0a3f      	lsrs	r7, r7, #8
 801b67e:	fb02 e303 	mla	r3, r2, r3, lr
 801b682:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b684:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801b688:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801b68c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b68e:	fb00 330a 	mla	r3, r0, sl, r3
 801b692:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801b696:	f8b9 0000 	ldrh.w	r0, [r9]
 801b69a:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b69e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b6a0:	1202      	asrs	r2, r0, #8
 801b6a2:	434b      	muls	r3, r1
 801b6a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b6a8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801b6ac:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801b6b0:	1c59      	adds	r1, r3, #1
 801b6b2:	ea47 070c 	orr.w	r7, r7, ip
 801b6b6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b6ba:	0c3b      	lsrs	r3, r7, #16
 801b6bc:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b6c0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b6c4:	b2ff      	uxtb	r7, r7
 801b6c6:	fb13 f304 	smulbb	r3, r3, r4
 801b6ca:	b2c9      	uxtb	r1, r1
 801b6cc:	fb1c fc04 	smulbb	ip, ip, r4
 801b6d0:	fb02 3201 	mla	r2, r2, r1, r3
 801b6d4:	10c3      	asrs	r3, r0, #3
 801b6d6:	fb17 f704 	smulbb	r7, r7, r4
 801b6da:	00c0      	lsls	r0, r0, #3
 801b6dc:	b292      	uxth	r2, r2
 801b6de:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801b6e2:	b2c0      	uxtb	r0, r0
 801b6e4:	fb03 c301 	mla	r3, r3, r1, ip
 801b6e8:	f102 0c01 	add.w	ip, r2, #1
 801b6ec:	fb00 7001 	mla	r0, r0, r1, r7
 801b6f0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b6f4:	b280      	uxth	r0, r0
 801b6f6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 801b6fa:	b29b      	uxth	r3, r3
 801b6fc:	1c42      	adds	r2, r0, #1
 801b6fe:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b702:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b706:	ea42 020c 	orr.w	r2, r2, ip
 801b70a:	f103 0c01 	add.w	ip, r3, #1
 801b70e:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b712:	095b      	lsrs	r3, r3, #5
 801b714:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b718:	431a      	orrs	r2, r3
 801b71a:	f8a9 2000 	strh.w	r2, [r9]
 801b71e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801b720:	f109 0902 	add.w	r9, r9, #2
 801b724:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b726:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b72a:	441a      	add	r2, r3
 801b72c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b72e:	9229      	str	r2, [sp, #164]	@ 0xa4
 801b730:	441d      	add	r5, r3
 801b732:	e63d      	b.n	801b3b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b734:	2800      	cmp	r0, #0
 801b736:	f43f aedd 	beq.w	801b4f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b73a:	5c79      	ldrb	r1, [r7, r1]
 801b73c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b740:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b742:	0e09      	lsrs	r1, r1, #24
 801b744:	9114      	str	r1, [sp, #80]	@ 0x50
 801b746:	e6d5      	b.n	801b4f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 801b748:	b01f      	add	sp, #124	@ 0x7c
 801b74a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b74e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b74e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b752:	b089      	sub	sp, #36	@ 0x24
 801b754:	9101      	str	r1, [sp, #4]
 801b756:	9801      	ldr	r0, [sp, #4]
 801b758:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 801b75c:	8800      	ldrh	r0, [r0, #0]
 801b75e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 801b762:	1206      	asrs	r6, r0, #8
 801b764:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801b768:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 801b76c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b770:	9602      	str	r6, [sp, #8]
 801b772:	10c6      	asrs	r6, r0, #3
 801b774:	00c0      	lsls	r0, r0, #3
 801b776:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b77a:	b2c0      	uxtb	r0, r0
 801b77c:	9603      	str	r6, [sp, #12]
 801b77e:	9004      	str	r0, [sp, #16]
 801b780:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 801b784:	fb07 100c 	mla	r0, r7, ip, r1
 801b788:	2f00      	cmp	r7, #0
 801b78a:	eb02 0e00 	add.w	lr, r2, r0
 801b78e:	f2c0 810a 	blt.w	801b9a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b792:	45b8      	cmp	r8, r7
 801b794:	f340 8107 	ble.w	801b9a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b798:	2900      	cmp	r1, #0
 801b79a:	f2c0 8102 	blt.w	801b9a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b79e:	458c      	cmp	ip, r1
 801b7a0:	f340 80ff 	ble.w	801b9a2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b7a4:	5c12      	ldrb	r2, [r2, r0]
 801b7a6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b7aa:	1c4a      	adds	r2, r1, #1
 801b7ac:	f100 80fe 	bmi.w	801b9ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b7b0:	4594      	cmp	ip, r2
 801b7b2:	f340 80fb 	ble.w	801b9ac <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b7b6:	2d00      	cmp	r5, #0
 801b7b8:	f000 80fa 	beq.w	801b9b0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b7bc:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b7c0:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b7c4:	3701      	adds	r7, #1
 801b7c6:	f100 80f7 	bmi.w	801b9b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b7ca:	45b8      	cmp	r8, r7
 801b7cc:	f340 80f4 	ble.w	801b9b8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b7d0:	2c00      	cmp	r4, #0
 801b7d2:	f000 80f4 	beq.w	801b9be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b7d6:	2900      	cmp	r1, #0
 801b7d8:	eb0e 020c 	add.w	r2, lr, ip
 801b7dc:	f2c0 80ea 	blt.w	801b9b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b7e0:	458c      	cmp	ip, r1
 801b7e2:	f340 80e7 	ble.w	801b9b4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b7e6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b7ea:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b7ee:	3101      	adds	r1, #1
 801b7f0:	f100 80e8 	bmi.w	801b9c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b7f4:	458c      	cmp	ip, r1
 801b7f6:	f340 80e5 	ble.w	801b9c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b7fa:	2d00      	cmp	r5, #0
 801b7fc:	f000 80e4 	beq.w	801b9c8 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b800:	7852      	ldrb	r2, [r2, #1]
 801b802:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b806:	0e0b      	lsrs	r3, r1, #24
 801b808:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 801b80c:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b810:	9300      	str	r3, [sp, #0]
 801b812:	b2a4      	uxth	r4, r4
 801b814:	b2ab      	uxth	r3, r5
 801b816:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 801b81a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b81e:	fb03 f904 	mul.w	r9, r3, r4
 801b822:	011b      	lsls	r3, r3, #4
 801b824:	fb0a f505 	mul.w	r5, sl, r5
 801b828:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b82c:	eba3 0e09 	sub.w	lr, r3, r9
 801b830:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 801b834:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 801b838:	0a28      	lsrs	r0, r5, #8
 801b83a:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 801b83e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801b842:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b846:	fb0a f303 	mul.w	r3, sl, r3
 801b84a:	fb08 f707 	mul.w	r7, r8, r7
 801b84e:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b852:	4405      	add	r5, r0
 801b854:	fb08 fc0c 	mul.w	ip, r8, ip
 801b858:	b2a4      	uxth	r4, r4
 801b85a:	0a2d      	lsrs	r5, r5, #8
 801b85c:	fa1f fe8e 	uxth.w	lr, lr
 801b860:	1b12      	subs	r2, r2, r4
 801b862:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 801b866:	b292      	uxth	r2, r2
 801b868:	9005      	str	r0, [sp, #20]
 801b86a:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 801b86e:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b872:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b876:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801b87a:	0a1b      	lsrs	r3, r3, #8
 801b87c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b880:	9306      	str	r3, [sp, #24]
 801b882:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 801b886:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801b88a:	4460      	add	r0, ip
 801b88c:	fb0b f303 	mul.w	r3, fp, r3
 801b890:	fb0b f606 	mul.w	r6, fp, r6
 801b894:	0a00      	lsrs	r0, r0, #8
 801b896:	0a1d      	lsrs	r5, r3, #8
 801b898:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 801b89c:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 801b8a0:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b8a4:	441d      	add	r5, r3
 801b8a6:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 801b8aa:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b8ae:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 801b8b2:	0a2d      	lsrs	r5, r5, #8
 801b8b4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b8b8:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 801b8bc:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b8c0:	0a36      	lsrs	r6, r6, #8
 801b8c2:	0a1b      	lsrs	r3, r3, #8
 801b8c4:	fb05 f50e 	mul.w	r5, r5, lr
 801b8c8:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 801b8cc:	9307      	str	r3, [sp, #28]
 801b8ce:	0e0b      	lsrs	r3, r1, #24
 801b8d0:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b8d4:	fb0e f606 	mul.w	r6, lr, r6
 801b8d8:	435f      	muls	r7, r3
 801b8da:	4359      	muls	r1, r3
 801b8dc:	9b05      	ldr	r3, [sp, #20]
 801b8de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b8e2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801b8e6:	fb03 5502 	mla	r5, r3, r2, r5
 801b8ea:	9b06      	ldr	r3, [sp, #24]
 801b8ec:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b8f0:	fb0e fe0b 	mul.w	lr, lr, fp
 801b8f4:	44bc      	add	ip, r7
 801b8f6:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 801b8fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8fe:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b902:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801b906:	0a09      	lsrs	r1, r1, #8
 801b908:	fb0c 5509 	mla	r5, ip, r9, r5
 801b90c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801b910:	fb00 5504 	mla	r5, r0, r4, r5
 801b914:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 801b918:	9b07      	ldr	r3, [sp, #28]
 801b91a:	fb02 6000 	mla	r0, r2, r0, r6
 801b91e:	0a2d      	lsrs	r5, r5, #8
 801b920:	fb02 e20a 	mla	r2, r2, sl, lr
 801b924:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801b928:	fb09 0001 	mla	r0, r9, r1, r0
 801b92c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801b930:	fb04 0003 	mla	r0, r4, r3, r0
 801b934:	9b00      	ldr	r3, [sp, #0]
 801b936:	fb04 2408 	mla	r4, r4, r8, r2
 801b93a:	9a04      	ldr	r2, [sp, #16]
 801b93c:	0a00      	lsrs	r0, r0, #8
 801b93e:	fb09 4903 	mla	r9, r9, r3, r4
 801b942:	9b02      	ldr	r3, [sp, #8]
 801b944:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 801b948:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b94c:	4305      	orrs	r5, r0
 801b94e:	fa5f f989 	uxtb.w	r9, r9
 801b952:	fb03 f109 	mul.w	r1, r3, r9
 801b956:	9b03      	ldr	r3, [sp, #12]
 801b958:	fb03 f309 	mul.w	r3, r3, r9
 801b95c:	fb02 f909 	mul.w	r9, r2, r9
 801b960:	1c4a      	adds	r2, r1, #1
 801b962:	1c58      	adds	r0, r3, #1
 801b964:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b968:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b96c:	0c2a      	lsrs	r2, r5, #16
 801b96e:	0a2b      	lsrs	r3, r5, #8
 801b970:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b974:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b978:	0212      	lsls	r2, r2, #8
 801b97a:	00db      	lsls	r3, r3, #3
 801b97c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801b980:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801b984:	4313      	orrs	r3, r2
 801b986:	f109 0201 	add.w	r2, r9, #1
 801b98a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b98e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b992:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b996:	431d      	orrs	r5, r3
 801b998:	9b01      	ldr	r3, [sp, #4]
 801b99a:	801d      	strh	r5, [r3, #0]
 801b99c:	b009      	add	sp, #36	@ 0x24
 801b99e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b9a2:	2000      	movs	r0, #0
 801b9a4:	e701      	b.n	801b7aa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b9a6:	2600      	movs	r6, #0
 801b9a8:	4630      	mov	r0, r6
 801b9aa:	e70b      	b.n	801b7c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b9ac:	2600      	movs	r6, #0
 801b9ae:	e709      	b.n	801b7c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b9b0:	462e      	mov	r6, r5
 801b9b2:	e707      	b.n	801b7c4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b9b4:	2700      	movs	r7, #0
 801b9b6:	e71a      	b.n	801b7ee <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b9b8:	2100      	movs	r1, #0
 801b9ba:	460f      	mov	r7, r1
 801b9bc:	e723      	b.n	801b806 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b9be:	4621      	mov	r1, r4
 801b9c0:	4627      	mov	r7, r4
 801b9c2:	e720      	b.n	801b806 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b9c4:	2100      	movs	r1, #0
 801b9c6:	e71e      	b.n	801b806 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b9c8:	4629      	mov	r1, r5
 801b9ca:	e71c      	b.n	801b806 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b9cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b9cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9d0:	b09b      	sub	sp, #108	@ 0x6c
 801b9d2:	9218      	str	r2, [sp, #96]	@ 0x60
 801b9d4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801b9d6:	9019      	str	r0, [sp, #100]	@ 0x64
 801b9d8:	9116      	str	r1, [sp, #88]	@ 0x58
 801b9da:	6850      	ldr	r0, [r2, #4]
 801b9dc:	9307      	str	r3, [sp, #28]
 801b9de:	6812      	ldr	r2, [r2, #0]
 801b9e0:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 801b9e2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801b9e6:	fb00 1303 	mla	r3, r0, r3, r1
 801b9ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b9ee:	930a      	str	r3, [sp, #40]	@ 0x28
 801b9f0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9f2:	681b      	ldr	r3, [r3, #0]
 801b9f4:	930f      	str	r3, [sp, #60]	@ 0x3c
 801b9f6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801b9f8:	685e      	ldr	r6, [r3, #4]
 801b9fa:	3604      	adds	r6, #4
 801b9fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801b9fe:	2b00      	cmp	r3, #0
 801ba00:	dc03      	bgt.n	801ba0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ba02:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ba04:	2b00      	cmp	r3, #0
 801ba06:	f340 8373 	ble.w	801c0f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801ba0a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ba0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ba10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ba14:	1e48      	subs	r0, r1, #1
 801ba16:	1e57      	subs	r7, r2, #1
 801ba18:	9b07      	ldr	r3, [sp, #28]
 801ba1a:	2b00      	cmp	r3, #0
 801ba1c:	f340 818f 	ble.w	801bd3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 801ba20:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801ba22:	142b      	asrs	r3, r5, #16
 801ba24:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ba28:	d406      	bmi.n	801ba38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba2a:	4584      	cmp	ip, r0
 801ba2c:	da04      	bge.n	801ba38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba2e:	2b00      	cmp	r3, #0
 801ba30:	db02      	blt.n	801ba38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ba32:	42bb      	cmp	r3, r7
 801ba34:	f2c0 8184 	blt.w	801bd40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801ba38:	f11c 0c01 	adds.w	ip, ip, #1
 801ba3c:	f100 8172 	bmi.w	801bd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ba40:	4561      	cmp	r1, ip
 801ba42:	f2c0 816f 	blt.w	801bd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ba46:	3301      	adds	r3, #1
 801ba48:	f100 816c 	bmi.w	801bd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ba4c:	429a      	cmp	r2, r3
 801ba4e:	f2c0 8169 	blt.w	801bd24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801ba52:	9b07      	ldr	r3, [sp, #28]
 801ba54:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ba56:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ba58:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ba5a:	2b00      	cmp	r3, #0
 801ba5c:	f340 818e 	ble.w	801bd7c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 801ba60:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ba62:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ba66:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ba6a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ba6e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ba70:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801ba74:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ba76:	141b      	asrs	r3, r3, #16
 801ba78:	f100 81d1 	bmi.w	801be1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ba7c:	f101 38ff 	add.w	r8, r1, #4294967295
 801ba80:	4543      	cmp	r3, r8
 801ba82:	f280 81cc 	bge.w	801be1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ba86:	f1bc 0f00 	cmp.w	ip, #0
 801ba8a:	f2c0 81c8 	blt.w	801be1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ba8e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ba92:	45c4      	cmp	ip, r8
 801ba94:	f280 81c3 	bge.w	801be1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801ba98:	b209      	sxth	r1, r1
 801ba9a:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ba9c:	fb0c 3301 	mla	r3, ip, r1, r3
 801baa0:	eb04 0803 	add.w	r8, r4, r3
 801baa4:	5ce3      	ldrb	r3, [r4, r3]
 801baa6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801baaa:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801baae:	2a00      	cmp	r2, #0
 801bab0:	f000 81aa 	beq.w	801be08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 801bab4:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bab8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801babc:	940b      	str	r4, [sp, #44]	@ 0x2c
 801babe:	0e24      	lsrs	r4, r4, #24
 801bac0:	9412      	str	r4, [sp, #72]	@ 0x48
 801bac2:	b178      	cbz	r0, 801bae4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801bac4:	eb08 0c01 	add.w	ip, r8, r1
 801bac8:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bacc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bad0:	9108      	str	r1, [sp, #32]
 801bad2:	0e09      	lsrs	r1, r1, #24
 801bad4:	9110      	str	r1, [sp, #64]	@ 0x40
 801bad6:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801bada:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bade:	910c      	str	r1, [sp, #48]	@ 0x30
 801bae0:	0e09      	lsrs	r1, r1, #24
 801bae2:	9113      	str	r1, [sp, #76]	@ 0x4c
 801bae4:	b292      	uxth	r2, r2
 801bae6:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801bae8:	b280      	uxth	r0, r0
 801baea:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801baec:	fb02 f900 	mul.w	r9, r2, r0
 801baf0:	0112      	lsls	r2, r2, #4
 801baf2:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801baf6:	eba2 0809 	sub.w	r8, r2, r9
 801bafa:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801bafe:	b280      	uxth	r0, r0
 801bb00:	fa1f f888 	uxth.w	r8, r8
 801bb04:	1a12      	subs	r2, r2, r0
 801bb06:	fb08 f101 	mul.w	r1, r8, r1
 801bb0a:	b292      	uxth	r2, r2
 801bb0c:	fb02 110e 	mla	r1, r2, lr, r1
 801bb10:	fb00 1104 	mla	r1, r0, r4, r1
 801bb14:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bb16:	fb09 1104 	mla	r1, r9, r4, r1
 801bb1a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bb1e:	2900      	cmp	r1, #0
 801bb20:	f000 80f5 	beq.w	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801bb24:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801bb28:	d01b      	beq.n	801bb62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801bb2a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bb2e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bb32:	fb0e fa0a 	mul.w	sl, lr, sl
 801bb36:	fb0e fe03 	mul.w	lr, lr, r3
 801bb3a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bb3e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bb42:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801bb46:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bb4a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bb4e:	4453      	add	r3, sl
 801bb50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb54:	0a1b      	lsrs	r3, r3, #8
 801bb56:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801bb5a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bb5e:	ea43 030c 	orr.w	r3, r3, ip
 801bb62:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bb64:	2cff      	cmp	r4, #255	@ 0xff
 801bb66:	d021      	beq.n	801bbac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801bb68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bb6a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bb6e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bb70:	fb04 fb0b 	mul.w	fp, r4, fp
 801bb74:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bb76:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bb7a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801bb7c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bb80:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bb84:	fb04 fa0a 	mul.w	sl, r4, sl
 801bb88:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bb8c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bb90:	44de      	add	lr, fp
 801bb92:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bb96:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bb9a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bb9e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bba2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bba6:	ea4e 040a 	orr.w	r4, lr, sl
 801bbaa:	940b      	str	r4, [sp, #44]	@ 0x2c
 801bbac:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbae:	2cff      	cmp	r4, #255	@ 0xff
 801bbb0:	d021      	beq.n	801bbf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801bbb2:	9c08      	ldr	r4, [sp, #32]
 801bbb4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bbb8:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbba:	fb04 fb0b 	mul.w	fp, r4, fp
 801bbbe:	9c08      	ldr	r4, [sp, #32]
 801bbc0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bbc4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801bbc6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bbca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bbce:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbd2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bbd6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bbda:	44de      	add	lr, fp
 801bbdc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bbe0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bbe4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbe8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bbec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bbf0:	ea4e 040a 	orr.w	r4, lr, sl
 801bbf4:	9408      	str	r4, [sp, #32]
 801bbf6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bbf8:	2cff      	cmp	r4, #255	@ 0xff
 801bbfa:	d021      	beq.n	801bc40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801bbfc:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bbfe:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801bc02:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bc04:	fb04 fb0b 	mul.w	fp, r4, fp
 801bc08:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bc0a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bc0e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801bc10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bc14:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801bc18:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc1c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bc20:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801bc24:	44de      	add	lr, fp
 801bc26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bc2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bc2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc32:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801bc36:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bc3a:	ea4e 040a 	orr.w	r4, lr, sl
 801bc3e:	940c      	str	r4, [sp, #48]	@ 0x30
 801bc40:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc42:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801bc46:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bc4a:	43c9      	mvns	r1, r1
 801bc4c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801bc50:	9c08      	ldr	r4, [sp, #32]
 801bc52:	fb08 fc0c 	mul.w	ip, r8, ip
 801bc56:	fb02 cc0e 	mla	ip, r2, lr, ip
 801bc5a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801bc5e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801bc60:	fb00 cc0e 	mla	ip, r0, lr, ip
 801bc64:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801bc68:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801bc6a:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bc6e:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801bc72:	fb08 f80e 	mul.w	r8, r8, lr
 801bc76:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc7a:	fa5f fe81 	uxtb.w	lr, r1
 801bc7e:	fb02 8303 	mla	r3, r2, r3, r8
 801bc82:	9a08      	ldr	r2, [sp, #32]
 801bc84:	f8b7 8000 	ldrh.w	r8, [r7]
 801bc88:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bc8c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801bc90:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801bc92:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801bc96:	fb00 330a 	mla	r3, r0, sl, r3
 801bc9a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 801bc9e:	ea4f 2228 	mov.w	r2, r8, asr #8
 801bca2:	fb09 3900 	mla	r9, r9, r0, r3
 801bca6:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801bcaa:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801bcae:	b2c9      	uxtb	r1, r1
 801bcb0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801bcb4:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801bcb8:	fb02 f20e 	mul.w	r2, r2, lr
 801bcbc:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801bcc0:	fb00 f00e 	mul.w	r0, r0, lr
 801bcc4:	1c53      	adds	r3, r2, #1
 801bcc6:	fb01 f10e 	mul.w	r1, r1, lr
 801bcca:	ea4c 0c09 	orr.w	ip, ip, r9
 801bcce:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801bcd2:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801bcd6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bcda:	4a60      	ldr	r2, [pc, #384]	@ (801be5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801bcdc:	b2db      	uxtb	r3, r3
 801bcde:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801bce2:	1c43      	adds	r3, r0, #1
 801bce4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bce8:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801bcec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bcf0:	00db      	lsls	r3, r3, #3
 801bcf2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801bcf6:	4313      	orrs	r3, r2
 801bcf8:	1c4a      	adds	r2, r1, #1
 801bcfa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bcfe:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801bd02:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bd06:	ea4c 0c03 	orr.w	ip, ip, r3
 801bd0a:	f8a7 c000 	strh.w	ip, [r7]
 801bd0e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bd10:	3702      	adds	r7, #2
 801bd12:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801bd14:	441a      	add	r2, r3
 801bd16:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bd18:	441d      	add	r5, r3
 801bd1a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801bd1c:	9225      	str	r2, [sp, #148]	@ 0x94
 801bd1e:	3b01      	subs	r3, #1
 801bd20:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bd22:	e699      	b.n	801ba58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801bd24:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801bd26:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801bd28:	441c      	add	r4, r3
 801bd2a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bd2c:	441d      	add	r5, r3
 801bd2e:	9b07      	ldr	r3, [sp, #28]
 801bd30:	9425      	str	r4, [sp, #148]	@ 0x94
 801bd32:	3b01      	subs	r3, #1
 801bd34:	9307      	str	r3, [sp, #28]
 801bd36:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bd38:	3302      	adds	r3, #2
 801bd3a:	930a      	str	r3, [sp, #40]	@ 0x28
 801bd3c:	e66c      	b.n	801ba18 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bd3e:	d024      	beq.n	801bd8a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 801bd40:	9b07      	ldr	r3, [sp, #28]
 801bd42:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801bd44:	3b01      	subs	r3, #1
 801bd46:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801bd48:	fb00 4003 	mla	r0, r0, r3, r4
 801bd4c:	1400      	asrs	r0, r0, #16
 801bd4e:	f53f ae80 	bmi.w	801ba52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd52:	3901      	subs	r1, #1
 801bd54:	4288      	cmp	r0, r1
 801bd56:	f6bf ae7c 	bge.w	801ba52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd5a:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801bd5c:	fb01 5303 	mla	r3, r1, r3, r5
 801bd60:	141b      	asrs	r3, r3, #16
 801bd62:	f53f ae76 	bmi.w	801ba52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd66:	3a01      	subs	r2, #1
 801bd68:	4293      	cmp	r3, r2
 801bd6a:	f6bf ae72 	bge.w	801ba52 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801bd6e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bd72:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801bd76:	f1bb 0f00 	cmp.w	fp, #0
 801bd7a:	dc71      	bgt.n	801be60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bd7c:	9b07      	ldr	r3, [sp, #28]
 801bd7e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bd82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bd84:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bd88:	930a      	str	r3, [sp, #40]	@ 0x28
 801bd8a:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801bd8c:	2b00      	cmp	r3, #0
 801bd8e:	f340 81af 	ble.w	801c0f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bd92:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801bd96:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bd98:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bd9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bda0:	eef0 6a62 	vmov.f32	s13, s5
 801bda4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bda8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bdac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bdb0:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 801bdb4:	eef0 6a43 	vmov.f32	s13, s6
 801bdb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bdbc:	ee16 5a90 	vmov	r5, s13
 801bdc0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bdc4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bdc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bdcc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bdd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bdd4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bdd8:	ee12 2a90 	vmov	r2, s5
 801bddc:	eef0 2a47 	vmov.f32	s5, s14
 801bde0:	fb92 f3f3 	sdiv	r3, r2, r3
 801bde4:	ee13 2a10 	vmov	r2, s6
 801bde8:	9327      	str	r3, [sp, #156]	@ 0x9c
 801bdea:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801bdec:	eeb0 3a67 	vmov.f32	s6, s15
 801bdf0:	fb92 f3f3 	sdiv	r3, r2, r3
 801bdf4:	9328      	str	r3, [sp, #160]	@ 0xa0
 801bdf6:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801bdf8:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801bdfa:	3b01      	subs	r3, #1
 801bdfc:	9316      	str	r3, [sp, #88]	@ 0x58
 801bdfe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801be00:	bf08      	it	eq
 801be02:	4613      	moveq	r3, r2
 801be04:	9307      	str	r3, [sp, #28]
 801be06:	e5f9      	b.n	801b9fc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801be08:	2800      	cmp	r0, #0
 801be0a:	f43f ae6b 	beq.w	801bae4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801be0e:	f818 1001 	ldrb.w	r1, [r8, r1]
 801be12:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be16:	9108      	str	r1, [sp, #32]
 801be18:	0e09      	lsrs	r1, r1, #24
 801be1a:	9110      	str	r1, [sp, #64]	@ 0x40
 801be1c:	e662      	b.n	801bae4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 801be1e:	f113 0801 	adds.w	r8, r3, #1
 801be22:	f53f af74 	bmi.w	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801be26:	4541      	cmp	r1, r8
 801be28:	f6ff af71 	blt.w	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801be2c:	f11c 0801 	adds.w	r8, ip, #1
 801be30:	f53f af6d 	bmi.w	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801be34:	45c6      	cmp	lr, r8
 801be36:	f6ff af6a 	blt.w	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801be3a:	b209      	sxth	r1, r1
 801be3c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801be40:	fa0f f38e 	sxth.w	r3, lr
 801be44:	9100      	str	r1, [sp, #0]
 801be46:	4639      	mov	r1, r7
 801be48:	9301      	str	r3, [sp, #4]
 801be4a:	4633      	mov	r3, r6
 801be4c:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801be50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801be52:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801be54:	f7ff fc7b 	bl	801b74e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801be58:	e759      	b.n	801bd0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801be5a:	bf00      	nop
 801be5c:	fffff800 	.word	0xfffff800
 801be60:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801be62:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801be66:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 801be68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801be6c:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801be6e:	1427      	asrs	r7, r4, #16
 801be70:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801be72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801be76:	142b      	asrs	r3, r5, #16
 801be78:	fb01 7303 	mla	r3, r1, r3, r7
 801be7c:	18e7      	adds	r7, r4, r3
 801be7e:	5ce3      	ldrb	r3, [r4, r3]
 801be80:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801be84:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801be88:	2a00      	cmp	r2, #0
 801be8a:	f000 8127 	beq.w	801c0dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801be8e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801be92:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801be96:	940d      	str	r4, [sp, #52]	@ 0x34
 801be98:	0e24      	lsrs	r4, r4, #24
 801be9a:	9414      	str	r4, [sp, #80]	@ 0x50
 801be9c:	b170      	cbz	r0, 801bebc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801be9e:	eb07 0e01 	add.w	lr, r7, r1
 801bea2:	5c79      	ldrb	r1, [r7, r1]
 801bea4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bea8:	9109      	str	r1, [sp, #36]	@ 0x24
 801beaa:	0e09      	lsrs	r1, r1, #24
 801beac:	9111      	str	r1, [sp, #68]	@ 0x44
 801beae:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801beb2:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801beb6:	910e      	str	r1, [sp, #56]	@ 0x38
 801beb8:	0e09      	lsrs	r1, r1, #24
 801beba:	9115      	str	r1, [sp, #84]	@ 0x54
 801bebc:	b292      	uxth	r2, r2
 801bebe:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bec0:	b280      	uxth	r0, r0
 801bec2:	fb02 f800 	mul.w	r8, r2, r0
 801bec6:	0112      	lsls	r2, r2, #4
 801bec8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801becc:	eba2 0e08 	sub.w	lr, r2, r8
 801bed0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801bed4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bed6:	b280      	uxth	r0, r0
 801bed8:	fa1f fe8e 	uxth.w	lr, lr
 801bedc:	1a09      	subs	r1, r1, r0
 801bede:	fb0e f202 	mul.w	r2, lr, r2
 801bee2:	b289      	uxth	r1, r1
 801bee4:	fb01 220c 	mla	r2, r1, ip, r2
 801bee8:	fb00 2204 	mla	r2, r0, r4, r2
 801beec:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801beee:	fb08 2204 	mla	r2, r8, r4, r2
 801bef2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bef6:	2a00      	cmp	r2, #0
 801bef8:	f000 80e5 	beq.w	801c0c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801befc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801bf00:	d019      	beq.n	801bf36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bf02:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801bf06:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801bf0a:	fb0c fa0a 	mul.w	sl, ip, sl
 801bf0e:	fb0c fc03 	mul.w	ip, ip, r3
 801bf12:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bf16:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801bf1a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801bf1e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf22:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bf26:	4453      	add	r3, sl
 801bf28:	0a3f      	lsrs	r7, r7, #8
 801bf2a:	0a1b      	lsrs	r3, r3, #8
 801bf2c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801bf30:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801bf34:	433b      	orrs	r3, r7
 801bf36:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bf38:	2cff      	cmp	r4, #255	@ 0xff
 801bf3a:	d020      	beq.n	801bf7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bf3c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bf3e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bf42:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bf44:	4367      	muls	r7, r4
 801bf46:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801bf48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf4c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf50:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801bf52:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bf56:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bf5a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bf5e:	44bc      	add	ip, r7
 801bf60:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bf64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bf68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bf6c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bf70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bf74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bf78:	ea4c 040a 	orr.w	r4, ip, sl
 801bf7c:	940d      	str	r4, [sp, #52]	@ 0x34
 801bf7e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bf80:	2cff      	cmp	r4, #255	@ 0xff
 801bf82:	d020      	beq.n	801bfc6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bf84:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bf86:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bf8a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bf8c:	4367      	muls	r7, r4
 801bf8e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801bf90:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bf94:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bf98:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801bf9a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bf9e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bfa2:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfa6:	44bc      	add	ip, r7
 801bfa8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bfac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bfb0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bfb4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bfb8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bfbc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801bfc0:	ea4c 040a 	orr.w	r4, ip, sl
 801bfc4:	9409      	str	r4, [sp, #36]	@ 0x24
 801bfc6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bfc8:	2cff      	cmp	r4, #255	@ 0xff
 801bfca:	d020      	beq.n	801c00e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bfcc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bfce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801bfd2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bfd4:	4367      	muls	r7, r4
 801bfd6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801bfd8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bfdc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801bfe0:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801bfe2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801bfe6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801bfea:	fb04 fa0a 	mul.w	sl, r4, sl
 801bfee:	44bc      	add	ip, r7
 801bff0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801bff4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bff8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bffc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801c000:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c004:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801c008:	ea4c 040a 	orr.w	r4, ip, sl
 801c00c:	940e      	str	r4, [sp, #56]	@ 0x38
 801c00e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c010:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801c014:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801c018:	43d2      	mvns	r2, r2
 801c01a:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 801c01e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 801c020:	b2d2      	uxtb	r2, r2
 801c022:	fb0e f707 	mul.w	r7, lr, r7
 801c026:	fb01 770c 	mla	r7, r1, ip, r7
 801c02a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c02e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c030:	fb00 770c 	mla	r7, r0, ip, r7
 801c034:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801c038:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c03a:	fb08 770c 	mla	r7, r8, ip, r7
 801c03e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 801c042:	fb0e fe0c 	mul.w	lr, lr, ip
 801c046:	0a3f      	lsrs	r7, r7, #8
 801c048:	fb01 e303 	mla	r3, r1, r3, lr
 801c04c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c04e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801c052:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801c056:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c058:	fb00 330a 	mla	r3, r0, sl, r3
 801c05c:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801c060:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c064:	f8b9 3000 	ldrh.w	r3, [r9]
 801c068:	1218      	asrs	r0, r3, #8
 801c06a:	10d9      	asrs	r1, r3, #3
 801c06c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c070:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801c074:	00db      	lsls	r3, r3, #3
 801c076:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c07a:	4350      	muls	r0, r2
 801c07c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801c080:	b2db      	uxtb	r3, r3
 801c082:	4351      	muls	r1, r2
 801c084:	ea47 070c 	orr.w	r7, r7, ip
 801c088:	4353      	muls	r3, r2
 801c08a:	1c42      	adds	r2, r0, #1
 801c08c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c090:	0c3a      	lsrs	r2, r7, #16
 801c092:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c096:	4a18      	ldr	r2, [pc, #96]	@ (801c0f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c098:	b2c0      	uxtb	r0, r0
 801c09a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c09e:	1c4a      	adds	r2, r1, #1
 801c0a0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c0a4:	0a3a      	lsrs	r2, r7, #8
 801c0a6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c0aa:	00c9      	lsls	r1, r1, #3
 801c0ac:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c0b0:	4301      	orrs	r1, r0
 801c0b2:	1c58      	adds	r0, r3, #1
 801c0b4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c0b8:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c0bc:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c0c0:	4308      	orrs	r0, r1
 801c0c2:	f8a9 0000 	strh.w	r0, [r9]
 801c0c6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801c0c8:	f109 0902 	add.w	r9, r9, #2
 801c0cc:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c0ce:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c0d2:	441a      	add	r2, r3
 801c0d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c0d6:	9225      	str	r2, [sp, #148]	@ 0x94
 801c0d8:	441d      	add	r5, r3
 801c0da:	e64c      	b.n	801bd76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801c0dc:	2800      	cmp	r0, #0
 801c0de:	f43f aeed 	beq.w	801bebc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c0e2:	5c79      	ldrb	r1, [r7, r1]
 801c0e4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c0e8:	9109      	str	r1, [sp, #36]	@ 0x24
 801c0ea:	0e09      	lsrs	r1, r1, #24
 801c0ec:	9111      	str	r1, [sp, #68]	@ 0x44
 801c0ee:	e6e5      	b.n	801bebc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c0f0:	b01b      	add	sp, #108	@ 0x6c
 801c0f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0f6:	bf00      	nop
 801c0f8:	fffff800 	.word	0xfffff800

0801c0fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c0fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c100:	b085      	sub	sp, #20
 801c102:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801c106:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801c10a:	2800      	cmp	r0, #0
 801c10c:	9103      	str	r1, [sp, #12]
 801c10e:	fb00 7406 	mla	r4, r0, r6, r7
 801c112:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801c116:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801c11a:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c11e:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801c122:	eb03 0904 	add.w	r9, r3, r4
 801c126:	9501      	str	r5, [sp, #4]
 801c128:	f2c0 8150 	blt.w	801c3cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c12c:	4583      	cmp	fp, r0
 801c12e:	f340 814d 	ble.w	801c3cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c132:	2f00      	cmp	r7, #0
 801c134:	f2c0 8146 	blt.w	801c3c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c138:	42be      	cmp	r6, r7
 801c13a:	f340 8143 	ble.w	801c3c4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c13e:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c142:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c146:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801c14a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c14e:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801c152:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c156:	4355      	muls	r5, r2
 801c158:	fb0c f203 	mul.w	r2, ip, r3
 801c15c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c160:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801c164:	441d      	add	r5, r3
 801c166:	f102 0320 	add.w	r3, r2, #32
 801c16a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c16e:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c172:	0a1b      	lsrs	r3, r3, #8
 801c174:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c178:	431c      	orrs	r4, r3
 801c17a:	1c7b      	adds	r3, r7, #1
 801c17c:	f100 812b 	bmi.w	801c3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c180:	429e      	cmp	r6, r3
 801c182:	f340 8128 	ble.w	801c3d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c186:	2900      	cmp	r1, #0
 801c188:	f000 8128 	beq.w	801c3dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c18c:	9a01      	ldr	r2, [sp, #4]
 801c18e:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c192:	8855      	ldrh	r5, [r2, #2]
 801c194:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c198:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801c19c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c1a0:	fb08 f802 	mul.w	r8, r8, r2
 801c1a4:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801c1a8:	435d      	muls	r5, r3
 801c1aa:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c1ae:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c1b2:	44d0      	add	r8, sl
 801c1b4:	f105 0a20 	add.w	sl, r5, #32
 801c1b8:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c1bc:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c1c0:	0a2d      	lsrs	r5, r5, #8
 801c1c2:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c1c6:	432a      	orrs	r2, r5
 801c1c8:	3001      	adds	r0, #1
 801c1ca:	f100 810d 	bmi.w	801c3e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c1ce:	4583      	cmp	fp, r0
 801c1d0:	f340 810a 	ble.w	801c3e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c1d4:	f1be 0f00 	cmp.w	lr, #0
 801c1d8:	f000 810b 	beq.w	801c3f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c1dc:	2f00      	cmp	r7, #0
 801c1de:	f2c0 8100 	blt.w	801c3e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c1e2:	42be      	cmp	r6, r7
 801c1e4:	f340 80fd 	ble.w	801c3e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c1e8:	9801      	ldr	r0, [sp, #4]
 801c1ea:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801c1ee:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c1f2:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c1f6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c1fa:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801c1fe:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801c202:	fb0a fa00 	mul.w	sl, sl, r0
 801c206:	fb05 f808 	mul.w	r8, r5, r8
 801c20a:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c20e:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801c212:	4482      	add	sl, r0
 801c214:	f108 0020 	add.w	r0, r8, #32
 801c218:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c21c:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c220:	0a00      	lsrs	r0, r0, #8
 801c222:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c226:	ea4b 0b00 	orr.w	fp, fp, r0
 801c22a:	3701      	adds	r7, #1
 801c22c:	f100 80e6 	bmi.w	801c3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c230:	42be      	cmp	r6, r7
 801c232:	f340 80e3 	ble.w	801c3fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c236:	2900      	cmp	r1, #0
 801c238:	f000 80e3 	beq.w	801c402 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c23c:	3601      	adds	r6, #1
 801c23e:	9801      	ldr	r0, [sp, #4]
 801c240:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c244:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c248:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c24c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801c250:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c254:	fb09 f906 	mul.w	r9, r9, r6
 801c258:	fb07 f800 	mul.w	r8, r7, r0
 801c25c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801c260:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c264:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801c268:	44d1      	add	r9, sl
 801c26a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c26e:	f108 0020 	add.w	r0, r8, #32
 801c272:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c276:	0a00      	lsrs	r0, r0, #8
 801c278:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c27c:	4330      	orrs	r0, r6
 801c27e:	b28e      	uxth	r6, r1
 801c280:	fa1f f98e 	uxth.w	r9, lr
 801c284:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c288:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801c28c:	fb06 f809 	mul.w	r8, r6, r9
 801c290:	0136      	lsls	r6, r6, #4
 801c292:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c296:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c29a:	9601      	str	r6, [sp, #4]
 801c29c:	ea4a 0404 	orr.w	r4, sl, r4
 801c2a0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c2a4:	fa1f f689 	uxth.w	r6, r9
 801c2a8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c2ac:	fb11 f90e 	smulbb	r9, r1, lr
 801c2b0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c2b4:	9602      	str	r6, [sp, #8]
 801c2b6:	4626      	mov	r6, r4
 801c2b8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c2bc:	f1ce 0410 	rsb	r4, lr, #16
 801c2c0:	ea4a 0202 	orr.w	r2, sl, r2
 801c2c4:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c2c8:	1a64      	subs	r4, r4, r1
 801c2ca:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c2ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c2d2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c2d6:	434a      	muls	r2, r1
 801c2d8:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c2dc:	ea4a 0000 	orr.w	r0, sl, r0
 801c2e0:	9903      	ldr	r1, [sp, #12]
 801c2e2:	fb04 2406 	mla	r4, r4, r6, r2
 801c2e6:	9e02      	ldr	r6, [sp, #8]
 801c2e8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c2ec:	fb09 4200 	mla	r2, r9, r0, r4
 801c2f0:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c2f4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801c2f8:	8808      	ldrh	r0, [r1, #0]
 801c2fa:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801c2fe:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 801c302:	ea44 0b0b 	orr.w	fp, r4, fp
 801c306:	9c01      	ldr	r4, [sp, #4]
 801c308:	b289      	uxth	r1, r1
 801c30a:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 801c30e:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c312:	1ba4      	subs	r4, r4, r6
 801c314:	9e01      	ldr	r6, [sp, #4]
 801c316:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c31a:	eba6 0608 	sub.w	r6, r6, r8
 801c31e:	b2a4      	uxth	r4, r4
 801c320:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c324:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c328:	b2b6      	uxth	r6, r6
 801c32a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c32e:	4373      	muls	r3, r6
 801c330:	ea42 0e0e 	orr.w	lr, r2, lr
 801c334:	fb0c 3304 	mla	r3, ip, r4, r3
 801c338:	9c02      	ldr	r4, [sp, #8]
 801c33a:	fa1f f28e 	uxth.w	r2, lr
 801c33e:	fb04 3505 	mla	r5, r4, r5, r3
 801c342:	10d4      	asrs	r4, r2, #3
 801c344:	fb08 5707 	mla	r7, r8, r7, r5
 801c348:	1215      	asrs	r5, r2, #8
 801c34a:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801c34e:	00d2      	lsls	r2, r2, #3
 801c350:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c354:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c358:	b2d2      	uxtb	r2, r2
 801c35a:	434f      	muls	r7, r1
 801c35c:	1c7b      	adds	r3, r7, #1
 801c35e:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c362:	1203      	asrs	r3, r0, #8
 801c364:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c368:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c36c:	b2ff      	uxtb	r7, r7
 801c36e:	fb13 f307 	smulbb	r3, r3, r7
 801c372:	fb05 3501 	mla	r5, r5, r1, r3
 801c376:	10c3      	asrs	r3, r0, #3
 801c378:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c37c:	b2ad      	uxth	r5, r5
 801c37e:	fb13 f307 	smulbb	r3, r3, r7
 801c382:	fb04 3401 	mla	r4, r4, r1, r3
 801c386:	00c3      	lsls	r3, r0, #3
 801c388:	b2db      	uxtb	r3, r3
 801c38a:	b2a4      	uxth	r4, r4
 801c38c:	fb13 f307 	smulbb	r3, r3, r7
 801c390:	fb02 3101 	mla	r1, r2, r1, r3
 801c394:	1c6b      	adds	r3, r5, #1
 801c396:	1c62      	adds	r2, r4, #1
 801c398:	b289      	uxth	r1, r1
 801c39a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c39e:	1c4b      	adds	r3, r1, #1
 801c3a0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c3a4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c3a8:	9a03      	ldr	r2, [sp, #12]
 801c3aa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c3ae:	0964      	lsrs	r4, r4, #5
 801c3b0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c3b4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801c3b8:	432b      	orrs	r3, r5
 801c3ba:	4323      	orrs	r3, r4
 801c3bc:	8013      	strh	r3, [r2, #0]
 801c3be:	b005      	add	sp, #20
 801c3c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3c4:	f04f 0c00 	mov.w	ip, #0
 801c3c8:	4664      	mov	r4, ip
 801c3ca:	e6d6      	b.n	801c17a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c3cc:	2300      	movs	r3, #0
 801c3ce:	469c      	mov	ip, r3
 801c3d0:	461a      	mov	r2, r3
 801c3d2:	461c      	mov	r4, r3
 801c3d4:	e6f8      	b.n	801c1c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c3d6:	2300      	movs	r3, #0
 801c3d8:	461a      	mov	r2, r3
 801c3da:	e6f5      	b.n	801c1c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c3dc:	460b      	mov	r3, r1
 801c3de:	460a      	mov	r2, r1
 801c3e0:	e6f2      	b.n	801c1c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c3e2:	2500      	movs	r5, #0
 801c3e4:	46ab      	mov	fp, r5
 801c3e6:	e720      	b.n	801c22a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c3e8:	2700      	movs	r7, #0
 801c3ea:	463d      	mov	r5, r7
 801c3ec:	4638      	mov	r0, r7
 801c3ee:	46bb      	mov	fp, r7
 801c3f0:	e745      	b.n	801c27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c3f2:	4677      	mov	r7, lr
 801c3f4:	4675      	mov	r5, lr
 801c3f6:	4670      	mov	r0, lr
 801c3f8:	46f3      	mov	fp, lr
 801c3fa:	e740      	b.n	801c27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c3fc:	2700      	movs	r7, #0
 801c3fe:	4638      	mov	r0, r7
 801c400:	e73d      	b.n	801c27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c402:	460f      	mov	r7, r1
 801c404:	4608      	mov	r0, r1
 801c406:	e73a      	b.n	801c27e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c408 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c40c:	b097      	sub	sp, #92	@ 0x5c
 801c40e:	9214      	str	r2, [sp, #80]	@ 0x50
 801c410:	9308      	str	r3, [sp, #32]
 801c412:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801c414:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801c418:	9015      	str	r0, [sp, #84]	@ 0x54
 801c41a:	9312      	str	r3, [sp, #72]	@ 0x48
 801c41c:	6850      	ldr	r0, [r2, #4]
 801c41e:	9111      	str	r1, [sp, #68]	@ 0x44
 801c420:	6812      	ldr	r2, [r2, #0]
 801c422:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801c426:	fb00 1303 	mla	r3, r0, r3, r1
 801c42a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c42e:	9309      	str	r3, [sp, #36]	@ 0x24
 801c430:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c432:	681b      	ldr	r3, [r3, #0]
 801c434:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c436:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c438:	685b      	ldr	r3, [r3, #4]
 801c43a:	930c      	str	r3, [sp, #48]	@ 0x30
 801c43c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801c440:	930a      	str	r3, [sp, #40]	@ 0x28
 801c442:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c444:	2b00      	cmp	r3, #0
 801c446:	dc03      	bgt.n	801c450 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c448:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801c44a:	2b00      	cmp	r3, #0
 801c44c:	f340 83cd 	ble.w	801cbea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c450:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c452:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c456:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c45a:	1e48      	subs	r0, r1, #1
 801c45c:	1e55      	subs	r5, r2, #1
 801c45e:	9b08      	ldr	r3, [sp, #32]
 801c460:	2b00      	cmp	r3, #0
 801c462:	f340 81a5 	ble.w	801c7b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 801c466:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801c468:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c46a:	1436      	asrs	r6, r6, #16
 801c46c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c470:	d406      	bmi.n	801c480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c472:	4286      	cmp	r6, r0
 801c474:	da04      	bge.n	801c480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c476:	2b00      	cmp	r3, #0
 801c478:	db02      	blt.n	801c480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c47a:	42ab      	cmp	r3, r5
 801c47c:	f2c0 8199 	blt.w	801c7b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801c480:	3601      	adds	r6, #1
 801c482:	f100 8186 	bmi.w	801c792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c486:	42b1      	cmp	r1, r6
 801c488:	f2c0 8183 	blt.w	801c792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c48c:	3301      	adds	r3, #1
 801c48e:	f100 8180 	bmi.w	801c792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c492:	429a      	cmp	r2, r3
 801c494:	f2c0 817d 	blt.w	801c792 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801c498:	9b08      	ldr	r3, [sp, #32]
 801c49a:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c49e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801c4a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c4a2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c4a4:	2b00      	cmp	r3, #0
 801c4a6:	f340 81a6 	ble.w	801c7f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801c4aa:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c4ac:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c4ae:	1418      	asrs	r0, r3, #16
 801c4b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c4b2:	142d      	asrs	r5, r5, #16
 801c4b4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c4b8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c4ba:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c4be:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c4c0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c4c4:	f100 81fa 	bmi.w	801c8bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c4c8:	f102 3eff 	add.w	lr, r2, #4294967295
 801c4cc:	4575      	cmp	r5, lr
 801c4ce:	f280 81f5 	bge.w	801c8bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c4d2:	2800      	cmp	r0, #0
 801c4d4:	f2c0 81f2 	blt.w	801c8bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c4d8:	f103 3eff 	add.w	lr, r3, #4294967295
 801c4dc:	4570      	cmp	r0, lr
 801c4de:	f280 81ed 	bge.w	801c8bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801c4e2:	b212      	sxth	r2, r2
 801c4e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c4e6:	fa1f fe81 	uxth.w	lr, r1
 801c4ea:	fb00 5002 	mla	r0, r0, r2, r5
 801c4ee:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c4f2:	eb03 0a00 	add.w	sl, r3, r0
 801c4f6:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c4fa:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801c4fe:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c502:	b29b      	uxth	r3, r3
 801c504:	f1bc 0f00 	cmp.w	ip, #0
 801c508:	f000 81bb 	beq.w	801c882 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 801c50c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c510:	eb0a 0b02 	add.w	fp, sl, r2
 801c514:	fa1f fa8c 	uxth.w	sl, ip
 801c518:	940d      	str	r4, [sp, #52]	@ 0x34
 801c51a:	fb0a fe0e 	mul.w	lr, sl, lr
 801c51e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c522:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c526:	eba5 050e 	sub.w	r5, r5, lr
 801c52a:	940e      	str	r4, [sp, #56]	@ 0x38
 801c52c:	fa1f fa8a 	uxth.w	sl, sl
 801c530:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c532:	b2ad      	uxth	r5, r5
 801c534:	eba3 030a 	sub.w	r3, r3, sl
 801c538:	fb08 f505 	mul.w	r5, r8, r5
 801c53c:	b29b      	uxth	r3, r3
 801c53e:	fb09 5303 	mla	r3, r9, r3, r5
 801c542:	fb0a 3304 	mla	r3, sl, r4, r3
 801c546:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c548:	fb0e 3304 	mla	r3, lr, r4, r3
 801c54c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c550:	2b00      	cmp	r3, #0
 801c552:	f000 8111 	beq.w	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c556:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c558:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c55c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c560:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c564:	f000 8192 	beq.w	801c88c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c568:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c56c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c570:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c574:	fb0a fe0e 	mul.w	lr, sl, lr
 801c578:	fb09 f000 	mul.w	r0, r9, r0
 801c57c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c580:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c584:	f100 0b20 	add.w	fp, r0, #32
 801c588:	44ce      	add	lr, r9
 801c58a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c58e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c592:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c596:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c59a:	ea4e 0909 	orr.w	r9, lr, r9
 801c59e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c5a2:	8868      	ldrh	r0, [r5, #2]
 801c5a4:	d019      	beq.n	801c5da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c5a6:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801c5aa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c5ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5b2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c5b6:	fb08 f800 	mul.w	r8, r8, r0
 801c5ba:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c5be:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801c5c2:	f108 0b20 	add.w	fp, r8, #32
 801c5c6:	4486      	add	lr, r0
 801c5c8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c5cc:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c5d0:	0a00      	lsrs	r0, r0, #8
 801c5d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801c5d6:	ea4e 0000 	orr.w	r0, lr, r0
 801c5da:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c5de:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c5e2:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c5e6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801c5ea:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801c5ee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c5f2:	ea4e 0909 	orr.w	r9, lr, r9
 801c5f6:	ea4a 0000 	orr.w	r0, sl, r0
 801c5fa:	f1bc 0f00 	cmp.w	ip, #0
 801c5fe:	f000 8147 	beq.w	801c890 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 801c602:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801c606:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801c608:	3a01      	subs	r2, #1
 801c60a:	2cff      	cmp	r4, #255	@ 0xff
 801c60c:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801c610:	f102 0202 	add.w	r2, r2, #2
 801c614:	eb05 0e02 	add.w	lr, r5, r2
 801c618:	5aaa      	ldrh	r2, [r5, r2]
 801c61a:	d018      	beq.n	801c64e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801c61c:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801c620:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c624:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c628:	fb04 fa02 	mul.w	sl, r4, r2
 801c62c:	fb08 f805 	mul.w	r8, r8, r5
 801c630:	f10a 0520 	add.w	r5, sl, #32
 801c634:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c638:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c63c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c640:	4442      	add	r2, r8
 801c642:	0a2d      	lsrs	r5, r5, #8
 801c644:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c648:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c64c:	432a      	orrs	r2, r5
 801c64e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801c650:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c654:	2cff      	cmp	r4, #255	@ 0xff
 801c656:	d01a      	beq.n	801c68e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801c658:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801c65c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c660:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c664:	fb04 fa05 	mul.w	sl, r4, r5
 801c668:	fb08 f80e 	mul.w	r8, r8, lr
 801c66c:	f10a 0e20 	add.w	lr, sl, #32
 801c670:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c674:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801c678:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c67c:	4445      	add	r5, r8
 801c67e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c682:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c686:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801c68a:	ea45 050e 	orr.w	r5, r5, lr
 801c68e:	fb1c fe01 	smulbb	lr, ip, r1
 801c692:	f1cc 0810 	rsb	r8, ip, #16
 801c696:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c69a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801c69e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c6a2:	eba8 0801 	sub.w	r8, r8, r1
 801c6a6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c6aa:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801c6ae:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c6b2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801c6b6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c6ba:	ea4a 0202 	orr.w	r2, sl, r2
 801c6be:	4341      	muls	r1, r0
 801c6c0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c6c4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801c6c8:	fb09 1108 	mla	r1, r9, r8, r1
 801c6cc:	ea4b 0505 	orr.w	r5, fp, r5
 801c6d0:	fb0c 1102 	mla	r1, ip, r2, r1
 801c6d4:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c6d8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c6dc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c6e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c6e4:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801c6e8:	ea42 0e0e 	orr.w	lr, r2, lr
 801c6ec:	fa1f f28e 	uxth.w	r2, lr
 801c6f0:	2bff      	cmp	r3, #255	@ 0xff
 801c6f2:	d103      	bne.n	801c6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801c6f4:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801c6f6:	29ff      	cmp	r1, #255	@ 0xff
 801c6f8:	f000 80de 	beq.w	801c8b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c6fc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801c6fe:	1215      	asrs	r5, r2, #8
 801c700:	8838      	ldrh	r0, [r7, #0]
 801c702:	434b      	muls	r3, r1
 801c704:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801c708:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801c70a:	f103 0c01 	add.w	ip, r3, #1
 801c70e:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c712:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c716:	fa5f fc83 	uxtb.w	ip, r3
 801c71a:	1203      	asrs	r3, r0, #8
 801c71c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801c720:	fb13 f30c 	smulbb	r3, r3, ip
 801c724:	fb05 3501 	mla	r5, r5, r1, r3
 801c728:	10c3      	asrs	r3, r0, #3
 801c72a:	10d1      	asrs	r1, r2, #3
 801c72c:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801c730:	00d2      	lsls	r2, r2, #3
 801c732:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801c736:	b2ad      	uxth	r5, r5
 801c738:	fb13 f30c 	smulbb	r3, r3, ip
 801c73c:	b2d2      	uxtb	r2, r2
 801c73e:	fb01 3104 	mla	r1, r1, r4, r3
 801c742:	00c3      	lsls	r3, r0, #3
 801c744:	b2db      	uxtb	r3, r3
 801c746:	b289      	uxth	r1, r1
 801c748:	fb13 f30c 	smulbb	r3, r3, ip
 801c74c:	fb02 3304 	mla	r3, r2, r4, r3
 801c750:	b29a      	uxth	r2, r3
 801c752:	1c6b      	adds	r3, r5, #1
 801c754:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c758:	1c53      	adds	r3, r2, #1
 801c75a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c75e:	1c4a      	adds	r2, r1, #1
 801c760:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801c764:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c768:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c76c:	0949      	lsrs	r1, r1, #5
 801c76e:	432b      	orrs	r3, r5
 801c770:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801c774:	430b      	orrs	r3, r1
 801c776:	803b      	strh	r3, [r7, #0]
 801c778:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c77a:	3702      	adds	r7, #2
 801c77c:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801c77e:	4413      	add	r3, r2
 801c780:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801c782:	9321      	str	r3, [sp, #132]	@ 0x84
 801c784:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c786:	441a      	add	r2, r3
 801c788:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c78a:	3b01      	subs	r3, #1
 801c78c:	9222      	str	r2, [sp, #136]	@ 0x88
 801c78e:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c790:	e687      	b.n	801c4a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c792:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c794:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 801c796:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 801c798:	4433      	add	r3, r6
 801c79a:	9321      	str	r3, [sp, #132]	@ 0x84
 801c79c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801c79e:	441c      	add	r4, r3
 801c7a0:	9b08      	ldr	r3, [sp, #32]
 801c7a2:	3b01      	subs	r3, #1
 801c7a4:	9422      	str	r4, [sp, #136]	@ 0x88
 801c7a6:	9308      	str	r3, [sp, #32]
 801c7a8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c7aa:	3302      	adds	r3, #2
 801c7ac:	9309      	str	r3, [sp, #36]	@ 0x24
 801c7ae:	e656      	b.n	801c45e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c7b0:	d028      	beq.n	801c804 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801c7b2:	9b08      	ldr	r3, [sp, #32]
 801c7b4:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801c7b6:	3b01      	subs	r3, #1
 801c7b8:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 801c7ba:	fb00 5003 	mla	r0, r0, r3, r5
 801c7be:	1400      	asrs	r0, r0, #16
 801c7c0:	f53f ae6a 	bmi.w	801c498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c7c4:	3901      	subs	r1, #1
 801c7c6:	4288      	cmp	r0, r1
 801c7c8:	f6bf ae66 	bge.w	801c498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c7cc:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801c7ce:	9822      	ldr	r0, [sp, #136]	@ 0x88
 801c7d0:	fb01 0303 	mla	r3, r1, r3, r0
 801c7d4:	141b      	asrs	r3, r3, #16
 801c7d6:	f53f ae5f 	bmi.w	801c498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c7da:	3a01      	subs	r2, #1
 801c7dc:	4293      	cmp	r3, r2
 801c7de:	f6bf ae5b 	bge.w	801c498 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c7e2:	9b08      	ldr	r3, [sp, #32]
 801c7e4:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801c7e8:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801c7ec:	9313      	str	r3, [sp, #76]	@ 0x4c
 801c7ee:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801c7f0:	2b00      	cmp	r3, #0
 801c7f2:	f300 8082 	bgt.w	801c8fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 801c7f6:	9b08      	ldr	r3, [sp, #32]
 801c7f8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c7fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c7fe:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c802:	9309      	str	r3, [sp, #36]	@ 0x24
 801c804:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c806:	2b00      	cmp	r3, #0
 801c808:	f340 81ef 	ble.w	801cbea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 801c80c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801c810:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c812:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c816:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c81a:	eef0 6a62 	vmov.f32	s13, s5
 801c81e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c822:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c82a:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 801c82e:	eef0 6a43 	vmov.f32	s13, s6
 801c832:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c836:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 801c83a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c83e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c842:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c846:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c84a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c84e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c852:	ee12 2a90 	vmov	r2, s5
 801c856:	eef0 2a47 	vmov.f32	s5, s14
 801c85a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c85e:	ee13 2a10 	vmov	r2, s6
 801c862:	9323      	str	r3, [sp, #140]	@ 0x8c
 801c864:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c866:	eeb0 3a67 	vmov.f32	s6, s15
 801c86a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c86e:	9324      	str	r3, [sp, #144]	@ 0x90
 801c870:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801c872:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c874:	3b01      	subs	r3, #1
 801c876:	9311      	str	r3, [sp, #68]	@ 0x44
 801c878:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801c87a:	bf08      	it	eq
 801c87c:	4613      	moveq	r3, r2
 801c87e:	9308      	str	r3, [sp, #32]
 801c880:	e5df      	b.n	801c442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c882:	fb08 f505 	mul.w	r5, r8, r5
 801c886:	fb09 5303 	mla	r3, r9, r3, r5
 801c88a:	e65f      	b.n	801c54c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c88c:	4681      	mov	r9, r0
 801c88e:	e686      	b.n	801c59e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c890:	f1c1 0210 	rsb	r2, r1, #16
 801c894:	4341      	muls	r1, r0
 801c896:	fb09 1902 	mla	r9, r9, r2, r1
 801c89a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c89e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c8a2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c8a6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c8aa:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801c8ae:	ea42 0909 	orr.w	r9, r2, r9
 801c8b2:	fa1f f289 	uxth.w	r2, r9
 801c8b6:	e71b      	b.n	801c6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801c8b8:	803a      	strh	r2, [r7, #0]
 801c8ba:	e75d      	b.n	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c8bc:	f115 0e01 	adds.w	lr, r5, #1
 801c8c0:	f53f af5a 	bmi.w	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c8c4:	4572      	cmp	r2, lr
 801c8c6:	f6ff af57 	blt.w	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c8ca:	f110 0e01 	adds.w	lr, r0, #1
 801c8ce:	f53f af53 	bmi.w	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c8d2:	4573      	cmp	r3, lr
 801c8d4:	f6ff af50 	blt.w	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c8d8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801c8da:	b21b      	sxth	r3, r3
 801c8dc:	b212      	sxth	r2, r2
 801c8de:	9502      	str	r5, [sp, #8]
 801c8e0:	9301      	str	r3, [sp, #4]
 801c8e2:	9200      	str	r2, [sp, #0]
 801c8e4:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c8e8:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c8ec:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 801c8f0:	4639      	mov	r1, r7
 801c8f2:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801c8f4:	f7ff fc02 	bl	801c0fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c8f8:	e73e      	b.n	801c778 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801c8fa:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c8fc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c900:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c902:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c906:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c908:	fa1f fc82 	uxth.w	ip, r2
 801c90c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c910:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801c912:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c916:	141f      	asrs	r7, r3, #16
 801c918:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801c91a:	141b      	asrs	r3, r3, #16
 801c91c:	fb01 3707 	mla	r7, r1, r7, r3
 801c920:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801c922:	eb03 0a07 	add.w	sl, r3, r7
 801c926:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c92a:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801c92e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c932:	b29b      	uxth	r3, r3
 801c934:	2d00      	cmp	r5, #0
 801c936:	f000 813d 	beq.w	801cbb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 801c93a:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c93e:	eb0a 0b01 	add.w	fp, sl, r1
 801c942:	fa1f fa85 	uxth.w	sl, r5
 801c946:	940f      	str	r4, [sp, #60]	@ 0x3c
 801c948:	fb0a fc0c 	mul.w	ip, sl, ip
 801c94c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c950:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c954:	eba0 000c 	sub.w	r0, r0, ip
 801c958:	9410      	str	r4, [sp, #64]	@ 0x40
 801c95a:	fa1f fa8a 	uxth.w	sl, sl
 801c95e:	b280      	uxth	r0, r0
 801c960:	eba3 030a 	sub.w	r3, r3, sl
 801c964:	fb08 f000 	mul.w	r0, r8, r0
 801c968:	b29b      	uxth	r3, r3
 801c96a:	fb09 0303 	mla	r3, r9, r3, r0
 801c96e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801c970:	fb0a 3300 	mla	r3, sl, r0, r3
 801c974:	fb0c 3304 	mla	r3, ip, r4, r3
 801c978:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c97c:	2b00      	cmp	r3, #0
 801c97e:	f000 810b 	beq.w	801cb98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801c982:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801c984:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c988:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801c98a:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c98e:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c992:	f000 8114 	beq.w	801cbbe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c996:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c99a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c99e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c9a2:	fb0a fc0c 	mul.w	ip, sl, ip
 801c9a6:	fb09 f707 	mul.w	r7, r9, r7
 801c9aa:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c9ae:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c9b2:	f107 0b20 	add.w	fp, r7, #32
 801c9b6:	44cc      	add	ip, r9
 801c9b8:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c9bc:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c9c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c9c4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c9c8:	ea4c 0909 	orr.w	r9, ip, r9
 801c9cc:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801c9d0:	8847      	ldrh	r7, [r0, #2]
 801c9d2:	d019      	beq.n	801ca08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 801c9d4:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801c9d8:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c9dc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801c9e0:	fb0a fc0c 	mul.w	ip, sl, ip
 801c9e4:	fb08 f807 	mul.w	r8, r8, r7
 801c9e8:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c9ec:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801c9f0:	f108 0b20 	add.w	fp, r8, #32
 801c9f4:	44bc      	add	ip, r7
 801c9f6:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c9fa:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c9fe:	0a3f      	lsrs	r7, r7, #8
 801ca00:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801ca04:	ea4c 0707 	orr.w	r7, ip, r7
 801ca08:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801ca0c:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801ca10:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801ca14:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ca18:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ca1c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801ca20:	ea4c 0909 	orr.w	r9, ip, r9
 801ca24:	ea4a 0707 	orr.w	r7, sl, r7
 801ca28:	2d00      	cmp	r5, #0
 801ca2a:	f000 80ca 	beq.w	801cbc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 801ca2e:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801ca32:	3901      	subs	r1, #1
 801ca34:	0049      	lsls	r1, r1, #1
 801ca36:	3102      	adds	r1, #2
 801ca38:	eb00 0c01 	add.w	ip, r0, r1
 801ca3c:	5a41      	ldrh	r1, [r0, r1]
 801ca3e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801ca40:	28ff      	cmp	r0, #255	@ 0xff
 801ca42:	d019      	beq.n	801ca78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 801ca44:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801ca48:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801ca4a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ca4e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca52:	fb04 fa01 	mul.w	sl, r4, r1
 801ca56:	fb08 f800 	mul.w	r8, r8, r0
 801ca5a:	f10a 0020 	add.w	r0, sl, #32
 801ca5e:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ca62:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801ca66:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ca6a:	4441      	add	r1, r8
 801ca6c:	0a00      	lsrs	r0, r0, #8
 801ca6e:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ca72:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ca76:	4301      	orrs	r1, r0
 801ca78:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 801ca7a:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ca7e:	2cff      	cmp	r4, #255	@ 0xff
 801ca80:	d01a      	beq.n	801cab8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 801ca82:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801ca86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801ca8a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ca8e:	fb04 fa00 	mul.w	sl, r4, r0
 801ca92:	fb08 f80c 	mul.w	r8, r8, ip
 801ca96:	f10a 0c20 	add.w	ip, sl, #32
 801ca9a:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ca9e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801caa2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801caa6:	4440      	add	r0, r8
 801caa8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801caac:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cab0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801cab4:	ea40 000c 	orr.w	r0, r0, ip
 801cab8:	fb15 fc02 	smulbb	ip, r5, r2
 801cabc:	f1c5 0810 	rsb	r8, r5, #16
 801cac0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cac4:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801cac8:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cacc:	eba8 0802 	sub.w	r8, r8, r2
 801cad0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cad4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cad8:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cadc:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cae0:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cae4:	ea4a 0101 	orr.w	r1, sl, r1
 801cae8:	437a      	muls	r2, r7
 801caea:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801caee:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801caf2:	fb09 2208 	mla	r2, r9, r8, r2
 801caf6:	ea4b 0000 	orr.w	r0, fp, r0
 801cafa:	fb05 2201 	mla	r2, r5, r1, r2
 801cafe:	fb0c 2200 	mla	r2, ip, r0, r2
 801cb02:	0d57      	lsrs	r7, r2, #21
 801cb04:	0952      	lsrs	r2, r2, #5
 801cb06:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cb0a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cb0e:	433a      	orrs	r2, r7
 801cb10:	2bff      	cmp	r3, #255	@ 0xff
 801cb12:	b292      	uxth	r2, r2
 801cb14:	d102      	bne.n	801cb1c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801cb16:	9912      	ldr	r1, [sp, #72]	@ 0x48
 801cb18:	29ff      	cmp	r1, #255	@ 0xff
 801cb1a:	d063      	beq.n	801cbe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 801cb1c:	980a      	ldr	r0, [sp, #40]	@ 0x28
 801cb1e:	1215      	asrs	r5, r2, #8
 801cb20:	f8be 1000 	ldrh.w	r1, [lr]
 801cb24:	4343      	muls	r3, r0
 801cb26:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cb28:	10cf      	asrs	r7, r1, #3
 801cb2a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cb2e:	1c58      	adds	r0, r3, #1
 801cb30:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cb34:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cb38:	1208      	asrs	r0, r1, #8
 801cb3a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cb3e:	00c9      	lsls	r1, r1, #3
 801cb40:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cb44:	b2db      	uxtb	r3, r3
 801cb46:	b2c9      	uxtb	r1, r1
 801cb48:	fb10 f003 	smulbb	r0, r0, r3
 801cb4c:	fb11 f103 	smulbb	r1, r1, r3
 801cb50:	fb05 0504 	mla	r5, r5, r4, r0
 801cb54:	10d0      	asrs	r0, r2, #3
 801cb56:	fb17 f703 	smulbb	r7, r7, r3
 801cb5a:	00d2      	lsls	r2, r2, #3
 801cb5c:	b2ad      	uxth	r5, r5
 801cb5e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801cb62:	b2d2      	uxtb	r2, r2
 801cb64:	fb00 7004 	mla	r0, r0, r4, r7
 801cb68:	1c6b      	adds	r3, r5, #1
 801cb6a:	fb02 1204 	mla	r2, r2, r4, r1
 801cb6e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cb72:	b292      	uxth	r2, r2
 801cb74:	b280      	uxth	r0, r0
 801cb76:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cb7a:	1c57      	adds	r7, r2, #1
 801cb7c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cb80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cb84:	433d      	orrs	r5, r7
 801cb86:	1c47      	adds	r7, r0, #1
 801cb88:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cb8c:	097f      	lsrs	r7, r7, #5
 801cb8e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cb92:	433d      	orrs	r5, r7
 801cb94:	f8ae 5000 	strh.w	r5, [lr]
 801cb98:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801cb9a:	f10e 0e02 	add.w	lr, lr, #2
 801cb9e:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801cba0:	4413      	add	r3, r2
 801cba2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801cba4:	9321      	str	r3, [sp, #132]	@ 0x84
 801cba6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cba8:	441a      	add	r2, r3
 801cbaa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801cbac:	3b01      	subs	r3, #1
 801cbae:	9222      	str	r2, [sp, #136]	@ 0x88
 801cbb0:	9313      	str	r3, [sp, #76]	@ 0x4c
 801cbb2:	e61c      	b.n	801c7ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801cbb4:	fb08 f000 	mul.w	r0, r8, r0
 801cbb8:	fb09 0303 	mla	r3, r9, r3, r0
 801cbbc:	e6dc      	b.n	801c978 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 801cbbe:	46b9      	mov	r9, r7
 801cbc0:	e704      	b.n	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 801cbc2:	f1c2 0110 	rsb	r1, r2, #16
 801cbc6:	437a      	muls	r2, r7
 801cbc8:	fb09 2901 	mla	r9, r9, r1, r2
 801cbcc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cbd0:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801cbd4:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801cbd8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cbdc:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cbe0:	4302      	orrs	r2, r0
 801cbe2:	e795      	b.n	801cb10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 801cbe4:	f8ae 2000 	strh.w	r2, [lr]
 801cbe8:	e7d6      	b.n	801cb98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 801cbea:	b017      	add	sp, #92	@ 0x5c
 801cbec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cbf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801cbf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cbf4:	b085      	sub	sp, #20
 801cbf6:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 801cbfa:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 801cbfe:	2800      	cmp	r0, #0
 801cc00:	9103      	str	r1, [sp, #12]
 801cc02:	fb00 7406 	mla	r4, r0, r6, r7
 801cc06:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 801cc0a:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 801cc0e:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801cc12:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 801cc16:	eb02 0904 	add.w	r9, r2, r4
 801cc1a:	9501      	str	r5, [sp, #4]
 801cc1c:	f2c0 8141 	blt.w	801cea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cc20:	4583      	cmp	fp, r0
 801cc22:	f340 813e 	ble.w	801cea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801cc26:	2f00      	cmp	r7, #0
 801cc28:	f2c0 8137 	blt.w	801ce9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cc2c:	42be      	cmp	r6, r7
 801cc2e:	f340 8134 	ble.w	801ce9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801cc32:	f812 c004 	ldrb.w	ip, [r2, r4]
 801cc36:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801cc3a:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 801cc3e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801cc42:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 801cc46:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cc4a:	4355      	muls	r5, r2
 801cc4c:	fb0c f203 	mul.w	r2, ip, r3
 801cc50:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cc54:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 801cc58:	441d      	add	r5, r3
 801cc5a:	f102 0320 	add.w	r3, r2, #32
 801cc5e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cc62:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cc66:	0a1b      	lsrs	r3, r3, #8
 801cc68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cc6c:	431c      	orrs	r4, r3
 801cc6e:	1c7b      	adds	r3, r7, #1
 801cc70:	f100 811c 	bmi.w	801ceac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cc74:	429e      	cmp	r6, r3
 801cc76:	f340 8119 	ble.w	801ceac <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cc7a:	2900      	cmp	r1, #0
 801cc7c:	f000 8119 	beq.w	801ceb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801cc80:	9a01      	ldr	r2, [sp, #4]
 801cc82:	f899 3001 	ldrb.w	r3, [r9, #1]
 801cc86:	8855      	ldrh	r5, [r2, #2]
 801cc88:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cc8c:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 801cc90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cc94:	fb08 f802 	mul.w	r8, r8, r2
 801cc98:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 801cc9c:	435d      	muls	r5, r3
 801cc9e:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cca2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801cca6:	44d0      	add	r8, sl
 801cca8:	f105 0a20 	add.w	sl, r5, #32
 801ccac:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ccb0:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ccb4:	0a2d      	lsrs	r5, r5, #8
 801ccb6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ccba:	432a      	orrs	r2, r5
 801ccbc:	3001      	adds	r0, #1
 801ccbe:	f100 80fe 	bmi.w	801cebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ccc2:	4583      	cmp	fp, r0
 801ccc4:	f340 80fb 	ble.w	801cebe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ccc8:	f1be 0f00 	cmp.w	lr, #0
 801cccc:	f000 80fc 	beq.w	801cec8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ccd0:	2f00      	cmp	r7, #0
 801ccd2:	f2c0 80f1 	blt.w	801ceb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ccd6:	42be      	cmp	r6, r7
 801ccd8:	f340 80ee 	ble.w	801ceb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ccdc:	9801      	ldr	r0, [sp, #4]
 801ccde:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 801cce2:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cce6:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ccea:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ccee:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 801ccf2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ccf6:	fb0a fa00 	mul.w	sl, sl, r0
 801ccfa:	fb05 f808 	mul.w	r8, r5, r8
 801ccfe:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cd02:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 801cd06:	4482      	add	sl, r0
 801cd08:	f108 0020 	add.w	r0, r8, #32
 801cd0c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cd10:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cd14:	0a00      	lsrs	r0, r0, #8
 801cd16:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cd1a:	ea4b 0b00 	orr.w	fp, fp, r0
 801cd1e:	3701      	adds	r7, #1
 801cd20:	f100 80d7 	bmi.w	801ced2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cd24:	42be      	cmp	r6, r7
 801cd26:	f340 80d4 	ble.w	801ced2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cd2a:	2900      	cmp	r1, #0
 801cd2c:	f000 80d4 	beq.w	801ced8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801cd30:	3601      	adds	r6, #1
 801cd32:	9801      	ldr	r0, [sp, #4]
 801cd34:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cd38:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cd3c:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cd40:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 801cd44:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cd48:	fb09 f906 	mul.w	r9, r9, r6
 801cd4c:	fb07 f800 	mul.w	r8, r7, r0
 801cd50:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 801cd54:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801cd58:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 801cd5c:	44d1      	add	r9, sl
 801cd5e:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801cd62:	f108 0020 	add.w	r0, r8, #32
 801cd66:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cd6a:	0a00      	lsrs	r0, r0, #8
 801cd6c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801cd70:	4330      	orrs	r0, r6
 801cd72:	b28e      	uxth	r6, r1
 801cd74:	fa1f f98e 	uxth.w	r9, lr
 801cd78:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cd7c:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801cd80:	fb06 f809 	mul.w	r8, r6, r9
 801cd84:	0136      	lsls	r6, r6, #4
 801cd86:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cd8a:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cd8e:	9601      	str	r6, [sp, #4]
 801cd90:	ea4a 0404 	orr.w	r4, sl, r4
 801cd94:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cd98:	fa1f f689 	uxth.w	r6, r9
 801cd9c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801cda0:	fb11 f90e 	smulbb	r9, r1, lr
 801cda4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cda8:	9602      	str	r6, [sp, #8]
 801cdaa:	4626      	mov	r6, r4
 801cdac:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cdb0:	f1ce 0410 	rsb	r4, lr, #16
 801cdb4:	ea4a 0202 	orr.w	r2, sl, r2
 801cdb8:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cdbc:	1a64      	subs	r4, r4, r1
 801cdbe:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801cdc2:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801cdc6:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801cdca:	434a      	muls	r2, r1
 801cdcc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cdd0:	ea4a 0000 	orr.w	r0, sl, r0
 801cdd4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cdd8:	fb04 2406 	mla	r4, r4, r6, r2
 801cddc:	9903      	ldr	r1, [sp, #12]
 801cdde:	fb09 4200 	mla	r2, r9, r0, r4
 801cde2:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801cde6:	9801      	ldr	r0, [sp, #4]
 801cde8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801cdec:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801cdf0:	8809      	ldrh	r1, [r1, #0]
 801cdf2:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 801cdf6:	ea44 0b0b 	orr.w	fp, r4, fp
 801cdfa:	9c02      	ldr	r4, [sp, #8]
 801cdfc:	1b00      	subs	r0, r0, r4
 801cdfe:	9c01      	ldr	r4, [sp, #4]
 801ce00:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ce04:	eba4 0608 	sub.w	r6, r4, r8
 801ce08:	b280      	uxth	r0, r0
 801ce0a:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ce0e:	b2b6      	uxth	r6, r6
 801ce10:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ce14:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ce18:	4373      	muls	r3, r6
 801ce1a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ce1e:	fb0c 3300 	mla	r3, ip, r0, r3
 801ce22:	9802      	ldr	r0, [sp, #8]
 801ce24:	ea42 0e0e 	orr.w	lr, r2, lr
 801ce28:	fb00 3505 	mla	r5, r0, r5, r3
 801ce2c:	120b      	asrs	r3, r1, #8
 801ce2e:	10c8      	asrs	r0, r1, #3
 801ce30:	fb08 5707 	mla	r7, r8, r7, r5
 801ce34:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ce38:	00c9      	lsls	r1, r1, #3
 801ce3a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ce3e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ce42:	fa1f f28e 	uxth.w	r2, lr
 801ce46:	b2c9      	uxtb	r1, r1
 801ce48:	b2ff      	uxtb	r7, r7
 801ce4a:	437b      	muls	r3, r7
 801ce4c:	4378      	muls	r0, r7
 801ce4e:	434f      	muls	r7, r1
 801ce50:	1c59      	adds	r1, r3, #1
 801ce52:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801ce56:	1213      	asrs	r3, r2, #8
 801ce58:	f023 0307 	bic.w	r3, r3, #7
 801ce5c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ce60:	1c41      	adds	r1, r0, #1
 801ce62:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801ce66:	10d1      	asrs	r1, r2, #3
 801ce68:	021b      	lsls	r3, r3, #8
 801ce6a:	f021 0103 	bic.w	r1, r1, #3
 801ce6e:	00d2      	lsls	r2, r2, #3
 801ce70:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ce74:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801ce78:	00c9      	lsls	r1, r1, #3
 801ce7a:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ce7e:	430b      	orrs	r3, r1
 801ce80:	1c79      	adds	r1, r7, #1
 801ce82:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801ce86:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801ce8a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ce8e:	431a      	orrs	r2, r3
 801ce90:	9b03      	ldr	r3, [sp, #12]
 801ce92:	801a      	strh	r2, [r3, #0]
 801ce94:	b005      	add	sp, #20
 801ce96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ce9a:	f04f 0c00 	mov.w	ip, #0
 801ce9e:	4664      	mov	r4, ip
 801cea0:	e6e5      	b.n	801cc6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cea2:	2300      	movs	r3, #0
 801cea4:	469c      	mov	ip, r3
 801cea6:	461a      	mov	r2, r3
 801cea8:	461c      	mov	r4, r3
 801ceaa:	e707      	b.n	801ccbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ceac:	2300      	movs	r3, #0
 801ceae:	461a      	mov	r2, r3
 801ceb0:	e704      	b.n	801ccbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ceb2:	460b      	mov	r3, r1
 801ceb4:	460a      	mov	r2, r1
 801ceb6:	e701      	b.n	801ccbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801ceb8:	2500      	movs	r5, #0
 801ceba:	46ab      	mov	fp, r5
 801cebc:	e72f      	b.n	801cd1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cebe:	2700      	movs	r7, #0
 801cec0:	463d      	mov	r5, r7
 801cec2:	4638      	mov	r0, r7
 801cec4:	46bb      	mov	fp, r7
 801cec6:	e754      	b.n	801cd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cec8:	4677      	mov	r7, lr
 801ceca:	4675      	mov	r5, lr
 801cecc:	4670      	mov	r0, lr
 801cece:	46f3      	mov	fp, lr
 801ced0:	e74f      	b.n	801cd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ced2:	2700      	movs	r7, #0
 801ced4:	4638      	mov	r0, r7
 801ced6:	e74c      	b.n	801cd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801ced8:	460f      	mov	r7, r1
 801ceda:	4608      	mov	r0, r1
 801cedc:	e749      	b.n	801cd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cee4:	b093      	sub	sp, #76	@ 0x4c
 801cee6:	9210      	str	r2, [sp, #64]	@ 0x40
 801cee8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ceea:	9011      	str	r0, [sp, #68]	@ 0x44
 801ceec:	910e      	str	r1, [sp, #56]	@ 0x38
 801ceee:	6850      	ldr	r0, [r2, #4]
 801cef0:	9306      	str	r3, [sp, #24]
 801cef2:	6812      	ldr	r2, [r2, #0]
 801cef4:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801cef8:	fb00 1303 	mla	r3, r0, r3, r1
 801cefc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cf00:	9307      	str	r3, [sp, #28]
 801cf02:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf04:	681b      	ldr	r3, [r3, #0]
 801cf06:	9308      	str	r3, [sp, #32]
 801cf08:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf0a:	685b      	ldr	r3, [r3, #4]
 801cf0c:	9309      	str	r3, [sp, #36]	@ 0x24
 801cf0e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801cf10:	2b00      	cmp	r3, #0
 801cf12:	dc03      	bgt.n	801cf1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cf14:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801cf16:	2b00      	cmp	r3, #0
 801cf18:	f340 83b6 	ble.w	801d688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cf1c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf1e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cf22:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cf26:	1e48      	subs	r0, r1, #1
 801cf28:	1e55      	subs	r5, r2, #1
 801cf2a:	9b06      	ldr	r3, [sp, #24]
 801cf2c:	2b00      	cmp	r3, #0
 801cf2e:	f340 8165 	ble.w	801d1fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801cf32:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 801cf34:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cf36:	1436      	asrs	r6, r6, #16
 801cf38:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cf3c:	d406      	bmi.n	801cf4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cf3e:	4286      	cmp	r6, r0
 801cf40:	da04      	bge.n	801cf4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cf42:	2b00      	cmp	r3, #0
 801cf44:	db02      	blt.n	801cf4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cf46:	42ab      	cmp	r3, r5
 801cf48:	f2c0 8159 	blt.w	801d1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801cf4c:	3601      	adds	r6, #1
 801cf4e:	f100 8146 	bmi.w	801d1de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cf52:	42b1      	cmp	r1, r6
 801cf54:	f2c0 8143 	blt.w	801d1de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cf58:	3301      	adds	r3, #1
 801cf5a:	f100 8140 	bmi.w	801d1de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cf5e:	429a      	cmp	r2, r3
 801cf60:	f2c0 813d 	blt.w	801d1de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 801cf64:	9b06      	ldr	r3, [sp, #24]
 801cf66:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801cf6a:	9f07      	ldr	r7, [sp, #28]
 801cf6c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801cf6e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801cf70:	2b00      	cmp	r3, #0
 801cf72:	f340 8166 	ble.w	801d242 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801cf76:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cf78:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801cf7a:	1418      	asrs	r0, r3, #16
 801cf7c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801cf7e:	142d      	asrs	r5, r5, #16
 801cf80:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cf84:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801cf86:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cf8a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801cf8c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cf90:	f100 81f0 	bmi.w	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cf94:	f102 3eff 	add.w	lr, r2, #4294967295
 801cf98:	4575      	cmp	r5, lr
 801cf9a:	f280 81eb 	bge.w	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cf9e:	2800      	cmp	r0, #0
 801cfa0:	f2c0 81e8 	blt.w	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cfa4:	f103 3eff 	add.w	lr, r3, #4294967295
 801cfa8:	4570      	cmp	r0, lr
 801cfaa:	f280 81e3 	bge.w	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801cfae:	b212      	sxth	r2, r2
 801cfb0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801cfb2:	fa1f fe81 	uxth.w	lr, r1
 801cfb6:	fb00 5002 	mla	r0, r0, r2, r5
 801cfba:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cfbe:	eb03 0a00 	add.w	sl, r3, r0
 801cfc2:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cfc6:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 801cfca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cfce:	b29b      	uxth	r3, r3
 801cfd0:	f1bc 0f00 	cmp.w	ip, #0
 801cfd4:	f000 817b 	beq.w	801d2ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 801cfd8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cfdc:	eb0a 0b02 	add.w	fp, sl, r2
 801cfe0:	fa1f fa8c 	uxth.w	sl, ip
 801cfe4:	940a      	str	r4, [sp, #40]	@ 0x28
 801cfe6:	fb0a fe0e 	mul.w	lr, sl, lr
 801cfea:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cfee:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cff2:	eba5 050e 	sub.w	r5, r5, lr
 801cff6:	940b      	str	r4, [sp, #44]	@ 0x2c
 801cff8:	fa1f fa8a 	uxth.w	sl, sl
 801cffc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801cffe:	b2ad      	uxth	r5, r5
 801d000:	eba3 030a 	sub.w	r3, r3, sl
 801d004:	fb08 f505 	mul.w	r5, r8, r5
 801d008:	b29b      	uxth	r3, r3
 801d00a:	fb09 5303 	mla	r3, r9, r3, r5
 801d00e:	fb0a 3304 	mla	r3, sl, r4, r3
 801d012:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d014:	fb0e 3304 	mla	r3, lr, r4, r3
 801d018:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d01c:	2b00      	cmp	r3, #0
 801d01e:	f000 80d1 	beq.w	801d1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d022:	9c08      	ldr	r4, [sp, #32]
 801d024:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d028:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d02c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d030:	f000 8152 	beq.w	801d2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d034:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d038:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d03c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d040:	fb0a fe0e 	mul.w	lr, sl, lr
 801d044:	fb09 f000 	mul.w	r0, r9, r0
 801d048:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d04c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d050:	f100 0b20 	add.w	fp, r0, #32
 801d054:	44ce      	add	lr, r9
 801d056:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d05a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d05e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d062:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d066:	ea4e 0909 	orr.w	r9, lr, r9
 801d06a:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d06e:	8868      	ldrh	r0, [r5, #2]
 801d070:	d019      	beq.n	801d0a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d072:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 801d076:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d07a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d07e:	fb0a fe0e 	mul.w	lr, sl, lr
 801d082:	fb08 f800 	mul.w	r8, r8, r0
 801d086:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d08a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 801d08e:	f108 0b20 	add.w	fp, r8, #32
 801d092:	4486      	add	lr, r0
 801d094:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d098:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d09c:	0a00      	lsrs	r0, r0, #8
 801d09e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d0a2:	ea4e 0000 	orr.w	r0, lr, r0
 801d0a6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d0aa:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d0ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d0b2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d0b6:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801d0ba:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d0be:	ea4e 0909 	orr.w	r9, lr, r9
 801d0c2:	ea4a 0000 	orr.w	r0, sl, r0
 801d0c6:	f1bc 0f00 	cmp.w	ip, #0
 801d0ca:	f000 8107 	beq.w	801d2dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 801d0ce:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 801d0d2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801d0d4:	3a01      	subs	r2, #1
 801d0d6:	2cff      	cmp	r4, #255	@ 0xff
 801d0d8:	ea4f 0242 	mov.w	r2, r2, lsl #1
 801d0dc:	f102 0202 	add.w	r2, r2, #2
 801d0e0:	eb05 0e02 	add.w	lr, r5, r2
 801d0e4:	5aaa      	ldrh	r2, [r5, r2]
 801d0e6:	d018      	beq.n	801d11a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 801d0e8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 801d0ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d0f0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d0f4:	fb04 fa02 	mul.w	sl, r4, r2
 801d0f8:	fb08 f805 	mul.w	r8, r8, r5
 801d0fc:	f10a 0520 	add.w	r5, sl, #32
 801d100:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d104:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d108:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d10c:	4442      	add	r2, r8
 801d10e:	0a2d      	lsrs	r5, r5, #8
 801d110:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d114:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d118:	432a      	orrs	r2, r5
 801d11a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801d11c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d120:	2cff      	cmp	r4, #255	@ 0xff
 801d122:	d01a      	beq.n	801d15a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801d124:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 801d128:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d12c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d130:	fb04 fa05 	mul.w	sl, r4, r5
 801d134:	fb08 f80e 	mul.w	r8, r8, lr
 801d138:	f10a 0e20 	add.w	lr, sl, #32
 801d13c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d140:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d144:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d148:	4445      	add	r5, r8
 801d14a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d14e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d152:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 801d156:	ea45 050e 	orr.w	r5, r5, lr
 801d15a:	fb1c fe01 	smulbb	lr, ip, r1
 801d15e:	f1cc 0810 	rsb	r8, ip, #16
 801d162:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d166:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d16a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d16e:	eba8 0801 	sub.w	r8, r8, r1
 801d172:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d176:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d17a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d17e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d182:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d186:	ea4a 0202 	orr.w	r2, sl, r2
 801d18a:	4341      	muls	r1, r0
 801d18c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d190:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d194:	fb09 1108 	mla	r1, r9, r8, r1
 801d198:	ea4b 0505 	orr.w	r5, fp, r5
 801d19c:	fb0c 1102 	mla	r1, ip, r2, r1
 801d1a0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d1a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d1a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d1ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d1b0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d1b4:	ea42 0e0e 	orr.w	lr, r2, lr
 801d1b8:	fa1f f28e 	uxth.w	r2, lr
 801d1bc:	2bff      	cmp	r3, #255	@ 0xff
 801d1be:	f040 80a1 	bne.w	801d304 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 801d1c2:	803a      	strh	r2, [r7, #0]
 801d1c4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d1c6:	3702      	adds	r7, #2
 801d1c8:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d1ca:	4413      	add	r3, r2
 801d1cc:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d1ce:	931d      	str	r3, [sp, #116]	@ 0x74
 801d1d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d1d2:	441a      	add	r2, r3
 801d1d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d1d6:	3b01      	subs	r3, #1
 801d1d8:	921e      	str	r2, [sp, #120]	@ 0x78
 801d1da:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d1dc:	e6c7      	b.n	801cf6e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d1de:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d1e0:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801d1e2:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 801d1e4:	4433      	add	r3, r6
 801d1e6:	931d      	str	r3, [sp, #116]	@ 0x74
 801d1e8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d1ea:	441c      	add	r4, r3
 801d1ec:	9b06      	ldr	r3, [sp, #24]
 801d1ee:	3b01      	subs	r3, #1
 801d1f0:	941e      	str	r4, [sp, #120]	@ 0x78
 801d1f2:	9306      	str	r3, [sp, #24]
 801d1f4:	9b07      	ldr	r3, [sp, #28]
 801d1f6:	3302      	adds	r3, #2
 801d1f8:	9307      	str	r3, [sp, #28]
 801d1fa:	e696      	b.n	801cf2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d1fc:	d028      	beq.n	801d250 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801d1fe:	9b06      	ldr	r3, [sp, #24]
 801d200:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801d202:	3b01      	subs	r3, #1
 801d204:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 801d206:	fb00 5003 	mla	r0, r0, r3, r5
 801d20a:	1400      	asrs	r0, r0, #16
 801d20c:	f53f aeaa 	bmi.w	801cf64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d210:	3901      	subs	r1, #1
 801d212:	4288      	cmp	r0, r1
 801d214:	f6bf aea6 	bge.w	801cf64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d218:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801d21a:	981e      	ldr	r0, [sp, #120]	@ 0x78
 801d21c:	fb01 0303 	mla	r3, r1, r3, r0
 801d220:	141b      	asrs	r3, r3, #16
 801d222:	f53f ae9f 	bmi.w	801cf64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d226:	3a01      	subs	r2, #1
 801d228:	4293      	cmp	r3, r2
 801d22a:	f6bf ae9b 	bge.w	801cf64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d22e:	9b06      	ldr	r3, [sp, #24]
 801d230:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 801d234:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d238:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d23a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d23c:	2b00      	cmp	r3, #0
 801d23e:	f300 80b6 	bgt.w	801d3ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 801d242:	9b06      	ldr	r3, [sp, #24]
 801d244:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d248:	9b07      	ldr	r3, [sp, #28]
 801d24a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d24e:	9307      	str	r3, [sp, #28]
 801d250:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d252:	2b00      	cmp	r3, #0
 801d254:	f340 8218 	ble.w	801d688 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d258:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801d25c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d25e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d262:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d266:	eef0 6a62 	vmov.f32	s13, s5
 801d26a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d26e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d272:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d276:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 801d27a:	eef0 6a43 	vmov.f32	s13, s6
 801d27e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d282:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 801d286:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d28a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d28e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d292:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d296:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d29a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d29e:	ee12 2a90 	vmov	r2, s5
 801d2a2:	eef0 2a47 	vmov.f32	s5, s14
 801d2a6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2aa:	ee13 2a10 	vmov	r2, s6
 801d2ae:	931f      	str	r3, [sp, #124]	@ 0x7c
 801d2b0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d2b2:	eeb0 3a67 	vmov.f32	s6, s15
 801d2b6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d2ba:	9320      	str	r3, [sp, #128]	@ 0x80
 801d2bc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d2be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d2c0:	3b01      	subs	r3, #1
 801d2c2:	930e      	str	r3, [sp, #56]	@ 0x38
 801d2c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d2c6:	bf08      	it	eq
 801d2c8:	4613      	moveq	r3, r2
 801d2ca:	9306      	str	r3, [sp, #24]
 801d2cc:	e61f      	b.n	801cf0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d2ce:	fb08 f505 	mul.w	r5, r8, r5
 801d2d2:	fb09 5303 	mla	r3, r9, r3, r5
 801d2d6:	e69f      	b.n	801d018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d2d8:	4681      	mov	r9, r0
 801d2da:	e6c6      	b.n	801d06a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d2dc:	f1c1 0210 	rsb	r2, r1, #16
 801d2e0:	4341      	muls	r1, r0
 801d2e2:	fb09 1902 	mla	r9, r9, r2, r1
 801d2e6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d2ea:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d2ee:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d2f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d2f6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d2fa:	ea42 0909 	orr.w	r9, r2, r9
 801d2fe:	fa1f f289 	uxth.w	r2, r9
 801d302:	e75b      	b.n	801d1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 801d304:	f8b7 c000 	ldrh.w	ip, [r7]
 801d308:	43db      	mvns	r3, r3
 801d30a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d30e:	fa5f fe83 	uxtb.w	lr, r3
 801d312:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d316:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d31a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d31e:	fb00 f00e 	mul.w	r0, r0, lr
 801d322:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d326:	b2db      	uxtb	r3, r3
 801d328:	1c41      	adds	r1, r0, #1
 801d32a:	fb05 f50e 	mul.w	r5, r5, lr
 801d32e:	fb03 f30e 	mul.w	r3, r3, lr
 801d332:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d336:	1211      	asrs	r1, r2, #8
 801d338:	f021 0107 	bic.w	r1, r1, #7
 801d33c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d340:	48d3      	ldr	r0, [pc, #844]	@ (801d690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801d342:	b2c9      	uxtb	r1, r1
 801d344:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d348:	1c69      	adds	r1, r5, #1
 801d34a:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d34e:	10d1      	asrs	r1, r2, #3
 801d350:	00d2      	lsls	r2, r2, #3
 801d352:	f021 0103 	bic.w	r1, r1, #3
 801d356:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d35a:	00c9      	lsls	r1, r1, #3
 801d35c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d360:	4301      	orrs	r1, r0
 801d362:	1c58      	adds	r0, r3, #1
 801d364:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d368:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d36c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d370:	430a      	orrs	r2, r1
 801d372:	e726      	b.n	801d1c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801d374:	f115 0e01 	adds.w	lr, r5, #1
 801d378:	f53f af24 	bmi.w	801d1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d37c:	4572      	cmp	r2, lr
 801d37e:	f6ff af21 	blt.w	801d1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d382:	f110 0e01 	adds.w	lr, r0, #1
 801d386:	f53f af1d 	bmi.w	801d1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d38a:	4573      	cmp	r3, lr
 801d38c:	f6ff af1a 	blt.w	801d1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d390:	b21b      	sxth	r3, r3
 801d392:	b212      	sxth	r2, r2
 801d394:	9301      	str	r3, [sp, #4]
 801d396:	9200      	str	r2, [sp, #0]
 801d398:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d39c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d3a0:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d3a4:	4639      	mov	r1, r7
 801d3a6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d3a8:	f7ff fc22 	bl	801cbf0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d3ac:	e70a      	b.n	801d1c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d3ae:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d3b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d3b4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d3b6:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d3ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d3bc:	fa1f fc82 	uxth.w	ip, r2
 801d3c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d3c4:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801d3c6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d3ca:	141f      	asrs	r7, r3, #16
 801d3cc:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d3ce:	141b      	asrs	r3, r3, #16
 801d3d0:	fb01 3707 	mla	r7, r1, r7, r3
 801d3d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d3d6:	eb03 0a07 	add.w	sl, r3, r7
 801d3da:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d3de:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801d3e2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d3e6:	b29b      	uxth	r3, r3
 801d3e8:	2d00      	cmp	r5, #0
 801d3ea:	f000 80fe 	beq.w	801d5ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 801d3ee:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d3f2:	eb0a 0b01 	add.w	fp, sl, r1
 801d3f6:	fa1f fa85 	uxth.w	sl, r5
 801d3fa:	940c      	str	r4, [sp, #48]	@ 0x30
 801d3fc:	fb0a fc0c 	mul.w	ip, sl, ip
 801d400:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d404:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d408:	eba0 000c 	sub.w	r0, r0, ip
 801d40c:	940d      	str	r4, [sp, #52]	@ 0x34
 801d40e:	fa1f fa8a 	uxth.w	sl, sl
 801d412:	b280      	uxth	r0, r0
 801d414:	eba3 030a 	sub.w	r3, r3, sl
 801d418:	fb08 f000 	mul.w	r0, r8, r0
 801d41c:	b29b      	uxth	r3, r3
 801d41e:	fb09 0303 	mla	r3, r9, r3, r0
 801d422:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d424:	fb0a 3300 	mla	r3, sl, r0, r3
 801d428:	fb0c 3304 	mla	r3, ip, r4, r3
 801d42c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d430:	2b00      	cmp	r3, #0
 801d432:	f000 80cc 	beq.w	801d5ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d436:	9808      	ldr	r0, [sp, #32]
 801d438:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801d43c:	9c08      	ldr	r4, [sp, #32]
 801d43e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d442:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d446:	f000 80d5 	beq.w	801d5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d44a:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d44e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d452:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d456:	fb0a fc0c 	mul.w	ip, sl, ip
 801d45a:	fb09 f707 	mul.w	r7, r9, r7
 801d45e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d462:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d466:	f107 0b20 	add.w	fp, r7, #32
 801d46a:	44cc      	add	ip, r9
 801d46c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d470:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d474:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d478:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d47c:	ea4c 0909 	orr.w	r9, ip, r9
 801d480:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 801d484:	8847      	ldrh	r7, [r0, #2]
 801d486:	d019      	beq.n	801d4bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 801d488:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 801d48c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d490:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d494:	fb0a fc0c 	mul.w	ip, sl, ip
 801d498:	fb08 f807 	mul.w	r8, r8, r7
 801d49c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d4a0:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 801d4a4:	f108 0b20 	add.w	fp, r8, #32
 801d4a8:	44bc      	add	ip, r7
 801d4aa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d4ae:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d4b2:	0a3f      	lsrs	r7, r7, #8
 801d4b4:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d4b8:	ea4c 0707 	orr.w	r7, ip, r7
 801d4bc:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d4c0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 801d4c4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d4c8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801d4cc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801d4d0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d4d4:	ea4c 0909 	orr.w	r9, ip, r9
 801d4d8:	ea4a 0707 	orr.w	r7, sl, r7
 801d4dc:	2d00      	cmp	r5, #0
 801d4de:	f000 808b 	beq.w	801d5f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 801d4e2:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801d4e6:	3901      	subs	r1, #1
 801d4e8:	0049      	lsls	r1, r1, #1
 801d4ea:	3102      	adds	r1, #2
 801d4ec:	eb00 0c01 	add.w	ip, r0, r1
 801d4f0:	5a41      	ldrh	r1, [r0, r1]
 801d4f2:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d4f4:	28ff      	cmp	r0, #255	@ 0xff
 801d4f6:	d019      	beq.n	801d52c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 801d4f8:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 801d4fc:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 801d4fe:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d502:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d506:	fb04 fa01 	mul.w	sl, r4, r1
 801d50a:	fb08 f800 	mul.w	r8, r8, r0
 801d50e:	f10a 0020 	add.w	r0, sl, #32
 801d512:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d516:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d51a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d51e:	4441      	add	r1, r8
 801d520:	0a00      	lsrs	r0, r0, #8
 801d522:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d526:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d52a:	4301      	orrs	r1, r0
 801d52c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801d52e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d532:	2cff      	cmp	r4, #255	@ 0xff
 801d534:	d01a      	beq.n	801d56c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 801d536:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 801d53a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d53e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d542:	fb04 fa00 	mul.w	sl, r4, r0
 801d546:	fb08 f80c 	mul.w	r8, r8, ip
 801d54a:	f10a 0c20 	add.w	ip, sl, #32
 801d54e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d552:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 801d556:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d55a:	4440      	add	r0, r8
 801d55c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d560:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d564:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801d568:	ea40 000c 	orr.w	r0, r0, ip
 801d56c:	fb15 fc02 	smulbb	ip, r5, r2
 801d570:	f1c5 0810 	rsb	r8, r5, #16
 801d574:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d578:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d57c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d580:	eba8 0802 	sub.w	r8, r8, r2
 801d584:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d588:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d58c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d590:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801d594:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d598:	ea4a 0101 	orr.w	r1, sl, r1
 801d59c:	437a      	muls	r2, r7
 801d59e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d5a2:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801d5a6:	fb09 2208 	mla	r2, r9, r8, r2
 801d5aa:	ea4b 0000 	orr.w	r0, fp, r0
 801d5ae:	fb05 2201 	mla	r2, r5, r1, r2
 801d5b2:	fb0c 2200 	mla	r2, ip, r0, r2
 801d5b6:	0d57      	lsrs	r7, r2, #21
 801d5b8:	0952      	lsrs	r2, r2, #5
 801d5ba:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d5be:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d5c2:	433a      	orrs	r2, r7
 801d5c4:	2bff      	cmp	r3, #255	@ 0xff
 801d5c6:	b292      	uxth	r2, r2
 801d5c8:	d127      	bne.n	801d61a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 801d5ca:	f8ae 2000 	strh.w	r2, [lr]
 801d5ce:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801d5d0:	f10e 0e02 	add.w	lr, lr, #2
 801d5d4:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 801d5d6:	4413      	add	r3, r2
 801d5d8:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 801d5da:	931d      	str	r3, [sp, #116]	@ 0x74
 801d5dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801d5de:	441a      	add	r2, r3
 801d5e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d5e2:	3b01      	subs	r3, #1
 801d5e4:	921e      	str	r2, [sp, #120]	@ 0x78
 801d5e6:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d5e8:	e627      	b.n	801d23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801d5ea:	fb08 f000 	mul.w	r0, r8, r0
 801d5ee:	fb09 0303 	mla	r3, r9, r3, r0
 801d5f2:	e71b      	b.n	801d42c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 801d5f4:	46b9      	mov	r9, r7
 801d5f6:	e743      	b.n	801d480 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 801d5f8:	f1c2 0110 	rsb	r1, r2, #16
 801d5fc:	437a      	muls	r2, r7
 801d5fe:	fb09 2901 	mla	r9, r9, r1, r2
 801d602:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d606:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d60a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d60e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801d612:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d616:	4302      	orrs	r2, r0
 801d618:	e7d4      	b.n	801d5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 801d61a:	f8be 7000 	ldrh.w	r7, [lr]
 801d61e:	43db      	mvns	r3, r3
 801d620:	4c1b      	ldr	r4, [pc, #108]	@ (801d690 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 801d622:	1238      	asrs	r0, r7, #8
 801d624:	fa5f fc83 	uxtb.w	ip, r3
 801d628:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d62c:	10fd      	asrs	r5, r7, #3
 801d62e:	00fb      	lsls	r3, r7, #3
 801d630:	fb00 f00c 	mul.w	r0, r0, ip
 801d634:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d638:	b2db      	uxtb	r3, r3
 801d63a:	fb05 f10c 	mul.w	r1, r5, ip
 801d63e:	1c45      	adds	r5, r0, #1
 801d640:	fb03 f30c 	mul.w	r3, r3, ip
 801d644:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d648:	1215      	asrs	r5, r2, #8
 801d64a:	f025 0507 	bic.w	r5, r5, #7
 801d64e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d652:	1c4d      	adds	r5, r1, #1
 801d654:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d658:	10d1      	asrs	r1, r2, #3
 801d65a:	b2c0      	uxtb	r0, r0
 801d65c:	f021 0103 	bic.w	r1, r1, #3
 801d660:	00d2      	lsls	r2, r2, #3
 801d662:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d666:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d66a:	00c9      	lsls	r1, r1, #3
 801d66c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d670:	4308      	orrs	r0, r1
 801d672:	1c59      	adds	r1, r3, #1
 801d674:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d678:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d67c:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d680:	4318      	orrs	r0, r3
 801d682:	f8ae 0000 	strh.w	r0, [lr]
 801d686:	e7a2      	b.n	801d5ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 801d688:	b013      	add	sp, #76	@ 0x4c
 801d68a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d68e:	bf00      	nop
 801d690:	fffff800 	.word	0xfffff800

0801d694 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d694:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d698:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 801d69c:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d6a0:	fb05 4c03 	mla	ip, r5, r3, r4
 801d6a4:	2d00      	cmp	r5, #0
 801d6a6:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 801d6aa:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801d6ae:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d6b2:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801d6b6:	8808      	ldrh	r0, [r1, #0]
 801d6b8:	f2c0 80a7 	blt.w	801d80a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d6bc:	45aa      	cmp	sl, r5
 801d6be:	f340 80a4 	ble.w	801d80a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d6c2:	2c00      	cmp	r4, #0
 801d6c4:	f2c0 809f 	blt.w	801d806 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d6c8:	42a3      	cmp	r3, r4
 801d6ca:	f340 809c 	ble.w	801d806 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d6ce:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d6d2:	1c62      	adds	r2, r4, #1
 801d6d4:	f100 809c 	bmi.w	801d810 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d6d8:	4293      	cmp	r3, r2
 801d6da:	f340 8099 	ble.w	801d810 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d6de:	f1b9 0f00 	cmp.w	r9, #0
 801d6e2:	f000 8095 	beq.w	801d810 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d6e6:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d6ea:	3501      	adds	r5, #1
 801d6ec:	f100 8094 	bmi.w	801d818 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d6f0:	45aa      	cmp	sl, r5
 801d6f2:	f340 8091 	ble.w	801d818 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d6f6:	2f00      	cmp	r7, #0
 801d6f8:	f000 808e 	beq.w	801d818 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d6fc:	2c00      	cmp	r4, #0
 801d6fe:	f2c0 8089 	blt.w	801d814 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d702:	42a3      	cmp	r3, r4
 801d704:	f340 8086 	ble.w	801d814 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d708:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d70c:	3401      	adds	r4, #1
 801d70e:	f100 8086 	bmi.w	801d81e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d712:	42a3      	cmp	r3, r4
 801d714:	f340 8083 	ble.w	801d81e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d718:	f1b9 0f00 	cmp.w	r9, #0
 801d71c:	d07f      	beq.n	801d81e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d71e:	3301      	adds	r3, #1
 801d720:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d724:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d728:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801d72c:	fb19 fe07 	smulbb	lr, r9, r7
 801d730:	f1c7 0210 	rsb	r2, r7, #16
 801d734:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d738:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d73c:	eba2 0209 	sub.w	r2, r2, r9
 801d740:	ea44 0808 	orr.w	r8, r4, r8
 801d744:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d748:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801d74c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d750:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801d754:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d758:	ea44 0c0c 	orr.w	ip, r4, ip
 801d75c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d760:	fb04 f40c 	mul.w	r4, r4, ip
 801d764:	fb02 4808 	mla	r8, r2, r8, r4
 801d768:	041a      	lsls	r2, r3, #16
 801d76a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d76e:	b2b4      	uxth	r4, r6
 801d770:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d774:	43f6      	mvns	r6, r6
 801d776:	4313      	orrs	r3, r2
 801d778:	042a      	lsls	r2, r5, #16
 801d77a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801d77e:	b2f6      	uxtb	r6, r6
 801d780:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d784:	fb0e 8303 	mla	r3, lr, r3, r8
 801d788:	432a      	orrs	r2, r5
 801d78a:	fb07 3202 	mla	r2, r7, r2, r3
 801d78e:	10c7      	asrs	r7, r0, #3
 801d790:	0d53      	lsrs	r3, r2, #21
 801d792:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d796:	0952      	lsrs	r2, r2, #5
 801d798:	fb17 f706 	smulbb	r7, r7, r6
 801d79c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801d7a0:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d7a4:	431a      	orrs	r2, r3
 801d7a6:	b293      	uxth	r3, r2
 801d7a8:	1202      	asrs	r2, r0, #8
 801d7aa:	121d      	asrs	r5, r3, #8
 801d7ac:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801d7b0:	00c0      	lsls	r0, r0, #3
 801d7b2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d7b6:	fb12 f206 	smulbb	r2, r2, r6
 801d7ba:	b2c0      	uxtb	r0, r0
 801d7bc:	fb05 2504 	mla	r5, r5, r4, r2
 801d7c0:	10da      	asrs	r2, r3, #3
 801d7c2:	fb10 f006 	smulbb	r0, r0, r6
 801d7c6:	00db      	lsls	r3, r3, #3
 801d7c8:	b2ad      	uxth	r5, r5
 801d7ca:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d7ce:	b2db      	uxtb	r3, r3
 801d7d0:	fb02 7204 	mla	r2, r2, r4, r7
 801d7d4:	fb03 0004 	mla	r0, r3, r4, r0
 801d7d8:	1c6b      	adds	r3, r5, #1
 801d7da:	b292      	uxth	r2, r2
 801d7dc:	b280      	uxth	r0, r0
 801d7de:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d7e2:	1c43      	adds	r3, r0, #1
 801d7e4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d7e8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d7ec:	1c50      	adds	r0, r2, #1
 801d7ee:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d7f2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d7f6:	0952      	lsrs	r2, r2, #5
 801d7f8:	432b      	orrs	r3, r5
 801d7fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d7fe:	4313      	orrs	r3, r2
 801d800:	800b      	strh	r3, [r1, #0]
 801d802:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d806:	4680      	mov	r8, r0
 801d808:	e763      	b.n	801d6d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d80a:	4684      	mov	ip, r0
 801d80c:	4680      	mov	r8, r0
 801d80e:	e76c      	b.n	801d6ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d810:	4684      	mov	ip, r0
 801d812:	e76a      	b.n	801d6ea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d814:	4605      	mov	r5, r0
 801d816:	e779      	b.n	801d70c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d818:	4603      	mov	r3, r0
 801d81a:	4605      	mov	r5, r0
 801d81c:	e782      	b.n	801d724 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d81e:	4603      	mov	r3, r0
 801d820:	e780      	b.n	801d724 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d822 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d822:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d826:	b093      	sub	sp, #76	@ 0x4c
 801d828:	461d      	mov	r5, r3
 801d82a:	9210      	str	r2, [sp, #64]	@ 0x40
 801d82c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 801d82e:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 801d832:	910a      	str	r1, [sp, #40]	@ 0x28
 801d834:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d836:	6859      	ldr	r1, [r3, #4]
 801d838:	681b      	ldr	r3, [r3, #0]
 801d83a:	9011      	str	r0, [sp, #68]	@ 0x44
 801d83c:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 801d840:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801d844:	fb01 2707 	mla	r7, r1, r7, r2
 801d848:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d84c:	9307      	str	r3, [sp, #28]
 801d84e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d850:	681b      	ldr	r3, [r3, #0]
 801d852:	9309      	str	r3, [sp, #36]	@ 0x24
 801d854:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d856:	43db      	mvns	r3, r3
 801d858:	b2db      	uxtb	r3, r3
 801d85a:	9308      	str	r3, [sp, #32]
 801d85c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d85e:	2b00      	cmp	r3, #0
 801d860:	dc03      	bgt.n	801d86a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d862:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d864:	2b00      	cmp	r3, #0
 801d866:	f340 8205 	ble.w	801dc74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801d86a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d86c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d870:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d874:	1e48      	subs	r0, r1, #1
 801d876:	f102 3cff 	add.w	ip, r2, #4294967295
 801d87a:	2d00      	cmp	r5, #0
 801d87c:	f340 80da 	ble.w	801da34 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d880:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d884:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d888:	d406      	bmi.n	801d898 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d88a:	4586      	cmp	lr, r0
 801d88c:	da04      	bge.n	801d898 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d88e:	2b00      	cmp	r3, #0
 801d890:	db02      	blt.n	801d898 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d892:	4563      	cmp	r3, ip
 801d894:	f2c0 80cf 	blt.w	801da36 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d898:	f11e 0e01 	adds.w	lr, lr, #1
 801d89c:	f100 80c1 	bmi.w	801da22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d8a0:	4571      	cmp	r1, lr
 801d8a2:	f2c0 80be 	blt.w	801da22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d8a6:	3301      	adds	r3, #1
 801d8a8:	f100 80bb 	bmi.w	801da22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d8ac:	429a      	cmp	r2, r3
 801d8ae:	f2c0 80b8 	blt.w	801da22 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d8b2:	46a9      	mov	r9, r5
 801d8b4:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d8b8:	f1b9 0f00 	cmp.w	r9, #0
 801d8bc:	f340 80d8 	ble.w	801da70 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d8c0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801d8c2:	1421      	asrs	r1, r4, #16
 801d8c4:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d8c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d8cc:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d8d0:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d8d4:	f100 8112 	bmi.w	801dafc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d8d8:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d8dc:	4551      	cmp	r1, sl
 801d8de:	f280 810d 	bge.w	801dafc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d8e2:	2800      	cmp	r0, #0
 801d8e4:	f2c0 810a 	blt.w	801dafc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d8e8:	f103 3aff 	add.w	sl, r3, #4294967295
 801d8ec:	4550      	cmp	r0, sl
 801d8ee:	f280 8105 	bge.w	801dafc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 801d8f2:	fa0f f38e 	sxth.w	r3, lr
 801d8f6:	fb00 1103 	mla	r1, r0, r3, r1
 801d8fa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801d8fc:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d900:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d904:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d908:	f1bc 0f00 	cmp.w	ip, #0
 801d90c:	d007      	beq.n	801d91e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d90e:	005b      	lsls	r3, r3, #1
 801d910:	eb0a 0003 	add.w	r0, sl, r3
 801d914:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d918:	930c      	str	r3, [sp, #48]	@ 0x30
 801d91a:	8843      	ldrh	r3, [r0, #2]
 801d91c:	930d      	str	r3, [sp, #52]	@ 0x34
 801d91e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d922:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801d926:	fb12 f30c 	smulbb	r3, r2, ip
 801d92a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d92e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d932:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801d936:	10db      	asrs	r3, r3, #3
 801d938:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 801d93c:	ea40 000e 	orr.w	r0, r0, lr
 801d940:	f1cc 0e10 	rsb	lr, ip, #16
 801d944:	ea4a 0101 	orr.w	r1, sl, r1
 801d948:	9f08      	ldr	r7, [sp, #32]
 801d94a:	ebae 0e02 	sub.w	lr, lr, r2
 801d94e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d952:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d956:	4351      	muls	r1, r2
 801d958:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801d95a:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d95e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d960:	0410      	lsls	r0, r2, #16
 801d962:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801d966:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801d96a:	4310      	orrs	r0, r2
 801d96c:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d96e:	0412      	lsls	r2, r2, #16
 801d970:	fb03 e000 	mla	r0, r3, r0, lr
 801d974:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801d978:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d97c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801d980:	ea42 020e 	orr.w	r2, r2, lr
 801d984:	fb03 0302 	mla	r3, r3, r2, r0
 801d988:	f8b8 0000 	ldrh.w	r0, [r8]
 801d98c:	0d5a      	lsrs	r2, r3, #21
 801d98e:	095b      	lsrs	r3, r3, #5
 801d990:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d994:	1201      	asrs	r1, r0, #8
 801d996:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801d99a:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d99e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d9a2:	00c0      	lsls	r0, r0, #3
 801d9a4:	4313      	orrs	r3, r2
 801d9a6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 801d9aa:	fb11 f107 	smulbb	r1, r1, r7
 801d9ae:	b2c0      	uxtb	r0, r0
 801d9b0:	b29b      	uxth	r3, r3
 801d9b2:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d9b6:	fb10 f007 	smulbb	r0, r0, r7
 801d9ba:	fb1e fe07 	smulbb	lr, lr, r7
 801d9be:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d9c2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d9c6:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d9ca:	10d9      	asrs	r1, r3, #3
 801d9cc:	00db      	lsls	r3, r3, #3
 801d9ce:	fa1f fc8c 	uxth.w	ip, ip
 801d9d2:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d9d6:	b2db      	uxtb	r3, r3
 801d9d8:	fb01 e102 	mla	r1, r1, r2, lr
 801d9dc:	fb03 0302 	mla	r3, r3, r2, r0
 801d9e0:	b289      	uxth	r1, r1
 801d9e2:	b29a      	uxth	r2, r3
 801d9e4:	f10c 0301 	add.w	r3, ip, #1
 801d9e8:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d9ec:	1c53      	adds	r3, r2, #1
 801d9ee:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d9f2:	1c4a      	adds	r2, r1, #1
 801d9f4:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801d9f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d9fc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801da00:	0949      	lsrs	r1, r1, #5
 801da02:	ea43 030c 	orr.w	r3, r3, ip
 801da06:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801da0a:	430b      	orrs	r3, r1
 801da0c:	f8a8 3000 	strh.w	r3, [r8]
 801da10:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801da12:	f108 0802 	add.w	r8, r8, #2
 801da16:	f109 39ff 	add.w	r9, r9, #4294967295
 801da1a:	441c      	add	r4, r3
 801da1c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da1e:	441e      	add	r6, r3
 801da20:	e74a      	b.n	801d8b8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801da22:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801da24:	3d01      	subs	r5, #1
 801da26:	441c      	add	r4, r3
 801da28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801da2a:	441e      	add	r6, r3
 801da2c:	9b07      	ldr	r3, [sp, #28]
 801da2e:	3302      	adds	r3, #2
 801da30:	9307      	str	r3, [sp, #28]
 801da32:	e722      	b.n	801d87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801da34:	d022      	beq.n	801da7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801da36:	1e6b      	subs	r3, r5, #1
 801da38:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801da3a:	fb00 4003 	mla	r0, r0, r3, r4
 801da3e:	1400      	asrs	r0, r0, #16
 801da40:	f53f af37 	bmi.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801da44:	3901      	subs	r1, #1
 801da46:	4288      	cmp	r0, r1
 801da48:	f6bf af33 	bge.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801da4c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801da4e:	fb01 6303 	mla	r3, r1, r3, r6
 801da52:	141b      	asrs	r3, r3, #16
 801da54:	f53f af2d 	bmi.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801da58:	3a01      	subs	r2, #1
 801da5a:	4293      	cmp	r3, r2
 801da5c:	f6bf af29 	bge.w	801d8b2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801da60:	46a8      	mov	r8, r5
 801da62:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801da66:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 801da6a:	f1b8 0f00 	cmp.w	r8, #0
 801da6e:	dc60      	bgt.n	801db32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 801da70:	9b07      	ldr	r3, [sp, #28]
 801da72:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801da76:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801da7a:	9307      	str	r3, [sp, #28]
 801da7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801da7e:	2b00      	cmp	r3, #0
 801da80:	f340 80f8 	ble.w	801dc74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801da84:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801da88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801da8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801da8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801da92:	eef0 6a62 	vmov.f32	s13, s5
 801da96:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801da9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801da9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801daa2:	ee16 4a90 	vmov	r4, s13
 801daa6:	eef0 6a43 	vmov.f32	s13, s6
 801daaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801daae:	ee16 6a90 	vmov	r6, s13
 801dab2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801daba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dabe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dac2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dac6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801daca:	ee12 2a90 	vmov	r2, s5
 801dace:	eef0 2a47 	vmov.f32	s5, s14
 801dad2:	fb92 f3f3 	sdiv	r3, r2, r3
 801dad6:	ee13 2a10 	vmov	r2, s6
 801dada:	931f      	str	r3, [sp, #124]	@ 0x7c
 801dadc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dade:	eeb0 3a67 	vmov.f32	s6, s15
 801dae2:	fb92 f3f3 	sdiv	r3, r2, r3
 801dae6:	9320      	str	r3, [sp, #128]	@ 0x80
 801dae8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801daea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801daec:	3b01      	subs	r3, #1
 801daee:	930a      	str	r3, [sp, #40]	@ 0x28
 801daf0:	bf08      	it	eq
 801daf2:	4615      	moveq	r5, r2
 801daf4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801daf6:	bf18      	it	ne
 801daf8:	461d      	movne	r5, r3
 801dafa:	e6af      	b.n	801d85c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801dafc:	f111 0a01 	adds.w	sl, r1, #1
 801db00:	d486      	bmi.n	801da10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801db02:	45d6      	cmp	lr, sl
 801db04:	db84      	blt.n	801da10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801db06:	f110 0a01 	adds.w	sl, r0, #1
 801db0a:	d481      	bmi.n	801da10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801db0c:	4553      	cmp	r3, sl
 801db0e:	f6ff af7f 	blt.w	801da10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801db12:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801db14:	b21b      	sxth	r3, r3
 801db16:	9101      	str	r1, [sp, #4]
 801db18:	4641      	mov	r1, r8
 801db1a:	9300      	str	r3, [sp, #0]
 801db1c:	fa0f f38e 	sxth.w	r3, lr
 801db20:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801db24:	e9cd c704 	strd	ip, r7, [sp, #16]
 801db28:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801db2a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801db2c:	f7ff fdb2 	bl	801d694 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801db30:	e76e      	b.n	801da10 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801db32:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801db34:	1430      	asrs	r0, r6, #16
 801db36:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 801db38:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801db3c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db40:	1423      	asrs	r3, r4, #16
 801db42:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801db46:	fb01 3000 	mla	r0, r1, r0, r3
 801db4a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801db4c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801db50:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801db54:	8858      	ldrh	r0, [r3, #2]
 801db56:	f1be 0f00 	cmp.w	lr, #0
 801db5a:	d00b      	beq.n	801db74 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801db5c:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 801db60:	3901      	subs	r1, #1
 801db62:	0049      	lsls	r1, r1, #1
 801db64:	3102      	adds	r1, #2
 801db66:	eb03 0b01 	add.w	fp, r3, r1
 801db6a:	5a5b      	ldrh	r3, [r3, r1]
 801db6c:	930e      	str	r3, [sp, #56]	@ 0x38
 801db6e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801db72:	930f      	str	r3, [sp, #60]	@ 0x3c
 801db74:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801db78:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801db7c:	fb12 f30e 	smulbb	r3, r2, lr
 801db80:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801db84:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 801db88:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801db8c:	10db      	asrs	r3, r3, #3
 801db8e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801db92:	ea41 010c 	orr.w	r1, r1, ip
 801db96:	f1ce 0c10 	rsb	ip, lr, #16
 801db9a:	ea4b 0000 	orr.w	r0, fp, r0
 801db9e:	9f08      	ldr	r7, [sp, #32]
 801dba0:	ebac 0c02 	sub.w	ip, ip, r2
 801dba4:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dba8:	f108 38ff 	add.w	r8, r8, #4294967295
 801dbac:	4350      	muls	r0, r2
 801dbae:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dbb2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801dbb4:	fb0c 0c01 	mla	ip, ip, r1, r0
 801dbb8:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801dbba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dbbe:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 801dbc2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801dbc4:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dbc8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801dbcc:	0412      	lsls	r2, r2, #16
 801dbce:	ea4b 0101 	orr.w	r1, fp, r1
 801dbd2:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801dbd6:	fb03 c101 	mla	r1, r3, r1, ip
 801dbda:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dbde:	4302      	orrs	r2, r0
 801dbe0:	fb03 1202 	mla	r2, r3, r2, r1
 801dbe4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801dbe8:	0952      	lsrs	r2, r2, #5
 801dbea:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801dbee:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 801dbf2:	f8b9 2000 	ldrh.w	r2, [r9]
 801dbf6:	ea4b 0303 	orr.w	r3, fp, r3
 801dbfa:	1211      	asrs	r1, r2, #8
 801dbfc:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801dc00:	b29b      	uxth	r3, r3
 801dc02:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801dc06:	00d2      	lsls	r2, r2, #3
 801dc08:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801dc0c:	fb11 f107 	smulbb	r1, r1, r7
 801dc10:	1218      	asrs	r0, r3, #8
 801dc12:	fb1c fc07 	smulbb	ip, ip, r7
 801dc16:	b2d2      	uxtb	r2, r2
 801dc18:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dc1c:	fb12 f207 	smulbb	r2, r2, r7
 801dc20:	fb00 100a 	mla	r0, r0, sl, r1
 801dc24:	10d9      	asrs	r1, r3, #3
 801dc26:	00db      	lsls	r3, r3, #3
 801dc28:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dc2c:	b280      	uxth	r0, r0
 801dc2e:	b2db      	uxtb	r3, r3
 801dc30:	fb01 c10a 	mla	r1, r1, sl, ip
 801dc34:	fb03 230a 	mla	r3, r3, sl, r2
 801dc38:	1c42      	adds	r2, r0, #1
 801dc3a:	b289      	uxth	r1, r1
 801dc3c:	b29b      	uxth	r3, r3
 801dc3e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801dc42:	f101 0c01 	add.w	ip, r1, #1
 801dc46:	1c5a      	adds	r2, r3, #1
 801dc48:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801dc4c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801dc50:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dc54:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801dc56:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dc5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dc5e:	441c      	add	r4, r3
 801dc60:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801dc64:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dc66:	4310      	orrs	r0, r2
 801dc68:	441e      	add	r6, r3
 801dc6a:	ea40 000c 	orr.w	r0, r0, ip
 801dc6e:	f829 0b02 	strh.w	r0, [r9], #2
 801dc72:	e6fa      	b.n	801da6a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801dc74:	b013      	add	sp, #76	@ 0x4c
 801dc76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dc7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801dc7a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801dc7e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801dc82:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801dc86:	fb0e 4703 	mla	r7, lr, r3, r4
 801dc8a:	f1be 0f00 	cmp.w	lr, #0
 801dc8e:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 801dc92:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 801dc96:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801dc9a:	8808      	ldrh	r0, [r1, #0]
 801dc9c:	db60      	blt.n	801dd60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801dc9e:	45f1      	cmp	r9, lr
 801dca0:	dd5e      	ble.n	801dd60 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801dca2:	2c00      	cmp	r4, #0
 801dca4:	db5a      	blt.n	801dd5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801dca6:	42a3      	cmp	r3, r4
 801dca8:	dd58      	ble.n	801dd5c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801dcaa:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801dcae:	1c62      	adds	r2, r4, #1
 801dcb0:	d459      	bmi.n	801dd66 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801dcb2:	4293      	cmp	r3, r2
 801dcb4:	dd57      	ble.n	801dd66 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801dcb6:	2d00      	cmp	r5, #0
 801dcb8:	d055      	beq.n	801dd66 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801dcba:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801dcbe:	f11e 0e01 	adds.w	lr, lr, #1
 801dcc2:	d454      	bmi.n	801dd6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801dcc4:	45f1      	cmp	r9, lr
 801dcc6:	dd52      	ble.n	801dd6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801dcc8:	2e00      	cmp	r6, #0
 801dcca:	d050      	beq.n	801dd6e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801dccc:	2c00      	cmp	r4, #0
 801dcce:	db4c      	blt.n	801dd6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801dcd0:	42a3      	cmp	r3, r4
 801dcd2:	dd4a      	ble.n	801dd6a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801dcd4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801dcd8:	3401      	adds	r4, #1
 801dcda:	d405      	bmi.n	801dce8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801dcdc:	42a3      	cmp	r3, r4
 801dcde:	dd03      	ble.n	801dce8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801dce0:	b115      	cbz	r5, 801dce8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801dce2:	3301      	adds	r3, #1
 801dce4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801dce8:	fb15 f406 	smulbb	r4, r5, r6
 801dcec:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801dcf0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801dcf4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801dcf8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801dcfc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801dd00:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801dd04:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801dd08:	ea43 0c0c 	orr.w	ip, r3, ip
 801dd0c:	f1c6 0310 	rsb	r3, r6, #16
 801dd10:	ea4e 0707 	orr.w	r7, lr, r7
 801dd14:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801dd18:	1b5b      	subs	r3, r3, r5
 801dd1a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801dd1e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801dd22:	437d      	muls	r5, r7
 801dd24:	fb03 5c0c 	mla	ip, r3, ip, r5
 801dd28:	0403      	lsls	r3, r0, #16
 801dd2a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dd2e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801dd32:	4318      	orrs	r0, r3
 801dd34:	0413      	lsls	r3, r2, #16
 801dd36:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dd3a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801dd3e:	fb04 c000 	mla	r0, r4, r0, ip
 801dd42:	4313      	orrs	r3, r2
 801dd44:	fb06 0003 	mla	r0, r6, r3, r0
 801dd48:	0d43      	lsrs	r3, r0, #21
 801dd4a:	0940      	lsrs	r0, r0, #5
 801dd4c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801dd50:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801dd54:	4318      	orrs	r0, r3
 801dd56:	8008      	strh	r0, [r1, #0]
 801dd58:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dd5c:	4684      	mov	ip, r0
 801dd5e:	e7a6      	b.n	801dcae <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801dd60:	4607      	mov	r7, r0
 801dd62:	4684      	mov	ip, r0
 801dd64:	e7ab      	b.n	801dcbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dd66:	4607      	mov	r7, r0
 801dd68:	e7a9      	b.n	801dcbe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dd6a:	4602      	mov	r2, r0
 801dd6c:	e7b4      	b.n	801dcd8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801dd6e:	4602      	mov	r2, r0
 801dd70:	e7ba      	b.n	801dce8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801dd72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dd72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd76:	b08f      	sub	sp, #60	@ 0x3c
 801dd78:	461d      	mov	r5, r3
 801dd7a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 801dd7c:	9107      	str	r1, [sp, #28]
 801dd7e:	920c      	str	r2, [sp, #48]	@ 0x30
 801dd80:	6859      	ldr	r1, [r3, #4]
 801dd82:	681b      	ldr	r3, [r3, #0]
 801dd84:	900d      	str	r0, [sp, #52]	@ 0x34
 801dd86:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 801dd8a:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 801dd8e:	fb01 2707 	mla	r7, r1, r7, r2
 801dd92:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801dd96:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dd98:	f8d3 8000 	ldr.w	r8, [r3]
 801dd9c:	9b07      	ldr	r3, [sp, #28]
 801dd9e:	2b00      	cmp	r3, #0
 801dda0:	dc03      	bgt.n	801ddaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dda2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801dda4:	2b00      	cmp	r3, #0
 801dda6:	f340 8182 	ble.w	801e0ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801ddaa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ddac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ddb0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ddb4:	1e48      	subs	r0, r1, #1
 801ddb6:	f102 3cff 	add.w	ip, r2, #4294967295
 801ddba:	2d00      	cmp	r5, #0
 801ddbc:	f340 809b 	ble.w	801def6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801ddc0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ddc4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ddc8:	d406      	bmi.n	801ddd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ddca:	4586      	cmp	lr, r0
 801ddcc:	da04      	bge.n	801ddd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ddce:	2b00      	cmp	r3, #0
 801ddd0:	db02      	blt.n	801ddd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ddd2:	4563      	cmp	r3, ip
 801ddd4:	f2c0 8090 	blt.w	801def8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ddd8:	f11e 0e01 	adds.w	lr, lr, #1
 801dddc:	f100 8084 	bmi.w	801dee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dde0:	4571      	cmp	r1, lr
 801dde2:	f2c0 8081 	blt.w	801dee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801dde6:	3301      	adds	r3, #1
 801dde8:	d47e      	bmi.n	801dee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ddea:	429a      	cmp	r2, r3
 801ddec:	db7c      	blt.n	801dee8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801ddee:	46aa      	mov	sl, r5
 801ddf0:	46b9      	mov	r9, r7
 801ddf2:	f1ba 0f00 	cmp.w	sl, #0
 801ddf6:	f340 8099 	ble.w	801df2c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801ddfa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ddfc:	1421      	asrs	r1, r4, #16
 801ddfe:	ea4f 4026 	mov.w	r0, r6, asr #16
 801de02:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801de06:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801de0a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801de0e:	f100 80d1 	bmi.w	801dfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801de12:	f10e 3bff 	add.w	fp, lr, #4294967295
 801de16:	4559      	cmp	r1, fp
 801de18:	f280 80cc 	bge.w	801dfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801de1c:	2800      	cmp	r0, #0
 801de1e:	f2c0 80c9 	blt.w	801dfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801de22:	f103 3bff 	add.w	fp, r3, #4294967295
 801de26:	4558      	cmp	r0, fp
 801de28:	f280 80c4 	bge.w	801dfb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801de2c:	fa0f fe8e 	sxth.w	lr, lr
 801de30:	fb00 110e 	mla	r1, r0, lr, r1
 801de34:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801de38:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801de3c:	8841      	ldrh	r1, [r0, #2]
 801de3e:	f1bc 0f00 	cmp.w	ip, #0
 801de42:	d00b      	beq.n	801de5c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801de44:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 801de48:	3b01      	subs	r3, #1
 801de4a:	005b      	lsls	r3, r3, #1
 801de4c:	3302      	adds	r3, #2
 801de4e:	eb00 0e03 	add.w	lr, r0, r3
 801de52:	5ac3      	ldrh	r3, [r0, r3]
 801de54:	9308      	str	r3, [sp, #32]
 801de56:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801de5a:	9309      	str	r3, [sp, #36]	@ 0x24
 801de5c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801de60:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 801de64:	fb12 f30c 	smulbb	r3, r2, ip
 801de68:	f1cc 0e10 	rsb	lr, ip, #16
 801de6c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801de70:	10db      	asrs	r3, r3, #3
 801de72:	ebae 0e02 	sub.w	lr, lr, r2
 801de76:	ea40 000b 	orr.w	r0, r0, fp
 801de7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801de7e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801de82:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801de86:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801de8a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801de8e:	ea4b 0101 	orr.w	r1, fp, r1
 801de92:	4351      	muls	r1, r2
 801de94:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801de96:	fb0e 1e00 	mla	lr, lr, r0, r1
 801de9a:	0410      	lsls	r0, r2, #16
 801de9c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801dea0:	9908      	ldr	r1, [sp, #32]
 801dea2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801dea6:	4310      	orrs	r0, r2
 801dea8:	9a08      	ldr	r2, [sp, #32]
 801deaa:	0412      	lsls	r2, r2, #16
 801deac:	fb03 e000 	mla	r0, r3, r0, lr
 801deb0:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 801deb4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801deb8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801debc:	ea42 020e 	orr.w	r2, r2, lr
 801dec0:	fb03 0302 	mla	r3, r3, r2, r0
 801dec4:	0d5a      	lsrs	r2, r3, #21
 801dec6:	095b      	lsrs	r3, r3, #5
 801dec8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801decc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ded0:	4313      	orrs	r3, r2
 801ded2:	f8a9 3000 	strh.w	r3, [r9]
 801ded6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801ded8:	f109 0902 	add.w	r9, r9, #2
 801dedc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dee0:	441c      	add	r4, r3
 801dee2:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801dee4:	441e      	add	r6, r3
 801dee6:	e784      	b.n	801ddf2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dee8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801deea:	3d01      	subs	r5, #1
 801deec:	3702      	adds	r7, #2
 801deee:	441c      	add	r4, r3
 801def0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801def2:	441e      	add	r6, r3
 801def4:	e761      	b.n	801ddba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801def6:	d01d      	beq.n	801df34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801def8:	1e6b      	subs	r3, r5, #1
 801defa:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801defc:	fb00 4003 	mla	r0, r0, r3, r4
 801df00:	1400      	asrs	r0, r0, #16
 801df02:	f53f af74 	bmi.w	801ddee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801df06:	3901      	subs	r1, #1
 801df08:	4288      	cmp	r0, r1
 801df0a:	f6bf af70 	bge.w	801ddee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801df0e:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801df10:	fb01 6303 	mla	r3, r1, r3, r6
 801df14:	141b      	asrs	r3, r3, #16
 801df16:	f53f af6a 	bmi.w	801ddee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801df1a:	3a01      	subs	r2, #1
 801df1c:	4293      	cmp	r3, r2
 801df1e:	f6bf af66 	bge.w	801ddee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801df22:	46a9      	mov	r9, r5
 801df24:	46ba      	mov	sl, r7
 801df26:	f1b9 0f00 	cmp.w	r9, #0
 801df2a:	dc5b      	bgt.n	801dfe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801df2c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801df30:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801df34:	9b07      	ldr	r3, [sp, #28]
 801df36:	2b00      	cmp	r3, #0
 801df38:	f340 80b9 	ble.w	801e0ae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 801df3c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801df40:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801df42:	ee30 0a04 	vadd.f32	s0, s0, s8
 801df46:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801df4a:	eef0 6a62 	vmov.f32	s13, s5
 801df4e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801df52:	ee31 1a05 	vadd.f32	s2, s2, s10
 801df56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df5a:	ee16 4a90 	vmov	r4, s13
 801df5e:	eef0 6a43 	vmov.f32	s13, s6
 801df62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801df66:	ee16 6a90 	vmov	r6, s13
 801df6a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801df6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801df72:	ee77 2a62 	vsub.f32	s5, s14, s5
 801df76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801df7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801df7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801df82:	ee12 2a90 	vmov	r2, s5
 801df86:	eef0 2a47 	vmov.f32	s5, s14
 801df8a:	fb92 f3f3 	sdiv	r3, r2, r3
 801df8e:	ee13 2a10 	vmov	r2, s6
 801df92:	931b      	str	r3, [sp, #108]	@ 0x6c
 801df94:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801df96:	eeb0 3a67 	vmov.f32	s6, s15
 801df9a:	fb92 f3f3 	sdiv	r3, r2, r3
 801df9e:	931c      	str	r3, [sp, #112]	@ 0x70
 801dfa0:	9b07      	ldr	r3, [sp, #28]
 801dfa2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801dfa4:	3b01      	subs	r3, #1
 801dfa6:	9307      	str	r3, [sp, #28]
 801dfa8:	bf08      	it	eq
 801dfaa:	4615      	moveq	r5, r2
 801dfac:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801dfae:	bf18      	it	ne
 801dfb0:	461d      	movne	r5, r3
 801dfb2:	e6f3      	b.n	801dd9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dfb4:	f111 0b01 	adds.w	fp, r1, #1
 801dfb8:	d48d      	bmi.n	801ded6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dfba:	45de      	cmp	lr, fp
 801dfbc:	db8b      	blt.n	801ded6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dfbe:	f110 0b01 	adds.w	fp, r0, #1
 801dfc2:	d488      	bmi.n	801ded6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dfc4:	455b      	cmp	r3, fp
 801dfc6:	db86      	blt.n	801ded6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dfc8:	b21b      	sxth	r3, r3
 801dfca:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dfce:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dfd2:	9300      	str	r3, [sp, #0]
 801dfd4:	4642      	mov	r2, r8
 801dfd6:	fa0f f38e 	sxth.w	r3, lr
 801dfda:	4649      	mov	r1, r9
 801dfdc:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801dfde:	f7ff fe4c 	bl	801dc7a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dfe2:	e778      	b.n	801ded6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dfe4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801dfe6:	1420      	asrs	r0, r4, #16
 801dfe8:	1431      	asrs	r1, r6, #16
 801dfea:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dfee:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dff2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dff6:	fb03 0101 	mla	r1, r3, r1, r0
 801dffa:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dffe:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e002:	8841      	ldrh	r1, [r0, #2]
 801e004:	f1be 0f00 	cmp.w	lr, #0
 801e008:	d00b      	beq.n	801e022 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801e00a:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 801e00e:	3b01      	subs	r3, #1
 801e010:	005b      	lsls	r3, r3, #1
 801e012:	3302      	adds	r3, #2
 801e014:	eb00 0b03 	add.w	fp, r0, r3
 801e018:	5ac3      	ldrh	r3, [r0, r3]
 801e01a:	930a      	str	r3, [sp, #40]	@ 0x28
 801e01c:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e020:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e022:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e026:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e02a:	fb12 f30e 	smulbb	r3, r2, lr
 801e02e:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e032:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e036:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e03a:	10db      	asrs	r3, r3, #3
 801e03c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e040:	ea40 000c 	orr.w	r0, r0, ip
 801e044:	f1ce 0c10 	rsb	ip, lr, #16
 801e048:	ea4b 0101 	orr.w	r1, fp, r1
 801e04c:	f109 39ff 	add.w	r9, r9, #4294967295
 801e050:	ebac 0c02 	sub.w	ip, ip, r2
 801e054:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e058:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e05c:	4351      	muls	r1, r2
 801e05e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e060:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e064:	990a      	ldr	r1, [sp, #40]	@ 0x28
 801e066:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e06a:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 801e06e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801e070:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801e074:	0412      	lsls	r2, r2, #16
 801e076:	ea4b 0000 	orr.w	r0, fp, r0
 801e07a:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 801e07e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e082:	fb03 c000 	mla	r0, r3, r0, ip
 801e086:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e08a:	ea42 0b0b 	orr.w	fp, r2, fp
 801e08e:	fb03 000b 	mla	r0, r3, fp, r0
 801e092:	0d43      	lsrs	r3, r0, #21
 801e094:	0940      	lsrs	r0, r0, #5
 801e096:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e09a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e09e:	4318      	orrs	r0, r3
 801e0a0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801e0a2:	441c      	add	r4, r3
 801e0a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801e0a6:	f82a 0b02 	strh.w	r0, [sl], #2
 801e0aa:	441e      	add	r6, r3
 801e0ac:	e73b      	b.n	801df26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e0ae:	b00f      	add	sp, #60	@ 0x3c
 801e0b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e0b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0b8:	b085      	sub	sp, #20
 801e0ba:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801e0be:	9102      	str	r1, [sp, #8]
 801e0c0:	2c00      	cmp	r4, #0
 801e0c2:	fb04 7103 	mla	r1, r4, r3, r7
 801e0c6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801e0ca:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801e0ce:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e0d2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801e0d6:	f2c0 811b 	blt.w	801e310 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e0da:	45a6      	cmp	lr, r4
 801e0dc:	f340 8118 	ble.w	801e310 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e0e0:	2f00      	cmp	r7, #0
 801e0e2:	f2c0 8113 	blt.w	801e30c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e0e6:	42bb      	cmp	r3, r7
 801e0e8:	f340 8110 	ble.w	801e30c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e0ec:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e0f0:	1c7a      	adds	r2, r7, #1
 801e0f2:	f100 8110 	bmi.w	801e316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e0f6:	4293      	cmp	r3, r2
 801e0f8:	f340 810d 	ble.w	801e316 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e0fc:	2e00      	cmp	r6, #0
 801e0fe:	f000 810c 	beq.w	801e31a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e102:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e106:	3401      	adds	r4, #1
 801e108:	f100 810b 	bmi.w	801e322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e10c:	45a6      	cmp	lr, r4
 801e10e:	f340 8108 	ble.w	801e322 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e112:	2800      	cmp	r0, #0
 801e114:	f000 8108 	beq.w	801e328 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e118:	2f00      	cmp	r7, #0
 801e11a:	f2c0 8100 	blt.w	801e31e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e11e:	42bb      	cmp	r3, r7
 801e120:	f340 80fd 	ble.w	801e31e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e124:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e128:	3701      	adds	r7, #1
 801e12a:	f100 8100 	bmi.w	801e32e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e12e:	42bb      	cmp	r3, r7
 801e130:	f340 80fd 	ble.w	801e32e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e134:	2e00      	cmp	r6, #0
 801e136:	f000 80fc 	beq.w	801e332 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e13a:	3301      	adds	r3, #1
 801e13c:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e140:	b2b6      	uxth	r6, r6
 801e142:	b280      	uxth	r0, r0
 801e144:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e148:	fb00 fe06 	mul.w	lr, r0, r6
 801e14c:	0136      	lsls	r6, r6, #4
 801e14e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e152:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e156:	eba6 070e 	sub.w	r7, r6, lr
 801e15a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801e15e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e162:	b280      	uxth	r0, r0
 801e164:	b2bf      	uxth	r7, r7
 801e166:	1a1b      	subs	r3, r3, r0
 801e168:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e16c:	fb0a f607 	mul.w	r6, sl, r7
 801e170:	b29b      	uxth	r3, r3
 801e172:	fb0b 6603 	mla	r6, fp, r3, r6
 801e176:	fb00 6609 	mla	r6, r0, r9, r6
 801e17a:	fb0e 6608 	mla	r6, lr, r8, r6
 801e17e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e182:	9600      	str	r6, [sp, #0]
 801e184:	2e00      	cmp	r6, #0
 801e186:	f000 80be 	beq.w	801e306 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e18a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e18e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801e192:	9e02      	ldr	r6, [sp, #8]
 801e194:	fb0b fc0c 	mul.w	ip, fp, ip
 801e198:	fb0b f505 	mul.w	r5, fp, r5
 801e19c:	8836      	ldrh	r6, [r6, #0]
 801e19e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e1a2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e1a6:	9501      	str	r5, [sp, #4]
 801e1a8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801e1ac:	44dc      	add	ip, fp
 801e1ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e1b2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801e1b6:	9503      	str	r5, [sp, #12]
 801e1b8:	9d01      	ldr	r5, [sp, #4]
 801e1ba:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801e1be:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e1c2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801e1c6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e1ca:	fb0a fc0c 	mul.w	ip, sl, ip
 801e1ce:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e1d2:	fb0a fa01 	mul.w	sl, sl, r1
 801e1d6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e1da:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e1de:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801e1e2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e1e6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e1ea:	4465      	add	r5, ip
 801e1ec:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801e1f0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801e1f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1f8:	fb09 fc0c 	mul.w	ip, r9, ip
 801e1fc:	0a2d      	lsrs	r5, r5, #8
 801e1fe:	fb09 f904 	mul.w	r9, r9, r4
 801e202:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e206:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e20a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801e20e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801e212:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801e216:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e21a:	437d      	muls	r5, r7
 801e21c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e220:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801e224:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e228:	4461      	add	r1, ip
 801e22a:	fb08 f404 	mul.w	r4, r8, r4
 801e22e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e232:	fb08 f802 	mul.w	r8, r8, r2
 801e236:	0a09      	lsrs	r1, r1, #8
 801e238:	0a22      	lsrs	r2, r4, #8
 801e23a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801e23e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801e242:	fb07 f70a 	mul.w	r7, r7, sl
 801e246:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e24a:	4414      	add	r4, r2
 801e24c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801e250:	0a24      	lsrs	r4, r4, #8
 801e252:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e256:	9a03      	ldr	r2, [sp, #12]
 801e258:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801e25c:	fb02 5503 	mla	r5, r2, r3, r5
 801e260:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e264:	9a00      	ldr	r2, [sp, #0]
 801e266:	fb04 540e 	mla	r4, r4, lr, r5
 801e26a:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801e26e:	1235      	asrs	r5, r6, #8
 801e270:	fb01 4100 	mla	r1, r1, r0, r4
 801e274:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e278:	0a09      	lsrs	r1, r1, #8
 801e27a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801e27e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801e282:	fb03 7101 	mla	r1, r3, r1, r7
 801e286:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e28a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801e28e:	fb00 e101 	mla	r1, r0, r1, lr
 801e292:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801e296:	b287      	uxth	r7, r0
 801e298:	0a09      	lsrs	r1, r1, #8
 801e29a:	437a      	muls	r2, r7
 801e29c:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801e2a0:	1c53      	adds	r3, r2, #1
 801e2a2:	4321      	orrs	r1, r4
 801e2a4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e2a8:	0c0a      	lsrs	r2, r1, #16
 801e2aa:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e2ae:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e2b2:	b2c8      	uxtb	r0, r1
 801e2b4:	fb12 f207 	smulbb	r2, r2, r7
 801e2b8:	fb14 f407 	smulbb	r4, r4, r7
 801e2bc:	b2db      	uxtb	r3, r3
 801e2be:	fb10 f007 	smulbb	r0, r0, r7
 801e2c2:	fb05 2503 	mla	r5, r5, r3, r2
 801e2c6:	10f2      	asrs	r2, r6, #3
 801e2c8:	00f6      	lsls	r6, r6, #3
 801e2ca:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e2ce:	b2ad      	uxth	r5, r5
 801e2d0:	b2f6      	uxtb	r6, r6
 801e2d2:	fb02 4203 	mla	r2, r2, r3, r4
 801e2d6:	fb06 0303 	mla	r3, r6, r3, r0
 801e2da:	b294      	uxth	r4, r2
 801e2dc:	b299      	uxth	r1, r3
 801e2de:	1c6b      	adds	r3, r5, #1
 801e2e0:	1c62      	adds	r2, r4, #1
 801e2e2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e2e6:	1c4b      	adds	r3, r1, #1
 801e2e8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e2ec:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e2f0:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e2f4:	0952      	lsrs	r2, r2, #5
 801e2f6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e2fa:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e2fe:	432b      	orrs	r3, r5
 801e300:	4313      	orrs	r3, r2
 801e302:	9a02      	ldr	r2, [sp, #8]
 801e304:	8013      	strh	r3, [r2, #0]
 801e306:	b005      	add	sp, #20
 801e308:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e30c:	2500      	movs	r5, #0
 801e30e:	e6ef      	b.n	801e0f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e310:	2100      	movs	r1, #0
 801e312:	460d      	mov	r5, r1
 801e314:	e6f7      	b.n	801e106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e316:	2100      	movs	r1, #0
 801e318:	e6f5      	b.n	801e106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e31a:	4631      	mov	r1, r6
 801e31c:	e6f3      	b.n	801e106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e31e:	2400      	movs	r4, #0
 801e320:	e702      	b.n	801e128 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e322:	2200      	movs	r2, #0
 801e324:	4614      	mov	r4, r2
 801e326:	e70b      	b.n	801e140 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e328:	4602      	mov	r2, r0
 801e32a:	4604      	mov	r4, r0
 801e32c:	e708      	b.n	801e140 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e32e:	2200      	movs	r2, #0
 801e330:	e706      	b.n	801e140 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e332:	4632      	mov	r2, r6
 801e334:	e704      	b.n	801e140 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e336 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e336:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e33a:	b09d      	sub	sp, #116	@ 0x74
 801e33c:	9219      	str	r2, [sp, #100]	@ 0x64
 801e33e:	9307      	str	r3, [sp, #28]
 801e340:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 801e342:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 801e346:	901b      	str	r0, [sp, #108]	@ 0x6c
 801e348:	931a      	str	r3, [sp, #104]	@ 0x68
 801e34a:	6850      	ldr	r0, [r2, #4]
 801e34c:	9117      	str	r1, [sp, #92]	@ 0x5c
 801e34e:	6812      	ldr	r2, [r2, #0]
 801e350:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 801e354:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 801e358:	fb00 1303 	mla	r3, r0, r3, r1
 801e35c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e360:	930a      	str	r3, [sp, #40]	@ 0x28
 801e362:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e364:	681b      	ldr	r3, [r3, #0]
 801e366:	9310      	str	r3, [sp, #64]	@ 0x40
 801e368:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801e36c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e36e:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e370:	2b00      	cmp	r3, #0
 801e372:	dc03      	bgt.n	801e37c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e374:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801e376:	2b00      	cmp	r3, #0
 801e378:	f340 8375 	ble.w	801ea66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e37c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e37e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e382:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e386:	1e48      	subs	r0, r1, #1
 801e388:	1e57      	subs	r7, r2, #1
 801e38a:	9b07      	ldr	r3, [sp, #28]
 801e38c:	2b00      	cmp	r3, #0
 801e38e:	f340 818e 	ble.w	801e6ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e392:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e396:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e39a:	d406      	bmi.n	801e3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e39c:	4584      	cmp	ip, r0
 801e39e:	da04      	bge.n	801e3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e3a0:	2b00      	cmp	r3, #0
 801e3a2:	db02      	blt.n	801e3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e3a4:	42bb      	cmp	r3, r7
 801e3a6:	f2c0 8183 	blt.w	801e6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e3aa:	f11c 0c01 	adds.w	ip, ip, #1
 801e3ae:	f100 8173 	bmi.w	801e698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e3b2:	4561      	cmp	r1, ip
 801e3b4:	f2c0 8170 	blt.w	801e698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e3b8:	3301      	adds	r3, #1
 801e3ba:	f100 816d 	bmi.w	801e698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e3be:	429a      	cmp	r2, r3
 801e3c0:	f2c0 816a 	blt.w	801e698 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e3c4:	9b07      	ldr	r3, [sp, #28]
 801e3c6:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801e3c8:	9318      	str	r3, [sp, #96]	@ 0x60
 801e3ca:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e3cc:	2b00      	cmp	r3, #0
 801e3ce:	f340 818c 	ble.w	801e6ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e3d2:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 801e3d4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e3d8:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e3da:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e3de:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e3e2:	1422      	asrs	r2, r4, #16
 801e3e4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e3e8:	689b      	ldr	r3, [r3, #8]
 801e3ea:	f100 81cd 	bmi.w	801e788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e3ee:	f103 38ff 	add.w	r8, r3, #4294967295
 801e3f2:	4542      	cmp	r2, r8
 801e3f4:	f280 81c8 	bge.w	801e788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e3f8:	f1bc 0f00 	cmp.w	ip, #0
 801e3fc:	f2c0 81c4 	blt.w	801e788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e400:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e404:	45c4      	cmp	ip, r8
 801e406:	f280 81bf 	bge.w	801e788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e40a:	b21b      	sxth	r3, r3
 801e40c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e40e:	fb0c 2203 	mla	r2, ip, r3, r2
 801e412:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e416:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e41a:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e41e:	2800      	cmp	r0, #0
 801e420:	f000 81a9 	beq.w	801e776 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e424:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e428:	950c      	str	r5, [sp, #48]	@ 0x30
 801e42a:	0e2d      	lsrs	r5, r5, #24
 801e42c:	9513      	str	r5, [sp, #76]	@ 0x4c
 801e42e:	b181      	cbz	r1, 801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e430:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801e434:	3b01      	subs	r3, #1
 801e436:	009b      	lsls	r3, r3, #2
 801e438:	3304      	adds	r3, #4
 801e43a:	eb08 0c03 	add.w	ip, r8, r3
 801e43e:	f858 3003 	ldr.w	r3, [r8, r3]
 801e442:	9308      	str	r3, [sp, #32]
 801e444:	0e1b      	lsrs	r3, r3, #24
 801e446:	9311      	str	r3, [sp, #68]	@ 0x44
 801e448:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e44c:	930d      	str	r3, [sp, #52]	@ 0x34
 801e44e:	0e1b      	lsrs	r3, r3, #24
 801e450:	9314      	str	r3, [sp, #80]	@ 0x50
 801e452:	b280      	uxth	r0, r0
 801e454:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e456:	b289      	uxth	r1, r1
 801e458:	fb00 f901 	mul.w	r9, r0, r1
 801e45c:	0100      	lsls	r0, r0, #4
 801e45e:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e462:	eba0 0809 	sub.w	r8, r0, r9
 801e466:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 801e46a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801e46c:	b289      	uxth	r1, r1
 801e46e:	fa1f f888 	uxth.w	r8, r8
 801e472:	1a5b      	subs	r3, r3, r1
 801e474:	fb08 f000 	mul.w	r0, r8, r0
 801e478:	b29b      	uxth	r3, r3
 801e47a:	fb03 000e 	mla	r0, r3, lr, r0
 801e47e:	fb01 0005 	mla	r0, r1, r5, r0
 801e482:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e484:	fb09 0005 	mla	r0, r9, r5, r0
 801e488:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e48c:	2800      	cmp	r0, #0
 801e48e:	f000 80fa 	beq.w	801e686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e492:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801e496:	d01b      	beq.n	801e4d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e498:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801e49c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e4a0:	fb0e fa0a 	mul.w	sl, lr, sl
 801e4a4:	fb0e fe02 	mul.w	lr, lr, r2
 801e4a8:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e4ac:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e4b0:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801e4b4:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e4b8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e4bc:	4452      	add	r2, sl
 801e4be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e4c2:	0a12      	lsrs	r2, r2, #8
 801e4c4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e4c8:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801e4cc:	ea42 020c 	orr.w	r2, r2, ip
 801e4d0:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e4d2:	2dff      	cmp	r5, #255	@ 0xff
 801e4d4:	d021      	beq.n	801e51a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e4d6:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e4d8:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e4dc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e4de:	fb05 fb0b 	mul.w	fp, r5, fp
 801e4e2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e4e4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e4e8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801e4ea:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e4ee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e4f2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e4fa:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e4fe:	44de      	add	lr, fp
 801e500:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e504:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e508:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e50c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e510:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e514:	ea4e 050a 	orr.w	r5, lr, sl
 801e518:	950c      	str	r5, [sp, #48]	@ 0x30
 801e51a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e51c:	2dff      	cmp	r5, #255	@ 0xff
 801e51e:	d021      	beq.n	801e564 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e520:	9d08      	ldr	r5, [sp, #32]
 801e522:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e526:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e528:	fb05 fb0b 	mul.w	fp, r5, fp
 801e52c:	9d08      	ldr	r5, [sp, #32]
 801e52e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e532:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801e534:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e538:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e53c:	fb05 fa0a 	mul.w	sl, r5, sl
 801e540:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e544:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e548:	44de      	add	lr, fp
 801e54a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e54e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e552:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e556:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e55a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e55e:	ea4e 050a 	orr.w	r5, lr, sl
 801e562:	9508      	str	r5, [sp, #32]
 801e564:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e566:	2dff      	cmp	r5, #255	@ 0xff
 801e568:	d021      	beq.n	801e5ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e56a:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e56c:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801e570:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e572:	fb05 fb0b 	mul.w	fp, r5, fp
 801e576:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e578:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e57c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801e57e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e582:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801e586:	fb05 fa0a 	mul.w	sl, r5, sl
 801e58a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e58e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801e592:	44de      	add	lr, fp
 801e594:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e598:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e59c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5a0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801e5a4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e5a8:	ea4e 050a 	orr.w	r5, lr, sl
 801e5ac:	950d      	str	r5, [sp, #52]	@ 0x34
 801e5ae:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e5b0:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801e5b4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801e5b8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e5bc:	9d08      	ldr	r5, [sp, #32]
 801e5be:	fb08 fc0c 	mul.w	ip, r8, ip
 801e5c2:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e5c6:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e5ca:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801e5cc:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e5d0:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801e5d4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801e5d6:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e5da:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801e5de:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e5e0:	fb08 f80e 	mul.w	r8, r8, lr
 801e5e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5e8:	fb03 8202 	mla	r2, r3, r2, r8
 801e5ec:	9b08      	ldr	r3, [sp, #32]
 801e5ee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e5f2:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 801e5f6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e5f8:	fb01 220a 	mla	r2, r1, sl, r2
 801e5fc:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 801e600:	883b      	ldrh	r3, [r7, #0]
 801e602:	fb09 2901 	mla	r9, r9, r1, r2
 801e606:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e608:	1219      	asrs	r1, r3, #8
 801e60a:	4342      	muls	r2, r0
 801e60c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e610:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e614:	1c50      	adds	r0, r2, #1
 801e616:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801e61a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e61e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e622:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e626:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e62a:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e62e:	fa5f fc8c 	uxtb.w	ip, ip
 801e632:	fb12 f205 	smulbb	r2, r2, r5
 801e636:	b2c0      	uxtb	r0, r0
 801e638:	fb1c fc05 	smulbb	ip, ip, r5
 801e63c:	fb01 2100 	mla	r1, r1, r0, r2
 801e640:	10da      	asrs	r2, r3, #3
 801e642:	fb1e fe05 	smulbb	lr, lr, r5
 801e646:	00db      	lsls	r3, r3, #3
 801e648:	b289      	uxth	r1, r1
 801e64a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e64e:	b2db      	uxtb	r3, r3
 801e650:	fb02 e200 	mla	r2, r2, r0, lr
 801e654:	fb03 c300 	mla	r3, r3, r0, ip
 801e658:	b292      	uxth	r2, r2
 801e65a:	fa1f fc83 	uxth.w	ip, r3
 801e65e:	1c4b      	adds	r3, r1, #1
 801e660:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e664:	f10c 0301 	add.w	r3, ip, #1
 801e668:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e66c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801e670:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e674:	430b      	orrs	r3, r1
 801e676:	1c51      	adds	r1, r2, #1
 801e678:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e67c:	0952      	lsrs	r2, r2, #5
 801e67e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e682:	4313      	orrs	r3, r2
 801e684:	803b      	strh	r3, [r7, #0]
 801e686:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e688:	3702      	adds	r7, #2
 801e68a:	441c      	add	r4, r3
 801e68c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e68e:	441e      	add	r6, r3
 801e690:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801e692:	3b01      	subs	r3, #1
 801e694:	9318      	str	r3, [sp, #96]	@ 0x60
 801e696:	e698      	b.n	801e3ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e698:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801e69a:	441c      	add	r4, r3
 801e69c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e69e:	441e      	add	r6, r3
 801e6a0:	9b07      	ldr	r3, [sp, #28]
 801e6a2:	3b01      	subs	r3, #1
 801e6a4:	9307      	str	r3, [sp, #28]
 801e6a6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6a8:	3302      	adds	r3, #2
 801e6aa:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6ac:	e66d      	b.n	801e38a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e6ae:	d023      	beq.n	801e6f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e6b0:	9b07      	ldr	r3, [sp, #28]
 801e6b2:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 801e6b4:	3b01      	subs	r3, #1
 801e6b6:	fb00 4003 	mla	r0, r0, r3, r4
 801e6ba:	1400      	asrs	r0, r0, #16
 801e6bc:	f53f ae82 	bmi.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e6c0:	3901      	subs	r1, #1
 801e6c2:	4288      	cmp	r0, r1
 801e6c4:	f6bf ae7e 	bge.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e6c8:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801e6ca:	fb01 6303 	mla	r3, r1, r3, r6
 801e6ce:	141b      	asrs	r3, r3, #16
 801e6d0:	f53f ae78 	bmi.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e6d4:	3a01      	subs	r2, #1
 801e6d6:	4293      	cmp	r3, r2
 801e6d8:	f6bf ae74 	bge.w	801e3c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e6dc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e6e0:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 801e6e4:	f1bb 0f00 	cmp.w	fp, #0
 801e6e8:	dc6c      	bgt.n	801e7c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e6ea:	9b07      	ldr	r3, [sp, #28]
 801e6ec:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e6f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6f2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e6f6:	930a      	str	r3, [sp, #40]	@ 0x28
 801e6f8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e6fa:	2b00      	cmp	r3, #0
 801e6fc:	f340 81b3 	ble.w	801ea66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e700:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e704:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e706:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e70a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e70e:	eef0 6a62 	vmov.f32	s13, s5
 801e712:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e716:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e71a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e71e:	ee16 4a90 	vmov	r4, s13
 801e722:	eef0 6a43 	vmov.f32	s13, s6
 801e726:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e72a:	ee16 6a90 	vmov	r6, s13
 801e72e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e732:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e736:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e73a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e73e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e742:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e746:	ee12 2a90 	vmov	r2, s5
 801e74a:	eef0 2a47 	vmov.f32	s5, s14
 801e74e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e752:	ee13 2a10 	vmov	r2, s6
 801e756:	9329      	str	r3, [sp, #164]	@ 0xa4
 801e758:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e75a:	eeb0 3a67 	vmov.f32	s6, s15
 801e75e:	fb92 f3f3 	sdiv	r3, r2, r3
 801e762:	932a      	str	r3, [sp, #168]	@ 0xa8
 801e764:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801e766:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 801e768:	3b01      	subs	r3, #1
 801e76a:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e76c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e76e:	bf08      	it	eq
 801e770:	4613      	moveq	r3, r2
 801e772:	9307      	str	r3, [sp, #28]
 801e774:	e5fb      	b.n	801e36e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e776:	2900      	cmp	r1, #0
 801e778:	f43f ae6b 	beq.w	801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e77c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e780:	9308      	str	r3, [sp, #32]
 801e782:	0e1b      	lsrs	r3, r3, #24
 801e784:	9311      	str	r3, [sp, #68]	@ 0x44
 801e786:	e664      	b.n	801e452 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e788:	f112 0801 	adds.w	r8, r2, #1
 801e78c:	f53f af7b 	bmi.w	801e686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e790:	4543      	cmp	r3, r8
 801e792:	f6ff af78 	blt.w	801e686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e796:	f11c 0801 	adds.w	r8, ip, #1
 801e79a:	f53f af74 	bmi.w	801e686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e79e:	45c6      	cmp	lr, r8
 801e7a0:	f6ff af71 	blt.w	801e686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e7a4:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801e7a6:	b21b      	sxth	r3, r3
 801e7a8:	9201      	str	r2, [sp, #4]
 801e7aa:	fa0f f28e 	sxth.w	r2, lr
 801e7ae:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e7b2:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e7b6:	9200      	str	r2, [sp, #0]
 801e7b8:	4639      	mov	r1, r7
 801e7ba:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801e7bc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801e7be:	f7ff fc79 	bl	801e0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e7c2:	e760      	b.n	801e686 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e7c4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 801e7c6:	1427      	asrs	r7, r4, #16
 801e7c8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801e7ca:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e7ce:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e7d2:	1433      	asrs	r3, r6, #16
 801e7d4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e7d8:	fb01 7303 	mla	r3, r1, r3, r7
 801e7dc:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e7e0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e7e4:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e7e8:	2a00      	cmp	r2, #0
 801e7ea:	f000 8133 	beq.w	801ea54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e7ee:	687d      	ldr	r5, [r7, #4]
 801e7f0:	950e      	str	r5, [sp, #56]	@ 0x38
 801e7f2:	0e2d      	lsrs	r5, r5, #24
 801e7f4:	9515      	str	r5, [sp, #84]	@ 0x54
 801e7f6:	b178      	cbz	r0, 801e818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e7f8:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 801e7fc:	3901      	subs	r1, #1
 801e7fe:	0089      	lsls	r1, r1, #2
 801e800:	3104      	adds	r1, #4
 801e802:	eb07 0e01 	add.w	lr, r7, r1
 801e806:	5879      	ldr	r1, [r7, r1]
 801e808:	9109      	str	r1, [sp, #36]	@ 0x24
 801e80a:	0e09      	lsrs	r1, r1, #24
 801e80c:	9112      	str	r1, [sp, #72]	@ 0x48
 801e80e:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e812:	910f      	str	r1, [sp, #60]	@ 0x3c
 801e814:	0e09      	lsrs	r1, r1, #24
 801e816:	9116      	str	r1, [sp, #88]	@ 0x58
 801e818:	b292      	uxth	r2, r2
 801e81a:	9915      	ldr	r1, [sp, #84]	@ 0x54
 801e81c:	b280      	uxth	r0, r0
 801e81e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e820:	fb02 f800 	mul.w	r8, r2, r0
 801e824:	0112      	lsls	r2, r2, #4
 801e826:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e82a:	eba2 0e08 	sub.w	lr, r2, r8
 801e82e:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801e832:	b280      	uxth	r0, r0
 801e834:	fa1f fe8e 	uxth.w	lr, lr
 801e838:	1a12      	subs	r2, r2, r0
 801e83a:	fb0e f101 	mul.w	r1, lr, r1
 801e83e:	b292      	uxth	r2, r2
 801e840:	fb02 110c 	mla	r1, r2, ip, r1
 801e844:	fb00 1105 	mla	r1, r0, r5, r1
 801e848:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e84a:	fb08 1105 	mla	r1, r8, r5, r1
 801e84e:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e852:	2900      	cmp	r1, #0
 801e854:	f000 80f5 	beq.w	801ea42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e858:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801e85c:	d019      	beq.n	801e892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e85e:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801e862:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e866:	fb0c fa0a 	mul.w	sl, ip, sl
 801e86a:	fb0c fc03 	mul.w	ip, ip, r3
 801e86e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e872:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801e876:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801e87a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e87e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e882:	4453      	add	r3, sl
 801e884:	0a3f      	lsrs	r7, r7, #8
 801e886:	0a1b      	lsrs	r3, r3, #8
 801e888:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801e88c:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801e890:	433b      	orrs	r3, r7
 801e892:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e894:	2dff      	cmp	r5, #255	@ 0xff
 801e896:	d020      	beq.n	801e8da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e898:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e89a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e89e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e8a0:	436f      	muls	r7, r5
 801e8a2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e8a4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e8a8:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e8ac:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801e8ae:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e8b2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e8b6:	fb05 fa0a 	mul.w	sl, r5, sl
 801e8ba:	44bc      	add	ip, r7
 801e8bc:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e8c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e8c8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e8cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e8d0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e8d4:	ea4c 050a 	orr.w	r5, ip, sl
 801e8d8:	950e      	str	r5, [sp, #56]	@ 0x38
 801e8da:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e8dc:	2dff      	cmp	r5, #255	@ 0xff
 801e8de:	d020      	beq.n	801e922 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e8e0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e8e2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e8e6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e8e8:	436f      	muls	r7, r5
 801e8ea:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e8ec:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e8f0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e8f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801e8f6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e8fa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e8fe:	fb05 fa0a 	mul.w	sl, r5, sl
 801e902:	44bc      	add	ip, r7
 801e904:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e908:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e90c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e910:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e914:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e918:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e91c:	ea4c 050a 	orr.w	r5, ip, sl
 801e920:	9509      	str	r5, [sp, #36]	@ 0x24
 801e922:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e924:	2dff      	cmp	r5, #255	@ 0xff
 801e926:	d020      	beq.n	801e96a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e928:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e92a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e92e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e930:	436f      	muls	r7, r5
 801e932:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e934:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e938:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801e93c:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801e93e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801e942:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e946:	fb05 fa0a 	mul.w	sl, r5, sl
 801e94a:	44bc      	add	ip, r7
 801e94c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801e950:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e954:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e958:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801e95c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e960:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801e964:	ea4c 050a 	orr.w	r5, ip, sl
 801e968:	950f      	str	r5, [sp, #60]	@ 0x3c
 801e96a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e96c:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801e970:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801e974:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801e978:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801e97a:	fb0e f707 	mul.w	r7, lr, r7
 801e97e:	fb02 770c 	mla	r7, r2, ip, r7
 801e982:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e986:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801e988:	fb00 770c 	mla	r7, r0, ip, r7
 801e98c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801e990:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801e992:	fb08 770c 	mla	r7, r8, ip, r7
 801e996:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801e99a:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801e99c:	fb0e fe0c 	mul.w	lr, lr, ip
 801e9a0:	0a3f      	lsrs	r7, r7, #8
 801e9a2:	fb02 e303 	mla	r3, r2, r3, lr
 801e9a6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801e9a8:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801e9ac:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801e9b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801e9b2:	fb00 330a 	mla	r3, r0, sl, r3
 801e9b6:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 801e9ba:	f8b9 0000 	ldrh.w	r0, [r9]
 801e9be:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e9c2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e9c4:	1202      	asrs	r2, r0, #8
 801e9c6:	4359      	muls	r1, r3
 801e9c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e9cc:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e9d0:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801e9d4:	1c4b      	adds	r3, r1, #1
 801e9d6:	ea47 070c 	orr.w	r7, r7, ip
 801e9da:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e9de:	0c3b      	lsrs	r3, r7, #16
 801e9e0:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e9e4:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e9e8:	b2ff      	uxtb	r7, r7
 801e9ea:	fb13 f305 	smulbb	r3, r3, r5
 801e9ee:	b2c9      	uxtb	r1, r1
 801e9f0:	fb17 f705 	smulbb	r7, r7, r5
 801e9f4:	fb02 3201 	mla	r2, r2, r1, r3
 801e9f8:	10c3      	asrs	r3, r0, #3
 801e9fa:	fb1c fc05 	smulbb	ip, ip, r5
 801e9fe:	00c0      	lsls	r0, r0, #3
 801ea00:	b292      	uxth	r2, r2
 801ea02:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 801ea06:	b2c0      	uxtb	r0, r0
 801ea08:	fb03 c301 	mla	r3, r3, r1, ip
 801ea0c:	fb00 7001 	mla	r0, r0, r1, r7
 801ea10:	1c51      	adds	r1, r2, #1
 801ea12:	b29b      	uxth	r3, r3
 801ea14:	b280      	uxth	r0, r0
 801ea16:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ea1a:	f100 0c01 	add.w	ip, r0, #1
 801ea1e:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 801ea22:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801ea26:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ea2a:	ea4c 0202 	orr.w	r2, ip, r2
 801ea2e:	f103 0c01 	add.w	ip, r3, #1
 801ea32:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ea36:	095b      	lsrs	r3, r3, #5
 801ea38:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ea3c:	431a      	orrs	r2, r3
 801ea3e:	f8a9 2000 	strh.w	r2, [r9]
 801ea42:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801ea44:	f109 0902 	add.w	r9, r9, #2
 801ea48:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ea4c:	441c      	add	r4, r3
 801ea4e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ea50:	441e      	add	r6, r3
 801ea52:	e647      	b.n	801e6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ea54:	2800      	cmp	r0, #0
 801ea56:	f43f aedf 	beq.w	801e818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ea5a:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801ea5e:	9109      	str	r1, [sp, #36]	@ 0x24
 801ea60:	0e09      	lsrs	r1, r1, #24
 801ea62:	9112      	str	r1, [sp, #72]	@ 0x48
 801ea64:	e6d8      	b.n	801e818 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ea66:	b01d      	add	sp, #116	@ 0x74
 801ea68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ea6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ea6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea70:	b085      	sub	sp, #20
 801ea72:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 801ea76:	9102      	str	r1, [sp, #8]
 801ea78:	2c00      	cmp	r4, #0
 801ea7a:	fb04 7103 	mla	r1, r4, r3, r7
 801ea7e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 801ea82:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801ea86:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ea8a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 801ea8e:	f2c0 810c 	blt.w	801ecaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ea92:	45a6      	cmp	lr, r4
 801ea94:	f340 8109 	ble.w	801ecaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ea98:	2f00      	cmp	r7, #0
 801ea9a:	f2c0 8104 	blt.w	801eca6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ea9e:	42bb      	cmp	r3, r7
 801eaa0:	f340 8101 	ble.w	801eca6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801eaa4:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801eaa8:	1c7a      	adds	r2, r7, #1
 801eaaa:	f100 8101 	bmi.w	801ecb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801eaae:	4293      	cmp	r3, r2
 801eab0:	f340 80fe 	ble.w	801ecb0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801eab4:	2e00      	cmp	r6, #0
 801eab6:	f000 80fd 	beq.w	801ecb4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801eaba:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801eabe:	3401      	adds	r4, #1
 801eac0:	f100 80fc 	bmi.w	801ecbc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eac4:	45a6      	cmp	lr, r4
 801eac6:	f340 80f9 	ble.w	801ecbc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801eaca:	2800      	cmp	r0, #0
 801eacc:	f000 80f9 	beq.w	801ecc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801ead0:	2f00      	cmp	r7, #0
 801ead2:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801ead6:	f2c0 80ef 	blt.w	801ecb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eada:	42bb      	cmp	r3, r7
 801eadc:	f340 80ec 	ble.w	801ecb8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801eae0:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801eae4:	3701      	adds	r7, #1
 801eae6:	f100 80ef 	bmi.w	801ecc8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801eaea:	42bb      	cmp	r3, r7
 801eaec:	f340 80ec 	ble.w	801ecc8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801eaf0:	2e00      	cmp	r6, #0
 801eaf2:	f000 80eb 	beq.w	801eccc <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801eaf6:	6852      	ldr	r2, [r2, #4]
 801eaf8:	b2b6      	uxth	r6, r6
 801eafa:	b280      	uxth	r0, r0
 801eafc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801eb00:	fb00 fe06 	mul.w	lr, r0, r6
 801eb04:	0136      	lsls	r6, r6, #4
 801eb06:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801eb0a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801eb0e:	eba6 070e 	sub.w	r7, r6, lr
 801eb12:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801eb16:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801eb1a:	b280      	uxth	r0, r0
 801eb1c:	b2bf      	uxth	r7, r7
 801eb1e:	1a1b      	subs	r3, r3, r0
 801eb20:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801eb24:	fb07 f60a 	mul.w	r6, r7, sl
 801eb28:	b29b      	uxth	r3, r3
 801eb2a:	fb0b 6603 	mla	r6, fp, r3, r6
 801eb2e:	fb00 6609 	mla	r6, r0, r9, r6
 801eb32:	fb0e 6608 	mla	r6, lr, r8, r6
 801eb36:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801eb3a:	9600      	str	r6, [sp, #0]
 801eb3c:	2e00      	cmp	r6, #0
 801eb3e:	f000 80af 	beq.w	801eca0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801eb42:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801eb46:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801eb4a:	9e02      	ldr	r6, [sp, #8]
 801eb4c:	fb0b fc0c 	mul.w	ip, fp, ip
 801eb50:	fb0b f505 	mul.w	r5, fp, r5
 801eb54:	8836      	ldrh	r6, [r6, #0]
 801eb56:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eb5a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eb5e:	9501      	str	r5, [sp, #4]
 801eb60:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801eb64:	44dc      	add	ip, fp
 801eb66:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb6a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801eb6e:	9503      	str	r5, [sp, #12]
 801eb70:	9d01      	ldr	r5, [sp, #4]
 801eb72:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801eb76:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801eb7a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801eb7e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801eb82:	fb0a fc0c 	mul.w	ip, sl, ip
 801eb86:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801eb8a:	fb0a fa01 	mul.w	sl, sl, r1
 801eb8e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801eb92:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801eb96:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801eb9a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801eb9e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801eba2:	4465      	add	r5, ip
 801eba4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801eba8:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ebac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ebb0:	fb09 fc0c 	mul.w	ip, r9, ip
 801ebb4:	0a2d      	lsrs	r5, r5, #8
 801ebb6:	fb09 f904 	mul.w	r9, r9, r4
 801ebba:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ebbe:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ebc2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ebc6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ebca:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ebce:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ebd2:	437d      	muls	r5, r7
 801ebd4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ebd8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ebdc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ebe0:	4461      	add	r1, ip
 801ebe2:	fb08 f404 	mul.w	r4, r8, r4
 801ebe6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ebea:	fb08 f802 	mul.w	r8, r8, r2
 801ebee:	0a09      	lsrs	r1, r1, #8
 801ebf0:	0a22      	lsrs	r2, r4, #8
 801ebf2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ebf6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ebfa:	fb07 f70a 	mul.w	r7, r7, sl
 801ebfe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ec02:	4414      	add	r4, r2
 801ec04:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801ec08:	0a24      	lsrs	r4, r4, #8
 801ec0a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ec0e:	9a03      	ldr	r2, [sp, #12]
 801ec10:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801ec14:	fb02 5503 	mla	r5, r2, r3, r5
 801ec18:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ec1c:	fb04 540e 	mla	r4, r4, lr, r5
 801ec20:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801ec24:	fb01 4100 	mla	r1, r1, r0, r4
 801ec28:	0a09      	lsrs	r1, r1, #8
 801ec2a:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801ec2e:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801ec32:	fb03 7101 	mla	r1, r3, r1, r7
 801ec36:	9b00      	ldr	r3, [sp, #0]
 801ec38:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ec3c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801ec40:	43da      	mvns	r2, r3
 801ec42:	1233      	asrs	r3, r6, #8
 801ec44:	fb00 e101 	mla	r1, r0, r1, lr
 801ec48:	10f0      	asrs	r0, r6, #3
 801ec4a:	b2d2      	uxtb	r2, r2
 801ec4c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 801ec50:	0a09      	lsrs	r1, r1, #8
 801ec52:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801ec56:	00f6      	lsls	r6, r6, #3
 801ec58:	4353      	muls	r3, r2
 801ec5a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ec5e:	4350      	muls	r0, r2
 801ec60:	b2f6      	uxtb	r6, r6
 801ec62:	4321      	orrs	r1, r4
 801ec64:	4356      	muls	r6, r2
 801ec66:	1c5a      	adds	r2, r3, #1
 801ec68:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ec6c:	0c0b      	lsrs	r3, r1, #16
 801ec6e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ec72:	1c42      	adds	r2, r0, #1
 801ec74:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ec78:	0a0a      	lsrs	r2, r1, #8
 801ec7a:	021b      	lsls	r3, r3, #8
 801ec7c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ec80:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 801ec84:	00d2      	lsls	r2, r2, #3
 801ec86:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ec8a:	4313      	orrs	r3, r2
 801ec8c:	1c72      	adds	r2, r6, #1
 801ec8e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ec92:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801ec96:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ec9a:	4319      	orrs	r1, r3
 801ec9c:	9b02      	ldr	r3, [sp, #8]
 801ec9e:	8019      	strh	r1, [r3, #0]
 801eca0:	b005      	add	sp, #20
 801eca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eca6:	2500      	movs	r5, #0
 801eca8:	e6fe      	b.n	801eaa8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ecaa:	2100      	movs	r1, #0
 801ecac:	460d      	mov	r5, r1
 801ecae:	e706      	b.n	801eabe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ecb0:	2100      	movs	r1, #0
 801ecb2:	e704      	b.n	801eabe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ecb4:	4631      	mov	r1, r6
 801ecb6:	e702      	b.n	801eabe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ecb8:	2400      	movs	r4, #0
 801ecba:	e713      	b.n	801eae4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ecbc:	2200      	movs	r2, #0
 801ecbe:	4614      	mov	r4, r2
 801ecc0:	e71a      	b.n	801eaf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ecc2:	4602      	mov	r2, r0
 801ecc4:	4604      	mov	r4, r0
 801ecc6:	e717      	b.n	801eaf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ecc8:	2200      	movs	r2, #0
 801ecca:	e715      	b.n	801eaf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801eccc:	4632      	mov	r2, r6
 801ecce:	e713      	b.n	801eaf8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

0801ecd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ecd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecd4:	b09b      	sub	sp, #108	@ 0x6c
 801ecd6:	9218      	str	r2, [sp, #96]	@ 0x60
 801ecd8:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801ecda:	9019      	str	r0, [sp, #100]	@ 0x64
 801ecdc:	9116      	str	r1, [sp, #88]	@ 0x58
 801ecde:	6850      	ldr	r0, [r2, #4]
 801ece0:	9307      	str	r3, [sp, #28]
 801ece2:	6812      	ldr	r2, [r2, #0]
 801ece4:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 801ece8:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 801ecec:	fb00 1303 	mla	r3, r0, r3, r1
 801ecf0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ecf4:	930a      	str	r3, [sp, #40]	@ 0x28
 801ecf6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ecf8:	681b      	ldr	r3, [r3, #0]
 801ecfa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ecfc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801ecfe:	2b00      	cmp	r3, #0
 801ed00:	dc03      	bgt.n	801ed0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ed02:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ed04:	2b00      	cmp	r3, #0
 801ed06:	f340 8387 	ble.w	801f418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801ed0a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ed0c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ed10:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ed14:	1e48      	subs	r0, r1, #1
 801ed16:	1e57      	subs	r7, r2, #1
 801ed18:	9b07      	ldr	r3, [sp, #28]
 801ed1a:	2b00      	cmp	r3, #0
 801ed1c:	f340 8166 	ble.w	801efec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ed20:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ed24:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ed28:	d406      	bmi.n	801ed38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ed2a:	4584      	cmp	ip, r0
 801ed2c:	da04      	bge.n	801ed38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ed2e:	2b00      	cmp	r3, #0
 801ed30:	db02      	blt.n	801ed38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ed32:	42bb      	cmp	r3, r7
 801ed34:	f2c0 815b 	blt.w	801efee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ed38:	f11c 0c01 	adds.w	ip, ip, #1
 801ed3c:	f100 814b 	bmi.w	801efd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ed40:	4561      	cmp	r1, ip
 801ed42:	f2c0 8148 	blt.w	801efd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ed46:	3301      	adds	r3, #1
 801ed48:	f100 8145 	bmi.w	801efd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ed4c:	429a      	cmp	r2, r3
 801ed4e:	f2c0 8142 	blt.w	801efd6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ed52:	9b07      	ldr	r3, [sp, #28]
 801ed54:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801ed56:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ed58:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801ed5a:	2b00      	cmp	r3, #0
 801ed5c:	f340 8165 	ble.w	801f02a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801ed60:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 801ed62:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ed66:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801ed68:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801ed6c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ed70:	1422      	asrs	r2, r4, #16
 801ed72:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ed76:	689b      	ldr	r3, [r3, #8]
 801ed78:	f100 81d5 	bmi.w	801f126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ed7c:	f103 38ff 	add.w	r8, r3, #4294967295
 801ed80:	4542      	cmp	r2, r8
 801ed82:	f280 81d0 	bge.w	801f126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ed86:	f1bc 0f00 	cmp.w	ip, #0
 801ed8a:	f2c0 81cc 	blt.w	801f126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ed8e:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ed92:	45c4      	cmp	ip, r8
 801ed94:	f280 81c7 	bge.w	801f126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801ed98:	b21b      	sxth	r3, r3
 801ed9a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801ed9c:	fb0c 2203 	mla	r2, ip, r3, r2
 801eda0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eda4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eda8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801edac:	2900      	cmp	r1, #0
 801edae:	f000 8182 	beq.w	801f0b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801edb2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801edb6:	950b      	str	r5, [sp, #44]	@ 0x2c
 801edb8:	0e2d      	lsrs	r5, r5, #24
 801edba:	9512      	str	r5, [sp, #72]	@ 0x48
 801edbc:	b180      	cbz	r0, 801ede0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801edbe:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 801edc2:	3b01      	subs	r3, #1
 801edc4:	009b      	lsls	r3, r3, #2
 801edc6:	3304      	adds	r3, #4
 801edc8:	eb08 0c03 	add.w	ip, r8, r3
 801edcc:	f858 3003 	ldr.w	r3, [r8, r3]
 801edd0:	9308      	str	r3, [sp, #32]
 801edd2:	0e1b      	lsrs	r3, r3, #24
 801edd4:	9310      	str	r3, [sp, #64]	@ 0x40
 801edd6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801edda:	930c      	str	r3, [sp, #48]	@ 0x30
 801eddc:	0e1b      	lsrs	r3, r3, #24
 801edde:	9313      	str	r3, [sp, #76]	@ 0x4c
 801ede0:	b289      	uxth	r1, r1
 801ede2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801ede4:	b280      	uxth	r0, r0
 801ede6:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ede8:	fb01 f900 	mul.w	r9, r1, r0
 801edec:	0109      	lsls	r1, r1, #4
 801edee:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801edf2:	eba1 0809 	sub.w	r8, r1, r9
 801edf6:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 801edfa:	b280      	uxth	r0, r0
 801edfc:	fa1f f888 	uxth.w	r8, r8
 801ee00:	1a09      	subs	r1, r1, r0
 801ee02:	fb08 f303 	mul.w	r3, r8, r3
 801ee06:	b289      	uxth	r1, r1
 801ee08:	fb01 330e 	mla	r3, r1, lr, r3
 801ee0c:	fb00 3305 	mla	r3, r0, r5, r3
 801ee10:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ee12:	fb09 3305 	mla	r3, r9, r5, r3
 801ee16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ee1a:	2b00      	cmp	r3, #0
 801ee1c:	f000 80d2 	beq.w	801efc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ee20:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801ee24:	d01b      	beq.n	801ee5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801ee26:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 801ee2a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ee2e:	fb0e fa0a 	mul.w	sl, lr, sl
 801ee32:	fb0e fe02 	mul.w	lr, lr, r2
 801ee36:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ee3a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801ee3e:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801ee42:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ee46:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ee4a:	4452      	add	r2, sl
 801ee4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ee50:	0a12      	lsrs	r2, r2, #8
 801ee52:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801ee56:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ee5a:	ea42 020c 	orr.w	r2, r2, ip
 801ee5e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ee60:	2dff      	cmp	r5, #255	@ 0xff
 801ee62:	d021      	beq.n	801eea8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ee64:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ee66:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801ee6a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ee6c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ee70:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ee72:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ee76:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801ee78:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ee7c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ee80:	fb05 fa0a 	mul.w	sl, r5, sl
 801ee84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee88:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ee8c:	44de      	add	lr, fp
 801ee8e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ee92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ee96:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ee9e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eea2:	ea4e 050a 	orr.w	r5, lr, sl
 801eea6:	950b      	str	r5, [sp, #44]	@ 0x2c
 801eea8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eeaa:	2dff      	cmp	r5, #255	@ 0xff
 801eeac:	d021      	beq.n	801eef2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eeae:	9d08      	ldr	r5, [sp, #32]
 801eeb0:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eeb4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eeb6:	fb05 fb0b 	mul.w	fp, r5, fp
 801eeba:	9d08      	ldr	r5, [sp, #32]
 801eebc:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801eec0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801eec2:	fb05 fa0e 	mul.w	sl, r5, lr
 801eec6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eeca:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801eece:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eed2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801eed6:	44de      	add	lr, fp
 801eed8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eedc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eee0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eee4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801eee8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801eeec:	ea4e 050a 	orr.w	r5, lr, sl
 801eef0:	9508      	str	r5, [sp, #32]
 801eef2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801eef4:	2dff      	cmp	r5, #255	@ 0xff
 801eef6:	d021      	beq.n	801ef3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801eef8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801eefa:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 801eefe:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ef00:	fb05 fb0b 	mul.w	fp, r5, fp
 801ef04:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ef06:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801ef0a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801ef0c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ef10:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801ef14:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef18:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ef1c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801ef20:	44de      	add	lr, fp
 801ef22:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ef26:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ef2a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef2e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801ef32:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ef36:	ea4e 050a 	orr.w	r5, lr, sl
 801ef3a:	950c      	str	r5, [sp, #48]	@ 0x30
 801ef3c:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ef3e:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 801ef42:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ef46:	2bff      	cmp	r3, #255	@ 0xff
 801ef48:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ef4c:	9d08      	ldr	r5, [sp, #32]
 801ef4e:	fb08 fc0c 	mul.w	ip, r8, ip
 801ef52:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ef56:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ef5a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ef5c:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ef60:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 801ef64:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 801ef66:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ef6a:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 801ef6e:	fb08 f80e 	mul.w	r8, r8, lr
 801ef72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef76:	fb01 8202 	mla	r2, r1, r2, r8
 801ef7a:	9908      	ldr	r1, [sp, #32]
 801ef7c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801ef80:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801ef84:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801ef86:	fb00 220a 	mla	r2, r0, sl, r2
 801ef8a:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 801ef8e:	fb09 2900 	mla	r9, r9, r0, r2
 801ef92:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ef96:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801ef9a:	ea4c 0c09 	orr.w	ip, ip, r9
 801ef9e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801efa2:	f040 8091 	bne.w	801f0c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801efa6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801efaa:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 801efae:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801efb2:	f022 0207 	bic.w	r2, r2, #7
 801efb6:	431a      	orrs	r2, r3
 801efb8:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801efbc:	ea4c 0c02 	orr.w	ip, ip, r2
 801efc0:	f8a7 c000 	strh.w	ip, [r7]
 801efc4:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801efc6:	3702      	adds	r7, #2
 801efc8:	441c      	add	r4, r3
 801efca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801efcc:	441e      	add	r6, r3
 801efce:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 801efd0:	3b01      	subs	r3, #1
 801efd2:	9317      	str	r3, [sp, #92]	@ 0x5c
 801efd4:	e6c0      	b.n	801ed58 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801efd6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801efd8:	441c      	add	r4, r3
 801efda:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801efdc:	441e      	add	r6, r3
 801efde:	9b07      	ldr	r3, [sp, #28]
 801efe0:	3b01      	subs	r3, #1
 801efe2:	9307      	str	r3, [sp, #28]
 801efe4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801efe6:	3302      	adds	r3, #2
 801efe8:	930a      	str	r3, [sp, #40]	@ 0x28
 801efea:	e695      	b.n	801ed18 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801efec:	d024      	beq.n	801f038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801efee:	9b07      	ldr	r3, [sp, #28]
 801eff0:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 801eff2:	3b01      	subs	r3, #1
 801eff4:	fb00 4003 	mla	r0, r0, r3, r4
 801eff8:	1400      	asrs	r0, r0, #16
 801effa:	f53f aeaa 	bmi.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801effe:	3901      	subs	r1, #1
 801f000:	4288      	cmp	r0, r1
 801f002:	f6bf aea6 	bge.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f006:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f008:	fb01 6303 	mla	r3, r1, r3, r6
 801f00c:	141b      	asrs	r3, r3, #16
 801f00e:	f53f aea0 	bmi.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f012:	3a01      	subs	r2, #1
 801f014:	4293      	cmp	r3, r2
 801f016:	f6bf ae9c 	bge.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f01a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f01e:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 801f022:	f1bb 0f00 	cmp.w	fp, #0
 801f026:	f300 809a 	bgt.w	801f15e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f02a:	9b07      	ldr	r3, [sp, #28]
 801f02c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f030:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f032:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f036:	930a      	str	r3, [sp, #40]	@ 0x28
 801f038:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f03a:	2b00      	cmp	r3, #0
 801f03c:	f340 81ec 	ble.w	801f418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801f040:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f044:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f046:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f04a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f04e:	eef0 6a62 	vmov.f32	s13, s5
 801f052:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f056:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f05a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f05e:	ee16 4a90 	vmov	r4, s13
 801f062:	eef0 6a43 	vmov.f32	s13, s6
 801f066:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f06a:	ee16 6a90 	vmov	r6, s13
 801f06e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f072:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f076:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f07a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f07e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f082:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f086:	ee12 2a90 	vmov	r2, s5
 801f08a:	eef0 2a47 	vmov.f32	s5, s14
 801f08e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f092:	ee13 2a10 	vmov	r2, s6
 801f096:	9327      	str	r3, [sp, #156]	@ 0x9c
 801f098:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f09a:	eeb0 3a67 	vmov.f32	s6, s15
 801f09e:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0a2:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f0a4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 801f0a6:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801f0a8:	3b01      	subs	r3, #1
 801f0aa:	9316      	str	r3, [sp, #88]	@ 0x58
 801f0ac:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f0ae:	bf08      	it	eq
 801f0b0:	4613      	moveq	r3, r2
 801f0b2:	9307      	str	r3, [sp, #28]
 801f0b4:	e622      	b.n	801ecfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f0b6:	2800      	cmp	r0, #0
 801f0b8:	f43f ae92 	beq.w	801ede0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f0bc:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f0c0:	9308      	str	r3, [sp, #32]
 801f0c2:	0e1b      	lsrs	r3, r3, #24
 801f0c4:	9310      	str	r3, [sp, #64]	@ 0x40
 801f0c6:	e68b      	b.n	801ede0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f0c8:	8839      	ldrh	r1, [r7, #0]
 801f0ca:	43db      	mvns	r3, r3
 801f0cc:	4dd4      	ldr	r5, [pc, #848]	@ (801f420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801f0ce:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f0d2:	fa5f f883 	uxtb.w	r8, r3
 801f0d6:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801f0da:	10c8      	asrs	r0, r1, #3
 801f0dc:	00cb      	lsls	r3, r1, #3
 801f0de:	fb0e fe08 	mul.w	lr, lr, r8
 801f0e2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f0e6:	b2db      	uxtb	r3, r3
 801f0e8:	f10e 0101 	add.w	r1, lr, #1
 801f0ec:	fb00 f008 	mul.w	r0, r0, r8
 801f0f0:	fb03 f308 	mul.w	r3, r3, r8
 801f0f4:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f0f8:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f0fc:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f100:	f100 0e01 	add.w	lr, r0, #1
 801f104:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f108:	b2c9      	uxtb	r1, r1
 801f10a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f10e:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f112:	00d2      	lsls	r2, r2, #3
 801f114:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f118:	430a      	orrs	r2, r1
 801f11a:	1c59      	adds	r1, r3, #1
 801f11c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f120:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f124:	e748      	b.n	801efb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f126:	f112 0801 	adds.w	r8, r2, #1
 801f12a:	f53f af4b 	bmi.w	801efc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f12e:	4543      	cmp	r3, r8
 801f130:	f6ff af48 	blt.w	801efc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f134:	f11c 0801 	adds.w	r8, ip, #1
 801f138:	f53f af44 	bmi.w	801efc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f13c:	45c6      	cmp	lr, r8
 801f13e:	f6ff af41 	blt.w	801efc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f142:	b21b      	sxth	r3, r3
 801f144:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f148:	fa0f f28e 	sxth.w	r2, lr
 801f14c:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f150:	9200      	str	r2, [sp, #0]
 801f152:	4639      	mov	r1, r7
 801f154:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f156:	9819      	ldr	r0, [sp, #100]	@ 0x64
 801f158:	f7ff fc88 	bl	801ea6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f15c:	e732      	b.n	801efc4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f15e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801f160:	1421      	asrs	r1, r4, #16
 801f162:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f164:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f168:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f16c:	1433      	asrs	r3, r6, #16
 801f16e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f172:	fb07 1303 	mla	r3, r7, r3, r1
 801f176:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801f178:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f17c:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f180:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f184:	2a00      	cmp	r2, #0
 801f186:	f000 8108 	beq.w	801f39a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 801f18a:	684d      	ldr	r5, [r1, #4]
 801f18c:	950d      	str	r5, [sp, #52]	@ 0x34
 801f18e:	0e2d      	lsrs	r5, r5, #24
 801f190:	9514      	str	r5, [sp, #80]	@ 0x50
 801f192:	b178      	cbz	r0, 801f1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f194:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 801f198:	3f01      	subs	r7, #1
 801f19a:	00bf      	lsls	r7, r7, #2
 801f19c:	3704      	adds	r7, #4
 801f19e:	eb01 0e07 	add.w	lr, r1, r7
 801f1a2:	59c9      	ldr	r1, [r1, r7]
 801f1a4:	9109      	str	r1, [sp, #36]	@ 0x24
 801f1a6:	0e09      	lsrs	r1, r1, #24
 801f1a8:	9111      	str	r1, [sp, #68]	@ 0x44
 801f1aa:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f1ae:	910e      	str	r1, [sp, #56]	@ 0x38
 801f1b0:	0e09      	lsrs	r1, r1, #24
 801f1b2:	9115      	str	r1, [sp, #84]	@ 0x54
 801f1b4:	b292      	uxth	r2, r2
 801f1b6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f1b8:	b280      	uxth	r0, r0
 801f1ba:	fb02 f900 	mul.w	r9, r2, r0
 801f1be:	0112      	lsls	r2, r2, #4
 801f1c0:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f1c4:	eba2 0e09 	sub.w	lr, r2, r9
 801f1c8:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 801f1cc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f1ce:	b280      	uxth	r0, r0
 801f1d0:	fa1f fe8e 	uxth.w	lr, lr
 801f1d4:	1a09      	subs	r1, r1, r0
 801f1d6:	fb0e f202 	mul.w	r2, lr, r2
 801f1da:	b289      	uxth	r1, r1
 801f1dc:	fb01 220c 	mla	r2, r1, ip, r2
 801f1e0:	fb00 2205 	mla	r2, r0, r5, r2
 801f1e4:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f1e6:	fb09 2205 	mla	r2, r9, r5, r2
 801f1ea:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f1ee:	2a00      	cmp	r2, #0
 801f1f0:	f000 80ca 	beq.w	801f388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801f1f4:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 801f1f8:	d019      	beq.n	801f22e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f1fa:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801f1fe:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f202:	fb0c fa0a 	mul.w	sl, ip, sl
 801f206:	fb0c fc03 	mul.w	ip, ip, r3
 801f20a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f20e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801f212:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 801f216:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f21a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f21e:	4453      	add	r3, sl
 801f220:	0a3f      	lsrs	r7, r7, #8
 801f222:	0a1b      	lsrs	r3, r3, #8
 801f224:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 801f228:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801f22c:	433b      	orrs	r3, r7
 801f22e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f230:	2dff      	cmp	r5, #255	@ 0xff
 801f232:	d020      	beq.n	801f276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f234:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f236:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f23a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f23c:	436f      	muls	r7, r5
 801f23e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f240:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f244:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f248:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801f24a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f24e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f252:	fb05 fa0a 	mul.w	sl, r5, sl
 801f256:	44bc      	add	ip, r7
 801f258:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f25c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f260:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f264:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f268:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f26c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f270:	ea4c 050a 	orr.w	r5, ip, sl
 801f274:	950d      	str	r5, [sp, #52]	@ 0x34
 801f276:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f278:	2dff      	cmp	r5, #255	@ 0xff
 801f27a:	d020      	beq.n	801f2be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f27c:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f27e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f282:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f284:	436f      	muls	r7, r5
 801f286:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f288:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f28c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f28e:	fb05 fa0c 	mul.w	sl, r5, ip
 801f292:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f296:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f29a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f29e:	44bc      	add	ip, r7
 801f2a0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f2a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f2a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f2b4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f2b8:	ea4c 050a 	orr.w	r5, ip, sl
 801f2bc:	9509      	str	r5, [sp, #36]	@ 0x24
 801f2be:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f2c0:	2dff      	cmp	r5, #255	@ 0xff
 801f2c2:	d020      	beq.n	801f306 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f2c4:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f2c6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f2ca:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f2cc:	436f      	muls	r7, r5
 801f2ce:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f2d0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f2d4:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 801f2d8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 801f2da:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 801f2de:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f2e2:	fb05 fa0a 	mul.w	sl, r5, sl
 801f2e6:	44bc      	add	ip, r7
 801f2e8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 801f2ec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f2f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801f2f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f2fc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801f300:	ea4c 050a 	orr.w	r5, ip, sl
 801f304:	950e      	str	r5, [sp, #56]	@ 0x38
 801f306:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f308:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 801f30c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801f310:	2aff      	cmp	r2, #255	@ 0xff
 801f312:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 801f316:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801f318:	fb0e f707 	mul.w	r7, lr, r7
 801f31c:	fb01 770c 	mla	r7, r1, ip, r7
 801f320:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f324:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f326:	fb00 770c 	mla	r7, r0, ip, r7
 801f32a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f32e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f330:	fb09 770c 	mla	r7, r9, ip, r7
 801f334:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 801f338:	fb0e fe0c 	mul.w	lr, lr, ip
 801f33c:	ea4f 2717 	mov.w	r7, r7, lsr #8
 801f340:	fb01 e303 	mla	r3, r1, r3, lr
 801f344:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f346:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 801f34a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 801f34e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f350:	fb00 330a 	mla	r3, r0, sl, r3
 801f354:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 801f358:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f35c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f360:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801f364:	ea47 070c 	orr.w	r7, r7, ip
 801f368:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f36c:	d11e      	bne.n	801f3ac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 801f36e:	097a      	lsrs	r2, r7, #5
 801f370:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 801f374:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f378:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f37c:	f023 0307 	bic.w	r3, r3, #7
 801f380:	4313      	orrs	r3, r2
 801f382:	431f      	orrs	r7, r3
 801f384:	f8a8 7000 	strh.w	r7, [r8]
 801f388:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 801f38a:	f108 0802 	add.w	r8, r8, #2
 801f38e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f392:	441c      	add	r4, r3
 801f394:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f396:	441e      	add	r6, r3
 801f398:	e643      	b.n	801f022 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f39a:	2800      	cmp	r0, #0
 801f39c:	f43f af0a 	beq.w	801f1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f3a0:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f3a4:	9109      	str	r1, [sp, #36]	@ 0x24
 801f3a6:	0e09      	lsrs	r1, r1, #24
 801f3a8:	9111      	str	r1, [sp, #68]	@ 0x44
 801f3aa:	e703      	b.n	801f1b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f3ac:	f8b8 1000 	ldrh.w	r1, [r8]
 801f3b0:	43d2      	mvns	r2, r2
 801f3b2:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f3b6:	fa5f fe82 	uxtb.w	lr, r2
 801f3ba:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801f3be:	10c8      	asrs	r0, r1, #3
 801f3c0:	00ca      	lsls	r2, r1, #3
 801f3c2:	fb0c fc0e 	mul.w	ip, ip, lr
 801f3c6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f3ca:	b2d2      	uxtb	r2, r2
 801f3cc:	f10c 0101 	add.w	r1, ip, #1
 801f3d0:	fb00 f00e 	mul.w	r0, r0, lr
 801f3d4:	fb02 f20e 	mul.w	r2, r2, lr
 801f3d8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f3dc:	0c39      	lsrs	r1, r7, #16
 801f3de:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f3e2:	490f      	ldr	r1, [pc, #60]	@ (801f420 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 801f3e4:	fa5f fc8c 	uxtb.w	ip, ip
 801f3e8:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f3ec:	1c41      	adds	r1, r0, #1
 801f3ee:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f3f2:	1c51      	adds	r1, r2, #1
 801f3f4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f3f8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f3fc:	00c0      	lsls	r0, r0, #3
 801f3fe:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f402:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f406:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f40a:	ea4c 0c00 	orr.w	ip, ip, r0
 801f40e:	ea47 0c0c 	orr.w	ip, r7, ip
 801f412:	f8a8 c000 	strh.w	ip, [r8]
 801f416:	e7b7      	b.n	801f388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 801f418:	b01b      	add	sp, #108	@ 0x6c
 801f41a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f41e:	bf00      	nop
 801f420:	fffff800 	.word	0xfffff800

0801f424 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f428:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801f42c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f430:	2d00      	cmp	r5, #0
 801f432:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801f436:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801f43a:	fb05 0e03 	mla	lr, r5, r3, r0
 801f43e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801f442:	f2c0 808c 	blt.w	801f55e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f446:	45a9      	cmp	r9, r5
 801f448:	f340 8089 	ble.w	801f55e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f44c:	2800      	cmp	r0, #0
 801f44e:	f2c0 8084 	blt.w	801f55a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f452:	4580      	cmp	r8, r0
 801f454:	f340 8081 	ble.w	801f55a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f458:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f45c:	f01e 0f01 	tst.w	lr, #1
 801f460:	5d16      	ldrb	r6, [r2, r4]
 801f462:	bf0c      	ite	eq
 801f464:	f006 060f 	andeq.w	r6, r6, #15
 801f468:	1136      	asrne	r6, r6, #4
 801f46a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f46e:	b2f6      	uxtb	r6, r6
 801f470:	1c44      	adds	r4, r0, #1
 801f472:	d477      	bmi.n	801f564 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f474:	45a0      	cmp	r8, r4
 801f476:	dd75      	ble.n	801f564 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f478:	2f00      	cmp	r7, #0
 801f47a:	d075      	beq.n	801f568 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f47c:	f10e 0a01 	add.w	sl, lr, #1
 801f480:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f484:	f01a 0f01 	tst.w	sl, #1
 801f488:	5d14      	ldrb	r4, [r2, r4]
 801f48a:	bf0c      	ite	eq
 801f48c:	f004 040f 	andeq.w	r4, r4, #15
 801f490:	1124      	asrne	r4, r4, #4
 801f492:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f496:	b2e4      	uxtb	r4, r4
 801f498:	3501      	adds	r5, #1
 801f49a:	d469      	bmi.n	801f570 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f49c:	45a9      	cmp	r9, r5
 801f49e:	dd67      	ble.n	801f570 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f4a0:	f1bc 0f00 	cmp.w	ip, #0
 801f4a4:	d067      	beq.n	801f576 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f4a6:	2800      	cmp	r0, #0
 801f4a8:	db60      	blt.n	801f56c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f4aa:	4580      	cmp	r8, r0
 801f4ac:	dd5e      	ble.n	801f56c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f4ae:	eb03 090e 	add.w	r9, r3, lr
 801f4b2:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f4b6:	f019 0f01 	tst.w	r9, #1
 801f4ba:	5d55      	ldrb	r5, [r2, r5]
 801f4bc:	bf0c      	ite	eq
 801f4be:	f005 050f 	andeq.w	r5, r5, #15
 801f4c2:	112d      	asrne	r5, r5, #4
 801f4c4:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f4c8:	b2ed      	uxtb	r5, r5
 801f4ca:	3001      	adds	r0, #1
 801f4cc:	d456      	bmi.n	801f57c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f4ce:	4580      	cmp	r8, r0
 801f4d0:	dd54      	ble.n	801f57c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f4d2:	2f00      	cmp	r7, #0
 801f4d4:	d054      	beq.n	801f580 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f4d6:	3301      	adds	r3, #1
 801f4d8:	449e      	add	lr, r3
 801f4da:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f4de:	f01e 0f01 	tst.w	lr, #1
 801f4e2:	5cd0      	ldrb	r0, [r2, r3]
 801f4e4:	bf0c      	ite	eq
 801f4e6:	f000 000f 	andeq.w	r0, r0, #15
 801f4ea:	1100      	asrne	r0, r0, #4
 801f4ec:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f4f0:	b2c3      	uxtb	r3, r0
 801f4f2:	b2ba      	uxth	r2, r7
 801f4f4:	fa1f fc8c 	uxth.w	ip, ip
 801f4f8:	fb02 f00c 	mul.w	r0, r2, ip
 801f4fc:	0112      	lsls	r2, r2, #4
 801f4fe:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f502:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801f506:	1a12      	subs	r2, r2, r0
 801f508:	fa1f fc8c 	uxth.w	ip, ip
 801f50c:	b292      	uxth	r2, r2
 801f50e:	eba7 070c 	sub.w	r7, r7, ip
 801f512:	4362      	muls	r2, r4
 801f514:	b2bf      	uxth	r7, r7
 801f516:	fb06 2207 	mla	r2, r6, r7, r2
 801f51a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f51e:	fb00 5303 	mla	r3, r0, r3, r5
 801f522:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f526:	b1b3      	cbz	r3, 801f556 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f528:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 801f52c:	435a      	muls	r2, r3
 801f52e:	1c53      	adds	r3, r2, #1
 801f530:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f534:	4a2d      	ldr	r2, [pc, #180]	@ (801f5ec <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f536:	121b      	asrs	r3, r3, #8
 801f538:	6812      	ldr	r2, [r2, #0]
 801f53a:	2bff      	cmp	r3, #255	@ 0xff
 801f53c:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f540:	d120      	bne.n	801f584 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f542:	0950      	lsrs	r0, r2, #5
 801f544:	4b2a      	ldr	r3, [pc, #168]	@ (801f5f0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f546:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f54a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f54e:	4033      	ands	r3, r6
 801f550:	4318      	orrs	r0, r3
 801f552:	4302      	orrs	r2, r0
 801f554:	800a      	strh	r2, [r1, #0]
 801f556:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f55a:	2600      	movs	r6, #0
 801f55c:	e788      	b.n	801f470 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f55e:	2400      	movs	r4, #0
 801f560:	4626      	mov	r6, r4
 801f562:	e799      	b.n	801f498 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f564:	2400      	movs	r4, #0
 801f566:	e797      	b.n	801f498 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f568:	463c      	mov	r4, r7
 801f56a:	e795      	b.n	801f498 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f56c:	2500      	movs	r5, #0
 801f56e:	e7ac      	b.n	801f4ca <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f570:	2300      	movs	r3, #0
 801f572:	461d      	mov	r5, r3
 801f574:	e7bd      	b.n	801f4f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f576:	4663      	mov	r3, ip
 801f578:	4665      	mov	r5, ip
 801f57a:	e7ba      	b.n	801f4f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f57c:	2300      	movs	r3, #0
 801f57e:	e7b8      	b.n	801f4f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f580:	463b      	mov	r3, r7
 801f582:	e7b6      	b.n	801f4f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f584:	880d      	ldrh	r5, [r1, #0]
 801f586:	b29f      	uxth	r7, r3
 801f588:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f58c:	43db      	mvns	r3, r3
 801f58e:	122c      	asrs	r4, r5, #8
 801f590:	fb10 f007 	smulbb	r0, r0, r7
 801f594:	b2db      	uxtb	r3, r3
 801f596:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801f59a:	b2f6      	uxtb	r6, r6
 801f59c:	b2d2      	uxtb	r2, r2
 801f59e:	fb04 0403 	mla	r4, r4, r3, r0
 801f5a2:	10e8      	asrs	r0, r5, #3
 801f5a4:	fb12 f207 	smulbb	r2, r2, r7
 801f5a8:	00ed      	lsls	r5, r5, #3
 801f5aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801f5ae:	b2a4      	uxth	r4, r4
 801f5b0:	fb16 f607 	smulbb	r6, r6, r7
 801f5b4:	b2ed      	uxtb	r5, r5
 801f5b6:	fb00 6603 	mla	r6, r0, r3, r6
 801f5ba:	fb05 2303 	mla	r3, r5, r3, r2
 801f5be:	b2b0      	uxth	r0, r6
 801f5c0:	b29a      	uxth	r2, r3
 801f5c2:	1c63      	adds	r3, r4, #1
 801f5c4:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f5c8:	1c53      	adds	r3, r2, #1
 801f5ca:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f5ce:	1c42      	adds	r2, r0, #1
 801f5d0:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801f5d4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f5d8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f5dc:	0940      	lsrs	r0, r0, #5
 801f5de:	4323      	orrs	r3, r4
 801f5e0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801f5e4:	4303      	orrs	r3, r0
 801f5e6:	800b      	strh	r3, [r1, #0]
 801f5e8:	e7b5      	b.n	801f556 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f5ea:	bf00      	nop
 801f5ec:	20001b74 	.word	0x20001b74
 801f5f0:	00fff800 	.word	0x00fff800

0801f5f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f5f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f5f8:	b097      	sub	sp, #92	@ 0x5c
 801f5fa:	9214      	str	r2, [sp, #80]	@ 0x50
 801f5fc:	9309      	str	r3, [sp, #36]	@ 0x24
 801f5fe:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 801f600:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f604:	9015      	str	r0, [sp, #84]	@ 0x54
 801f606:	910d      	str	r1, [sp, #52]	@ 0x34
 801f608:	6850      	ldr	r0, [r2, #4]
 801f60a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f60c:	6812      	ldr	r2, [r2, #0]
 801f60e:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 801f612:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 801f616:	fb00 1303 	mla	r3, r0, r3, r1
 801f61a:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f61e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f620:	689b      	ldr	r3, [r3, #8]
 801f622:	3301      	adds	r3, #1
 801f624:	f023 0301 	bic.w	r3, r3, #1
 801f628:	930a      	str	r3, [sp, #40]	@ 0x28
 801f62a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f62c:	681f      	ldr	r7, [r3, #0]
 801f62e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f630:	2b00      	cmp	r3, #0
 801f632:	dc03      	bgt.n	801f63c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f634:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801f636:	2b00      	cmp	r3, #0
 801f638:	f340 8289 	ble.w	801fb4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f63c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f63e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f642:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f646:	1e48      	subs	r0, r1, #1
 801f648:	f102 3cff 	add.w	ip, r2, #4294967295
 801f64c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f64e:	2b00      	cmp	r3, #0
 801f650:	f340 80c5 	ble.w	801f7de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f654:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f658:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f65c:	d406      	bmi.n	801f66c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f65e:	4586      	cmp	lr, r0
 801f660:	da04      	bge.n	801f66c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f662:	2b00      	cmp	r3, #0
 801f664:	db02      	blt.n	801f66c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f666:	4563      	cmp	r3, ip
 801f668:	f2c0 80ba 	blt.w	801f7e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801f66c:	f11e 0e01 	adds.w	lr, lr, #1
 801f670:	f100 80ab 	bmi.w	801f7ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f674:	4571      	cmp	r1, lr
 801f676:	f2c0 80a8 	blt.w	801f7ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f67a:	3301      	adds	r3, #1
 801f67c:	f100 80a5 	bmi.w	801f7ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f680:	429a      	cmp	r2, r3
 801f682:	f2c0 80a2 	blt.w	801f7ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 801f686:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f688:	46c8      	mov	r8, r9
 801f68a:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 801f68e:	930e      	str	r3, [sp, #56]	@ 0x38
 801f690:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f692:	2b00      	cmp	r3, #0
 801f694:	f340 80c4 	ble.w	801f820 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801f698:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f69a:	1430      	asrs	r0, r6, #16
 801f69c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f6a0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f6a4:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f6a8:	1423      	asrs	r3, r4, #16
 801f6aa:	f100 814f 	bmi.w	801f94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f6ae:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f6b2:	455b      	cmp	r3, fp
 801f6b4:	f280 814a 	bge.w	801f94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f6b8:	2800      	cmp	r0, #0
 801f6ba:	f2c0 8147 	blt.w	801f94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f6be:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f6c2:	4558      	cmp	r0, fp
 801f6c4:	f280 8142 	bge.w	801f94c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801f6c8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f6ca:	fb00 3305 	mla	r3, r0, r5, r3
 801f6ce:	0858      	lsrs	r0, r3, #1
 801f6d0:	07dd      	lsls	r5, r3, #31
 801f6d2:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f6d6:	bf54      	ite	pl
 801f6d8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f6dc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f6e0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f6e4:	fa5f fc8c 	uxtb.w	ip, ip
 801f6e8:	2a00      	cmp	r2, #0
 801f6ea:	f000 80dd 	beq.w	801f8a8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 801f6ee:	1c58      	adds	r0, r3, #1
 801f6f0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f6f4:	07c0      	lsls	r0, r0, #31
 801f6f6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f6fa:	bf54      	ite	pl
 801f6fc:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f700:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f704:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f708:	fa5f f08e 	uxtb.w	r0, lr
 801f70c:	9010      	str	r0, [sp, #64]	@ 0x40
 801f70e:	b1d9      	cbz	r1, 801f748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f710:	4453      	add	r3, sl
 801f712:	0858      	lsrs	r0, r3, #1
 801f714:	07dd      	lsls	r5, r3, #31
 801f716:	f103 0301 	add.w	r3, r3, #1
 801f71a:	5c38      	ldrb	r0, [r7, r0]
 801f71c:	bf54      	ite	pl
 801f71e:	f000 000f 	andpl.w	r0, r0, #15
 801f722:	1100      	asrmi	r0, r0, #4
 801f724:	07dd      	lsls	r5, r3, #31
 801f726:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f72a:	b2c0      	uxtb	r0, r0
 801f72c:	900b      	str	r0, [sp, #44]	@ 0x2c
 801f72e:	ea4f 0053 	mov.w	r0, r3, lsr #1
 801f732:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f736:	bf54      	ite	pl
 801f738:	f00e 030f 	andpl.w	r3, lr, #15
 801f73c:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f740:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f744:	b2db      	uxtb	r3, r3
 801f746:	9311      	str	r3, [sp, #68]	@ 0x44
 801f748:	b292      	uxth	r2, r2
 801f74a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801f74c:	b289      	uxth	r1, r1
 801f74e:	fb02 f301 	mul.w	r3, r2, r1
 801f752:	0112      	lsls	r2, r2, #4
 801f754:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f758:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801f75c:	1ad2      	subs	r2, r2, r3
 801f75e:	b289      	uxth	r1, r1
 801f760:	b292      	uxth	r2, r2
 801f762:	1a40      	subs	r0, r0, r1
 801f764:	436a      	muls	r2, r5
 801f766:	b280      	uxth	r0, r0
 801f768:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f76c:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801f76e:	fb01 c102 	mla	r1, r1, r2, ip
 801f772:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801f774:	fb03 1302 	mla	r3, r3, r2, r1
 801f778:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f77c:	b1db      	cbz	r3, 801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f77e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f780:	4353      	muls	r3, r2
 801f782:	1c5a      	adds	r2, r3, #1
 801f784:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f788:	4ac6      	ldr	r2, [pc, #792]	@ (801faa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801f78a:	121b      	asrs	r3, r3, #8
 801f78c:	6812      	ldr	r2, [r2, #0]
 801f78e:	2bff      	cmp	r3, #255	@ 0xff
 801f790:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f794:	f040 8099 	bne.w	801f8ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801f798:	0953      	lsrs	r3, r2, #5
 801f79a:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801f79e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f7a2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f7a6:	f02c 0c07 	bic.w	ip, ip, #7
 801f7aa:	ea43 0c0c 	orr.w	ip, r3, ip
 801f7ae:	ea4c 0202 	orr.w	r2, ip, r2
 801f7b2:	f8a8 2000 	strh.w	r2, [r8]
 801f7b6:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f7b8:	f108 0802 	add.w	r8, r8, #2
 801f7bc:	441c      	add	r4, r3
 801f7be:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f7c0:	441e      	add	r6, r3
 801f7c2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f7c4:	3b01      	subs	r3, #1
 801f7c6:	930e      	str	r3, [sp, #56]	@ 0x38
 801f7c8:	e762      	b.n	801f690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f7ca:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801f7cc:	f109 0902 	add.w	r9, r9, #2
 801f7d0:	441c      	add	r4, r3
 801f7d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f7d4:	441e      	add	r6, r3
 801f7d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f7d8:	3b01      	subs	r3, #1
 801f7da:	9309      	str	r3, [sp, #36]	@ 0x24
 801f7dc:	e736      	b.n	801f64c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f7de:	d024      	beq.n	801f82a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801f7e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f7e2:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 801f7e4:	3b01      	subs	r3, #1
 801f7e6:	fb00 4003 	mla	r0, r0, r3, r4
 801f7ea:	1400      	asrs	r0, r0, #16
 801f7ec:	f53f af4b 	bmi.w	801f686 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f7f0:	3901      	subs	r1, #1
 801f7f2:	4288      	cmp	r0, r1
 801f7f4:	f6bf af47 	bge.w	801f686 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f7f8:	9924      	ldr	r1, [sp, #144]	@ 0x90
 801f7fa:	fb01 6303 	mla	r3, r1, r3, r6
 801f7fe:	141b      	asrs	r3, r3, #16
 801f800:	f53f af41 	bmi.w	801f686 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f804:	3a01      	subs	r2, #1
 801f806:	4293      	cmp	r3, r2
 801f808:	f6bf af3d 	bge.w	801f686 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f80c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801f810:	46c8      	mov	r8, r9
 801f812:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801f816:	930e      	str	r3, [sp, #56]	@ 0x38
 801f818:	f1bb 0f00 	cmp.w	fp, #0
 801f81c:	f300 80b7 	bgt.w	801f98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 801f820:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f822:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f826:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f82a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f82c:	2b00      	cmp	r3, #0
 801f82e:	f340 818e 	ble.w	801fb4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 801f832:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f836:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f838:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f83c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f840:	eef0 6a62 	vmov.f32	s13, s5
 801f844:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f848:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f84c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f850:	ee16 4a90 	vmov	r4, s13
 801f854:	eef0 6a43 	vmov.f32	s13, s6
 801f858:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f85c:	ee16 6a90 	vmov	r6, s13
 801f860:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f864:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f868:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f86c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f870:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f874:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f878:	ee12 2a90 	vmov	r2, s5
 801f87c:	eef0 2a47 	vmov.f32	s5, s14
 801f880:	fb92 f3f3 	sdiv	r3, r2, r3
 801f884:	ee13 2a10 	vmov	r2, s6
 801f888:	9323      	str	r3, [sp, #140]	@ 0x8c
 801f88a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f88c:	eeb0 3a67 	vmov.f32	s6, s15
 801f890:	fb92 f3f3 	sdiv	r3, r2, r3
 801f894:	9324      	str	r3, [sp, #144]	@ 0x90
 801f896:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f898:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801f89a:	3b01      	subs	r3, #1
 801f89c:	930d      	str	r3, [sp, #52]	@ 0x34
 801f89e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f8a0:	bf08      	it	eq
 801f8a2:	4613      	moveq	r3, r2
 801f8a4:	9309      	str	r3, [sp, #36]	@ 0x24
 801f8a6:	e6c2      	b.n	801f62e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f8a8:	2900      	cmp	r1, #0
 801f8aa:	f43f af4d 	beq.w	801f748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f8ae:	eb0a 0003 	add.w	r0, sl, r3
 801f8b2:	0843      	lsrs	r3, r0, #1
 801f8b4:	07c0      	lsls	r0, r0, #31
 801f8b6:	5cfb      	ldrb	r3, [r7, r3]
 801f8b8:	bf54      	ite	pl
 801f8ba:	f003 030f 	andpl.w	r3, r3, #15
 801f8be:	111b      	asrmi	r3, r3, #4
 801f8c0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f8c4:	b2db      	uxtb	r3, r3
 801f8c6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f8c8:	e73e      	b.n	801f748 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 801f8ca:	f8b8 e000 	ldrh.w	lr, [r8]
 801f8ce:	fa1f fb83 	uxth.w	fp, r3
 801f8d2:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f8d6:	43db      	mvns	r3, r3
 801f8d8:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f8dc:	fb11 f10b 	smulbb	r1, r1, fp
 801f8e0:	b2db      	uxtb	r3, r3
 801f8e2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f8e6:	fa5f fc8c 	uxtb.w	ip, ip
 801f8ea:	b2d2      	uxtb	r2, r2
 801f8ec:	fb00 1003 	mla	r0, r0, r3, r1
 801f8f0:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f8f4:	fb1c fc0b 	smulbb	ip, ip, fp
 801f8f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f8fc:	b280      	uxth	r0, r0
 801f8fe:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f902:	fb12 fb0b 	smulbb	fp, r2, fp
 801f906:	fa5f fe8e 	uxtb.w	lr, lr
 801f90a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f90e:	fb0e bb03 	mla	fp, lr, r3, fp
 801f912:	1c43      	adds	r3, r0, #1
 801f914:	fa1f fc8c 	uxth.w	ip, ip
 801f918:	fa1f fb8b 	uxth.w	fp, fp
 801f91c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f920:	f10c 0101 	add.w	r1, ip, #1
 801f924:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 801f928:	f10b 0001 	add.w	r0, fp, #1
 801f92c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f930:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f934:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f938:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f93c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801f940:	4318      	orrs	r0, r3
 801f942:	ea40 000c 	orr.w	r0, r0, ip
 801f946:	f8a8 0000 	strh.w	r0, [r8]
 801f94a:	e734      	b.n	801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f94c:	f113 0b01 	adds.w	fp, r3, #1
 801f950:	f53f af31 	bmi.w	801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f954:	45dc      	cmp	ip, fp
 801f956:	f6ff af2e 	blt.w	801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f95a:	f110 0b01 	adds.w	fp, r0, #1
 801f95e:	f53f af2a 	bmi.w	801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f962:	45de      	cmp	lr, fp
 801f964:	f6ff af27 	blt.w	801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f968:	9302      	str	r3, [sp, #8]
 801f96a:	fa0f f38e 	sxth.w	r3, lr
 801f96e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801f970:	9301      	str	r3, [sp, #4]
 801f972:	fa0f f38c 	sxth.w	r3, ip
 801f976:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f97a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f97e:	9300      	str	r3, [sp, #0]
 801f980:	463a      	mov	r2, r7
 801f982:	4653      	mov	r3, sl
 801f984:	4641      	mov	r1, r8
 801f986:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801f988:	f7ff fd4c 	bl	801f424 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f98c:	e713      	b.n	801f7b6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f98e:	1422      	asrs	r2, r4, #16
 801f990:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801f992:	1433      	asrs	r3, r6, #16
 801f994:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f998:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f99c:	fb05 2303 	mla	r3, r5, r3, r2
 801f9a0:	085a      	lsrs	r2, r3, #1
 801f9a2:	07dd      	lsls	r5, r3, #31
 801f9a4:	5cba      	ldrb	r2, [r7, r2]
 801f9a6:	bf54      	ite	pl
 801f9a8:	f002 020f 	andpl.w	r2, r2, #15
 801f9ac:	1112      	asrmi	r2, r2, #4
 801f9ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f9b2:	b2d2      	uxtb	r2, r2
 801f9b4:	2900      	cmp	r1, #0
 801f9b6:	d077      	beq.n	801faa8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801f9b8:	f103 0e01 	add.w	lr, r3, #1
 801f9bc:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f9c0:	f01e 0f01 	tst.w	lr, #1
 801f9c4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f9c8:	bf0c      	ite	eq
 801f9ca:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f9ce:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f9d2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f9d6:	fa5f f58c 	uxtb.w	r5, ip
 801f9da:	9512      	str	r5, [sp, #72]	@ 0x48
 801f9dc:	b308      	cbz	r0, 801fa22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801f9de:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f9e0:	442b      	add	r3, r5
 801f9e2:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f9e6:	07dd      	lsls	r5, r3, #31
 801f9e8:	f103 0301 	add.w	r3, r3, #1
 801f9ec:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f9f0:	bf54      	ite	pl
 801f9f2:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f9f6:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f9fa:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f9fe:	fa5f f58c 	uxtb.w	r5, ip
 801fa02:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fa06:	950c      	str	r5, [sp, #48]	@ 0x30
 801fa08:	07dd      	lsls	r5, r3, #31
 801fa0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fa0e:	bf54      	ite	pl
 801fa10:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa14:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa18:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa1c:	fa5f f38c 	uxtb.w	r3, ip
 801fa20:	9313      	str	r3, [sp, #76]	@ 0x4c
 801fa22:	b289      	uxth	r1, r1
 801fa24:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801fa26:	b280      	uxth	r0, r0
 801fa28:	fb01 f300 	mul.w	r3, r1, r0
 801fa2c:	0109      	lsls	r1, r1, #4
 801fa2e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fa32:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 801fa36:	1ac9      	subs	r1, r1, r3
 801fa38:	b280      	uxth	r0, r0
 801fa3a:	b289      	uxth	r1, r1
 801fa3c:	ebac 0c00 	sub.w	ip, ip, r0
 801fa40:	4369      	muls	r1, r5
 801fa42:	fa1f fc8c 	uxth.w	ip, ip
 801fa46:	fb02 120c 	mla	r2, r2, ip, r1
 801fa4a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801fa4c:	fb00 2001 	mla	r0, r0, r1, r2
 801fa50:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801fa52:	fb03 0302 	mla	r3, r3, r2, r0
 801fa56:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fa5a:	b1d3      	cbz	r3, 801fa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801fa5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fa5e:	4353      	muls	r3, r2
 801fa60:	1c5a      	adds	r2, r3, #1
 801fa62:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fa66:	4a0f      	ldr	r2, [pc, #60]	@ (801faa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 801fa68:	121b      	asrs	r3, r3, #8
 801fa6a:	6812      	ldr	r2, [r2, #0]
 801fa6c:	2bff      	cmp	r3, #255	@ 0xff
 801fa6e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fa72:	d12d      	bne.n	801fad0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 801fa74:	0953      	lsrs	r3, r2, #5
 801fa76:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801fa7a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fa7e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fa82:	f02c 0c07 	bic.w	ip, ip, #7
 801fa86:	ea43 0c0c 	orr.w	ip, r3, ip
 801fa8a:	ea4c 0202 	orr.w	r2, ip, r2
 801fa8e:	f8a8 2000 	strh.w	r2, [r8]
 801fa92:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 801fa94:	f108 0802 	add.w	r8, r8, #2
 801fa98:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fa9c:	441c      	add	r4, r3
 801fa9e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801faa0:	441e      	add	r6, r3
 801faa2:	e6b9      	b.n	801f818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801faa4:	20001b74 	.word	0x20001b74
 801faa8:	2800      	cmp	r0, #0
 801faaa:	d0ba      	beq.n	801fa22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801faac:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801faae:	442b      	add	r3, r5
 801fab0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fab4:	07db      	lsls	r3, r3, #31
 801fab6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801faba:	bf54      	ite	pl
 801fabc:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fac0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fac4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fac8:	fa5f f38c 	uxtb.w	r3, ip
 801facc:	930c      	str	r3, [sp, #48]	@ 0x30
 801face:	e7a8      	b.n	801fa22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 801fad0:	f8b8 e000 	ldrh.w	lr, [r8]
 801fad4:	fa1f fa83 	uxth.w	sl, r3
 801fad8:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fadc:	43db      	mvns	r3, r3
 801fade:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fae2:	fb11 f10a 	smulbb	r1, r1, sl
 801fae6:	b2db      	uxtb	r3, r3
 801fae8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801faec:	b2d2      	uxtb	r2, r2
 801faee:	fa5f fc8c 	uxtb.w	ip, ip
 801faf2:	fb00 1003 	mla	r0, r0, r3, r1
 801faf6:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fafa:	fb12 f20a 	smulbb	r2, r2, sl
 801fafe:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fb02:	b280      	uxth	r0, r0
 801fb04:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801fb08:	fb1c fc0a 	smulbb	ip, ip, sl
 801fb0c:	fa5f fe8e 	uxtb.w	lr, lr
 801fb10:	fb0e 2203 	mla	r2, lr, r3, r2
 801fb14:	fb01 cc03 	mla	ip, r1, r3, ip
 801fb18:	1c43      	adds	r3, r0, #1
 801fb1a:	b292      	uxth	r2, r2
 801fb1c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fb20:	1c51      	adds	r1, r2, #1
 801fb22:	fa1f fc8c 	uxth.w	ip, ip
 801fb26:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801fb2a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801fb2e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fb32:	4308      	orrs	r0, r1
 801fb34:	f10c 0101 	add.w	r1, ip, #1
 801fb38:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fb3c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fb40:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801fb44:	ea40 000c 	orr.w	r0, r0, ip
 801fb48:	f8a8 0000 	strh.w	r0, [r8]
 801fb4c:	e7a1      	b.n	801fa92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 801fb4e:	b017      	add	sp, #92	@ 0x5c
 801fb50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fb54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801fb54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fb58:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 801fb5c:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fb60:	2d00      	cmp	r5, #0
 801fb62:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 801fb66:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 801fb6a:	fb05 0e03 	mla	lr, r5, r3, r0
 801fb6e:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 801fb72:	f2c0 80b0 	blt.w	801fcd6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fb76:	45a9      	cmp	r9, r5
 801fb78:	f340 80ad 	ble.w	801fcd6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fb7c:	2800      	cmp	r0, #0
 801fb7e:	f2c0 80a8 	blt.w	801fcd2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fb82:	4580      	cmp	r8, r0
 801fb84:	f340 80a5 	ble.w	801fcd2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fb88:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fb8c:	f01e 0f01 	tst.w	lr, #1
 801fb90:	5d16      	ldrb	r6, [r2, r4]
 801fb92:	bf0c      	ite	eq
 801fb94:	f006 060f 	andeq.w	r6, r6, #15
 801fb98:	1136      	asrne	r6, r6, #4
 801fb9a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fb9e:	b2f6      	uxtb	r6, r6
 801fba0:	1c44      	adds	r4, r0, #1
 801fba2:	f100 809b 	bmi.w	801fcdc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fba6:	45a0      	cmp	r8, r4
 801fba8:	f340 8098 	ble.w	801fcdc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fbac:	2f00      	cmp	r7, #0
 801fbae:	f000 8097 	beq.w	801fce0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801fbb2:	f10e 0a01 	add.w	sl, lr, #1
 801fbb6:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fbba:	f01a 0f01 	tst.w	sl, #1
 801fbbe:	5d14      	ldrb	r4, [r2, r4]
 801fbc0:	bf0c      	ite	eq
 801fbc2:	f004 040f 	andeq.w	r4, r4, #15
 801fbc6:	1124      	asrne	r4, r4, #4
 801fbc8:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fbcc:	b2e4      	uxtb	r4, r4
 801fbce:	3501      	adds	r5, #1
 801fbd0:	f100 808a 	bmi.w	801fce8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fbd4:	45a9      	cmp	r9, r5
 801fbd6:	f340 8087 	ble.w	801fce8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fbda:	f1bc 0f00 	cmp.w	ip, #0
 801fbde:	f000 8086 	beq.w	801fcee <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801fbe2:	2800      	cmp	r0, #0
 801fbe4:	db7e      	blt.n	801fce4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fbe6:	4580      	cmp	r8, r0
 801fbe8:	dd7c      	ble.n	801fce4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fbea:	eb03 090e 	add.w	r9, r3, lr
 801fbee:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fbf2:	f019 0f01 	tst.w	r9, #1
 801fbf6:	5d55      	ldrb	r5, [r2, r5]
 801fbf8:	bf0c      	ite	eq
 801fbfa:	f005 050f 	andeq.w	r5, r5, #15
 801fbfe:	112d      	asrne	r5, r5, #4
 801fc00:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fc04:	b2ed      	uxtb	r5, r5
 801fc06:	3001      	adds	r0, #1
 801fc08:	d474      	bmi.n	801fcf4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fc0a:	4580      	cmp	r8, r0
 801fc0c:	dd72      	ble.n	801fcf4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fc0e:	2f00      	cmp	r7, #0
 801fc10:	d072      	beq.n	801fcf8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801fc12:	3301      	adds	r3, #1
 801fc14:	449e      	add	lr, r3
 801fc16:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fc1a:	f01e 0f01 	tst.w	lr, #1
 801fc1e:	5cd0      	ldrb	r0, [r2, r3]
 801fc20:	bf0c      	ite	eq
 801fc22:	f000 000f 	andeq.w	r0, r0, #15
 801fc26:	1100      	asrne	r0, r0, #4
 801fc28:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fc2c:	b2c3      	uxtb	r3, r0
 801fc2e:	b2ba      	uxth	r2, r7
 801fc30:	fa1f fc8c 	uxth.w	ip, ip
 801fc34:	fb02 f00c 	mul.w	r0, r2, ip
 801fc38:	0112      	lsls	r2, r2, #4
 801fc3a:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fc3e:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 801fc42:	1a12      	subs	r2, r2, r0
 801fc44:	fa1f fc8c 	uxth.w	ip, ip
 801fc48:	b292      	uxth	r2, r2
 801fc4a:	eba7 070c 	sub.w	r7, r7, ip
 801fc4e:	4362      	muls	r2, r4
 801fc50:	b2bf      	uxth	r7, r7
 801fc52:	fb06 2207 	mla	r2, r6, r7, r2
 801fc56:	fb0c 2505 	mla	r5, ip, r5, r2
 801fc5a:	fb00 5303 	mla	r3, r0, r3, r5
 801fc5e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc62:	b3a3      	cbz	r3, 801fcce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801fc64:	4a25      	ldr	r2, [pc, #148]	@ (801fcfc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801fc66:	880e      	ldrh	r6, [r1, #0]
 801fc68:	6815      	ldr	r5, [r2, #0]
 801fc6a:	b29a      	uxth	r2, r3
 801fc6c:	1234      	asrs	r4, r6, #8
 801fc6e:	43db      	mvns	r3, r3
 801fc70:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801fc74:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801fc78:	b2db      	uxtb	r3, r3
 801fc7a:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801fc7e:	fb10 f002 	smulbb	r0, r0, r2
 801fc82:	b2ed      	uxtb	r5, r5
 801fc84:	fb17 f702 	smulbb	r7, r7, r2
 801fc88:	fb04 0403 	mla	r4, r4, r3, r0
 801fc8c:	10f0      	asrs	r0, r6, #3
 801fc8e:	fb15 f202 	smulbb	r2, r5, r2
 801fc92:	00f6      	lsls	r6, r6, #3
 801fc94:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801fc98:	b2a4      	uxth	r4, r4
 801fc9a:	b2f6      	uxtb	r6, r6
 801fc9c:	fb00 7003 	mla	r0, r0, r3, r7
 801fca0:	fb06 2303 	mla	r3, r6, r3, r2
 801fca4:	b280      	uxth	r0, r0
 801fca6:	b29a      	uxth	r2, r3
 801fca8:	1c63      	adds	r3, r4, #1
 801fcaa:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fcae:	1c53      	adds	r3, r2, #1
 801fcb0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fcb4:	1c42      	adds	r2, r0, #1
 801fcb6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801fcba:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fcbe:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fcc2:	0940      	lsrs	r0, r0, #5
 801fcc4:	4323      	orrs	r3, r4
 801fcc6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801fcca:	4303      	orrs	r3, r0
 801fccc:	800b      	strh	r3, [r1, #0]
 801fcce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fcd2:	2600      	movs	r6, #0
 801fcd4:	e764      	b.n	801fba0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801fcd6:	2400      	movs	r4, #0
 801fcd8:	4626      	mov	r6, r4
 801fcda:	e778      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fcdc:	2400      	movs	r4, #0
 801fcde:	e776      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fce0:	463c      	mov	r4, r7
 801fce2:	e774      	b.n	801fbce <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fce4:	2500      	movs	r5, #0
 801fce6:	e78e      	b.n	801fc06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801fce8:	2300      	movs	r3, #0
 801fcea:	461d      	mov	r5, r3
 801fcec:	e79f      	b.n	801fc2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fcee:	4663      	mov	r3, ip
 801fcf0:	4665      	mov	r5, ip
 801fcf2:	e79c      	b.n	801fc2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fcf4:	2300      	movs	r3, #0
 801fcf6:	e79a      	b.n	801fc2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fcf8:	463b      	mov	r3, r7
 801fcfa:	e798      	b.n	801fc2e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fcfc:	20001b74 	.word	0x20001b74

0801fd00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fd00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd04:	b093      	sub	sp, #76	@ 0x4c
 801fd06:	461d      	mov	r5, r3
 801fd08:	920c      	str	r2, [sp, #48]	@ 0x30
 801fd0a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801fd0c:	9011      	str	r0, [sp, #68]	@ 0x44
 801fd0e:	9107      	str	r1, [sp, #28]
 801fd10:	6850      	ldr	r0, [r2, #4]
 801fd12:	6812      	ldr	r2, [r2, #0]
 801fd14:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801fd18:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801fd1c:	fb00 1303 	mla	r3, r0, r3, r1
 801fd20:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fd24:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fd26:	689b      	ldr	r3, [r3, #8]
 801fd28:	3301      	adds	r3, #1
 801fd2a:	f023 0301 	bic.w	r3, r3, #1
 801fd2e:	9306      	str	r3, [sp, #24]
 801fd30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fd32:	681f      	ldr	r7, [r3, #0]
 801fd34:	9b07      	ldr	r3, [sp, #28]
 801fd36:	2b00      	cmp	r3, #0
 801fd38:	dc03      	bgt.n	801fd42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801fd3a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fd3c:	2b00      	cmp	r3, #0
 801fd3e:	f340 8267 	ble.w	8020210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fd42:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fd44:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd48:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fd4c:	1e48      	subs	r0, r1, #1
 801fd4e:	f102 3cff 	add.w	ip, r2, #4294967295
 801fd52:	2d00      	cmp	r5, #0
 801fd54:	f340 80b7 	ble.w	801fec6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fd58:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fd5c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fd60:	d406      	bmi.n	801fd70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fd62:	4586      	cmp	lr, r0
 801fd64:	da04      	bge.n	801fd70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fd66:	2b00      	cmp	r3, #0
 801fd68:	db02      	blt.n	801fd70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fd6a:	4563      	cmp	r3, ip
 801fd6c:	f2c0 80ac 	blt.w	801fec8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801fd70:	f11e 0e01 	adds.w	lr, lr, #1
 801fd74:	f100 809f 	bmi.w	801feb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fd78:	4571      	cmp	r1, lr
 801fd7a:	f2c0 809c 	blt.w	801feb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fd7e:	3301      	adds	r3, #1
 801fd80:	f100 8099 	bmi.w	801feb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fd84:	429a      	cmp	r2, r3
 801fd86:	f2c0 8096 	blt.w	801feb6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 801fd8a:	46c8      	mov	r8, r9
 801fd8c:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fd90:	9509      	str	r5, [sp, #36]	@ 0x24
 801fd92:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fd94:	2b00      	cmp	r3, #0
 801fd96:	f340 80b5 	ble.w	801ff04 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801fd9a:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fd9e:	1430      	asrs	r0, r6, #16
 801fda0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fda4:	9308      	str	r3, [sp, #32]
 801fda6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801fda8:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fdac:	1423      	asrs	r3, r4, #16
 801fdae:	f100 813f 	bmi.w	8020030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fdb2:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fdb6:	455b      	cmp	r3, fp
 801fdb8:	f280 813a 	bge.w	8020030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fdbc:	2800      	cmp	r0, #0
 801fdbe:	f2c0 8137 	blt.w	8020030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fdc2:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fdc6:	4558      	cmp	r0, fp
 801fdc8:	f280 8132 	bge.w	8020030 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fdcc:	9a06      	ldr	r2, [sp, #24]
 801fdce:	fb00 3302 	mla	r3, r0, r2, r3
 801fdd2:	0858      	lsrs	r0, r3, #1
 801fdd4:	07da      	lsls	r2, r3, #31
 801fdd6:	9a08      	ldr	r2, [sp, #32]
 801fdd8:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fddc:	bf54      	ite	pl
 801fdde:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fde2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fde6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fdea:	fa5f fc8c 	uxtb.w	ip, ip
 801fdee:	2a00      	cmp	r2, #0
 801fdf0:	f000 80cc 	beq.w	801ff8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fdf4:	1c58      	adds	r0, r3, #1
 801fdf6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fdfa:	07c0      	lsls	r0, r0, #31
 801fdfc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fe00:	bf54      	ite	pl
 801fe02:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fe06:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fe0a:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fe0e:	fa5f fe8e 	uxtb.w	lr, lr
 801fe12:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 801fe16:	b1b9      	cbz	r1, 801fe48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801fe18:	4453      	add	r3, sl
 801fe1a:	0858      	lsrs	r0, r3, #1
 801fe1c:	07da      	lsls	r2, r3, #31
 801fe1e:	5c38      	ldrb	r0, [r7, r0]
 801fe20:	bf54      	ite	pl
 801fe22:	f000 000f 	andpl.w	r0, r0, #15
 801fe26:	1100      	asrmi	r0, r0, #4
 801fe28:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fe2c:	b2c0      	uxtb	r0, r0
 801fe2e:	900a      	str	r0, [sp, #40]	@ 0x28
 801fe30:	1c58      	adds	r0, r3, #1
 801fe32:	0843      	lsrs	r3, r0, #1
 801fe34:	07c2      	lsls	r2, r0, #31
 801fe36:	5cfb      	ldrb	r3, [r7, r3]
 801fe38:	bf54      	ite	pl
 801fe3a:	f003 030f 	andpl.w	r3, r3, #15
 801fe3e:	111b      	asrmi	r3, r3, #4
 801fe40:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fe44:	b2db      	uxtb	r3, r3
 801fe46:	930e      	str	r3, [sp, #56]	@ 0x38
 801fe48:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fe4c:	b289      	uxth	r1, r1
 801fe4e:	fb02 f301 	mul.w	r3, r2, r1
 801fe52:	0112      	lsls	r2, r2, #4
 801fe54:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fe58:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 801fe5c:	1ad2      	subs	r2, r2, r3
 801fe5e:	b289      	uxth	r1, r1
 801fe60:	b292      	uxth	r2, r2
 801fe62:	1a40      	subs	r0, r0, r1
 801fe64:	fa1f fe80 	uxth.w	lr, r0
 801fe68:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801fe6a:	4342      	muls	r2, r0
 801fe6c:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fe70:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801fe72:	fb01 c102 	mla	r1, r1, r2, ip
 801fe76:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801fe78:	fb03 1302 	mla	r3, r3, r2, r1
 801fe7c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fe80:	2bff      	cmp	r3, #255	@ 0xff
 801fe82:	f040 8094 	bne.w	801ffae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fe86:	4bbf      	ldr	r3, [pc, #764]	@ (8020184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fe88:	681a      	ldr	r2, [r3, #0]
 801fe8a:	4bbf      	ldr	r3, [pc, #764]	@ (8020188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fe8c:	0951      	lsrs	r1, r2, #5
 801fe8e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fe92:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fe96:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801fe9a:	430b      	orrs	r3, r1
 801fe9c:	4313      	orrs	r3, r2
 801fe9e:	f8a8 3000 	strh.w	r3, [r8]
 801fea2:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801fea4:	f108 0802 	add.w	r8, r8, #2
 801fea8:	441c      	add	r4, r3
 801feaa:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801feac:	441e      	add	r6, r3
 801feae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801feb0:	3b01      	subs	r3, #1
 801feb2:	9309      	str	r3, [sp, #36]	@ 0x24
 801feb4:	e76d      	b.n	801fd92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801feb6:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801feb8:	3d01      	subs	r5, #1
 801feba:	f109 0902 	add.w	r9, r9, #2
 801febe:	441c      	add	r4, r3
 801fec0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fec2:	441e      	add	r6, r3
 801fec4:	e745      	b.n	801fd52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fec6:	d021      	beq.n	801ff0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801fec8:	1e6b      	subs	r3, r5, #1
 801feca:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801fecc:	fb00 4003 	mla	r0, r0, r3, r4
 801fed0:	1400      	asrs	r0, r0, #16
 801fed2:	f53f af5a 	bmi.w	801fd8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fed6:	3901      	subs	r1, #1
 801fed8:	4288      	cmp	r0, r1
 801feda:	f6bf af56 	bge.w	801fd8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fede:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801fee0:	fb01 6303 	mla	r3, r1, r3, r6
 801fee4:	141b      	asrs	r3, r3, #16
 801fee6:	f53f af50 	bmi.w	801fd8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801feea:	3a01      	subs	r2, #1
 801feec:	4293      	cmp	r3, r2
 801feee:	f6bf af4c 	bge.w	801fd8a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fef2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fef6:	46a8      	mov	r8, r5
 801fef8:	46ce      	mov	lr, r9
 801fefa:	9308      	str	r3, [sp, #32]
 801fefc:	f1b8 0f00 	cmp.w	r8, #0
 801ff00:	f300 80b6 	bgt.w	8020070 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ff04:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ff08:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ff0c:	9b07      	ldr	r3, [sp, #28]
 801ff0e:	2b00      	cmp	r3, #0
 801ff10:	f340 817e 	ble.w	8020210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ff14:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ff18:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ff1a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff1e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff22:	eef0 6a62 	vmov.f32	s13, s5
 801ff26:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff32:	ee16 4a90 	vmov	r4, s13
 801ff36:	eef0 6a43 	vmov.f32	s13, s6
 801ff3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff3e:	ee16 6a90 	vmov	r6, s13
 801ff42:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff46:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff5a:	ee12 2a90 	vmov	r2, s5
 801ff5e:	eef0 2a47 	vmov.f32	s5, s14
 801ff62:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff66:	ee13 2a10 	vmov	r2, s6
 801ff6a:	931f      	str	r3, [sp, #124]	@ 0x7c
 801ff6c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ff6e:	eeb0 3a67 	vmov.f32	s6, s15
 801ff72:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff76:	9320      	str	r3, [sp, #128]	@ 0x80
 801ff78:	9b07      	ldr	r3, [sp, #28]
 801ff7a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801ff7c:	3b01      	subs	r3, #1
 801ff7e:	9307      	str	r3, [sp, #28]
 801ff80:	bf08      	it	eq
 801ff82:	4615      	moveq	r5, r2
 801ff84:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ff86:	bf18      	it	ne
 801ff88:	461d      	movne	r5, r3
 801ff8a:	e6d3      	b.n	801fd34 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801ff8c:	2900      	cmp	r1, #0
 801ff8e:	f43f af5b 	beq.w	801fe48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801ff92:	eb0a 0003 	add.w	r0, sl, r3
 801ff96:	0843      	lsrs	r3, r0, #1
 801ff98:	07c0      	lsls	r0, r0, #31
 801ff9a:	5cfb      	ldrb	r3, [r7, r3]
 801ff9c:	bf54      	ite	pl
 801ff9e:	f003 030f 	andpl.w	r3, r3, #15
 801ffa2:	111b      	asrmi	r3, r3, #4
 801ffa4:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801ffa8:	b2db      	uxtb	r3, r3
 801ffaa:	930a      	str	r3, [sp, #40]	@ 0x28
 801ffac:	e74c      	b.n	801fe48 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 801ffae:	2b00      	cmp	r3, #0
 801ffb0:	f43f af77 	beq.w	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801ffb4:	4a73      	ldr	r2, [pc, #460]	@ (8020184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801ffb6:	fa1f fe83 	uxth.w	lr, r3
 801ffba:	f8b8 c000 	ldrh.w	ip, [r8]
 801ffbe:	43db      	mvns	r3, r3
 801ffc0:	6810      	ldr	r0, [r2, #0]
 801ffc2:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ffc6:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ffca:	b2db      	uxtb	r3, r3
 801ffcc:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ffd0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ffd4:	fb12 f20e 	smulbb	r2, r2, lr
 801ffd8:	b2c0      	uxtb	r0, r0
 801ffda:	fb1b fb0e 	smulbb	fp, fp, lr
 801ffde:	fb01 2103 	mla	r1, r1, r3, r2
 801ffe2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ffe6:	fb10 fe0e 	smulbb	lr, r0, lr
 801ffea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ffee:	b289      	uxth	r1, r1
 801fff0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fff4:	fa5f fc8c 	uxtb.w	ip, ip
 801fff8:	fb02 b203 	mla	r2, r2, r3, fp
 801fffc:	1c48      	adds	r0, r1, #1
 801fffe:	fb0c e303 	mla	r3, ip, r3, lr
 8020002:	b292      	uxth	r2, r2
 8020004:	b29b      	uxth	r3, r3
 8020006:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802000a:	f102 0b01 	add.w	fp, r2, #1
 802000e:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8020012:	1c59      	adds	r1, r3, #1
 8020014:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020018:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802001c:	0952      	lsrs	r2, r2, #5
 802001e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020022:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020026:	4301      	orrs	r1, r0
 8020028:	4311      	orrs	r1, r2
 802002a:	f8a8 1000 	strh.w	r1, [r8]
 802002e:	e738      	b.n	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020030:	f113 0b01 	adds.w	fp, r3, #1
 8020034:	f53f af35 	bmi.w	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020038:	45dc      	cmp	ip, fp
 802003a:	f6ff af32 	blt.w	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802003e:	f110 0b01 	adds.w	fp, r0, #1
 8020042:	f53f af2e 	bmi.w	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020046:	45de      	cmp	lr, fp
 8020048:	f6ff af2b 	blt.w	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802004c:	9302      	str	r3, [sp, #8]
 802004e:	fa0f f38e 	sxth.w	r3, lr
 8020052:	9a08      	ldr	r2, [sp, #32]
 8020054:	9301      	str	r3, [sp, #4]
 8020056:	fa0f f38c 	sxth.w	r3, ip
 802005a:	9105      	str	r1, [sp, #20]
 802005c:	4641      	mov	r1, r8
 802005e:	9300      	str	r3, [sp, #0]
 8020060:	4653      	mov	r3, sl
 8020062:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8020066:	463a      	mov	r2, r7
 8020068:	9811      	ldr	r0, [sp, #68]	@ 0x44
 802006a:	f7ff fd73 	bl	801fb54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802006e:	e718      	b.n	801fea2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8020070:	1422      	asrs	r2, r4, #16
 8020072:	9906      	ldr	r1, [sp, #24]
 8020074:	1433      	asrs	r3, r6, #16
 8020076:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802007a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802007e:	fb01 2303 	mla	r3, r1, r3, r2
 8020082:	085a      	lsrs	r2, r3, #1
 8020084:	07d9      	lsls	r1, r3, #31
 8020086:	5cba      	ldrb	r2, [r7, r2]
 8020088:	bf54      	ite	pl
 802008a:	f002 020f 	andpl.w	r2, r2, #15
 802008e:	1112      	asrmi	r2, r2, #4
 8020090:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020094:	b2d2      	uxtb	r2, r2
 8020096:	2800      	cmp	r0, #0
 8020098:	d063      	beq.n	8020162 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 802009a:	f103 0a01 	add.w	sl, r3, #1
 802009e:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80200a2:	f01a 0f01 	tst.w	sl, #1
 80200a6:	5c79      	ldrb	r1, [r7, r1]
 80200a8:	bf0c      	ite	eq
 80200aa:	f001 010f 	andeq.w	r1, r1, #15
 80200ae:	1109      	asrne	r1, r1, #4
 80200b0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80200b4:	b2c9      	uxtb	r1, r1
 80200b6:	910f      	str	r1, [sp, #60]	@ 0x3c
 80200b8:	f1bc 0f00 	cmp.w	ip, #0
 80200bc:	d01a      	beq.n	80200f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80200be:	9908      	ldr	r1, [sp, #32]
 80200c0:	440b      	add	r3, r1
 80200c2:	0859      	lsrs	r1, r3, #1
 80200c4:	f013 0f01 	tst.w	r3, #1
 80200c8:	f103 0301 	add.w	r3, r3, #1
 80200cc:	5c79      	ldrb	r1, [r7, r1]
 80200ce:	bf0c      	ite	eq
 80200d0:	f001 010f 	andeq.w	r1, r1, #15
 80200d4:	1109      	asrne	r1, r1, #4
 80200d6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80200da:	b2c9      	uxtb	r1, r1
 80200dc:	910b      	str	r1, [sp, #44]	@ 0x2c
 80200de:	0859      	lsrs	r1, r3, #1
 80200e0:	07db      	lsls	r3, r3, #31
 80200e2:	5c79      	ldrb	r1, [r7, r1]
 80200e4:	bf54      	ite	pl
 80200e6:	f001 010f 	andpl.w	r1, r1, #15
 80200ea:	1109      	asrmi	r1, r1, #4
 80200ec:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80200f0:	b2c9      	uxtb	r1, r1
 80200f2:	9110      	str	r1, [sp, #64]	@ 0x40
 80200f4:	b280      	uxth	r0, r0
 80200f6:	fa1f fc8c 	uxth.w	ip, ip
 80200fa:	fb00 f30c 	mul.w	r3, r0, ip
 80200fe:	0100      	lsls	r0, r0, #4
 8020100:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020104:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8020108:	1ac0      	subs	r0, r0, r3
 802010a:	fa1f fc8c 	uxth.w	ip, ip
 802010e:	b280      	uxth	r0, r0
 8020110:	eba1 010c 	sub.w	r1, r1, ip
 8020114:	fa1f fa81 	uxth.w	sl, r1
 8020118:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 802011a:	4348      	muls	r0, r1
 802011c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 802011e:	fb02 020a 	mla	r2, r2, sl, r0
 8020122:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020126:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8020128:	fb03 c302 	mla	r3, r3, r2, ip
 802012c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020130:	2bff      	cmp	r3, #255	@ 0xff
 8020132:	d12b      	bne.n	802018c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020134:	4b13      	ldr	r3, [pc, #76]	@ (8020184 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020136:	681a      	ldr	r2, [r3, #0]
 8020138:	4b13      	ldr	r3, [pc, #76]	@ (8020188 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802013a:	0951      	lsrs	r1, r2, #5
 802013c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020140:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8020144:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020148:	430b      	orrs	r3, r1
 802014a:	4313      	orrs	r3, r2
 802014c:	f8ae 3000 	strh.w	r3, [lr]
 8020150:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020152:	f10e 0e02 	add.w	lr, lr, #2
 8020156:	f108 38ff 	add.w	r8, r8, #4294967295
 802015a:	441c      	add	r4, r3
 802015c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802015e:	441e      	add	r6, r3
 8020160:	e6cc      	b.n	801fefc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8020162:	f1bc 0f00 	cmp.w	ip, #0
 8020166:	d0c5      	beq.n	80200f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020168:	9908      	ldr	r1, [sp, #32]
 802016a:	440b      	add	r3, r1
 802016c:	0859      	lsrs	r1, r3, #1
 802016e:	07db      	lsls	r3, r3, #31
 8020170:	5c79      	ldrb	r1, [r7, r1]
 8020172:	bf54      	ite	pl
 8020174:	f001 010f 	andpl.w	r1, r1, #15
 8020178:	1109      	asrmi	r1, r1, #4
 802017a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802017e:	b2c9      	uxtb	r1, r1
 8020180:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020182:	e7b7      	b.n	80200f4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8020184:	20001b74 	.word	0x20001b74
 8020188:	fffff800 	.word	0xfffff800
 802018c:	2b00      	cmp	r3, #0
 802018e:	d0df      	beq.n	8020150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8020190:	4a21      	ldr	r2, [pc, #132]	@ (8020218 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8020192:	fa1f fa83 	uxth.w	sl, r3
 8020196:	f8be c000 	ldrh.w	ip, [lr]
 802019a:	43db      	mvns	r3, r3
 802019c:	6810      	ldr	r0, [r2, #0]
 802019e:	ea4f 212c 	mov.w	r1, ip, asr #8
 80201a2:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80201a6:	b2db      	uxtb	r3, r3
 80201a8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80201ac:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80201b0:	fb12 f20a 	smulbb	r2, r2, sl
 80201b4:	b2c0      	uxtb	r0, r0
 80201b6:	fb1b fb0a 	smulbb	fp, fp, sl
 80201ba:	fb01 2103 	mla	r1, r1, r3, r2
 80201be:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80201c2:	fb10 f00a 	smulbb	r0, r0, sl
 80201c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80201ca:	b289      	uxth	r1, r1
 80201cc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80201d0:	fa5f fc8c 	uxtb.w	ip, ip
 80201d4:	fb02 b203 	mla	r2, r2, r3, fp
 80201d8:	fb0c 0003 	mla	r0, ip, r3, r0
 80201dc:	1c4b      	adds	r3, r1, #1
 80201de:	b292      	uxth	r2, r2
 80201e0:	b280      	uxth	r0, r0
 80201e2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80201e6:	f100 0b01 	add.w	fp, r0, #1
 80201ea:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80201ee:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80201f2:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80201f6:	ea4b 0101 	orr.w	r1, fp, r1
 80201fa:	f102 0b01 	add.w	fp, r2, #1
 80201fe:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020202:	0952      	lsrs	r2, r2, #5
 8020204:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020208:	4311      	orrs	r1, r2
 802020a:	f8ae 1000 	strh.w	r1, [lr]
 802020e:	e79f      	b.n	8020150 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8020210:	b013      	add	sp, #76	@ 0x4c
 8020212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020216:	bf00      	nop
 8020218:	20001b74 	.word	0x20001b74

0802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 802021c:	b570      	push	{r4, r5, r6, lr}
 802021e:	1208      	asrs	r0, r1, #8
 8020220:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8020224:	b29e      	uxth	r6, r3
 8020226:	1213      	asrs	r3, r2, #8
 8020228:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802022c:	10cc      	asrs	r4, r1, #3
 802022e:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020232:	00c9      	lsls	r1, r1, #3
 8020234:	fb10 f006 	smulbb	r0, r0, r6
 8020238:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802023c:	fb13 f305 	smulbb	r3, r3, r5
 8020240:	fb14 f406 	smulbb	r4, r4, r6
 8020244:	4418      	add	r0, r3
 8020246:	10d3      	asrs	r3, r2, #3
 8020248:	00d2      	lsls	r2, r2, #3
 802024a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802024e:	b280      	uxth	r0, r0
 8020250:	b2d2      	uxtb	r2, r2
 8020252:	fb13 f305 	smulbb	r3, r3, r5
 8020256:	fb12 f205 	smulbb	r2, r2, r5
 802025a:	441c      	add	r4, r3
 802025c:	b2cb      	uxtb	r3, r1
 802025e:	fb13 f306 	smulbb	r3, r3, r6
 8020262:	b2a4      	uxth	r4, r4
 8020264:	4413      	add	r3, r2
 8020266:	1c42      	adds	r2, r0, #1
 8020268:	b29b      	uxth	r3, r3
 802026a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802026e:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8020272:	1c58      	adds	r0, r3, #1
 8020274:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020278:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802027c:	4310      	orrs	r0, r2
 802027e:	1c62      	adds	r2, r4, #1
 8020280:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020284:	0964      	lsrs	r4, r4, #5
 8020286:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802028a:	4320      	orrs	r0, r4
 802028c:	bd70      	pop	{r4, r5, r6, pc}
	...

08020290 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8020290:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020294:	b08f      	sub	sp, #60	@ 0x3c
 8020296:	461c      	mov	r4, r3
 8020298:	460d      	mov	r5, r1
 802029a:	4616      	mov	r6, r2
 802029c:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80202a0:	9004      	str	r0, [sp, #16]
 80202a2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80202a4:	2f00      	cmp	r7, #0
 80202a6:	f000 80f6 	beq.w	8020496 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80202aa:	6820      	ldr	r0, [r4, #0]
 80202ac:	aa0a      	add	r2, sp, #40	@ 0x28
 80202ae:	6861      	ldr	r1, [r4, #4]
 80202b0:	f04f 0802 	mov.w	r8, #2
 80202b4:	3604      	adds	r6, #4
 80202b6:	c203      	stmia	r2!, {r0, r1}
 80202b8:	6818      	ldr	r0, [r3, #0]
 80202ba:	aa0c      	add	r2, sp, #48	@ 0x30
 80202bc:	6859      	ldr	r1, [r3, #4]
 80202be:	c203      	stmia	r2!, {r0, r1}
 80202c0:	a80a      	add	r0, sp, #40	@ 0x28
 80202c2:	f7ef fb9d 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80202c6:	4621      	mov	r1, r4
 80202c8:	a80c      	add	r0, sp, #48	@ 0x30
 80202ca:	f7ef fbc1 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80202ce:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 80202d2:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 80202d6:	f002 0301 	and.w	r3, r2, #1
 80202da:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 80202de:	9306      	str	r3, [sp, #24]
 80202e0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80202e4:	f003 0101 	and.w	r1, r3, #1
 80202e8:	9105      	str	r1, [sp, #20]
 80202ea:	9805      	ldr	r0, [sp, #20]
 80202ec:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80202f0:	4403      	add	r3, r0
 80202f2:	fb01 2303 	mla	r3, r1, r3, r2
 80202f6:	fb93 f3f8 	sdiv	r3, r3, r8
 80202fa:	441d      	add	r5, r3
 80202fc:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8020300:	441a      	add	r2, r3
 8020302:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8020306:	4419      	add	r1, r3
 8020308:	4b64      	ldr	r3, [pc, #400]	@ (802049c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802030a:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 802030e:	6818      	ldr	r0, [r3, #0]
 8020310:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8020314:	6803      	ldr	r3, [r0, #0]
 8020316:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8020318:	4798      	blx	r3
 802031a:	4a61      	ldr	r2, [pc, #388]	@ (80204a0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 802031c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8020320:	2fff      	cmp	r7, #255	@ 0xff
 8020322:	8813      	ldrh	r3, [r2, #0]
 8020324:	4611      	mov	r1, r2
 8020326:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 802032a:	fb03 fb0b 	mul.w	fp, r3, fp
 802032e:	fb03 a404 	mla	r4, r3, r4, sl
 8020332:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020336:	d06b      	beq.n	8020410 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8020338:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 802033c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8020340:	9303      	str	r3, [sp, #12]
 8020342:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8020346:	e9cd 3207 	strd	r3, r2, [sp, #28]
 802034a:	9b07      	ldr	r3, [sp, #28]
 802034c:	42a3      	cmp	r3, r4
 802034e:	f240 809d 	bls.w	802048c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020352:	9b06      	ldr	r3, [sp, #24]
 8020354:	2b00      	cmp	r3, #0
 8020356:	d039      	beq.n	80203cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8020358:	782b      	ldrb	r3, [r5, #0]
 802035a:	f105 0801 	add.w	r8, r5, #1
 802035e:	f109 3bff 	add.w	fp, r9, #4294967295
 8020362:	8822      	ldrh	r2, [r4, #0]
 8020364:	f003 030f 	and.w	r3, r3, #15
 8020368:	9804      	ldr	r0, [sp, #16]
 802036a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802036e:	9b03      	ldr	r3, [sp, #12]
 8020370:	9300      	str	r3, [sp, #0]
 8020372:	463b      	mov	r3, r7
 8020374:	f7ff ff52 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8020378:	f824 0b02 	strh.w	r0, [r4], #2
 802037c:	f1bb 0f01 	cmp.w	fp, #1
 8020380:	46a2      	mov	sl, r4
 8020382:	f104 0404 	add.w	r4, r4, #4
 8020386:	dd24      	ble.n	80203d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8020388:	f898 3000 	ldrb.w	r3, [r8]
 802038c:	f1ab 0b02 	sub.w	fp, fp, #2
 8020390:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020394:	091b      	lsrs	r3, r3, #4
 8020396:	9804      	ldr	r0, [sp, #16]
 8020398:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802039c:	9b03      	ldr	r3, [sp, #12]
 802039e:	9300      	str	r3, [sp, #0]
 80203a0:	463b      	mov	r3, r7
 80203a2:	f7ff ff3b 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80203a6:	f824 0c04 	strh.w	r0, [r4, #-4]
 80203aa:	f818 3b01 	ldrb.w	r3, [r8], #1
 80203ae:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80203b2:	f003 030f 	and.w	r3, r3, #15
 80203b6:	9804      	ldr	r0, [sp, #16]
 80203b8:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80203bc:	9b03      	ldr	r3, [sp, #12]
 80203be:	9300      	str	r3, [sp, #0]
 80203c0:	463b      	mov	r3, r7
 80203c2:	f7ff ff2b 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80203c6:	f824 0c02 	strh.w	r0, [r4, #-2]
 80203ca:	e7d7      	b.n	802037c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80203cc:	46a8      	mov	r8, r5
 80203ce:	46cb      	mov	fp, r9
 80203d0:	e7d4      	b.n	802037c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 80203d2:	d10e      	bne.n	80203f2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 80203d4:	f898 3000 	ldrb.w	r3, [r8]
 80203d8:	f8ba 2000 	ldrh.w	r2, [sl]
 80203dc:	091b      	lsrs	r3, r3, #4
 80203de:	9804      	ldr	r0, [sp, #16]
 80203e0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80203e4:	9b03      	ldr	r3, [sp, #12]
 80203e6:	9300      	str	r3, [sp, #0]
 80203e8:	463b      	mov	r3, r7
 80203ea:	f7ff ff17 	bl	802021c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80203ee:	f82a 0b02 	strh.w	r0, [sl], #2
 80203f2:	9b08      	ldr	r3, [sp, #32]
 80203f4:	9a05      	ldr	r2, [sp, #20]
 80203f6:	881c      	ldrh	r4, [r3, #0]
 80203f8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80203fc:	eba4 0409 	sub.w	r4, r4, r9
 8020400:	4413      	add	r3, r2
 8020402:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8020404:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8020408:	fb93 f3f2 	sdiv	r3, r3, r2
 802040c:	441d      	add	r5, r3
 802040e:	e79c      	b.n	802034a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8020410:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8020414:	45a3      	cmp	fp, r4
 8020416:	d939      	bls.n	802048c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8020418:	9b06      	ldr	r3, [sp, #24]
 802041a:	b1fb      	cbz	r3, 802045c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 802041c:	782b      	ldrb	r3, [r5, #0]
 802041e:	1c6a      	adds	r2, r5, #1
 8020420:	f109 30ff 	add.w	r0, r9, #4294967295
 8020424:	3402      	adds	r4, #2
 8020426:	f003 030f 	and.w	r3, r3, #15
 802042a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802042e:	f824 3c02 	strh.w	r3, [r4, #-2]
 8020432:	2801      	cmp	r0, #1
 8020434:	4623      	mov	r3, r4
 8020436:	f104 0404 	add.w	r4, r4, #4
 802043a:	dd12      	ble.n	8020462 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 802043c:	7813      	ldrb	r3, [r2, #0]
 802043e:	3802      	subs	r0, #2
 8020440:	091b      	lsrs	r3, r3, #4
 8020442:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020446:	f824 3c04 	strh.w	r3, [r4, #-4]
 802044a:	f812 3b01 	ldrb.w	r3, [r2], #1
 802044e:	f003 030f 	and.w	r3, r3, #15
 8020452:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020456:	f824 3c02 	strh.w	r3, [r4, #-2]
 802045a:	e7ea      	b.n	8020432 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802045c:	462a      	mov	r2, r5
 802045e:	4648      	mov	r0, r9
 8020460:	e7e7      	b.n	8020432 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8020462:	d106      	bne.n	8020472 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8020464:	7812      	ldrb	r2, [r2, #0]
 8020466:	3302      	adds	r3, #2
 8020468:	0912      	lsrs	r2, r2, #4
 802046a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802046e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8020472:	880c      	ldrh	r4, [r1, #0]
 8020474:	9a05      	ldr	r2, [sp, #20]
 8020476:	eba4 0409 	sub.w	r4, r4, r9
 802047a:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802047e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020482:	4413      	add	r3, r2
 8020484:	fb93 f3f8 	sdiv	r3, r3, r8
 8020488:	441d      	add	r5, r3
 802048a:	e7c3      	b.n	8020414 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 802048c:	4b03      	ldr	r3, [pc, #12]	@ (802049c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802048e:	6818      	ldr	r0, [r3, #0]
 8020490:	6803      	ldr	r3, [r0, #0]
 8020492:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8020494:	4798      	blx	r3
 8020496:	b00f      	add	sp, #60	@ 0x3c
 8020498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802049c:	20001b6c 	.word	0x20001b6c
 80204a0:	20001b66 	.word	0x20001b66

080204a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80204a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80204a6:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80204aa:	0a0f      	lsrs	r7, r1, #8
 80204ac:	2dff      	cmp	r5, #255	@ 0xff
 80204ae:	d10c      	bne.n	80204ca <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80204b0:	2bff      	cmp	r3, #255	@ 0xff
 80204b2:	d10a      	bne.n	80204ca <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80204b4:	0948      	lsrs	r0, r1, #5
 80204b6:	4b25      	ldr	r3, [pc, #148]	@ (802054c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 80204b8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80204bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80204c0:	403b      	ands	r3, r7
 80204c2:	4318      	orrs	r0, r3
 80204c4:	4308      	orrs	r0, r1
 80204c6:	b280      	uxth	r0, r0
 80204c8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80204ca:	fb15 f503 	smulbb	r5, r5, r3
 80204ce:	1214      	asrs	r4, r2, #8
 80204d0:	10d6      	asrs	r6, r2, #3
 80204d2:	b2ab      	uxth	r3, r5
 80204d4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80204d8:	00d0      	lsls	r0, r2, #3
 80204da:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80204de:	1c5d      	adds	r5, r3, #1
 80204e0:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80204e4:	b2c0      	uxtb	r0, r0
 80204e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80204ea:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 80204ee:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80204f2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80204f6:	fa1f fc85 	uxth.w	ip, r5
 80204fa:	43ed      	mvns	r5, r5
 80204fc:	fb12 f20c 	smulbb	r2, r2, ip
 8020500:	b2eb      	uxtb	r3, r5
 8020502:	b2fd      	uxtb	r5, r7
 8020504:	fb04 2403 	mla	r4, r4, r3, r2
 8020508:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802050c:	fb15 f50c 	smulbb	r5, r5, ip
 8020510:	b2c8      	uxtb	r0, r1
 8020512:	b2a4      	uxth	r4, r4
 8020514:	fb10 f00c 	smulbb	r0, r0, ip
 8020518:	fb06 5503 	mla	r5, r6, r3, r5
 802051c:	fb02 0003 	mla	r0, r2, r3, r0
 8020520:	b2ad      	uxth	r5, r5
 8020522:	b283      	uxth	r3, r0
 8020524:	1c60      	adds	r0, r4, #1
 8020526:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 802052a:	1c58      	adds	r0, r3, #1
 802052c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020530:	1c6b      	adds	r3, r5, #1
 8020532:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8020536:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802053a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802053e:	096d      	lsrs	r5, r5, #5
 8020540:	4320      	orrs	r0, r4
 8020542:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020546:	4328      	orrs	r0, r5
 8020548:	e7be      	b.n	80204c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 802054a:	bf00      	nop
 802054c:	00fff800 	.word	0x00fff800

08020550 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8020550:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020554:	461c      	mov	r4, r3
 8020556:	b08d      	sub	sp, #52	@ 0x34
 8020558:	460d      	mov	r5, r1
 802055a:	4616      	mov	r6, r2
 802055c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802055e:	4680      	mov	r8, r0
 8020560:	6861      	ldr	r1, [r4, #4]
 8020562:	aa08      	add	r2, sp, #32
 8020564:	6820      	ldr	r0, [r4, #0]
 8020566:	f04f 0a02 	mov.w	sl, #2
 802056a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802056e:	3604      	adds	r6, #4
 8020570:	c203      	stmia	r2!, {r0, r1}
 8020572:	6818      	ldr	r0, [r3, #0]
 8020574:	aa0a      	add	r2, sp, #40	@ 0x28
 8020576:	6859      	ldr	r1, [r3, #4]
 8020578:	c203      	stmia	r2!, {r0, r1}
 802057a:	a808      	add	r0, sp, #32
 802057c:	f7ef fa40 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020580:	4621      	mov	r1, r4
 8020582:	a80a      	add	r0, sp, #40	@ 0x28
 8020584:	f7ef fa64 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020588:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 802058c:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8020590:	f002 0301 	and.w	r3, r2, #1
 8020594:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8020598:	9303      	str	r3, [sp, #12]
 802059a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802059e:	f003 0101 	and.w	r1, r3, #1
 80205a2:	9102      	str	r1, [sp, #8]
 80205a4:	9802      	ldr	r0, [sp, #8]
 80205a6:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80205aa:	4403      	add	r3, r0
 80205ac:	fb01 2303 	mla	r3, r1, r3, r2
 80205b0:	fb93 f3fa 	sdiv	r3, r3, sl
 80205b4:	441d      	add	r5, r3
 80205b6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80205ba:	441a      	add	r2, r3
 80205bc:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 80205c0:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 80205c4:	4419      	add	r1, r3
 80205c6:	4a3e      	ldr	r2, [pc, #248]	@ (80206c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 80205c8:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 80205cc:	6810      	ldr	r0, [r2, #0]
 80205ce:	9205      	str	r2, [sp, #20]
 80205d0:	6803      	ldr	r3, [r0, #0]
 80205d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80205d4:	4798      	blx	r3
 80205d6:	4b3b      	ldr	r3, [pc, #236]	@ (80206c4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 80205d8:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 80205dc:	8819      	ldrh	r1, [r3, #0]
 80205de:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 80205e2:	434f      	muls	r7, r1
 80205e4:	fb01 c404 	mla	r4, r1, r4, ip
 80205e8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80205ec:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80205f0:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80205f4:	9204      	str	r2, [sp, #16]
 80205f6:	9b04      	ldr	r3, [sp, #16]
 80205f8:	429c      	cmp	r4, r3
 80205fa:	d258      	bcs.n	80206ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80205fc:	9b03      	ldr	r3, [sp, #12]
 80205fe:	2b00      	cmp	r3, #0
 8020600:	d034      	beq.n	802066c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8020602:	782b      	ldrb	r3, [r5, #0]
 8020604:	1c6f      	adds	r7, r5, #1
 8020606:	f003 030f 	and.w	r3, r3, #15
 802060a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802060e:	0e0b      	lsrs	r3, r1, #24
 8020610:	d006      	beq.n	8020620 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8020612:	8822      	ldrh	r2, [r4, #0]
 8020614:	4640      	mov	r0, r8
 8020616:	9300      	str	r3, [sp, #0]
 8020618:	464b      	mov	r3, r9
 802061a:	f7ff ff43 	bl	80204a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802061e:	8020      	strh	r0, [r4, #0]
 8020620:	3402      	adds	r4, #2
 8020622:	f10b 3aff 	add.w	sl, fp, #4294967295
 8020626:	f1ba 0f01 	cmp.w	sl, #1
 802062a:	dd22      	ble.n	8020672 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 802062c:	783b      	ldrb	r3, [r7, #0]
 802062e:	091b      	lsrs	r3, r3, #4
 8020630:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020634:	0e0b      	lsrs	r3, r1, #24
 8020636:	d006      	beq.n	8020646 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8020638:	8822      	ldrh	r2, [r4, #0]
 802063a:	4640      	mov	r0, r8
 802063c:	9300      	str	r3, [sp, #0]
 802063e:	464b      	mov	r3, r9
 8020640:	f7ff ff30 	bl	80204a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020644:	8020      	strh	r0, [r4, #0]
 8020646:	f817 3b01 	ldrb.w	r3, [r7], #1
 802064a:	f003 030f 	and.w	r3, r3, #15
 802064e:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8020652:	0e0b      	lsrs	r3, r1, #24
 8020654:	d006      	beq.n	8020664 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8020656:	8862      	ldrh	r2, [r4, #2]
 8020658:	4640      	mov	r0, r8
 802065a:	9300      	str	r3, [sp, #0]
 802065c:	464b      	mov	r3, r9
 802065e:	f7ff ff21 	bl	80204a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8020662:	8060      	strh	r0, [r4, #2]
 8020664:	3404      	adds	r4, #4
 8020666:	f1aa 0a02 	sub.w	sl, sl, #2
 802066a:	e7dc      	b.n	8020626 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802066c:	462f      	mov	r7, r5
 802066e:	46da      	mov	sl, fp
 8020670:	e7d9      	b.n	8020626 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8020672:	d10d      	bne.n	8020690 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8020674:	783b      	ldrb	r3, [r7, #0]
 8020676:	091b      	lsrs	r3, r3, #4
 8020678:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802067c:	0e0b      	lsrs	r3, r1, #24
 802067e:	d006      	beq.n	802068e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8020680:	8822      	ldrh	r2, [r4, #0]
 8020682:	4640      	mov	r0, r8
 8020684:	9300      	str	r3, [sp, #0]
 8020686:	464b      	mov	r3, r9
 8020688:	f7ff ff0c 	bl	80204a4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802068c:	8020      	strh	r0, [r4, #0]
 802068e:	3402      	adds	r4, #2
 8020690:	9b06      	ldr	r3, [sp, #24]
 8020692:	9a02      	ldr	r2, [sp, #8]
 8020694:	881b      	ldrh	r3, [r3, #0]
 8020696:	eba3 030b 	sub.w	r3, r3, fp
 802069a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802069e:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80206a2:	4413      	add	r3, r2
 80206a4:	9a07      	ldr	r2, [sp, #28]
 80206a6:	fb93 f3f2 	sdiv	r3, r3, r2
 80206aa:	441d      	add	r5, r3
 80206ac:	e7a3      	b.n	80205f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80206ae:	9b05      	ldr	r3, [sp, #20]
 80206b0:	6818      	ldr	r0, [r3, #0]
 80206b2:	6803      	ldr	r3, [r0, #0]
 80206b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80206b6:	4798      	blx	r3
 80206b8:	b00d      	add	sp, #52	@ 0x34
 80206ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80206be:	bf00      	nop
 80206c0:	20001b6c 	.word	0x20001b6c
 80206c4:	20001b66 	.word	0x20001b66

080206c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 80206c8:	b570      	push	{r4, r5, r6, lr}
 80206ca:	1214      	asrs	r4, r2, #8
 80206cc:	788d      	ldrb	r5, [r1, #2]
 80206ce:	f89d 6010 	ldrb.w	r6, [sp, #16]
 80206d2:	10d0      	asrs	r0, r2, #3
 80206d4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80206d8:	00d2      	lsls	r2, r2, #3
 80206da:	fb15 f503 	smulbb	r5, r5, r3
 80206de:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80206e2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80206e6:	b2d2      	uxtb	r2, r2
 80206e8:	fb04 5506 	mla	r5, r4, r6, r5
 80206ec:	784c      	ldrb	r4, [r1, #1]
 80206ee:	7809      	ldrb	r1, [r1, #0]
 80206f0:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80206f4:	fb14 f403 	smulbb	r4, r4, r3
 80206f8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80206fc:	fb11 f303 	smulbb	r3, r1, r3
 8020700:	b2ad      	uxth	r5, r5
 8020702:	fb00 4406 	mla	r4, r0, r6, r4
 8020706:	fb02 3306 	mla	r3, r2, r6, r3
 802070a:	1c68      	adds	r0, r5, #1
 802070c:	b2a4      	uxth	r4, r4
 802070e:	b29b      	uxth	r3, r3
 8020710:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8020714:	1c62      	adds	r2, r4, #1
 8020716:	1c58      	adds	r0, r3, #1
 8020718:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802071c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020720:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020724:	0964      	lsrs	r4, r4, #5
 8020726:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802072a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 802072e:	4328      	orrs	r0, r5
 8020730:	4320      	orrs	r0, r4
 8020732:	bd70      	pop	{r4, r5, r6, pc}

08020734 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8020734:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020738:	b08f      	sub	sp, #60	@ 0x3c
 802073a:	461c      	mov	r4, r3
 802073c:	4682      	mov	sl, r0
 802073e:	460e      	mov	r6, r1
 8020740:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8020744:	4615      	mov	r5, r2
 8020746:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020748:	2f00      	cmp	r7, #0
 802074a:	f000 8141 	beq.w	80209d0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 802074e:	6820      	ldr	r0, [r4, #0]
 8020750:	aa0a      	add	r2, sp, #40	@ 0x28
 8020752:	6861      	ldr	r1, [r4, #4]
 8020754:	f04f 0802 	mov.w	r8, #2
 8020758:	3504      	adds	r5, #4
 802075a:	c203      	stmia	r2!, {r0, r1}
 802075c:	6818      	ldr	r0, [r3, #0]
 802075e:	aa0c      	add	r2, sp, #48	@ 0x30
 8020760:	6859      	ldr	r1, [r3, #4]
 8020762:	c203      	stmia	r2!, {r0, r1}
 8020764:	a80a      	add	r0, sp, #40	@ 0x28
 8020766:	f7ef f94b 	bl	800fa00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802076a:	4621      	mov	r1, r4
 802076c:	a80c      	add	r0, sp, #48	@ 0x30
 802076e:	f7ef f96f 	bl	800fa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020772:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8020776:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802077a:	f002 0301 	and.w	r3, r2, #1
 802077e:	9306      	str	r3, [sp, #24]
 8020780:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8020784:	f003 0101 	and.w	r1, r3, #1
 8020788:	9105      	str	r1, [sp, #20]
 802078a:	9805      	ldr	r0, [sp, #20]
 802078c:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8020790:	4403      	add	r3, r0
 8020792:	fb01 2303 	mla	r3, r1, r3, r2
 8020796:	fb93 f3f8 	sdiv	r3, r3, r8
 802079a:	441e      	add	r6, r3
 802079c:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80207a0:	441a      	add	r2, r3
 80207a2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80207a6:	4419      	add	r1, r3
 80207a8:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 80207ac:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80207b0:	9303      	str	r3, [sp, #12]
 80207b2:	4b89      	ldr	r3, [pc, #548]	@ (80209d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80207b4:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80207b8:	6818      	ldr	r0, [r3, #0]
 80207ba:	6803      	ldr	r3, [r0, #0]
 80207bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80207be:	4798      	blx	r3
 80207c0:	4a86      	ldr	r2, [pc, #536]	@ (80209dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 80207c2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80207c6:	2fff      	cmp	r7, #255	@ 0xff
 80207c8:	8813      	ldrh	r3, [r2, #0]
 80207ca:	4694      	mov	ip, r2
 80207cc:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 80207d0:	fb03 9404 	mla	r4, r3, r4, r9
 80207d4:	fb03 f30b 	mul.w	r3, r3, fp
 80207d8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80207dc:	d071      	beq.n	80208c2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 80207de:	43f9      	mvns	r1, r7
 80207e0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80207e4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80207e8:	b2c9      	uxtb	r1, r1
 80207ea:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80207ee:	9104      	str	r1, [sp, #16]
 80207f0:	9b07      	ldr	r3, [sp, #28]
 80207f2:	42a3      	cmp	r3, r4
 80207f4:	f240 80e7 	bls.w	80209c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80207f8:	9b06      	ldr	r3, [sp, #24]
 80207fa:	2b00      	cmp	r3, #0
 80207fc:	d03d      	beq.n	802087a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 80207fe:	7831      	ldrb	r1, [r6, #0]
 8020800:	4650      	mov	r0, sl
 8020802:	9b04      	ldr	r3, [sp, #16]
 8020804:	f106 0801 	add.w	r8, r6, #1
 8020808:	f001 010f 	and.w	r1, r1, #15
 802080c:	8822      	ldrh	r2, [r4, #0]
 802080e:	9300      	str	r3, [sp, #0]
 8020810:	463b      	mov	r3, r7
 8020812:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8020816:	4429      	add	r1, r5
 8020818:	f7ff ff56 	bl	80206c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802081c:	9b03      	ldr	r3, [sp, #12]
 802081e:	f824 0b02 	strh.w	r0, [r4], #2
 8020822:	f103 3bff 	add.w	fp, r3, #4294967295
 8020826:	f1bb 0f01 	cmp.w	fp, #1
 802082a:	46a1      	mov	r9, r4
 802082c:	f104 0404 	add.w	r4, r4, #4
 8020830:	dd27      	ble.n	8020882 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 8020832:	f898 1000 	ldrb.w	r1, [r8]
 8020836:	4650      	mov	r0, sl
 8020838:	9b04      	ldr	r3, [sp, #16]
 802083a:	f1ab 0b02 	sub.w	fp, fp, #2
 802083e:	0909      	lsrs	r1, r1, #4
 8020840:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8020844:	9300      	str	r3, [sp, #0]
 8020846:	463b      	mov	r3, r7
 8020848:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802084c:	4429      	add	r1, r5
 802084e:	f7ff ff3b 	bl	80206c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020852:	f824 0c04 	strh.w	r0, [r4, #-4]
 8020856:	f818 1b01 	ldrb.w	r1, [r8], #1
 802085a:	4650      	mov	r0, sl
 802085c:	9b04      	ldr	r3, [sp, #16]
 802085e:	f001 010f 	and.w	r1, r1, #15
 8020862:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8020866:	9300      	str	r3, [sp, #0]
 8020868:	463b      	mov	r3, r7
 802086a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802086e:	4429      	add	r1, r5
 8020870:	f7ff ff2a 	bl	80206c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8020874:	f824 0c02 	strh.w	r0, [r4, #-2]
 8020878:	e7d5      	b.n	8020826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802087a:	46b0      	mov	r8, r6
 802087c:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8020880:	e7d1      	b.n	8020826 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8020882:	d10f      	bne.n	80208a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 8020884:	f898 1000 	ldrb.w	r1, [r8]
 8020888:	4650      	mov	r0, sl
 802088a:	9b04      	ldr	r3, [sp, #16]
 802088c:	0909      	lsrs	r1, r1, #4
 802088e:	f8b9 2000 	ldrh.w	r2, [r9]
 8020892:	9300      	str	r3, [sp, #0]
 8020894:	463b      	mov	r3, r7
 8020896:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802089a:	4429      	add	r1, r5
 802089c:	f7ff ff14 	bl	80206c8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80208a0:	f829 0b02 	strh.w	r0, [r9], #2
 80208a4:	9b08      	ldr	r3, [sp, #32]
 80208a6:	9a05      	ldr	r2, [sp, #20]
 80208a8:	881c      	ldrh	r4, [r3, #0]
 80208aa:	9b03      	ldr	r3, [sp, #12]
 80208ac:	1ae4      	subs	r4, r4, r3
 80208ae:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80208b2:	4413      	add	r3, r2
 80208b4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80208b6:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80208ba:	fb93 f3f2 	sdiv	r3, r3, r2
 80208be:	441e      	add	r6, r3
 80208c0:	e796      	b.n	80207f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 80208c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80208c6:	4f46      	ldr	r7, [pc, #280]	@ (80209e0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 80208c8:	42a3      	cmp	r3, r4
 80208ca:	d97c      	bls.n	80209c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 80208cc:	9a06      	ldr	r2, [sp, #24]
 80208ce:	2a00      	cmp	r2, #0
 80208d0:	d054      	beq.n	802097c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 80208d2:	7830      	ldrb	r0, [r6, #0]
 80208d4:	1c71      	adds	r1, r6, #1
 80208d6:	f000 000f 	and.w	r0, r0, #15
 80208da:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80208de:	eb05 0e00 	add.w	lr, r5, r0
 80208e2:	5c28      	ldrb	r0, [r5, r0]
 80208e4:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80208e8:	f89e e001 	ldrb.w	lr, [lr, #1]
 80208ec:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80208f0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80208f4:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80208f8:	ea42 020e 	orr.w	r2, r2, lr
 80208fc:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8020900:	f824 2b02 	strh.w	r2, [r4], #2
 8020904:	9a03      	ldr	r2, [sp, #12]
 8020906:	f102 3eff 	add.w	lr, r2, #4294967295
 802090a:	f1be 0f01 	cmp.w	lr, #1
 802090e:	4620      	mov	r0, r4
 8020910:	f104 0404 	add.w	r4, r4, #4
 8020914:	dd36      	ble.n	8020984 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 8020916:	7808      	ldrb	r0, [r1, #0]
 8020918:	f1ae 0e02 	sub.w	lr, lr, #2
 802091c:	0900      	lsrs	r0, r0, #4
 802091e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020922:	eb05 0a00 	add.w	sl, r5, r0
 8020926:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802092a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 802092e:	00d2      	lsls	r2, r2, #3
 8020930:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020934:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020938:	ea49 0202 	orr.w	r2, r9, r2
 802093c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020940:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020944:	f824 2c04 	strh.w	r2, [r4, #-4]
 8020948:	f811 0b01 	ldrb.w	r0, [r1], #1
 802094c:	f000 000f 	and.w	r0, r0, #15
 8020950:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020954:	eb05 0a00 	add.w	sl, r5, r0
 8020958:	f89a 2001 	ldrb.w	r2, [sl, #1]
 802095c:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8020960:	00d2      	lsls	r2, r2, #3
 8020962:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8020966:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802096a:	ea49 0202 	orr.w	r2, r9, r2
 802096e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020972:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8020976:	f824 2c02 	strh.w	r2, [r4, #-2]
 802097a:	e7c6      	b.n	802090a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802097c:	4631      	mov	r1, r6
 802097e:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8020982:	e7c2      	b.n	802090a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8020984:	d111      	bne.n	80209aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 8020986:	7809      	ldrb	r1, [r1, #0]
 8020988:	0909      	lsrs	r1, r1, #4
 802098a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802098e:	186c      	adds	r4, r5, r1
 8020990:	5c69      	ldrb	r1, [r5, r1]
 8020992:	78a2      	ldrb	r2, [r4, #2]
 8020994:	7864      	ldrb	r4, [r4, #1]
 8020996:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 802099a:	00e4      	lsls	r4, r4, #3
 802099c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80209a0:	4322      	orrs	r2, r4
 80209a2:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80209a6:	f820 2b02 	strh.w	r2, [r0], #2
 80209aa:	9a03      	ldr	r2, [sp, #12]
 80209ac:	f8bc 4000 	ldrh.w	r4, [ip]
 80209b0:	9905      	ldr	r1, [sp, #20]
 80209b2:	1aa4      	subs	r4, r4, r2
 80209b4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80209b8:	440a      	add	r2, r1
 80209ba:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80209be:	fb92 f2f8 	sdiv	r2, r2, r8
 80209c2:	4416      	add	r6, r2
 80209c4:	e780      	b.n	80208c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 80209c6:	4b04      	ldr	r3, [pc, #16]	@ (80209d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 80209c8:	6818      	ldr	r0, [r3, #0]
 80209ca:	6803      	ldr	r3, [r0, #0]
 80209cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80209ce:	4798      	blx	r3
 80209d0:	b00f      	add	sp, #60	@ 0x3c
 80209d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80209d6:	bf00      	nop
 80209d8:	20001b6c 	.word	0x20001b6c
 80209dc:	20001b66 	.word	0x20001b66
 80209e0:	fffff800 	.word	0xfffff800

080209e4 <CRC_Lock>:
 80209e4:	4a2d      	ldr	r2, [pc, #180]	@ (8020a9c <CRC_Lock+0xb8>)
 80209e6:	b530      	push	{r4, r5, lr}
 80209e8:	6813      	ldr	r3, [r2, #0]
 80209ea:	f24c 2540 	movw	r5, #49728	@ 0xc240
 80209ee:	f023 0301 	bic.w	r3, r3, #1
 80209f2:	6013      	str	r3, [r2, #0]
 80209f4:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 80209f8:	4b29      	ldr	r3, [pc, #164]	@ (8020aa0 <CRC_Lock+0xbc>)
 80209fa:	681c      	ldr	r4, [r3, #0]
 80209fc:	4014      	ands	r4, r2
 80209fe:	42ac      	cmp	r4, r5
 8020a00:	d005      	beq.n	8020a0e <CRC_Lock+0x2a>
 8020a02:	681c      	ldr	r4, [r3, #0]
 8020a04:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8020a08:	4014      	ands	r4, r2
 8020a0a:	42ac      	cmp	r4, r5
 8020a0c:	d125      	bne.n	8020a5a <CRC_Lock+0x76>
 8020a0e:	4b25      	ldr	r3, [pc, #148]	@ (8020aa4 <CRC_Lock+0xc0>)
 8020a10:	681b      	ldr	r3, [r3, #0]
 8020a12:	2b00      	cmp	r3, #0
 8020a14:	d139      	bne.n	8020a8a <CRC_Lock+0xa6>
 8020a16:	4b24      	ldr	r3, [pc, #144]	@ (8020aa8 <CRC_Lock+0xc4>)
 8020a18:	681a      	ldr	r2, [r3, #0]
 8020a1a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020a1e:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8020a22:	d00d      	beq.n	8020a40 <CRC_Lock+0x5c>
 8020a24:	681a      	ldr	r2, [r3, #0]
 8020a26:	f240 4483 	movw	r4, #1155	@ 0x483
 8020a2a:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020a2e:	42a2      	cmp	r2, r4
 8020a30:	d006      	beq.n	8020a40 <CRC_Lock+0x5c>
 8020a32:	681b      	ldr	r3, [r3, #0]
 8020a34:	f240 4285 	movw	r2, #1157	@ 0x485
 8020a38:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020a3c:	4293      	cmp	r3, r2
 8020a3e:	d124      	bne.n	8020a8a <CRC_Lock+0xa6>
 8020a40:	4b1a      	ldr	r3, [pc, #104]	@ (8020aac <CRC_Lock+0xc8>)
 8020a42:	2201      	movs	r2, #1
 8020a44:	601a      	str	r2, [r3, #0]
 8020a46:	681a      	ldr	r2, [r3, #0]
 8020a48:	2a00      	cmp	r2, #0
 8020a4a:	d1fc      	bne.n	8020a46 <CRC_Lock+0x62>
 8020a4c:	4b18      	ldr	r3, [pc, #96]	@ (8020ab0 <CRC_Lock+0xcc>)
 8020a4e:	6018      	str	r0, [r3, #0]
 8020a50:	6818      	ldr	r0, [r3, #0]
 8020a52:	1a43      	subs	r3, r0, r1
 8020a54:	4258      	negs	r0, r3
 8020a56:	4158      	adcs	r0, r3
 8020a58:	e00e      	b.n	8020a78 <CRC_Lock+0x94>
 8020a5a:	681b      	ldr	r3, [r3, #0]
 8020a5c:	4013      	ands	r3, r2
 8020a5e:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8020a62:	4293      	cmp	r3, r2
 8020a64:	d111      	bne.n	8020a8a <CRC_Lock+0xa6>
 8020a66:	4b13      	ldr	r3, [pc, #76]	@ (8020ab4 <CRC_Lock+0xd0>)
 8020a68:	f240 4286 	movw	r2, #1158	@ 0x486
 8020a6c:	681b      	ldr	r3, [r3, #0]
 8020a6e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8020a72:	4293      	cmp	r3, r2
 8020a74:	d001      	beq.n	8020a7a <CRC_Lock+0x96>
 8020a76:	2000      	movs	r0, #0
 8020a78:	bd30      	pop	{r4, r5, pc}
 8020a7a:	4b0f      	ldr	r3, [pc, #60]	@ (8020ab8 <CRC_Lock+0xd4>)
 8020a7c:	2201      	movs	r2, #1
 8020a7e:	601a      	str	r2, [r3, #0]
 8020a80:	681a      	ldr	r2, [r3, #0]
 8020a82:	2a00      	cmp	r2, #0
 8020a84:	d1fc      	bne.n	8020a80 <CRC_Lock+0x9c>
 8020a86:	4b0d      	ldr	r3, [pc, #52]	@ (8020abc <CRC_Lock+0xd8>)
 8020a88:	e7e1      	b.n	8020a4e <CRC_Lock+0x6a>
 8020a8a:	4b0d      	ldr	r3, [pc, #52]	@ (8020ac0 <CRC_Lock+0xdc>)
 8020a8c:	2201      	movs	r2, #1
 8020a8e:	601a      	str	r2, [r3, #0]
 8020a90:	681a      	ldr	r2, [r3, #0]
 8020a92:	2a00      	cmp	r2, #0
 8020a94:	d1fc      	bne.n	8020a90 <CRC_Lock+0xac>
 8020a96:	4b0b      	ldr	r3, [pc, #44]	@ (8020ac4 <CRC_Lock+0xe0>)
 8020a98:	e7d9      	b.n	8020a4e <CRC_Lock+0x6a>
 8020a9a:	bf00      	nop
 8020a9c:	e0002000 	.word	0xe0002000
 8020aa0:	e000ed00 	.word	0xe000ed00
 8020aa4:	e0042000 	.word	0xe0042000
 8020aa8:	5c001000 	.word	0x5c001000
 8020aac:	58024c08 	.word	0x58024c08
 8020ab0:	58024c00 	.word	0x58024c00
 8020ab4:	46008ff0 	.word	0x46008ff0
 8020ab8:	46024c08 	.word	0x46024c08
 8020abc:	46024c00 	.word	0x46024c00
 8020ac0:	40023008 	.word	0x40023008
 8020ac4:	40023000 	.word	0x40023000

08020ac8 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020ac8:	6101      	str	r1, [r0, #16]
 8020aca:	4770      	bx	lr

08020acc <_ZN8touchgfx8Gestures4tickEv>:
 8020acc:	7b83      	ldrb	r3, [r0, #14]
 8020ace:	b14b      	cbz	r3, 8020ae4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020ad0:	8903      	ldrh	r3, [r0, #8]
 8020ad2:	3301      	adds	r3, #1
 8020ad4:	b29b      	uxth	r3, r3
 8020ad6:	2b07      	cmp	r3, #7
 8020ad8:	8103      	strh	r3, [r0, #8]
 8020ada:	bf81      	itttt	hi
 8020adc:	2300      	movhi	r3, #0
 8020ade:	8143      	strhhi	r3, [r0, #10]
 8020ae0:	8183      	strhhi	r3, [r0, #12]
 8020ae2:	7383      	strbhi	r3, [r0, #14]
 8020ae4:	4770      	bx	lr
	...

08020ae8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020ae8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020aec:	4698      	mov	r8, r3
 8020aee:	8883      	ldrh	r3, [r0, #4]
 8020af0:	4604      	mov	r4, r0
 8020af2:	4617      	mov	r7, r2
 8020af4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020af8:	eba8 0303 	sub.w	r3, r8, r3
 8020afc:	4a19      	ldr	r2, [pc, #100]	@ (8020b64 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020afe:	460e      	mov	r6, r1
 8020b00:	b21b      	sxth	r3, r3
 8020b02:	88c1      	ldrh	r1, [r0, #6]
 8020b04:	9200      	str	r2, [sp, #0]
 8020b06:	2000      	movs	r0, #0
 8020b08:	2b00      	cmp	r3, #0
 8020b0a:	8aa2      	ldrh	r2, [r4, #20]
 8020b0c:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8020b10:	bfb8      	it	lt
 8020b12:	425b      	neglt	r3, r3
 8020b14:	f88d 0004 	strb.w	r0, [sp, #4]
 8020b18:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020b1c:	b21b      	sxth	r3, r3
 8020b1e:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020b22:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020b26:	4293      	cmp	r3, r2
 8020b28:	dc07      	bgt.n	8020b3a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8020b2a:	1a69      	subs	r1, r5, r1
 8020b2c:	b209      	sxth	r1, r1
 8020b2e:	2900      	cmp	r1, #0
 8020b30:	bfb8      	it	lt
 8020b32:	4249      	neglt	r1, r1
 8020b34:	b209      	sxth	r1, r1
 8020b36:	428a      	cmp	r2, r1
 8020b38:	da10      	bge.n	8020b5c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8020b3a:	6920      	ldr	r0, [r4, #16]
 8020b3c:	4669      	mov	r1, sp
 8020b3e:	eba8 0606 	sub.w	r6, r8, r6
 8020b42:	1bef      	subs	r7, r5, r7
 8020b44:	6803      	ldr	r3, [r0, #0]
 8020b46:	685b      	ldr	r3, [r3, #4]
 8020b48:	4798      	blx	r3
 8020b4a:	2300      	movs	r3, #0
 8020b4c:	2001      	movs	r0, #1
 8020b4e:	8166      	strh	r6, [r4, #10]
 8020b50:	8123      	strh	r3, [r4, #8]
 8020b52:	81a7      	strh	r7, [r4, #12]
 8020b54:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020b58:	80e5      	strh	r5, [r4, #6]
 8020b5a:	73a0      	strb	r0, [r4, #14]
 8020b5c:	b004      	add	sp, #16
 8020b5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020b62:	bf00      	nop
 8020b64:	080230a8 	.word	0x080230a8

08020b68 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8020b68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020b6a:	461e      	mov	r6, r3
 8020b6c:	1e4b      	subs	r3, r1, #1
 8020b6e:	b085      	sub	sp, #20
 8020b70:	4604      	mov	r4, r0
 8020b72:	2b01      	cmp	r3, #1
 8020b74:	460d      	mov	r5, r1
 8020b76:	4617      	mov	r7, r2
 8020b78:	d84b      	bhi.n	8020c12 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020b7a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020b7e:	1cd3      	adds	r3, r2, #3
 8020b80:	b29b      	uxth	r3, r3
 8020b82:	2b06      	cmp	r3, #6
 8020b84:	d916      	bls.n	8020bb4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020b86:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8020c28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020b8a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020b8e:	f8cd c004 	str.w	ip, [sp, #4]
 8020b92:	f04f 0c00 	mov.w	ip, #0
 8020b96:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020b9a:	6900      	ldr	r0, [r0, #16]
 8020b9c:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020ba0:	a901      	add	r1, sp, #4
 8020ba2:	f88d c008 	strb.w	ip, [sp, #8]
 8020ba6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020baa:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020bae:	6803      	ldr	r3, [r0, #0]
 8020bb0:	689b      	ldr	r3, [r3, #8]
 8020bb2:	4798      	blx	r3
 8020bb4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020bb8:	1cd3      	adds	r3, r2, #3
 8020bba:	b29b      	uxth	r3, r3
 8020bbc:	2b06      	cmp	r3, #6
 8020bbe:	d916      	bls.n	8020bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020bc0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8020c28 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020bc4:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020bc8:	f8cd c004 	str.w	ip, [sp, #4]
 8020bcc:	f04f 0c01 	mov.w	ip, #1
 8020bd0:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020bd4:	6920      	ldr	r0, [r4, #16]
 8020bd6:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020bda:	a901      	add	r1, sp, #4
 8020bdc:	f88d c008 	strb.w	ip, [sp, #8]
 8020be0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020be4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020be8:	6803      	ldr	r3, [r0, #0]
 8020bea:	689b      	ldr	r3, [r3, #8]
 8020bec:	4798      	blx	r3
 8020bee:	4b0d      	ldr	r3, [pc, #52]	@ (8020c24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020bf0:	a901      	add	r1, sp, #4
 8020bf2:	6920      	ldr	r0, [r4, #16]
 8020bf4:	9301      	str	r3, [sp, #4]
 8020bf6:	2300      	movs	r3, #0
 8020bf8:	f88d 5008 	strb.w	r5, [sp, #8]
 8020bfc:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020c00:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020c04:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020c08:	6803      	ldr	r3, [r0, #0]
 8020c0a:	681b      	ldr	r3, [r3, #0]
 8020c0c:	4798      	blx	r3
 8020c0e:	b005      	add	sp, #20
 8020c10:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020c12:	2900      	cmp	r1, #0
 8020c14:	d1eb      	bne.n	8020bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020c16:	80a2      	strh	r2, [r4, #4]
 8020c18:	80c6      	strh	r6, [r0, #6]
 8020c1a:	60a1      	str	r1, [r4, #8]
 8020c1c:	81a1      	strh	r1, [r4, #12]
 8020c1e:	73a1      	strb	r1, [r4, #14]
 8020c20:	e7e5      	b.n	8020bee <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020c22:	bf00      	nop
 8020c24:	08023094 	.word	0x08023094
 8020c28:	080230bc 	.word	0x080230bc

08020c2c <__aeabi_atexit>:
 8020c2c:	460b      	mov	r3, r1
 8020c2e:	4601      	mov	r1, r0
 8020c30:	4618      	mov	r0, r3
 8020c32:	f000 b911 	b.w	8020e58 <__cxa_atexit>

08020c36 <_ZdlPvj>:
 8020c36:	f000 b812 	b.w	8020c5e <_ZdlPv>

08020c3a <__cxa_guard_acquire>:
 8020c3a:	6802      	ldr	r2, [r0, #0]
 8020c3c:	07d2      	lsls	r2, r2, #31
 8020c3e:	4603      	mov	r3, r0
 8020c40:	d405      	bmi.n	8020c4e <__cxa_guard_acquire+0x14>
 8020c42:	7842      	ldrb	r2, [r0, #1]
 8020c44:	b102      	cbz	r2, 8020c48 <__cxa_guard_acquire+0xe>
 8020c46:	deff      	udf	#255	@ 0xff
 8020c48:	2001      	movs	r0, #1
 8020c4a:	7058      	strb	r0, [r3, #1]
 8020c4c:	4770      	bx	lr
 8020c4e:	2000      	movs	r0, #0
 8020c50:	4770      	bx	lr

08020c52 <__cxa_guard_release>:
 8020c52:	2301      	movs	r3, #1
 8020c54:	6003      	str	r3, [r0, #0]
 8020c56:	4770      	bx	lr

08020c58 <__cxa_pure_virtual>:
 8020c58:	b508      	push	{r3, lr}
 8020c5a:	f000 f80f 	bl	8020c7c <_ZSt9terminatev>

08020c5e <_ZdlPv>:
 8020c5e:	f000 b845 	b.w	8020cec <free>

08020c62 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8020c62:	b508      	push	{r3, lr}
 8020c64:	4780      	blx	r0
 8020c66:	f000 f80e 	bl	8020c86 <abort>
	...

08020c6c <_ZSt13get_terminatev>:
 8020c6c:	4b02      	ldr	r3, [pc, #8]	@ (8020c78 <_ZSt13get_terminatev+0xc>)
 8020c6e:	6818      	ldr	r0, [r3, #0]
 8020c70:	f3bf 8f5b 	dmb	ish
 8020c74:	4770      	bx	lr
 8020c76:	bf00      	nop
 8020c78:	200001f4 	.word	0x200001f4

08020c7c <_ZSt9terminatev>:
 8020c7c:	b508      	push	{r3, lr}
 8020c7e:	f7ff fff5 	bl	8020c6c <_ZSt13get_terminatev>
 8020c82:	f7ff ffee 	bl	8020c62 <_ZN10__cxxabiv111__terminateEPFvvE>

08020c86 <abort>:
 8020c86:	b508      	push	{r3, lr}
 8020c88:	2006      	movs	r0, #6
 8020c8a:	f000 fa3b 	bl	8021104 <raise>
 8020c8e:	2001      	movs	r0, #1
 8020c90:	f7e0 fcfa 	bl	8001688 <_exit>

08020c94 <__assert_func>:
 8020c94:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020c96:	4614      	mov	r4, r2
 8020c98:	461a      	mov	r2, r3
 8020c9a:	4b09      	ldr	r3, [pc, #36]	@ (8020cc0 <__assert_func+0x2c>)
 8020c9c:	681b      	ldr	r3, [r3, #0]
 8020c9e:	4605      	mov	r5, r0
 8020ca0:	68d8      	ldr	r0, [r3, #12]
 8020ca2:	b954      	cbnz	r4, 8020cba <__assert_func+0x26>
 8020ca4:	4b07      	ldr	r3, [pc, #28]	@ (8020cc4 <__assert_func+0x30>)
 8020ca6:	461c      	mov	r4, r3
 8020ca8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020cac:	9100      	str	r1, [sp, #0]
 8020cae:	462b      	mov	r3, r5
 8020cb0:	4905      	ldr	r1, [pc, #20]	@ (8020cc8 <__assert_func+0x34>)
 8020cb2:	f000 f983 	bl	8020fbc <fiprintf>
 8020cb6:	f7ff ffe6 	bl	8020c86 <abort>
 8020cba:	4b04      	ldr	r3, [pc, #16]	@ (8020ccc <__assert_func+0x38>)
 8020cbc:	e7f4      	b.n	8020ca8 <__assert_func+0x14>
 8020cbe:	bf00      	nop
 8020cc0:	20000204 	.word	0x20000204
 8020cc4:	0802342b 	.word	0x0802342b
 8020cc8:	080233fd 	.word	0x080233fd
 8020ccc:	080233f0 	.word	0x080233f0

08020cd0 <atexit>:
 8020cd0:	2300      	movs	r3, #0
 8020cd2:	4601      	mov	r1, r0
 8020cd4:	461a      	mov	r2, r3
 8020cd6:	4618      	mov	r0, r3
 8020cd8:	f000 bab4 	b.w	8021244 <__register_exitproc>

08020cdc <malloc>:
 8020cdc:	4b02      	ldr	r3, [pc, #8]	@ (8020ce8 <malloc+0xc>)
 8020cde:	4601      	mov	r1, r0
 8020ce0:	6818      	ldr	r0, [r3, #0]
 8020ce2:	f000 b82d 	b.w	8020d40 <_malloc_r>
 8020ce6:	bf00      	nop
 8020ce8:	20000204 	.word	0x20000204

08020cec <free>:
 8020cec:	4b02      	ldr	r3, [pc, #8]	@ (8020cf8 <free+0xc>)
 8020cee:	4601      	mov	r1, r0
 8020cf0:	6818      	ldr	r0, [r3, #0]
 8020cf2:	f000 bb03 	b.w	80212fc <_free_r>
 8020cf6:	bf00      	nop
 8020cf8:	20000204 	.word	0x20000204

08020cfc <sbrk_aligned>:
 8020cfc:	b570      	push	{r4, r5, r6, lr}
 8020cfe:	4e0f      	ldr	r6, [pc, #60]	@ (8020d3c <sbrk_aligned+0x40>)
 8020d00:	460c      	mov	r4, r1
 8020d02:	6831      	ldr	r1, [r6, #0]
 8020d04:	4605      	mov	r5, r0
 8020d06:	b911      	cbnz	r1, 8020d0e <sbrk_aligned+0x12>
 8020d08:	f000 fa4c 	bl	80211a4 <_sbrk_r>
 8020d0c:	6030      	str	r0, [r6, #0]
 8020d0e:	4621      	mov	r1, r4
 8020d10:	4628      	mov	r0, r5
 8020d12:	f000 fa47 	bl	80211a4 <_sbrk_r>
 8020d16:	1c43      	adds	r3, r0, #1
 8020d18:	d103      	bne.n	8020d22 <sbrk_aligned+0x26>
 8020d1a:	f04f 34ff 	mov.w	r4, #4294967295
 8020d1e:	4620      	mov	r0, r4
 8020d20:	bd70      	pop	{r4, r5, r6, pc}
 8020d22:	1cc4      	adds	r4, r0, #3
 8020d24:	f024 0403 	bic.w	r4, r4, #3
 8020d28:	42a0      	cmp	r0, r4
 8020d2a:	d0f8      	beq.n	8020d1e <sbrk_aligned+0x22>
 8020d2c:	1a21      	subs	r1, r4, r0
 8020d2e:	4628      	mov	r0, r5
 8020d30:	f000 fa38 	bl	80211a4 <_sbrk_r>
 8020d34:	3001      	adds	r0, #1
 8020d36:	d1f2      	bne.n	8020d1e <sbrk_aligned+0x22>
 8020d38:	e7ef      	b.n	8020d1a <sbrk_aligned+0x1e>
 8020d3a:	bf00      	nop
 8020d3c:	200025c0 	.word	0x200025c0

08020d40 <_malloc_r>:
 8020d40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020d44:	1ccd      	adds	r5, r1, #3
 8020d46:	f025 0503 	bic.w	r5, r5, #3
 8020d4a:	3508      	adds	r5, #8
 8020d4c:	2d0c      	cmp	r5, #12
 8020d4e:	bf38      	it	cc
 8020d50:	250c      	movcc	r5, #12
 8020d52:	2d00      	cmp	r5, #0
 8020d54:	4606      	mov	r6, r0
 8020d56:	db01      	blt.n	8020d5c <_malloc_r+0x1c>
 8020d58:	42a9      	cmp	r1, r5
 8020d5a:	d904      	bls.n	8020d66 <_malloc_r+0x26>
 8020d5c:	230c      	movs	r3, #12
 8020d5e:	6033      	str	r3, [r6, #0]
 8020d60:	2000      	movs	r0, #0
 8020d62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020d66:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8020e3c <_malloc_r+0xfc>
 8020d6a:	f000 f869 	bl	8020e40 <__malloc_lock>
 8020d6e:	f8d8 3000 	ldr.w	r3, [r8]
 8020d72:	461c      	mov	r4, r3
 8020d74:	bb44      	cbnz	r4, 8020dc8 <_malloc_r+0x88>
 8020d76:	4629      	mov	r1, r5
 8020d78:	4630      	mov	r0, r6
 8020d7a:	f7ff ffbf 	bl	8020cfc <sbrk_aligned>
 8020d7e:	1c43      	adds	r3, r0, #1
 8020d80:	4604      	mov	r4, r0
 8020d82:	d158      	bne.n	8020e36 <_malloc_r+0xf6>
 8020d84:	f8d8 4000 	ldr.w	r4, [r8]
 8020d88:	4627      	mov	r7, r4
 8020d8a:	2f00      	cmp	r7, #0
 8020d8c:	d143      	bne.n	8020e16 <_malloc_r+0xd6>
 8020d8e:	2c00      	cmp	r4, #0
 8020d90:	d04b      	beq.n	8020e2a <_malloc_r+0xea>
 8020d92:	6823      	ldr	r3, [r4, #0]
 8020d94:	4639      	mov	r1, r7
 8020d96:	4630      	mov	r0, r6
 8020d98:	eb04 0903 	add.w	r9, r4, r3
 8020d9c:	f000 fa02 	bl	80211a4 <_sbrk_r>
 8020da0:	4581      	cmp	r9, r0
 8020da2:	d142      	bne.n	8020e2a <_malloc_r+0xea>
 8020da4:	6821      	ldr	r1, [r4, #0]
 8020da6:	1a6d      	subs	r5, r5, r1
 8020da8:	4629      	mov	r1, r5
 8020daa:	4630      	mov	r0, r6
 8020dac:	f7ff ffa6 	bl	8020cfc <sbrk_aligned>
 8020db0:	3001      	adds	r0, #1
 8020db2:	d03a      	beq.n	8020e2a <_malloc_r+0xea>
 8020db4:	6823      	ldr	r3, [r4, #0]
 8020db6:	442b      	add	r3, r5
 8020db8:	6023      	str	r3, [r4, #0]
 8020dba:	f8d8 3000 	ldr.w	r3, [r8]
 8020dbe:	685a      	ldr	r2, [r3, #4]
 8020dc0:	bb62      	cbnz	r2, 8020e1c <_malloc_r+0xdc>
 8020dc2:	f8c8 7000 	str.w	r7, [r8]
 8020dc6:	e00f      	b.n	8020de8 <_malloc_r+0xa8>
 8020dc8:	6822      	ldr	r2, [r4, #0]
 8020dca:	1b52      	subs	r2, r2, r5
 8020dcc:	d420      	bmi.n	8020e10 <_malloc_r+0xd0>
 8020dce:	2a0b      	cmp	r2, #11
 8020dd0:	d917      	bls.n	8020e02 <_malloc_r+0xc2>
 8020dd2:	1961      	adds	r1, r4, r5
 8020dd4:	42a3      	cmp	r3, r4
 8020dd6:	6025      	str	r5, [r4, #0]
 8020dd8:	bf18      	it	ne
 8020dda:	6059      	strne	r1, [r3, #4]
 8020ddc:	6863      	ldr	r3, [r4, #4]
 8020dde:	bf08      	it	eq
 8020de0:	f8c8 1000 	streq.w	r1, [r8]
 8020de4:	5162      	str	r2, [r4, r5]
 8020de6:	604b      	str	r3, [r1, #4]
 8020de8:	4630      	mov	r0, r6
 8020dea:	f000 f82f 	bl	8020e4c <__malloc_unlock>
 8020dee:	f104 000b 	add.w	r0, r4, #11
 8020df2:	1d23      	adds	r3, r4, #4
 8020df4:	f020 0007 	bic.w	r0, r0, #7
 8020df8:	1ac2      	subs	r2, r0, r3
 8020dfa:	bf1c      	itt	ne
 8020dfc:	1a1b      	subne	r3, r3, r0
 8020dfe:	50a3      	strne	r3, [r4, r2]
 8020e00:	e7af      	b.n	8020d62 <_malloc_r+0x22>
 8020e02:	6862      	ldr	r2, [r4, #4]
 8020e04:	42a3      	cmp	r3, r4
 8020e06:	bf0c      	ite	eq
 8020e08:	f8c8 2000 	streq.w	r2, [r8]
 8020e0c:	605a      	strne	r2, [r3, #4]
 8020e0e:	e7eb      	b.n	8020de8 <_malloc_r+0xa8>
 8020e10:	4623      	mov	r3, r4
 8020e12:	6864      	ldr	r4, [r4, #4]
 8020e14:	e7ae      	b.n	8020d74 <_malloc_r+0x34>
 8020e16:	463c      	mov	r4, r7
 8020e18:	687f      	ldr	r7, [r7, #4]
 8020e1a:	e7b6      	b.n	8020d8a <_malloc_r+0x4a>
 8020e1c:	461a      	mov	r2, r3
 8020e1e:	685b      	ldr	r3, [r3, #4]
 8020e20:	42a3      	cmp	r3, r4
 8020e22:	d1fb      	bne.n	8020e1c <_malloc_r+0xdc>
 8020e24:	2300      	movs	r3, #0
 8020e26:	6053      	str	r3, [r2, #4]
 8020e28:	e7de      	b.n	8020de8 <_malloc_r+0xa8>
 8020e2a:	230c      	movs	r3, #12
 8020e2c:	6033      	str	r3, [r6, #0]
 8020e2e:	4630      	mov	r0, r6
 8020e30:	f000 f80c 	bl	8020e4c <__malloc_unlock>
 8020e34:	e794      	b.n	8020d60 <_malloc_r+0x20>
 8020e36:	6005      	str	r5, [r0, #0]
 8020e38:	e7d6      	b.n	8020de8 <_malloc_r+0xa8>
 8020e3a:	bf00      	nop
 8020e3c:	200025c4 	.word	0x200025c4

08020e40 <__malloc_lock>:
 8020e40:	4801      	ldr	r0, [pc, #4]	@ (8020e48 <__malloc_lock+0x8>)
 8020e42:	f000 b9fc 	b.w	802123e <__retarget_lock_acquire_recursive>
 8020e46:	bf00      	nop
 8020e48:	20002708 	.word	0x20002708

08020e4c <__malloc_unlock>:
 8020e4c:	4801      	ldr	r0, [pc, #4]	@ (8020e54 <__malloc_unlock+0x8>)
 8020e4e:	f000 b9f7 	b.w	8021240 <__retarget_lock_release_recursive>
 8020e52:	bf00      	nop
 8020e54:	20002708 	.word	0x20002708

08020e58 <__cxa_atexit>:
 8020e58:	b510      	push	{r4, lr}
 8020e5a:	4604      	mov	r4, r0
 8020e5c:	4804      	ldr	r0, [pc, #16]	@ (8020e70 <__cxa_atexit+0x18>)
 8020e5e:	4613      	mov	r3, r2
 8020e60:	b120      	cbz	r0, 8020e6c <__cxa_atexit+0x14>
 8020e62:	460a      	mov	r2, r1
 8020e64:	2002      	movs	r0, #2
 8020e66:	4621      	mov	r1, r4
 8020e68:	f000 f9ec 	bl	8021244 <__register_exitproc>
 8020e6c:	bd10      	pop	{r4, pc}
 8020e6e:	bf00      	nop
 8020e70:	08021245 	.word	0x08021245

08020e74 <std>:
 8020e74:	2300      	movs	r3, #0
 8020e76:	b510      	push	{r4, lr}
 8020e78:	4604      	mov	r4, r0
 8020e7a:	e9c0 3300 	strd	r3, r3, [r0]
 8020e7e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8020e82:	6083      	str	r3, [r0, #8]
 8020e84:	8181      	strh	r1, [r0, #12]
 8020e86:	6643      	str	r3, [r0, #100]	@ 0x64
 8020e88:	81c2      	strh	r2, [r0, #14]
 8020e8a:	6183      	str	r3, [r0, #24]
 8020e8c:	4619      	mov	r1, r3
 8020e8e:	2208      	movs	r2, #8
 8020e90:	305c      	adds	r0, #92	@ 0x5c
 8020e92:	f000 f906 	bl	80210a2 <memset>
 8020e96:	4b0d      	ldr	r3, [pc, #52]	@ (8020ecc <std+0x58>)
 8020e98:	6263      	str	r3, [r4, #36]	@ 0x24
 8020e9a:	4b0d      	ldr	r3, [pc, #52]	@ (8020ed0 <std+0x5c>)
 8020e9c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8020e9e:	4b0d      	ldr	r3, [pc, #52]	@ (8020ed4 <std+0x60>)
 8020ea0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8020ea2:	4b0d      	ldr	r3, [pc, #52]	@ (8020ed8 <std+0x64>)
 8020ea4:	6323      	str	r3, [r4, #48]	@ 0x30
 8020ea6:	4b0d      	ldr	r3, [pc, #52]	@ (8020edc <std+0x68>)
 8020ea8:	6224      	str	r4, [r4, #32]
 8020eaa:	429c      	cmp	r4, r3
 8020eac:	d006      	beq.n	8020ebc <std+0x48>
 8020eae:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8020eb2:	4294      	cmp	r4, r2
 8020eb4:	d002      	beq.n	8020ebc <std+0x48>
 8020eb6:	33d0      	adds	r3, #208	@ 0xd0
 8020eb8:	429c      	cmp	r4, r3
 8020eba:	d105      	bne.n	8020ec8 <std+0x54>
 8020ebc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8020ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020ec4:	f000 b9ba 	b.w	802123c <__retarget_lock_init_recursive>
 8020ec8:	bd10      	pop	{r4, pc}
 8020eca:	bf00      	nop
 8020ecc:	0802101d 	.word	0x0802101d
 8020ed0:	0802103f 	.word	0x0802103f
 8020ed4:	08021077 	.word	0x08021077
 8020ed8:	0802109b 	.word	0x0802109b
 8020edc:	200025c8 	.word	0x200025c8

08020ee0 <stdio_exit_handler>:
 8020ee0:	4a02      	ldr	r2, [pc, #8]	@ (8020eec <stdio_exit_handler+0xc>)
 8020ee2:	4903      	ldr	r1, [pc, #12]	@ (8020ef0 <stdio_exit_handler+0x10>)
 8020ee4:	4803      	ldr	r0, [pc, #12]	@ (8020ef4 <stdio_exit_handler+0x14>)
 8020ee6:	f000 b87b 	b.w	8020fe0 <_fwalk_sglue>
 8020eea:	bf00      	nop
 8020eec:	200001f8 	.word	0x200001f8
 8020ef0:	08021a39 	.word	0x08021a39
 8020ef4:	20000208 	.word	0x20000208

08020ef8 <cleanup_stdio>:
 8020ef8:	6841      	ldr	r1, [r0, #4]
 8020efa:	4b0c      	ldr	r3, [pc, #48]	@ (8020f2c <cleanup_stdio+0x34>)
 8020efc:	4299      	cmp	r1, r3
 8020efe:	b510      	push	{r4, lr}
 8020f00:	4604      	mov	r4, r0
 8020f02:	d001      	beq.n	8020f08 <cleanup_stdio+0x10>
 8020f04:	f000 fd98 	bl	8021a38 <_fflush_r>
 8020f08:	68a1      	ldr	r1, [r4, #8]
 8020f0a:	4b09      	ldr	r3, [pc, #36]	@ (8020f30 <cleanup_stdio+0x38>)
 8020f0c:	4299      	cmp	r1, r3
 8020f0e:	d002      	beq.n	8020f16 <cleanup_stdio+0x1e>
 8020f10:	4620      	mov	r0, r4
 8020f12:	f000 fd91 	bl	8021a38 <_fflush_r>
 8020f16:	68e1      	ldr	r1, [r4, #12]
 8020f18:	4b06      	ldr	r3, [pc, #24]	@ (8020f34 <cleanup_stdio+0x3c>)
 8020f1a:	4299      	cmp	r1, r3
 8020f1c:	d004      	beq.n	8020f28 <cleanup_stdio+0x30>
 8020f1e:	4620      	mov	r0, r4
 8020f20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020f24:	f000 bd88 	b.w	8021a38 <_fflush_r>
 8020f28:	bd10      	pop	{r4, pc}
 8020f2a:	bf00      	nop
 8020f2c:	200025c8 	.word	0x200025c8
 8020f30:	20002630 	.word	0x20002630
 8020f34:	20002698 	.word	0x20002698

08020f38 <global_stdio_init.part.0>:
 8020f38:	b510      	push	{r4, lr}
 8020f3a:	4b0b      	ldr	r3, [pc, #44]	@ (8020f68 <global_stdio_init.part.0+0x30>)
 8020f3c:	4c0b      	ldr	r4, [pc, #44]	@ (8020f6c <global_stdio_init.part.0+0x34>)
 8020f3e:	4a0c      	ldr	r2, [pc, #48]	@ (8020f70 <global_stdio_init.part.0+0x38>)
 8020f40:	601a      	str	r2, [r3, #0]
 8020f42:	4620      	mov	r0, r4
 8020f44:	2200      	movs	r2, #0
 8020f46:	2104      	movs	r1, #4
 8020f48:	f7ff ff94 	bl	8020e74 <std>
 8020f4c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8020f50:	2201      	movs	r2, #1
 8020f52:	2109      	movs	r1, #9
 8020f54:	f7ff ff8e 	bl	8020e74 <std>
 8020f58:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8020f5c:	2202      	movs	r2, #2
 8020f5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020f62:	2112      	movs	r1, #18
 8020f64:	f7ff bf86 	b.w	8020e74 <std>
 8020f68:	20002700 	.word	0x20002700
 8020f6c:	200025c8 	.word	0x200025c8
 8020f70:	08020ee1 	.word	0x08020ee1

08020f74 <__sfp_lock_acquire>:
 8020f74:	4801      	ldr	r0, [pc, #4]	@ (8020f7c <__sfp_lock_acquire+0x8>)
 8020f76:	f000 b962 	b.w	802123e <__retarget_lock_acquire_recursive>
 8020f7a:	bf00      	nop
 8020f7c:	2000270a 	.word	0x2000270a

08020f80 <__sfp_lock_release>:
 8020f80:	4801      	ldr	r0, [pc, #4]	@ (8020f88 <__sfp_lock_release+0x8>)
 8020f82:	f000 b95d 	b.w	8021240 <__retarget_lock_release_recursive>
 8020f86:	bf00      	nop
 8020f88:	2000270a 	.word	0x2000270a

08020f8c <__sinit>:
 8020f8c:	b510      	push	{r4, lr}
 8020f8e:	4604      	mov	r4, r0
 8020f90:	f7ff fff0 	bl	8020f74 <__sfp_lock_acquire>
 8020f94:	6a23      	ldr	r3, [r4, #32]
 8020f96:	b11b      	cbz	r3, 8020fa0 <__sinit+0x14>
 8020f98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020f9c:	f7ff bff0 	b.w	8020f80 <__sfp_lock_release>
 8020fa0:	4b04      	ldr	r3, [pc, #16]	@ (8020fb4 <__sinit+0x28>)
 8020fa2:	6223      	str	r3, [r4, #32]
 8020fa4:	4b04      	ldr	r3, [pc, #16]	@ (8020fb8 <__sinit+0x2c>)
 8020fa6:	681b      	ldr	r3, [r3, #0]
 8020fa8:	2b00      	cmp	r3, #0
 8020faa:	d1f5      	bne.n	8020f98 <__sinit+0xc>
 8020fac:	f7ff ffc4 	bl	8020f38 <global_stdio_init.part.0>
 8020fb0:	e7f2      	b.n	8020f98 <__sinit+0xc>
 8020fb2:	bf00      	nop
 8020fb4:	08020ef9 	.word	0x08020ef9
 8020fb8:	20002700 	.word	0x20002700

08020fbc <fiprintf>:
 8020fbc:	b40e      	push	{r1, r2, r3}
 8020fbe:	b503      	push	{r0, r1, lr}
 8020fc0:	4601      	mov	r1, r0
 8020fc2:	ab03      	add	r3, sp, #12
 8020fc4:	4805      	ldr	r0, [pc, #20]	@ (8020fdc <fiprintf+0x20>)
 8020fc6:	f853 2b04 	ldr.w	r2, [r3], #4
 8020fca:	6800      	ldr	r0, [r0, #0]
 8020fcc:	9301      	str	r3, [sp, #4]
 8020fce:	f000 fa09 	bl	80213e4 <_vfiprintf_r>
 8020fd2:	b002      	add	sp, #8
 8020fd4:	f85d eb04 	ldr.w	lr, [sp], #4
 8020fd8:	b003      	add	sp, #12
 8020fda:	4770      	bx	lr
 8020fdc:	20000204 	.word	0x20000204

08020fe0 <_fwalk_sglue>:
 8020fe0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020fe4:	4607      	mov	r7, r0
 8020fe6:	4688      	mov	r8, r1
 8020fe8:	4614      	mov	r4, r2
 8020fea:	2600      	movs	r6, #0
 8020fec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020ff0:	f1b9 0901 	subs.w	r9, r9, #1
 8020ff4:	d505      	bpl.n	8021002 <_fwalk_sglue+0x22>
 8020ff6:	6824      	ldr	r4, [r4, #0]
 8020ff8:	2c00      	cmp	r4, #0
 8020ffa:	d1f7      	bne.n	8020fec <_fwalk_sglue+0xc>
 8020ffc:	4630      	mov	r0, r6
 8020ffe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021002:	89ab      	ldrh	r3, [r5, #12]
 8021004:	2b01      	cmp	r3, #1
 8021006:	d907      	bls.n	8021018 <_fwalk_sglue+0x38>
 8021008:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802100c:	3301      	adds	r3, #1
 802100e:	d003      	beq.n	8021018 <_fwalk_sglue+0x38>
 8021010:	4629      	mov	r1, r5
 8021012:	4638      	mov	r0, r7
 8021014:	47c0      	blx	r8
 8021016:	4306      	orrs	r6, r0
 8021018:	3568      	adds	r5, #104	@ 0x68
 802101a:	e7e9      	b.n	8020ff0 <_fwalk_sglue+0x10>

0802101c <__sread>:
 802101c:	b510      	push	{r4, lr}
 802101e:	460c      	mov	r4, r1
 8021020:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021024:	f000 f898 	bl	8021158 <_read_r>
 8021028:	2800      	cmp	r0, #0
 802102a:	bfab      	itete	ge
 802102c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 802102e:	89a3      	ldrhlt	r3, [r4, #12]
 8021030:	181b      	addge	r3, r3, r0
 8021032:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8021036:	bfac      	ite	ge
 8021038:	6563      	strge	r3, [r4, #84]	@ 0x54
 802103a:	81a3      	strhlt	r3, [r4, #12]
 802103c:	bd10      	pop	{r4, pc}

0802103e <__swrite>:
 802103e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021042:	461f      	mov	r7, r3
 8021044:	898b      	ldrh	r3, [r1, #12]
 8021046:	05db      	lsls	r3, r3, #23
 8021048:	4605      	mov	r5, r0
 802104a:	460c      	mov	r4, r1
 802104c:	4616      	mov	r6, r2
 802104e:	d505      	bpl.n	802105c <__swrite+0x1e>
 8021050:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021054:	2302      	movs	r3, #2
 8021056:	2200      	movs	r2, #0
 8021058:	f000 f86c 	bl	8021134 <_lseek_r>
 802105c:	89a3      	ldrh	r3, [r4, #12]
 802105e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021062:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8021066:	81a3      	strh	r3, [r4, #12]
 8021068:	4632      	mov	r2, r6
 802106a:	463b      	mov	r3, r7
 802106c:	4628      	mov	r0, r5
 802106e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8021072:	f000 b8a7 	b.w	80211c4 <_write_r>

08021076 <__sseek>:
 8021076:	b510      	push	{r4, lr}
 8021078:	460c      	mov	r4, r1
 802107a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802107e:	f000 f859 	bl	8021134 <_lseek_r>
 8021082:	1c43      	adds	r3, r0, #1
 8021084:	89a3      	ldrh	r3, [r4, #12]
 8021086:	bf15      	itete	ne
 8021088:	6560      	strne	r0, [r4, #84]	@ 0x54
 802108a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802108e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8021092:	81a3      	strheq	r3, [r4, #12]
 8021094:	bf18      	it	ne
 8021096:	81a3      	strhne	r3, [r4, #12]
 8021098:	bd10      	pop	{r4, pc}

0802109a <__sclose>:
 802109a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802109e:	f000 b839 	b.w	8021114 <_close_r>

080210a2 <memset>:
 80210a2:	4402      	add	r2, r0
 80210a4:	4603      	mov	r3, r0
 80210a6:	4293      	cmp	r3, r2
 80210a8:	d100      	bne.n	80210ac <memset+0xa>
 80210aa:	4770      	bx	lr
 80210ac:	f803 1b01 	strb.w	r1, [r3], #1
 80210b0:	e7f9      	b.n	80210a6 <memset+0x4>

080210b2 <_raise_r>:
 80210b2:	291f      	cmp	r1, #31
 80210b4:	b538      	push	{r3, r4, r5, lr}
 80210b6:	4605      	mov	r5, r0
 80210b8:	460c      	mov	r4, r1
 80210ba:	d904      	bls.n	80210c6 <_raise_r+0x14>
 80210bc:	2316      	movs	r3, #22
 80210be:	6003      	str	r3, [r0, #0]
 80210c0:	f04f 30ff 	mov.w	r0, #4294967295
 80210c4:	bd38      	pop	{r3, r4, r5, pc}
 80210c6:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80210c8:	b112      	cbz	r2, 80210d0 <_raise_r+0x1e>
 80210ca:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80210ce:	b94b      	cbnz	r3, 80210e4 <_raise_r+0x32>
 80210d0:	4628      	mov	r0, r5
 80210d2:	f000 f865 	bl	80211a0 <_getpid_r>
 80210d6:	4622      	mov	r2, r4
 80210d8:	4601      	mov	r1, r0
 80210da:	4628      	mov	r0, r5
 80210dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80210e0:	f000 b84c 	b.w	802117c <_kill_r>
 80210e4:	2b01      	cmp	r3, #1
 80210e6:	d00a      	beq.n	80210fe <_raise_r+0x4c>
 80210e8:	1c59      	adds	r1, r3, #1
 80210ea:	d103      	bne.n	80210f4 <_raise_r+0x42>
 80210ec:	2316      	movs	r3, #22
 80210ee:	6003      	str	r3, [r0, #0]
 80210f0:	2001      	movs	r0, #1
 80210f2:	e7e7      	b.n	80210c4 <_raise_r+0x12>
 80210f4:	2100      	movs	r1, #0
 80210f6:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80210fa:	4620      	mov	r0, r4
 80210fc:	4798      	blx	r3
 80210fe:	2000      	movs	r0, #0
 8021100:	e7e0      	b.n	80210c4 <_raise_r+0x12>
	...

08021104 <raise>:
 8021104:	4b02      	ldr	r3, [pc, #8]	@ (8021110 <raise+0xc>)
 8021106:	4601      	mov	r1, r0
 8021108:	6818      	ldr	r0, [r3, #0]
 802110a:	f7ff bfd2 	b.w	80210b2 <_raise_r>
 802110e:	bf00      	nop
 8021110:	20000204 	.word	0x20000204

08021114 <_close_r>:
 8021114:	b538      	push	{r3, r4, r5, lr}
 8021116:	4d06      	ldr	r5, [pc, #24]	@ (8021130 <_close_r+0x1c>)
 8021118:	2300      	movs	r3, #0
 802111a:	4604      	mov	r4, r0
 802111c:	4608      	mov	r0, r1
 802111e:	602b      	str	r3, [r5, #0]
 8021120:	f7e0 faf6 	bl	8001710 <_close>
 8021124:	1c43      	adds	r3, r0, #1
 8021126:	d102      	bne.n	802112e <_close_r+0x1a>
 8021128:	682b      	ldr	r3, [r5, #0]
 802112a:	b103      	cbz	r3, 802112e <_close_r+0x1a>
 802112c:	6023      	str	r3, [r4, #0]
 802112e:	bd38      	pop	{r3, r4, r5, pc}
 8021130:	20002704 	.word	0x20002704

08021134 <_lseek_r>:
 8021134:	b538      	push	{r3, r4, r5, lr}
 8021136:	4d07      	ldr	r5, [pc, #28]	@ (8021154 <_lseek_r+0x20>)
 8021138:	4604      	mov	r4, r0
 802113a:	4608      	mov	r0, r1
 802113c:	4611      	mov	r1, r2
 802113e:	2200      	movs	r2, #0
 8021140:	602a      	str	r2, [r5, #0]
 8021142:	461a      	mov	r2, r3
 8021144:	f7e0 fb0b 	bl	800175e <_lseek>
 8021148:	1c43      	adds	r3, r0, #1
 802114a:	d102      	bne.n	8021152 <_lseek_r+0x1e>
 802114c:	682b      	ldr	r3, [r5, #0]
 802114e:	b103      	cbz	r3, 8021152 <_lseek_r+0x1e>
 8021150:	6023      	str	r3, [r4, #0]
 8021152:	bd38      	pop	{r3, r4, r5, pc}
 8021154:	20002704 	.word	0x20002704

08021158 <_read_r>:
 8021158:	b538      	push	{r3, r4, r5, lr}
 802115a:	4d07      	ldr	r5, [pc, #28]	@ (8021178 <_read_r+0x20>)
 802115c:	4604      	mov	r4, r0
 802115e:	4608      	mov	r0, r1
 8021160:	4611      	mov	r1, r2
 8021162:	2200      	movs	r2, #0
 8021164:	602a      	str	r2, [r5, #0]
 8021166:	461a      	mov	r2, r3
 8021168:	f7e0 fa99 	bl	800169e <_read>
 802116c:	1c43      	adds	r3, r0, #1
 802116e:	d102      	bne.n	8021176 <_read_r+0x1e>
 8021170:	682b      	ldr	r3, [r5, #0]
 8021172:	b103      	cbz	r3, 8021176 <_read_r+0x1e>
 8021174:	6023      	str	r3, [r4, #0]
 8021176:	bd38      	pop	{r3, r4, r5, pc}
 8021178:	20002704 	.word	0x20002704

0802117c <_kill_r>:
 802117c:	b538      	push	{r3, r4, r5, lr}
 802117e:	4d07      	ldr	r5, [pc, #28]	@ (802119c <_kill_r+0x20>)
 8021180:	2300      	movs	r3, #0
 8021182:	4604      	mov	r4, r0
 8021184:	4608      	mov	r0, r1
 8021186:	4611      	mov	r1, r2
 8021188:	602b      	str	r3, [r5, #0]
 802118a:	f7e0 fa6d 	bl	8001668 <_kill>
 802118e:	1c43      	adds	r3, r0, #1
 8021190:	d102      	bne.n	8021198 <_kill_r+0x1c>
 8021192:	682b      	ldr	r3, [r5, #0]
 8021194:	b103      	cbz	r3, 8021198 <_kill_r+0x1c>
 8021196:	6023      	str	r3, [r4, #0]
 8021198:	bd38      	pop	{r3, r4, r5, pc}
 802119a:	bf00      	nop
 802119c:	20002704 	.word	0x20002704

080211a0 <_getpid_r>:
 80211a0:	f7e0 ba5a 	b.w	8001658 <_getpid>

080211a4 <_sbrk_r>:
 80211a4:	b538      	push	{r3, r4, r5, lr}
 80211a6:	4d06      	ldr	r5, [pc, #24]	@ (80211c0 <_sbrk_r+0x1c>)
 80211a8:	2300      	movs	r3, #0
 80211aa:	4604      	mov	r4, r0
 80211ac:	4608      	mov	r0, r1
 80211ae:	602b      	str	r3, [r5, #0]
 80211b0:	f7e0 fae2 	bl	8001778 <_sbrk>
 80211b4:	1c43      	adds	r3, r0, #1
 80211b6:	d102      	bne.n	80211be <_sbrk_r+0x1a>
 80211b8:	682b      	ldr	r3, [r5, #0]
 80211ba:	b103      	cbz	r3, 80211be <_sbrk_r+0x1a>
 80211bc:	6023      	str	r3, [r4, #0]
 80211be:	bd38      	pop	{r3, r4, r5, pc}
 80211c0:	20002704 	.word	0x20002704

080211c4 <_write_r>:
 80211c4:	b538      	push	{r3, r4, r5, lr}
 80211c6:	4d07      	ldr	r5, [pc, #28]	@ (80211e4 <_write_r+0x20>)
 80211c8:	4604      	mov	r4, r0
 80211ca:	4608      	mov	r0, r1
 80211cc:	4611      	mov	r1, r2
 80211ce:	2200      	movs	r2, #0
 80211d0:	602a      	str	r2, [r5, #0]
 80211d2:	461a      	mov	r2, r3
 80211d4:	f7e0 fa80 	bl	80016d8 <_write>
 80211d8:	1c43      	adds	r3, r0, #1
 80211da:	d102      	bne.n	80211e2 <_write_r+0x1e>
 80211dc:	682b      	ldr	r3, [r5, #0]
 80211de:	b103      	cbz	r3, 80211e2 <_write_r+0x1e>
 80211e0:	6023      	str	r3, [r4, #0]
 80211e2:	bd38      	pop	{r3, r4, r5, pc}
 80211e4:	20002704 	.word	0x20002704

080211e8 <__errno>:
 80211e8:	4b01      	ldr	r3, [pc, #4]	@ (80211f0 <__errno+0x8>)
 80211ea:	6818      	ldr	r0, [r3, #0]
 80211ec:	4770      	bx	lr
 80211ee:	bf00      	nop
 80211f0:	20000204 	.word	0x20000204

080211f4 <__libc_init_array>:
 80211f4:	b570      	push	{r4, r5, r6, lr}
 80211f6:	4d0d      	ldr	r5, [pc, #52]	@ (802122c <__libc_init_array+0x38>)
 80211f8:	4c0d      	ldr	r4, [pc, #52]	@ (8021230 <__libc_init_array+0x3c>)
 80211fa:	1b64      	subs	r4, r4, r5
 80211fc:	10a4      	asrs	r4, r4, #2
 80211fe:	2600      	movs	r6, #0
 8021200:	42a6      	cmp	r6, r4
 8021202:	d109      	bne.n	8021218 <__libc_init_array+0x24>
 8021204:	4d0b      	ldr	r5, [pc, #44]	@ (8021234 <__libc_init_array+0x40>)
 8021206:	4c0c      	ldr	r4, [pc, #48]	@ (8021238 <__libc_init_array+0x44>)
 8021208:	f000 fd56 	bl	8021cb8 <_init>
 802120c:	1b64      	subs	r4, r4, r5
 802120e:	10a4      	asrs	r4, r4, #2
 8021210:	2600      	movs	r6, #0
 8021212:	42a6      	cmp	r6, r4
 8021214:	d105      	bne.n	8021222 <__libc_init_array+0x2e>
 8021216:	bd70      	pop	{r4, r5, r6, pc}
 8021218:	f855 3b04 	ldr.w	r3, [r5], #4
 802121c:	4798      	blx	r3
 802121e:	3601      	adds	r6, #1
 8021220:	e7ee      	b.n	8021200 <__libc_init_array+0xc>
 8021222:	f855 3b04 	ldr.w	r3, [r5], #4
 8021226:	4798      	blx	r3
 8021228:	3601      	adds	r6, #1
 802122a:	e7f2      	b.n	8021212 <__libc_init_array+0x1e>
 802122c:	0802363c 	.word	0x0802363c
 8021230:	0802363c 	.word	0x0802363c
 8021234:	0802363c 	.word	0x0802363c
 8021238:	08023650 	.word	0x08023650

0802123c <__retarget_lock_init_recursive>:
 802123c:	4770      	bx	lr

0802123e <__retarget_lock_acquire_recursive>:
 802123e:	4770      	bx	lr

08021240 <__retarget_lock_release_recursive>:
 8021240:	4770      	bx	lr
	...

08021244 <__register_exitproc>:
 8021244:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021248:	4d27      	ldr	r5, [pc, #156]	@ (80212e8 <__register_exitproc+0xa4>)
 802124a:	4607      	mov	r7, r0
 802124c:	6828      	ldr	r0, [r5, #0]
 802124e:	4691      	mov	r9, r2
 8021250:	460e      	mov	r6, r1
 8021252:	4698      	mov	r8, r3
 8021254:	f7ff fff3 	bl	802123e <__retarget_lock_acquire_recursive>
 8021258:	4a24      	ldr	r2, [pc, #144]	@ (80212ec <__register_exitproc+0xa8>)
 802125a:	6814      	ldr	r4, [r2, #0]
 802125c:	b93c      	cbnz	r4, 802126e <__register_exitproc+0x2a>
 802125e:	4b24      	ldr	r3, [pc, #144]	@ (80212f0 <__register_exitproc+0xac>)
 8021260:	6013      	str	r3, [r2, #0]
 8021262:	4a24      	ldr	r2, [pc, #144]	@ (80212f4 <__register_exitproc+0xb0>)
 8021264:	b112      	cbz	r2, 802126c <__register_exitproc+0x28>
 8021266:	6812      	ldr	r2, [r2, #0]
 8021268:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 802126c:	4c20      	ldr	r4, [pc, #128]	@ (80212f0 <__register_exitproc+0xac>)
 802126e:	6863      	ldr	r3, [r4, #4]
 8021270:	2b1f      	cmp	r3, #31
 8021272:	dd06      	ble.n	8021282 <__register_exitproc+0x3e>
 8021274:	6828      	ldr	r0, [r5, #0]
 8021276:	f7ff ffe3 	bl	8021240 <__retarget_lock_release_recursive>
 802127a:	f04f 30ff 	mov.w	r0, #4294967295
 802127e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021282:	b32f      	cbz	r7, 80212d0 <__register_exitproc+0x8c>
 8021284:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8021288:	b968      	cbnz	r0, 80212a6 <__register_exitproc+0x62>
 802128a:	4b1b      	ldr	r3, [pc, #108]	@ (80212f8 <__register_exitproc+0xb4>)
 802128c:	2b00      	cmp	r3, #0
 802128e:	d0f1      	beq.n	8021274 <__register_exitproc+0x30>
 8021290:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8021294:	f7ff fd22 	bl	8020cdc <malloc>
 8021298:	2800      	cmp	r0, #0
 802129a:	d0eb      	beq.n	8021274 <__register_exitproc+0x30>
 802129c:	2300      	movs	r3, #0
 802129e:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80212a2:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 80212a6:	6863      	ldr	r3, [r4, #4]
 80212a8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80212ac:	2201      	movs	r2, #1
 80212ae:	409a      	lsls	r2, r3
 80212b0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80212b4:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 80212b8:	4313      	orrs	r3, r2
 80212ba:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 80212be:	2f02      	cmp	r7, #2
 80212c0:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 80212c4:	bf02      	ittt	eq
 80212c6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80212ca:	4313      	orreq	r3, r2
 80212cc:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80212d0:	6863      	ldr	r3, [r4, #4]
 80212d2:	6828      	ldr	r0, [r5, #0]
 80212d4:	1c5a      	adds	r2, r3, #1
 80212d6:	3302      	adds	r3, #2
 80212d8:	6062      	str	r2, [r4, #4]
 80212da:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80212de:	f7ff ffaf 	bl	8021240 <__retarget_lock_release_recursive>
 80212e2:	2000      	movs	r0, #0
 80212e4:	e7cb      	b.n	802127e <__register_exitproc+0x3a>
 80212e6:	bf00      	nop
 80212e8:	20000254 	.word	0x20000254
 80212ec:	20002798 	.word	0x20002798
 80212f0:	2000270c 	.word	0x2000270c
 80212f4:	0802342c 	.word	0x0802342c
 80212f8:	08020cdd 	.word	0x08020cdd

080212fc <_free_r>:
 80212fc:	b538      	push	{r3, r4, r5, lr}
 80212fe:	4605      	mov	r5, r0
 8021300:	2900      	cmp	r1, #0
 8021302:	d041      	beq.n	8021388 <_free_r+0x8c>
 8021304:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8021308:	1f0c      	subs	r4, r1, #4
 802130a:	2b00      	cmp	r3, #0
 802130c:	bfb8      	it	lt
 802130e:	18e4      	addlt	r4, r4, r3
 8021310:	f7ff fd96 	bl	8020e40 <__malloc_lock>
 8021314:	4a1d      	ldr	r2, [pc, #116]	@ (802138c <_free_r+0x90>)
 8021316:	6813      	ldr	r3, [r2, #0]
 8021318:	b933      	cbnz	r3, 8021328 <_free_r+0x2c>
 802131a:	6063      	str	r3, [r4, #4]
 802131c:	6014      	str	r4, [r2, #0]
 802131e:	4628      	mov	r0, r5
 8021320:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8021324:	f7ff bd92 	b.w	8020e4c <__malloc_unlock>
 8021328:	42a3      	cmp	r3, r4
 802132a:	d908      	bls.n	802133e <_free_r+0x42>
 802132c:	6820      	ldr	r0, [r4, #0]
 802132e:	1821      	adds	r1, r4, r0
 8021330:	428b      	cmp	r3, r1
 8021332:	bf01      	itttt	eq
 8021334:	6819      	ldreq	r1, [r3, #0]
 8021336:	685b      	ldreq	r3, [r3, #4]
 8021338:	1809      	addeq	r1, r1, r0
 802133a:	6021      	streq	r1, [r4, #0]
 802133c:	e7ed      	b.n	802131a <_free_r+0x1e>
 802133e:	461a      	mov	r2, r3
 8021340:	685b      	ldr	r3, [r3, #4]
 8021342:	b10b      	cbz	r3, 8021348 <_free_r+0x4c>
 8021344:	42a3      	cmp	r3, r4
 8021346:	d9fa      	bls.n	802133e <_free_r+0x42>
 8021348:	6811      	ldr	r1, [r2, #0]
 802134a:	1850      	adds	r0, r2, r1
 802134c:	42a0      	cmp	r0, r4
 802134e:	d10b      	bne.n	8021368 <_free_r+0x6c>
 8021350:	6820      	ldr	r0, [r4, #0]
 8021352:	4401      	add	r1, r0
 8021354:	1850      	adds	r0, r2, r1
 8021356:	4283      	cmp	r3, r0
 8021358:	6011      	str	r1, [r2, #0]
 802135a:	d1e0      	bne.n	802131e <_free_r+0x22>
 802135c:	6818      	ldr	r0, [r3, #0]
 802135e:	685b      	ldr	r3, [r3, #4]
 8021360:	6053      	str	r3, [r2, #4]
 8021362:	4408      	add	r0, r1
 8021364:	6010      	str	r0, [r2, #0]
 8021366:	e7da      	b.n	802131e <_free_r+0x22>
 8021368:	d902      	bls.n	8021370 <_free_r+0x74>
 802136a:	230c      	movs	r3, #12
 802136c:	602b      	str	r3, [r5, #0]
 802136e:	e7d6      	b.n	802131e <_free_r+0x22>
 8021370:	6820      	ldr	r0, [r4, #0]
 8021372:	1821      	adds	r1, r4, r0
 8021374:	428b      	cmp	r3, r1
 8021376:	bf04      	itt	eq
 8021378:	6819      	ldreq	r1, [r3, #0]
 802137a:	685b      	ldreq	r3, [r3, #4]
 802137c:	6063      	str	r3, [r4, #4]
 802137e:	bf04      	itt	eq
 8021380:	1809      	addeq	r1, r1, r0
 8021382:	6021      	streq	r1, [r4, #0]
 8021384:	6054      	str	r4, [r2, #4]
 8021386:	e7ca      	b.n	802131e <_free_r+0x22>
 8021388:	bd38      	pop	{r3, r4, r5, pc}
 802138a:	bf00      	nop
 802138c:	200025c4 	.word	0x200025c4

08021390 <__sfputc_r>:
 8021390:	6893      	ldr	r3, [r2, #8]
 8021392:	3b01      	subs	r3, #1
 8021394:	2b00      	cmp	r3, #0
 8021396:	b410      	push	{r4}
 8021398:	6093      	str	r3, [r2, #8]
 802139a:	da08      	bge.n	80213ae <__sfputc_r+0x1e>
 802139c:	6994      	ldr	r4, [r2, #24]
 802139e:	42a3      	cmp	r3, r4
 80213a0:	db01      	blt.n	80213a6 <__sfputc_r+0x16>
 80213a2:	290a      	cmp	r1, #10
 80213a4:	d103      	bne.n	80213ae <__sfputc_r+0x1e>
 80213a6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80213aa:	f000 bb6d 	b.w	8021a88 <__swbuf_r>
 80213ae:	6813      	ldr	r3, [r2, #0]
 80213b0:	1c58      	adds	r0, r3, #1
 80213b2:	6010      	str	r0, [r2, #0]
 80213b4:	7019      	strb	r1, [r3, #0]
 80213b6:	4608      	mov	r0, r1
 80213b8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80213bc:	4770      	bx	lr

080213be <__sfputs_r>:
 80213be:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80213c0:	4606      	mov	r6, r0
 80213c2:	460f      	mov	r7, r1
 80213c4:	4614      	mov	r4, r2
 80213c6:	18d5      	adds	r5, r2, r3
 80213c8:	42ac      	cmp	r4, r5
 80213ca:	d101      	bne.n	80213d0 <__sfputs_r+0x12>
 80213cc:	2000      	movs	r0, #0
 80213ce:	e007      	b.n	80213e0 <__sfputs_r+0x22>
 80213d0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80213d4:	463a      	mov	r2, r7
 80213d6:	4630      	mov	r0, r6
 80213d8:	f7ff ffda 	bl	8021390 <__sfputc_r>
 80213dc:	1c43      	adds	r3, r0, #1
 80213de:	d1f3      	bne.n	80213c8 <__sfputs_r+0xa>
 80213e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080213e4 <_vfiprintf_r>:
 80213e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80213e8:	460d      	mov	r5, r1
 80213ea:	b09d      	sub	sp, #116	@ 0x74
 80213ec:	4614      	mov	r4, r2
 80213ee:	4698      	mov	r8, r3
 80213f0:	4606      	mov	r6, r0
 80213f2:	b118      	cbz	r0, 80213fc <_vfiprintf_r+0x18>
 80213f4:	6a03      	ldr	r3, [r0, #32]
 80213f6:	b90b      	cbnz	r3, 80213fc <_vfiprintf_r+0x18>
 80213f8:	f7ff fdc8 	bl	8020f8c <__sinit>
 80213fc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80213fe:	07d9      	lsls	r1, r3, #31
 8021400:	d405      	bmi.n	802140e <_vfiprintf_r+0x2a>
 8021402:	89ab      	ldrh	r3, [r5, #12]
 8021404:	059a      	lsls	r2, r3, #22
 8021406:	d402      	bmi.n	802140e <_vfiprintf_r+0x2a>
 8021408:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802140a:	f7ff ff18 	bl	802123e <__retarget_lock_acquire_recursive>
 802140e:	89ab      	ldrh	r3, [r5, #12]
 8021410:	071b      	lsls	r3, r3, #28
 8021412:	d501      	bpl.n	8021418 <_vfiprintf_r+0x34>
 8021414:	692b      	ldr	r3, [r5, #16]
 8021416:	b99b      	cbnz	r3, 8021440 <_vfiprintf_r+0x5c>
 8021418:	4629      	mov	r1, r5
 802141a:	4630      	mov	r0, r6
 802141c:	f000 fb72 	bl	8021b04 <__swsetup_r>
 8021420:	b170      	cbz	r0, 8021440 <_vfiprintf_r+0x5c>
 8021422:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8021424:	07dc      	lsls	r4, r3, #31
 8021426:	d504      	bpl.n	8021432 <_vfiprintf_r+0x4e>
 8021428:	f04f 30ff 	mov.w	r0, #4294967295
 802142c:	b01d      	add	sp, #116	@ 0x74
 802142e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021432:	89ab      	ldrh	r3, [r5, #12]
 8021434:	0598      	lsls	r0, r3, #22
 8021436:	d4f7      	bmi.n	8021428 <_vfiprintf_r+0x44>
 8021438:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802143a:	f7ff ff01 	bl	8021240 <__retarget_lock_release_recursive>
 802143e:	e7f3      	b.n	8021428 <_vfiprintf_r+0x44>
 8021440:	2300      	movs	r3, #0
 8021442:	9309      	str	r3, [sp, #36]	@ 0x24
 8021444:	2320      	movs	r3, #32
 8021446:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 802144a:	f8cd 800c 	str.w	r8, [sp, #12]
 802144e:	2330      	movs	r3, #48	@ 0x30
 8021450:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8021600 <_vfiprintf_r+0x21c>
 8021454:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8021458:	f04f 0901 	mov.w	r9, #1
 802145c:	4623      	mov	r3, r4
 802145e:	469a      	mov	sl, r3
 8021460:	f813 2b01 	ldrb.w	r2, [r3], #1
 8021464:	b10a      	cbz	r2, 802146a <_vfiprintf_r+0x86>
 8021466:	2a25      	cmp	r2, #37	@ 0x25
 8021468:	d1f9      	bne.n	802145e <_vfiprintf_r+0x7a>
 802146a:	ebba 0b04 	subs.w	fp, sl, r4
 802146e:	d00b      	beq.n	8021488 <_vfiprintf_r+0xa4>
 8021470:	465b      	mov	r3, fp
 8021472:	4622      	mov	r2, r4
 8021474:	4629      	mov	r1, r5
 8021476:	4630      	mov	r0, r6
 8021478:	f7ff ffa1 	bl	80213be <__sfputs_r>
 802147c:	3001      	adds	r0, #1
 802147e:	f000 80a7 	beq.w	80215d0 <_vfiprintf_r+0x1ec>
 8021482:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8021484:	445a      	add	r2, fp
 8021486:	9209      	str	r2, [sp, #36]	@ 0x24
 8021488:	f89a 3000 	ldrb.w	r3, [sl]
 802148c:	2b00      	cmp	r3, #0
 802148e:	f000 809f 	beq.w	80215d0 <_vfiprintf_r+0x1ec>
 8021492:	2300      	movs	r3, #0
 8021494:	f04f 32ff 	mov.w	r2, #4294967295
 8021498:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802149c:	f10a 0a01 	add.w	sl, sl, #1
 80214a0:	9304      	str	r3, [sp, #16]
 80214a2:	9307      	str	r3, [sp, #28]
 80214a4:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80214a8:	931a      	str	r3, [sp, #104]	@ 0x68
 80214aa:	4654      	mov	r4, sl
 80214ac:	2205      	movs	r2, #5
 80214ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80214b2:	4853      	ldr	r0, [pc, #332]	@ (8021600 <_vfiprintf_r+0x21c>)
 80214b4:	f7de feac 	bl	8000210 <memchr>
 80214b8:	9a04      	ldr	r2, [sp, #16]
 80214ba:	b9d8      	cbnz	r0, 80214f4 <_vfiprintf_r+0x110>
 80214bc:	06d1      	lsls	r1, r2, #27
 80214be:	bf44      	itt	mi
 80214c0:	2320      	movmi	r3, #32
 80214c2:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80214c6:	0713      	lsls	r3, r2, #28
 80214c8:	bf44      	itt	mi
 80214ca:	232b      	movmi	r3, #43	@ 0x2b
 80214cc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80214d0:	f89a 3000 	ldrb.w	r3, [sl]
 80214d4:	2b2a      	cmp	r3, #42	@ 0x2a
 80214d6:	d015      	beq.n	8021504 <_vfiprintf_r+0x120>
 80214d8:	9a07      	ldr	r2, [sp, #28]
 80214da:	4654      	mov	r4, sl
 80214dc:	2000      	movs	r0, #0
 80214de:	f04f 0c0a 	mov.w	ip, #10
 80214e2:	4621      	mov	r1, r4
 80214e4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80214e8:	3b30      	subs	r3, #48	@ 0x30
 80214ea:	2b09      	cmp	r3, #9
 80214ec:	d94b      	bls.n	8021586 <_vfiprintf_r+0x1a2>
 80214ee:	b1b0      	cbz	r0, 802151e <_vfiprintf_r+0x13a>
 80214f0:	9207      	str	r2, [sp, #28]
 80214f2:	e014      	b.n	802151e <_vfiprintf_r+0x13a>
 80214f4:	eba0 0308 	sub.w	r3, r0, r8
 80214f8:	fa09 f303 	lsl.w	r3, r9, r3
 80214fc:	4313      	orrs	r3, r2
 80214fe:	9304      	str	r3, [sp, #16]
 8021500:	46a2      	mov	sl, r4
 8021502:	e7d2      	b.n	80214aa <_vfiprintf_r+0xc6>
 8021504:	9b03      	ldr	r3, [sp, #12]
 8021506:	1d19      	adds	r1, r3, #4
 8021508:	681b      	ldr	r3, [r3, #0]
 802150a:	9103      	str	r1, [sp, #12]
 802150c:	2b00      	cmp	r3, #0
 802150e:	bfbb      	ittet	lt
 8021510:	425b      	neglt	r3, r3
 8021512:	f042 0202 	orrlt.w	r2, r2, #2
 8021516:	9307      	strge	r3, [sp, #28]
 8021518:	9307      	strlt	r3, [sp, #28]
 802151a:	bfb8      	it	lt
 802151c:	9204      	strlt	r2, [sp, #16]
 802151e:	7823      	ldrb	r3, [r4, #0]
 8021520:	2b2e      	cmp	r3, #46	@ 0x2e
 8021522:	d10a      	bne.n	802153a <_vfiprintf_r+0x156>
 8021524:	7863      	ldrb	r3, [r4, #1]
 8021526:	2b2a      	cmp	r3, #42	@ 0x2a
 8021528:	d132      	bne.n	8021590 <_vfiprintf_r+0x1ac>
 802152a:	9b03      	ldr	r3, [sp, #12]
 802152c:	1d1a      	adds	r2, r3, #4
 802152e:	681b      	ldr	r3, [r3, #0]
 8021530:	9203      	str	r2, [sp, #12]
 8021532:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8021536:	3402      	adds	r4, #2
 8021538:	9305      	str	r3, [sp, #20]
 802153a:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8021610 <_vfiprintf_r+0x22c>
 802153e:	7821      	ldrb	r1, [r4, #0]
 8021540:	2203      	movs	r2, #3
 8021542:	4650      	mov	r0, sl
 8021544:	f7de fe64 	bl	8000210 <memchr>
 8021548:	b138      	cbz	r0, 802155a <_vfiprintf_r+0x176>
 802154a:	9b04      	ldr	r3, [sp, #16]
 802154c:	eba0 000a 	sub.w	r0, r0, sl
 8021550:	2240      	movs	r2, #64	@ 0x40
 8021552:	4082      	lsls	r2, r0
 8021554:	4313      	orrs	r3, r2
 8021556:	3401      	adds	r4, #1
 8021558:	9304      	str	r3, [sp, #16]
 802155a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802155e:	4829      	ldr	r0, [pc, #164]	@ (8021604 <_vfiprintf_r+0x220>)
 8021560:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8021564:	2206      	movs	r2, #6
 8021566:	f7de fe53 	bl	8000210 <memchr>
 802156a:	2800      	cmp	r0, #0
 802156c:	d03f      	beq.n	80215ee <_vfiprintf_r+0x20a>
 802156e:	4b26      	ldr	r3, [pc, #152]	@ (8021608 <_vfiprintf_r+0x224>)
 8021570:	bb1b      	cbnz	r3, 80215ba <_vfiprintf_r+0x1d6>
 8021572:	9b03      	ldr	r3, [sp, #12]
 8021574:	3307      	adds	r3, #7
 8021576:	f023 0307 	bic.w	r3, r3, #7
 802157a:	3308      	adds	r3, #8
 802157c:	9303      	str	r3, [sp, #12]
 802157e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021580:	443b      	add	r3, r7
 8021582:	9309      	str	r3, [sp, #36]	@ 0x24
 8021584:	e76a      	b.n	802145c <_vfiprintf_r+0x78>
 8021586:	fb0c 3202 	mla	r2, ip, r2, r3
 802158a:	460c      	mov	r4, r1
 802158c:	2001      	movs	r0, #1
 802158e:	e7a8      	b.n	80214e2 <_vfiprintf_r+0xfe>
 8021590:	2300      	movs	r3, #0
 8021592:	3401      	adds	r4, #1
 8021594:	9305      	str	r3, [sp, #20]
 8021596:	4619      	mov	r1, r3
 8021598:	f04f 0c0a 	mov.w	ip, #10
 802159c:	4620      	mov	r0, r4
 802159e:	f810 2b01 	ldrb.w	r2, [r0], #1
 80215a2:	3a30      	subs	r2, #48	@ 0x30
 80215a4:	2a09      	cmp	r2, #9
 80215a6:	d903      	bls.n	80215b0 <_vfiprintf_r+0x1cc>
 80215a8:	2b00      	cmp	r3, #0
 80215aa:	d0c6      	beq.n	802153a <_vfiprintf_r+0x156>
 80215ac:	9105      	str	r1, [sp, #20]
 80215ae:	e7c4      	b.n	802153a <_vfiprintf_r+0x156>
 80215b0:	fb0c 2101 	mla	r1, ip, r1, r2
 80215b4:	4604      	mov	r4, r0
 80215b6:	2301      	movs	r3, #1
 80215b8:	e7f0      	b.n	802159c <_vfiprintf_r+0x1b8>
 80215ba:	ab03      	add	r3, sp, #12
 80215bc:	9300      	str	r3, [sp, #0]
 80215be:	462a      	mov	r2, r5
 80215c0:	4b12      	ldr	r3, [pc, #72]	@ (802160c <_vfiprintf_r+0x228>)
 80215c2:	a904      	add	r1, sp, #16
 80215c4:	4630      	mov	r0, r6
 80215c6:	f3af 8000 	nop.w
 80215ca:	4607      	mov	r7, r0
 80215cc:	1c78      	adds	r0, r7, #1
 80215ce:	d1d6      	bne.n	802157e <_vfiprintf_r+0x19a>
 80215d0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80215d2:	07d9      	lsls	r1, r3, #31
 80215d4:	d405      	bmi.n	80215e2 <_vfiprintf_r+0x1fe>
 80215d6:	89ab      	ldrh	r3, [r5, #12]
 80215d8:	059a      	lsls	r2, r3, #22
 80215da:	d402      	bmi.n	80215e2 <_vfiprintf_r+0x1fe>
 80215dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80215de:	f7ff fe2f 	bl	8021240 <__retarget_lock_release_recursive>
 80215e2:	89ab      	ldrh	r3, [r5, #12]
 80215e4:	065b      	lsls	r3, r3, #25
 80215e6:	f53f af1f 	bmi.w	8021428 <_vfiprintf_r+0x44>
 80215ea:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80215ec:	e71e      	b.n	802142c <_vfiprintf_r+0x48>
 80215ee:	ab03      	add	r3, sp, #12
 80215f0:	9300      	str	r3, [sp, #0]
 80215f2:	462a      	mov	r2, r5
 80215f4:	4b05      	ldr	r3, [pc, #20]	@ (802160c <_vfiprintf_r+0x228>)
 80215f6:	a904      	add	r1, sp, #16
 80215f8:	4630      	mov	r0, r6
 80215fa:	f000 f879 	bl	80216f0 <_printf_i>
 80215fe:	e7e4      	b.n	80215ca <_vfiprintf_r+0x1e6>
 8021600:	08023430 	.word	0x08023430
 8021604:	0802343a 	.word	0x0802343a
 8021608:	00000000 	.word	0x00000000
 802160c:	080213bf 	.word	0x080213bf
 8021610:	08023436 	.word	0x08023436

08021614 <_printf_common>:
 8021614:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8021618:	4616      	mov	r6, r2
 802161a:	4698      	mov	r8, r3
 802161c:	688a      	ldr	r2, [r1, #8]
 802161e:	690b      	ldr	r3, [r1, #16]
 8021620:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8021624:	4293      	cmp	r3, r2
 8021626:	bfb8      	it	lt
 8021628:	4613      	movlt	r3, r2
 802162a:	6033      	str	r3, [r6, #0]
 802162c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8021630:	4607      	mov	r7, r0
 8021632:	460c      	mov	r4, r1
 8021634:	b10a      	cbz	r2, 802163a <_printf_common+0x26>
 8021636:	3301      	adds	r3, #1
 8021638:	6033      	str	r3, [r6, #0]
 802163a:	6823      	ldr	r3, [r4, #0]
 802163c:	0699      	lsls	r1, r3, #26
 802163e:	bf42      	ittt	mi
 8021640:	6833      	ldrmi	r3, [r6, #0]
 8021642:	3302      	addmi	r3, #2
 8021644:	6033      	strmi	r3, [r6, #0]
 8021646:	6825      	ldr	r5, [r4, #0]
 8021648:	f015 0506 	ands.w	r5, r5, #6
 802164c:	d106      	bne.n	802165c <_printf_common+0x48>
 802164e:	f104 0a19 	add.w	sl, r4, #25
 8021652:	68e3      	ldr	r3, [r4, #12]
 8021654:	6832      	ldr	r2, [r6, #0]
 8021656:	1a9b      	subs	r3, r3, r2
 8021658:	42ab      	cmp	r3, r5
 802165a:	dc26      	bgt.n	80216aa <_printf_common+0x96>
 802165c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8021660:	6822      	ldr	r2, [r4, #0]
 8021662:	3b00      	subs	r3, #0
 8021664:	bf18      	it	ne
 8021666:	2301      	movne	r3, #1
 8021668:	0692      	lsls	r2, r2, #26
 802166a:	d42b      	bmi.n	80216c4 <_printf_common+0xb0>
 802166c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8021670:	4641      	mov	r1, r8
 8021672:	4638      	mov	r0, r7
 8021674:	47c8      	blx	r9
 8021676:	3001      	adds	r0, #1
 8021678:	d01e      	beq.n	80216b8 <_printf_common+0xa4>
 802167a:	6823      	ldr	r3, [r4, #0]
 802167c:	6922      	ldr	r2, [r4, #16]
 802167e:	f003 0306 	and.w	r3, r3, #6
 8021682:	2b04      	cmp	r3, #4
 8021684:	bf02      	ittt	eq
 8021686:	68e5      	ldreq	r5, [r4, #12]
 8021688:	6833      	ldreq	r3, [r6, #0]
 802168a:	1aed      	subeq	r5, r5, r3
 802168c:	68a3      	ldr	r3, [r4, #8]
 802168e:	bf0c      	ite	eq
 8021690:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021694:	2500      	movne	r5, #0
 8021696:	4293      	cmp	r3, r2
 8021698:	bfc4      	itt	gt
 802169a:	1a9b      	subgt	r3, r3, r2
 802169c:	18ed      	addgt	r5, r5, r3
 802169e:	2600      	movs	r6, #0
 80216a0:	341a      	adds	r4, #26
 80216a2:	42b5      	cmp	r5, r6
 80216a4:	d11a      	bne.n	80216dc <_printf_common+0xc8>
 80216a6:	2000      	movs	r0, #0
 80216a8:	e008      	b.n	80216bc <_printf_common+0xa8>
 80216aa:	2301      	movs	r3, #1
 80216ac:	4652      	mov	r2, sl
 80216ae:	4641      	mov	r1, r8
 80216b0:	4638      	mov	r0, r7
 80216b2:	47c8      	blx	r9
 80216b4:	3001      	adds	r0, #1
 80216b6:	d103      	bne.n	80216c0 <_printf_common+0xac>
 80216b8:	f04f 30ff 	mov.w	r0, #4294967295
 80216bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80216c0:	3501      	adds	r5, #1
 80216c2:	e7c6      	b.n	8021652 <_printf_common+0x3e>
 80216c4:	18e1      	adds	r1, r4, r3
 80216c6:	1c5a      	adds	r2, r3, #1
 80216c8:	2030      	movs	r0, #48	@ 0x30
 80216ca:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80216ce:	4422      	add	r2, r4
 80216d0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80216d4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80216d8:	3302      	adds	r3, #2
 80216da:	e7c7      	b.n	802166c <_printf_common+0x58>
 80216dc:	2301      	movs	r3, #1
 80216de:	4622      	mov	r2, r4
 80216e0:	4641      	mov	r1, r8
 80216e2:	4638      	mov	r0, r7
 80216e4:	47c8      	blx	r9
 80216e6:	3001      	adds	r0, #1
 80216e8:	d0e6      	beq.n	80216b8 <_printf_common+0xa4>
 80216ea:	3601      	adds	r6, #1
 80216ec:	e7d9      	b.n	80216a2 <_printf_common+0x8e>
	...

080216f0 <_printf_i>:
 80216f0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80216f4:	7e0f      	ldrb	r7, [r1, #24]
 80216f6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80216f8:	2f78      	cmp	r7, #120	@ 0x78
 80216fa:	4691      	mov	r9, r2
 80216fc:	4680      	mov	r8, r0
 80216fe:	460c      	mov	r4, r1
 8021700:	469a      	mov	sl, r3
 8021702:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8021706:	d807      	bhi.n	8021718 <_printf_i+0x28>
 8021708:	2f62      	cmp	r7, #98	@ 0x62
 802170a:	d80a      	bhi.n	8021722 <_printf_i+0x32>
 802170c:	2f00      	cmp	r7, #0
 802170e:	f000 80d2 	beq.w	80218b6 <_printf_i+0x1c6>
 8021712:	2f58      	cmp	r7, #88	@ 0x58
 8021714:	f000 80b9 	beq.w	802188a <_printf_i+0x19a>
 8021718:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802171c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8021720:	e03a      	b.n	8021798 <_printf_i+0xa8>
 8021722:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8021726:	2b15      	cmp	r3, #21
 8021728:	d8f6      	bhi.n	8021718 <_printf_i+0x28>
 802172a:	a101      	add	r1, pc, #4	@ (adr r1, 8021730 <_printf_i+0x40>)
 802172c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8021730:	08021789 	.word	0x08021789
 8021734:	0802179d 	.word	0x0802179d
 8021738:	08021719 	.word	0x08021719
 802173c:	08021719 	.word	0x08021719
 8021740:	08021719 	.word	0x08021719
 8021744:	08021719 	.word	0x08021719
 8021748:	0802179d 	.word	0x0802179d
 802174c:	08021719 	.word	0x08021719
 8021750:	08021719 	.word	0x08021719
 8021754:	08021719 	.word	0x08021719
 8021758:	08021719 	.word	0x08021719
 802175c:	0802189d 	.word	0x0802189d
 8021760:	080217c7 	.word	0x080217c7
 8021764:	08021857 	.word	0x08021857
 8021768:	08021719 	.word	0x08021719
 802176c:	08021719 	.word	0x08021719
 8021770:	080218bf 	.word	0x080218bf
 8021774:	08021719 	.word	0x08021719
 8021778:	080217c7 	.word	0x080217c7
 802177c:	08021719 	.word	0x08021719
 8021780:	08021719 	.word	0x08021719
 8021784:	0802185f 	.word	0x0802185f
 8021788:	6833      	ldr	r3, [r6, #0]
 802178a:	1d1a      	adds	r2, r3, #4
 802178c:	681b      	ldr	r3, [r3, #0]
 802178e:	6032      	str	r2, [r6, #0]
 8021790:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8021794:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8021798:	2301      	movs	r3, #1
 802179a:	e09d      	b.n	80218d8 <_printf_i+0x1e8>
 802179c:	6833      	ldr	r3, [r6, #0]
 802179e:	6820      	ldr	r0, [r4, #0]
 80217a0:	1d19      	adds	r1, r3, #4
 80217a2:	6031      	str	r1, [r6, #0]
 80217a4:	0606      	lsls	r6, r0, #24
 80217a6:	d501      	bpl.n	80217ac <_printf_i+0xbc>
 80217a8:	681d      	ldr	r5, [r3, #0]
 80217aa:	e003      	b.n	80217b4 <_printf_i+0xc4>
 80217ac:	0645      	lsls	r5, r0, #25
 80217ae:	d5fb      	bpl.n	80217a8 <_printf_i+0xb8>
 80217b0:	f9b3 5000 	ldrsh.w	r5, [r3]
 80217b4:	2d00      	cmp	r5, #0
 80217b6:	da03      	bge.n	80217c0 <_printf_i+0xd0>
 80217b8:	232d      	movs	r3, #45	@ 0x2d
 80217ba:	426d      	negs	r5, r5
 80217bc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80217c0:	4859      	ldr	r0, [pc, #356]	@ (8021928 <_printf_i+0x238>)
 80217c2:	230a      	movs	r3, #10
 80217c4:	e011      	b.n	80217ea <_printf_i+0xfa>
 80217c6:	6821      	ldr	r1, [r4, #0]
 80217c8:	6833      	ldr	r3, [r6, #0]
 80217ca:	0608      	lsls	r0, r1, #24
 80217cc:	f853 5b04 	ldr.w	r5, [r3], #4
 80217d0:	d402      	bmi.n	80217d8 <_printf_i+0xe8>
 80217d2:	0649      	lsls	r1, r1, #25
 80217d4:	bf48      	it	mi
 80217d6:	b2ad      	uxthmi	r5, r5
 80217d8:	2f6f      	cmp	r7, #111	@ 0x6f
 80217da:	4853      	ldr	r0, [pc, #332]	@ (8021928 <_printf_i+0x238>)
 80217dc:	6033      	str	r3, [r6, #0]
 80217de:	bf14      	ite	ne
 80217e0:	230a      	movne	r3, #10
 80217e2:	2308      	moveq	r3, #8
 80217e4:	2100      	movs	r1, #0
 80217e6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80217ea:	6866      	ldr	r6, [r4, #4]
 80217ec:	60a6      	str	r6, [r4, #8]
 80217ee:	2e00      	cmp	r6, #0
 80217f0:	bfa2      	ittt	ge
 80217f2:	6821      	ldrge	r1, [r4, #0]
 80217f4:	f021 0104 	bicge.w	r1, r1, #4
 80217f8:	6021      	strge	r1, [r4, #0]
 80217fa:	b90d      	cbnz	r5, 8021800 <_printf_i+0x110>
 80217fc:	2e00      	cmp	r6, #0
 80217fe:	d04b      	beq.n	8021898 <_printf_i+0x1a8>
 8021800:	4616      	mov	r6, r2
 8021802:	fbb5 f1f3 	udiv	r1, r5, r3
 8021806:	fb03 5711 	mls	r7, r3, r1, r5
 802180a:	5dc7      	ldrb	r7, [r0, r7]
 802180c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8021810:	462f      	mov	r7, r5
 8021812:	42bb      	cmp	r3, r7
 8021814:	460d      	mov	r5, r1
 8021816:	d9f4      	bls.n	8021802 <_printf_i+0x112>
 8021818:	2b08      	cmp	r3, #8
 802181a:	d10b      	bne.n	8021834 <_printf_i+0x144>
 802181c:	6823      	ldr	r3, [r4, #0]
 802181e:	07df      	lsls	r7, r3, #31
 8021820:	d508      	bpl.n	8021834 <_printf_i+0x144>
 8021822:	6923      	ldr	r3, [r4, #16]
 8021824:	6861      	ldr	r1, [r4, #4]
 8021826:	4299      	cmp	r1, r3
 8021828:	bfde      	ittt	le
 802182a:	2330      	movle	r3, #48	@ 0x30
 802182c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8021830:	f106 36ff 	addle.w	r6, r6, #4294967295
 8021834:	1b92      	subs	r2, r2, r6
 8021836:	6122      	str	r2, [r4, #16]
 8021838:	f8cd a000 	str.w	sl, [sp]
 802183c:	464b      	mov	r3, r9
 802183e:	aa03      	add	r2, sp, #12
 8021840:	4621      	mov	r1, r4
 8021842:	4640      	mov	r0, r8
 8021844:	f7ff fee6 	bl	8021614 <_printf_common>
 8021848:	3001      	adds	r0, #1
 802184a:	d14a      	bne.n	80218e2 <_printf_i+0x1f2>
 802184c:	f04f 30ff 	mov.w	r0, #4294967295
 8021850:	b004      	add	sp, #16
 8021852:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8021856:	6823      	ldr	r3, [r4, #0]
 8021858:	f043 0320 	orr.w	r3, r3, #32
 802185c:	6023      	str	r3, [r4, #0]
 802185e:	4833      	ldr	r0, [pc, #204]	@ (802192c <_printf_i+0x23c>)
 8021860:	2778      	movs	r7, #120	@ 0x78
 8021862:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8021866:	6823      	ldr	r3, [r4, #0]
 8021868:	6831      	ldr	r1, [r6, #0]
 802186a:	061f      	lsls	r7, r3, #24
 802186c:	f851 5b04 	ldr.w	r5, [r1], #4
 8021870:	d402      	bmi.n	8021878 <_printf_i+0x188>
 8021872:	065f      	lsls	r7, r3, #25
 8021874:	bf48      	it	mi
 8021876:	b2ad      	uxthmi	r5, r5
 8021878:	6031      	str	r1, [r6, #0]
 802187a:	07d9      	lsls	r1, r3, #31
 802187c:	bf44      	itt	mi
 802187e:	f043 0320 	orrmi.w	r3, r3, #32
 8021882:	6023      	strmi	r3, [r4, #0]
 8021884:	b11d      	cbz	r5, 802188e <_printf_i+0x19e>
 8021886:	2310      	movs	r3, #16
 8021888:	e7ac      	b.n	80217e4 <_printf_i+0xf4>
 802188a:	4827      	ldr	r0, [pc, #156]	@ (8021928 <_printf_i+0x238>)
 802188c:	e7e9      	b.n	8021862 <_printf_i+0x172>
 802188e:	6823      	ldr	r3, [r4, #0]
 8021890:	f023 0320 	bic.w	r3, r3, #32
 8021894:	6023      	str	r3, [r4, #0]
 8021896:	e7f6      	b.n	8021886 <_printf_i+0x196>
 8021898:	4616      	mov	r6, r2
 802189a:	e7bd      	b.n	8021818 <_printf_i+0x128>
 802189c:	6833      	ldr	r3, [r6, #0]
 802189e:	6825      	ldr	r5, [r4, #0]
 80218a0:	6961      	ldr	r1, [r4, #20]
 80218a2:	1d18      	adds	r0, r3, #4
 80218a4:	6030      	str	r0, [r6, #0]
 80218a6:	062e      	lsls	r6, r5, #24
 80218a8:	681b      	ldr	r3, [r3, #0]
 80218aa:	d501      	bpl.n	80218b0 <_printf_i+0x1c0>
 80218ac:	6019      	str	r1, [r3, #0]
 80218ae:	e002      	b.n	80218b6 <_printf_i+0x1c6>
 80218b0:	0668      	lsls	r0, r5, #25
 80218b2:	d5fb      	bpl.n	80218ac <_printf_i+0x1bc>
 80218b4:	8019      	strh	r1, [r3, #0]
 80218b6:	2300      	movs	r3, #0
 80218b8:	6123      	str	r3, [r4, #16]
 80218ba:	4616      	mov	r6, r2
 80218bc:	e7bc      	b.n	8021838 <_printf_i+0x148>
 80218be:	6833      	ldr	r3, [r6, #0]
 80218c0:	1d1a      	adds	r2, r3, #4
 80218c2:	6032      	str	r2, [r6, #0]
 80218c4:	681e      	ldr	r6, [r3, #0]
 80218c6:	6862      	ldr	r2, [r4, #4]
 80218c8:	2100      	movs	r1, #0
 80218ca:	4630      	mov	r0, r6
 80218cc:	f7de fca0 	bl	8000210 <memchr>
 80218d0:	b108      	cbz	r0, 80218d6 <_printf_i+0x1e6>
 80218d2:	1b80      	subs	r0, r0, r6
 80218d4:	6060      	str	r0, [r4, #4]
 80218d6:	6863      	ldr	r3, [r4, #4]
 80218d8:	6123      	str	r3, [r4, #16]
 80218da:	2300      	movs	r3, #0
 80218dc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80218e0:	e7aa      	b.n	8021838 <_printf_i+0x148>
 80218e2:	6923      	ldr	r3, [r4, #16]
 80218e4:	4632      	mov	r2, r6
 80218e6:	4649      	mov	r1, r9
 80218e8:	4640      	mov	r0, r8
 80218ea:	47d0      	blx	sl
 80218ec:	3001      	adds	r0, #1
 80218ee:	d0ad      	beq.n	802184c <_printf_i+0x15c>
 80218f0:	6823      	ldr	r3, [r4, #0]
 80218f2:	079b      	lsls	r3, r3, #30
 80218f4:	d413      	bmi.n	802191e <_printf_i+0x22e>
 80218f6:	68e0      	ldr	r0, [r4, #12]
 80218f8:	9b03      	ldr	r3, [sp, #12]
 80218fa:	4298      	cmp	r0, r3
 80218fc:	bfb8      	it	lt
 80218fe:	4618      	movlt	r0, r3
 8021900:	e7a6      	b.n	8021850 <_printf_i+0x160>
 8021902:	2301      	movs	r3, #1
 8021904:	4632      	mov	r2, r6
 8021906:	4649      	mov	r1, r9
 8021908:	4640      	mov	r0, r8
 802190a:	47d0      	blx	sl
 802190c:	3001      	adds	r0, #1
 802190e:	d09d      	beq.n	802184c <_printf_i+0x15c>
 8021910:	3501      	adds	r5, #1
 8021912:	68e3      	ldr	r3, [r4, #12]
 8021914:	9903      	ldr	r1, [sp, #12]
 8021916:	1a5b      	subs	r3, r3, r1
 8021918:	42ab      	cmp	r3, r5
 802191a:	dcf2      	bgt.n	8021902 <_printf_i+0x212>
 802191c:	e7eb      	b.n	80218f6 <_printf_i+0x206>
 802191e:	2500      	movs	r5, #0
 8021920:	f104 0619 	add.w	r6, r4, #25
 8021924:	e7f5      	b.n	8021912 <_printf_i+0x222>
 8021926:	bf00      	nop
 8021928:	08023441 	.word	0x08023441
 802192c:	08023452 	.word	0x08023452

08021930 <__sflush_r>:
 8021930:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8021934:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021938:	0716      	lsls	r6, r2, #28
 802193a:	4605      	mov	r5, r0
 802193c:	460c      	mov	r4, r1
 802193e:	d454      	bmi.n	80219ea <__sflush_r+0xba>
 8021940:	684b      	ldr	r3, [r1, #4]
 8021942:	2b00      	cmp	r3, #0
 8021944:	dc02      	bgt.n	802194c <__sflush_r+0x1c>
 8021946:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8021948:	2b00      	cmp	r3, #0
 802194a:	dd48      	ble.n	80219de <__sflush_r+0xae>
 802194c:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802194e:	2e00      	cmp	r6, #0
 8021950:	d045      	beq.n	80219de <__sflush_r+0xae>
 8021952:	2300      	movs	r3, #0
 8021954:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8021958:	682f      	ldr	r7, [r5, #0]
 802195a:	6a21      	ldr	r1, [r4, #32]
 802195c:	602b      	str	r3, [r5, #0]
 802195e:	d030      	beq.n	80219c2 <__sflush_r+0x92>
 8021960:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8021962:	89a3      	ldrh	r3, [r4, #12]
 8021964:	0759      	lsls	r1, r3, #29
 8021966:	d505      	bpl.n	8021974 <__sflush_r+0x44>
 8021968:	6863      	ldr	r3, [r4, #4]
 802196a:	1ad2      	subs	r2, r2, r3
 802196c:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802196e:	b10b      	cbz	r3, 8021974 <__sflush_r+0x44>
 8021970:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8021972:	1ad2      	subs	r2, r2, r3
 8021974:	2300      	movs	r3, #0
 8021976:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8021978:	6a21      	ldr	r1, [r4, #32]
 802197a:	4628      	mov	r0, r5
 802197c:	47b0      	blx	r6
 802197e:	1c43      	adds	r3, r0, #1
 8021980:	89a3      	ldrh	r3, [r4, #12]
 8021982:	d106      	bne.n	8021992 <__sflush_r+0x62>
 8021984:	6829      	ldr	r1, [r5, #0]
 8021986:	291d      	cmp	r1, #29
 8021988:	d82b      	bhi.n	80219e2 <__sflush_r+0xb2>
 802198a:	4a2a      	ldr	r2, [pc, #168]	@ (8021a34 <__sflush_r+0x104>)
 802198c:	410a      	asrs	r2, r1
 802198e:	07d6      	lsls	r6, r2, #31
 8021990:	d427      	bmi.n	80219e2 <__sflush_r+0xb2>
 8021992:	2200      	movs	r2, #0
 8021994:	6062      	str	r2, [r4, #4]
 8021996:	04d9      	lsls	r1, r3, #19
 8021998:	6922      	ldr	r2, [r4, #16]
 802199a:	6022      	str	r2, [r4, #0]
 802199c:	d504      	bpl.n	80219a8 <__sflush_r+0x78>
 802199e:	1c42      	adds	r2, r0, #1
 80219a0:	d101      	bne.n	80219a6 <__sflush_r+0x76>
 80219a2:	682b      	ldr	r3, [r5, #0]
 80219a4:	b903      	cbnz	r3, 80219a8 <__sflush_r+0x78>
 80219a6:	6560      	str	r0, [r4, #84]	@ 0x54
 80219a8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80219aa:	602f      	str	r7, [r5, #0]
 80219ac:	b1b9      	cbz	r1, 80219de <__sflush_r+0xae>
 80219ae:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80219b2:	4299      	cmp	r1, r3
 80219b4:	d002      	beq.n	80219bc <__sflush_r+0x8c>
 80219b6:	4628      	mov	r0, r5
 80219b8:	f7ff fca0 	bl	80212fc <_free_r>
 80219bc:	2300      	movs	r3, #0
 80219be:	6363      	str	r3, [r4, #52]	@ 0x34
 80219c0:	e00d      	b.n	80219de <__sflush_r+0xae>
 80219c2:	2301      	movs	r3, #1
 80219c4:	4628      	mov	r0, r5
 80219c6:	47b0      	blx	r6
 80219c8:	4602      	mov	r2, r0
 80219ca:	1c50      	adds	r0, r2, #1
 80219cc:	d1c9      	bne.n	8021962 <__sflush_r+0x32>
 80219ce:	682b      	ldr	r3, [r5, #0]
 80219d0:	2b00      	cmp	r3, #0
 80219d2:	d0c6      	beq.n	8021962 <__sflush_r+0x32>
 80219d4:	2b1d      	cmp	r3, #29
 80219d6:	d001      	beq.n	80219dc <__sflush_r+0xac>
 80219d8:	2b16      	cmp	r3, #22
 80219da:	d11e      	bne.n	8021a1a <__sflush_r+0xea>
 80219dc:	602f      	str	r7, [r5, #0]
 80219de:	2000      	movs	r0, #0
 80219e0:	e022      	b.n	8021a28 <__sflush_r+0xf8>
 80219e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80219e6:	b21b      	sxth	r3, r3
 80219e8:	e01b      	b.n	8021a22 <__sflush_r+0xf2>
 80219ea:	690f      	ldr	r7, [r1, #16]
 80219ec:	2f00      	cmp	r7, #0
 80219ee:	d0f6      	beq.n	80219de <__sflush_r+0xae>
 80219f0:	0793      	lsls	r3, r2, #30
 80219f2:	680e      	ldr	r6, [r1, #0]
 80219f4:	bf08      	it	eq
 80219f6:	694b      	ldreq	r3, [r1, #20]
 80219f8:	600f      	str	r7, [r1, #0]
 80219fa:	bf18      	it	ne
 80219fc:	2300      	movne	r3, #0
 80219fe:	eba6 0807 	sub.w	r8, r6, r7
 8021a02:	608b      	str	r3, [r1, #8]
 8021a04:	f1b8 0f00 	cmp.w	r8, #0
 8021a08:	dde9      	ble.n	80219de <__sflush_r+0xae>
 8021a0a:	6a21      	ldr	r1, [r4, #32]
 8021a0c:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8021a0e:	4643      	mov	r3, r8
 8021a10:	463a      	mov	r2, r7
 8021a12:	4628      	mov	r0, r5
 8021a14:	47b0      	blx	r6
 8021a16:	2800      	cmp	r0, #0
 8021a18:	dc08      	bgt.n	8021a2c <__sflush_r+0xfc>
 8021a1a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021a1e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021a22:	81a3      	strh	r3, [r4, #12]
 8021a24:	f04f 30ff 	mov.w	r0, #4294967295
 8021a28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021a2c:	4407      	add	r7, r0
 8021a2e:	eba8 0800 	sub.w	r8, r8, r0
 8021a32:	e7e7      	b.n	8021a04 <__sflush_r+0xd4>
 8021a34:	dfbffffe 	.word	0xdfbffffe

08021a38 <_fflush_r>:
 8021a38:	b538      	push	{r3, r4, r5, lr}
 8021a3a:	690b      	ldr	r3, [r1, #16]
 8021a3c:	4605      	mov	r5, r0
 8021a3e:	460c      	mov	r4, r1
 8021a40:	b913      	cbnz	r3, 8021a48 <_fflush_r+0x10>
 8021a42:	2500      	movs	r5, #0
 8021a44:	4628      	mov	r0, r5
 8021a46:	bd38      	pop	{r3, r4, r5, pc}
 8021a48:	b118      	cbz	r0, 8021a52 <_fflush_r+0x1a>
 8021a4a:	6a03      	ldr	r3, [r0, #32]
 8021a4c:	b90b      	cbnz	r3, 8021a52 <_fflush_r+0x1a>
 8021a4e:	f7ff fa9d 	bl	8020f8c <__sinit>
 8021a52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021a56:	2b00      	cmp	r3, #0
 8021a58:	d0f3      	beq.n	8021a42 <_fflush_r+0xa>
 8021a5a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8021a5c:	07d0      	lsls	r0, r2, #31
 8021a5e:	d404      	bmi.n	8021a6a <_fflush_r+0x32>
 8021a60:	0599      	lsls	r1, r3, #22
 8021a62:	d402      	bmi.n	8021a6a <_fflush_r+0x32>
 8021a64:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021a66:	f7ff fbea 	bl	802123e <__retarget_lock_acquire_recursive>
 8021a6a:	4628      	mov	r0, r5
 8021a6c:	4621      	mov	r1, r4
 8021a6e:	f7ff ff5f 	bl	8021930 <__sflush_r>
 8021a72:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8021a74:	07da      	lsls	r2, r3, #31
 8021a76:	4605      	mov	r5, r0
 8021a78:	d4e4      	bmi.n	8021a44 <_fflush_r+0xc>
 8021a7a:	89a3      	ldrh	r3, [r4, #12]
 8021a7c:	059b      	lsls	r3, r3, #22
 8021a7e:	d4e1      	bmi.n	8021a44 <_fflush_r+0xc>
 8021a80:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8021a82:	f7ff fbdd 	bl	8021240 <__retarget_lock_release_recursive>
 8021a86:	e7dd      	b.n	8021a44 <_fflush_r+0xc>

08021a88 <__swbuf_r>:
 8021a88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a8a:	460e      	mov	r6, r1
 8021a8c:	4614      	mov	r4, r2
 8021a8e:	4605      	mov	r5, r0
 8021a90:	b118      	cbz	r0, 8021a9a <__swbuf_r+0x12>
 8021a92:	6a03      	ldr	r3, [r0, #32]
 8021a94:	b90b      	cbnz	r3, 8021a9a <__swbuf_r+0x12>
 8021a96:	f7ff fa79 	bl	8020f8c <__sinit>
 8021a9a:	69a3      	ldr	r3, [r4, #24]
 8021a9c:	60a3      	str	r3, [r4, #8]
 8021a9e:	89a3      	ldrh	r3, [r4, #12]
 8021aa0:	071a      	lsls	r2, r3, #28
 8021aa2:	d501      	bpl.n	8021aa8 <__swbuf_r+0x20>
 8021aa4:	6923      	ldr	r3, [r4, #16]
 8021aa6:	b943      	cbnz	r3, 8021aba <__swbuf_r+0x32>
 8021aa8:	4621      	mov	r1, r4
 8021aaa:	4628      	mov	r0, r5
 8021aac:	f000 f82a 	bl	8021b04 <__swsetup_r>
 8021ab0:	b118      	cbz	r0, 8021aba <__swbuf_r+0x32>
 8021ab2:	f04f 37ff 	mov.w	r7, #4294967295
 8021ab6:	4638      	mov	r0, r7
 8021ab8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8021aba:	6823      	ldr	r3, [r4, #0]
 8021abc:	6922      	ldr	r2, [r4, #16]
 8021abe:	1a98      	subs	r0, r3, r2
 8021ac0:	6963      	ldr	r3, [r4, #20]
 8021ac2:	b2f6      	uxtb	r6, r6
 8021ac4:	4283      	cmp	r3, r0
 8021ac6:	4637      	mov	r7, r6
 8021ac8:	dc05      	bgt.n	8021ad6 <__swbuf_r+0x4e>
 8021aca:	4621      	mov	r1, r4
 8021acc:	4628      	mov	r0, r5
 8021ace:	f7ff ffb3 	bl	8021a38 <_fflush_r>
 8021ad2:	2800      	cmp	r0, #0
 8021ad4:	d1ed      	bne.n	8021ab2 <__swbuf_r+0x2a>
 8021ad6:	68a3      	ldr	r3, [r4, #8]
 8021ad8:	3b01      	subs	r3, #1
 8021ada:	60a3      	str	r3, [r4, #8]
 8021adc:	6823      	ldr	r3, [r4, #0]
 8021ade:	1c5a      	adds	r2, r3, #1
 8021ae0:	6022      	str	r2, [r4, #0]
 8021ae2:	701e      	strb	r6, [r3, #0]
 8021ae4:	6962      	ldr	r2, [r4, #20]
 8021ae6:	1c43      	adds	r3, r0, #1
 8021ae8:	429a      	cmp	r2, r3
 8021aea:	d004      	beq.n	8021af6 <__swbuf_r+0x6e>
 8021aec:	89a3      	ldrh	r3, [r4, #12]
 8021aee:	07db      	lsls	r3, r3, #31
 8021af0:	d5e1      	bpl.n	8021ab6 <__swbuf_r+0x2e>
 8021af2:	2e0a      	cmp	r6, #10
 8021af4:	d1df      	bne.n	8021ab6 <__swbuf_r+0x2e>
 8021af6:	4621      	mov	r1, r4
 8021af8:	4628      	mov	r0, r5
 8021afa:	f7ff ff9d 	bl	8021a38 <_fflush_r>
 8021afe:	2800      	cmp	r0, #0
 8021b00:	d0d9      	beq.n	8021ab6 <__swbuf_r+0x2e>
 8021b02:	e7d6      	b.n	8021ab2 <__swbuf_r+0x2a>

08021b04 <__swsetup_r>:
 8021b04:	b538      	push	{r3, r4, r5, lr}
 8021b06:	4b29      	ldr	r3, [pc, #164]	@ (8021bac <__swsetup_r+0xa8>)
 8021b08:	4605      	mov	r5, r0
 8021b0a:	6818      	ldr	r0, [r3, #0]
 8021b0c:	460c      	mov	r4, r1
 8021b0e:	b118      	cbz	r0, 8021b18 <__swsetup_r+0x14>
 8021b10:	6a03      	ldr	r3, [r0, #32]
 8021b12:	b90b      	cbnz	r3, 8021b18 <__swsetup_r+0x14>
 8021b14:	f7ff fa3a 	bl	8020f8c <__sinit>
 8021b18:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021b1c:	0719      	lsls	r1, r3, #28
 8021b1e:	d422      	bmi.n	8021b66 <__swsetup_r+0x62>
 8021b20:	06da      	lsls	r2, r3, #27
 8021b22:	d407      	bmi.n	8021b34 <__swsetup_r+0x30>
 8021b24:	2209      	movs	r2, #9
 8021b26:	602a      	str	r2, [r5, #0]
 8021b28:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8021b2c:	81a3      	strh	r3, [r4, #12]
 8021b2e:	f04f 30ff 	mov.w	r0, #4294967295
 8021b32:	e033      	b.n	8021b9c <__swsetup_r+0x98>
 8021b34:	0758      	lsls	r0, r3, #29
 8021b36:	d512      	bpl.n	8021b5e <__swsetup_r+0x5a>
 8021b38:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8021b3a:	b141      	cbz	r1, 8021b4e <__swsetup_r+0x4a>
 8021b3c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8021b40:	4299      	cmp	r1, r3
 8021b42:	d002      	beq.n	8021b4a <__swsetup_r+0x46>
 8021b44:	4628      	mov	r0, r5
 8021b46:	f7ff fbd9 	bl	80212fc <_free_r>
 8021b4a:	2300      	movs	r3, #0
 8021b4c:	6363      	str	r3, [r4, #52]	@ 0x34
 8021b4e:	89a3      	ldrh	r3, [r4, #12]
 8021b50:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8021b54:	81a3      	strh	r3, [r4, #12]
 8021b56:	2300      	movs	r3, #0
 8021b58:	6063      	str	r3, [r4, #4]
 8021b5a:	6923      	ldr	r3, [r4, #16]
 8021b5c:	6023      	str	r3, [r4, #0]
 8021b5e:	89a3      	ldrh	r3, [r4, #12]
 8021b60:	f043 0308 	orr.w	r3, r3, #8
 8021b64:	81a3      	strh	r3, [r4, #12]
 8021b66:	6923      	ldr	r3, [r4, #16]
 8021b68:	b94b      	cbnz	r3, 8021b7e <__swsetup_r+0x7a>
 8021b6a:	89a3      	ldrh	r3, [r4, #12]
 8021b6c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8021b70:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8021b74:	d003      	beq.n	8021b7e <__swsetup_r+0x7a>
 8021b76:	4621      	mov	r1, r4
 8021b78:	4628      	mov	r0, r5
 8021b7a:	f000 f83f 	bl	8021bfc <__smakebuf_r>
 8021b7e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021b82:	f013 0201 	ands.w	r2, r3, #1
 8021b86:	d00a      	beq.n	8021b9e <__swsetup_r+0x9a>
 8021b88:	2200      	movs	r2, #0
 8021b8a:	60a2      	str	r2, [r4, #8]
 8021b8c:	6962      	ldr	r2, [r4, #20]
 8021b8e:	4252      	negs	r2, r2
 8021b90:	61a2      	str	r2, [r4, #24]
 8021b92:	6922      	ldr	r2, [r4, #16]
 8021b94:	b942      	cbnz	r2, 8021ba8 <__swsetup_r+0xa4>
 8021b96:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8021b9a:	d1c5      	bne.n	8021b28 <__swsetup_r+0x24>
 8021b9c:	bd38      	pop	{r3, r4, r5, pc}
 8021b9e:	0799      	lsls	r1, r3, #30
 8021ba0:	bf58      	it	pl
 8021ba2:	6962      	ldrpl	r2, [r4, #20]
 8021ba4:	60a2      	str	r2, [r4, #8]
 8021ba6:	e7f4      	b.n	8021b92 <__swsetup_r+0x8e>
 8021ba8:	2000      	movs	r0, #0
 8021baa:	e7f7      	b.n	8021b9c <__swsetup_r+0x98>
 8021bac:	20000204 	.word	0x20000204

08021bb0 <__swhatbuf_r>:
 8021bb0:	b570      	push	{r4, r5, r6, lr}
 8021bb2:	460c      	mov	r4, r1
 8021bb4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021bb8:	2900      	cmp	r1, #0
 8021bba:	b096      	sub	sp, #88	@ 0x58
 8021bbc:	4615      	mov	r5, r2
 8021bbe:	461e      	mov	r6, r3
 8021bc0:	da0d      	bge.n	8021bde <__swhatbuf_r+0x2e>
 8021bc2:	89a3      	ldrh	r3, [r4, #12]
 8021bc4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8021bc8:	f04f 0100 	mov.w	r1, #0
 8021bcc:	bf14      	ite	ne
 8021bce:	2340      	movne	r3, #64	@ 0x40
 8021bd0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8021bd4:	2000      	movs	r0, #0
 8021bd6:	6031      	str	r1, [r6, #0]
 8021bd8:	602b      	str	r3, [r5, #0]
 8021bda:	b016      	add	sp, #88	@ 0x58
 8021bdc:	bd70      	pop	{r4, r5, r6, pc}
 8021bde:	466a      	mov	r2, sp
 8021be0:	f000 f848 	bl	8021c74 <_fstat_r>
 8021be4:	2800      	cmp	r0, #0
 8021be6:	dbec      	blt.n	8021bc2 <__swhatbuf_r+0x12>
 8021be8:	9901      	ldr	r1, [sp, #4]
 8021bea:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8021bee:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8021bf2:	4259      	negs	r1, r3
 8021bf4:	4159      	adcs	r1, r3
 8021bf6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8021bfa:	e7eb      	b.n	8021bd4 <__swhatbuf_r+0x24>

08021bfc <__smakebuf_r>:
 8021bfc:	898b      	ldrh	r3, [r1, #12]
 8021bfe:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8021c00:	079d      	lsls	r5, r3, #30
 8021c02:	4606      	mov	r6, r0
 8021c04:	460c      	mov	r4, r1
 8021c06:	d507      	bpl.n	8021c18 <__smakebuf_r+0x1c>
 8021c08:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8021c0c:	6023      	str	r3, [r4, #0]
 8021c0e:	6123      	str	r3, [r4, #16]
 8021c10:	2301      	movs	r3, #1
 8021c12:	6163      	str	r3, [r4, #20]
 8021c14:	b003      	add	sp, #12
 8021c16:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021c18:	ab01      	add	r3, sp, #4
 8021c1a:	466a      	mov	r2, sp
 8021c1c:	f7ff ffc8 	bl	8021bb0 <__swhatbuf_r>
 8021c20:	9f00      	ldr	r7, [sp, #0]
 8021c22:	4605      	mov	r5, r0
 8021c24:	4639      	mov	r1, r7
 8021c26:	4630      	mov	r0, r6
 8021c28:	f7ff f88a 	bl	8020d40 <_malloc_r>
 8021c2c:	b948      	cbnz	r0, 8021c42 <__smakebuf_r+0x46>
 8021c2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021c32:	059a      	lsls	r2, r3, #22
 8021c34:	d4ee      	bmi.n	8021c14 <__smakebuf_r+0x18>
 8021c36:	f023 0303 	bic.w	r3, r3, #3
 8021c3a:	f043 0302 	orr.w	r3, r3, #2
 8021c3e:	81a3      	strh	r3, [r4, #12]
 8021c40:	e7e2      	b.n	8021c08 <__smakebuf_r+0xc>
 8021c42:	89a3      	ldrh	r3, [r4, #12]
 8021c44:	6020      	str	r0, [r4, #0]
 8021c46:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8021c4a:	81a3      	strh	r3, [r4, #12]
 8021c4c:	9b01      	ldr	r3, [sp, #4]
 8021c4e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8021c52:	b15b      	cbz	r3, 8021c6c <__smakebuf_r+0x70>
 8021c54:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021c58:	4630      	mov	r0, r6
 8021c5a:	f000 f81d 	bl	8021c98 <_isatty_r>
 8021c5e:	b128      	cbz	r0, 8021c6c <__smakebuf_r+0x70>
 8021c60:	89a3      	ldrh	r3, [r4, #12]
 8021c62:	f023 0303 	bic.w	r3, r3, #3
 8021c66:	f043 0301 	orr.w	r3, r3, #1
 8021c6a:	81a3      	strh	r3, [r4, #12]
 8021c6c:	89a3      	ldrh	r3, [r4, #12]
 8021c6e:	431d      	orrs	r5, r3
 8021c70:	81a5      	strh	r5, [r4, #12]
 8021c72:	e7cf      	b.n	8021c14 <__smakebuf_r+0x18>

08021c74 <_fstat_r>:
 8021c74:	b538      	push	{r3, r4, r5, lr}
 8021c76:	4d07      	ldr	r5, [pc, #28]	@ (8021c94 <_fstat_r+0x20>)
 8021c78:	2300      	movs	r3, #0
 8021c7a:	4604      	mov	r4, r0
 8021c7c:	4608      	mov	r0, r1
 8021c7e:	4611      	mov	r1, r2
 8021c80:	602b      	str	r3, [r5, #0]
 8021c82:	f7df fd51 	bl	8001728 <_fstat>
 8021c86:	1c43      	adds	r3, r0, #1
 8021c88:	d102      	bne.n	8021c90 <_fstat_r+0x1c>
 8021c8a:	682b      	ldr	r3, [r5, #0]
 8021c8c:	b103      	cbz	r3, 8021c90 <_fstat_r+0x1c>
 8021c8e:	6023      	str	r3, [r4, #0]
 8021c90:	bd38      	pop	{r3, r4, r5, pc}
 8021c92:	bf00      	nop
 8021c94:	20002704 	.word	0x20002704

08021c98 <_isatty_r>:
 8021c98:	b538      	push	{r3, r4, r5, lr}
 8021c9a:	4d06      	ldr	r5, [pc, #24]	@ (8021cb4 <_isatty_r+0x1c>)
 8021c9c:	2300      	movs	r3, #0
 8021c9e:	4604      	mov	r4, r0
 8021ca0:	4608      	mov	r0, r1
 8021ca2:	602b      	str	r3, [r5, #0]
 8021ca4:	f7df fd50 	bl	8001748 <_isatty>
 8021ca8:	1c43      	adds	r3, r0, #1
 8021caa:	d102      	bne.n	8021cb2 <_isatty_r+0x1a>
 8021cac:	682b      	ldr	r3, [r5, #0]
 8021cae:	b103      	cbz	r3, 8021cb2 <_isatty_r+0x1a>
 8021cb0:	6023      	str	r3, [r4, #0]
 8021cb2:	bd38      	pop	{r3, r4, r5, pc}
 8021cb4:	20002704 	.word	0x20002704

08021cb8 <_init>:
 8021cb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021cba:	bf00      	nop
 8021cbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021cbe:	bc08      	pop	{r3}
 8021cc0:	469e      	mov	lr, r3
 8021cc2:	4770      	bx	lr

08021cc4 <_fini>:
 8021cc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021cc6:	bf00      	nop
 8021cc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021cca:	bc08      	pop	{r3}
 8021ccc:	469e      	mov	lr, r3
 8021cce:	4770      	bx	lr

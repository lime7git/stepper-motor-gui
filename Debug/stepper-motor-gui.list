
stepper-motor-gui.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002895c  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002678  08028b2c  08028b2c  00029b2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001a6  0802b1a4  0802b1a4  0002c1a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000018  0802b34c  0802b34c  0002c34c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000010  0802b364  0802b364  0002c364  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  0802b374  0802b374  0007df48  2**0
                  CONTENTS
  7 .ARM          00000008  0802b374  0802b374  0002c374  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  0802b37c  0802b37c  0007df48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  0802b37c  0802b37c  0002c37c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .fini_array   00000008  0802b390  0802b390  0002c390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .data         00000280  20000000  0802b398  0002d000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_ScratchbufferA 00000100  20000280  0802b618  0002d280  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferB 00000100  20000380  0802b718  0002d380  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 .bss          00004244  20000480  0802b818  0007e480  2**2
                  ALLOC
 15 ._user_heap_stack 00001404  200046c4  0802b818  0007e6c4  2**0
                  ALLOC
 16 .ARM.attributes 00000030  00000000  00000000  0007df48  2**0
                  CONTENTS, READONLY
 17 BufferSection 0007f800  c0000000  c0000000  0007e000  2**2
                  ALLOC
 18 ExtFlashSection 00050730  0802b818  0802b818  0002d818  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 .debug_info   000a9fcc  00000000  00000000  0007df78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_abbrev 000123b9  00000000  00000000  00127f44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_aranges 00003d80  00000000  00000000  0013a300  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_rnglists 00002dd1  00000000  00000000  0013e080  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  00034a6f  00000000  00000000  00140e51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line   00047d9e  00000000  00000000  001758c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_str    00128334  00000000  00000000  001bd65e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .comment      000000c2  00000000  00000000  002e5992  2**0
                  CONTENTS, READONLY
 27 .debug_frame  00010be0  00000000  00000000  002e5a54  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_line_str 0000006a  00000000  00000000  002f6634  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000480 	.word	0x20000480
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08028b14 	.word	0x08028b14

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000484 	.word	0x20000484
 800020c:	08028b14 	.word	0x08028b14

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_uldivmod>:
 80002b0:	b953      	cbnz	r3, 80002c8 <__aeabi_uldivmod+0x18>
 80002b2:	b94a      	cbnz	r2, 80002c8 <__aeabi_uldivmod+0x18>
 80002b4:	2900      	cmp	r1, #0
 80002b6:	bf08      	it	eq
 80002b8:	2800      	cmpeq	r0, #0
 80002ba:	bf1c      	itt	ne
 80002bc:	f04f 31ff 	movne.w	r1, #4294967295
 80002c0:	f04f 30ff 	movne.w	r0, #4294967295
 80002c4:	f000 b96a 	b.w	800059c <__aeabi_idiv0>
 80002c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002d0:	f000 f806 	bl	80002e0 <__udivmoddi4>
 80002d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002dc:	b004      	add	sp, #16
 80002de:	4770      	bx	lr

080002e0 <__udivmoddi4>:
 80002e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002e4:	9d08      	ldr	r5, [sp, #32]
 80002e6:	460c      	mov	r4, r1
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d14e      	bne.n	800038a <__udivmoddi4+0xaa>
 80002ec:	4694      	mov	ip, r2
 80002ee:	458c      	cmp	ip, r1
 80002f0:	4686      	mov	lr, r0
 80002f2:	fab2 f282 	clz	r2, r2
 80002f6:	d962      	bls.n	80003be <__udivmoddi4+0xde>
 80002f8:	b14a      	cbz	r2, 800030e <__udivmoddi4+0x2e>
 80002fa:	f1c2 0320 	rsb	r3, r2, #32
 80002fe:	4091      	lsls	r1, r2
 8000300:	fa20 f303 	lsr.w	r3, r0, r3
 8000304:	fa0c fc02 	lsl.w	ip, ip, r2
 8000308:	4319      	orrs	r1, r3
 800030a:	fa00 fe02 	lsl.w	lr, r0, r2
 800030e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000312:	fa1f f68c 	uxth.w	r6, ip
 8000316:	fbb1 f4f7 	udiv	r4, r1, r7
 800031a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800031e:	fb07 1114 	mls	r1, r7, r4, r1
 8000322:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000326:	fb04 f106 	mul.w	r1, r4, r6
 800032a:	4299      	cmp	r1, r3
 800032c:	d90a      	bls.n	8000344 <__udivmoddi4+0x64>
 800032e:	eb1c 0303 	adds.w	r3, ip, r3
 8000332:	f104 30ff 	add.w	r0, r4, #4294967295
 8000336:	f080 8112 	bcs.w	800055e <__udivmoddi4+0x27e>
 800033a:	4299      	cmp	r1, r3
 800033c:	f240 810f 	bls.w	800055e <__udivmoddi4+0x27e>
 8000340:	3c02      	subs	r4, #2
 8000342:	4463      	add	r3, ip
 8000344:	1a59      	subs	r1, r3, r1
 8000346:	fa1f f38e 	uxth.w	r3, lr
 800034a:	fbb1 f0f7 	udiv	r0, r1, r7
 800034e:	fb07 1110 	mls	r1, r7, r0, r1
 8000352:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000356:	fb00 f606 	mul.w	r6, r0, r6
 800035a:	429e      	cmp	r6, r3
 800035c:	d90a      	bls.n	8000374 <__udivmoddi4+0x94>
 800035e:	eb1c 0303 	adds.w	r3, ip, r3
 8000362:	f100 31ff 	add.w	r1, r0, #4294967295
 8000366:	f080 80fc 	bcs.w	8000562 <__udivmoddi4+0x282>
 800036a:	429e      	cmp	r6, r3
 800036c:	f240 80f9 	bls.w	8000562 <__udivmoddi4+0x282>
 8000370:	4463      	add	r3, ip
 8000372:	3802      	subs	r0, #2
 8000374:	1b9b      	subs	r3, r3, r6
 8000376:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800037a:	2100      	movs	r1, #0
 800037c:	b11d      	cbz	r5, 8000386 <__udivmoddi4+0xa6>
 800037e:	40d3      	lsrs	r3, r2
 8000380:	2200      	movs	r2, #0
 8000382:	e9c5 3200 	strd	r3, r2, [r5]
 8000386:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800038a:	428b      	cmp	r3, r1
 800038c:	d905      	bls.n	800039a <__udivmoddi4+0xba>
 800038e:	b10d      	cbz	r5, 8000394 <__udivmoddi4+0xb4>
 8000390:	e9c5 0100 	strd	r0, r1, [r5]
 8000394:	2100      	movs	r1, #0
 8000396:	4608      	mov	r0, r1
 8000398:	e7f5      	b.n	8000386 <__udivmoddi4+0xa6>
 800039a:	fab3 f183 	clz	r1, r3
 800039e:	2900      	cmp	r1, #0
 80003a0:	d146      	bne.n	8000430 <__udivmoddi4+0x150>
 80003a2:	42a3      	cmp	r3, r4
 80003a4:	d302      	bcc.n	80003ac <__udivmoddi4+0xcc>
 80003a6:	4290      	cmp	r0, r2
 80003a8:	f0c0 80f0 	bcc.w	800058c <__udivmoddi4+0x2ac>
 80003ac:	1a86      	subs	r6, r0, r2
 80003ae:	eb64 0303 	sbc.w	r3, r4, r3
 80003b2:	2001      	movs	r0, #1
 80003b4:	2d00      	cmp	r5, #0
 80003b6:	d0e6      	beq.n	8000386 <__udivmoddi4+0xa6>
 80003b8:	e9c5 6300 	strd	r6, r3, [r5]
 80003bc:	e7e3      	b.n	8000386 <__udivmoddi4+0xa6>
 80003be:	2a00      	cmp	r2, #0
 80003c0:	f040 8090 	bne.w	80004e4 <__udivmoddi4+0x204>
 80003c4:	eba1 040c 	sub.w	r4, r1, ip
 80003c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80003cc:	fa1f f78c 	uxth.w	r7, ip
 80003d0:	2101      	movs	r1, #1
 80003d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80003d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80003da:	fb08 4416 	mls	r4, r8, r6, r4
 80003de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003e2:	fb07 f006 	mul.w	r0, r7, r6
 80003e6:	4298      	cmp	r0, r3
 80003e8:	d908      	bls.n	80003fc <__udivmoddi4+0x11c>
 80003ea:	eb1c 0303 	adds.w	r3, ip, r3
 80003ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80003f2:	d202      	bcs.n	80003fa <__udivmoddi4+0x11a>
 80003f4:	4298      	cmp	r0, r3
 80003f6:	f200 80cd 	bhi.w	8000594 <__udivmoddi4+0x2b4>
 80003fa:	4626      	mov	r6, r4
 80003fc:	1a1c      	subs	r4, r3, r0
 80003fe:	fa1f f38e 	uxth.w	r3, lr
 8000402:	fbb4 f0f8 	udiv	r0, r4, r8
 8000406:	fb08 4410 	mls	r4, r8, r0, r4
 800040a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800040e:	fb00 f707 	mul.w	r7, r0, r7
 8000412:	429f      	cmp	r7, r3
 8000414:	d908      	bls.n	8000428 <__udivmoddi4+0x148>
 8000416:	eb1c 0303 	adds.w	r3, ip, r3
 800041a:	f100 34ff 	add.w	r4, r0, #4294967295
 800041e:	d202      	bcs.n	8000426 <__udivmoddi4+0x146>
 8000420:	429f      	cmp	r7, r3
 8000422:	f200 80b0 	bhi.w	8000586 <__udivmoddi4+0x2a6>
 8000426:	4620      	mov	r0, r4
 8000428:	1bdb      	subs	r3, r3, r7
 800042a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800042e:	e7a5      	b.n	800037c <__udivmoddi4+0x9c>
 8000430:	f1c1 0620 	rsb	r6, r1, #32
 8000434:	408b      	lsls	r3, r1
 8000436:	fa22 f706 	lsr.w	r7, r2, r6
 800043a:	431f      	orrs	r7, r3
 800043c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000440:	fa04 f301 	lsl.w	r3, r4, r1
 8000444:	ea43 030c 	orr.w	r3, r3, ip
 8000448:	40f4      	lsrs	r4, r6
 800044a:	fa00 f801 	lsl.w	r8, r0, r1
 800044e:	0c38      	lsrs	r0, r7, #16
 8000450:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000454:	fbb4 fef0 	udiv	lr, r4, r0
 8000458:	fa1f fc87 	uxth.w	ip, r7
 800045c:	fb00 441e 	mls	r4, r0, lr, r4
 8000460:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000464:	fb0e f90c 	mul.w	r9, lr, ip
 8000468:	45a1      	cmp	r9, r4
 800046a:	fa02 f201 	lsl.w	r2, r2, r1
 800046e:	d90a      	bls.n	8000486 <__udivmoddi4+0x1a6>
 8000470:	193c      	adds	r4, r7, r4
 8000472:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000476:	f080 8084 	bcs.w	8000582 <__udivmoddi4+0x2a2>
 800047a:	45a1      	cmp	r9, r4
 800047c:	f240 8081 	bls.w	8000582 <__udivmoddi4+0x2a2>
 8000480:	f1ae 0e02 	sub.w	lr, lr, #2
 8000484:	443c      	add	r4, r7
 8000486:	eba4 0409 	sub.w	r4, r4, r9
 800048a:	fa1f f983 	uxth.w	r9, r3
 800048e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000492:	fb00 4413 	mls	r4, r0, r3, r4
 8000496:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800049a:	fb03 fc0c 	mul.w	ip, r3, ip
 800049e:	45a4      	cmp	ip, r4
 80004a0:	d907      	bls.n	80004b2 <__udivmoddi4+0x1d2>
 80004a2:	193c      	adds	r4, r7, r4
 80004a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80004a8:	d267      	bcs.n	800057a <__udivmoddi4+0x29a>
 80004aa:	45a4      	cmp	ip, r4
 80004ac:	d965      	bls.n	800057a <__udivmoddi4+0x29a>
 80004ae:	3b02      	subs	r3, #2
 80004b0:	443c      	add	r4, r7
 80004b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80004b6:	fba0 9302 	umull	r9, r3, r0, r2
 80004ba:	eba4 040c 	sub.w	r4, r4, ip
 80004be:	429c      	cmp	r4, r3
 80004c0:	46ce      	mov	lr, r9
 80004c2:	469c      	mov	ip, r3
 80004c4:	d351      	bcc.n	800056a <__udivmoddi4+0x28a>
 80004c6:	d04e      	beq.n	8000566 <__udivmoddi4+0x286>
 80004c8:	b155      	cbz	r5, 80004e0 <__udivmoddi4+0x200>
 80004ca:	ebb8 030e 	subs.w	r3, r8, lr
 80004ce:	eb64 040c 	sbc.w	r4, r4, ip
 80004d2:	fa04 f606 	lsl.w	r6, r4, r6
 80004d6:	40cb      	lsrs	r3, r1
 80004d8:	431e      	orrs	r6, r3
 80004da:	40cc      	lsrs	r4, r1
 80004dc:	e9c5 6400 	strd	r6, r4, [r5]
 80004e0:	2100      	movs	r1, #0
 80004e2:	e750      	b.n	8000386 <__udivmoddi4+0xa6>
 80004e4:	f1c2 0320 	rsb	r3, r2, #32
 80004e8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80004f0:	fa24 f303 	lsr.w	r3, r4, r3
 80004f4:	4094      	lsls	r4, r2
 80004f6:	430c      	orrs	r4, r1
 80004f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000500:	fa1f f78c 	uxth.w	r7, ip
 8000504:	fbb3 f0f8 	udiv	r0, r3, r8
 8000508:	fb08 3110 	mls	r1, r8, r0, r3
 800050c:	0c23      	lsrs	r3, r4, #16
 800050e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000512:	fb00 f107 	mul.w	r1, r0, r7
 8000516:	4299      	cmp	r1, r3
 8000518:	d908      	bls.n	800052c <__udivmoddi4+0x24c>
 800051a:	eb1c 0303 	adds.w	r3, ip, r3
 800051e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000522:	d22c      	bcs.n	800057e <__udivmoddi4+0x29e>
 8000524:	4299      	cmp	r1, r3
 8000526:	d92a      	bls.n	800057e <__udivmoddi4+0x29e>
 8000528:	3802      	subs	r0, #2
 800052a:	4463      	add	r3, ip
 800052c:	1a5b      	subs	r3, r3, r1
 800052e:	b2a4      	uxth	r4, r4
 8000530:	fbb3 f1f8 	udiv	r1, r3, r8
 8000534:	fb08 3311 	mls	r3, r8, r1, r3
 8000538:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800053c:	fb01 f307 	mul.w	r3, r1, r7
 8000540:	42a3      	cmp	r3, r4
 8000542:	d908      	bls.n	8000556 <__udivmoddi4+0x276>
 8000544:	eb1c 0404 	adds.w	r4, ip, r4
 8000548:	f101 36ff 	add.w	r6, r1, #4294967295
 800054c:	d213      	bcs.n	8000576 <__udivmoddi4+0x296>
 800054e:	42a3      	cmp	r3, r4
 8000550:	d911      	bls.n	8000576 <__udivmoddi4+0x296>
 8000552:	3902      	subs	r1, #2
 8000554:	4464      	add	r4, ip
 8000556:	1ae4      	subs	r4, r4, r3
 8000558:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800055c:	e739      	b.n	80003d2 <__udivmoddi4+0xf2>
 800055e:	4604      	mov	r4, r0
 8000560:	e6f0      	b.n	8000344 <__udivmoddi4+0x64>
 8000562:	4608      	mov	r0, r1
 8000564:	e706      	b.n	8000374 <__udivmoddi4+0x94>
 8000566:	45c8      	cmp	r8, r9
 8000568:	d2ae      	bcs.n	80004c8 <__udivmoddi4+0x1e8>
 800056a:	ebb9 0e02 	subs.w	lr, r9, r2
 800056e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000572:	3801      	subs	r0, #1
 8000574:	e7a8      	b.n	80004c8 <__udivmoddi4+0x1e8>
 8000576:	4631      	mov	r1, r6
 8000578:	e7ed      	b.n	8000556 <__udivmoddi4+0x276>
 800057a:	4603      	mov	r3, r0
 800057c:	e799      	b.n	80004b2 <__udivmoddi4+0x1d2>
 800057e:	4630      	mov	r0, r6
 8000580:	e7d4      	b.n	800052c <__udivmoddi4+0x24c>
 8000582:	46d6      	mov	lr, sl
 8000584:	e77f      	b.n	8000486 <__udivmoddi4+0x1a6>
 8000586:	4463      	add	r3, ip
 8000588:	3802      	subs	r0, #2
 800058a:	e74d      	b.n	8000428 <__udivmoddi4+0x148>
 800058c:	4606      	mov	r6, r0
 800058e:	4623      	mov	r3, r4
 8000590:	4608      	mov	r0, r1
 8000592:	e70f      	b.n	80003b4 <__udivmoddi4+0xd4>
 8000594:	3e02      	subs	r6, #2
 8000596:	4463      	add	r3, ip
 8000598:	e730      	b.n	80003fc <__udivmoddi4+0x11c>
 800059a:	bf00      	nop

0800059c <__aeabi_idiv0>:
 800059c:	4770      	bx	lr
 800059e:	bf00      	nop

080005a0 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 80005a0:	b580      	push	{r7, lr}
 80005a2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80005a4:	4b0d      	ldr	r3, [pc, #52]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005a6:	4a0e      	ldr	r2, [pc, #56]	@ (80005e0 <MX_CRC_Init+0x40>)
 80005a8:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80005aa:	4b0c      	ldr	r3, [pc, #48]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005ac:	2200      	movs	r2, #0
 80005ae:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 80005b0:	4b0a      	ldr	r3, [pc, #40]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005b2:	2200      	movs	r2, #0
 80005b4:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80005b6:	4b09      	ldr	r3, [pc, #36]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005b8:	2200      	movs	r2, #0
 80005ba:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80005bc:	4b07      	ldr	r3, [pc, #28]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005be:	2200      	movs	r2, #0
 80005c0:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80005c2:	4b06      	ldr	r3, [pc, #24]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005c4:	2201      	movs	r2, #1
 80005c6:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80005c8:	4804      	ldr	r0, [pc, #16]	@ (80005dc <MX_CRC_Init+0x3c>)
 80005ca:	f004 fc6b 	bl	8004ea4 <HAL_CRC_Init>
 80005ce:	4603      	mov	r3, r0
 80005d0:	2b00      	cmp	r3, #0
 80005d2:	d001      	beq.n	80005d8 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80005d4:	f000 fe93 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80005d8:	bf00      	nop
 80005da:	bd80      	pop	{r7, pc}
 80005dc:	2000049c 	.word	0x2000049c
 80005e0:	40023000 	.word	0x40023000

080005e4 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80005e4:	b480      	push	{r7}
 80005e6:	b085      	sub	sp, #20
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	681b      	ldr	r3, [r3, #0]
 80005f0:	4a0a      	ldr	r2, [pc, #40]	@ (800061c <HAL_CRC_MspInit+0x38>)
 80005f2:	4293      	cmp	r3, r2
 80005f4:	d10b      	bne.n	800060e <HAL_CRC_MspInit+0x2a>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80005f6:	4b0a      	ldr	r3, [pc, #40]	@ (8000620 <HAL_CRC_MspInit+0x3c>)
 80005f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80005fa:	4a09      	ldr	r2, [pc, #36]	@ (8000620 <HAL_CRC_MspInit+0x3c>)
 80005fc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8000600:	6313      	str	r3, [r2, #48]	@ 0x30
 8000602:	4b07      	ldr	r3, [pc, #28]	@ (8000620 <HAL_CRC_MspInit+0x3c>)
 8000604:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000606:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800060a:	60fb      	str	r3, [r7, #12]
 800060c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 800060e:	bf00      	nop
 8000610:	3714      	adds	r7, #20
 8000612:	46bd      	mov	sp, r7
 8000614:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000618:	4770      	bx	lr
 800061a:	bf00      	nop
 800061c:	40023000 	.word	0x40023000
 8000620:	40023800 	.word	0x40023800

08000624 <MX_DMA2D_Init>:

DMA2D_HandleTypeDef hdma2d;

/* DMA2D init function */
void MX_DMA2D_Init(void)
{
 8000624:	b580      	push	{r7, lr}
 8000626:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 8000628:	4b15      	ldr	r3, [pc, #84]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800062a:	4a16      	ldr	r2, [pc, #88]	@ (8000684 <MX_DMA2D_Init+0x60>)
 800062c:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 800062e:	4b14      	ldr	r3, [pc, #80]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000630:	2200      	movs	r2, #0
 8000632:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 8000634:	4b12      	ldr	r3, [pc, #72]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000636:	2200      	movs	r2, #0
 8000638:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 800063a:	4b11      	ldr	r3, [pc, #68]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800063c:	2200      	movs	r2, #0
 800063e:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8000640:	4b0f      	ldr	r3, [pc, #60]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000642:	2200      	movs	r2, #0
 8000644:	629a      	str	r2, [r3, #40]	@ 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8000646:	4b0e      	ldr	r3, [pc, #56]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000648:	2200      	movs	r2, #0
 800064a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 800064c:	4b0c      	ldr	r3, [pc, #48]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800064e:	2200      	movs	r2, #0
 8000650:	631a      	str	r2, [r3, #48]	@ 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000652:	4b0b      	ldr	r3, [pc, #44]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 8000654:	2200      	movs	r2, #0
 8000656:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000658:	4809      	ldr	r0, [pc, #36]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800065a:	f004 fd15 	bl	8005088 <HAL_DMA2D_Init>
 800065e:	4603      	mov	r3, r0
 8000660:	2b00      	cmp	r3, #0
 8000662:	d001      	beq.n	8000668 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 8000664:	f000 fe4b 	bl	80012fe <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000668:	2101      	movs	r1, #1
 800066a:	4805      	ldr	r0, [pc, #20]	@ (8000680 <MX_DMA2D_Init+0x5c>)
 800066c:	f004 fe66 	bl	800533c <HAL_DMA2D_ConfigLayer>
 8000670:	4603      	mov	r3, r0
 8000672:	2b00      	cmp	r3, #0
 8000674:	d001      	beq.n	800067a <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 8000676:	f000 fe42 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 800067a:	bf00      	nop
 800067c:	bd80      	pop	{r7, pc}
 800067e:	bf00      	nop
 8000680:	200004c0 	.word	0x200004c0
 8000684:	4002b000 	.word	0x4002b000

08000688 <HAL_DMA2D_MspInit>:

void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 8000688:	b580      	push	{r7, lr}
 800068a:	b084      	sub	sp, #16
 800068c:	af00      	add	r7, sp, #0
 800068e:	6078      	str	r0, [r7, #4]

  if(dma2dHandle->Instance==DMA2D)
 8000690:	687b      	ldr	r3, [r7, #4]
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	4a0d      	ldr	r2, [pc, #52]	@ (80006cc <HAL_DMA2D_MspInit+0x44>)
 8000696:	4293      	cmp	r3, r2
 8000698:	d113      	bne.n	80006c2 <HAL_DMA2D_MspInit+0x3a>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* DMA2D clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800069a:	4b0d      	ldr	r3, [pc, #52]	@ (80006d0 <HAL_DMA2D_MspInit+0x48>)
 800069c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800069e:	4a0c      	ldr	r2, [pc, #48]	@ (80006d0 <HAL_DMA2D_MspInit+0x48>)
 80006a0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80006a4:	6313      	str	r3, [r2, #48]	@ 0x30
 80006a6:	4b0a      	ldr	r3, [pc, #40]	@ (80006d0 <HAL_DMA2D_MspInit+0x48>)
 80006a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80006aa:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80006ae:	60fb      	str	r3, [r7, #12]
 80006b0:	68fb      	ldr	r3, [r7, #12]

    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 80006b2:	2200      	movs	r2, #0
 80006b4:	2100      	movs	r1, #0
 80006b6:	205a      	movs	r0, #90	@ 0x5a
 80006b8:	f004 fb45 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80006bc:	205a      	movs	r0, #90	@ 0x5a
 80006be:	f004 fb5e 	bl	8004d7e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }
}
 80006c2:	bf00      	nop
 80006c4:	3710      	adds	r7, #16
 80006c6:	46bd      	mov	sp, r7
 80006c8:	bd80      	pop	{r7, pc}
 80006ca:	bf00      	nop
 80006cc:	4002b000 	.word	0x4002b000
 80006d0:	40023800 	.word	0x40023800

080006d4 <MX_FMC_Init>:

SDRAM_HandleTypeDef hsdram1;

/* FMC initialization function */
void MX_FMC_Init(void)
{
 80006d4:	b580      	push	{r7, lr}
 80006d6:	b088      	sub	sp, #32
 80006d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 80006da:	1d3b      	adds	r3, r7, #4
 80006dc:	2200      	movs	r2, #0
 80006de:	601a      	str	r2, [r3, #0]
 80006e0:	605a      	str	r2, [r3, #4]
 80006e2:	609a      	str	r2, [r3, #8]
 80006e4:	60da      	str	r2, [r3, #12]
 80006e6:	611a      	str	r2, [r3, #16]
 80006e8:	615a      	str	r2, [r3, #20]
 80006ea:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80006ec:	4b4c      	ldr	r3, [pc, #304]	@ (8000820 <MX_FMC_Init+0x14c>)
 80006ee:	4a4d      	ldr	r2, [pc, #308]	@ (8000824 <MX_FMC_Init+0x150>)
 80006f0:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80006f2:	4b4b      	ldr	r3, [pc, #300]	@ (8000820 <MX_FMC_Init+0x14c>)
 80006f4:	2200      	movs	r2, #0
 80006f6:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80006f8:	4b49      	ldr	r3, [pc, #292]	@ (8000820 <MX_FMC_Init+0x14c>)
 80006fa:	2200      	movs	r2, #0
 80006fc:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80006fe:	4b48      	ldr	r3, [pc, #288]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000700:	2204      	movs	r2, #4
 8000702:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000704:	4b46      	ldr	r3, [pc, #280]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000706:	2210      	movs	r2, #16
 8000708:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800070a:	4b45      	ldr	r3, [pc, #276]	@ (8000820 <MX_FMC_Init+0x14c>)
 800070c:	2240      	movs	r2, #64	@ 0x40
 800070e:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000710:	4b43      	ldr	r3, [pc, #268]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000712:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 8000716:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000718:	4b41      	ldr	r3, [pc, #260]	@ (8000820 <MX_FMC_Init+0x14c>)
 800071a:	2200      	movs	r2, #0
 800071c:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800071e:	4b40      	ldr	r3, [pc, #256]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000720:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8000724:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000726:	4b3e      	ldr	r3, [pc, #248]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000728:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 800072c:	625a      	str	r2, [r3, #36]	@ 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 800072e:	4b3c      	ldr	r3, [pc, #240]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000730:	2200      	movs	r2, #0
 8000732:	629a      	str	r2, [r3, #40]	@ 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000734:	2302      	movs	r3, #2
 8000736:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000738:	2307      	movs	r3, #7
 800073a:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 800073c:	2304      	movs	r3, #4
 800073e:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 7;
 8000740:	2307      	movs	r3, #7
 8000742:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 3;
 8000744:	2303      	movs	r3, #3
 8000746:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000748:	2302      	movs	r3, #2
 800074a:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 800074c:	2302      	movs	r3, #2
 800074e:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000750:	1d3b      	adds	r3, r7, #4
 8000752:	4619      	mov	r1, r3
 8000754:	4832      	ldr	r0, [pc, #200]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000756:	f007 fd17 	bl	8008188 <HAL_SDRAM_Init>
 800075a:	4603      	mov	r3, r0
 800075c:	2b00      	cmp	r3, #0
 800075e:	d001      	beq.n	8000764 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8000760:	f000 fdcd 	bl	80012fe <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */
  __IO uint32_t tmpmrd = 0;
 8000764:	2300      	movs	r3, #0
 8000766:	603b      	str	r3, [r7, #0]

      /* Step 1: Configure a clock configuration enable command */
      Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8000768:	4b2f      	ldr	r3, [pc, #188]	@ (8000828 <MX_FMC_Init+0x154>)
 800076a:	2201      	movs	r2, #1
 800076c:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          =  FMC_SDRAM_CMD_TARGET_BANK1;
 800076e:	4b2e      	ldr	r3, [pc, #184]	@ (8000828 <MX_FMC_Init+0x154>)
 8000770:	2210      	movs	r2, #16
 8000772:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 1;
 8000774:	4b2c      	ldr	r3, [pc, #176]	@ (8000828 <MX_FMC_Init+0x154>)
 8000776:	2201      	movs	r2, #1
 8000778:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = 0;
 800077a:	4b2b      	ldr	r3, [pc, #172]	@ (8000828 <MX_FMC_Init+0x154>)
 800077c:	2200      	movs	r2, #0
 800077e:	60da      	str	r2, [r3, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 8000780:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8000784:	4928      	ldr	r1, [pc, #160]	@ (8000828 <MX_FMC_Init+0x154>)
 8000786:	4826      	ldr	r0, [pc, #152]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000788:	f007 fd32 	bl	80081f0 <HAL_SDRAM_SendCommand>

      /* Step 2: Insert 100 us minimum delay */
      /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
      HAL_Delay(1);
 800078c:	2001      	movs	r0, #1
 800078e:	f004 f9db 	bl	8004b48 <HAL_Delay>

      /* Step 3: Configure a PALL (precharge all) command */
      Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8000792:	4b25      	ldr	r3, [pc, #148]	@ (8000828 <MX_FMC_Init+0x154>)
 8000794:	2202      	movs	r2, #2
 8000796:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8000798:	4b23      	ldr	r3, [pc, #140]	@ (8000828 <MX_FMC_Init+0x154>)
 800079a:	2210      	movs	r2, #16
 800079c:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 1;
 800079e:	4b22      	ldr	r3, [pc, #136]	@ (8000828 <MX_FMC_Init+0x154>)
 80007a0:	2201      	movs	r2, #1
 80007a2:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = 0;
 80007a4:	4b20      	ldr	r3, [pc, #128]	@ (8000828 <MX_FMC_Init+0x154>)
 80007a6:	2200      	movs	r2, #0
 80007a8:	60da      	str	r2, [r3, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80007aa:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80007ae:	491e      	ldr	r1, [pc, #120]	@ (8000828 <MX_FMC_Init+0x154>)
 80007b0:	481b      	ldr	r0, [pc, #108]	@ (8000820 <MX_FMC_Init+0x14c>)
 80007b2:	f007 fd1d 	bl	80081f0 <HAL_SDRAM_SendCommand>

      /* Step 4: Configure an Auto Refresh command */
      Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80007b6:	4b1c      	ldr	r3, [pc, #112]	@ (8000828 <MX_FMC_Init+0x154>)
 80007b8:	2203      	movs	r2, #3
 80007ba:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80007bc:	4b1a      	ldr	r3, [pc, #104]	@ (8000828 <MX_FMC_Init+0x154>)
 80007be:	2210      	movs	r2, #16
 80007c0:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 8;
 80007c2:	4b19      	ldr	r3, [pc, #100]	@ (8000828 <MX_FMC_Init+0x154>)
 80007c4:	2208      	movs	r2, #8
 80007c6:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = 0;
 80007c8:	4b17      	ldr	r3, [pc, #92]	@ (8000828 <MX_FMC_Init+0x154>)
 80007ca:	2200      	movs	r2, #0
 80007cc:	60da      	str	r2, [r3, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80007ce:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80007d2:	4915      	ldr	r1, [pc, #84]	@ (8000828 <MX_FMC_Init+0x154>)
 80007d4:	4812      	ldr	r0, [pc, #72]	@ (8000820 <MX_FMC_Init+0x14c>)
 80007d6:	f007 fd0b 	bl	80081f0 <HAL_SDRAM_SendCommand>

      /* Step 5: Program the external memory mode register */
      tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1 | \
 80007da:	f44f 730c 	mov.w	r3, #560	@ 0x230
 80007de:	603b      	str	r3, [r7, #0]
               SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL    | \
               SDRAM_MODEREG_CAS_LATENCY_3            | \
               SDRAM_MODEREG_OPERATING_MODE_STANDARD  | \
               SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

      Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 80007e0:	4b11      	ldr	r3, [pc, #68]	@ (8000828 <MX_FMC_Init+0x154>)
 80007e2:	2204      	movs	r2, #4
 80007e4:	601a      	str	r2, [r3, #0]
      Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80007e6:	4b10      	ldr	r3, [pc, #64]	@ (8000828 <MX_FMC_Init+0x154>)
 80007e8:	2210      	movs	r2, #16
 80007ea:	605a      	str	r2, [r3, #4]
      Command.AutoRefreshNumber      = 1;
 80007ec:	4b0e      	ldr	r3, [pc, #56]	@ (8000828 <MX_FMC_Init+0x154>)
 80007ee:	2201      	movs	r2, #1
 80007f0:	609a      	str	r2, [r3, #8]
      Command.ModeRegisterDefinition = tmpmrd;
 80007f2:	683b      	ldr	r3, [r7, #0]
 80007f4:	4a0c      	ldr	r2, [pc, #48]	@ (8000828 <MX_FMC_Init+0x154>)
 80007f6:	60d3      	str	r3, [r2, #12]

      /* Send the command */
      HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT);
 80007f8:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80007fc:	490a      	ldr	r1, [pc, #40]	@ (8000828 <MX_FMC_Init+0x154>)
 80007fe:	4808      	ldr	r0, [pc, #32]	@ (8000820 <MX_FMC_Init+0x14c>)
 8000800:	f007 fcf6 	bl	80081f0 <HAL_SDRAM_SendCommand>

      /* Step 6: Set the refresh rate counter */
      /* Set the device refresh rate */
      HAL_SDRAM_ProgramRefreshRate(&hsdram1, REFRESH_COUNT);
 8000804:	f240 712b 	movw	r1, #1835	@ 0x72b
 8000808:	4805      	ldr	r0, [pc, #20]	@ (8000820 <MX_FMC_Init+0x14c>)
 800080a:	f007 fd26 	bl	800825a <HAL_SDRAM_ProgramRefreshRate>

      //Deactivate speculative/cache access to first FMC Bank to save FMC bandwidth
      FMC_Bank1->BTCR[0] = 0x000030D2;
 800080e:	f04f 4320 	mov.w	r3, #2684354560	@ 0xa0000000
 8000812:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8000816:	601a      	str	r2, [r3, #0]
  /* USER CODE END FMC_Init 2 */
}
 8000818:	bf00      	nop
 800081a:	3720      	adds	r7, #32
 800081c:	46bd      	mov	sp, r7
 800081e:	bd80      	pop	{r7, pc}
 8000820:	20000510 	.word	0x20000510
 8000824:	a0000140 	.word	0xa0000140
 8000828:	20000500 	.word	0x20000500

0800082c <HAL_FMC_MspInit>:

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 800082c:	b580      	push	{r7, lr}
 800082e:	b086      	sub	sp, #24
 8000830:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000832:	1d3b      	adds	r3, r7, #4
 8000834:	2200      	movs	r2, #0
 8000836:	601a      	str	r2, [r3, #0]
 8000838:	605a      	str	r2, [r3, #4]
 800083a:	609a      	str	r2, [r3, #8]
 800083c:	60da      	str	r2, [r3, #12]
 800083e:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8000840:	4b3a      	ldr	r3, [pc, #232]	@ (800092c <HAL_FMC_MspInit+0x100>)
 8000842:	681b      	ldr	r3, [r3, #0]
 8000844:	2b00      	cmp	r3, #0
 8000846:	d16d      	bne.n	8000924 <HAL_FMC_MspInit+0xf8>
    return;
  }
  FMC_Initialized = 1;
 8000848:	4b38      	ldr	r3, [pc, #224]	@ (800092c <HAL_FMC_MspInit+0x100>)
 800084a:	2201      	movs	r2, #1
 800084c:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 800084e:	4b38      	ldr	r3, [pc, #224]	@ (8000930 <HAL_FMC_MspInit+0x104>)
 8000850:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8000852:	4a37      	ldr	r2, [pc, #220]	@ (8000930 <HAL_FMC_MspInit+0x104>)
 8000854:	f043 0301 	orr.w	r3, r3, #1
 8000858:	6393      	str	r3, [r2, #56]	@ 0x38
 800085a:	4b35      	ldr	r3, [pc, #212]	@ (8000930 <HAL_FMC_MspInit+0x104>)
 800085c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800085e:	f003 0301 	and.w	r3, r3, #1
 8000862:	603b      	str	r3, [r7, #0]
 8000864:	683b      	ldr	r3, [r7, #0]
  PE12   ------> FMC_D9
  PE15   ------> FMC_D12
  PE13   ------> FMC_D10
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8000866:	f64f 7383 	movw	r3, #65411	@ 0xff83
 800086a:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_14|GPIO_PIN_7|GPIO_PIN_10
                          |GPIO_PIN_12|GPIO_PIN_15|GPIO_PIN_13;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800086c:	2302      	movs	r3, #2
 800086e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000870:	2300      	movs	r3, #0
 8000872:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000874:	2303      	movs	r3, #3
 8000876:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000878:	230c      	movs	r3, #12
 800087a:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800087c:	1d3b      	adds	r3, r7, #4
 800087e:	4619      	mov	r1, r3
 8000880:	482c      	ldr	r0, [pc, #176]	@ (8000934 <HAL_FMC_MspInit+0x108>)
 8000882:	f004 fded 	bl	8005460 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8000886:	f248 1333 	movw	r3, #33075	@ 0x8133
 800088a:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_5|GPIO_PIN_4;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800088c:	2302      	movs	r3, #2
 800088e:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000890:	2300      	movs	r3, #0
 8000892:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000894:	2303      	movs	r3, #3
 8000896:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000898:	230c      	movs	r3, #12
 800089a:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800089c:	1d3b      	adds	r3, r7, #4
 800089e:	4619      	mov	r1, r3
 80008a0:	4825      	ldr	r0, [pc, #148]	@ (8000938 <HAL_FMC_MspInit+0x10c>)
 80008a2:	f004 fddd 	bl	8005460 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80008a6:	f24c 7303 	movw	r3, #50947	@ 0xc703
 80008aa:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_14|GPIO_PIN_9|GPIO_PIN_8;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008ac:	2302      	movs	r3, #2
 80008ae:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008b0:	2300      	movs	r3, #0
 80008b2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008b4:	2303      	movs	r3, #3
 80008b6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80008b8:	230c      	movs	r3, #12
 80008ba:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80008bc:	1d3b      	adds	r3, r7, #4
 80008be:	4619      	mov	r1, r3
 80008c0:	481e      	ldr	r0, [pc, #120]	@ (800093c <HAL_FMC_MspInit+0x110>)
 80008c2:	f004 fdcd 	bl	8005460 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80008c6:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80008ca:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_12|GPIO_PIN_15
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_11;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008cc:	2302      	movs	r3, #2
 80008ce:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008d0:	2300      	movs	r3, #0
 80008d2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008d4:	2303      	movs	r3, #3
 80008d6:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80008d8:	230c      	movs	r3, #12
 80008da:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80008dc:	1d3b      	adds	r3, r7, #4
 80008de:	4619      	mov	r1, r3
 80008e0:	4817      	ldr	r0, [pc, #92]	@ (8000940 <HAL_FMC_MspInit+0x114>)
 80008e2:	f004 fdbd 	bl	8005460 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_3;
 80008e6:	2328      	movs	r3, #40	@ 0x28
 80008e8:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008ea:	2302      	movs	r3, #2
 80008ec:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80008ee:	2300      	movs	r3, #0
 80008f0:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80008f2:	2303      	movs	r3, #3
 80008f4:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80008f6:	230c      	movs	r3, #12
 80008f8:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80008fa:	1d3b      	adds	r3, r7, #4
 80008fc:	4619      	mov	r1, r3
 80008fe:	4811      	ldr	r0, [pc, #68]	@ (8000944 <HAL_FMC_MspInit+0x118>)
 8000900:	f004 fdae 	bl	8005460 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000904:	2308      	movs	r3, #8
 8000906:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000908:	2302      	movs	r3, #2
 800090a:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800090c:	2300      	movs	r3, #0
 800090e:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000910:	2303      	movs	r3, #3
 8000912:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000914:	230c      	movs	r3, #12
 8000916:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000918:	1d3b      	adds	r3, r7, #4
 800091a:	4619      	mov	r1, r3
 800091c:	480a      	ldr	r0, [pc, #40]	@ (8000948 <HAL_FMC_MspInit+0x11c>)
 800091e:	f004 fd9f 	bl	8005460 <HAL_GPIO_Init>
 8000922:	e000      	b.n	8000926 <HAL_FMC_MspInit+0xfa>
    return;
 8000924:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8000926:	3718      	adds	r7, #24
 8000928:	46bd      	mov	sp, r7
 800092a:	bd80      	pop	{r7, pc}
 800092c:	20000544 	.word	0x20000544
 8000930:	40023800 	.word	0x40023800
 8000934:	40021000 	.word	0x40021000
 8000938:	40021800 	.word	0x40021800
 800093c:	40020c00 	.word	0x40020c00
 8000940:	40021400 	.word	0x40021400
 8000944:	40021c00 	.word	0x40021c00
 8000948:	40020800 	.word	0x40020800

0800094c <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* sdramHandle){
 800094c:	b580      	push	{r7, lr}
 800094e:	b082      	sub	sp, #8
 8000950:	af00      	add	r7, sp, #0
 8000952:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8000954:	f7ff ff6a 	bl	800082c <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8000958:	bf00      	nop
 800095a:	3708      	adds	r7, #8
 800095c:	46bd      	mov	sp, r7
 800095e:	bd80      	pop	{r7, pc}

08000960 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000960:	b580      	push	{r7, lr}
 8000962:	b090      	sub	sp, #64	@ 0x40
 8000964:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000966:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800096a:	2200      	movs	r2, #0
 800096c:	601a      	str	r2, [r3, #0]
 800096e:	605a      	str	r2, [r3, #4]
 8000970:	609a      	str	r2, [r3, #8]
 8000972:	60da      	str	r2, [r3, #12]
 8000974:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000976:	4b7d      	ldr	r3, [pc, #500]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000978:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800097a:	4a7c      	ldr	r2, [pc, #496]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 800097c:	f043 0310 	orr.w	r3, r3, #16
 8000980:	6313      	str	r3, [r2, #48]	@ 0x30
 8000982:	4b7a      	ldr	r3, [pc, #488]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000984:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000986:	f003 0310 	and.w	r3, r3, #16
 800098a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800098c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800098e:	4b77      	ldr	r3, [pc, #476]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000990:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000992:	4a76      	ldr	r2, [pc, #472]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000994:	f043 0301 	orr.w	r3, r3, #1
 8000998:	6313      	str	r3, [r2, #48]	@ 0x30
 800099a:	4b74      	ldr	r3, [pc, #464]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 800099c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800099e:	f003 0301 	and.w	r3, r3, #1
 80009a2:	627b      	str	r3, [r7, #36]	@ 0x24
 80009a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80009a6:	4b71      	ldr	r3, [pc, #452]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009a8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009aa:	4a70      	ldr	r2, [pc, #448]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009ac:	f043 0302 	orr.w	r3, r3, #2
 80009b0:	6313      	str	r3, [r2, #48]	@ 0x30
 80009b2:	4b6e      	ldr	r3, [pc, #440]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009b4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009b6:	f003 0302 	and.w	r3, r3, #2
 80009ba:	623b      	str	r3, [r7, #32]
 80009bc:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80009be:	4b6b      	ldr	r3, [pc, #428]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009c2:	4a6a      	ldr	r2, [pc, #424]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009c4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80009c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80009ca:	4b68      	ldr	r3, [pc, #416]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009ce:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80009d2:	61fb      	str	r3, [r7, #28]
 80009d4:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 80009d6:	4b65      	ldr	r3, [pc, #404]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009da:	4a64      	ldr	r2, [pc, #400]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009dc:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80009e0:	6313      	str	r3, [r2, #48]	@ 0x30
 80009e2:	4b62      	ldr	r3, [pc, #392]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009e6:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80009ea:	61bb      	str	r3, [r7, #24]
 80009ec:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80009ee:	4b5f      	ldr	r3, [pc, #380]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009f2:	4a5e      	ldr	r2, [pc, #376]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009f4:	f043 0308 	orr.w	r3, r3, #8
 80009f8:	6313      	str	r3, [r2, #48]	@ 0x30
 80009fa:	4b5c      	ldr	r3, [pc, #368]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 80009fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80009fe:	f003 0308 	and.w	r3, r3, #8
 8000a02:	617b      	str	r3, [r7, #20]
 8000a04:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8000a06:	4b59      	ldr	r3, [pc, #356]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a0a:	4a58      	ldr	r2, [pc, #352]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a0c:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000a10:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a12:	4b56      	ldr	r3, [pc, #344]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a16:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000a1a:	613b      	str	r3, [r7, #16]
 8000a1c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8000a1e:	4b53      	ldr	r3, [pc, #332]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a22:	4a52      	ldr	r2, [pc, #328]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a24:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000a28:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a2a:	4b50      	ldr	r3, [pc, #320]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a2e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000a32:	60fb      	str	r3, [r7, #12]
 8000a34:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a36:	4b4d      	ldr	r3, [pc, #308]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a38:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a3a:	4a4c      	ldr	r2, [pc, #304]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a3c:	f043 0320 	orr.w	r3, r3, #32
 8000a40:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a42:	4b4a      	ldr	r3, [pc, #296]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a46:	f003 0320 	and.w	r3, r3, #32
 8000a4a:	60bb      	str	r3, [r7, #8]
 8000a4c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000a4e:	4b47      	ldr	r3, [pc, #284]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a52:	4a46      	ldr	r2, [pc, #280]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a54:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000a58:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a5a:	4b44      	ldr	r3, [pc, #272]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000a62:	607b      	str	r3, [r7, #4]
 8000a64:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a66:	4b41      	ldr	r3, [pc, #260]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a68:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a6a:	4a40      	ldr	r2, [pc, #256]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a6c:	f043 0304 	orr.w	r3, r3, #4
 8000a70:	6313      	str	r3, [r2, #48]	@ 0x30
 8000a72:	4b3e      	ldr	r3, [pc, #248]	@ (8000b6c <MX_GPIO_Init+0x20c>)
 8000a74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000a76:	f003 0304 	and.w	r3, r3, #4
 8000a7a:	603b      	str	r3, [r7, #0]
 8000a7c:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_2|GPIO_PIN_12, GPIO_PIN_RESET);
 8000a7e:	2200      	movs	r2, #0
 8000a80:	f241 0104 	movw	r1, #4100	@ 0x1004
 8000a84:	483a      	ldr	r0, [pc, #232]	@ (8000b70 <MX_GPIO_Init+0x210>)
 8000a86:	f004 ffbb 	bl	8005a00 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOI, GPIO_PIN_12, GPIO_PIN_SET);
 8000a8a:	2201      	movs	r2, #1
 8000a8c:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
 8000a90:	4837      	ldr	r0, [pc, #220]	@ (8000b70 <MX_GPIO_Init+0x210>)
 8000a92:	f004 ffb5 	bl	8005a00 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8000a96:	2201      	movs	r2, #1
 8000a98:	2108      	movs	r1, #8
 8000a9a:	4836      	ldr	r0, [pc, #216]	@ (8000b74 <MX_GPIO_Init+0x214>)
 8000a9c:	f004 ffb0 	bl	8005a00 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_SET);
 8000aa0:	2201      	movs	r2, #1
 8000aa2:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000aa6:	4834      	ldr	r0, [pc, #208]	@ (8000b78 <MX_GPIO_Init+0x218>)
 8000aa8:	f004 ffaa 	bl	8005a00 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PI2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000aac:	2304      	movs	r3, #4
 8000aae:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ab0:	2301      	movs	r3, #1
 8000ab2:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ab4:	2300      	movs	r3, #0
 8000ab6:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8000ab8:	2301      	movs	r3, #1
 8000aba:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000abc:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	482b      	ldr	r0, [pc, #172]	@ (8000b70 <MX_GPIO_Init+0x210>)
 8000ac4:	f004 fccc 	bl	8005460 <HAL_GPIO_Init>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000ac8:	2308      	movs	r3, #8
 8000aca:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000acc:	2301      	movs	r3, #1
 8000ace:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000ad8:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000adc:	4619      	mov	r1, r3
 8000ade:	4825      	ldr	r0, [pc, #148]	@ (8000b74 <MX_GPIO_Init+0x214>)
 8000ae0:	f004 fcbe 	bl	8005460 <HAL_GPIO_Init>

  /*Configure GPIO pin : PI12 */
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000ae4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000ae8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000aea:	2301      	movs	r3, #1
 8000aec:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000aee:	2300      	movs	r3, #0
 8000af0:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000af2:	2300      	movs	r3, #0
 8000af4:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000af6:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000afa:	4619      	mov	r1, r3
 8000afc:	481c      	ldr	r0, [pc, #112]	@ (8000b70 <MX_GPIO_Init+0x210>)
 8000afe:	f004 fcaf 	bl	8005460 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 8000b02:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8000b06:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b08:	2301      	movs	r3, #1
 8000b0a:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	637b      	str	r3, [r7, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_MEDIUM;
 8000b10:	2301      	movs	r3, #1
 8000b12:	63bb      	str	r3, [r7, #56]	@ 0x38
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000b14:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000b18:	4619      	mov	r1, r3
 8000b1a:	4817      	ldr	r0, [pc, #92]	@ (8000b78 <MX_GPIO_Init+0x218>)
 8000b1c:	f004 fca0 	bl	8005460 <HAL_GPIO_Init>

  /*Configure GPIO pin : PI13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8000b20:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b24:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000b26:	2300      	movs	r3, #0
 8000b28:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b2a:	2300      	movs	r3, #0
 8000b2c:	637b      	str	r3, [r7, #52]	@ 0x34
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000b2e:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000b32:	4619      	mov	r1, r3
 8000b34:	480e      	ldr	r0, [pc, #56]	@ (8000b70 <MX_GPIO_Init+0x210>)
 8000b36:	f004 fc93 	bl	8005460 <HAL_GPIO_Init>

  /*Configure GPIO pins : PG7 PG6 */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6;
 8000b3a:	23c0      	movs	r3, #192	@ 0xc0
 8000b3c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 8000b3e:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8000b42:	633b      	str	r3, [r7, #48]	@ 0x30
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000b44:	2301      	movs	r3, #1
 8000b46:	637b      	str	r3, [r7, #52]	@ 0x34
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000b48:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 8000b4c:	4619      	mov	r1, r3
 8000b4e:	480b      	ldr	r0, [pc, #44]	@ (8000b7c <MX_GPIO_Init+0x21c>)
 8000b50:	f004 fc86 	bl	8005460 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8000b54:	2200      	movs	r2, #0
 8000b56:	2100      	movs	r1, #0
 8000b58:	2017      	movs	r0, #23
 8000b5a:	f004 f8f4 	bl	8004d46 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000b5e:	2017      	movs	r0, #23
 8000b60:	f004 f90d 	bl	8004d7e <HAL_NVIC_EnableIRQ>

}
 8000b64:	bf00      	nop
 8000b66:	3740      	adds	r7, #64	@ 0x40
 8000b68:	46bd      	mov	sp, r7
 8000b6a:	bd80      	pop	{r7, pc}
 8000b6c:	40023800 	.word	0x40023800
 8000b70:	40022000 	.word	0x40022000
 8000b74:	40022800 	.word	0x40022800
 8000b78:	40020000 	.word	0x40020000
 8000b7c:	40021800 	.word	0x40021800

08000b80 <MX_I2C3_Init>:

I2C_HandleTypeDef hi2c3;

/* I2C3 init function */
void MX_I2C3_Init(void)
{
 8000b80:	b580      	push	{r7, lr}
 8000b82:	af00      	add	r7, sp, #0
  /* USER CODE END I2C3_Init 0 */

  /* USER CODE BEGIN I2C3_Init 1 */

  /* USER CODE END I2C3_Init 1 */
  hi2c3.Instance = I2C3;
 8000b84:	4b1b      	ldr	r3, [pc, #108]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000b86:	4a1c      	ldr	r2, [pc, #112]	@ (8000bf8 <MX_I2C3_Init+0x78>)
 8000b88:	601a      	str	r2, [r3, #0]
  hi2c3.Init.Timing = 0x20404768;
 8000b8a:	4b1a      	ldr	r3, [pc, #104]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000b8c:	4a1b      	ldr	r2, [pc, #108]	@ (8000bfc <MX_I2C3_Init+0x7c>)
 8000b8e:	605a      	str	r2, [r3, #4]
  hi2c3.Init.OwnAddress1 = 0;
 8000b90:	4b18      	ldr	r3, [pc, #96]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000b92:	2200      	movs	r2, #0
 8000b94:	609a      	str	r2, [r3, #8]
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000b96:	4b17      	ldr	r3, [pc, #92]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000b98:	2201      	movs	r2, #1
 8000b9a:	60da      	str	r2, [r3, #12]
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000b9c:	4b15      	ldr	r3, [pc, #84]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000b9e:	2200      	movs	r2, #0
 8000ba0:	611a      	str	r2, [r3, #16]
  hi2c3.Init.OwnAddress2 = 0;
 8000ba2:	4b14      	ldr	r3, [pc, #80]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000ba4:	2200      	movs	r2, #0
 8000ba6:	615a      	str	r2, [r3, #20]
  hi2c3.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000ba8:	4b12      	ldr	r3, [pc, #72]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000baa:	2200      	movs	r2, #0
 8000bac:	619a      	str	r2, [r3, #24]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000bae:	4b11      	ldr	r3, [pc, #68]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	61da      	str	r2, [r3, #28]
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000bb4:	4b0f      	ldr	r3, [pc, #60]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8000bba:	480e      	ldr	r0, [pc, #56]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000bbc:	f004 ff5e 	bl	8005a7c <HAL_I2C_Init>
 8000bc0:	4603      	mov	r3, r0
 8000bc2:	2b00      	cmp	r3, #0
 8000bc4:	d001      	beq.n	8000bca <MX_I2C3_Init+0x4a>
  {
    Error_Handler();
 8000bc6:	f000 fb9a 	bl	80012fe <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000bca:	2100      	movs	r1, #0
 8000bcc:	4809      	ldr	r0, [pc, #36]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000bce:	f005 fd1f 	bl	8006610 <HAL_I2CEx_ConfigAnalogFilter>
 8000bd2:	4603      	mov	r3, r0
 8000bd4:	2b00      	cmp	r3, #0
 8000bd6:	d001      	beq.n	8000bdc <MX_I2C3_Init+0x5c>
  {
    Error_Handler();
 8000bd8:	f000 fb91 	bl	80012fe <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8000bdc:	2100      	movs	r1, #0
 8000bde:	4805      	ldr	r0, [pc, #20]	@ (8000bf4 <MX_I2C3_Init+0x74>)
 8000be0:	f005 fd61 	bl	80066a6 <HAL_I2CEx_ConfigDigitalFilter>
 8000be4:	4603      	mov	r3, r0
 8000be6:	2b00      	cmp	r3, #0
 8000be8:	d001      	beq.n	8000bee <MX_I2C3_Init+0x6e>
  {
    Error_Handler();
 8000bea:	f000 fb88 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN I2C3_Init 2 */

  /* USER CODE END I2C3_Init 2 */

}
 8000bee:	bf00      	nop
 8000bf0:	bd80      	pop	{r7, pc}
 8000bf2:	bf00      	nop
 8000bf4:	20000548 	.word	0x20000548
 8000bf8:	40005c00 	.word	0x40005c00
 8000bfc:	20404768 	.word	0x20404768

08000c00 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000c00:	b580      	push	{r7, lr}
 8000c02:	b0aa      	sub	sp, #168	@ 0xa8
 8000c04:	af00      	add	r7, sp, #0
 8000c06:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c08:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8000c0c:	2200      	movs	r2, #0
 8000c0e:	601a      	str	r2, [r3, #0]
 8000c10:	605a      	str	r2, [r3, #4]
 8000c12:	609a      	str	r2, [r3, #8]
 8000c14:	60da      	str	r2, [r3, #12]
 8000c16:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c18:	f107 0310 	add.w	r3, r7, #16
 8000c1c:	2284      	movs	r2, #132	@ 0x84
 8000c1e:	2100      	movs	r1, #0
 8000c20:	4618      	mov	r0, r3
 8000c22:	f027 f95e 	bl	8027ee2 <memset>
  if(i2cHandle->Instance==I2C3)
 8000c26:	687b      	ldr	r3, [r7, #4]
 8000c28:	681b      	ldr	r3, [r3, #0]
 8000c2a:	4a22      	ldr	r2, [pc, #136]	@ (8000cb4 <HAL_I2C_MspInit+0xb4>)
 8000c2c:	4293      	cmp	r3, r2
 8000c2e:	d13c      	bne.n	8000caa <HAL_I2C_MspInit+0xaa>

  /* USER CODE END I2C3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C3;
 8000c30:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8000c34:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.I2c3ClockSelection = RCC_I2C3CLKSOURCE_PCLK1;
 8000c36:	2300      	movs	r3, #0
 8000c38:	67fb      	str	r3, [r7, #124]	@ 0x7c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000c3a:	f107 0310 	add.w	r3, r7, #16
 8000c3e:	4618      	mov	r0, r3
 8000c40:	f006 feb2 	bl	80079a8 <HAL_RCCEx_PeriphCLKConfig>
 8000c44:	4603      	mov	r3, r0
 8000c46:	2b00      	cmp	r3, #0
 8000c48:	d001      	beq.n	8000c4e <HAL_I2C_MspInit+0x4e>
    {
      Error_Handler();
 8000c4a:	f000 fb58 	bl	80012fe <Error_Handler>
    }

    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c4e:	4b1a      	ldr	r3, [pc, #104]	@ (8000cb8 <HAL_I2C_MspInit+0xb8>)
 8000c50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c52:	4a19      	ldr	r2, [pc, #100]	@ (8000cb8 <HAL_I2C_MspInit+0xb8>)
 8000c54:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000c58:	6313      	str	r3, [r2, #48]	@ 0x30
 8000c5a:	4b17      	ldr	r3, [pc, #92]	@ (8000cb8 <HAL_I2C_MspInit+0xb8>)
 8000c5c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c5e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000c62:	60fb      	str	r3, [r7, #12]
 8000c64:	68fb      	ldr	r3, [r7, #12]
    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 8000c66:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000c6a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000c6e:	2312      	movs	r3, #18
 8000c70:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c74:	2300      	movs	r3, #0
 8000c76:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000c7a:	2303      	movs	r3, #3
 8000c7c:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8000c80:	2304      	movs	r3, #4
 8000c82:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000c86:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8000c8a:	4619      	mov	r1, r3
 8000c8c:	480b      	ldr	r0, [pc, #44]	@ (8000cbc <HAL_I2C_MspInit+0xbc>)
 8000c8e:	f004 fbe7 	bl	8005460 <HAL_GPIO_Init>

    /* I2C3 clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8000c92:	4b09      	ldr	r3, [pc, #36]	@ (8000cb8 <HAL_I2C_MspInit+0xb8>)
 8000c94:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000c96:	4a08      	ldr	r2, [pc, #32]	@ (8000cb8 <HAL_I2C_MspInit+0xb8>)
 8000c98:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8000c9c:	6413      	str	r3, [r2, #64]	@ 0x40
 8000c9e:	4b06      	ldr	r3, [pc, #24]	@ (8000cb8 <HAL_I2C_MspInit+0xb8>)
 8000ca0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000ca2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8000ca6:	60bb      	str	r3, [r7, #8]
 8000ca8:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */

  /* USER CODE END I2C3_MspInit 1 */
  }
}
 8000caa:	bf00      	nop
 8000cac:	37a8      	adds	r7, #168	@ 0xa8
 8000cae:	46bd      	mov	sp, r7
 8000cb0:	bd80      	pop	{r7, pc}
 8000cb2:	bf00      	nop
 8000cb4:	40005c00 	.word	0x40005c00
 8000cb8:	40023800 	.word	0x40023800
 8000cbc:	40021c00 	.word	0x40021c00

08000cc0 <HAL_I2C_MspDeInit>:

void HAL_I2C_MspDeInit(I2C_HandleTypeDef* i2cHandle)
{
 8000cc0:	b580      	push	{r7, lr}
 8000cc2:	b082      	sub	sp, #8
 8000cc4:	af00      	add	r7, sp, #0
 8000cc6:	6078      	str	r0, [r7, #4]

  if(i2cHandle->Instance==I2C3)
 8000cc8:	687b      	ldr	r3, [r7, #4]
 8000cca:	681b      	ldr	r3, [r3, #0]
 8000ccc:	4a0a      	ldr	r2, [pc, #40]	@ (8000cf8 <HAL_I2C_MspDeInit+0x38>)
 8000cce:	4293      	cmp	r3, r2
 8000cd0:	d10e      	bne.n	8000cf0 <HAL_I2C_MspDeInit+0x30>
  {
  /* USER CODE BEGIN I2C3_MspDeInit 0 */

  /* USER CODE END I2C3_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C3_CLK_DISABLE();
 8000cd2:	4b0a      	ldr	r3, [pc, #40]	@ (8000cfc <HAL_I2C_MspDeInit+0x3c>)
 8000cd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000cd6:	4a09      	ldr	r2, [pc, #36]	@ (8000cfc <HAL_I2C_MspDeInit+0x3c>)
 8000cd8:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8000cdc:	6413      	str	r3, [r2, #64]	@ 0x40

    /**I2C3 GPIO Configuration
    PH7     ------> I2C3_SCL
    PH8     ------> I2C3_SDA
    */
    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_7);
 8000cde:	2180      	movs	r1, #128	@ 0x80
 8000ce0:	4807      	ldr	r0, [pc, #28]	@ (8000d00 <HAL_I2C_MspDeInit+0x40>)
 8000ce2:	f004 fd69 	bl	80057b8 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOH, GPIO_PIN_8);
 8000ce6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8000cea:	4805      	ldr	r0, [pc, #20]	@ (8000d00 <HAL_I2C_MspDeInit+0x40>)
 8000cec:	f004 fd64 	bl	80057b8 <HAL_GPIO_DeInit>

  /* USER CODE BEGIN I2C3_MspDeInit 1 */

  /* USER CODE END I2C3_MspDeInit 1 */
  }
}
 8000cf0:	bf00      	nop
 8000cf2:	3708      	adds	r7, #8
 8000cf4:	46bd      	mov	sp, r7
 8000cf6:	bd80      	pop	{r7, pc}
 8000cf8:	40005c00 	.word	0x40005c00
 8000cfc:	40023800 	.word	0x40023800
 8000d00:	40021c00 	.word	0x40021c00

08000d04 <MX_LTDC_Init>:

LTDC_HandleTypeDef hltdc;

/* LTDC init function */
void MX_LTDC_Init(void)
{
 8000d04:	b580      	push	{r7, lr}
 8000d06:	b08e      	sub	sp, #56	@ 0x38
 8000d08:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000d0a:	1d3b      	adds	r3, r7, #4
 8000d0c:	2234      	movs	r2, #52	@ 0x34
 8000d0e:	2100      	movs	r1, #0
 8000d10:	4618      	mov	r0, r3
 8000d12:	f027 f8e6 	bl	8027ee2 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000d16:	4b3a      	ldr	r3, [pc, #232]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d18:	4a3a      	ldr	r2, [pc, #232]	@ (8000e04 <MX_LTDC_Init+0x100>)
 8000d1a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000d1c:	4b38      	ldr	r3, [pc, #224]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d1e:	2200      	movs	r2, #0
 8000d20:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000d22:	4b37      	ldr	r3, [pc, #220]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d24:	2200      	movs	r2, #0
 8000d26:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000d28:	4b35      	ldr	r3, [pc, #212]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000d2e:	4b34      	ldr	r3, [pc, #208]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d30:	2200      	movs	r2, #0
 8000d32:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 40;
 8000d34:	4b32      	ldr	r3, [pc, #200]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d36:	2228      	movs	r2, #40	@ 0x28
 8000d38:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 9;
 8000d3a:	4b31      	ldr	r3, [pc, #196]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d3c:	2209      	movs	r2, #9
 8000d3e:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 53;
 8000d40:	4b2f      	ldr	r3, [pc, #188]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d42:	2235      	movs	r2, #53	@ 0x35
 8000d44:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 11;
 8000d46:	4b2e      	ldr	r3, [pc, #184]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d48:	220b      	movs	r2, #11
 8000d4a:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 533;
 8000d4c:	4b2c      	ldr	r3, [pc, #176]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d4e:	f240 2215 	movw	r2, #533	@ 0x215
 8000d52:	625a      	str	r2, [r3, #36]	@ 0x24
  hltdc.Init.AccumulatedActiveH = 283;
 8000d54:	4b2a      	ldr	r3, [pc, #168]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d56:	f240 121b 	movw	r2, #283	@ 0x11b
 8000d5a:	629a      	str	r2, [r3, #40]	@ 0x28
  hltdc.Init.TotalWidth = 565;
 8000d5c:	4b28      	ldr	r3, [pc, #160]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d5e:	f240 2235 	movw	r2, #565	@ 0x235
 8000d62:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc.Init.TotalHeigh = 285;
 8000d64:	4b26      	ldr	r3, [pc, #152]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d66:	f240 121d 	movw	r2, #285	@ 0x11d
 8000d6a:	631a      	str	r2, [r3, #48]	@ 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8000d6c:	4b24      	ldr	r3, [pc, #144]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d6e:	2200      	movs	r2, #0
 8000d70:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000d74:	4b22      	ldr	r3, [pc, #136]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d76:	2200      	movs	r2, #0
 8000d78:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
  hltdc.Init.Backcolor.Red = 0;
 8000d7c:	4b20      	ldr	r3, [pc, #128]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d7e:	2200      	movs	r2, #0
 8000d80:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000d84:	481e      	ldr	r0, [pc, #120]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000d86:	f005 fcdb 	bl	8006740 <HAL_LTDC_Init>
 8000d8a:	4603      	mov	r3, r0
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	d001      	beq.n	8000d94 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8000d90:	f000 fab5 	bl	80012fe <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000d94:	2300      	movs	r3, #0
 8000d96:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 480;
 8000d98:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000d9c:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000d9e:	2300      	movs	r3, #0
 8000da0:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 272;
 8000da2:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8000da6:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000da8:	2302      	movs	r3, #2
 8000daa:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000dac:	23ff      	movs	r3, #255	@ 0xff
 8000dae:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000db0:	2300      	movs	r3, #0
 8000db2:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000db4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000db8:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000dba:	2305      	movs	r3, #5
 8000dbc:	627b      	str	r3, [r7, #36]	@ 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000dbe:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8000dc2:	62bb      	str	r3, [r7, #40]	@ 0x28
  pLayerCfg.ImageWidth = 480;
 8000dc4:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000dc8:	62fb      	str	r3, [r7, #44]	@ 0x2c
  pLayerCfg.ImageHeight = 272;
 8000dca:	f44f 7388 	mov.w	r3, #272	@ 0x110
 8000dce:	633b      	str	r3, [r7, #48]	@ 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000dd6:	2300      	movs	r3, #0
 8000dd8:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000ddc:	2300      	movs	r3, #0
 8000dde:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000de2:	1d3b      	adds	r3, r7, #4
 8000de4:	2200      	movs	r2, #0
 8000de6:	4619      	mov	r1, r3
 8000de8:	4805      	ldr	r0, [pc, #20]	@ (8000e00 <MX_LTDC_Init+0xfc>)
 8000dea:	f005 fe31 	bl	8006a50 <HAL_LTDC_ConfigLayer>
 8000dee:	4603      	mov	r3, r0
 8000df0:	2b00      	cmp	r3, #0
 8000df2:	d001      	beq.n	8000df8 <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8000df4:	f000 fa83 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000df8:	bf00      	nop
 8000dfa:	3738      	adds	r7, #56	@ 0x38
 8000dfc:	46bd      	mov	sp, r7
 8000dfe:	bd80      	pop	{r7, pc}
 8000e00:	2000059c 	.word	0x2000059c
 8000e04:	40016800 	.word	0x40016800

08000e08 <HAL_LTDC_MspInit>:

void HAL_LTDC_MspInit(LTDC_HandleTypeDef* ltdcHandle)
{
 8000e08:	b580      	push	{r7, lr}
 8000e0a:	b0ae      	sub	sp, #184	@ 0xb8
 8000e0c:	af00      	add	r7, sp, #0
 8000e0e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e10:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000e14:	2200      	movs	r2, #0
 8000e16:	601a      	str	r2, [r3, #0]
 8000e18:	605a      	str	r2, [r3, #4]
 8000e1a:	609a      	str	r2, [r3, #8]
 8000e1c:	60da      	str	r2, [r3, #12]
 8000e1e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e20:	f107 0320 	add.w	r3, r7, #32
 8000e24:	2284      	movs	r2, #132	@ 0x84
 8000e26:	2100      	movs	r1, #0
 8000e28:	4618      	mov	r0, r3
 8000e2a:	f027 f85a 	bl	8027ee2 <memset>
  if(ltdcHandle->Instance==LTDC)
 8000e2e:	687b      	ldr	r3, [r7, #4]
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	4a6f      	ldr	r2, [pc, #444]	@ (8000ff0 <HAL_LTDC_MspInit+0x1e8>)
 8000e34:	4293      	cmp	r3, r2
 8000e36:	f040 80d6 	bne.w	8000fe6 <HAL_LTDC_MspInit+0x1de>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000e3a:	2308      	movs	r3, #8
 8000e3c:	623b      	str	r3, [r7, #32]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 384;
 8000e3e:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000e42:	637b      	str	r3, [r7, #52]	@ 0x34
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 5;
 8000e44:	2305      	movs	r3, #5
 8000e46:	63fb      	str	r3, [r7, #60]	@ 0x3c
    PeriphClkInitStruct.PLLSAI.PLLSAIQ = 2;
 8000e48:	2302      	movs	r3, #2
 8000e4a:	63bb      	str	r3, [r7, #56]	@ 0x38
    PeriphClkInitStruct.PLLSAI.PLLSAIP = RCC_PLLSAIP_DIV2;
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	643b      	str	r3, [r7, #64]	@ 0x40
    PeriphClkInitStruct.PLLSAIDivQ = 1;
 8000e50:	2301      	movs	r3, #1
 8000e52:	64bb      	str	r3, [r7, #72]	@ 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8000e54:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
 8000e58:	64fb      	str	r3, [r7, #76]	@ 0x4c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000e5a:	f107 0320 	add.w	r3, r7, #32
 8000e5e:	4618      	mov	r0, r3
 8000e60:	f006 fda2 	bl	80079a8 <HAL_RCCEx_PeriphCLKConfig>
 8000e64:	4603      	mov	r3, r0
 8000e66:	2b00      	cmp	r3, #0
 8000e68:	d001      	beq.n	8000e6e <HAL_LTDC_MspInit+0x66>
    {
      Error_Handler();
 8000e6a:	f000 fa48 	bl	80012fe <Error_Handler>
    }

    /* LTDC clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000e6e:	4b61      	ldr	r3, [pc, #388]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000e70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000e72:	4a60      	ldr	r2, [pc, #384]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000e74:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000e78:	6453      	str	r3, [r2, #68]	@ 0x44
 8000e7a:	4b5e      	ldr	r3, [pc, #376]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000e7c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000e7e:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8000e82:	61fb      	str	r3, [r7, #28]
 8000e84:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8000e86:	4b5b      	ldr	r3, [pc, #364]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000e88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e8a:	4a5a      	ldr	r2, [pc, #360]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000e8c:	f043 0310 	orr.w	r3, r3, #16
 8000e90:	6313      	str	r3, [r2, #48]	@ 0x30
 8000e92:	4b58      	ldr	r3, [pc, #352]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000e94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e96:	f003 0310 	and.w	r3, r3, #16
 8000e9a:	61bb      	str	r3, [r7, #24]
 8000e9c:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8000e9e:	4b55      	ldr	r3, [pc, #340]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ea0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ea2:	4a54      	ldr	r2, [pc, #336]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ea4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000ea8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000eaa:	4b52      	ldr	r3, [pc, #328]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000eac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000eae:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8000eb2:	617b      	str	r3, [r7, #20]
 8000eb4:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOK_CLK_ENABLE();
 8000eb6:	4b4f      	ldr	r3, [pc, #316]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000eb8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000eba:	4a4e      	ldr	r2, [pc, #312]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ebc:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000ec0:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ec2:	4b4c      	ldr	r3, [pc, #304]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ec4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ec6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000eca:	613b      	str	r3, [r7, #16]
 8000ecc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000ece:	4b49      	ldr	r3, [pc, #292]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ed0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ed2:	4a48      	ldr	r2, [pc, #288]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ed4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000ed8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000eda:	4b46      	ldr	r3, [pc, #280]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000edc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ede:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000ee2:	60fb      	str	r3, [r7, #12]
 8000ee4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000ee6:	4b43      	ldr	r3, [pc, #268]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ee8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000eea:	4a42      	ldr	r2, [pc, #264]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000eec:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ef0:	6313      	str	r3, [r2, #48]	@ 0x30
 8000ef2:	4b40      	ldr	r3, [pc, #256]	@ (8000ff4 <HAL_LTDC_MspInit+0x1ec>)
 8000ef4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ef6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8000efa:	60bb      	str	r3, [r7, #8]
 8000efc:	68bb      	ldr	r3, [r7, #8]
    PJ3     ------> LTDC_R4
    PJ2     ------> LTDC_R3
    PJ0     ------> LTDC_R1
    PJ1     ------> LTDC_R2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8000efe:	2310      	movs	r3, #16
 8000f00:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f04:	2302      	movs	r3, #2
 8000f06:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f10:	2300      	movs	r3, #0
 8000f12:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f16:	230e      	movs	r3, #14
 8000f18:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000f1c:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000f20:	4619      	mov	r1, r3
 8000f22:	4835      	ldr	r0, [pc, #212]	@ (8000ff8 <HAL_LTDC_MspInit+0x1f0>)
 8000f24:	f004 fa9c 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15|GPIO_PIN_11
 8000f28:	f64e 73ff 	movw	r3, #61439	@ 0xefff
 8000f2c:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
                          |GPIO_PIN_8|GPIO_PIN_10|GPIO_PIN_7|GPIO_PIN_9
                          |GPIO_PIN_6|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_3
                          |GPIO_PIN_2|GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f30:	2302      	movs	r3, #2
 8000f32:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f36:	2300      	movs	r3, #0
 8000f38:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f42:	230e      	movs	r3, #14
 8000f44:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8000f48:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000f4c:	4619      	mov	r1, r3
 8000f4e:	482b      	ldr	r0, [pc, #172]	@ (8000ffc <HAL_LTDC_MspInit+0x1f4>)
 8000f50:	f004 fa86 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_5|GPIO_PIN_4
 8000f54:	23f7      	movs	r3, #247	@ 0xf7
 8000f56:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
                          |GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_0;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f5a:	2302      	movs	r3, #2
 8000f5c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f60:	2300      	movs	r3, #0
 8000f62:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f66:	2300      	movs	r3, #0
 8000f68:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000f6c:	230e      	movs	r3, #14
 8000f6e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8000f72:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000f76:	4619      	mov	r1, r3
 8000f78:	4821      	ldr	r0, [pc, #132]	@ (8001000 <HAL_LTDC_MspInit+0x1f8>)
 8000f7a:	f004 fa71 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8000f7e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000f82:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f86:	2302      	movs	r3, #2
 8000f88:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f8c:	2300      	movs	r3, #0
 8000f8e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f92:	2300      	movs	r3, #0
 8000f94:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000f98:	2309      	movs	r3, #9
 8000f9a:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000f9e:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000fa2:	4619      	mov	r1, r3
 8000fa4:	4817      	ldr	r0, [pc, #92]	@ (8001004 <HAL_LTDC_MspInit+0x1fc>)
 8000fa6:	f004 fa5b 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_9|GPIO_PIN_15|GPIO_PIN_14;
 8000faa:	f44f 4346 	mov.w	r3, #50688	@ 0xc600
 8000fae:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fb2:	2302      	movs	r3, #2
 8000fb4:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fb8:	2300      	movs	r3, #0
 8000fba:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fc4:	230e      	movs	r3, #14
 8000fc6:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000fca:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 8000fce:	4619      	mov	r1, r3
 8000fd0:	480d      	ldr	r0, [pc, #52]	@ (8001008 <HAL_LTDC_MspInit+0x200>)
 8000fd2:	f004 fa45 	bl	8005460 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	2100      	movs	r1, #0
 8000fda:	2058      	movs	r0, #88	@ 0x58
 8000fdc:	f003 feb3 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000fe0:	2058      	movs	r0, #88	@ 0x58
 8000fe2:	f003 fecc 	bl	8004d7e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }
}
 8000fe6:	bf00      	nop
 8000fe8:	37b8      	adds	r7, #184	@ 0xb8
 8000fea:	46bd      	mov	sp, r7
 8000fec:	bd80      	pop	{r7, pc}
 8000fee:	bf00      	nop
 8000ff0:	40016800 	.word	0x40016800
 8000ff4:	40023800 	.word	0x40023800
 8000ff8:	40021000 	.word	0x40021000
 8000ffc:	40022400 	.word	0x40022400
 8001000:	40022800 	.word	0x40022800
 8001004:	40021800 	.word	0x40021800
 8001008:	40022000 	.word	0x40022000

0800100c <SCB_EnableICache>:
/**
  \brief   Enable I-Cache
  \details Turns on I-Cache
  */
__STATIC_INLINE void SCB_EnableICache (void)
{
 800100c:	b480      	push	{r7}
 800100e:	af00      	add	r7, sp, #0
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001010:	f3bf 8f4f 	dsb	sy
}
 8001014:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001016:	f3bf 8f6f 	isb	sy
}
 800101a:	bf00      	nop
  #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
 800101c:	4b0d      	ldr	r3, [pc, #52]	@ (8001054 <SCB_EnableICache+0x48>)
 800101e:	2200      	movs	r2, #0
 8001020:	f8c3 2250 	str.w	r2, [r3, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
 8001024:	f3bf 8f4f 	dsb	sy
}
 8001028:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800102a:	f3bf 8f6f 	isb	sy
}
 800102e:	bf00      	nop
    __DSB();
    __ISB();
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
 8001030:	4b08      	ldr	r3, [pc, #32]	@ (8001054 <SCB_EnableICache+0x48>)
 8001032:	695b      	ldr	r3, [r3, #20]
 8001034:	4a07      	ldr	r2, [pc, #28]	@ (8001054 <SCB_EnableICache+0x48>)
 8001036:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800103a:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 800103c:	f3bf 8f4f 	dsb	sy
}
 8001040:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8001042:	f3bf 8f6f 	isb	sy
}
 8001046:	bf00      	nop
    __DSB();
    __ISB();
  #endif
}
 8001048:	bf00      	nop
 800104a:	46bd      	mov	sp, r7
 800104c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001050:	4770      	bx	lr
 8001052:	bf00      	nop
 8001054:	e000ed00 	.word	0xe000ed00

08001058 <SCB_EnableDCache>:
/**
  \brief   Enable D-Cache
  \details Turns on D-Cache
  */
__STATIC_INLINE void SCB_EnableDCache (void)
{
 8001058:	b480      	push	{r7}
 800105a:	b085      	sub	sp, #20
 800105c:	af00      	add	r7, sp, #0
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 800105e:	4b1f      	ldr	r3, [pc, #124]	@ (80010dc <SCB_EnableDCache+0x84>)
 8001060:	2200      	movs	r2, #0
 8001062:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8001066:	f3bf 8f4f 	dsb	sy
}
 800106a:	bf00      	nop
    __DSB();

    ccsidr = SCB->CCSIDR;
 800106c:	4b1b      	ldr	r3, [pc, #108]	@ (80010dc <SCB_EnableDCache+0x84>)
 800106e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8001072:	607b      	str	r3, [r7, #4]

                                            /* invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	0b5b      	lsrs	r3, r3, #13
 8001078:	f3c3 030e 	ubfx	r3, r3, #0, #15
 800107c:	60fb      	str	r3, [r7, #12]
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 800107e:	687b      	ldr	r3, [r7, #4]
 8001080:	08db      	lsrs	r3, r3, #3
 8001082:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8001086:	60bb      	str	r3, [r7, #8]
      do {
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001088:	68fb      	ldr	r3, [r7, #12]
 800108a:	015a      	lsls	r2, r3, #5
 800108c:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 8001090:	4013      	ands	r3, r2
                      ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 8001092:	68ba      	ldr	r2, [r7, #8]
 8001094:	0792      	lsls	r2, r2, #30
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 8001096:	4911      	ldr	r1, [pc, #68]	@ (80010dc <SCB_EnableDCache+0x84>)
 8001098:	4313      	orrs	r3, r2
 800109a:	f8c1 3260 	str.w	r3, [r1, #608]	@ 0x260
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
 800109e:	68bb      	ldr	r3, [r7, #8]
 80010a0:	1e5a      	subs	r2, r3, #1
 80010a2:	60ba      	str	r2, [r7, #8]
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	d1ef      	bne.n	8001088 <SCB_EnableDCache+0x30>
    } while(sets-- != 0U);
 80010a8:	68fb      	ldr	r3, [r7, #12]
 80010aa:	1e5a      	subs	r2, r3, #1
 80010ac:	60fa      	str	r2, [r7, #12]
 80010ae:	2b00      	cmp	r3, #0
 80010b0:	d1e5      	bne.n	800107e <SCB_EnableDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 80010b2:	f3bf 8f4f 	dsb	sy
}
 80010b6:	bf00      	nop
    __DSB();

    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 80010b8:	4b08      	ldr	r3, [pc, #32]	@ (80010dc <SCB_EnableDCache+0x84>)
 80010ba:	695b      	ldr	r3, [r3, #20]
 80010bc:	4a07      	ldr	r2, [pc, #28]	@ (80010dc <SCB_EnableDCache+0x84>)
 80010be:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80010c2:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
 80010c4:	f3bf 8f4f 	dsb	sy
}
 80010c8:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80010ca:	f3bf 8f6f 	isb	sy
}
 80010ce:	bf00      	nop

    __DSB();
    __ISB();
  #endif
}
 80010d0:	bf00      	nop
 80010d2:	3714      	adds	r7, #20
 80010d4:	46bd      	mov	sp, r7
 80010d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010da:	4770      	bx	lr
 80010dc:	e000ed00 	.word	0xe000ed00

080010e0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80010e0:	b580      	push	{r7, lr}
 80010e2:	b082      	sub	sp, #8
 80010e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */

  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 80010e6:	f000 f8d3 	bl	8001290 <MPU_Config>

  /* Enable the CPU Cache */

  /* Enable I-Cache---------------------------------------------------------*/
  SCB_EnableICache();
 80010ea:	f7ff ff8f 	bl	800100c <SCB_EnableICache>

  /* Enable D-Cache---------------------------------------------------------*/
  SCB_EnableDCache();
 80010ee:	f7ff ffb3 	bl	8001058 <SCB_EnableDCache>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80010f2:	f003 fcc3 	bl	8004a7c <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80010f6:	f000 f83d 	bl	8001174 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80010fa:	f7ff fc31 	bl	8000960 <MX_GPIO_Init>
  MX_SPI2_Init();
 80010fe:	f000 f9c1 	bl	8001484 <MX_SPI2_Init>
  MX_TIM2_Init();
 8001102:	f000 fbb3 	bl	800186c <MX_TIM2_Init>
  MX_USART2_UART_Init();
 8001106:	f000 fc81 	bl	8001a0c <MX_USART2_UART_Init>
  MX_DMA2D_Init();
 800110a:	f7ff fa8b 	bl	8000624 <MX_DMA2D_Init>
  MX_LTDC_Init();
 800110e:	f7ff fdf9 	bl	8000d04 <MX_LTDC_Init>
  MX_FMC_Init();
 8001112:	f7ff fadf 	bl	80006d4 <MX_FMC_Init>
  MX_I2C3_Init();
 8001116:	f7ff fd33 	bl	8000b80 <MX_I2C3_Init>
  MX_CRC_Init();
 800111a:	f7ff fa41 	bl	80005a0 <MX_CRC_Init>
  MX_QUADSPI_Init();
 800111e:	f000 f8f5 	bl	800130c <MX_QUADSPI_Init>
  MX_TouchGFX_Init();
 8001122:	f009 fefb 	bl	800af1c <MX_TouchGFX_Init>
//  	    // Display a character on the specified line and column using the BSP_LCD_DisplayChar() function or a complete string line using the BSP_LCD_DisplayStringAtLine() function.
//  	    BSP_LCD_DisplayStringAt(0, 0, "TEST", CENTER_MODE);

  	//HAL_Delay(2000);

	BSP_MotorControl_SetNbDevices(BSP_MOTOR_CONTROL_BOARD_ID_POWERSTEP01, 1);
 8001126:	2101      	movs	r1, #1
 8001128:	2001      	movs	r0, #1
 800112a:	f003 fc19 	bl	8004960 <BSP_MotorControl_SetNbDevices>
	BSP_MotorControl_Init(BSP_MOTOR_CONTROL_BOARD_ID_POWERSTEP01, NULL);
 800112e:	2100      	movs	r1, #0
 8001130:	2001      	movs	r0, #1
 8001132:	f003 fb41 	bl	80047b8 <BSP_MotorControl_Init>
	BSP_MotorControl_AttachFlagInterrupt(MyFlagInterruptHandler);
 8001136:	480c      	ldr	r0, [pc, #48]	@ (8001168 <main+0x88>)
 8001138:	f003 fae4 	bl	8004704 <BSP_MotorControl_AttachFlagInterrupt>
	BSP_MotorControl_AttachBusyInterrupt(MyBusyInterruptHandler);
 800113c:	480b      	ldr	r0, [pc, #44]	@ (800116c <main+0x8c>)
 800113e:	f003 faff 	bl	8004740 <BSP_MotorControl_AttachBusyInterrupt>
	BSP_MotorControl_AttachErrorHandler(Error_Handler);
 8001142:	480b      	ldr	r0, [pc, #44]	@ (8001170 <main+0x90>)
 8001144:	f003 fac0 	bl	80046c8 <BSP_MotorControl_AttachErrorHandler>
	//BSP_MotorControl_Move(0, BACKWARD, 1600);

	/* Wait for the motor of device 0 ends moving */
	//BSP_MotorControl_WaitWhileActive(0);

	BSP_MotorControl_CmdSoftHiZ(0);
 8001148:	2000      	movs	r0, #0
 800114a:	f003 fbc1 	bl	80048d0 <BSP_MotorControl_CmdSoftHiZ>

	uint8_t ret = (uint8_t)BSP_MotorControl_IsDeviceBusy(0);
 800114e:	2000      	movs	r0, #0
 8001150:	f003 fbe0 	bl	8004914 <BSP_MotorControl_IsDeviceBusy>
 8001154:	4603      	mov	r3, r0
 8001156:	71fb      	strb	r3, [r7, #7]
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001158:	f009 fee8 	bl	800af2c <MX_TouchGFX_Process>
  HAL_Delay(1);
 800115c:	2001      	movs	r0, #1
 800115e:	f003 fcf3 	bl	8004b48 <HAL_Delay>
  MX_TouchGFX_Process();
 8001162:	bf00      	nop
 8001164:	e7f8      	b.n	8001158 <main+0x78>
 8001166:	bf00      	nop
 8001168:	08001251 	.word	0x08001251
 800116c:	08001285 	.word	0x08001285
 8001170:	080012ff 	.word	0x080012ff

08001174 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001174:	b580      	push	{r7, lr}
 8001176:	b094      	sub	sp, #80	@ 0x50
 8001178:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800117a:	f107 0320 	add.w	r3, r7, #32
 800117e:	2230      	movs	r2, #48	@ 0x30
 8001180:	2100      	movs	r1, #0
 8001182:	4618      	mov	r0, r3
 8001184:	f026 fead 	bl	8027ee2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001188:	f107 030c 	add.w	r3, r7, #12
 800118c:	2200      	movs	r2, #0
 800118e:	601a      	str	r2, [r3, #0]
 8001190:	605a      	str	r2, [r3, #4]
 8001192:	609a      	str	r2, [r3, #8]
 8001194:	60da      	str	r2, [r3, #12]
 8001196:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001198:	4b2b      	ldr	r3, [pc, #172]	@ (8001248 <SystemClock_Config+0xd4>)
 800119a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800119c:	4a2a      	ldr	r2, [pc, #168]	@ (8001248 <SystemClock_Config+0xd4>)
 800119e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011a2:	6413      	str	r3, [r2, #64]	@ 0x40
 80011a4:	4b28      	ldr	r3, [pc, #160]	@ (8001248 <SystemClock_Config+0xd4>)
 80011a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80011a8:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011ac:	60bb      	str	r3, [r7, #8]
 80011ae:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011b0:	4b26      	ldr	r3, [pc, #152]	@ (800124c <SystemClock_Config+0xd8>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	4a25      	ldr	r2, [pc, #148]	@ (800124c <SystemClock_Config+0xd8>)
 80011b6:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80011ba:	6013      	str	r3, [r2, #0]
 80011bc:	4b23      	ldr	r3, [pc, #140]	@ (800124c <SystemClock_Config+0xd8>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80011c4:	607b      	str	r3, [r7, #4]
 80011c6:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80011c8:	2301      	movs	r3, #1
 80011ca:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80011cc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80011d0:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80011d2:	2302      	movs	r3, #2
 80011d4:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80011d6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 80011da:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLM = 25;
 80011dc:	2319      	movs	r3, #25
 80011de:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLN = 432;
 80011e0:	f44f 73d8 	mov.w	r3, #432	@ 0x1b0
 80011e4:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80011e6:	2302      	movs	r3, #2
 80011e8:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80011ea:	2302      	movs	r3, #2
 80011ec:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011ee:	f107 0320 	add.w	r3, r7, #32
 80011f2:	4618      	mov	r0, r3
 80011f4:	f005 ff4e 	bl	8007094 <HAL_RCC_OscConfig>
 80011f8:	4603      	mov	r3, r0
 80011fa:	2b00      	cmp	r3, #0
 80011fc:	d001      	beq.n	8001202 <SystemClock_Config+0x8e>
  {
    Error_Handler();
 80011fe:	f000 f87e 	bl	80012fe <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001202:	f005 fe35 	bl	8006e70 <HAL_PWREx_EnableOverDrive>
 8001206:	4603      	mov	r3, r0
 8001208:	2b00      	cmp	r3, #0
 800120a:	d001      	beq.n	8001210 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 800120c:	f000 f877 	bl	80012fe <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001210:	230f      	movs	r3, #15
 8001212:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001214:	2302      	movs	r3, #2
 8001216:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001218:	2300      	movs	r3, #0
 800121a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 800121c:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001220:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001222:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001226:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_7) != HAL_OK)
 8001228:	f107 030c 	add.w	r3, r7, #12
 800122c:	2107      	movs	r1, #7
 800122e:	4618      	mov	r0, r3
 8001230:	f006 f9d4 	bl	80075dc <HAL_RCC_ClockConfig>
 8001234:	4603      	mov	r3, r0
 8001236:	2b00      	cmp	r3, #0
 8001238:	d001      	beq.n	800123e <SystemClock_Config+0xca>
  {
    Error_Handler();
 800123a:	f000 f860 	bl	80012fe <Error_Handler>
  }
}
 800123e:	bf00      	nop
 8001240:	3750      	adds	r7, #80	@ 0x50
 8001242:	46bd      	mov	sp, r7
 8001244:	bd80      	pop	{r7, pc}
 8001246:	bf00      	nop
 8001248:	40023800 	.word	0x40023800
 800124c:	40007000 	.word	0x40007000

08001250 <MyFlagInterruptHandler>:
  * @brief  This function is the User handler for the flag interrupt
  * @param  None
  * @retval None
  */
void MyFlagInterruptHandler(void)
{
 8001250:	b580      	push	{r7, lr}
 8001252:	b082      	sub	sp, #8
 8001254:	af00      	add	r7, sp, #0
  /* Get the value of the status register via the command GET_STATUS */
  uint16_t statusRegister = BSP_MotorControl_CmdGetStatus(0);
 8001256:	2000      	movs	r0, #0
 8001258:	f003 faf2 	bl	8004840 <BSP_MotorControl_CmdGetStatus>
 800125c:	4603      	mov	r3, r0
 800125e:	80fb      	strh	r3, [r7, #6]
  }
  else
  {
    // FORWARD
  }
  if ((statusRegister & POWERSTEP01_STATUS_MOT_STATUS) == POWERSTEP01_STATUS_MOT_STATUS_STOPPED )
 8001260:	88fb      	ldrh	r3, [r7, #6]
 8001262:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8001266:	2b00      	cmp	r3, #0
 8001268:	d008      	beq.n	800127c <MyFlagInterruptHandler+0x2c>
  {
       // MOTOR STOPPED
  }
  else  if ((statusRegister & POWERSTEP01_STATUS_MOT_STATUS) == POWERSTEP01_STATUS_MOT_STATUS_ACCELERATION )
 800126a:	88fb      	ldrh	r3, [r7, #6]
 800126c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8001270:	2b20      	cmp	r3, #32
 8001272:	d003      	beq.n	800127c <MyFlagInterruptHandler+0x2c>
  {
           // MOTOR ACCELERATION
  }
  else  if ((statusRegister & POWERSTEP01_STATUS_MOT_STATUS) == POWERSTEP01_STATUS_MOT_STATUS_DECELERATION )
 8001274:	88fb      	ldrh	r3, [r7, #6]
 8001276:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 800127a:	2b40      	cmp	r3, #64	@ 0x40
  if ((statusRegister & POWERSTEP01_STATUS_STALL_B) == 0)
  {
    //overcurrent detection
  }

}
 800127c:	bf00      	nop
 800127e:	3708      	adds	r7, #8
 8001280:	46bd      	mov	sp, r7
 8001282:	bd80      	pop	{r7, pc}

08001284 <MyBusyInterruptHandler>:
  * @brief  This function is the User handler for the busy interrupt
  * @param  None
  * @retval None
  */
void MyBusyInterruptHandler(void)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	af00      	add	r7, sp, #0

   if (BSP_MotorControl_CheckBusyHw())
 8001288:	f003 fb00 	bl	800488c <BSP_MotorControl_CheckBusyHw>
   }
   else
   {
     /* To be customized (for example Switch off a LED) */
   }
}
 800128c:	bf00      	nop
 800128e:	bd80      	pop	{r7, pc}

08001290 <MPU_Config>:
/* USER CODE END 4 */

 /* MPU Configuration */

void MPU_Config(void)
{
 8001290:	b580      	push	{r7, lr}
 8001292:	b084      	sub	sp, #16
 8001294:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 8001296:	463b      	mov	r3, r7
 8001298:	2200      	movs	r2, #0
 800129a:	601a      	str	r2, [r3, #0]
 800129c:	605a      	str	r2, [r3, #4]
 800129e:	609a      	str	r2, [r3, #8]
 80012a0:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 80012a2:	f003 fd87 	bl	8004db4 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 80012a6:	2301      	movs	r3, #1
 80012a8:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 80012aa:	2300      	movs	r3, #0
 80012ac:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x90000000;
 80012ae:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
 80012b2:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
 80012b4:	231b      	movs	r3, #27
 80012b6:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x0;
 80012b8:	2300      	movs	r3, #0
 80012ba:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 80012bc:	2300      	movs	r3, #0
 80012be:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
 80012c0:	2303      	movs	r3, #3
 80012c2:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
 80012c4:	2300      	movs	r3, #0
 80012c6:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_NOT_SHAREABLE;
 80012c8:	2300      	movs	r3, #0
 80012ca:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 80012cc:	2300      	movs	r3, #0
 80012ce:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 80012d0:	2300      	movs	r3, #0
 80012d2:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80012d4:	463b      	mov	r3, r7
 80012d6:	4618      	mov	r0, r3
 80012d8:	f003 fda4 	bl	8004e24 <HAL_MPU_ConfigRegion>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
 80012dc:	2301      	movs	r3, #1
 80012de:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.Size = MPU_REGION_SIZE_16MB;
 80012e0:	2317      	movs	r3, #23
 80012e2:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
 80012e4:	2301      	movs	r3, #1
 80012e6:	73bb      	strb	r3, [r7, #14]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 80012e8:	463b      	mov	r3, r7
 80012ea:	4618      	mov	r0, r3
 80012ec:	f003 fd9a 	bl	8004e24 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 80012f0:	2004      	movs	r0, #4
 80012f2:	f003 fd77 	bl	8004de4 <HAL_MPU_Enable>

}
 80012f6:	bf00      	nop
 80012f8:	3710      	adds	r7, #16
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bd80      	pop	{r7, pc}

080012fe <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80012fe:	b480      	push	{r7}
 8001300:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 8001302:	b672      	cpsid	i
}
 8001304:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001306:	bf00      	nop
 8001308:	e7fd      	b.n	8001306 <Error_Handler+0x8>
	...

0800130c <MX_QUADSPI_Init>:

QSPI_HandleTypeDef hqspi;

/* QUADSPI init function */
void MX_QUADSPI_Init(void)
{
 800130c:	b580      	push	{r7, lr}
 800130e:	af00      	add	r7, sp, #0
  /* USER CODE END QUADSPI_Init 0 */

  /* USER CODE BEGIN QUADSPI_Init 1 */

  /* USER CODE END QUADSPI_Init 1 */
  hqspi.Instance = QUADSPI;
 8001310:	4b12      	ldr	r3, [pc, #72]	@ (800135c <MX_QUADSPI_Init+0x50>)
 8001312:	4a13      	ldr	r2, [pc, #76]	@ (8001360 <MX_QUADSPI_Init+0x54>)
 8001314:	601a      	str	r2, [r3, #0]
  hqspi.Init.ClockPrescaler = 1;
 8001316:	4b11      	ldr	r3, [pc, #68]	@ (800135c <MX_QUADSPI_Init+0x50>)
 8001318:	2201      	movs	r2, #1
 800131a:	605a      	str	r2, [r3, #4]
  hqspi.Init.FifoThreshold = 4;
 800131c:	4b0f      	ldr	r3, [pc, #60]	@ (800135c <MX_QUADSPI_Init+0x50>)
 800131e:	2204      	movs	r2, #4
 8001320:	609a      	str	r2, [r3, #8]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8001322:	4b0e      	ldr	r3, [pc, #56]	@ (800135c <MX_QUADSPI_Init+0x50>)
 8001324:	2210      	movs	r2, #16
 8001326:	60da      	str	r2, [r3, #12]
  hqspi.Init.FlashSize = 24;
 8001328:	4b0c      	ldr	r3, [pc, #48]	@ (800135c <MX_QUADSPI_Init+0x50>)
 800132a:	2218      	movs	r2, #24
 800132c:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_6_CYCLE;
 800132e:	4b0b      	ldr	r3, [pc, #44]	@ (800135c <MX_QUADSPI_Init+0x50>)
 8001330:	f44f 62a0 	mov.w	r2, #1280	@ 0x500
 8001334:	615a      	str	r2, [r3, #20]
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 8001336:	4b09      	ldr	r3, [pc, #36]	@ (800135c <MX_QUADSPI_Init+0x50>)
 8001338:	2200      	movs	r2, #0
 800133a:	619a      	str	r2, [r3, #24]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 800133c:	4b07      	ldr	r3, [pc, #28]	@ (800135c <MX_QUADSPI_Init+0x50>)
 800133e:	2200      	movs	r2, #0
 8001340:	61da      	str	r2, [r3, #28]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8001342:	4b06      	ldr	r3, [pc, #24]	@ (800135c <MX_QUADSPI_Init+0x50>)
 8001344:	2200      	movs	r2, #0
 8001346:	621a      	str	r2, [r3, #32]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 8001348:	4804      	ldr	r0, [pc, #16]	@ (800135c <MX_QUADSPI_Init+0x50>)
 800134a:	f005 fde1 	bl	8006f10 <HAL_QSPI_Init>
 800134e:	4603      	mov	r3, r0
 8001350:	2b00      	cmp	r3, #0
 8001352:	d001      	beq.n	8001358 <MX_QUADSPI_Init+0x4c>
  {
    Error_Handler();
 8001354:	f7ff ffd3 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN QUADSPI_Init 2 */

  /* USER CODE END QUADSPI_Init 2 */

}
 8001358:	bf00      	nop
 800135a:	bd80      	pop	{r7, pc}
 800135c:	20000644 	.word	0x20000644
 8001360:	a0001000 	.word	0xa0001000

08001364 <HAL_QSPI_MspInit>:

void HAL_QSPI_MspInit(QSPI_HandleTypeDef* qspiHandle)
{
 8001364:	b580      	push	{r7, lr}
 8001366:	b08c      	sub	sp, #48	@ 0x30
 8001368:	af00      	add	r7, sp, #0
 800136a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800136c:	f107 031c 	add.w	r3, r7, #28
 8001370:	2200      	movs	r2, #0
 8001372:	601a      	str	r2, [r3, #0]
 8001374:	605a      	str	r2, [r3, #4]
 8001376:	609a      	str	r2, [r3, #8]
 8001378:	60da      	str	r2, [r3, #12]
 800137a:	611a      	str	r2, [r3, #16]
  if(qspiHandle->Instance==QUADSPI)
 800137c:	687b      	ldr	r3, [r7, #4]
 800137e:	681b      	ldr	r3, [r3, #0]
 8001380:	4a3b      	ldr	r2, [pc, #236]	@ (8001470 <HAL_QSPI_MspInit+0x10c>)
 8001382:	4293      	cmp	r3, r2
 8001384:	d170      	bne.n	8001468 <HAL_QSPI_MspInit+0x104>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* QUADSPI clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001386:	4b3b      	ldr	r3, [pc, #236]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 8001388:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800138a:	4a3a      	ldr	r2, [pc, #232]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 800138c:	f043 0302 	orr.w	r3, r3, #2
 8001390:	6393      	str	r3, [r2, #56]	@ 0x38
 8001392:	4b38      	ldr	r3, [pc, #224]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 8001394:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8001396:	f003 0302 	and.w	r3, r3, #2
 800139a:	61bb      	str	r3, [r7, #24]
 800139c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOE_CLK_ENABLE();
 800139e:	4b35      	ldr	r3, [pc, #212]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013a2:	4a34      	ldr	r2, [pc, #208]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013a4:	f043 0310 	orr.w	r3, r3, #16
 80013a8:	6313      	str	r3, [r2, #48]	@ 0x30
 80013aa:	4b32      	ldr	r3, [pc, #200]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ae:	f003 0310 	and.w	r3, r3, #16
 80013b2:	617b      	str	r3, [r7, #20]
 80013b4:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80013b6:	4b2f      	ldr	r3, [pc, #188]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013ba:	4a2e      	ldr	r2, [pc, #184]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013bc:	f043 0302 	orr.w	r3, r3, #2
 80013c0:	6313      	str	r3, [r2, #48]	@ 0x30
 80013c2:	4b2c      	ldr	r3, [pc, #176]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013c6:	f003 0302 	and.w	r3, r3, #2
 80013ca:	613b      	str	r3, [r7, #16]
 80013cc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80013ce:	4b29      	ldr	r3, [pc, #164]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013d2:	4a28      	ldr	r2, [pc, #160]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013d4:	f043 0308 	orr.w	r3, r3, #8
 80013d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80013da:	4b26      	ldr	r3, [pc, #152]	@ (8001474 <HAL_QSPI_MspInit+0x110>)
 80013dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013de:	f003 0308 	and.w	r3, r3, #8
 80013e2:	60fb      	str	r3, [r7, #12]
 80013e4:	68fb      	ldr	r3, [r7, #12]
    PB2     ------> QUADSPI_CLK
    PD12     ------> QUADSPI_BK1_IO1
    PD13     ------> QUADSPI_BK1_IO3
    PD11     ------> QUADSPI_BK1_IO0
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80013e6:	2304      	movs	r3, #4
 80013e8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80013ea:	2302      	movs	r3, #2
 80013ec:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80013ee:	2300      	movs	r3, #0
 80013f0:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80013f2:	2303      	movs	r3, #3
 80013f4:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 80013f6:	2309      	movs	r3, #9
 80013f8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80013fa:	f107 031c 	add.w	r3, r7, #28
 80013fe:	4619      	mov	r1, r3
 8001400:	481d      	ldr	r0, [pc, #116]	@ (8001478 <HAL_QSPI_MspInit+0x114>)
 8001402:	f004 f82d 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6;
 8001406:	2340      	movs	r3, #64	@ 0x40
 8001408:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800140a:	2302      	movs	r3, #2
 800140c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800140e:	2300      	movs	r3, #0
 8001410:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001412:	2303      	movs	r3, #3
 8001414:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 8001416:	230a      	movs	r3, #10
 8001418:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800141a:	f107 031c 	add.w	r3, r7, #28
 800141e:	4619      	mov	r1, r3
 8001420:	4816      	ldr	r0, [pc, #88]	@ (800147c <HAL_QSPI_MspInit+0x118>)
 8001422:	f004 f81d 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001426:	2304      	movs	r3, #4
 8001428:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800142a:	2302      	movs	r3, #2
 800142c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800142e:	2300      	movs	r3, #0
 8001430:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001432:	2303      	movs	r3, #3
 8001434:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001436:	2309      	movs	r3, #9
 8001438:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800143a:	f107 031c 	add.w	r3, r7, #28
 800143e:	4619      	mov	r1, r3
 8001440:	480e      	ldr	r0, [pc, #56]	@ (800147c <HAL_QSPI_MspInit+0x118>)
 8001442:	f004 f80d 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_11;
 8001446:	f44f 5360 	mov.w	r3, #14336	@ 0x3800
 800144a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800144c:	2302      	movs	r3, #2
 800144e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001450:	2300      	movs	r3, #0
 8001452:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001454:	2303      	movs	r3, #3
 8001456:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 8001458:	2309      	movs	r3, #9
 800145a:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800145c:	f107 031c 	add.w	r3, r7, #28
 8001460:	4619      	mov	r1, r3
 8001462:	4807      	ldr	r0, [pc, #28]	@ (8001480 <HAL_QSPI_MspInit+0x11c>)
 8001464:	f003 fffc 	bl	8005460 <HAL_GPIO_Init>

  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }
}
 8001468:	bf00      	nop
 800146a:	3730      	adds	r7, #48	@ 0x30
 800146c:	46bd      	mov	sp, r7
 800146e:	bd80      	pop	{r7, pc}
 8001470:	a0001000 	.word	0xa0001000
 8001474:	40023800 	.word	0x40023800
 8001478:	40021000 	.word	0x40021000
 800147c:	40020400 	.word	0x40020400
 8001480:	40020c00 	.word	0x40020c00

08001484 <MX_SPI2_Init>:

SPI_HandleTypeDef hspi2;

/* SPI2 init function */
void MX_SPI2_Init(void)
{
 8001484:	b580      	push	{r7, lr}
 8001486:	af00      	add	r7, sp, #0
  /* USER CODE END SPI2_Init 0 */

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  hspi2.Instance = SPI2;
 8001488:	4b1b      	ldr	r3, [pc, #108]	@ (80014f8 <MX_SPI2_Init+0x74>)
 800148a:	4a1c      	ldr	r2, [pc, #112]	@ (80014fc <MX_SPI2_Init+0x78>)
 800148c:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800148e:	4b1a      	ldr	r3, [pc, #104]	@ (80014f8 <MX_SPI2_Init+0x74>)
 8001490:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001494:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001496:	4b18      	ldr	r3, [pc, #96]	@ (80014f8 <MX_SPI2_Init+0x74>)
 8001498:	2200      	movs	r2, #0
 800149a:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 800149c:	4b16      	ldr	r3, [pc, #88]	@ (80014f8 <MX_SPI2_Init+0x74>)
 800149e:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 80014a2:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_HIGH;
 80014a4:	4b14      	ldr	r3, [pc, #80]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014a6:	2202      	movs	r2, #2
 80014a8:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_2EDGE;
 80014aa:	4b13      	ldr	r3, [pc, #76]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014ac:	2201      	movs	r2, #1
 80014ae:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80014b0:	4b11      	ldr	r3, [pc, #68]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014b2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80014b6:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32;
 80014b8:	4b0f      	ldr	r3, [pc, #60]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014ba:	2220      	movs	r2, #32
 80014bc:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 80014be:	4b0e      	ldr	r3, [pc, #56]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014c0:	2200      	movs	r2, #0
 80014c2:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 80014c4:	4b0c      	ldr	r3, [pc, #48]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014c6:	2200      	movs	r2, #0
 80014c8:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80014ca:	4b0b      	ldr	r3, [pc, #44]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014cc:	2200      	movs	r2, #0
 80014ce:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 7;
 80014d0:	4b09      	ldr	r3, [pc, #36]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014d2:	2207      	movs	r2, #7
 80014d4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 80014d6:	4b08      	ldr	r3, [pc, #32]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014d8:	2200      	movs	r2, #0
 80014da:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 80014dc:	4b06      	ldr	r3, [pc, #24]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014de:	2200      	movs	r2, #0
 80014e0:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 80014e2:	4805      	ldr	r0, [pc, #20]	@ (80014f8 <MX_SPI2_Init+0x74>)
 80014e4:	f006 fee2 	bl	80082ac <HAL_SPI_Init>
 80014e8:	4603      	mov	r3, r0
 80014ea:	2b00      	cmp	r3, #0
 80014ec:	d001      	beq.n	80014f2 <MX_SPI2_Init+0x6e>
  {
    Error_Handler();
 80014ee:	f7ff ff06 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 80014f2:	bf00      	nop
 80014f4:	bd80      	pop	{r7, pc}
 80014f6:	bf00      	nop
 80014f8:	20000690 	.word	0x20000690
 80014fc:	40003800 	.word	0x40003800

08001500 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8001500:	b580      	push	{r7, lr}
 8001502:	b08a      	sub	sp, #40	@ 0x28
 8001504:	af00      	add	r7, sp, #0
 8001506:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001508:	f107 0314 	add.w	r3, r7, #20
 800150c:	2200      	movs	r2, #0
 800150e:	601a      	str	r2, [r3, #0]
 8001510:	605a      	str	r2, [r3, #4]
 8001512:	609a      	str	r2, [r3, #8]
 8001514:	60da      	str	r2, [r3, #12]
 8001516:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI2)
 8001518:	687b      	ldr	r3, [r7, #4]
 800151a:	681b      	ldr	r3, [r3, #0]
 800151c:	4a25      	ldr	r2, [pc, #148]	@ (80015b4 <HAL_SPI_MspInit+0xb4>)
 800151e:	4293      	cmp	r3, r2
 8001520:	d144      	bne.n	80015ac <HAL_SPI_MspInit+0xac>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* SPI2 clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001522:	4b25      	ldr	r3, [pc, #148]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001524:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001526:	4a24      	ldr	r2, [pc, #144]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001528:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800152c:	6413      	str	r3, [r2, #64]	@ 0x40
 800152e:	4b22      	ldr	r3, [pc, #136]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001530:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001532:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001536:	613b      	str	r3, [r7, #16]
 8001538:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOI_CLK_ENABLE();
 800153a:	4b1f      	ldr	r3, [pc, #124]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 800153c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800153e:	4a1e      	ldr	r2, [pc, #120]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001540:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001544:	6313      	str	r3, [r2, #48]	@ 0x30
 8001546:	4b1c      	ldr	r3, [pc, #112]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001548:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800154a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800154e:	60fb      	str	r3, [r7, #12]
 8001550:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001552:	4b19      	ldr	r3, [pc, #100]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001554:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001556:	4a18      	ldr	r2, [pc, #96]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001558:	f043 0302 	orr.w	r3, r3, #2
 800155c:	6313      	str	r3, [r2, #48]	@ 0x30
 800155e:	4b16      	ldr	r3, [pc, #88]	@ (80015b8 <HAL_SPI_MspInit+0xb8>)
 8001560:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001562:	f003 0302 	and.w	r3, r3, #2
 8001566:	60bb      	str	r3, [r7, #8]
 8001568:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PI1     ------> SPI2_SCK
    PB14     ------> SPI2_MISO
    PB15     ------> SPI2_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 800156a:	2302      	movs	r3, #2
 800156c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800156e:	2302      	movs	r3, #2
 8001570:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001572:	2300      	movs	r3, #0
 8001574:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001576:	2303      	movs	r3, #3
 8001578:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800157a:	2305      	movs	r3, #5
 800157c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800157e:	f107 0314 	add.w	r3, r7, #20
 8001582:	4619      	mov	r1, r3
 8001584:	480d      	ldr	r0, [pc, #52]	@ (80015bc <HAL_SPI_MspInit+0xbc>)
 8001586:	f003 ff6b 	bl	8005460 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 800158a:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 800158e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001590:	2302      	movs	r3, #2
 8001592:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	2300      	movs	r3, #0
 8001596:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001598:	2303      	movs	r3, #3
 800159a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 800159c:	2305      	movs	r3, #5
 800159e:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80015a0:	f107 0314 	add.w	r3, r7, #20
 80015a4:	4619      	mov	r1, r3
 80015a6:	4806      	ldr	r0, [pc, #24]	@ (80015c0 <HAL_SPI_MspInit+0xc0>)
 80015a8:	f003 ff5a 	bl	8005460 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }
}
 80015ac:	bf00      	nop
 80015ae:	3728      	adds	r7, #40	@ 0x28
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}
 80015b4:	40003800 	.word	0x40003800
 80015b8:	40023800 	.word	0x40023800
 80015bc:	40022000 	.word	0x40022000
 80015c0:	40020400 	.word	0x40020400

080015c4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80015c4:	b480      	push	{r7}
 80015c6:	b083      	sub	sp, #12
 80015c8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_PWR_CLK_ENABLE();
 80015ca:	4b0f      	ldr	r3, [pc, #60]	@ (8001608 <HAL_MspInit+0x44>)
 80015cc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80015ce:	4a0e      	ldr	r2, [pc, #56]	@ (8001608 <HAL_MspInit+0x44>)
 80015d0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80015d4:	6413      	str	r3, [r2, #64]	@ 0x40
 80015d6:	4b0c      	ldr	r3, [pc, #48]	@ (8001608 <HAL_MspInit+0x44>)
 80015d8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80015da:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80015de:	607b      	str	r3, [r7, #4]
 80015e0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80015e2:	4b09      	ldr	r3, [pc, #36]	@ (8001608 <HAL_MspInit+0x44>)
 80015e4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80015e6:	4a08      	ldr	r2, [pc, #32]	@ (8001608 <HAL_MspInit+0x44>)
 80015e8:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80015ec:	6453      	str	r3, [r2, #68]	@ 0x44
 80015ee:	4b06      	ldr	r3, [pc, #24]	@ (8001608 <HAL_MspInit+0x44>)
 80015f0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80015f2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80015f6:	603b      	str	r3, [r7, #0]
 80015f8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015fa:	bf00      	nop
 80015fc:	370c      	adds	r7, #12
 80015fe:	46bd      	mov	sp, r7
 8001600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001604:	4770      	bx	lr
 8001606:	bf00      	nop
 8001608:	40023800 	.word	0x40023800

0800160c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800160c:	b480      	push	{r7}
 800160e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001610:	bf00      	nop
 8001612:	e7fd      	b.n	8001610 <NMI_Handler+0x4>

08001614 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001614:	b480      	push	{r7}
 8001616:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001618:	bf00      	nop
 800161a:	e7fd      	b.n	8001618 <HardFault_Handler+0x4>

0800161c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800161c:	b480      	push	{r7}
 800161e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001620:	bf00      	nop
 8001622:	e7fd      	b.n	8001620 <MemManage_Handler+0x4>

08001624 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001624:	b480      	push	{r7}
 8001626:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001628:	bf00      	nop
 800162a:	e7fd      	b.n	8001628 <BusFault_Handler+0x4>

0800162c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800162c:	b480      	push	{r7}
 800162e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001630:	bf00      	nop
 8001632:	e7fd      	b.n	8001630 <UsageFault_Handler+0x4>

08001634 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001634:	b480      	push	{r7}
 8001636:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001638:	bf00      	nop
 800163a:	46bd      	mov	sp, r7
 800163c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001640:	4770      	bx	lr

08001642 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001642:	b480      	push	{r7}
 8001644:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001646:	bf00      	nop
 8001648:	46bd      	mov	sp, r7
 800164a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800164e:	4770      	bx	lr

08001650 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001650:	b480      	push	{r7}
 8001652:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001654:	bf00      	nop
 8001656:	46bd      	mov	sp, r7
 8001658:	f85d 7b04 	ldr.w	r7, [sp], #4
 800165c:	4770      	bx	lr

0800165e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800165e:	b580      	push	{r7, lr}
 8001660:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001662:	f003 fa51 	bl	8004b08 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001666:	bf00      	nop
 8001668:	bd80      	pop	{r7, pc}

0800166a <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 800166a:	b580      	push	{r7, lr}
 800166c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 800166e:	2040      	movs	r0, #64	@ 0x40
 8001670:	f004 f9e0 	bl	8005a34 <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 8001674:	2080      	movs	r0, #128	@ 0x80
 8001676:	f004 f9dd 	bl	8005a34 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 800167a:	bf00      	nop
 800167c:	bd80      	pop	{r7, pc}
	...

08001680 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 8001680:	b580      	push	{r7, lr}
 8001682:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 8001684:	4802      	ldr	r0, [pc, #8]	@ (8001690 <TIM2_IRQHandler+0x10>)
 8001686:	f007 fdd5 	bl	8009234 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 800168a:	bf00      	nop
 800168c:	bd80      	pop	{r7, pc}
 800168e:	bf00      	nop
 8001690:	20000720 	.word	0x20000720

08001694 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001694:	b580      	push	{r7, lr}
 8001696:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001698:	4802      	ldr	r0, [pc, #8]	@ (80016a4 <LTDC_IRQHandler+0x10>)
 800169a:	f005 f921 	bl	80068e0 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 800169e:	bf00      	nop
 80016a0:	bd80      	pop	{r7, pc}
 80016a2:	bf00      	nop
 80016a4:	2000059c 	.word	0x2000059c

080016a8 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 80016a8:	b580      	push	{r7, lr}
 80016aa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80016ac:	4802      	ldr	r0, [pc, #8]	@ (80016b8 <DMA2D_IRQHandler+0x10>)
 80016ae:	f003 fd35 	bl	800511c <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 80016b2:	bf00      	nop
 80016b4:	bd80      	pop	{r7, pc}
 80016b6:	bf00      	nop
 80016b8:	200004c0 	.word	0x200004c0

080016bc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80016bc:	b480      	push	{r7}
 80016be:	af00      	add	r7, sp, #0
  return 1;
 80016c0:	2301      	movs	r3, #1
}
 80016c2:	4618      	mov	r0, r3
 80016c4:	46bd      	mov	sp, r7
 80016c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016ca:	4770      	bx	lr

080016cc <_kill>:

int _kill(int pid, int sig)
{
 80016cc:	b580      	push	{r7, lr}
 80016ce:	b082      	sub	sp, #8
 80016d0:	af00      	add	r7, sp, #0
 80016d2:	6078      	str	r0, [r7, #4]
 80016d4:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80016d6:	f026 fca7 	bl	8028028 <__errno>
 80016da:	4603      	mov	r3, r0
 80016dc:	2216      	movs	r2, #22
 80016de:	601a      	str	r2, [r3, #0]
  return -1;
 80016e0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80016e4:	4618      	mov	r0, r3
 80016e6:	3708      	adds	r7, #8
 80016e8:	46bd      	mov	sp, r7
 80016ea:	bd80      	pop	{r7, pc}

080016ec <_exit>:

void _exit (int status)
{
 80016ec:	b580      	push	{r7, lr}
 80016ee:	b082      	sub	sp, #8
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80016f4:	f04f 31ff 	mov.w	r1, #4294967295
 80016f8:	6878      	ldr	r0, [r7, #4]
 80016fa:	f7ff ffe7 	bl	80016cc <_kill>
  while (1) {}    /* Make sure we hang here */
 80016fe:	bf00      	nop
 8001700:	e7fd      	b.n	80016fe <_exit+0x12>

08001702 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001702:	b580      	push	{r7, lr}
 8001704:	b086      	sub	sp, #24
 8001706:	af00      	add	r7, sp, #0
 8001708:	60f8      	str	r0, [r7, #12]
 800170a:	60b9      	str	r1, [r7, #8]
 800170c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800170e:	2300      	movs	r3, #0
 8001710:	617b      	str	r3, [r7, #20]
 8001712:	e00a      	b.n	800172a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001714:	f3af 8000 	nop.w
 8001718:	4601      	mov	r1, r0
 800171a:	68bb      	ldr	r3, [r7, #8]
 800171c:	1c5a      	adds	r2, r3, #1
 800171e:	60ba      	str	r2, [r7, #8]
 8001720:	b2ca      	uxtb	r2, r1
 8001722:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001724:	697b      	ldr	r3, [r7, #20]
 8001726:	3301      	adds	r3, #1
 8001728:	617b      	str	r3, [r7, #20]
 800172a:	697a      	ldr	r2, [r7, #20]
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	429a      	cmp	r2, r3
 8001730:	dbf0      	blt.n	8001714 <_read+0x12>
  }

  return len;
 8001732:	687b      	ldr	r3, [r7, #4]
}
 8001734:	4618      	mov	r0, r3
 8001736:	3718      	adds	r7, #24
 8001738:	46bd      	mov	sp, r7
 800173a:	bd80      	pop	{r7, pc}

0800173c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800173c:	b580      	push	{r7, lr}
 800173e:	b086      	sub	sp, #24
 8001740:	af00      	add	r7, sp, #0
 8001742:	60f8      	str	r0, [r7, #12]
 8001744:	60b9      	str	r1, [r7, #8]
 8001746:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001748:	2300      	movs	r3, #0
 800174a:	617b      	str	r3, [r7, #20]
 800174c:	e009      	b.n	8001762 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800174e:	68bb      	ldr	r3, [r7, #8]
 8001750:	1c5a      	adds	r2, r3, #1
 8001752:	60ba      	str	r2, [r7, #8]
 8001754:	781b      	ldrb	r3, [r3, #0]
 8001756:	4618      	mov	r0, r3
 8001758:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800175c:	697b      	ldr	r3, [r7, #20]
 800175e:	3301      	adds	r3, #1
 8001760:	617b      	str	r3, [r7, #20]
 8001762:	697a      	ldr	r2, [r7, #20]
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	429a      	cmp	r2, r3
 8001768:	dbf1      	blt.n	800174e <_write+0x12>
  }
  return len;
 800176a:	687b      	ldr	r3, [r7, #4]
}
 800176c:	4618      	mov	r0, r3
 800176e:	3718      	adds	r7, #24
 8001770:	46bd      	mov	sp, r7
 8001772:	bd80      	pop	{r7, pc}

08001774 <_close>:

int _close(int file)
{
 8001774:	b480      	push	{r7}
 8001776:	b083      	sub	sp, #12
 8001778:	af00      	add	r7, sp, #0
 800177a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800177c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001780:	4618      	mov	r0, r3
 8001782:	370c      	adds	r7, #12
 8001784:	46bd      	mov	sp, r7
 8001786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800178a:	4770      	bx	lr

0800178c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800178c:	b480      	push	{r7}
 800178e:	b083      	sub	sp, #12
 8001790:	af00      	add	r7, sp, #0
 8001792:	6078      	str	r0, [r7, #4]
 8001794:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001796:	683b      	ldr	r3, [r7, #0]
 8001798:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800179c:	605a      	str	r2, [r3, #4]
  return 0;
 800179e:	2300      	movs	r3, #0
}
 80017a0:	4618      	mov	r0, r3
 80017a2:	370c      	adds	r7, #12
 80017a4:	46bd      	mov	sp, r7
 80017a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017aa:	4770      	bx	lr

080017ac <_isatty>:

int _isatty(int file)
{
 80017ac:	b480      	push	{r7}
 80017ae:	b083      	sub	sp, #12
 80017b0:	af00      	add	r7, sp, #0
 80017b2:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80017b4:	2301      	movs	r3, #1
}
 80017b6:	4618      	mov	r0, r3
 80017b8:	370c      	adds	r7, #12
 80017ba:	46bd      	mov	sp, r7
 80017bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017c0:	4770      	bx	lr

080017c2 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80017c2:	b480      	push	{r7}
 80017c4:	b085      	sub	sp, #20
 80017c6:	af00      	add	r7, sp, #0
 80017c8:	60f8      	str	r0, [r7, #12]
 80017ca:	60b9      	str	r1, [r7, #8]
 80017cc:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80017ce:	2300      	movs	r3, #0
}
 80017d0:	4618      	mov	r0, r3
 80017d2:	3714      	adds	r7, #20
 80017d4:	46bd      	mov	sp, r7
 80017d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017da:	4770      	bx	lr

080017dc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80017dc:	b580      	push	{r7, lr}
 80017de:	b086      	sub	sp, #24
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80017e4:	4a14      	ldr	r2, [pc, #80]	@ (8001838 <_sbrk+0x5c>)
 80017e6:	4b15      	ldr	r3, [pc, #84]	@ (800183c <_sbrk+0x60>)
 80017e8:	1ad3      	subs	r3, r2, r3
 80017ea:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80017ec:	697b      	ldr	r3, [r7, #20]
 80017ee:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80017f0:	4b13      	ldr	r3, [pc, #76]	@ (8001840 <_sbrk+0x64>)
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d102      	bne.n	80017fe <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80017f8:	4b11      	ldr	r3, [pc, #68]	@ (8001840 <_sbrk+0x64>)
 80017fa:	4a12      	ldr	r2, [pc, #72]	@ (8001844 <_sbrk+0x68>)
 80017fc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80017fe:	4b10      	ldr	r3, [pc, #64]	@ (8001840 <_sbrk+0x64>)
 8001800:	681a      	ldr	r2, [r3, #0]
 8001802:	687b      	ldr	r3, [r7, #4]
 8001804:	4413      	add	r3, r2
 8001806:	693a      	ldr	r2, [r7, #16]
 8001808:	429a      	cmp	r2, r3
 800180a:	d207      	bcs.n	800181c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800180c:	f026 fc0c 	bl	8028028 <__errno>
 8001810:	4603      	mov	r3, r0
 8001812:	220c      	movs	r2, #12
 8001814:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001816:	f04f 33ff 	mov.w	r3, #4294967295
 800181a:	e009      	b.n	8001830 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800181c:	4b08      	ldr	r3, [pc, #32]	@ (8001840 <_sbrk+0x64>)
 800181e:	681b      	ldr	r3, [r3, #0]
 8001820:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001822:	4b07      	ldr	r3, [pc, #28]	@ (8001840 <_sbrk+0x64>)
 8001824:	681a      	ldr	r2, [r3, #0]
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	4413      	add	r3, r2
 800182a:	4a05      	ldr	r2, [pc, #20]	@ (8001840 <_sbrk+0x64>)
 800182c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800182e:	68fb      	ldr	r3, [r7, #12]
}
 8001830:	4618      	mov	r0, r3
 8001832:	3718      	adds	r7, #24
 8001834:	46bd      	mov	sp, r7
 8001836:	bd80      	pop	{r7, pc}
 8001838:	20050000 	.word	0x20050000
 800183c:	00000a00 	.word	0x00000a00
 8001840:	2000071c 	.word	0x2000071c
 8001844:	200046c8 	.word	0x200046c8

08001848 <SystemInit>:
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001848:	b480      	push	{r7}
 800184a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800184c:	4b06      	ldr	r3, [pc, #24]	@ (8001868 <SystemInit+0x20>)
 800184e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001852:	4a05      	ldr	r2, [pc, #20]	@ (8001868 <SystemInit+0x20>)
 8001854:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001858:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800185c:	bf00      	nop
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr
 8001866:	bf00      	nop
 8001868:	e000ed00 	.word	0xe000ed00

0800186c <MX_TIM2_Init>:

TIM_HandleTypeDef htim2;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 800186c:	b580      	push	{r7, lr}
 800186e:	b08e      	sub	sp, #56	@ 0x38
 8001870:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001872:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001876:	2200      	movs	r2, #0
 8001878:	601a      	str	r2, [r3, #0]
 800187a:	605a      	str	r2, [r3, #4]
 800187c:	609a      	str	r2, [r3, #8]
 800187e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001880:	f107 031c 	add.w	r3, r7, #28
 8001884:	2200      	movs	r2, #0
 8001886:	601a      	str	r2, [r3, #0]
 8001888:	605a      	str	r2, [r3, #4]
 800188a:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800188c:	463b      	mov	r3, r7
 800188e:	2200      	movs	r2, #0
 8001890:	601a      	str	r2, [r3, #0]
 8001892:	605a      	str	r2, [r3, #4]
 8001894:	609a      	str	r2, [r3, #8]
 8001896:	60da      	str	r2, [r3, #12]
 8001898:	611a      	str	r2, [r3, #16]
 800189a:	615a      	str	r2, [r3, #20]
 800189c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800189e:	4b2d      	ldr	r3, [pc, #180]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018a0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80018a4:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 80018a6:	4b2b      	ldr	r3, [pc, #172]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018a8:	2200      	movs	r2, #0
 80018aa:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80018ac:	4b29      	ldr	r3, [pc, #164]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018ae:	2200      	movs	r2, #0
 80018b0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 0;
 80018b2:	4b28      	ldr	r3, [pc, #160]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018b4:	2200      	movs	r2, #0
 80018b6:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80018b8:	4b26      	ldr	r3, [pc, #152]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018ba:	2200      	movs	r2, #0
 80018bc:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80018be:	4b25      	ldr	r3, [pc, #148]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018c0:	2200      	movs	r2, #0
 80018c2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80018c4:	4823      	ldr	r0, [pc, #140]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018c6:	f007 f9cd 	bl	8008c64 <HAL_TIM_Base_Init>
 80018ca:	4603      	mov	r3, r0
 80018cc:	2b00      	cmp	r3, #0
 80018ce:	d001      	beq.n	80018d4 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80018d0:	f7ff fd15 	bl	80012fe <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80018d4:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80018d8:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80018da:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80018de:	4619      	mov	r1, r3
 80018e0:	481c      	ldr	r0, [pc, #112]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018e2:	f007 fee5 	bl	80096b0 <HAL_TIM_ConfigClockSource>
 80018e6:	4603      	mov	r3, r0
 80018e8:	2b00      	cmp	r3, #0
 80018ea:	d001      	beq.n	80018f0 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80018ec:	f7ff fd07 	bl	80012fe <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80018f0:	4818      	ldr	r0, [pc, #96]	@ (8001954 <MX_TIM2_Init+0xe8>)
 80018f2:	f007 fa1b 	bl	8008d2c <HAL_TIM_PWM_Init>
 80018f6:	4603      	mov	r3, r0
 80018f8:	2b00      	cmp	r3, #0
 80018fa:	d001      	beq.n	8001900 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80018fc:	f7ff fcff 	bl	80012fe <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001900:	2300      	movs	r3, #0
 8001902:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001904:	2300      	movs	r3, #0
 8001906:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001908:	f107 031c 	add.w	r3, r7, #28
 800190c:	4619      	mov	r1, r3
 800190e:	4811      	ldr	r0, [pc, #68]	@ (8001954 <MX_TIM2_Init+0xe8>)
 8001910:	f008 fc24 	bl	800a15c <HAL_TIMEx_MasterConfigSynchronization>
 8001914:	4603      	mov	r3, r0
 8001916:	2b00      	cmp	r3, #0
 8001918:	d001      	beq.n	800191e <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800191a:	f7ff fcf0 	bl	80012fe <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800191e:	2360      	movs	r3, #96	@ 0x60
 8001920:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 8001922:	2300      	movs	r3, #0
 8001924:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001926:	2300      	movs	r3, #0
 8001928:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800192a:	2300      	movs	r3, #0
 800192c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800192e:	463b      	mov	r3, r7
 8001930:	2200      	movs	r2, #0
 8001932:	4619      	mov	r1, r3
 8001934:	4807      	ldr	r0, [pc, #28]	@ (8001954 <MX_TIM2_Init+0xe8>)
 8001936:	f007 fda7 	bl	8009488 <HAL_TIM_PWM_ConfigChannel>
 800193a:	4603      	mov	r3, r0
 800193c:	2b00      	cmp	r3, #0
 800193e:	d001      	beq.n	8001944 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8001940:	f7ff fcdd 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001944:	4803      	ldr	r0, [pc, #12]	@ (8001954 <MX_TIM2_Init+0xe8>)
 8001946:	f000 f82b 	bl	80019a0 <HAL_TIM_MspPostInit>

}
 800194a:	bf00      	nop
 800194c:	3738      	adds	r7, #56	@ 0x38
 800194e:	46bd      	mov	sp, r7
 8001950:	bd80      	pop	{r7, pc}
 8001952:	bf00      	nop
 8001954:	20000720 	.word	0x20000720

08001958 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001958:	b580      	push	{r7, lr}
 800195a:	b084      	sub	sp, #16
 800195c:	af00      	add	r7, sp, #0
 800195e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001968:	d113      	bne.n	8001992 <HAL_TIM_Base_MspInit+0x3a>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800196a:	4b0c      	ldr	r3, [pc, #48]	@ (800199c <HAL_TIM_Base_MspInit+0x44>)
 800196c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800196e:	4a0b      	ldr	r2, [pc, #44]	@ (800199c <HAL_TIM_Base_MspInit+0x44>)
 8001970:	f043 0301 	orr.w	r3, r3, #1
 8001974:	6413      	str	r3, [r2, #64]	@ 0x40
 8001976:	4b09      	ldr	r3, [pc, #36]	@ (800199c <HAL_TIM_Base_MspInit+0x44>)
 8001978:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800197a:	f003 0301 	and.w	r3, r3, #1
 800197e:	60fb      	str	r3, [r7, #12]
 8001980:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 8001982:	2200      	movs	r2, #0
 8001984:	2100      	movs	r1, #0
 8001986:	201c      	movs	r0, #28
 8001988:	f003 f9dd 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 800198c:	201c      	movs	r0, #28
 800198e:	f003 f9f6 	bl	8004d7e <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 8001992:	bf00      	nop
 8001994:	3710      	adds	r7, #16
 8001996:	46bd      	mov	sp, r7
 8001998:	bd80      	pop	{r7, pc}
 800199a:	bf00      	nop
 800199c:	40023800 	.word	0x40023800

080019a0 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 80019a0:	b580      	push	{r7, lr}
 80019a2:	b088      	sub	sp, #32
 80019a4:	af00      	add	r7, sp, #0
 80019a6:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019a8:	f107 030c 	add.w	r3, r7, #12
 80019ac:	2200      	movs	r2, #0
 80019ae:	601a      	str	r2, [r3, #0]
 80019b0:	605a      	str	r2, [r3, #4]
 80019b2:	609a      	str	r2, [r3, #8]
 80019b4:	60da      	str	r2, [r3, #12]
 80019b6:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM2)
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80019c0:	d11c      	bne.n	80019fc <HAL_TIM_MspPostInit+0x5c>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80019c2:	4b10      	ldr	r3, [pc, #64]	@ (8001a04 <HAL_TIM_MspPostInit+0x64>)
 80019c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019c6:	4a0f      	ldr	r2, [pc, #60]	@ (8001a04 <HAL_TIM_MspPostInit+0x64>)
 80019c8:	f043 0301 	orr.w	r3, r3, #1
 80019cc:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ce:	4b0d      	ldr	r3, [pc, #52]	@ (8001a04 <HAL_TIM_MspPostInit+0x64>)
 80019d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019d2:	f003 0301 	and.w	r3, r3, #1
 80019d6:	60bb      	str	r3, [r7, #8]
 80019d8:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 80019da:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80019de:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80019e0:	2302      	movs	r3, #2
 80019e2:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e4:	2300      	movs	r3, #0
 80019e6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80019e8:	2300      	movs	r3, #0
 80019ea:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80019ec:	2301      	movs	r3, #1
 80019ee:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80019f0:	f107 030c 	add.w	r3, r7, #12
 80019f4:	4619      	mov	r1, r3
 80019f6:	4804      	ldr	r0, [pc, #16]	@ (8001a08 <HAL_TIM_MspPostInit+0x68>)
 80019f8:	f003 fd32 	bl	8005460 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 80019fc:	bf00      	nop
 80019fe:	3720      	adds	r7, #32
 8001a00:	46bd      	mov	sp, r7
 8001a02:	bd80      	pop	{r7, pc}
 8001a04:	40023800 	.word	0x40023800
 8001a08:	40020000 	.word	0x40020000

08001a0c <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8001a0c:	b580      	push	{r7, lr}
 8001a0e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001a10:	4b14      	ldr	r3, [pc, #80]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a12:	4a15      	ldr	r2, [pc, #84]	@ (8001a68 <MX_USART2_UART_Init+0x5c>)
 8001a14:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001a16:	4b13      	ldr	r3, [pc, #76]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a18:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001a1c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001a1e:	4b11      	ldr	r3, [pc, #68]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a20:	2200      	movs	r2, #0
 8001a22:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001a24:	4b0f      	ldr	r3, [pc, #60]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a26:	2200      	movs	r2, #0
 8001a28:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001a2a:	4b0e      	ldr	r3, [pc, #56]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a2c:	2200      	movs	r2, #0
 8001a2e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001a30:	4b0c      	ldr	r3, [pc, #48]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a32:	220c      	movs	r2, #12
 8001a34:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001a36:	4b0b      	ldr	r3, [pc, #44]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a38:	2200      	movs	r2, #0
 8001a3a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001a3c:	4b09      	ldr	r3, [pc, #36]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a3e:	2200      	movs	r2, #0
 8001a40:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001a42:	4b08      	ldr	r3, [pc, #32]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a44:	2200      	movs	r2, #0
 8001a46:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001a48:	4b06      	ldr	r3, [pc, #24]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a4a:	2200      	movs	r2, #0
 8001a4c:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001a4e:	4805      	ldr	r0, [pc, #20]	@ (8001a64 <MX_USART2_UART_Init+0x58>)
 8001a50:	f008 fc3a 	bl	800a2c8 <HAL_UART_Init>
 8001a54:	4603      	mov	r3, r0
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d001      	beq.n	8001a5e <MX_USART2_UART_Init+0x52>
  {
    Error_Handler();
 8001a5a:	f7ff fc50 	bl	80012fe <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001a5e:	bf00      	nop
 8001a60:	bd80      	pop	{r7, pc}
 8001a62:	bf00      	nop
 8001a64:	200007dc 	.word	0x200007dc
 8001a68:	40004400 	.word	0x40004400

08001a6c <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001a6c:	b580      	push	{r7, lr}
 8001a6e:	b0aa      	sub	sp, #168	@ 0xa8
 8001a70:	af00      	add	r7, sp, #0
 8001a72:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a74:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001a78:	2200      	movs	r2, #0
 8001a7a:	601a      	str	r2, [r3, #0]
 8001a7c:	605a      	str	r2, [r3, #4]
 8001a7e:	609a      	str	r2, [r3, #8]
 8001a80:	60da      	str	r2, [r3, #12]
 8001a82:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001a84:	f107 0310 	add.w	r3, r7, #16
 8001a88:	2284      	movs	r2, #132	@ 0x84
 8001a8a:	2100      	movs	r1, #0
 8001a8c:	4618      	mov	r0, r3
 8001a8e:	f026 fa28 	bl	8027ee2 <memset>
  if(uartHandle->Instance==USART2)
 8001a92:	687b      	ldr	r3, [r7, #4]
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	4a21      	ldr	r2, [pc, #132]	@ (8001b1c <HAL_UART_MspInit+0xb0>)
 8001a98:	4293      	cmp	r3, r2
 8001a9a:	d13a      	bne.n	8001b12 <HAL_UART_MspInit+0xa6>

  /* USER CODE END USART2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8001a9c:	2380      	movs	r3, #128	@ 0x80
 8001a9e:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8001aa0:	2300      	movs	r3, #0
 8001aa2:	65bb      	str	r3, [r7, #88]	@ 0x58
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001aa4:	f107 0310 	add.w	r3, r7, #16
 8001aa8:	4618      	mov	r0, r3
 8001aaa:	f005 ff7d 	bl	80079a8 <HAL_RCCEx_PeriphCLKConfig>
 8001aae:	4603      	mov	r3, r0
 8001ab0:	2b00      	cmp	r3, #0
 8001ab2:	d001      	beq.n	8001ab8 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001ab4:	f7ff fc23 	bl	80012fe <Error_Handler>
    }

    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8001ab8:	4b19      	ldr	r3, [pc, #100]	@ (8001b20 <HAL_UART_MspInit+0xb4>)
 8001aba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001abc:	4a18      	ldr	r2, [pc, #96]	@ (8001b20 <HAL_UART_MspInit+0xb4>)
 8001abe:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001ac2:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ac4:	4b16      	ldr	r3, [pc, #88]	@ (8001b20 <HAL_UART_MspInit+0xb4>)
 8001ac6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ac8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001acc:	60fb      	str	r3, [r7, #12]
 8001ace:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001ad0:	4b13      	ldr	r3, [pc, #76]	@ (8001b20 <HAL_UART_MspInit+0xb4>)
 8001ad2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ad4:	4a12      	ldr	r2, [pc, #72]	@ (8001b20 <HAL_UART_MspInit+0xb4>)
 8001ad6:	f043 0308 	orr.w	r3, r3, #8
 8001ada:	6313      	str	r3, [r2, #48]	@ 0x30
 8001adc:	4b10      	ldr	r3, [pc, #64]	@ (8001b20 <HAL_UART_MspInit+0xb4>)
 8001ade:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ae0:	f003 0308 	and.w	r3, r3, #8
 8001ae4:	60bb      	str	r3, [r7, #8]
 8001ae6:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PD6     ------> USART2_RX
    PD5     ------> USART2_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_5;
 8001ae8:	2360      	movs	r3, #96	@ 0x60
 8001aea:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001aee:	2302      	movs	r3, #2
 8001af0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001af4:	2300      	movs	r3, #0
 8001af6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001afa:	2303      	movs	r3, #3
 8001afc:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001b00:	2307      	movs	r3, #7
 8001b02:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001b06:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001b0a:	4619      	mov	r1, r3
 8001b0c:	4805      	ldr	r0, [pc, #20]	@ (8001b24 <HAL_UART_MspInit+0xb8>)
 8001b0e:	f003 fca7 	bl	8005460 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 8001b12:	bf00      	nop
 8001b14:	37a8      	adds	r7, #168	@ 0xa8
 8001b16:	46bd      	mov	sp, r7
 8001b18:	bd80      	pop	{r7, pc}
 8001b1a:	bf00      	nop
 8001b1c:	40004400 	.word	0x40004400
 8001b20:	40023800 	.word	0x40023800
 8001b24:	40020c00 	.word	0x40020c00

08001b28 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 8001b28:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8001b60 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit   
 8001b2c:	f7ff fe8c 	bl	8001848 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001b30:	480c      	ldr	r0, [pc, #48]	@ (8001b64 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001b32:	490d      	ldr	r1, [pc, #52]	@ (8001b68 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001b34:	4a0d      	ldr	r2, [pc, #52]	@ (8001b6c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001b36:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001b38:	e002      	b.n	8001b40 <LoopCopyDataInit>

08001b3a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001b3a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001b3c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001b3e:	3304      	adds	r3, #4

08001b40 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001b40:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001b42:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001b44:	d3f9      	bcc.n	8001b3a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001b46:	4a0a      	ldr	r2, [pc, #40]	@ (8001b70 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001b48:	4c0a      	ldr	r4, [pc, #40]	@ (8001b74 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001b4a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b4c:	e001      	b.n	8001b52 <LoopFillZerobss>

08001b4e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b4e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b50:	3204      	adds	r2, #4

08001b52 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b52:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b54:	d3fb      	bcc.n	8001b4e <FillZerobss>
  
/* Call static constructors */
    bl __libc_init_array
 8001b56:	f026 fa6d 	bl	8028034 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001b5a:	f7ff fac1 	bl	80010e0 <main>
  bx  lr    
 8001b5e:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8001b60:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 8001b64:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001b68:	20000280 	.word	0x20000280
  ldr r2, =_sidata
 8001b6c:	0802b398 	.word	0x0802b398
  ldr r2, =_sbss
 8001b70:	20000480 	.word	0x20000480
  ldr r4, =_ebss
 8001b74:	200046c4 	.word	0x200046c4

08001b78 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b78:	e7fe      	b.n	8001b78 <ADC_IRQHandler>

08001b7a <ft5336_Init>:
  *         from MCU to FT5336 : ie I2C channel initialization (if required).
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Init(uint16_t DeviceAddr)
{
 8001b7a:	b580      	push	{r7, lr}
 8001b7c:	b082      	sub	sp, #8
 8001b7e:	af00      	add	r7, sp, #0
 8001b80:	4603      	mov	r3, r0
 8001b82:	80fb      	strh	r3, [r7, #6]
  /* Wait at least 200ms after power up before accessing registers
   * Trsi timing (Time of starting to report point after resetting) from FT5336GQQ datasheet */
  TS_IO_Delay(200);
 8001b84:	20c8      	movs	r0, #200	@ 0xc8
 8001b86:	f002 fb87 	bl	8004298 <TS_IO_Delay>

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8001b8a:	f000 f9b3 	bl	8001ef4 <ft5336_I2C_InitializeIfRequired>
}
 8001b8e:	bf00      	nop
 8001b90:	3708      	adds	r7, #8
 8001b92:	46bd      	mov	sp, r7
 8001b94:	bd80      	pop	{r7, pc}

08001b96 <ft5336_Reset>:
  *         @note : Not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_Reset(uint16_t DeviceAddr)
{
 8001b96:	b480      	push	{r7}
 8001b98:	b083      	sub	sp, #12
 8001b9a:	af00      	add	r7, sp, #0
 8001b9c:	4603      	mov	r3, r0
 8001b9e:	80fb      	strh	r3, [r7, #6]
  /* Do nothing */
  /* No software reset sequence available in FT5336 IC */
}
 8001ba0:	bf00      	nop
 8001ba2:	370c      	adds	r7, #12
 8001ba4:	46bd      	mov	sp, r7
 8001ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001baa:	4770      	bx	lr

08001bac <ft5336_ReadID>:
  *         able to read the FT5336 device ID, and verify this is a FT5336.
  * @param  DeviceAddr: I2C FT5336 Slave address.
  * @retval The Device ID (two bytes).
  */
uint16_t ft5336_ReadID(uint16_t DeviceAddr)
{
 8001bac:	b580      	push	{r7, lr}
 8001bae:	b084      	sub	sp, #16
 8001bb0:	af00      	add	r7, sp, #0
 8001bb2:	4603      	mov	r3, r0
 8001bb4:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t ucReadId = 0;
 8001bb6:	2300      	movs	r3, #0
 8001bb8:	737b      	strb	r3, [r7, #13]
  uint8_t nbReadAttempts = 0;
 8001bba:	2300      	movs	r3, #0
 8001bbc:	73fb      	strb	r3, [r7, #15]
  uint8_t bFoundDevice = 0; /* Device not found by default */
 8001bbe:	2300      	movs	r3, #0
 8001bc0:	73bb      	strb	r3, [r7, #14]

  /* Initialize I2C link if needed */
  ft5336_I2C_InitializeIfRequired();
 8001bc2:	f000 f997 	bl	8001ef4 <ft5336_I2C_InitializeIfRequired>

  /* At maximum 4 attempts to read ID : exit at first finding of the searched device ID */
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8001bc6:	2300      	movs	r3, #0
 8001bc8:	73fb      	strb	r3, [r7, #15]
 8001bca:	e010      	b.n	8001bee <ft5336_ReadID+0x42>
  {
    /* Read register FT5336_CHIP_ID_REG as DeviceID detection */
    ucReadId = TS_IO_Read(DeviceAddr, FT5336_CHIP_ID_REG);
 8001bcc:	88fb      	ldrh	r3, [r7, #6]
 8001bce:	b2db      	uxtb	r3, r3
 8001bd0:	21a8      	movs	r1, #168	@ 0xa8
 8001bd2:	4618      	mov	r0, r3
 8001bd4:	f002 fb42 	bl	800425c <TS_IO_Read>
 8001bd8:	4603      	mov	r3, r0
 8001bda:	737b      	strb	r3, [r7, #13]

    /* Found the searched device ID ? */
    if(ucReadId == FT5336_ID_VALUE)
 8001bdc:	7b7b      	ldrb	r3, [r7, #13]
 8001bde:	b2db      	uxtb	r3, r3
 8001be0:	2b51      	cmp	r3, #81	@ 0x51
 8001be2:	d101      	bne.n	8001be8 <ft5336_ReadID+0x3c>
    {
      /* Set device as found */
      bFoundDevice = 1;
 8001be4:	2301      	movs	r3, #1
 8001be6:	73bb      	strb	r3, [r7, #14]
  for(nbReadAttempts = 0; ((nbReadAttempts < 3) && !(bFoundDevice)); nbReadAttempts++)
 8001be8:	7bfb      	ldrb	r3, [r7, #15]
 8001bea:	3301      	adds	r3, #1
 8001bec:	73fb      	strb	r3, [r7, #15]
 8001bee:	7bfb      	ldrb	r3, [r7, #15]
 8001bf0:	2b02      	cmp	r3, #2
 8001bf2:	d802      	bhi.n	8001bfa <ft5336_ReadID+0x4e>
 8001bf4:	7bbb      	ldrb	r3, [r7, #14]
 8001bf6:	2b00      	cmp	r3, #0
 8001bf8:	d0e8      	beq.n	8001bcc <ft5336_ReadID+0x20>
    }
  }

  /* Return the device ID value */
  return (ucReadId);
 8001bfa:	7b7b      	ldrb	r3, [r7, #13]
 8001bfc:	b2db      	uxtb	r3, r3
}
 8001bfe:	4618      	mov	r0, r3
 8001c00:	3710      	adds	r7, #16
 8001c02:	46bd      	mov	sp, r7
 8001c04:	bd80      	pop	{r7, pc}

08001c06 <ft5336_TS_Start>:
  * @brief  Configures the touch Screen IC device to start detecting touches
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address).
  * @retval None.
  */
void ft5336_TS_Start(uint16_t DeviceAddr)
{
 8001c06:	b580      	push	{r7, lr}
 8001c08:	b082      	sub	sp, #8
 8001c0a:	af00      	add	r7, sp, #0
 8001c0c:	4603      	mov	r3, r0
 8001c0e:	80fb      	strh	r3, [r7, #6]
  /* Minimum static configuration of FT5336 */
  FT5336_ASSERT(ft5336_TS_Configure(DeviceAddr));
 8001c10:	88fb      	ldrh	r3, [r7, #6]
 8001c12:	4618      	mov	r0, r3
 8001c14:	f000 f97e 	bl	8001f14 <ft5336_TS_Configure>

  /* By default set FT5336 IC in Polling mode : no INT generation on FT5336 for new touch available */
  /* Note TS_INT is active low                                                                      */
  ft5336_TS_DisableIT(DeviceAddr);
 8001c18:	88fb      	ldrh	r3, [r7, #6]
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	f000 f932 	bl	8001e84 <ft5336_TS_DisableIT>
}
 8001c20:	bf00      	nop
 8001c22:	3708      	adds	r7, #8
 8001c24:	46bd      	mov	sp, r7
 8001c26:	bd80      	pop	{r7, pc}

08001c28 <ft5336_TS_DetectTouch>:
  *         variables).
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval : Number of active touches detected (can be 0, 1 or 2).
  */
uint8_t ft5336_TS_DetectTouch(uint16_t DeviceAddr)
{
 8001c28:	b580      	push	{r7, lr}
 8001c2a:	b084      	sub	sp, #16
 8001c2c:	af00      	add	r7, sp, #0
 8001c2e:	4603      	mov	r3, r0
 8001c30:	80fb      	strh	r3, [r7, #6]
  volatile uint8_t nbTouch = 0;
 8001c32:	2300      	movs	r3, #0
 8001c34:	73fb      	strb	r3, [r7, #15]

  /* Read register FT5336_TD_STAT_REG to check number of touches detection */
  nbTouch = TS_IO_Read(DeviceAddr, FT5336_TD_STAT_REG);
 8001c36:	88fb      	ldrh	r3, [r7, #6]
 8001c38:	b2db      	uxtb	r3, r3
 8001c3a:	2102      	movs	r1, #2
 8001c3c:	4618      	mov	r0, r3
 8001c3e:	f002 fb0d 	bl	800425c <TS_IO_Read>
 8001c42:	4603      	mov	r3, r0
 8001c44:	73fb      	strb	r3, [r7, #15]
  nbTouch &= FT5336_TD_STAT_MASK;
 8001c46:	7bfb      	ldrb	r3, [r7, #15]
 8001c48:	b2db      	uxtb	r3, r3
 8001c4a:	f003 030f 	and.w	r3, r3, #15
 8001c4e:	b2db      	uxtb	r3, r3
 8001c50:	73fb      	strb	r3, [r7, #15]

  if(nbTouch > FT5336_MAX_DETECTABLE_TOUCH)
 8001c52:	7bfb      	ldrb	r3, [r7, #15]
 8001c54:	b2db      	uxtb	r3, r3
 8001c56:	2b05      	cmp	r3, #5
 8001c58:	d901      	bls.n	8001c5e <ft5336_TS_DetectTouch+0x36>
  {
    /* If invalid number of touch detected, set it to zero */
    nbTouch = 0;
 8001c5a:	2300      	movs	r3, #0
 8001c5c:	73fb      	strb	r3, [r7, #15]
  }

  /* Update ft5336 driver internal global : current number of active touches */
  ft5336_handle.currActiveTouchNb = nbTouch;
 8001c5e:	7bfb      	ldrb	r3, [r7, #15]
 8001c60:	b2da      	uxtb	r2, r3
 8001c62:	4b05      	ldr	r3, [pc, #20]	@ (8001c78 <ft5336_TS_DetectTouch+0x50>)
 8001c64:	705a      	strb	r2, [r3, #1]

  /* Reset current active touch index on which to work on */
  ft5336_handle.currActiveTouchIdx = 0;
 8001c66:	4b04      	ldr	r3, [pc, #16]	@ (8001c78 <ft5336_TS_DetectTouch+0x50>)
 8001c68:	2200      	movs	r2, #0
 8001c6a:	709a      	strb	r2, [r3, #2]

  return(nbTouch);
 8001c6c:	7bfb      	ldrb	r3, [r7, #15]
 8001c6e:	b2db      	uxtb	r3, r3
}
 8001c70:	4618      	mov	r0, r3
 8001c72:	3710      	adds	r7, #16
 8001c74:	46bd      	mov	sp, r7
 8001c76:	bd80      	pop	{r7, pc}
 8001c78:	20000890 	.word	0x20000890

08001c7c <ft5336_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value
  * @retval None.
  */
void ft5336_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8001c7c:	b580      	push	{r7, lr}
 8001c7e:	b086      	sub	sp, #24
 8001c80:	af00      	add	r7, sp, #0
 8001c82:	4603      	mov	r3, r0
 8001c84:	60b9      	str	r1, [r7, #8]
 8001c86:	607a      	str	r2, [r7, #4]
 8001c88:	81fb      	strh	r3, [r7, #14]
  volatile uint8_t ucReadData = 0;
 8001c8a:	2300      	movs	r3, #0
 8001c8c:	74fb      	strb	r3, [r7, #19]
  static uint16_t coord;
  uint8_t regAddressXLow = 0;
 8001c8e:	2300      	movs	r3, #0
 8001c90:	75fb      	strb	r3, [r7, #23]
  uint8_t regAddressXHigh = 0;
 8001c92:	2300      	movs	r3, #0
 8001c94:	75bb      	strb	r3, [r7, #22]
  uint8_t regAddressYLow = 0;
 8001c96:	2300      	movs	r3, #0
 8001c98:	757b      	strb	r3, [r7, #21]
  uint8_t regAddressYHigh = 0;
 8001c9a:	2300      	movs	r3, #0
 8001c9c:	753b      	strb	r3, [r7, #20]

  if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb)
 8001c9e:	4b6d      	ldr	r3, [pc, #436]	@ (8001e54 <ft5336_TS_GetXY+0x1d8>)
 8001ca0:	789a      	ldrb	r2, [r3, #2]
 8001ca2:	4b6c      	ldr	r3, [pc, #432]	@ (8001e54 <ft5336_TS_GetXY+0x1d8>)
 8001ca4:	785b      	ldrb	r3, [r3, #1]
 8001ca6:	429a      	cmp	r2, r3
 8001ca8:	f080 80cf 	bcs.w	8001e4a <ft5336_TS_GetXY+0x1ce>
  {
    switch(ft5336_handle.currActiveTouchIdx)
 8001cac:	4b69      	ldr	r3, [pc, #420]	@ (8001e54 <ft5336_TS_GetXY+0x1d8>)
 8001cae:	789b      	ldrb	r3, [r3, #2]
 8001cb0:	2b09      	cmp	r3, #9
 8001cb2:	d871      	bhi.n	8001d98 <ft5336_TS_GetXY+0x11c>
 8001cb4:	a201      	add	r2, pc, #4	@ (adr r2, 8001cbc <ft5336_TS_GetXY+0x40>)
 8001cb6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cba:	bf00      	nop
 8001cbc:	08001ce5 	.word	0x08001ce5
 8001cc0:	08001cf7 	.word	0x08001cf7
 8001cc4:	08001d09 	.word	0x08001d09
 8001cc8:	08001d1b 	.word	0x08001d1b
 8001ccc:	08001d2d 	.word	0x08001d2d
 8001cd0:	08001d3f 	.word	0x08001d3f
 8001cd4:	08001d51 	.word	0x08001d51
 8001cd8:	08001d63 	.word	0x08001d63
 8001cdc:	08001d75 	.word	0x08001d75
 8001ce0:	08001d87 	.word	0x08001d87
    {
    case 0 :
      regAddressXLow  = FT5336_P1_XL_REG;
 8001ce4:	2304      	movs	r3, #4
 8001ce6:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P1_XH_REG;
 8001ce8:	2303      	movs	r3, #3
 8001cea:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P1_YL_REG;
 8001cec:	2306      	movs	r3, #6
 8001cee:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P1_YH_REG;
 8001cf0:	2305      	movs	r3, #5
 8001cf2:	753b      	strb	r3, [r7, #20]
      break;
 8001cf4:	e051      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 1 :
      regAddressXLow  = FT5336_P2_XL_REG;
 8001cf6:	230a      	movs	r3, #10
 8001cf8:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P2_XH_REG;
 8001cfa:	2309      	movs	r3, #9
 8001cfc:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P2_YL_REG;
 8001cfe:	230c      	movs	r3, #12
 8001d00:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P2_YH_REG;
 8001d02:	230b      	movs	r3, #11
 8001d04:	753b      	strb	r3, [r7, #20]
      break;
 8001d06:	e048      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 2 :
      regAddressXLow  = FT5336_P3_XL_REG;
 8001d08:	2310      	movs	r3, #16
 8001d0a:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P3_XH_REG;
 8001d0c:	230f      	movs	r3, #15
 8001d0e:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P3_YL_REG;
 8001d10:	2312      	movs	r3, #18
 8001d12:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P3_YH_REG;
 8001d14:	2311      	movs	r3, #17
 8001d16:	753b      	strb	r3, [r7, #20]
      break;
 8001d18:	e03f      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 3 :
      regAddressXLow  = FT5336_P4_XL_REG;
 8001d1a:	2316      	movs	r3, #22
 8001d1c:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P4_XH_REG;
 8001d1e:	2315      	movs	r3, #21
 8001d20:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P4_YL_REG;
 8001d22:	2318      	movs	r3, #24
 8001d24:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P4_YH_REG;
 8001d26:	2317      	movs	r3, #23
 8001d28:	753b      	strb	r3, [r7, #20]
      break;
 8001d2a:	e036      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 4 :
      regAddressXLow  = FT5336_P5_XL_REG;
 8001d2c:	231c      	movs	r3, #28
 8001d2e:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P5_XH_REG;
 8001d30:	231b      	movs	r3, #27
 8001d32:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P5_YL_REG;
 8001d34:	231e      	movs	r3, #30
 8001d36:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P5_YH_REG;
 8001d38:	231d      	movs	r3, #29
 8001d3a:	753b      	strb	r3, [r7, #20]
      break;
 8001d3c:	e02d      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 5 :
      regAddressXLow  = FT5336_P6_XL_REG;
 8001d3e:	2322      	movs	r3, #34	@ 0x22
 8001d40:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P6_XH_REG;
 8001d42:	2321      	movs	r3, #33	@ 0x21
 8001d44:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P6_YL_REG;
 8001d46:	2324      	movs	r3, #36	@ 0x24
 8001d48:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P6_YH_REG;
 8001d4a:	2323      	movs	r3, #35	@ 0x23
 8001d4c:	753b      	strb	r3, [r7, #20]
      break;
 8001d4e:	e024      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 6 :
      regAddressXLow  = FT5336_P7_XL_REG;
 8001d50:	2328      	movs	r3, #40	@ 0x28
 8001d52:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P7_XH_REG;
 8001d54:	2327      	movs	r3, #39	@ 0x27
 8001d56:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P7_YL_REG;
 8001d58:	232a      	movs	r3, #42	@ 0x2a
 8001d5a:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P7_YH_REG;
 8001d5c:	2329      	movs	r3, #41	@ 0x29
 8001d5e:	753b      	strb	r3, [r7, #20]
      break;
 8001d60:	e01b      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 7 :
      regAddressXLow  = FT5336_P8_XL_REG;
 8001d62:	232e      	movs	r3, #46	@ 0x2e
 8001d64:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P8_XH_REG;
 8001d66:	232d      	movs	r3, #45	@ 0x2d
 8001d68:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P8_YL_REG;
 8001d6a:	2330      	movs	r3, #48	@ 0x30
 8001d6c:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P8_YH_REG;
 8001d6e:	232f      	movs	r3, #47	@ 0x2f
 8001d70:	753b      	strb	r3, [r7, #20]
      break;
 8001d72:	e012      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 8 :
      regAddressXLow  = FT5336_P9_XL_REG;
 8001d74:	2334      	movs	r3, #52	@ 0x34
 8001d76:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P9_XH_REG;
 8001d78:	2333      	movs	r3, #51	@ 0x33
 8001d7a:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P9_YL_REG;
 8001d7c:	2336      	movs	r3, #54	@ 0x36
 8001d7e:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P9_YH_REG;
 8001d80:	2335      	movs	r3, #53	@ 0x35
 8001d82:	753b      	strb	r3, [r7, #20]
      break;
 8001d84:	e009      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    case 9 :
      regAddressXLow  = FT5336_P10_XL_REG;
 8001d86:	233a      	movs	r3, #58	@ 0x3a
 8001d88:	75fb      	strb	r3, [r7, #23]
      regAddressXHigh = FT5336_P10_XH_REG;
 8001d8a:	2339      	movs	r3, #57	@ 0x39
 8001d8c:	75bb      	strb	r3, [r7, #22]
      regAddressYLow  = FT5336_P10_YL_REG;
 8001d8e:	233c      	movs	r3, #60	@ 0x3c
 8001d90:	757b      	strb	r3, [r7, #21]
      regAddressYHigh = FT5336_P10_YH_REG;
 8001d92:	233b      	movs	r3, #59	@ 0x3b
 8001d94:	753b      	strb	r3, [r7, #20]
      break;
 8001d96:	e000      	b.n	8001d9a <ft5336_TS_GetXY+0x11e>

    default :
      break;
 8001d98:	bf00      	nop

    } /* end switch(ft5336_handle.currActiveTouchIdx) */

    /* Read low part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXLow);
 8001d9a:	89fb      	ldrh	r3, [r7, #14]
 8001d9c:	b2db      	uxtb	r3, r3
 8001d9e:	7dfa      	ldrb	r2, [r7, #23]
 8001da0:	4611      	mov	r1, r2
 8001da2:	4618      	mov	r0, r3
 8001da4:	f002 fa5a 	bl	800425c <TS_IO_Read>
 8001da8:	4603      	mov	r3, r0
 8001daa:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8001dac:	7cfb      	ldrb	r3, [r7, #19]
 8001dae:	b2db      	uxtb	r3, r3
 8001db0:	461a      	mov	r2, r3
 8001db2:	4b29      	ldr	r3, [pc, #164]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001db4:	801a      	strh	r2, [r3, #0]

    /* Read high part of X position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressXHigh);
 8001db6:	89fb      	ldrh	r3, [r7, #14]
 8001db8:	b2db      	uxtb	r3, r3
 8001dba:	7dba      	ldrb	r2, [r7, #22]
 8001dbc:	4611      	mov	r1, r2
 8001dbe:	4618      	mov	r0, r3
 8001dc0:	f002 fa4c 	bl	800425c <TS_IO_Read>
 8001dc4:	4603      	mov	r3, r0
 8001dc6:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8001dc8:	7cfb      	ldrb	r3, [r7, #19]
 8001dca:	b2db      	uxtb	r3, r3
 8001dcc:	021b      	lsls	r3, r3, #8
 8001dce:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8001dd2:	b21a      	sxth	r2, r3
 8001dd4:	4b20      	ldr	r3, [pc, #128]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001dd6:	881b      	ldrh	r3, [r3, #0]
 8001dd8:	b21b      	sxth	r3, r3
 8001dda:	4313      	orrs	r3, r2
 8001ddc:	b21b      	sxth	r3, r3
 8001dde:	b29a      	uxth	r2, r3
 8001de0:	4b1d      	ldr	r3, [pc, #116]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001de2:	801a      	strh	r2, [r3, #0]

    /* Send back ready X position to caller */
    *X = coord;
 8001de4:	4b1c      	ldr	r3, [pc, #112]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001de6:	881a      	ldrh	r2, [r3, #0]
 8001de8:	68bb      	ldr	r3, [r7, #8]
 8001dea:	801a      	strh	r2, [r3, #0]

    /* Read low part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYLow);
 8001dec:	89fb      	ldrh	r3, [r7, #14]
 8001dee:	b2db      	uxtb	r3, r3
 8001df0:	7d7a      	ldrb	r2, [r7, #21]
 8001df2:	4611      	mov	r1, r2
 8001df4:	4618      	mov	r0, r3
 8001df6:	f002 fa31 	bl	800425c <TS_IO_Read>
 8001dfa:	4603      	mov	r3, r0
 8001dfc:	74fb      	strb	r3, [r7, #19]
    coord = (ucReadData & FT5336_TOUCH_POS_LSB_MASK) >> FT5336_TOUCH_POS_LSB_SHIFT;
 8001dfe:	7cfb      	ldrb	r3, [r7, #19]
 8001e00:	b2db      	uxtb	r3, r3
 8001e02:	461a      	mov	r2, r3
 8001e04:	4b14      	ldr	r3, [pc, #80]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001e06:	801a      	strh	r2, [r3, #0]

    /* Read high part of Y position */
    ucReadData = TS_IO_Read(DeviceAddr, regAddressYHigh);
 8001e08:	89fb      	ldrh	r3, [r7, #14]
 8001e0a:	b2db      	uxtb	r3, r3
 8001e0c:	7d3a      	ldrb	r2, [r7, #20]
 8001e0e:	4611      	mov	r1, r2
 8001e10:	4618      	mov	r0, r3
 8001e12:	f002 fa23 	bl	800425c <TS_IO_Read>
 8001e16:	4603      	mov	r3, r0
 8001e18:	74fb      	strb	r3, [r7, #19]
    coord |= ((ucReadData & FT5336_TOUCH_POS_MSB_MASK) >> FT5336_TOUCH_POS_MSB_SHIFT) << 8;
 8001e1a:	7cfb      	ldrb	r3, [r7, #19]
 8001e1c:	b2db      	uxtb	r3, r3
 8001e1e:	021b      	lsls	r3, r3, #8
 8001e20:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8001e24:	b21a      	sxth	r2, r3
 8001e26:	4b0c      	ldr	r3, [pc, #48]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001e28:	881b      	ldrh	r3, [r3, #0]
 8001e2a:	b21b      	sxth	r3, r3
 8001e2c:	4313      	orrs	r3, r2
 8001e2e:	b21b      	sxth	r3, r3
 8001e30:	b29a      	uxth	r2, r3
 8001e32:	4b09      	ldr	r3, [pc, #36]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001e34:	801a      	strh	r2, [r3, #0]

    /* Send back ready Y position to caller */
    *Y = coord;
 8001e36:	4b08      	ldr	r3, [pc, #32]	@ (8001e58 <ft5336_TS_GetXY+0x1dc>)
 8001e38:	881a      	ldrh	r2, [r3, #0]
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	801a      	strh	r2, [r3, #0]

    ft5336_handle.currActiveTouchIdx++; /* next call will work on next touch */
 8001e3e:	4b05      	ldr	r3, [pc, #20]	@ (8001e54 <ft5336_TS_GetXY+0x1d8>)
 8001e40:	789b      	ldrb	r3, [r3, #2]
 8001e42:	3301      	adds	r3, #1
 8001e44:	b2da      	uxtb	r2, r3
 8001e46:	4b03      	ldr	r3, [pc, #12]	@ (8001e54 <ft5336_TS_GetXY+0x1d8>)
 8001e48:	709a      	strb	r2, [r3, #2]

  } /* of if(ft5336_handle.currActiveTouchIdx < ft5336_handle.currActiveTouchNb) */
}
 8001e4a:	bf00      	nop
 8001e4c:	3718      	adds	r7, #24
 8001e4e:	46bd      	mov	sp, r7
 8001e50:	bd80      	pop	{r7, pc}
 8001e52:	bf00      	nop
 8001e54:	20000890 	.word	0x20000890
 8001e58:	20000894 	.word	0x20000894

08001e5c <ft5336_TS_EnableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_EnableIT(uint16_t DeviceAddr)
{
 8001e5c:	b580      	push	{r7, lr}
 8001e5e:	b084      	sub	sp, #16
 8001e60:	af00      	add	r7, sp, #0
 8001e62:	4603      	mov	r3, r0
 8001e64:	80fb      	strh	r3, [r7, #6]
   uint8_t regValue = 0;
 8001e66:	2300      	movs	r3, #0
 8001e68:	73fb      	strb	r3, [r7, #15]
   regValue = (FT5336_G_MODE_INTERRUPT_TRIGGER & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8001e6a:	2301      	movs	r3, #1
 8001e6c:	73fb      	strb	r3, [r7, #15]

   /* Set interrupt trigger mode in FT5336_GMODE_REG */
   TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8001e6e:	88fb      	ldrh	r3, [r7, #6]
 8001e70:	b2db      	uxtb	r3, r3
 8001e72:	7bfa      	ldrb	r2, [r7, #15]
 8001e74:	21a4      	movs	r1, #164	@ 0xa4
 8001e76:	4618      	mov	r0, r3
 8001e78:	f002 f9d6 	bl	8004228 <TS_IO_Write>
}
 8001e7c:	bf00      	nop
 8001e7e:	3710      	adds	r7, #16
 8001e80:	46bd      	mov	sp, r7
 8001e82:	bd80      	pop	{r7, pc}

08001e84 <ft5336_TS_DisableIT>:
  *         connected to MCU as EXTI.
  * @param  DeviceAddr: Device address on communication Bus (Slave I2C address of FT5336).
  * @retval None
  */
void ft5336_TS_DisableIT(uint16_t DeviceAddr)
{
 8001e84:	b580      	push	{r7, lr}
 8001e86:	b084      	sub	sp, #16
 8001e88:	af00      	add	r7, sp, #0
 8001e8a:	4603      	mov	r3, r0
 8001e8c:	80fb      	strh	r3, [r7, #6]
  uint8_t regValue = 0;
 8001e8e:	2300      	movs	r3, #0
 8001e90:	73fb      	strb	r3, [r7, #15]
  regValue = (FT5336_G_MODE_INTERRUPT_POLLING & (FT5336_G_MODE_INTERRUPT_MASK >> FT5336_G_MODE_INTERRUPT_SHIFT)) << FT5336_G_MODE_INTERRUPT_SHIFT;
 8001e92:	2300      	movs	r3, #0
 8001e94:	73fb      	strb	r3, [r7, #15]

  /* Set interrupt polling mode in FT5336_GMODE_REG */
  TS_IO_Write(DeviceAddr, FT5336_GMODE_REG, regValue);
 8001e96:	88fb      	ldrh	r3, [r7, #6]
 8001e98:	b2db      	uxtb	r3, r3
 8001e9a:	7bfa      	ldrb	r2, [r7, #15]
 8001e9c:	21a4      	movs	r1, #164	@ 0xa4
 8001e9e:	4618      	mov	r0, r3
 8001ea0:	f002 f9c2 	bl	8004228 <TS_IO_Write>
}
 8001ea4:	bf00      	nop
 8001ea6:	3710      	adds	r7, #16
 8001ea8:	46bd      	mov	sp, r7
 8001eaa:	bd80      	pop	{r7, pc}

08001eac <ft5336_TS_ITStatus>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval TS interrupts status : always return 0 here
  */
uint8_t ft5336_TS_ITStatus(uint16_t DeviceAddr)
{
 8001eac:	b480      	push	{r7}
 8001eae:	b083      	sub	sp, #12
 8001eb0:	af00      	add	r7, sp, #0
 8001eb2:	4603      	mov	r3, r0
 8001eb4:	80fb      	strh	r3, [r7, #6]
  /* Always return 0 as feature not applicable to FT5336 */
  return 0;
 8001eb6:	2300      	movs	r3, #0
}
 8001eb8:	4618      	mov	r0, r3
 8001eba:	370c      	adds	r7, #12
 8001ebc:	46bd      	mov	sp, r7
 8001ebe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ec2:	4770      	bx	lr

08001ec4 <ft5336_TS_ClearIT>:
  *         @note : This feature is not applicable to FT5336.
  * @param  DeviceAddr: Device address on communication Bus (I2C slave address of FT5336).
  * @retval None
  */
void ft5336_TS_ClearIT(uint16_t DeviceAddr)
{
 8001ec4:	b480      	push	{r7}
 8001ec6:	b083      	sub	sp, #12
 8001ec8:	af00      	add	r7, sp, #0
 8001eca:	4603      	mov	r3, r0
 8001ecc:	80fb      	strh	r3, [r7, #6]
  /* Nothing to be done here for FT5336 */
}
 8001ece:	bf00      	nop
 8001ed0:	370c      	adds	r7, #12
 8001ed2:	46bd      	mov	sp, r7
 8001ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ed8:	4770      	bx	lr
	...

08001edc <ft5336_Get_I2C_InitializedStatus>:
  * @brief  Return the status of I2C was initialized or not.
  * @param  None.
  * @retval : I2C initialization status.
  */
static uint8_t ft5336_Get_I2C_InitializedStatus(void)
{
 8001edc:	b480      	push	{r7}
 8001ede:	af00      	add	r7, sp, #0
  return(ft5336_handle.i2cInitialized);
 8001ee0:	4b03      	ldr	r3, [pc, #12]	@ (8001ef0 <ft5336_Get_I2C_InitializedStatus+0x14>)
 8001ee2:	781b      	ldrb	r3, [r3, #0]
}
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	46bd      	mov	sp, r7
 8001ee8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eec:	4770      	bx	lr
 8001eee:	bf00      	nop
 8001ef0:	20000890 	.word	0x20000890

08001ef4 <ft5336_I2C_InitializeIfRequired>:
  * @brief  I2C initialize if needed.
  * @param  None.
  * @retval : None.
  */
static void ft5336_I2C_InitializeIfRequired(void)
{
 8001ef4:	b580      	push	{r7, lr}
 8001ef6:	af00      	add	r7, sp, #0
  if(ft5336_Get_I2C_InitializedStatus() == FT5336_I2C_NOT_INITIALIZED)
 8001ef8:	f7ff fff0 	bl	8001edc <ft5336_Get_I2C_InitializedStatus>
 8001efc:	4603      	mov	r3, r0
 8001efe:	2b00      	cmp	r3, #0
 8001f00:	d104      	bne.n	8001f0c <ft5336_I2C_InitializeIfRequired+0x18>
  {
    /* Initialize TS IO BUS layer (I2C) */
    TS_IO_Init();
 8001f02:	f002 f987 	bl	8004214 <TS_IO_Init>

    /* Set state to initialized */
    ft5336_handle.i2cInitialized = FT5336_I2C_INITIALIZED;
 8001f06:	4b02      	ldr	r3, [pc, #8]	@ (8001f10 <ft5336_I2C_InitializeIfRequired+0x1c>)
 8001f08:	2201      	movs	r2, #1
 8001f0a:	701a      	strb	r2, [r3, #0]
  }
}
 8001f0c:	bf00      	nop
 8001f0e:	bd80      	pop	{r7, pc}
 8001f10:	20000890 	.word	0x20000890

08001f14 <ft5336_TS_Configure>:
  * @brief  Basic static configuration of TouchScreen
  * @param  DeviceAddr: FT5336 Device address for communication on I2C Bus.
  * @retval Status FT5336_STATUS_OK or FT5336_STATUS_NOT_OK.
  */
static uint32_t ft5336_TS_Configure(uint16_t DeviceAddr)
{
 8001f14:	b480      	push	{r7}
 8001f16:	b085      	sub	sp, #20
 8001f18:	af00      	add	r7, sp, #0
 8001f1a:	4603      	mov	r3, r0
 8001f1c:	80fb      	strh	r3, [r7, #6]
  uint32_t status = FT5336_STATUS_OK;
 8001f1e:	2300      	movs	r3, #0
 8001f20:	60fb      	str	r3, [r7, #12]

  /* Nothing special to be done for FT5336 */

  return(status);
 8001f22:	68fb      	ldr	r3, [r7, #12]
}
 8001f24:	4618      	mov	r0, r3
 8001f26:	3714      	adds	r7, #20
 8001f28:	46bd      	mov	sp, r7
 8001f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f2e:	4770      	bx	lr

08001f30 <Powerstep01_AttachErrorHandler>:
 * @param[in] callback Name of the callback to attach 
 * to the error Hanlder
 * @retval None
 **********************************************************/
void Powerstep01_AttachErrorHandler(void (*callback)(uint16_t))
{
 8001f30:	b480      	push	{r7}
 8001f32:	b083      	sub	sp, #12
 8001f34:	af00      	add	r7, sp, #0
 8001f36:	6078      	str	r0, [r7, #4]
  errorHandlerCallback = (void (*)(uint16_t))callback;
 8001f38:	4a04      	ldr	r2, [pc, #16]	@ (8001f4c <Powerstep01_AttachErrorHandler+0x1c>)
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	6013      	str	r3, [r2, #0]
}
 8001f3e:	bf00      	nop
 8001f40:	370c      	adds	r7, #12
 8001f42:	46bd      	mov	sp, r7
 8001f44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f48:	4770      	bx	lr
 8001f4a:	bf00      	nop
 8001f4c:	200008a0 	.word	0x200008a0

08001f50 <Powerstep01_AttachFlagInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Flag Interrupt
 * @retval None
 **********************************************************/
void Powerstep01_AttachFlagInterrupt(void (*callback)(void))
{
 8001f50:	b480      	push	{r7}
 8001f52:	b083      	sub	sp, #12
 8001f54:	af00      	add	r7, sp, #0
 8001f56:	6078      	str	r0, [r7, #4]
  flagInterruptCallback = (void (*)())callback;
 8001f58:	4a04      	ldr	r2, [pc, #16]	@ (8001f6c <Powerstep01_AttachFlagInterrupt+0x1c>)
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	6013      	str	r3, [r2, #0]
}
 8001f5e:	bf00      	nop
 8001f60:	370c      	adds	r7, #12
 8001f62:	46bd      	mov	sp, r7
 8001f64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f68:	4770      	bx	lr
 8001f6a:	bf00      	nop
 8001f6c:	2000089c 	.word	0x2000089c

08001f70 <Powerstep01_AttachBusyInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Busy Interrupt
 * @retval None
 **********************************************************/
void Powerstep01_AttachBusyInterrupt(void (*callback)(void))
{
 8001f70:	b480      	push	{r7}
 8001f72:	b083      	sub	sp, #12
 8001f74:	af00      	add	r7, sp, #0
 8001f76:	6078      	str	r0, [r7, #4]
  busyInterruptCallback = (void (*)())callback;
 8001f78:	4a04      	ldr	r2, [pc, #16]	@ (8001f8c <Powerstep01_AttachBusyInterrupt+0x1c>)
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	6013      	str	r3, [r2, #0]
}
 8001f7e:	bf00      	nop
 8001f80:	370c      	adds	r7, #12
 8001f82:	46bd      	mov	sp, r7
 8001f84:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f88:	4770      	bx	lr
 8001f8a:	bf00      	nop
 8001f8c:	20000898 	.word	0x20000898

08001f90 <Powerstep01_ReadId>:
/******************************************************//**
 * @brief Read id
 * @retval Id of the powerSTEP01 Driver Instance
 **********************************************************/
uint16_t Powerstep01_ReadId(void)
{
 8001f90:	b480      	push	{r7}
 8001f92:	af00      	add	r7, sp, #0
  return(powerstep01DriverInstance);
 8001f94:	4b03      	ldr	r3, [pc, #12]	@ (8001fa4 <Powerstep01_ReadId+0x14>)
 8001f96:	881b      	ldrh	r3, [r3, #0]
}
 8001f98:	4618      	mov	r0, r3
 8001f9a:	46bd      	mov	sp, r7
 8001f9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fa0:	4770      	bx	lr
 8001fa2:	bf00      	nop
 8001fa4:	200008b2 	.word	0x200008b2

08001fa8 <Powerstep01_Init>:
 * @brief Starts the Powerstep01 library
 * @param[in] pInit pointer to the initialization data
 * @retval None
 **********************************************************/
void Powerstep01_Init(void* pInit)
{ 
 8001fa8:	b580      	push	{r7, lr}
 8001faa:	b082      	sub	sp, #8
 8001fac:	af00      	add	r7, sp, #0
 8001fae:	6078      	str	r0, [r7, #4]
  /* Initialise the GPIOs of the just added device */
  Powerstep01_Board_GpioInit(powerstep01DriverInstance);
 8001fb0:	4b1e      	ldr	r3, [pc, #120]	@ (800202c <Powerstep01_Init+0x84>)
 8001fb2:	881b      	ldrh	r3, [r3, #0]
 8001fb4:	b2db      	uxtb	r3, r3
 8001fb6:	4618      	mov	r0, r3
 8001fb8:	f002 f996 	bl	80042e8 <Powerstep01_Board_GpioInit>
  
  if(Powerstep01_Board_SpiInit() != 0)
 8001fbc:	f002 fac0 	bl	8004540 <Powerstep01_Board_SpiInit>
 8001fc0:	4603      	mov	r3, r0
 8001fc2:	2b00      	cmp	r3, #0
 8001fc4:	d003      	beq.n	8001fce <Powerstep01_Init+0x26>
  {
    /* Initialization Error */
    Powerstep01_ErrorHandler(POWERSTEP01_ERROR_0);
 8001fc6:	f44f 4030 	mov.w	r0, #45056	@ 0xb000
 8001fca:	f001 f90b 	bl	80031e4 <Powerstep01_ErrorHandler>
  } 
  
  /* configure the step clock */
  Powerstep01_Board_StepClockInit();
 8001fce:	f002 fa29 	bl	8004424 <Powerstep01_Board_StepClockInit>
  
  /* Standby-reset deactivation */
  Powerstep01_Board_ReleaseReset(powerstep01DriverInstance);
 8001fd2:	4b16      	ldr	r3, [pc, #88]	@ (800202c <Powerstep01_Init+0x84>)
 8001fd4:	881b      	ldrh	r3, [r3, #0]
 8001fd6:	b2db      	uxtb	r3, r3
 8001fd8:	4618      	mov	r0, r3
 8001fda:	f002 fa91 	bl	8004500 <Powerstep01_Board_ReleaseReset>
  
  /* Let a delay after reset */
  Powerstep01_Board_Delay(1);
 8001fde:	2001      	movs	r0, #1
 8001fe0:	f002 f965 	bl	80042ae <Powerstep01_Board_Delay>

  if (pInit == 0)
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	2b00      	cmp	r3, #0
 8001fe8:	d106      	bne.n	8001ff8 <Powerstep01_Init+0x50>
  {
    // Set all registers to their predefined values from powerstep01_target_config.h 
    Powerstep01_SetRegisterToPredefinedValues(powerstep01DriverInstance);
 8001fea:	4b10      	ldr	r3, [pc, #64]	@ (800202c <Powerstep01_Init+0x84>)
 8001fec:	881b      	ldrh	r3, [r3, #0]
 8001fee:	b2db      	uxtb	r3, r3
 8001ff0:	4618      	mov	r0, r3
 8001ff2:	f001 f9e7 	bl	80033c4 <Powerstep01_SetRegisterToPredefinedValues>
 8001ff6:	e006      	b.n	8002006 <Powerstep01_Init+0x5e>
  }
  else
  {
    Powerstep01_SetDeviceParamsToGivenValues(powerstep01DriverInstance, pInit);
 8001ff8:	4b0c      	ldr	r3, [pc, #48]	@ (800202c <Powerstep01_Init+0x84>)
 8001ffa:	881b      	ldrh	r3, [r3, #0]
 8001ffc:	b2db      	uxtb	r3, r3
 8001ffe:	6879      	ldr	r1, [r7, #4]
 8002000:	4618      	mov	r0, r3
 8002002:	f001 fb31 	bl	8003668 <Powerstep01_SetDeviceParamsToGivenValues>
  }
  
  // Put the Powerstep01 in HiZ state
  Powerstep01_CmdHardHiZ(powerstep01DriverInstance);
 8002006:	4b09      	ldr	r3, [pc, #36]	@ (800202c <Powerstep01_Init+0x84>)
 8002008:	881b      	ldrh	r3, [r3, #0]
 800200a:	b2db      	uxtb	r3, r3
 800200c:	4618      	mov	r0, r3
 800200e:	f000 fa00 	bl	8002412 <Powerstep01_CmdHardHiZ>
  
  Powerstep01_FetchAndClearAllStatus();
 8002012:	f000 fb8f 	bl	8002734 <Powerstep01_FetchAndClearAllStatus>
  
  powerstep01DriverInstance++;
 8002016:	4b05      	ldr	r3, [pc, #20]	@ (800202c <Powerstep01_Init+0x84>)
 8002018:	881b      	ldrh	r3, [r3, #0]
 800201a:	3301      	adds	r3, #1
 800201c:	b29a      	uxth	r2, r3
 800201e:	4b03      	ldr	r3, [pc, #12]	@ (800202c <Powerstep01_Init+0x84>)
 8002020:	801a      	strh	r2, [r3, #0]
}
 8002022:	bf00      	nop
 8002024:	3708      	adds	r7, #8
 8002026:	46bd      	mov	sp, r7
 8002028:	bd80      	pop	{r7, pc}
 800202a:	bf00      	nop
 800202c:	200008b2 	.word	0x200008b2

08002030 <Powerstep01_CheckBusyHw>:
 * busy pin position. 
 * The busy pin is shared between all devices.
 * @retval One if at least one Powerstep01 is busy, otherwise zero
 **********************************************************/
uint8_t Powerstep01_CheckBusyHw(void)
{
 8002030:	b580      	push	{r7, lr}
 8002032:	af00      	add	r7, sp, #0
	if(!(Powerstep01_Board_BUSY_PIN_GetState()))
 8002034:	f002 faf8 	bl	8004628 <Powerstep01_Board_BUSY_PIN_GetState>
 8002038:	4603      	mov	r3, r0
 800203a:	2b00      	cmp	r3, #0
 800203c:	d101      	bne.n	8002042 <Powerstep01_CheckBusyHw+0x12>
  {
    return 0x01;
 800203e:	2301      	movs	r3, #1
 8002040:	e000      	b.n	8002044 <Powerstep01_CheckBusyHw+0x14>
  }
	else 
  {
    return 0x00;
 8002042:	2300      	movs	r3, #0
  }
}
 8002044:	4618      	mov	r0, r3
 8002046:	bd80      	pop	{r7, pc}

08002048 <Powerstep01_CheckStatusHw>:
 * The flag pin is shared between all devices.
 * @retval One if at least one Powerstep01 has an alarm flag set ,
 * otherwise zero
 **********************************************************/
uint8_t Powerstep01_CheckStatusHw(void)
{
 8002048:	b580      	push	{r7, lr}
 800204a:	af00      	add	r7, sp, #0
	if(!(Powerstep01_Board_FLAG_PIN_GetState()))
 800204c:	f002 faf8 	bl	8004640 <Powerstep01_Board_FLAG_PIN_GetState>
 8002050:	4603      	mov	r3, r0
 8002052:	2b00      	cmp	r3, #0
 8002054:	d101      	bne.n	800205a <Powerstep01_CheckStatusHw+0x12>
  {
    return 0x01;
 8002056:	2301      	movs	r3, #1
 8002058:	e000      	b.n	800205c <Powerstep01_CheckStatusHw+0x14>
  }
	else 
  {
    return 0x00;
 800205a:	2300      	movs	r3, #0
  }
}
 800205c:	4618      	mov	r0, r3
 800205e:	bd80      	pop	{r7, pc}

08002060 <Powerstep01_CmdGetParam>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] param PowerStep01 register address
 * @retval Register value - 1 to 3 bytes (depends on register)
 *********************************************************/
uint32_t Powerstep01_CmdGetParam(uint8_t deviceId, uint32_t param)
{
 8002060:	b580      	push	{r7, lr}
 8002062:	b086      	sub	sp, #24
 8002064:	af00      	add	r7, sp, #0
 8002066:	4603      	mov	r3, r0
 8002068:	6039      	str	r1, [r7, #0]
 800206a:	71fb      	strb	r3, [r7, #7]
  uint32_t spiRxData = 0;
 800206c:	2300      	movs	r3, #0
 800206e:	617b      	str	r3, [r7, #20]

  if (numberOfDevices > deviceId)
 8002070:	4b67      	ldr	r3, [pc, #412]	@ (8002210 <Powerstep01_CmdGetParam+0x1b0>)
 8002072:	781b      	ldrb	r3, [r3, #0]
 8002074:	b2db      	uxtb	r3, r3
 8002076:	79fa      	ldrb	r2, [r7, #7]
 8002078:	429a      	cmp	r2, r3
 800207a:	f080 80c4 	bcs.w	8002206 <Powerstep01_CmdGetParam+0x1a6>
  {
    uint32_t loop;
    uint8_t maxArgumentNbBytes = 0;
 800207e:	2300      	movs	r3, #0
 8002080:	73fb      	strb	r3, [r7, #15]
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8002082:	4b63      	ldr	r3, [pc, #396]	@ (8002210 <Powerstep01_CmdGetParam+0x1b0>)
 8002084:	781b      	ldrb	r3, [r3, #0]
 8002086:	b2da      	uxtb	r2, r3
 8002088:	79fb      	ldrb	r3, [r7, #7]
 800208a:	1ad3      	subs	r3, r2, r3
 800208c:	b2db      	uxtb	r3, r3
 800208e:	3b01      	subs	r3, #1
 8002090:	737b      	strb	r3, [r7, #13]
    bool itDisable = FALSE;
 8002092:	2300      	movs	r3, #0
 8002094:	73bb      	strb	r3, [r7, #14]
    
    do
    {
      spiPreemtionByIsr = FALSE;
 8002096:	4b5f      	ldr	r3, [pc, #380]	@ (8002214 <Powerstep01_CmdGetParam+0x1b4>)
 8002098:	2200      	movs	r2, #0
 800209a:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 800209c:	7bbb      	ldrb	r3, [r7, #14]
 800209e:	2b00      	cmp	r3, #0
 80020a0:	d003      	beq.n	80020aa <Powerstep01_CmdGetParam+0x4a>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 80020a2:	f002 f918 	bl	80042d6 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 80020a6:	2300      	movs	r3, #0
 80020a8:	73bb      	strb	r3, [r7, #14]
      }
      for (loop = 0; loop < numberOfDevices; loop++)
 80020aa:	2300      	movs	r3, #0
 80020ac:	613b      	str	r3, [r7, #16]
 80020ae:	e030      	b.n	8002112 <Powerstep01_CmdGetParam+0xb2>
      {
        spiTxBursts[0][loop] = POWERSTEP01_NOP;
 80020b0:	4a59      	ldr	r2, [pc, #356]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 80020b2:	693b      	ldr	r3, [r7, #16]
 80020b4:	4413      	add	r3, r2
 80020b6:	2200      	movs	r2, #0
 80020b8:	701a      	strb	r2, [r3, #0]
        spiTxBursts[1][loop] = POWERSTEP01_NOP;
 80020ba:	4a57      	ldr	r2, [pc, #348]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 80020bc:	693b      	ldr	r3, [r7, #16]
 80020be:	4413      	add	r3, r2
 80020c0:	3301      	adds	r3, #1
 80020c2:	2200      	movs	r2, #0
 80020c4:	701a      	strb	r2, [r3, #0]
        spiTxBursts[2][loop] = POWERSTEP01_NOP;
 80020c6:	4a54      	ldr	r2, [pc, #336]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 80020c8:	693b      	ldr	r3, [r7, #16]
 80020ca:	4413      	add	r3, r2
 80020cc:	3302      	adds	r3, #2
 80020ce:	2200      	movs	r2, #0
 80020d0:	701a      	strb	r2, [r3, #0]
        spiTxBursts[3][loop] = POWERSTEP01_NOP;
 80020d2:	4a51      	ldr	r2, [pc, #324]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 80020d4:	693b      	ldr	r3, [r7, #16]
 80020d6:	4413      	add	r3, r2
 80020d8:	3303      	adds	r3, #3
 80020da:	2200      	movs	r2, #0
 80020dc:	701a      	strb	r2, [r3, #0]
        spiRxBursts[0][loop] = 0;
 80020de:	4a4f      	ldr	r2, [pc, #316]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80020e0:	693b      	ldr	r3, [r7, #16]
 80020e2:	4413      	add	r3, r2
 80020e4:	2200      	movs	r2, #0
 80020e6:	701a      	strb	r2, [r3, #0]
        spiRxBursts[1][loop] = 0;
 80020e8:	4a4c      	ldr	r2, [pc, #304]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80020ea:	693b      	ldr	r3, [r7, #16]
 80020ec:	4413      	add	r3, r2
 80020ee:	3301      	adds	r3, #1
 80020f0:	2200      	movs	r2, #0
 80020f2:	701a      	strb	r2, [r3, #0]
        spiRxBursts[2][loop] = 0;
 80020f4:	4a49      	ldr	r2, [pc, #292]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80020f6:	693b      	ldr	r3, [r7, #16]
 80020f8:	4413      	add	r3, r2
 80020fa:	3302      	adds	r3, #2
 80020fc:	2200      	movs	r2, #0
 80020fe:	701a      	strb	r2, [r3, #0]
        spiRxBursts[3][loop] = 0;    
 8002100:	4a46      	ldr	r2, [pc, #280]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 8002102:	693b      	ldr	r3, [r7, #16]
 8002104:	4413      	add	r3, r2
 8002106:	3303      	adds	r3, #3
 8002108:	2200      	movs	r2, #0
 800210a:	701a      	strb	r2, [r3, #0]
      for (loop = 0; loop < numberOfDevices; loop++)
 800210c:	693b      	ldr	r3, [r7, #16]
 800210e:	3301      	adds	r3, #1
 8002110:	613b      	str	r3, [r7, #16]
 8002112:	4b3f      	ldr	r3, [pc, #252]	@ (8002210 <Powerstep01_CmdGetParam+0x1b0>)
 8002114:	781b      	ldrb	r3, [r3, #0]
 8002116:	b2db      	uxtb	r3, r3
 8002118:	461a      	mov	r2, r3
 800211a:	693b      	ldr	r3, [r7, #16]
 800211c:	4293      	cmp	r3, r2
 800211e:	d3c7      	bcc.n	80020b0 <Powerstep01_CmdGetParam+0x50>
      }
      switch (param)
 8002120:	683b      	ldr	r3, [r7, #0]
 8002122:	2b1b      	cmp	r3, #27
 8002124:	bf8c      	ite	hi
 8002126:	2301      	movhi	r3, #1
 8002128:	2300      	movls	r3, #0
 800212a:	b2db      	uxtb	r3, r3
 800212c:	2b00      	cmp	r3, #0
 800212e:	d12c      	bne.n	800218a <Powerstep01_CmdGetParam+0x12a>
 8002130:	2201      	movs	r2, #1
 8002132:	683b      	ldr	r3, [r7, #0]
 8002134:	409a      	lsls	r2, r3
 8002136:	4b3a      	ldr	r3, [pc, #232]	@ (8002220 <Powerstep01_CmdGetParam+0x1c0>)
 8002138:	4013      	ands	r3, r2
 800213a:	2b00      	cmp	r3, #0
 800213c:	bf14      	ite	ne
 800213e:	2301      	movne	r3, #1
 8002140:	2300      	moveq	r3, #0
 8002142:	b2db      	uxtb	r3, r3
 8002144:	2b00      	cmp	r3, #0
 8002146:	d113      	bne.n	8002170 <Powerstep01_CmdGetParam+0x110>
 8002148:	f002 031a 	and.w	r3, r2, #26
 800214c:	2b00      	cmp	r3, #0
 800214e:	bf14      	ite	ne
 8002150:	2301      	movne	r3, #1
 8002152:	2300      	moveq	r3, #0
 8002154:	b2db      	uxtb	r3, r3
 8002156:	2b00      	cmp	r3, #0
 8002158:	d017      	beq.n	800218a <Powerstep01_CmdGetParam+0x12a>
      {
        case POWERSTEP01_ABS_POS: 
        case POWERSTEP01_MARK:
        case POWERSTEP01_SPEED:
          spiTxBursts[0][spiIndex] = ((uint8_t)POWERSTEP01_GET_PARAM )| (param);
 800215a:	683b      	ldr	r3, [r7, #0]
 800215c:	b2da      	uxtb	r2, r3
 800215e:	7b7b      	ldrb	r3, [r7, #13]
 8002160:	f042 0220 	orr.w	r2, r2, #32
 8002164:	b2d1      	uxtb	r1, r2
 8002166:	4a2c      	ldr	r2, [pc, #176]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 8002168:	54d1      	strb	r1, [r2, r3]
          maxArgumentNbBytes = 3;
 800216a:	2303      	movs	r3, #3
 800216c:	73fb      	strb	r3, [r7, #15]
          break;
 800216e:	e018      	b.n	80021a2 <Powerstep01_CmdGetParam+0x142>
        case POWERSTEP01_FS_SPD:
        case POWERSTEP01_INT_SPD:
        case POWERSTEP01_CONFIG:
        case POWERSTEP01_GATECFG1:
        case POWERSTEP01_STATUS:
          spiTxBursts[1][spiIndex] = ((uint8_t)POWERSTEP01_GET_PARAM )| (param);
 8002170:	683b      	ldr	r3, [r7, #0]
 8002172:	b2da      	uxtb	r2, r3
 8002174:	7b7b      	ldrb	r3, [r7, #13]
 8002176:	f042 0220 	orr.w	r2, r2, #32
 800217a:	b2d1      	uxtb	r1, r2
 800217c:	4a26      	ldr	r2, [pc, #152]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 800217e:	4413      	add	r3, r2
 8002180:	460a      	mov	r2, r1
 8002182:	705a      	strb	r2, [r3, #1]
          maxArgumentNbBytes = 2;
 8002184:	2302      	movs	r3, #2
 8002186:	73fb      	strb	r3, [r7, #15]
          break;
 8002188:	e00b      	b.n	80021a2 <Powerstep01_CmdGetParam+0x142>
      default:
          spiTxBursts[2][spiIndex] = ((uint8_t)POWERSTEP01_GET_PARAM )| (param);
 800218a:	683b      	ldr	r3, [r7, #0]
 800218c:	b2da      	uxtb	r2, r3
 800218e:	7b7b      	ldrb	r3, [r7, #13]
 8002190:	f042 0220 	orr.w	r2, r2, #32
 8002194:	b2d1      	uxtb	r1, r2
 8002196:	4a20      	ldr	r2, [pc, #128]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 8002198:	4413      	add	r3, r2
 800219a:	460a      	mov	r2, r1
 800219c:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 1;
 800219e:	2301      	movs	r3, #1
 80021a0:	73fb      	strb	r3, [r7, #15]
      }
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 80021a2:	f002 f88f 	bl	80042c4 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 80021a6:	2301      	movs	r3, #1
 80021a8:	73bb      	strb	r3, [r7, #14]
    } while (spiPreemtionByIsr); // check pre-emption by ISR
 80021aa:	4b1a      	ldr	r3, [pc, #104]	@ (8002214 <Powerstep01_CmdGetParam+0x1b4>)
 80021ac:	781b      	ldrb	r3, [r3, #0]
 80021ae:	b2db      	uxtb	r3, r3
 80021b0:	2b00      	cmp	r3, #0
 80021b2:	f47f af70 	bne.w	8002096 <Powerstep01_CmdGetParam+0x36>
    for (loop = POWERSTEP01_CMD_ARG_MAX_NB_BYTES-1-maxArgumentNbBytes;
 80021b6:	7bfb      	ldrb	r3, [r7, #15]
 80021b8:	f1c3 0303 	rsb	r3, r3, #3
 80021bc:	613b      	str	r3, [r7, #16]
 80021be:	e00c      	b.n	80021da <Powerstep01_CmdGetParam+0x17a>
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
         loop++)
    {
       Powerstep01_WriteBytes(&spiTxBursts[loop][0],
 80021c0:	693b      	ldr	r3, [r7, #16]
 80021c2:	4a15      	ldr	r2, [pc, #84]	@ (8002218 <Powerstep01_CmdGetParam+0x1b8>)
 80021c4:	441a      	add	r2, r3
 80021c6:	693b      	ldr	r3, [r7, #16]
 80021c8:	4914      	ldr	r1, [pc, #80]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80021ca:	440b      	add	r3, r1
 80021cc:	4619      	mov	r1, r3
 80021ce:	4610      	mov	r0, r2
 80021d0:	f001 fc46 	bl	8003a60 <Powerstep01_WriteBytes>
         loop++)
 80021d4:	693b      	ldr	r3, [r7, #16]
 80021d6:	3301      	adds	r3, #1
 80021d8:	613b      	str	r3, [r7, #16]
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
 80021da:	693b      	ldr	r3, [r7, #16]
 80021dc:	2b03      	cmp	r3, #3
 80021de:	d9ef      	bls.n	80021c0 <Powerstep01_CmdGetParam+0x160>
                             &spiRxBursts[loop][0]);
    }
    spiRxData = ((uint32_t)spiRxBursts[1][spiIndex] << 16)|
 80021e0:	7b7b      	ldrb	r3, [r7, #13]
 80021e2:	4a0e      	ldr	r2, [pc, #56]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80021e4:	4413      	add	r3, r2
 80021e6:	785b      	ldrb	r3, [r3, #1]
 80021e8:	041a      	lsls	r2, r3, #16
                 (spiRxBursts[2][spiIndex] << 8) |
 80021ea:	7b7b      	ldrb	r3, [r7, #13]
 80021ec:	490b      	ldr	r1, [pc, #44]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80021ee:	440b      	add	r3, r1
 80021f0:	789b      	ldrb	r3, [r3, #2]
 80021f2:	021b      	lsls	r3, r3, #8
    spiRxData = ((uint32_t)spiRxBursts[1][spiIndex] << 16)|
 80021f4:	4313      	orrs	r3, r2
                 (spiRxBursts[3][spiIndex]);    
 80021f6:	7b7a      	ldrb	r2, [r7, #13]
 80021f8:	4908      	ldr	r1, [pc, #32]	@ (800221c <Powerstep01_CmdGetParam+0x1bc>)
 80021fa:	440a      	add	r2, r1
 80021fc:	78d2      	ldrb	r2, [r2, #3]
    spiRxData = ((uint32_t)spiRxBursts[1][spiIndex] << 16)|
 80021fe:	4313      	orrs	r3, r2
 8002200:	617b      	str	r3, [r7, #20]
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();
 8002202:	f002 f868 	bl	80042d6 <Powerstep01_Board_EnableIrq>
  }

  return (spiRxData);
 8002206:	697b      	ldr	r3, [r7, #20]
}
 8002208:	4618      	mov	r0, r3
 800220a:	3718      	adds	r7, #24
 800220c:	46bd      	mov	sp, r7
 800220e:	bd80      	pop	{r7, pc}
 8002210:	200008a4 	.word	0x200008a4
 8002214:	200008b0 	.word	0x200008b0
 8002218:	200008a8 	.word	0x200008a8
 800221c:	200008ac 	.word	0x200008ac
 8002220:	0d2021e4 	.word	0x0d2021e4

08002224 <Powerstep01_CmdGetStatus>:
 * @brief Issues PowerStep01 Get Status command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval Status Register content
 *********************************************************/
uint16_t Powerstep01_CmdGetStatus(uint8_t deviceId)
{
 8002224:	b580      	push	{r7, lr}
 8002226:	b086      	sub	sp, #24
 8002228:	af00      	add	r7, sp, #0
 800222a:	4603      	mov	r3, r0
 800222c:	71fb      	strb	r3, [r7, #7]
  uint16_t status = 0;
 800222e:	2300      	movs	r3, #0
 8002230:	82fb      	strh	r3, [r7, #22]
  if (numberOfDevices > deviceId)
 8002232:	4b45      	ldr	r3, [pc, #276]	@ (8002348 <Powerstep01_CmdGetStatus+0x124>)
 8002234:	781b      	ldrb	r3, [r3, #0]
 8002236:	b2db      	uxtb	r3, r3
 8002238:	79fa      	ldrb	r2, [r7, #7]
 800223a:	429a      	cmp	r2, r3
 800223c:	d27e      	bcs.n	800233c <Powerstep01_CmdGetStatus+0x118>
  {
    uint32_t loop;
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 800223e:	4b42      	ldr	r3, [pc, #264]	@ (8002348 <Powerstep01_CmdGetStatus+0x124>)
 8002240:	781b      	ldrb	r3, [r3, #0]
 8002242:	b2da      	uxtb	r2, r3
 8002244:	79fb      	ldrb	r3, [r7, #7]
 8002246:	1ad3      	subs	r3, r2, r3
 8002248:	b2db      	uxtb	r3, r3
 800224a:	3b01      	subs	r3, #1
 800224c:	73bb      	strb	r3, [r7, #14]
    bool itDisable = FALSE; 
 800224e:	2300      	movs	r3, #0
 8002250:	73fb      	strb	r3, [r7, #15]
 
    do
    {
      spiPreemtionByIsr = FALSE;
 8002252:	4b3e      	ldr	r3, [pc, #248]	@ (800234c <Powerstep01_CmdGetStatus+0x128>)
 8002254:	2200      	movs	r2, #0
 8002256:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 8002258:	7bfb      	ldrb	r3, [r7, #15]
 800225a:	2b00      	cmp	r3, #0
 800225c:	d003      	beq.n	8002266 <Powerstep01_CmdGetStatus+0x42>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 800225e:	f002 f83a 	bl	80042d6 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 8002262:	2300      	movs	r3, #0
 8002264:	73fb      	strb	r3, [r7, #15]
      }    
      for (loop = 0; loop < numberOfDevices; loop++)
 8002266:	2300      	movs	r3, #0
 8002268:	613b      	str	r3, [r7, #16]
 800226a:	e030      	b.n	80022ce <Powerstep01_CmdGetStatus+0xaa>
      {
         spiTxBursts[0][loop] = POWERSTEP01_NOP;
 800226c:	4a38      	ldr	r2, [pc, #224]	@ (8002350 <Powerstep01_CmdGetStatus+0x12c>)
 800226e:	693b      	ldr	r3, [r7, #16]
 8002270:	4413      	add	r3, r2
 8002272:	2200      	movs	r2, #0
 8002274:	701a      	strb	r2, [r3, #0]
         spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8002276:	4a36      	ldr	r2, [pc, #216]	@ (8002350 <Powerstep01_CmdGetStatus+0x12c>)
 8002278:	693b      	ldr	r3, [r7, #16]
 800227a:	4413      	add	r3, r2
 800227c:	3301      	adds	r3, #1
 800227e:	2200      	movs	r2, #0
 8002280:	701a      	strb	r2, [r3, #0]
         spiTxBursts[2][loop] = POWERSTEP01_NOP;
 8002282:	4a33      	ldr	r2, [pc, #204]	@ (8002350 <Powerstep01_CmdGetStatus+0x12c>)
 8002284:	693b      	ldr	r3, [r7, #16]
 8002286:	4413      	add	r3, r2
 8002288:	3302      	adds	r3, #2
 800228a:	2200      	movs	r2, #0
 800228c:	701a      	strb	r2, [r3, #0]
         spiTxBursts[3][loop] = POWERSTEP01_NOP;
 800228e:	4a30      	ldr	r2, [pc, #192]	@ (8002350 <Powerstep01_CmdGetStatus+0x12c>)
 8002290:	693b      	ldr	r3, [r7, #16]
 8002292:	4413      	add	r3, r2
 8002294:	3303      	adds	r3, #3
 8002296:	2200      	movs	r2, #0
 8002298:	701a      	strb	r2, [r3, #0]
         spiRxBursts[0][loop] = 0;
 800229a:	4a2e      	ldr	r2, [pc, #184]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 800229c:	693b      	ldr	r3, [r7, #16]
 800229e:	4413      	add	r3, r2
 80022a0:	2200      	movs	r2, #0
 80022a2:	701a      	strb	r2, [r3, #0]
         spiRxBursts[1][loop] = 0;
 80022a4:	4a2b      	ldr	r2, [pc, #172]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 80022a6:	693b      	ldr	r3, [r7, #16]
 80022a8:	4413      	add	r3, r2
 80022aa:	3301      	adds	r3, #1
 80022ac:	2200      	movs	r2, #0
 80022ae:	701a      	strb	r2, [r3, #0]
         spiRxBursts[2][loop] = 0;
 80022b0:	4a28      	ldr	r2, [pc, #160]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 80022b2:	693b      	ldr	r3, [r7, #16]
 80022b4:	4413      	add	r3, r2
 80022b6:	3302      	adds	r3, #2
 80022b8:	2200      	movs	r2, #0
 80022ba:	701a      	strb	r2, [r3, #0]
         spiRxBursts[3][loop] = 0;       
 80022bc:	4a25      	ldr	r2, [pc, #148]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 80022be:	693b      	ldr	r3, [r7, #16]
 80022c0:	4413      	add	r3, r2
 80022c2:	3303      	adds	r3, #3
 80022c4:	2200      	movs	r2, #0
 80022c6:	701a      	strb	r2, [r3, #0]
      for (loop = 0; loop < numberOfDevices; loop++)
 80022c8:	693b      	ldr	r3, [r7, #16]
 80022ca:	3301      	adds	r3, #1
 80022cc:	613b      	str	r3, [r7, #16]
 80022ce:	4b1e      	ldr	r3, [pc, #120]	@ (8002348 <Powerstep01_CmdGetStatus+0x124>)
 80022d0:	781b      	ldrb	r3, [r3, #0]
 80022d2:	b2db      	uxtb	r3, r3
 80022d4:	461a      	mov	r2, r3
 80022d6:	693b      	ldr	r3, [r7, #16]
 80022d8:	4293      	cmp	r3, r2
 80022da:	d3c7      	bcc.n	800226c <Powerstep01_CmdGetStatus+0x48>
      }
      spiTxBursts[0][spiIndex] = POWERSTEP01_GET_STATUS;
 80022dc:	7bbb      	ldrb	r3, [r7, #14]
 80022de:	4a1c      	ldr	r2, [pc, #112]	@ (8002350 <Powerstep01_CmdGetStatus+0x12c>)
 80022e0:	21d0      	movs	r1, #208	@ 0xd0
 80022e2:	54d1      	strb	r1, [r2, r3]
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 80022e4:	f001 ffee 	bl	80042c4 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 80022e8:	2301      	movs	r3, #1
 80022ea:	73fb      	strb	r3, [r7, #15]
    } while (spiPreemtionByIsr); // check pre-emption by ISR  
 80022ec:	4b17      	ldr	r3, [pc, #92]	@ (800234c <Powerstep01_CmdGetStatus+0x128>)
 80022ee:	781b      	ldrb	r3, [r3, #0]
 80022f0:	b2db      	uxtb	r3, r3
 80022f2:	2b00      	cmp	r3, #0
 80022f4:	d1ad      	bne.n	8002252 <Powerstep01_CmdGetStatus+0x2e>
    for (loop = 0; loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + POWERSTEP01_RSP_NB_BYTES_GET_STATUS; loop++)
 80022f6:	2300      	movs	r3, #0
 80022f8:	613b      	str	r3, [r7, #16]
 80022fa:	e00c      	b.n	8002316 <Powerstep01_CmdGetStatus+0xf2>
    {
       Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 80022fc:	693b      	ldr	r3, [r7, #16]
 80022fe:	4a14      	ldr	r2, [pc, #80]	@ (8002350 <Powerstep01_CmdGetStatus+0x12c>)
 8002300:	441a      	add	r2, r3
 8002302:	693b      	ldr	r3, [r7, #16]
 8002304:	4913      	ldr	r1, [pc, #76]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 8002306:	440b      	add	r3, r1
 8002308:	4619      	mov	r1, r3
 800230a:	4610      	mov	r0, r2
 800230c:	f001 fba8 	bl	8003a60 <Powerstep01_WriteBytes>
    for (loop = 0; loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + POWERSTEP01_RSP_NB_BYTES_GET_STATUS; loop++)
 8002310:	693b      	ldr	r3, [r7, #16]
 8002312:	3301      	adds	r3, #1
 8002314:	613b      	str	r3, [r7, #16]
 8002316:	693b      	ldr	r3, [r7, #16]
 8002318:	2b02      	cmp	r3, #2
 800231a:	d9ef      	bls.n	80022fc <Powerstep01_CmdGetStatus+0xd8>
    }
    status = (spiRxBursts[1][spiIndex] << 8) | (spiRxBursts[2][spiIndex]);
 800231c:	7bbb      	ldrb	r3, [r7, #14]
 800231e:	4a0d      	ldr	r2, [pc, #52]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 8002320:	4413      	add	r3, r2
 8002322:	785b      	ldrb	r3, [r3, #1]
 8002324:	021b      	lsls	r3, r3, #8
 8002326:	b21a      	sxth	r2, r3
 8002328:	7bbb      	ldrb	r3, [r7, #14]
 800232a:	490a      	ldr	r1, [pc, #40]	@ (8002354 <Powerstep01_CmdGetStatus+0x130>)
 800232c:	440b      	add	r3, r1
 800232e:	789b      	ldrb	r3, [r3, #2]
 8002330:	b21b      	sxth	r3, r3
 8002332:	4313      	orrs	r3, r2
 8002334:	b21b      	sxth	r3, r3
 8002336:	82fb      	strh	r3, [r7, #22]
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();    
 8002338:	f001 ffcd 	bl	80042d6 <Powerstep01_Board_EnableIrq>
  }
  return (status);
 800233c:	8afb      	ldrh	r3, [r7, #22]
}
 800233e:	4618      	mov	r0, r3
 8002340:	3718      	adds	r7, #24
 8002342:	46bd      	mov	sp, r7
 8002344:	bd80      	pop	{r7, pc}
 8002346:	bf00      	nop
 8002348:	200008a4 	.word	0x200008a4
 800234c:	200008b0 	.word	0x200008b0
 8002350:	200008a8 	.word	0x200008a8
 8002354:	200008ac 	.word	0x200008ac

08002358 <Powerstep01_CmdGoHome>:
 * @brief Issues PowerStep01 Go Home command (Shortest path to zero position)
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoHome(uint8_t deviceId)
{
 8002358:	b580      	push	{r7, lr}
 800235a:	b082      	sub	sp, #8
 800235c:	af00      	add	r7, sp, #0
 800235e:	4603      	mov	r3, r0
 8002360:	71fb      	strb	r3, [r7, #7]
   Powerstep01_SendCommand(deviceId, POWERSTEP01_GO_HOME, 0);   
 8002362:	79fb      	ldrb	r3, [r7, #7]
 8002364:	2200      	movs	r2, #0
 8002366:	2170      	movs	r1, #112	@ 0x70
 8002368:	4618      	mov	r0, r3
 800236a:	f000 ff67 	bl	800323c <Powerstep01_SendCommand>
}
 800236e:	bf00      	nop
 8002370:	3708      	adds	r7, #8
 8002372:	46bd      	mov	sp, r7
 8002374:	bd80      	pop	{r7, pc}

08002376 <Powerstep01_CmdGoMark>:
 * @brief Issues PowerStep01 Go Mark command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoMark(uint8_t deviceId)
{
 8002376:	b580      	push	{r7, lr}
 8002378:	b082      	sub	sp, #8
 800237a:	af00      	add	r7, sp, #0
 800237c:	4603      	mov	r3, r0
 800237e:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_GO_MARK, 0);     
 8002380:	79fb      	ldrb	r3, [r7, #7]
 8002382:	2200      	movs	r2, #0
 8002384:	2178      	movs	r1, #120	@ 0x78
 8002386:	4618      	mov	r0, r3
 8002388:	f000 ff58 	bl	800323c <Powerstep01_SendCommand>
}
 800238c:	bf00      	nop
 800238e:	3708      	adds	r7, #8
 8002390:	46bd      	mov	sp, r7
 8002392:	bd80      	pop	{r7, pc}

08002394 <Powerstep01_CmdGoTo>:
 * @param[in] abs_pos absolute position in steps in agreement
 * with the step mode where requested to move
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoTo(uint8_t deviceId, int32_t abs_pos)
{
 8002394:	b580      	push	{r7, lr}
 8002396:	b082      	sub	sp, #8
 8002398:	af00      	add	r7, sp, #0
 800239a:	4603      	mov	r3, r0
 800239c:	6039      	str	r1, [r7, #0]
 800239e:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_GO_TO, abs_pos);  
 80023a0:	683a      	ldr	r2, [r7, #0]
 80023a2:	79fb      	ldrb	r3, [r7, #7]
 80023a4:	2160      	movs	r1, #96	@ 0x60
 80023a6:	4618      	mov	r0, r3
 80023a8:	f000 ff48 	bl	800323c <Powerstep01_SendCommand>
}
 80023ac:	bf00      	nop
 80023ae:	3708      	adds	r7, #8
 80023b0:	46bd      	mov	sp, r7
 80023b2:	bd80      	pop	{r7, pc}

080023b4 <Powerstep01_CmdGoToDir>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdGoToDir(uint8_t deviceId, 
                            motorDir_t direction,
                            int32_t abs_pos)
{
 80023b4:	b580      	push	{r7, lr}
 80023b6:	b082      	sub	sp, #8
 80023b8:	af00      	add	r7, sp, #0
 80023ba:	4603      	mov	r3, r0
 80023bc:	603a      	str	r2, [r7, #0]
 80023be:	71fb      	strb	r3, [r7, #7]
 80023c0:	460b      	mov	r3, r1
 80023c2:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 80023c4:	79bb      	ldrb	r3, [r7, #6]
 80023c6:	f043 0368 	orr.w	r3, r3, #104	@ 0x68
 80023ca:	b2d9      	uxtb	r1, r3
 80023cc:	683a      	ldr	r2, [r7, #0]
 80023ce:	79fb      	ldrb	r3, [r7, #7]
 80023d0:	4618      	mov	r0, r3
 80023d2:	f000 ff33 	bl	800323c <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_GO_TO_DIR | 
                          (uint8_t)direction, abs_pos);  
}
 80023d6:	bf00      	nop
 80023d8:	3708      	adds	r7, #8
 80023da:	46bd      	mov	sp, r7
 80023dc:	bd80      	pop	{r7, pc}

080023de <Powerstep01_CmdGoUntil>:
 *********************************************************/
void Powerstep01_CmdGoUntil(uint8_t deviceId, 
                           motorAction_t action, 
                           motorDir_t direction, 
                           uint32_t speed)
{
 80023de:	b580      	push	{r7, lr}
 80023e0:	b082      	sub	sp, #8
 80023e2:	af00      	add	r7, sp, #0
 80023e4:	603b      	str	r3, [r7, #0]
 80023e6:	4603      	mov	r3, r0
 80023e8:	71fb      	strb	r3, [r7, #7]
 80023ea:	460b      	mov	r3, r1
 80023ec:	71bb      	strb	r3, [r7, #6]
 80023ee:	4613      	mov	r3, r2
 80023f0:	717b      	strb	r3, [r7, #5]
  Powerstep01_SendCommand(deviceId,
 80023f2:	79ba      	ldrb	r2, [r7, #6]
 80023f4:	797b      	ldrb	r3, [r7, #5]
 80023f6:	4313      	orrs	r3, r2
 80023f8:	b2db      	uxtb	r3, r3
 80023fa:	f063 037d 	orn	r3, r3, #125	@ 0x7d
 80023fe:	b2d9      	uxtb	r1, r3
 8002400:	79fb      	ldrb	r3, [r7, #7]
 8002402:	683a      	ldr	r2, [r7, #0]
 8002404:	4618      	mov	r0, r3
 8002406:	f000 ff19 	bl	800323c <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_GO_UNTIL | (uint8_t)action | (uint8_t)direction,
                          speed); 
}
 800240a:	bf00      	nop
 800240c:	3708      	adds	r7, #8
 800240e:	46bd      	mov	sp, r7
 8002410:	bd80      	pop	{r7, pc}

08002412 <Powerstep01_CmdHardHiZ>:
 * When the motor is stopped, a HardHiZ command forces the bridges 
 * to enter high impedance state.
 * This command can be given anytime and is immediately executed.
 *********************************************************/
void Powerstep01_CmdHardHiZ(uint8_t deviceId)
{
 8002412:	b580      	push	{r7, lr}
 8002414:	b082      	sub	sp, #8
 8002416:	af00      	add	r7, sp, #0
 8002418:	4603      	mov	r3, r0
 800241a:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_HARD_HIZ, 0);    
 800241c:	79fb      	ldrb	r3, [r7, #7]
 800241e:	2200      	movs	r2, #0
 8002420:	21a8      	movs	r1, #168	@ 0xa8
 8002422:	4618      	mov	r0, r3
 8002424:	f000 ff0a 	bl	800323c <Powerstep01_SendCommand>
}
 8002428:	bf00      	nop
 800242a:	3708      	adds	r7, #8
 800242c:	46bd      	mov	sp, r7
 800242e:	bd80      	pop	{r7, pc}

08002430 <Powerstep01_CmdHardStop>:
 * forces the bridges to exit high impedance state; no motion is performed.
 * This command can be given anytime and is immediately executed.
 * This command keeps the BUSY flag low until the motor is stopped.
 *********************************************************/
void Powerstep01_CmdHardStop(uint8_t deviceId)
{
 8002430:	b580      	push	{r7, lr}
 8002432:	b082      	sub	sp, #8
 8002434:	af00      	add	r7, sp, #0
 8002436:	4603      	mov	r3, r0
 8002438:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_HARD_STOP, 0);         
 800243a:	79fb      	ldrb	r3, [r7, #7]
 800243c:	2200      	movs	r2, #0
 800243e:	21b8      	movs	r1, #184	@ 0xb8
 8002440:	4618      	mov	r0, r3
 8002442:	f000 fefb 	bl	800323c <Powerstep01_SendCommand>
}
 8002446:	bf00      	nop
 8002448:	3708      	adds	r7, #8
 800244a:	46bd      	mov	sp, r7
 800244c:	bd80      	pop	{r7, pc}

0800244e <Powerstep01_CmdMove>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdMove(uint8_t deviceId, 
                         motorDir_t direction, 
                         uint32_t n_step)
{
 800244e:	b580      	push	{r7, lr}
 8002450:	b082      	sub	sp, #8
 8002452:	af00      	add	r7, sp, #0
 8002454:	4603      	mov	r3, r0
 8002456:	603a      	str	r2, [r7, #0]
 8002458:	71fb      	strb	r3, [r7, #7]
 800245a:	460b      	mov	r3, r1
 800245c:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 800245e:	79bb      	ldrb	r3, [r7, #6]
 8002460:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8002464:	b2d9      	uxtb	r1, r3
 8002466:	79fb      	ldrb	r3, [r7, #7]
 8002468:	683a      	ldr	r2, [r7, #0]
 800246a:	4618      	mov	r0, r3
 800246c:	f000 fee6 	bl	800323c <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_MOVE | 
                          (uint8_t)direction, n_step);  
}
 8002470:	bf00      	nop
 8002472:	3708      	adds	r7, #8
 8002474:	46bd      	mov	sp, r7
 8002476:	bd80      	pop	{r7, pc}

08002478 <Powerstep01_CmdNop>:
 * @brief Issues PowerStep01 NOP command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdNop(uint8_t deviceId)
{
 8002478:	b580      	push	{r7, lr}
 800247a:	b082      	sub	sp, #8
 800247c:	af00      	add	r7, sp, #0
 800247e:	4603      	mov	r3, r0
 8002480:	71fb      	strb	r3, [r7, #7]
  /* Send NOP operation code to PowerStep01 */
  Powerstep01_SendCommand(deviceId, POWERSTEP01_NOP, 0);
 8002482:	79fb      	ldrb	r3, [r7, #7]
 8002484:	2200      	movs	r2, #0
 8002486:	2100      	movs	r1, #0
 8002488:	4618      	mov	r0, r3
 800248a:	f000 fed7 	bl	800323c <Powerstep01_SendCommand>
}
 800248e:	bf00      	nop
 8002490:	3708      	adds	r7, #8
 8002492:	46bd      	mov	sp, r7
 8002494:	bd80      	pop	{r7, pc}

08002496 <Powerstep01_CmdReleaseSw>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdReleaseSw(uint8_t deviceId, 
                             motorAction_t action, 
                             motorDir_t direction)
{
 8002496:	b580      	push	{r7, lr}
 8002498:	b082      	sub	sp, #8
 800249a:	af00      	add	r7, sp, #0
 800249c:	4603      	mov	r3, r0
 800249e:	71fb      	strb	r3, [r7, #7]
 80024a0:	460b      	mov	r3, r1
 80024a2:	71bb      	strb	r3, [r7, #6]
 80024a4:	4613      	mov	r3, r2
 80024a6:	717b      	strb	r3, [r7, #5]
   Powerstep01_SendCommand(deviceId, 
 80024a8:	79ba      	ldrb	r2, [r7, #6]
 80024aa:	797b      	ldrb	r3, [r7, #5]
 80024ac:	4313      	orrs	r3, r2
 80024ae:	b2db      	uxtb	r3, r3
 80024b0:	f063 036d 	orn	r3, r3, #109	@ 0x6d
 80024b4:	b2d9      	uxtb	r1, r3
 80024b6:	79fb      	ldrb	r3, [r7, #7]
 80024b8:	2200      	movs	r2, #0
 80024ba:	4618      	mov	r0, r3
 80024bc:	f000 febe 	bl	800323c <Powerstep01_SendCommand>
                           (uint8_t)POWERSTEP01_RELEASE_SW | 
                           (uint8_t)action | 
                           (uint8_t)direction, 
                           0); 
}
 80024c0:	bf00      	nop
 80024c2:	3708      	adds	r7, #8
 80024c4:	46bd      	mov	sp, r7
 80024c6:	bd80      	pop	{r7, pc}

080024c8 <Powerstep01_CmdResetDevice>:
 * @brief Issues PowerStep01 Reset Device command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdResetDevice(uint8_t deviceId)
{
 80024c8:	b580      	push	{r7, lr}
 80024ca:	b082      	sub	sp, #8
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	4603      	mov	r3, r0
 80024d0:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_RESET_DEVICE, 0);         
 80024d2:	79fb      	ldrb	r3, [r7, #7]
 80024d4:	2200      	movs	r2, #0
 80024d6:	21c0      	movs	r1, #192	@ 0xc0
 80024d8:	4618      	mov	r0, r3
 80024da:	f000 feaf 	bl	800323c <Powerstep01_SendCommand>
}
 80024de:	bf00      	nop
 80024e0:	3708      	adds	r7, #8
 80024e2:	46bd      	mov	sp, r7
 80024e4:	bd80      	pop	{r7, pc}

080024e6 <Powerstep01_CmdResetPos>:
 * @brief Issues PowerStep01 Reset Pos command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 *********************************************************/
void Powerstep01_CmdResetPos(uint8_t deviceId)
{
 80024e6:	b580      	push	{r7, lr}
 80024e8:	b082      	sub	sp, #8
 80024ea:	af00      	add	r7, sp, #0
 80024ec:	4603      	mov	r3, r0
 80024ee:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_RESET_POS, 0);       
 80024f0:	79fb      	ldrb	r3, [r7, #7]
 80024f2:	2200      	movs	r2, #0
 80024f4:	21d8      	movs	r1, #216	@ 0xd8
 80024f6:	4618      	mov	r0, r3
 80024f8:	f000 fea0 	bl	800323c <Powerstep01_SendCommand>
}
 80024fc:	bf00      	nop
 80024fe:	3708      	adds	r7, #8
 8002500:	46bd      	mov	sp, r7
 8002502:	bd80      	pop	{r7, pc}

08002504 <Powerstep01_CmdRun>:
 * @retval None
 *********************************************************/
void Powerstep01_CmdRun(uint8_t deviceId, 
                       motorDir_t direction,
                       uint32_t speed)
{
 8002504:	b580      	push	{r7, lr}
 8002506:	b082      	sub	sp, #8
 8002508:	af00      	add	r7, sp, #0
 800250a:	4603      	mov	r3, r0
 800250c:	603a      	str	r2, [r7, #0]
 800250e:	71fb      	strb	r3, [r7, #7]
 8002510:	460b      	mov	r3, r1
 8002512:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 8002514:	79bb      	ldrb	r3, [r7, #6]
 8002516:	f043 0350 	orr.w	r3, r3, #80	@ 0x50
 800251a:	b2d9      	uxtb	r1, r3
 800251c:	79fb      	ldrb	r3, [r7, #7]
 800251e:	683a      	ldr	r2, [r7, #0]
 8002520:	4618      	mov	r0, r3
 8002522:	f000 fe8b 	bl	800323c <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_RUN|(uint8_t)direction,
                          speed);
}
 8002526:	bf00      	nop
 8002528:	3708      	adds	r7, #8
 800252a:	46bd      	mov	sp, r7
 800252c:	bd80      	pop	{r7, pc}
	...

08002530 <Powerstep01_CmdSetParam>:
 * @param[in] param Register adress (POWERSTEP01_ABS_POS, POWERSTEP01_MARK,...)
 * @param[in] value Value to set in the register
 * @retval None
 *********************************************************/
void Powerstep01_CmdSetParam(uint8_t deviceId, uint32_t param, uint32_t value)
{
 8002530:	b580      	push	{r7, lr}
 8002532:	b086      	sub	sp, #24
 8002534:	af00      	add	r7, sp, #0
 8002536:	4603      	mov	r3, r0
 8002538:	60b9      	str	r1, [r7, #8]
 800253a:	607a      	str	r2, [r7, #4]
 800253c:	73fb      	strb	r3, [r7, #15]

  if (numberOfDevices > deviceId)
 800253e:	4b5e      	ldr	r3, [pc, #376]	@ (80026b8 <Powerstep01_CmdSetParam+0x188>)
 8002540:	781b      	ldrb	r3, [r3, #0]
 8002542:	b2db      	uxtb	r3, r3
 8002544:	7bfa      	ldrb	r2, [r7, #15]
 8002546:	429a      	cmp	r2, r3
 8002548:	f080 80b2 	bcs.w	80026b0 <Powerstep01_CmdSetParam+0x180>
  {
    uint32_t loop;
    uint8_t maxArgumentNbBytes = 0;
 800254c:	2300      	movs	r3, #0
 800254e:	74fb      	strb	r3, [r7, #19]
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8002550:	4b59      	ldr	r3, [pc, #356]	@ (80026b8 <Powerstep01_CmdSetParam+0x188>)
 8002552:	781b      	ldrb	r3, [r3, #0]
 8002554:	b2da      	uxtb	r2, r3
 8002556:	7bfb      	ldrb	r3, [r7, #15]
 8002558:	1ad3      	subs	r3, r2, r3
 800255a:	b2db      	uxtb	r3, r3
 800255c:	3b01      	subs	r3, #1
 800255e:	747b      	strb	r3, [r7, #17]
    bool itDisable = FALSE;
 8002560:	2300      	movs	r3, #0
 8002562:	74bb      	strb	r3, [r7, #18]
    
    do
    {
      spiPreemtionByIsr = FALSE;
 8002564:	4b55      	ldr	r3, [pc, #340]	@ (80026bc <Powerstep01_CmdSetParam+0x18c>)
 8002566:	2200      	movs	r2, #0
 8002568:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 800256a:	7cbb      	ldrb	r3, [r7, #18]
 800256c:	2b00      	cmp	r3, #0
 800256e:	d003      	beq.n	8002578 <Powerstep01_CmdSetParam+0x48>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 8002570:	f001 feb1 	bl	80042d6 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 8002574:	2300      	movs	r3, #0
 8002576:	74bb      	strb	r3, [r7, #18]
      }  
      for (loop = 0;loop < numberOfDevices; loop++)
 8002578:	2300      	movs	r3, #0
 800257a:	617b      	str	r3, [r7, #20]
 800257c:	e019      	b.n	80025b2 <Powerstep01_CmdSetParam+0x82>
      {
        spiTxBursts[0][loop] = POWERSTEP01_NOP;
 800257e:	4a50      	ldr	r2, [pc, #320]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002580:	697b      	ldr	r3, [r7, #20]
 8002582:	4413      	add	r3, r2
 8002584:	2200      	movs	r2, #0
 8002586:	701a      	strb	r2, [r3, #0]
        spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8002588:	4a4d      	ldr	r2, [pc, #308]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 800258a:	697b      	ldr	r3, [r7, #20]
 800258c:	4413      	add	r3, r2
 800258e:	3301      	adds	r3, #1
 8002590:	2200      	movs	r2, #0
 8002592:	701a      	strb	r2, [r3, #0]
        spiTxBursts[2][loop] = POWERSTEP01_NOP;
 8002594:	4a4a      	ldr	r2, [pc, #296]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002596:	697b      	ldr	r3, [r7, #20]
 8002598:	4413      	add	r3, r2
 800259a:	3302      	adds	r3, #2
 800259c:	2200      	movs	r2, #0
 800259e:	701a      	strb	r2, [r3, #0]
        spiTxBursts[3][loop] = POWERSTEP01_NOP;
 80025a0:	4a47      	ldr	r2, [pc, #284]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 80025a2:	697b      	ldr	r3, [r7, #20]
 80025a4:	4413      	add	r3, r2
 80025a6:	3303      	adds	r3, #3
 80025a8:	2200      	movs	r2, #0
 80025aa:	701a      	strb	r2, [r3, #0]
      for (loop = 0;loop < numberOfDevices; loop++)
 80025ac:	697b      	ldr	r3, [r7, #20]
 80025ae:	3301      	adds	r3, #1
 80025b0:	617b      	str	r3, [r7, #20]
 80025b2:	4b41      	ldr	r3, [pc, #260]	@ (80026b8 <Powerstep01_CmdSetParam+0x188>)
 80025b4:	781b      	ldrb	r3, [r3, #0]
 80025b6:	b2db      	uxtb	r3, r3
 80025b8:	461a      	mov	r2, r3
 80025ba:	697b      	ldr	r3, [r7, #20]
 80025bc:	4293      	cmp	r3, r2
 80025be:	d3de      	bcc.n	800257e <Powerstep01_CmdSetParam+0x4e>
      }
      switch (param)
 80025c0:	68bb      	ldr	r3, [r7, #8]
 80025c2:	2b1a      	cmp	r3, #26
 80025c4:	bf8c      	ite	hi
 80025c6:	2301      	movhi	r3, #1
 80025c8:	2300      	movls	r3, #0
 80025ca:	b2db      	uxtb	r3, r3
 80025cc:	2b00      	cmp	r3, #0
 80025ce:	d13e      	bne.n	800264e <Powerstep01_CmdSetParam+0x11e>
 80025d0:	2201      	movs	r2, #1
 80025d2:	68bb      	ldr	r3, [r7, #8]
 80025d4:	409a      	lsls	r2, r3
 80025d6:	4b3b      	ldr	r3, [pc, #236]	@ (80026c4 <Powerstep01_CmdSetParam+0x194>)
 80025d8:	4013      	ands	r3, r2
 80025da:	2b00      	cmp	r3, #0
 80025dc:	bf14      	ite	ne
 80025de:	2301      	movne	r3, #1
 80025e0:	2300      	moveq	r3, #0
 80025e2:	b2db      	uxtb	r3, r3
 80025e4:	2b00      	cmp	r3, #0
 80025e6:	d120      	bne.n	800262a <Powerstep01_CmdSetParam+0xfa>
 80025e8:	f002 030a 	and.w	r3, r2, #10
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	bf14      	ite	ne
 80025f0:	2301      	movne	r3, #1
 80025f2:	2300      	moveq	r3, #0
 80025f4:	b2db      	uxtb	r3, r3
 80025f6:	2b00      	cmp	r3, #0
 80025f8:	d029      	beq.n	800264e <Powerstep01_CmdSetParam+0x11e>
      {
        case POWERSTEP01_ABS_POS: ;
        case POWERSTEP01_MARK:
          spiTxBursts[0][spiIndex] = ((uint8_t)POWERSTEP01_SET_PARAM )| (param);
 80025fa:	7c7b      	ldrb	r3, [r7, #17]
 80025fc:	68ba      	ldr	r2, [r7, #8]
 80025fe:	b2d1      	uxtb	r1, r2
 8002600:	4a2f      	ldr	r2, [pc, #188]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002602:	54d1      	strb	r1, [r2, r3]
          spiTxBursts[1][spiIndex] = (uint8_t)(value >> 16);
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	0c1a      	lsrs	r2, r3, #16
 8002608:	7c7b      	ldrb	r3, [r7, #17]
 800260a:	b2d1      	uxtb	r1, r2
 800260c:	4a2c      	ldr	r2, [pc, #176]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 800260e:	4413      	add	r3, r2
 8002610:	460a      	mov	r2, r1
 8002612:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 8002614:	687b      	ldr	r3, [r7, #4]
 8002616:	0a1a      	lsrs	r2, r3, #8
 8002618:	7c7b      	ldrb	r3, [r7, #17]
 800261a:	b2d1      	uxtb	r1, r2
 800261c:	4a28      	ldr	r2, [pc, #160]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 800261e:	4413      	add	r3, r2
 8002620:	460a      	mov	r2, r1
 8002622:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 3;
 8002624:	2303      	movs	r3, #3
 8002626:	74fb      	strb	r3, [r7, #19]
          break;
 8002628:	e01a      	b.n	8002660 <Powerstep01_CmdSetParam+0x130>
        case POWERSTEP01_MIN_SPEED:
        case POWERSTEP01_FS_SPD:
        case POWERSTEP01_INT_SPD:
        case POWERSTEP01_CONFIG:
        case POWERSTEP01_GATECFG1:
          spiTxBursts[1][spiIndex] = ((uint8_t)POWERSTEP01_SET_PARAM )| (param);
 800262a:	7c7b      	ldrb	r3, [r7, #17]
 800262c:	68ba      	ldr	r2, [r7, #8]
 800262e:	b2d1      	uxtb	r1, r2
 8002630:	4a23      	ldr	r2, [pc, #140]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002632:	4413      	add	r3, r2
 8002634:	460a      	mov	r2, r1
 8002636:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 8002638:	687b      	ldr	r3, [r7, #4]
 800263a:	0a1a      	lsrs	r2, r3, #8
 800263c:	7c7b      	ldrb	r3, [r7, #17]
 800263e:	b2d1      	uxtb	r1, r2
 8002640:	4a1f      	ldr	r2, [pc, #124]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002642:	4413      	add	r3, r2
 8002644:	460a      	mov	r2, r1
 8002646:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 2;
 8002648:	2302      	movs	r3, #2
 800264a:	74fb      	strb	r3, [r7, #19]
          break;
 800264c:	e008      	b.n	8002660 <Powerstep01_CmdSetParam+0x130>
        default:
          spiTxBursts[2][spiIndex] = ((uint8_t)POWERSTEP01_SET_PARAM )| (param);
 800264e:	7c7b      	ldrb	r3, [r7, #17]
 8002650:	68ba      	ldr	r2, [r7, #8]
 8002652:	b2d1      	uxtb	r1, r2
 8002654:	4a1a      	ldr	r2, [pc, #104]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002656:	4413      	add	r3, r2
 8002658:	460a      	mov	r2, r1
 800265a:	709a      	strb	r2, [r3, #2]
          maxArgumentNbBytes = 1;
 800265c:	2301      	movs	r3, #1
 800265e:	74fb      	strb	r3, [r7, #19]
      }
      spiTxBursts[3][spiIndex] = (uint8_t)(value);
 8002660:	7c7b      	ldrb	r3, [r7, #17]
 8002662:	687a      	ldr	r2, [r7, #4]
 8002664:	b2d1      	uxtb	r1, r2
 8002666:	4a16      	ldr	r2, [pc, #88]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002668:	4413      	add	r3, r2
 800266a:	460a      	mov	r2, r1
 800266c:	70da      	strb	r2, [r3, #3]
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 800266e:	f001 fe29 	bl	80042c4 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 8002672:	2301      	movs	r3, #1
 8002674:	74bb      	strb	r3, [r7, #18]
    } while (spiPreemtionByIsr); // check pre-emption by ISR  
 8002676:	4b11      	ldr	r3, [pc, #68]	@ (80026bc <Powerstep01_CmdSetParam+0x18c>)
 8002678:	781b      	ldrb	r3, [r3, #0]
 800267a:	b2db      	uxtb	r3, r3
 800267c:	2b00      	cmp	r3, #0
 800267e:	f47f af71 	bne.w	8002564 <Powerstep01_CmdSetParam+0x34>
    /* SPI transfer */
    for (loop = POWERSTEP01_CMD_ARG_MAX_NB_BYTES - 1 - maxArgumentNbBytes;
 8002682:	7cfb      	ldrb	r3, [r7, #19]
 8002684:	f1c3 0303 	rsb	r3, r3, #3
 8002688:	617b      	str	r3, [r7, #20]
 800268a:	e00c      	b.n	80026a6 <Powerstep01_CmdSetParam+0x176>
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
         loop++)
    {
      Powerstep01_WriteBytes(&spiTxBursts[loop][0],&spiRxBursts[loop][0]);
 800268c:	697b      	ldr	r3, [r7, #20]
 800268e:	4a0c      	ldr	r2, [pc, #48]	@ (80026c0 <Powerstep01_CmdSetParam+0x190>)
 8002690:	441a      	add	r2, r3
 8002692:	697b      	ldr	r3, [r7, #20]
 8002694:	490c      	ldr	r1, [pc, #48]	@ (80026c8 <Powerstep01_CmdSetParam+0x198>)
 8002696:	440b      	add	r3, r1
 8002698:	4619      	mov	r1, r3
 800269a:	4610      	mov	r0, r2
 800269c:	f001 f9e0 	bl	8003a60 <Powerstep01_WriteBytes>
         loop++)
 80026a0:	697b      	ldr	r3, [r7, #20]
 80026a2:	3301      	adds	r3, #1
 80026a4:	617b      	str	r3, [r7, #20]
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES;
 80026a6:	697b      	ldr	r3, [r7, #20]
 80026a8:	2b03      	cmp	r3, #3
 80026aa:	d9ef      	bls.n	800268c <Powerstep01_CmdSetParam+0x15c>
    }
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();
 80026ac:	f001 fe13 	bl	80042d6 <Powerstep01_Board_EnableIrq>
  }
}
 80026b0:	bf00      	nop
 80026b2:	3718      	adds	r7, #24
 80026b4:	46bd      	mov	sp, r7
 80026b6:	bd80      	pop	{r7, pc}
 80026b8:	200008a4 	.word	0x200008a4
 80026bc:	200008b0 	.word	0x200008b0
 80026c0:	200008a8 	.word	0x200008a8
 80026c4:	052021e4 	.word	0x052021e4
 80026c8:	200008ac 	.word	0x200008ac

080026cc <Powerstep01_CmdSoftHiZ>:
 * to enter high impedance state.
 * This command can be given anytime and is immediately executed.
 * This command keeps the BUSY flag low until the motor is stopped.
 *********************************************************/
void Powerstep01_CmdSoftHiZ(uint8_t deviceId)
{
 80026cc:	b580      	push	{r7, lr}
 80026ce:	b082      	sub	sp, #8
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	4603      	mov	r3, r0
 80026d4:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_SOFT_HIZ, 0);           
 80026d6:	79fb      	ldrb	r3, [r7, #7]
 80026d8:	2200      	movs	r2, #0
 80026da:	21a0      	movs	r1, #160	@ 0xa0
 80026dc:	4618      	mov	r0, r3
 80026de:	f000 fdad 	bl	800323c <Powerstep01_SendCommand>
}
 80026e2:	bf00      	nop
 80026e4:	3708      	adds	r7, #8
 80026e6:	46bd      	mov	sp, r7
 80026e8:	bd80      	pop	{r7, pc}

080026ea <Powerstep01_CmdSoftStop>:
 * No motion is performed.
 * This command can be given anytime and is immediately executed.
 * This command keeps the BUSY flag low until the motor is stopped.
 *********************************************************/
void Powerstep01_CmdSoftStop(uint8_t deviceId)
{
 80026ea:	b580      	push	{r7, lr}
 80026ec:	b082      	sub	sp, #8
 80026ee:	af00      	add	r7, sp, #0
 80026f0:	4603      	mov	r3, r0
 80026f2:	71fb      	strb	r3, [r7, #7]
  Powerstep01_SendCommand(deviceId, POWERSTEP01_SOFT_STOP, 0);         
 80026f4:	79fb      	ldrb	r3, [r7, #7]
 80026f6:	2200      	movs	r2, #0
 80026f8:	21b0      	movs	r1, #176	@ 0xb0
 80026fa:	4618      	mov	r0, r3
 80026fc:	f000 fd9e 	bl	800323c <Powerstep01_SendCommand>
}
 8002700:	bf00      	nop
 8002702:	3708      	adds	r7, #8
 8002704:	46bd      	mov	sp, r7
 8002706:	bd80      	pop	{r7, pc}

08002708 <Powerstep01_CmdStepClock>:
 * @param[in] direction Movement direction (FORWARD, BACKWARD)
 * @retval None
 *********************************************************/
void Powerstep01_CmdStepClock(uint8_t deviceId,
                             motorDir_t direction)
{
 8002708:	b580      	push	{r7, lr}
 800270a:	b082      	sub	sp, #8
 800270c:	af00      	add	r7, sp, #0
 800270e:	4603      	mov	r3, r0
 8002710:	460a      	mov	r2, r1
 8002712:	71fb      	strb	r3, [r7, #7]
 8002714:	4613      	mov	r3, r2
 8002716:	71bb      	strb	r3, [r7, #6]
  Powerstep01_SendCommand(deviceId, 
 8002718:	79bb      	ldrb	r3, [r7, #6]
 800271a:	f043 0358 	orr.w	r3, r3, #88	@ 0x58
 800271e:	b2d9      	uxtb	r1, r3
 8002720:	79fb      	ldrb	r3, [r7, #7]
 8002722:	2200      	movs	r2, #0
 8002724:	4618      	mov	r0, r3
 8002726:	f000 fd89 	bl	800323c <Powerstep01_SendCommand>
                          (uint8_t)POWERSTEP01_STEP_CLOCK | (uint8_t)direction,
                          0);  
}
 800272a:	bf00      	nop
 800272c:	3708      	adds	r7, #8
 800272e:	46bd      	mov	sp, r7
 8002730:	bd80      	pop	{r7, pc}
	...

08002734 <Powerstep01_FetchAndClearAllStatus>:
 * provided there is no other calls to functions which 
 * use the SPI in between.
 * @retval None
 *********************************************************/
void Powerstep01_FetchAndClearAllStatus(void)
{
 8002734:	b580      	push	{r7, lr}
 8002736:	b082      	sub	sp, #8
 8002738:	af00      	add	r7, sp, #0
  uint8_t loop;

  for (loop = 0; loop < numberOfDevices; loop++)
 800273a:	2300      	movs	r3, #0
 800273c:	71fb      	strb	r3, [r7, #7]
 800273e:	e028      	b.n	8002792 <Powerstep01_FetchAndClearAllStatus+0x5e>
  {
     spiTxBursts[0][loop] = POWERSTEP01_GET_STATUS;
 8002740:	79fb      	ldrb	r3, [r7, #7]
 8002742:	4a23      	ldr	r2, [pc, #140]	@ (80027d0 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 8002744:	21d0      	movs	r1, #208	@ 0xd0
 8002746:	54d1      	strb	r1, [r2, r3]
     spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8002748:	79fb      	ldrb	r3, [r7, #7]
 800274a:	4a21      	ldr	r2, [pc, #132]	@ (80027d0 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 800274c:	4413      	add	r3, r2
 800274e:	2200      	movs	r2, #0
 8002750:	705a      	strb	r2, [r3, #1]
     spiTxBursts[2][loop] = POWERSTEP01_NOP;
 8002752:	79fb      	ldrb	r3, [r7, #7]
 8002754:	4a1e      	ldr	r2, [pc, #120]	@ (80027d0 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 8002756:	4413      	add	r3, r2
 8002758:	2200      	movs	r2, #0
 800275a:	709a      	strb	r2, [r3, #2]
     spiTxBursts[3][loop] = POWERSTEP01_NOP;
 800275c:	79fb      	ldrb	r3, [r7, #7]
 800275e:	4a1c      	ldr	r2, [pc, #112]	@ (80027d0 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 8002760:	4413      	add	r3, r2
 8002762:	2200      	movs	r2, #0
 8002764:	70da      	strb	r2, [r3, #3]
     spiRxBursts[0][loop] = 0;
 8002766:	79fb      	ldrb	r3, [r7, #7]
 8002768:	4a1a      	ldr	r2, [pc, #104]	@ (80027d4 <Powerstep01_FetchAndClearAllStatus+0xa0>)
 800276a:	2100      	movs	r1, #0
 800276c:	54d1      	strb	r1, [r2, r3]
     spiRxBursts[1][loop] = 0;
 800276e:	79fb      	ldrb	r3, [r7, #7]
 8002770:	4a18      	ldr	r2, [pc, #96]	@ (80027d4 <Powerstep01_FetchAndClearAllStatus+0xa0>)
 8002772:	4413      	add	r3, r2
 8002774:	2200      	movs	r2, #0
 8002776:	705a      	strb	r2, [r3, #1]
     spiRxBursts[2][loop] = 0;
 8002778:	79fb      	ldrb	r3, [r7, #7]
 800277a:	4a16      	ldr	r2, [pc, #88]	@ (80027d4 <Powerstep01_FetchAndClearAllStatus+0xa0>)
 800277c:	4413      	add	r3, r2
 800277e:	2200      	movs	r2, #0
 8002780:	709a      	strb	r2, [r3, #2]
     spiRxBursts[3][loop] = 0;
 8002782:	79fb      	ldrb	r3, [r7, #7]
 8002784:	4a13      	ldr	r2, [pc, #76]	@ (80027d4 <Powerstep01_FetchAndClearAllStatus+0xa0>)
 8002786:	4413      	add	r3, r2
 8002788:	2200      	movs	r2, #0
 800278a:	70da      	strb	r2, [r3, #3]
  for (loop = 0; loop < numberOfDevices; loop++)
 800278c:	79fb      	ldrb	r3, [r7, #7]
 800278e:	3301      	adds	r3, #1
 8002790:	71fb      	strb	r3, [r7, #7]
 8002792:	4b11      	ldr	r3, [pc, #68]	@ (80027d8 <Powerstep01_FetchAndClearAllStatus+0xa4>)
 8002794:	781b      	ldrb	r3, [r3, #0]
 8002796:	b2db      	uxtb	r3, r3
 8002798:	79fa      	ldrb	r2, [r7, #7]
 800279a:	429a      	cmp	r2, r3
 800279c:	d3d0      	bcc.n	8002740 <Powerstep01_FetchAndClearAllStatus+0xc>
  }
  for (loop = 0; 
 800279e:	2300      	movs	r3, #0
 80027a0:	71fb      	strb	r3, [r7, #7]
 80027a2:	e00c      	b.n	80027be <Powerstep01_FetchAndClearAllStatus+0x8a>
       loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + 
              POWERSTEP01_RSP_NB_BYTES_GET_STATUS; 
       loop++)
  {
     Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 80027a4:	79fb      	ldrb	r3, [r7, #7]
 80027a6:	4a0a      	ldr	r2, [pc, #40]	@ (80027d0 <Powerstep01_FetchAndClearAllStatus+0x9c>)
 80027a8:	441a      	add	r2, r3
 80027aa:	79fb      	ldrb	r3, [r7, #7]
 80027ac:	4909      	ldr	r1, [pc, #36]	@ (80027d4 <Powerstep01_FetchAndClearAllStatus+0xa0>)
 80027ae:	440b      	add	r3, r1
 80027b0:	4619      	mov	r1, r3
 80027b2:	4610      	mov	r0, r2
 80027b4:	f001 f954 	bl	8003a60 <Powerstep01_WriteBytes>
       loop++)
 80027b8:	79fb      	ldrb	r3, [r7, #7]
 80027ba:	3301      	adds	r3, #1
 80027bc:	71fb      	strb	r3, [r7, #7]
       loop < POWERSTEP01_CMD_ARG_NB_BYTES_GET_STATUS + 
 80027be:	79fb      	ldrb	r3, [r7, #7]
 80027c0:	2b02      	cmp	r3, #2
 80027c2:	d9ef      	bls.n	80027a4 <Powerstep01_FetchAndClearAllStatus+0x70>
  }
}
 80027c4:	bf00      	nop
 80027c6:	bf00      	nop
 80027c8:	3708      	adds	r7, #8
 80027ca:	46bd      	mov	sp, r7
 80027cc:	bd80      	pop	{r7, pc}
 80027ce:	bf00      	nop
 80027d0:	200008a8 	.word	0x200008a8
 80027d4:	200008ac 	.word	0x200008ac
 80027d8:	200008a4 	.word	0x200008a4

080027dc <Powerstep01_GetFetchedStatus>:
 * no other calls to functions which use the SPI.
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval Last fetched value of the STATUS register
 *********************************************************/
uint16_t Powerstep01_GetFetchedStatus(uint8_t deviceId)
{
 80027dc:	b480      	push	{r7}
 80027de:	b085      	sub	sp, #20
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	4603      	mov	r3, r0
 80027e4:	71fb      	strb	r3, [r7, #7]
  uint16_t status = 0;
 80027e6:	2300      	movs	r3, #0
 80027e8:	81fb      	strh	r3, [r7, #14]
  if (numberOfDevices > deviceId)
 80027ea:	4b11      	ldr	r3, [pc, #68]	@ (8002830 <Powerstep01_GetFetchedStatus+0x54>)
 80027ec:	781b      	ldrb	r3, [r3, #0]
 80027ee:	b2db      	uxtb	r3, r3
 80027f0:	79fa      	ldrb	r2, [r7, #7]
 80027f2:	429a      	cmp	r2, r3
 80027f4:	d215      	bcs.n	8002822 <Powerstep01_GetFetchedStatus+0x46>
  {
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 80027f6:	4b0e      	ldr	r3, [pc, #56]	@ (8002830 <Powerstep01_GetFetchedStatus+0x54>)
 80027f8:	781b      	ldrb	r3, [r3, #0]
 80027fa:	b2da      	uxtb	r2, r3
 80027fc:	79fb      	ldrb	r3, [r7, #7]
 80027fe:	1ad3      	subs	r3, r2, r3
 8002800:	b2db      	uxtb	r3, r3
 8002802:	3b01      	subs	r3, #1
 8002804:	737b      	strb	r3, [r7, #13]
    status = (spiRxBursts[1][spiIndex] << 8) | (spiRxBursts[2][spiIndex]);
 8002806:	7b7b      	ldrb	r3, [r7, #13]
 8002808:	4a0a      	ldr	r2, [pc, #40]	@ (8002834 <Powerstep01_GetFetchedStatus+0x58>)
 800280a:	4413      	add	r3, r2
 800280c:	785b      	ldrb	r3, [r3, #1]
 800280e:	021b      	lsls	r3, r3, #8
 8002810:	b21a      	sxth	r2, r3
 8002812:	7b7b      	ldrb	r3, [r7, #13]
 8002814:	4907      	ldr	r1, [pc, #28]	@ (8002834 <Powerstep01_GetFetchedStatus+0x58>)
 8002816:	440b      	add	r3, r1
 8002818:	789b      	ldrb	r3, [r3, #2]
 800281a:	b21b      	sxth	r3, r3
 800281c:	4313      	orrs	r3, r2
 800281e:	b21b      	sxth	r3, r3
 8002820:	81fb      	strh	r3, [r7, #14]
  }
  return (status);
 8002822:	89fb      	ldrh	r3, [r7, #14]
}
 8002824:	4618      	mov	r0, r3
 8002826:	3714      	adds	r7, #20
 8002828:	46bd      	mov	sp, r7
 800282a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800282e:	4770      	bx	lr
 8002830:	200008a4 	.word	0x200008a4
 8002834:	200008ac 	.word	0x200008ac

08002838 <Powerstep01_GetMotorHandle>:
/******************************************************//**
 * @brief Return motor handle (pointer to the powerSTEP01 motor driver structure)
 * @retval Pointer to the motorDrv_t structure
 **********************************************************/
motorDrv_t* Powerstep01_GetMotorHandle(void)
{
 8002838:	b480      	push	{r7}
 800283a:	af00      	add	r7, sp, #0
  return (&powerstep01Drv);
 800283c:	4b02      	ldr	r3, [pc, #8]	@ (8002848 <Powerstep01_GetMotorHandle+0x10>)
}
 800283e:	4618      	mov	r0, r3
 8002840:	46bd      	mov	sp, r7
 8002842:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002846:	4770      	bx	lr
 8002848:	20000030 	.word	0x20000030

0800284c <Powerstep01_GetFwVersion>:
/******************************************************//**
 * @brief Returns the FW version of the library
 * @retval POWERSTEP01_FW_VERSION
 **********************************************************/
uint32_t Powerstep01_GetFwVersion(void)
{
 800284c:	b480      	push	{r7}
 800284e:	af00      	add	r7, sp, #0
  return (POWERSTEP01_FW_VERSION);
 8002850:	4b02      	ldr	r3, [pc, #8]	@ (800285c <Powerstep01_GetFwVersion+0x10>)
}
 8002852:	4618      	mov	r0, r3
 8002854:	46bd      	mov	sp, r7
 8002856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800285a:	4770      	bx	lr
 800285c:	00010500 	.word	0x00010500

08002860 <Powerstep01_GetMark>:
 * @brief  Returns the mark position  of the specified device
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval Mark register value converted in a 32b signed integer 
 **********************************************************/
int32_t Powerstep01_GetMark(uint8_t deviceId)
{
 8002860:	b580      	push	{r7, lr}
 8002862:	b082      	sub	sp, #8
 8002864:	af00      	add	r7, sp, #0
 8002866:	4603      	mov	r3, r0
 8002868:	71fb      	strb	r3, [r7, #7]
  return Powerstep01_ConvertPosition(Powerstep01_CmdGetParam(deviceId, POWERSTEP01_MARK));
 800286a:	79fb      	ldrb	r3, [r7, #7]
 800286c:	2103      	movs	r1, #3
 800286e:	4618      	mov	r0, r3
 8002870:	f7ff fbf6 	bl	8002060 <Powerstep01_CmdGetParam>
 8002874:	4603      	mov	r3, r0
 8002876:	4618      	mov	r0, r3
 8002878:	f000 fc7e 	bl	8003178 <Powerstep01_ConvertPosition>
 800287c:	4603      	mov	r3, r0
}
 800287e:	4618      	mov	r0, r3
 8002880:	3708      	adds	r7, #8
 8002882:	46bd      	mov	sp, r7
 8002884:	bd80      	pop	{r7, pc}
	...

08002888 <Powerstep01_GetNbDevices>:
/******************************************************//**
 * @brief Return the number of devices in the daisy chain 
 * @retval number of devices from 1 to MAX_NUMBER_OF_DEVICES
 *********************************************************/
uint8_t Powerstep01_GetNbDevices(void)
{
 8002888:	b480      	push	{r7}
 800288a:	af00      	add	r7, sp, #0
    return (numberOfDevices);
 800288c:	4b03      	ldr	r3, [pc, #12]	@ (800289c <Powerstep01_GetNbDevices+0x14>)
 800288e:	781b      	ldrb	r3, [r3, #0]
 8002890:	b2db      	uxtb	r3, r3
}
 8002892:	4618      	mov	r0, r3
 8002894:	46bd      	mov	sp, r7
 8002896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800289a:	4770      	bx	lr
 800289c:	200008a4 	.word	0x200008a4

080028a0 <Powerstep01_GetAnalogValue>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] param PowerStep01 register address
 * @retval Register value - 1 to 3 bytes (depends on register)
 *********************************************************/
float Powerstep01_GetAnalogValue(uint8_t deviceId, uint32_t param)
{
 80028a0:	b580      	push	{r7, lr}
 80028a2:	b086      	sub	sp, #24
 80028a4:	af00      	add	r7, sp, #0
 80028a6:	4603      	mov	r3, r0
 80028a8:	6039      	str	r1, [r7, #0]
 80028aa:	71fb      	strb	r3, [r7, #7]
  bool voltageMode = ((POWERSTEP01_CM_VM_CURRENT&Powerstep01_CmdGetParam(deviceId,POWERSTEP01_STEP_MODE))==0);
 80028ac:	79fb      	ldrb	r3, [r7, #7]
 80028ae:	2116      	movs	r1, #22
 80028b0:	4618      	mov	r0, r3
 80028b2:	f7ff fbd5 	bl	8002060 <Powerstep01_CmdGetParam>
 80028b6:	4603      	mov	r3, r0
 80028b8:	f003 0308 	and.w	r3, r3, #8
 80028bc:	2b00      	cmp	r3, #0
 80028be:	bf0c      	ite	eq
 80028c0:	2301      	moveq	r3, #1
 80028c2:	2300      	movne	r3, #0
 80028c4:	b2db      	uxtb	r3, r3
 80028c6:	74fb      	strb	r3, [r7, #19]
  uint32_t registerValue = Powerstep01_CmdGetParam(deviceId, param);
 80028c8:	79fb      	ldrb	r3, [r7, #7]
 80028ca:	6839      	ldr	r1, [r7, #0]
 80028cc:	4618      	mov	r0, r3
 80028ce:	f7ff fbc7 	bl	8002060 <Powerstep01_CmdGetParam>
 80028d2:	60f8      	str	r0, [r7, #12]
  float value;
  switch (param)
 80028d4:	683b      	ldr	r3, [r7, #0]
 80028d6:	3b01      	subs	r3, #1
 80028d8:	2b14      	cmp	r3, #20
 80028da:	f200 8090 	bhi.w	80029fe <Powerstep01_GetAnalogValue+0x15e>
 80028de:	a201      	add	r2, pc, #4	@ (adr r2, 80028e4 <Powerstep01_GetAnalogValue+0x44>)
 80028e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80028e4:	08002939 	.word	0x08002939
 80028e8:	080029ff 	.word	0x080029ff
 80028ec:	08002939 	.word	0x08002939
 80028f0:	08002959 	.word	0x08002959
 80028f4:	0800294d 	.word	0x0800294d
 80028f8:	0800294d 	.word	0x0800294d
 80028fc:	08002965 	.word	0x08002965
 8002900:	08002971 	.word	0x08002971
 8002904:	080029bd 	.word	0x080029bd
 8002908:	080029bd 	.word	0x080029bd
 800290c:	080029bd 	.word	0x080029bd
 8002910:	080029bd 	.word	0x080029bd
 8002914:	08002999 	.word	0x08002999
 8002918:	080029db 	.word	0x080029db
 800291c:	080029e1 	.word	0x080029e1
 8002920:	080029e1 	.word	0x080029e1
 8002924:	080029a5 	.word	0x080029a5
 8002928:	080029ff 	.word	0x080029ff
 800292c:	080029b1 	.word	0x080029b1
 8002930:	080029b1 	.word	0x080029b1
 8002934:	08002985 	.word	0x08002985
  {
    case POWERSTEP01_ABS_POS:
    case POWERSTEP01_MARK:
      value = (float) Powerstep01_ConvertPosition(registerValue);
 8002938:	68f8      	ldr	r0, [r7, #12]
 800293a:	f000 fc1d 	bl	8003178 <Powerstep01_ConvertPosition>
 800293e:	ee07 0a90 	vmov	s15, r0
 8002942:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002946:	edc7 7a05 	vstr	s15, [r7, #20]
      break;
 800294a:	e061      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_ACC:
    case POWERSTEP01_DEC:
      value = Powerstep01_AccDec_RegVal_to_Steps_s2(registerValue);
 800294c:	68f8      	ldr	r0, [r7, #12]
 800294e:	f001 f8c9 	bl	8003ae4 <Powerstep01_AccDec_RegVal_to_Steps_s2>
 8002952:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 8002956:	e05b      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_SPEED:
      value = Powerstep01_Speed_RegVal_to_Steps_s(registerValue);
 8002958:	68f8      	ldr	r0, [r7, #12]
 800295a:	f001 fa45 	bl	8003de8 <Powerstep01_Speed_RegVal_to_Steps_s>
 800295e:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 8002962:	e055      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_MAX_SPEED:
      value = Powerstep01_MaxSpd_RegVal_to_Steps_s(registerValue);
 8002964:	68f8      	ldr	r0, [r7, #12]
 8002966:	f001 f9f7 	bl	8003d58 <Powerstep01_MaxSpd_RegVal_to_Steps_s>
 800296a:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 800296e:	e04f      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_MIN_SPEED:
      registerValue &= POWERSTEP01_MIN_SPEED_MASK;
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002976:	60fb      	str	r3, [r7, #12]
      value = Powerstep01_MinSpd_RegVal_to_Steps_s(registerValue);
 8002978:	68f8      	ldr	r0, [r7, #12]
 800297a:	f001 fa1f 	bl	8003dbc <Powerstep01_MinSpd_RegVal_to_Steps_s>
 800297e:	ed87 0a05 	vstr	s0, [r7, #20]
      break;      
 8002982:	e045      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_FS_SPD:
      registerValue &= POWERSTEP01_FS_SPD_MASK;
 8002984:	68fb      	ldr	r3, [r7, #12]
 8002986:	f3c3 0309 	ubfx	r3, r3, #0, #10
 800298a:	60fb      	str	r3, [r7, #12]
      value = Powerstep01_FSSpd_RegVal_to_Steps_s(registerValue);
 800298c:	68f8      	ldr	r0, [r7, #12]
 800298e:	f001 f90b 	bl	8003ba8 <Powerstep01_FSSpd_RegVal_to_Steps_s>
 8002992:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 8002996:	e03b      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_INT_SPD:
      value = Powerstep01_IntSpd_RegVal_to_Steps_s(registerValue);
 8002998:	68f8      	ldr	r0, [r7, #12]
 800299a:	f001 f93d 	bl	8003c18 <Powerstep01_IntSpd_RegVal_to_Steps_s>
 800299e:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80029a2:	e035      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_K_THERM:
      value = Powerstep01_KTherm_RegVal_to_Comp(registerValue);
 80029a4:	68f8      	ldr	r0, [r7, #12]
 80029a6:	f001 f96f 	bl	8003c88 <Powerstep01_KTherm_RegVal_to_Comp>
 80029aa:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80029ae:	e02f      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_OCD_TH:
    case POWERSTEP01_STALL_TH:
      value = Powerstep01_StallOcd_RegVal_to_Th(registerValue);
 80029b0:	68f8      	ldr	r0, [r7, #12]
 80029b2:	f001 fa53 	bl	8003e5c <Powerstep01_StallOcd_RegVal_to_Th>
 80029b6:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80029ba:	e029      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_KVAL_HOLD:  //POWERSTEP01_TVAL_HOLD
    case POWERSTEP01_KVAL_RUN:   //POWERSTEP01_TVAL_RUN
    case POWERSTEP01_KVAL_ACC:   //POWERSTEP01_TVAL_ACC
    case POWERSTEP01_KVAL_DEC:   //POWERSTEP01_TVAL_DEC
      if (voltageMode!=FALSE)  value = Powerstep01_Kval_RegVal_to_Perc(registerValue);
 80029bc:	7cfb      	ldrb	r3, [r7, #19]
 80029be:	2b00      	cmp	r3, #0
 80029c0:	d005      	beq.n	80029ce <Powerstep01_GetAnalogValue+0x12e>
 80029c2:	68f8      	ldr	r0, [r7, #12]
 80029c4:	f001 f998 	bl	8003cf8 <Powerstep01_Kval_RegVal_to_Perc>
 80029c8:	ed87 0a05 	vstr	s0, [r7, #20]
      else value = Powerstep01_Tval_RegVal_to_RefVoltage(registerValue);     
      break;
 80029cc:	e020      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
      else value = Powerstep01_Tval_RegVal_to_RefVoltage(registerValue);     
 80029ce:	68f8      	ldr	r0, [r7, #12]
 80029d0:	f001 fa80 	bl	8003ed4 <Powerstep01_Tval_RegVal_to_RefVoltage>
 80029d4:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80029d8:	e01a      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    case POWERSTEP01_ST_SLP:
      if (voltageMode==FALSE) 
 80029da:	7cfb      	ldrb	r3, [r7, #19]
 80029dc:	2b00      	cmp	r3, #0
 80029de:	d016      	beq.n	8002a0e <Powerstep01_GetAnalogValue+0x16e>
      {
        break;
      }      
    case POWERSTEP01_FN_SLP_ACC: //POWERSTEP01_TON_MIN
    case POWERSTEP01_FN_SLP_DEC: //POWERSTEP01_TOFF_MIN
      if (voltageMode!=FALSE) value = Powerstep01_BEMFslope_RegVal_to_Perc(registerValue);
 80029e0:	7cfb      	ldrb	r3, [r7, #19]
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d005      	beq.n	80029f2 <Powerstep01_GetAnalogValue+0x152>
 80029e6:	68f8      	ldr	r0, [r7, #12]
 80029e8:	f001 f8b0 	bl	8003b4c <Powerstep01_BEMFslope_RegVal_to_Perc>
 80029ec:	ed87 0a05 	vstr	s0, [r7, #20]
      else value = Powerstep01_Tmin_RegVal_to_Time(registerValue);
      break;
 80029f0:	e00e      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
      else value = Powerstep01_Tmin_RegVal_to_Time(registerValue);
 80029f2:	68f8      	ldr	r0, [r7, #12]
 80029f4:	f001 faa3 	bl	8003f3e <Powerstep01_Tmin_RegVal_to_Time>
 80029f8:	ed87 0a05 	vstr	s0, [r7, #20]
      break;
 80029fc:	e008      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
    default:
      value = (float) registerValue;
 80029fe:	68fb      	ldr	r3, [r7, #12]
 8002a00:	ee07 3a90 	vmov	s15, r3
 8002a04:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002a08:	edc7 7a05 	vstr	s15, [r7, #20]
 8002a0c:	e000      	b.n	8002a10 <Powerstep01_GetAnalogValue+0x170>
        break;
 8002a0e:	bf00      	nop
  }
  return value;
 8002a10:	697b      	ldr	r3, [r7, #20]
 8002a12:	ee07 3a90 	vmov	s15, r3
}
 8002a16:	eeb0 0a67 	vmov.f32	s0, s15
 8002a1a:	3718      	adds	r7, #24
 8002a1c:	46bd      	mov	sp, r7
 8002a1e:	bd80      	pop	{r7, pc}

08002a20 <Powerstep01_GetPosition>:
 * @brief  Returns the ABS_POSITION of the specified device
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval ABS_POSITION register value converted in a 32b signed integer
 **********************************************************/
int32_t Powerstep01_GetPosition(uint8_t deviceId)
{
 8002a20:	b580      	push	{r7, lr}
 8002a22:	b082      	sub	sp, #8
 8002a24:	af00      	add	r7, sp, #0
 8002a26:	4603      	mov	r3, r0
 8002a28:	71fb      	strb	r3, [r7, #7]
  return Powerstep01_ConvertPosition(Powerstep01_CmdGetParam(deviceId, POWERSTEP01_ABS_POS));
 8002a2a:	79fb      	ldrb	r3, [r7, #7]
 8002a2c:	2101      	movs	r1, #1
 8002a2e:	4618      	mov	r0, r3
 8002a30:	f7ff fb16 	bl	8002060 <Powerstep01_CmdGetParam>
 8002a34:	4603      	mov	r3, r0
 8002a36:	4618      	mov	r0, r3
 8002a38:	f000 fb9e 	bl	8003178 <Powerstep01_ConvertPosition>
 8002a3c:	4603      	mov	r3, r0
}
 8002a3e:	4618      	mov	r0, r3
 8002a40:	3708      	adds	r7, #8
 8002a42:	46bd      	mov	sp, r7
 8002a44:	bd80      	pop	{r7, pc}

08002a46 <Powerstep01_IsDeviceBusy>:
 * by reading the Busy flag bit ot its status Register
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval true if device is busy, false zero
 *********************************************************/
bool Powerstep01_IsDeviceBusy(uint8_t deviceId)
{
 8002a46:	b580      	push	{r7, lr}
 8002a48:	b082      	sub	sp, #8
 8002a4a:	af00      	add	r7, sp, #0
 8002a4c:	4603      	mov	r3, r0
 8002a4e:	71fb      	strb	r3, [r7, #7]
  if(!(Powerstep01_CmdGetStatus(deviceId) & POWERSTEP01_STATUS_BUSY)) 
 8002a50:	79fb      	ldrb	r3, [r7, #7]
 8002a52:	4618      	mov	r0, r3
 8002a54:	f7ff fbe6 	bl	8002224 <Powerstep01_CmdGetStatus>
 8002a58:	4603      	mov	r3, r0
 8002a5a:	f003 0302 	and.w	r3, r3, #2
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d101      	bne.n	8002a66 <Powerstep01_IsDeviceBusy+0x20>
  {
    return TRUE;
 8002a62:	2301      	movs	r3, #1
 8002a64:	e000      	b.n	8002a68 <Powerstep01_IsDeviceBusy+0x22>
  }
  else 
  {
    return FALSE;
 8002a66:	2300      	movs	r3, #0
  }
}
 8002a68:	4618      	mov	r0, r3
 8002a6a:	3708      	adds	r7, #8
 8002a6c:	46bd      	mov	sp, r7
 8002a6e:	bd80      	pop	{r7, pc}

08002a70 <Powerstep01_QueueCommands>:
 * POWERSTEP01_GET_STATUS)
 * @param[in] value argument of the command to queue
 * @retval None
 *********************************************************/
void Powerstep01_QueueCommands(uint8_t deviceId, uint8_t command, int32_t value)
{
 8002a70:	b480      	push	{r7}
 8002a72:	b085      	sub	sp, #20
 8002a74:	af00      	add	r7, sp, #0
 8002a76:	4603      	mov	r3, r0
 8002a78:	603a      	str	r2, [r7, #0]
 8002a7a:	71fb      	strb	r3, [r7, #7]
 8002a7c:	460b      	mov	r3, r1
 8002a7e:	71bb      	strb	r3, [r7, #6]
  if (numberOfDevices > deviceId)
 8002a80:	4b31      	ldr	r3, [pc, #196]	@ (8002b48 <Powerstep01_QueueCommands+0xd8>)
 8002a82:	781b      	ldrb	r3, [r3, #0]
 8002a84:	b2db      	uxtb	r3, r3
 8002a86:	79fa      	ldrb	r2, [r7, #7]
 8002a88:	429a      	cmp	r2, r3
 8002a8a:	d257      	bcs.n	8002b3c <Powerstep01_QueueCommands+0xcc>
  {
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 8002a8c:	4b2e      	ldr	r3, [pc, #184]	@ (8002b48 <Powerstep01_QueueCommands+0xd8>)
 8002a8e:	781b      	ldrb	r3, [r3, #0]
 8002a90:	b2da      	uxtb	r2, r3
 8002a92:	79fb      	ldrb	r3, [r7, #7]
 8002a94:	1ad3      	subs	r3, r2, r3
 8002a96:	b2db      	uxtb	r3, r3
 8002a98:	3b01      	subs	r3, #1
 8002a9a:	73fb      	strb	r3, [r7, #15]
    
    switch (command & DAISY_CHAIN_COMMAND_MASK)
 8002a9c:	79bb      	ldrb	r3, [r7, #6]
 8002a9e:	f003 03fa 	and.w	r3, r3, #250	@ 0xfa
 8002aa2:	2b8a      	cmp	r3, #138	@ 0x8a
 8002aa4:	d01a      	beq.n	8002adc <Powerstep01_QueueCommands+0x6c>
 8002aa6:	2b8a      	cmp	r3, #138	@ 0x8a
 8002aa8:	dc35      	bgt.n	8002b16 <Powerstep01_QueueCommands+0xa6>
 8002aaa:	2b82      	cmp	r3, #130	@ 0x82
 8002aac:	d016      	beq.n	8002adc <Powerstep01_QueueCommands+0x6c>
 8002aae:	2b82      	cmp	r3, #130	@ 0x82
 8002ab0:	dc31      	bgt.n	8002b16 <Powerstep01_QueueCommands+0xa6>
 8002ab2:	2b40      	cmp	r3, #64	@ 0x40
 8002ab4:	d012      	beq.n	8002adc <Powerstep01_QueueCommands+0x6c>
 8002ab6:	2b40      	cmp	r3, #64	@ 0x40
 8002ab8:	db2d      	blt.n	8002b16 <Powerstep01_QueueCommands+0xa6>
 8002aba:	2b68      	cmp	r3, #104	@ 0x68
 8002abc:	dc2b      	bgt.n	8002b16 <Powerstep01_QueueCommands+0xa6>
 8002abe:	2b50      	cmp	r3, #80	@ 0x50
 8002ac0:	db29      	blt.n	8002b16 <Powerstep01_QueueCommands+0xa6>
 8002ac2:	3b50      	subs	r3, #80	@ 0x50
 8002ac4:	4a21      	ldr	r2, [pc, #132]	@ (8002b4c <Powerstep01_QueueCommands+0xdc>)
 8002ac6:	fa22 f303 	lsr.w	r3, r2, r3
 8002aca:	f003 0301 	and.w	r3, r3, #1
 8002ace:	2b00      	cmp	r3, #0
 8002ad0:	bf14      	ite	ne
 8002ad2:	2301      	movne	r3, #1
 8002ad4:	2300      	moveq	r3, #0
 8002ad6:	b2db      	uxtb	r3, r3
 8002ad8:	2b00      	cmp	r3, #0
 8002ada:	d01c      	beq.n	8002b16 <Powerstep01_QueueCommands+0xa6>
      case POWERSTEP01_MOVE: ;
      case POWERSTEP01_GO_TO: ;
      case POWERSTEP01_GO_TO_DIR: ;
      case POWERSTEP01_GO_UNTIL: ;
      case POWERSTEP01_GO_UNTIL_ACT_CPY:
       spiTxBursts[0][spiIndex] = command;
 8002adc:	7bfb      	ldrb	r3, [r7, #15]
 8002ade:	491c      	ldr	r1, [pc, #112]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002ae0:	79ba      	ldrb	r2, [r7, #6]
 8002ae2:	54ca      	strb	r2, [r1, r3]
       spiTxBursts[1][spiIndex] = (uint8_t)(value >> 16);
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	141a      	asrs	r2, r3, #16
 8002ae8:	7bfb      	ldrb	r3, [r7, #15]
 8002aea:	b2d1      	uxtb	r1, r2
 8002aec:	4a18      	ldr	r2, [pc, #96]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002aee:	4413      	add	r3, r2
 8002af0:	460a      	mov	r2, r1
 8002af2:	705a      	strb	r2, [r3, #1]
       spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 8002af4:	683b      	ldr	r3, [r7, #0]
 8002af6:	121a      	asrs	r2, r3, #8
 8002af8:	7bfb      	ldrb	r3, [r7, #15]
 8002afa:	b2d1      	uxtb	r1, r2
 8002afc:	4a14      	ldr	r2, [pc, #80]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002afe:	4413      	add	r3, r2
 8002b00:	460a      	mov	r2, r1
 8002b02:	709a      	strb	r2, [r3, #2]
       spiTxBursts[3][spiIndex] = (uint8_t)(value);
 8002b04:	7bfb      	ldrb	r3, [r7, #15]
 8002b06:	683a      	ldr	r2, [r7, #0]
 8002b08:	b2d1      	uxtb	r1, r2
 8002b0a:	4a11      	ldr	r2, [pc, #68]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002b0c:	4413      	add	r3, r2
 8002b0e:	460a      	mov	r2, r1
 8002b10:	70da      	strb	r2, [r3, #3]
       break;
 8002b12:	bf00      	nop
       spiTxBursts[1][spiIndex] = POWERSTEP01_NOP;
       spiTxBursts[2][spiIndex] = POWERSTEP01_NOP;
       spiTxBursts[3][spiIndex] = command;
    }
  }
}
 8002b14:	e012      	b.n	8002b3c <Powerstep01_QueueCommands+0xcc>
       spiTxBursts[0][spiIndex] = POWERSTEP01_NOP;
 8002b16:	7bfb      	ldrb	r3, [r7, #15]
 8002b18:	4a0d      	ldr	r2, [pc, #52]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002b1a:	2100      	movs	r1, #0
 8002b1c:	54d1      	strb	r1, [r2, r3]
       spiTxBursts[1][spiIndex] = POWERSTEP01_NOP;
 8002b1e:	7bfb      	ldrb	r3, [r7, #15]
 8002b20:	4a0b      	ldr	r2, [pc, #44]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002b22:	4413      	add	r3, r2
 8002b24:	2200      	movs	r2, #0
 8002b26:	705a      	strb	r2, [r3, #1]
       spiTxBursts[2][spiIndex] = POWERSTEP01_NOP;
 8002b28:	7bfb      	ldrb	r3, [r7, #15]
 8002b2a:	4a09      	ldr	r2, [pc, #36]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002b2c:	4413      	add	r3, r2
 8002b2e:	2200      	movs	r2, #0
 8002b30:	709a      	strb	r2, [r3, #2]
       spiTxBursts[3][spiIndex] = command;
 8002b32:	7bfb      	ldrb	r3, [r7, #15]
 8002b34:	4a06      	ldr	r2, [pc, #24]	@ (8002b50 <Powerstep01_QueueCommands+0xe0>)
 8002b36:	4413      	add	r3, r2
 8002b38:	79ba      	ldrb	r2, [r7, #6]
 8002b3a:	70da      	strb	r2, [r3, #3]
}
 8002b3c:	bf00      	nop
 8002b3e:	3714      	adds	r7, #20
 8002b40:	46bd      	mov	sp, r7
 8002b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b46:	4770      	bx	lr
 8002b48:	200008a4 	.word	0x200008a4
 8002b4c:	01010001 	.word	0x01010001
 8002b50:	200008a8 	.word	0x200008a8

08002b54 <Powerstep01_ReadStatusRegister>:
 * @retval Status register value
 * @note The status register flags are not cleared 
 * at the difference with Powerstep01_CmdGetStatus()
 **********************************************************/
uint16_t Powerstep01_ReadStatusRegister(uint8_t deviceId)
{
 8002b54:	b580      	push	{r7, lr}
 8002b56:	b082      	sub	sp, #8
 8002b58:	af00      	add	r7, sp, #0
 8002b5a:	4603      	mov	r3, r0
 8002b5c:	71fb      	strb	r3, [r7, #7]
  return (Powerstep01_CmdGetParam(deviceId, POWERSTEP01_STATUS));
 8002b5e:	79fb      	ldrb	r3, [r7, #7]
 8002b60:	211b      	movs	r1, #27
 8002b62:	4618      	mov	r0, r3
 8002b64:	f7ff fa7c 	bl	8002060 <Powerstep01_CmdGetParam>
 8002b68:	4603      	mov	r3, r0
 8002b6a:	b29b      	uxth	r3, r3
}
 8002b6c:	4618      	mov	r0, r3
 8002b6e:	3708      	adds	r7, #8
 8002b70:	46bd      	mov	sp, r7
 8002b72:	bd80      	pop	{r7, pc}

08002b74 <Powerstep01_ReleaseReset>:
 * @brief  Releases the Powerstep01 reset (pin set to High) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_ReleaseReset(uint8_t deviceId)
{ 
 8002b74:	b580      	push	{r7, lr}
 8002b76:	b082      	sub	sp, #8
 8002b78:	af00      	add	r7, sp, #0
 8002b7a:	4603      	mov	r3, r0
 8002b7c:	71fb      	strb	r3, [r7, #7]
  Powerstep01_Board_ReleaseReset(deviceId); 
 8002b7e:	79fb      	ldrb	r3, [r7, #7]
 8002b80:	4618      	mov	r0, r3
 8002b82:	f001 fcbd 	bl	8004500 <Powerstep01_Board_ReleaseReset>
}
 8002b86:	bf00      	nop
 8002b88:	3708      	adds	r7, #8
 8002b8a:	46bd      	mov	sp, r7
 8002b8c:	bd80      	pop	{r7, pc}

08002b8e <Powerstep01_Reset>:
 * @brief  Resets the Powerstep01 (reset pin set to low) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_Reset(uint8_t deviceId)
{
 8002b8e:	b580      	push	{r7, lr}
 8002b90:	b082      	sub	sp, #8
 8002b92:	af00      	add	r7, sp, #0
 8002b94:	4603      	mov	r3, r0
 8002b96:	71fb      	strb	r3, [r7, #7]
  Powerstep01_Board_Reset(deviceId); 
 8002b98:	79fb      	ldrb	r3, [r7, #7]
 8002b9a:	4618      	mov	r0, r3
 8002b9c:	f001 fcc0 	bl	8004520 <Powerstep01_Board_Reset>
}
 8002ba0:	bf00      	nop
 8002ba2:	3708      	adds	r7, #8
 8002ba4:	46bd      	mov	sp, r7
 8002ba6:	bd80      	pop	{r7, pc}

08002ba8 <Powerstep01_SelectStepMode>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] stepMode from full step to 1/128 microstep as specified in enum motorStepMode_t
 * @retval TRUE if successfull, FALSE if failure
 **********************************************************/
bool Powerstep01_SelectStepMode(uint8_t deviceId, motorStepMode_t stepMode)
{
 8002ba8:	b580      	push	{r7, lr}
 8002baa:	b084      	sub	sp, #16
 8002bac:	af00      	add	r7, sp, #0
 8002bae:	4603      	mov	r3, r0
 8002bb0:	460a      	mov	r2, r1
 8002bb2:	71fb      	strb	r3, [r7, #7]
 8002bb4:	4613      	mov	r3, r2
 8002bb6:	71bb      	strb	r3, [r7, #6]
  uint8_t stepModeRegister;
  powerstep01_StepSel_t powerstep01StepMode;

  switch (stepMode)
 8002bb8:	79bb      	ldrb	r3, [r7, #6]
 8002bba:	2b07      	cmp	r3, #7
 8002bbc:	d82a      	bhi.n	8002c14 <Powerstep01_SelectStepMode+0x6c>
 8002bbe:	a201      	add	r2, pc, #4	@ (adr r2, 8002bc4 <Powerstep01_SelectStepMode+0x1c>)
 8002bc0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002bc4:	08002be5 	.word	0x08002be5
 8002bc8:	08002beb 	.word	0x08002beb
 8002bcc:	08002bf1 	.word	0x08002bf1
 8002bd0:	08002bf7 	.word	0x08002bf7
 8002bd4:	08002bfd 	.word	0x08002bfd
 8002bd8:	08002c03 	.word	0x08002c03
 8002bdc:	08002c09 	.word	0x08002c09
 8002be0:	08002c0f 	.word	0x08002c0f
  {
    case STEP_MODE_FULL:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1;
 8002be4:	2300      	movs	r3, #0
 8002be6:	73fb      	strb	r3, [r7, #15]
      break;
 8002be8:	e016      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_HALF:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_2;
 8002bea:	2301      	movs	r3, #1
 8002bec:	73fb      	strb	r3, [r7, #15]
      break;    
 8002bee:	e013      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_4:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_4;
 8002bf0:	2302      	movs	r3, #2
 8002bf2:	73fb      	strb	r3, [r7, #15]
      break;        
 8002bf4:	e010      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_8:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_8;
 8002bf6:	2303      	movs	r3, #3
 8002bf8:	73fb      	strb	r3, [r7, #15]
      break;
 8002bfa:	e00d      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_16:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_16;
 8002bfc:	2304      	movs	r3, #4
 8002bfe:	73fb      	strb	r3, [r7, #15]
      break;        
 8002c00:	e00a      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_32:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_32;
 8002c02:	2305      	movs	r3, #5
 8002c04:	73fb      	strb	r3, [r7, #15]
      break;
 8002c06:	e007      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_64:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_64;
 8002c08:	2306      	movs	r3, #6
 8002c0a:	73fb      	strb	r3, [r7, #15]
      break;
 8002c0c:	e004      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    case STEP_MODE_1_128:
      powerstep01StepMode = POWERSTEP01_STEP_SEL_1_128;
 8002c0e:	2307      	movs	r3, #7
 8002c10:	73fb      	strb	r3, [r7, #15]
      break;
 8002c12:	e001      	b.n	8002c18 <Powerstep01_SelectStepMode+0x70>
    default:
      return FALSE;     
 8002c14:	2300      	movs	r3, #0
 8002c16:	e01c      	b.n	8002c52 <Powerstep01_SelectStepMode+0xaa>
  }
  
  /* Set the powerstep01 in HiZ state */
  Powerstep01_CmdHardHiZ(deviceId);  
 8002c18:	79fb      	ldrb	r3, [r7, #7]
 8002c1a:	4618      	mov	r0, r3
 8002c1c:	f7ff fbf9 	bl	8002412 <Powerstep01_CmdHardHiZ>
  
  /* Read Step mode register and clear STEP_SEL field */
  stepModeRegister = (uint8_t)(0xF8 & Powerstep01_CmdGetParam(deviceId,POWERSTEP01_STEP_MODE)) ;
 8002c20:	79fb      	ldrb	r3, [r7, #7]
 8002c22:	2116      	movs	r1, #22
 8002c24:	4618      	mov	r0, r3
 8002c26:	f7ff fa1b 	bl	8002060 <Powerstep01_CmdGetParam>
 8002c2a:	4603      	mov	r3, r0
 8002c2c:	b2db      	uxtb	r3, r3
 8002c2e:	f023 0307 	bic.w	r3, r3, #7
 8002c32:	73bb      	strb	r3, [r7, #14]
  
  /* Apply new step mode */
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE, stepModeRegister | (uint8_t)powerstep01StepMode);
 8002c34:	7bba      	ldrb	r2, [r7, #14]
 8002c36:	7bfb      	ldrb	r3, [r7, #15]
 8002c38:	4313      	orrs	r3, r2
 8002c3a:	b2db      	uxtb	r3, r3
 8002c3c:	461a      	mov	r2, r3
 8002c3e:	79fb      	ldrb	r3, [r7, #7]
 8002c40:	2116      	movs	r1, #22
 8002c42:	4618      	mov	r0, r3
 8002c44:	f7ff fc74 	bl	8002530 <Powerstep01_CmdSetParam>

  /* Reset abs pos register */
  Powerstep01_CmdResetPos(deviceId);
 8002c48:	79fb      	ldrb	r3, [r7, #7]
 8002c4a:	4618      	mov	r0, r3
 8002c4c:	f7ff fc4b 	bl	80024e6 <Powerstep01_CmdResetPos>
  
  return TRUE;
 8002c50:	2301      	movs	r3, #1
}
 8002c52:	4618      	mov	r0, r3
 8002c54:	3710      	adds	r7, #16
 8002c56:	46bd      	mov	sp, r7
 8002c58:	bd80      	pop	{r7, pc}
 8002c5a:	bf00      	nop

08002c5c <Powerstep01_SendQueuedCommands>:
 * @brief Sends commands stored previously in the queue by 
 * Powerstep01_QueueCommands
 * @retval None
 *********************************************************/
void Powerstep01_SendQueuedCommands(void)
{
 8002c5c:	b580      	push	{r7, lr}
 8002c5e:	b082      	sub	sp, #8
 8002c60:	af00      	add	r7, sp, #0
  uint8_t loop;
  
  for (loop = 0; 
 8002c62:	2300      	movs	r3, #0
 8002c64:	71fb      	strb	r3, [r7, #7]
 8002c66:	e00c      	b.n	8002c82 <Powerstep01_SendQueuedCommands+0x26>
       loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
       loop++)
  {
     Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 8002c68:	79fb      	ldrb	r3, [r7, #7]
 8002c6a:	4a0a      	ldr	r2, [pc, #40]	@ (8002c94 <Powerstep01_SendQueuedCommands+0x38>)
 8002c6c:	441a      	add	r2, r3
 8002c6e:	79fb      	ldrb	r3, [r7, #7]
 8002c70:	4909      	ldr	r1, [pc, #36]	@ (8002c98 <Powerstep01_SendQueuedCommands+0x3c>)
 8002c72:	440b      	add	r3, r1
 8002c74:	4619      	mov	r1, r3
 8002c76:	4610      	mov	r0, r2
 8002c78:	f000 fef2 	bl	8003a60 <Powerstep01_WriteBytes>
       loop++)
 8002c7c:	79fb      	ldrb	r3, [r7, #7]
 8002c7e:	3301      	adds	r3, #1
 8002c80:	71fb      	strb	r3, [r7, #7]
       loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
 8002c82:	79fb      	ldrb	r3, [r7, #7]
 8002c84:	2b03      	cmp	r3, #3
 8002c86:	d9ef      	bls.n	8002c68 <Powerstep01_SendQueuedCommands+0xc>
  }
}
 8002c88:	bf00      	nop
 8002c8a:	bf00      	nop
 8002c8c:	3708      	adds	r7, #8
 8002c8e:	46bd      	mov	sp, r7
 8002c90:	bd80      	pop	{r7, pc}
 8002c92:	bf00      	nop
 8002c94:	200008a8 	.word	0x200008a8
 8002c98:	200008ac 	.word	0x200008ac

08002c9c <Powerstep01_SetHome>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] homePos new home position
 * @retval None
 **********************************************************/
void Powerstep01_SetHome(uint8_t deviceId, int32_t homePos)
{
 8002c9c:	b580      	push	{r7, lr}
 8002c9e:	b084      	sub	sp, #16
 8002ca0:	af00      	add	r7, sp, #0
 8002ca2:	4603      	mov	r3, r0
 8002ca4:	6039      	str	r1, [r7, #0]
 8002ca6:	71fb      	strb	r3, [r7, #7]
  uint32_t currentPos = Powerstep01_CmdGetParam(deviceId, POWERSTEP01_ABS_POS);
 8002ca8:	79fb      	ldrb	r3, [r7, #7]
 8002caa:	2101      	movs	r1, #1
 8002cac:	4618      	mov	r0, r3
 8002cae:	f7ff f9d7 	bl	8002060 <Powerstep01_CmdGetParam>
 8002cb2:	60f8      	str	r0, [r7, #12]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ABS_POS, currentPos- homePos);
 8002cb4:	683b      	ldr	r3, [r7, #0]
 8002cb6:	68fa      	ldr	r2, [r7, #12]
 8002cb8:	1ad2      	subs	r2, r2, r3
 8002cba:	79fb      	ldrb	r3, [r7, #7]
 8002cbc:	2101      	movs	r1, #1
 8002cbe:	4618      	mov	r0, r3
 8002cc0:	f7ff fc36 	bl	8002530 <Powerstep01_CmdSetParam>
}
 8002cc4:	bf00      	nop
 8002cc6:	3710      	adds	r7, #16
 8002cc8:	46bd      	mov	sp, r7
 8002cca:	bd80      	pop	{r7, pc}

08002ccc <Powerstep01_SetMark>:
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @param[in] markPos new mark position
 * @retval None
 **********************************************************/
void Powerstep01_SetMark(uint8_t deviceId, int32_t markPos)
{
 8002ccc:	b580      	push	{r7, lr}
 8002cce:	b082      	sub	sp, #8
 8002cd0:	af00      	add	r7, sp, #0
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	6039      	str	r1, [r7, #0]
 8002cd6:	71fb      	strb	r3, [r7, #7]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MARK, markPos);
 8002cd8:	683a      	ldr	r2, [r7, #0]
 8002cda:	79fb      	ldrb	r3, [r7, #7]
 8002cdc:	2103      	movs	r1, #3
 8002cde:	4618      	mov	r0, r3
 8002ce0:	f7ff fc26 	bl	8002530 <Powerstep01_CmdSetParam>
}
 8002ce4:	bf00      	nop
 8002ce6:	3708      	adds	r7, #8
 8002ce8:	46bd      	mov	sp, r7
 8002cea:	bd80      	pop	{r7, pc}

08002cec <Powerstep01_SetNbDevices>:
 * @param[in] nbDevices (from 1 to MAX_NUMBER_OF_DEVICES)
 * @retval TRUE if successfull, FALSE if failure, attempt to set a number of 
 * devices greater than MAX_NUMBER_OF_DEVICES
 **********************************************************/
bool Powerstep01_SetNbDevices(uint8_t nbDevices)
{
 8002cec:	b480      	push	{r7}
 8002cee:	b083      	sub	sp, #12
 8002cf0:	af00      	add	r7, sp, #0
 8002cf2:	4603      	mov	r3, r0
 8002cf4:	71fb      	strb	r3, [r7, #7]
  if (nbDevices <= MAX_NUMBER_OF_DEVICES)
 8002cf6:	79fb      	ldrb	r3, [r7, #7]
 8002cf8:	2b01      	cmp	r3, #1
 8002cfa:	d804      	bhi.n	8002d06 <Powerstep01_SetNbDevices+0x1a>
  {
    numberOfDevices = nbDevices;
 8002cfc:	4a05      	ldr	r2, [pc, #20]	@ (8002d14 <Powerstep01_SetNbDevices+0x28>)
 8002cfe:	79fb      	ldrb	r3, [r7, #7]
 8002d00:	7013      	strb	r3, [r2, #0]
    return TRUE;
 8002d02:	2301      	movs	r3, #1
 8002d04:	e000      	b.n	8002d08 <Powerstep01_SetNbDevices+0x1c>
  }
  else
  {
    return FALSE;
 8002d06:	2300      	movs	r3, #0
  }
}
 8002d08:	4618      	mov	r0, r3
 8002d0a:	370c      	adds	r7, #12
 8002d0c:	46bd      	mov	sp, r7
 8002d0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d12:	4770      	bx	lr
 8002d14:	200008a4 	.word	0x200008a4

08002d18 <Powerstep01_SetAnalogValue>:
 * @param[in] param Register adress (POWERSTEP01_ABS_POS, POWERSTEP01_MARK,...)
 * @param[in] value Floating point value to convert and set into the register
 * @retval TRUE if param and value are valid, FALSE otherwise
 *********************************************************/
bool Powerstep01_SetAnalogValue(uint8_t deviceId, uint32_t param, float value)
{
 8002d18:	b590      	push	{r4, r7, lr}
 8002d1a:	b087      	sub	sp, #28
 8002d1c:	af00      	add	r7, sp, #0
 8002d1e:	4603      	mov	r3, r0
 8002d20:	60b9      	str	r1, [r7, #8]
 8002d22:	ed87 0a01 	vstr	s0, [r7, #4]
 8002d26:	73fb      	strb	r3, [r7, #15]
  uint32_t registerValue;
  bool result = TRUE;
 8002d28:	2301      	movs	r3, #1
 8002d2a:	74fb      	strb	r3, [r7, #19]
  bool voltageMode = ((POWERSTEP01_CM_VM_CURRENT&Powerstep01_CmdGetParam(deviceId,POWERSTEP01_STEP_MODE))==0);
 8002d2c:	7bfb      	ldrb	r3, [r7, #15]
 8002d2e:	2116      	movs	r1, #22
 8002d30:	4618      	mov	r0, r3
 8002d32:	f7ff f995 	bl	8002060 <Powerstep01_CmdGetParam>
 8002d36:	4603      	mov	r3, r0
 8002d38:	f003 0308 	and.w	r3, r3, #8
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	bf0c      	ite	eq
 8002d40:	2301      	moveq	r3, #1
 8002d42:	2300      	movne	r3, #0
 8002d44:	b2db      	uxtb	r3, r3
 8002d46:	74bb      	strb	r3, [r7, #18]
  if ((value < 0)&&((param != POWERSTEP01_ABS_POS)&&(param != POWERSTEP01_MARK)))
 8002d48:	edd7 7a01 	vldr	s15, [r7, #4]
 8002d4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002d50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002d54:	d507      	bpl.n	8002d66 <Powerstep01_SetAnalogValue+0x4e>
 8002d56:	68bb      	ldr	r3, [r7, #8]
 8002d58:	2b01      	cmp	r3, #1
 8002d5a:	d004      	beq.n	8002d66 <Powerstep01_SetAnalogValue+0x4e>
 8002d5c:	68bb      	ldr	r3, [r7, #8]
 8002d5e:	2b03      	cmp	r3, #3
 8002d60:	d001      	beq.n	8002d66 <Powerstep01_SetAnalogValue+0x4e>
  {
    result = FALSE;
 8002d62:	2300      	movs	r3, #0
 8002d64:	74fb      	strb	r3, [r7, #19]
  }
  switch (param)
 8002d66:	68bb      	ldr	r3, [r7, #8]
 8002d68:	3b01      	subs	r3, #1
 8002d6a:	2b14      	cmp	r3, #20
 8002d6c:	f200 8191 	bhi.w	8003092 <Powerstep01_SetAnalogValue+0x37a>
 8002d70:	a201      	add	r2, pc, #4	@ (adr r2, 8002d78 <Powerstep01_SetAnalogValue+0x60>)
 8002d72:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d76:	bf00      	nop
 8002d78:	08002e33 	.word	0x08002e33
 8002d7c:	08002dcd 	.word	0x08002dcd
 8002d80:	08002e33 	.word	0x08002e33
 8002d84:	08003093 	.word	0x08003093
 8002d88:	08002ea7 	.word	0x08002ea7
 8002d8c:	08002ea7 	.word	0x08002ea7
 8002d90:	08002ecd 	.word	0x08002ecd
 8002d94:	08002ef3 	.word	0x08002ef3
 8002d98:	08002fe7 	.word	0x08002fe7
 8002d9c:	08002fe7 	.word	0x08002fe7
 8002da0:	08002fe7 	.word	0x08002fe7
 8002da4:	08002fe7 	.word	0x08002fe7
 8002da8:	08002f63 	.word	0x08002f63
 8002dac:	08003035 	.word	0x08003035
 8002db0:	08003041 	.word	0x08003041
 8002db4:	08003041 	.word	0x08003041
 8002db8:	08002f89 	.word	0x08002f89
 8002dbc:	08003093 	.word	0x08003093
 8002dc0:	08002fc1 	.word	0x08002fc1
 8002dc4:	08002fc1 	.word	0x08002fc1
 8002dc8:	08002f2b 	.word	0x08002f2b
  {
    case POWERSTEP01_EL_POS:
      if ((value > (POWERSTEP01_ELPOS_STEP_MASK|POWERSTEP01_ELPOS_MICROSTEP_MASK))||
 8002dcc:	edd7 7a01 	vldr	s15, [r7, #4]
 8002dd0:	ed9f 7ab8 	vldr	s14, [pc, #736]	@ 80030b4 <Powerstep01_SetAnalogValue+0x39c>
 8002dd4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002dd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ddc:	dc1c      	bgt.n	8002e18 <Powerstep01_SetAnalogValue+0x100>
 8002dde:	edd7 7a01 	vldr	s15, [r7, #4]
 8002de2:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002de6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002dea:	d018      	beq.n	8002e1e <Powerstep01_SetAnalogValue+0x106>
          ((value!=0)&&(value < (1<<(7-(POWERSTEP01_STEP_MODE_STEP_SEL&Powerstep01_CmdGetParam(0,POWERSTEP01_STEP_MODE))))))) result = FALSE;
 8002dec:	2116      	movs	r1, #22
 8002dee:	2000      	movs	r0, #0
 8002df0:	f7ff f936 	bl	8002060 <Powerstep01_CmdGetParam>
 8002df4:	4603      	mov	r3, r0
 8002df6:	43db      	mvns	r3, r3
 8002df8:	f003 0307 	and.w	r3, r3, #7
 8002dfc:	2201      	movs	r2, #1
 8002dfe:	fa02 f303 	lsl.w	r3, r2, r3
 8002e02:	ee07 3a90 	vmov	s15, r3
 8002e06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002e0a:	ed97 7a01 	vldr	s14, [r7, #4]
 8002e0e:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8002e12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e16:	d502      	bpl.n	8002e1e <Powerstep01_SetAnalogValue+0x106>
 8002e18:	2300      	movs	r3, #0
 8002e1a:	74fb      	strb	r3, [r7, #19]
      else registerValue = ((uint32_t) value)&(POWERSTEP01_ELPOS_STEP_MASK|POWERSTEP01_ELPOS_MICROSTEP_MASK);
      break;        
 8002e1c:	e13b      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = ((uint32_t) value)&(POWERSTEP01_ELPOS_STEP_MASK|POWERSTEP01_ELPOS_MICROSTEP_MASK);
 8002e1e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e22:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002e26:	ee17 3a90 	vmov	r3, s15
 8002e2a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002e2e:	617b      	str	r3, [r7, #20]
      break;        
 8002e30:	e131      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_ABS_POS:
    case POWERSTEP01_MARK:
      if (value < 0)
 8002e32:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002e3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002e3e:	d51c      	bpl.n	8002e7a <Powerstep01_SetAnalogValue+0x162>
      {
        value=-value;
 8002e40:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e44:	eef1 7a67 	vneg.f32	s15, s15
 8002e48:	edc7 7a01 	vstr	s15, [r7, #4]
        if (((uint32_t)value)<=(POWERSTEP01_MAX_POSITION+1))
 8002e4c:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e50:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002e54:	ee17 3a90 	vmov	r3, s15
 8002e58:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8002e5c:	d80a      	bhi.n	8002e74 <Powerstep01_SetAnalogValue+0x15c>
          registerValue = (POWERSTEP01_ABS_POS_VALUE_MASK+1-(uint32_t)value)&POWERSTEP01_ABS_POS_VALUE_MASK;
 8002e5e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e62:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002e66:	ee17 3a90 	vmov	r3, s15
 8002e6a:	425b      	negs	r3, r3
 8002e6c:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002e70:	617b      	str	r3, [r7, #20]
      {
        if (((uint32_t)value)<=POWERSTEP01_MAX_POSITION)
          registerValue = ((uint32_t) value)&POWERSTEP01_ABS_POS_VALUE_MASK;
        else result = FALSE; 
      }
      break;
 8002e72:	e110      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        else result = FALSE;  
 8002e74:	2300      	movs	r3, #0
 8002e76:	74fb      	strb	r3, [r7, #19]
      break;
 8002e78:	e10d      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        if (((uint32_t)value)<=POWERSTEP01_MAX_POSITION)
 8002e7a:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e7e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002e82:	ee17 3a90 	vmov	r3, s15
 8002e86:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8002e8a:	d209      	bcs.n	8002ea0 <Powerstep01_SetAnalogValue+0x188>
          registerValue = ((uint32_t) value)&POWERSTEP01_ABS_POS_VALUE_MASK;
 8002e8c:	edd7 7a01 	vldr	s15, [r7, #4]
 8002e90:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002e94:	ee17 3a90 	vmov	r3, s15
 8002e98:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8002e9c:	617b      	str	r3, [r7, #20]
      break;
 8002e9e:	e0fa      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        else result = FALSE; 
 8002ea0:	2300      	movs	r3, #0
 8002ea2:	74fb      	strb	r3, [r7, #19]
      break;
 8002ea4:	e0f7      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_ACC:
    case POWERSTEP01_DEC:
      if (value > POWERSTEP01_ACC_DEC_MAX_VALUE) result = FALSE;
 8002ea6:	edd7 7a01 	vldr	s15, [r7, #4]
 8002eaa:	ed9f 7a83 	vldr	s14, [pc, #524]	@ 80030b8 <Powerstep01_SetAnalogValue+0x3a0>
 8002eae:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002eb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002eb6:	dd02      	ble.n	8002ebe <Powerstep01_SetAnalogValue+0x1a6>
 8002eb8:	2300      	movs	r3, #0
 8002eba:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_AccDec_Steps_s2_to_RegVal(value);
      break;
 8002ebc:	e0eb      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_AccDec_Steps_s2_to_RegVal(value);
 8002ebe:	ed97 0a01 	vldr	s0, [r7, #4]
 8002ec2:	f000 fdf3 	bl	8003aac <Powerstep01_AccDec_Steps_s2_to_RegVal>
 8002ec6:	4603      	mov	r3, r0
 8002ec8:	617b      	str	r3, [r7, #20]
      break;
 8002eca:	e0e4      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_MAX_SPEED:
      if (value > POWERSTEP01_MAX_SPEED_MAX_VALUE) result = FALSE;
 8002ecc:	edd7 7a01 	vldr	s15, [r7, #4]
 8002ed0:	ed9f 7a7a 	vldr	s14, [pc, #488]	@ 80030bc <Powerstep01_SetAnalogValue+0x3a4>
 8002ed4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002ed8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002edc:	dd02      	ble.n	8002ee4 <Powerstep01_SetAnalogValue+0x1cc>
 8002ede:	2300      	movs	r3, #0
 8002ee0:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_MaxSpd_Steps_s_to_RegVal(value);
      break;
 8002ee2:	e0d8      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_MaxSpd_Steps_s_to_RegVal(value);
 8002ee4:	ed97 0a01 	vldr	s0, [r7, #4]
 8002ee8:	f000 ff1a 	bl	8003d20 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 8002eec:	4603      	mov	r3, r0
 8002eee:	617b      	str	r3, [r7, #20]
      break;
 8002ef0:	e0d1      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_MIN_SPEED:
      if (value > POWERSTEP01_MIN_SPEED_MAX_VALUE) result = FALSE;
 8002ef2:	edd7 7a01 	vldr	s15, [r7, #4]
 8002ef6:	ed9f 7a72 	vldr	s14, [pc, #456]	@ 80030c0 <Powerstep01_SetAnalogValue+0x3a8>
 8002efa:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002efe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f02:	dd02      	ble.n	8002f0a <Powerstep01_SetAnalogValue+0x1f2>
 8002f04:	2300      	movs	r3, #0
 8002f06:	74fb      	strb	r3, [r7, #19]
      else registerValue = (POWERSTEP01_LSPD_OPT&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_MinSpd_Steps_s_to_RegVal(value);
      break;      
 8002f08:	e0c5      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = (POWERSTEP01_LSPD_OPT&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_MinSpd_Steps_s_to_RegVal(value);
 8002f0a:	7bfb      	ldrb	r3, [r7, #15]
 8002f0c:	68b9      	ldr	r1, [r7, #8]
 8002f0e:	4618      	mov	r0, r3
 8002f10:	f7ff f8a6 	bl	8002060 <Powerstep01_CmdGetParam>
 8002f14:	4603      	mov	r3, r0
 8002f16:	f403 5480 	and.w	r4, r3, #4096	@ 0x1000
 8002f1a:	ed97 0a01 	vldr	s0, [r7, #4]
 8002f1e:	f000 ff31 	bl	8003d84 <Powerstep01_MinSpd_Steps_s_to_RegVal>
 8002f22:	4603      	mov	r3, r0
 8002f24:	4323      	orrs	r3, r4
 8002f26:	617b      	str	r3, [r7, #20]
      break;      
 8002f28:	e0b5      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_FS_SPD:
      if (value > POWERSTEP01_FS_SPD_MAX_VALUE) result = FALSE;
 8002f2a:	edd7 7a01 	vldr	s15, [r7, #4]
 8002f2e:	ed9f 7a65 	vldr	s14, [pc, #404]	@ 80030c4 <Powerstep01_SetAnalogValue+0x3ac>
 8002f32:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002f36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f3a:	dd02      	ble.n	8002f42 <Powerstep01_SetAnalogValue+0x22a>
 8002f3c:	2300      	movs	r3, #0
 8002f3e:	74fb      	strb	r3, [r7, #19]
      else registerValue = (POWERSTEP01_BOOST_MODE&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_FSSpd_Steps_s_to_RegVal(value);
      break;
 8002f40:	e0a9      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = (POWERSTEP01_BOOST_MODE&Powerstep01_CmdGetParam(deviceId, param))|Powerstep01_FSSpd_Steps_s_to_RegVal(value);
 8002f42:	7bfb      	ldrb	r3, [r7, #15]
 8002f44:	68b9      	ldr	r1, [r7, #8]
 8002f46:	4618      	mov	r0, r3
 8002f48:	f7ff f88a 	bl	8002060 <Powerstep01_CmdGetParam>
 8002f4c:	4603      	mov	r3, r0
 8002f4e:	f403 6480 	and.w	r4, r3, #1024	@ 0x400
 8002f52:	ed97 0a01 	vldr	s0, [r7, #4]
 8002f56:	f000 fe0f 	bl	8003b78 <Powerstep01_FSSpd_Steps_s_to_RegVal>
 8002f5a:	4603      	mov	r3, r0
 8002f5c:	4323      	orrs	r3, r4
 8002f5e:	617b      	str	r3, [r7, #20]
      break;
 8002f60:	e099      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_INT_SPD:
      if (value > POWERSTEP01_INT_SPD_MAX_VALUE) result = FALSE;
 8002f62:	edd7 7a01 	vldr	s15, [r7, #4]
 8002f66:	ed9f 7a58 	vldr	s14, [pc, #352]	@ 80030c8 <Powerstep01_SetAnalogValue+0x3b0>
 8002f6a:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002f6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f72:	dd02      	ble.n	8002f7a <Powerstep01_SetAnalogValue+0x262>
 8002f74:	2300      	movs	r3, #0
 8002f76:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_IntSpd_Steps_s_to_RegVal(value);
      break;
 8002f78:	e08d      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_IntSpd_Steps_s_to_RegVal(value);
 8002f7a:	ed97 0a01 	vldr	s0, [r7, #4]
 8002f7e:	f000 fe2f 	bl	8003be0 <Powerstep01_IntSpd_Steps_s_to_RegVal>
 8002f82:	4603      	mov	r3, r0
 8002f84:	617b      	str	r3, [r7, #20]
      break;
 8002f86:	e086      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_K_THERM:
      if ((value < POWERSTEP01_K_THERM_MIN_VALUE)||
 8002f88:	edd7 7a01 	vldr	s15, [r7, #4]
 8002f8c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8002f90:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002f94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f98:	d408      	bmi.n	8002fac <Powerstep01_SetAnalogValue+0x294>
 8002f9a:	edd7 7a01 	vldr	s15, [r7, #4]
 8002f9e:	ed9f 7a4b 	vldr	s14, [pc, #300]	@ 80030cc <Powerstep01_SetAnalogValue+0x3b4>
 8002fa2:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002fa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002faa:	dd02      	ble.n	8002fb2 <Powerstep01_SetAnalogValue+0x29a>
          (value > POWERSTEP01_K_THERM_MAX_VALUE)) result = FALSE;
 8002fac:	2300      	movs	r3, #0
 8002fae:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_KTherm_Comp_to_RegVal(value);
      break;
 8002fb0:	e071      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_KTherm_Comp_to_RegVal(value);
 8002fb2:	ed97 0a01 	vldr	s0, [r7, #4]
 8002fb6:	f000 fe45 	bl	8003c44 <Powerstep01_KTherm_Comp_to_RegVal>
 8002fba:	4603      	mov	r3, r0
 8002fbc:	617b      	str	r3, [r7, #20]
      break;
 8002fbe:	e06a      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_OCD_TH:
    case POWERSTEP01_STALL_TH:
      if (value > POWERSTEP01_STALL_OCD_TH_MAX_VALUE) result = FALSE;
 8002fc0:	edd7 7a01 	vldr	s15, [r7, #4]
 8002fc4:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80030d0 <Powerstep01_SetAnalogValue+0x3b8>
 8002fc8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002fcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002fd0:	dd02      	ble.n	8002fd8 <Powerstep01_SetAnalogValue+0x2c0>
 8002fd2:	2300      	movs	r3, #0
 8002fd4:	74fb      	strb	r3, [r7, #19]
      else registerValue = Powerstep01_StallOcd_Th_to_RegVal(value);
      break;
 8002fd6:	e05e      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      else registerValue = Powerstep01_StallOcd_Th_to_RegVal(value);
 8002fd8:	ed97 0a01 	vldr	s0, [r7, #4]
 8002fdc:	f000 ff1a 	bl	8003e14 <Powerstep01_StallOcd_Th_to_RegVal>
 8002fe0:	4603      	mov	r3, r0
 8002fe2:	617b      	str	r3, [r7, #20]
      break;
 8002fe4:	e057      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_KVAL_HOLD:  //POWERSTEP01_TVAL_HOLD
    case POWERSTEP01_KVAL_RUN:   //POWERSTEP01_TVAL_RUN
    case POWERSTEP01_KVAL_ACC:   //POWERSTEP01_TVAL_ACC
    case POWERSTEP01_KVAL_DEC:   //POWERSTEP01_TVAL_DEC
      if (voltageMode==FALSE)
 8002fe6:	7cbb      	ldrb	r3, [r7, #18]
 8002fe8:	2b00      	cmp	r3, #0
 8002fea:	d112      	bne.n	8003012 <Powerstep01_SetAnalogValue+0x2fa>
      {
        if (value > POWERSTEP01_TVAL_MAX_VALUE) result = FALSE;
 8002fec:	edd7 7a01 	vldr	s15, [r7, #4]
 8002ff0:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 80030d0 <Powerstep01_SetAnalogValue+0x3b8>
 8002ff4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002ff8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002ffc:	dd02      	ble.n	8003004 <Powerstep01_SetAnalogValue+0x2ec>
 8002ffe:	2300      	movs	r3, #0
 8003000:	74fb      	strb	r3, [r7, #19]
      else
      {
        if (value > POWERSTEP01_KVAL_MAX_VALUE) result = FALSE;
        else registerValue = Powerstep01_Kval_Perc_to_RegVal(value);
      }
      break;
 8003002:	e048      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_Tval_RefVoltage_to_RegVal(value);
 8003004:	ed97 0a01 	vldr	s0, [r7, #4]
 8003008:	f000 ff40 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 800300c:	4603      	mov	r3, r0
 800300e:	617b      	str	r3, [r7, #20]
      break;
 8003010:	e041      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        if (value > POWERSTEP01_KVAL_MAX_VALUE) result = FALSE;
 8003012:	edd7 7a01 	vldr	s15, [r7, #4]
 8003016:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800301a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800301e:	dd02      	ble.n	8003026 <Powerstep01_SetAnalogValue+0x30e>
 8003020:	2300      	movs	r3, #0
 8003022:	74fb      	strb	r3, [r7, #19]
      break;
 8003024:	e037      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_Kval_Perc_to_RegVal(value);
 8003026:	ed97 0a01 	vldr	s0, [r7, #4]
 800302a:	f000 fe47 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 800302e:	4603      	mov	r3, r0
 8003030:	617b      	str	r3, [r7, #20]
      break;
 8003032:	e030      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    case POWERSTEP01_ST_SLP:
      if (voltageMode==FALSE) 
 8003034:	7cbb      	ldrb	r3, [r7, #18]
 8003036:	2b00      	cmp	r3, #0
 8003038:	d102      	bne.n	8003040 <Powerstep01_SetAnalogValue+0x328>
      {
        result = FALSE;
 800303a:	2300      	movs	r3, #0
 800303c:	74fb      	strb	r3, [r7, #19]
        break;
 800303e:	e02a      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
      }
    case POWERSTEP01_FN_SLP_ACC: //POWERSTEP01_TON_MIN
    case POWERSTEP01_FN_SLP_DEC: //POWERSTEP01_TOFF_MIN
      if (voltageMode==FALSE)
 8003040:	7cbb      	ldrb	r3, [r7, #18]
 8003042:	2b00      	cmp	r3, #0
 8003044:	d112      	bne.n	800306c <Powerstep01_SetAnalogValue+0x354>
      {
        if (value>POWERSTEP01_TOFF_TON_MIN_MAX_VALUE) result = FALSE;
 8003046:	edd7 7a01 	vldr	s15, [r7, #4]
 800304a:	ed9f 7a22 	vldr	s14, [pc, #136]	@ 80030d4 <Powerstep01_SetAnalogValue+0x3bc>
 800304e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003052:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003056:	dd02      	ble.n	800305e <Powerstep01_SetAnalogValue+0x346>
 8003058:	2300      	movs	r3, #0
 800305a:	74fb      	strb	r3, [r7, #19]
      else
      {
        if (value > POWERSTEP01_SLP_MAX_VALUE) result = FALSE;
        else registerValue = Powerstep01_BEMFslope_Perc_to_RegVal(value);
      }
      break;
 800305c:	e01b      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_Tmin_Time_to_RegVal(value);
 800305e:	ed97 0a01 	vldr	s0, [r7, #4]
 8003062:	f000 ff4f 	bl	8003f04 <Powerstep01_Tmin_Time_to_RegVal>
 8003066:	4603      	mov	r3, r0
 8003068:	617b      	str	r3, [r7, #20]
      break;
 800306a:	e014      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        if (value > POWERSTEP01_SLP_MAX_VALUE) result = FALSE;
 800306c:	edd7 7a01 	vldr	s15, [r7, #4]
 8003070:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 80030d8 <Powerstep01_SetAnalogValue+0x3c0>
 8003074:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800307c:	dd02      	ble.n	8003084 <Powerstep01_SetAnalogValue+0x36c>
 800307e:	2300      	movs	r3, #0
 8003080:	74fb      	strb	r3, [r7, #19]
      break;
 8003082:	e008      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
        else registerValue = Powerstep01_BEMFslope_Perc_to_RegVal(value);
 8003084:	ed97 0a01 	vldr	s0, [r7, #4]
 8003088:	f000 fd42 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 800308c:	4603      	mov	r3, r0
 800308e:	617b      	str	r3, [r7, #20]
      break;
 8003090:	e001      	b.n	8003096 <Powerstep01_SetAnalogValue+0x37e>
    default:
      result = FALSE;
 8003092:	2300      	movs	r3, #0
 8003094:	74fb      	strb	r3, [r7, #19]
  }
  if (result!=FALSE)
 8003096:	7cfb      	ldrb	r3, [r7, #19]
 8003098:	2b00      	cmp	r3, #0
 800309a:	d005      	beq.n	80030a8 <Powerstep01_SetAnalogValue+0x390>
  {
    Powerstep01_CmdSetParam(deviceId, param, registerValue);
 800309c:	7bfb      	ldrb	r3, [r7, #15]
 800309e:	697a      	ldr	r2, [r7, #20]
 80030a0:	68b9      	ldr	r1, [r7, #8]
 80030a2:	4618      	mov	r0, r3
 80030a4:	f7ff fa44 	bl	8002530 <Powerstep01_CmdSetParam>
  }
  return result;
 80030a8:	7cfb      	ldrb	r3, [r7, #19]
}
 80030aa:	4618      	mov	r0, r3
 80030ac:	371c      	adds	r7, #28
 80030ae:	46bd      	mov	sp, r7
 80030b0:	bd90      	pop	{r4, r7, pc}
 80030b2:	bf00      	nop
 80030b4:	43ff8000 	.word	0x43ff8000
 80030b8:	4768c600 	.word	0x4768c600
 80030bc:	4673e800 	.word	0x4673e800
 80030c0:	44741333 	.word	0x44741333
 80030c4:	46742400 	.word	0x46742400
 80030c8:	44742000 	.word	0x44742000
 80030cc:	3fbc0000 	.word	0x3fbc0000
 80030d0:	447a0000 	.word	0x447a0000
 80030d4:	42800000 	.word	0x42800000
 80030d8:	3ecccccd 	.word	0x3ecccccd

080030dc <Powerstep01_StartStepClock>:
 * @param[in] newFreq in Hz of the step clock
 * @retval None
 * @note The frequency is directly the current speed of the device
 **********************************************************/
void Powerstep01_StartStepClock(uint16_t newFreq)
{
 80030dc:	b580      	push	{r7, lr}
 80030de:	b082      	sub	sp, #8
 80030e0:	af00      	add	r7, sp, #0
 80030e2:	4603      	mov	r3, r0
 80030e4:	80fb      	strh	r3, [r7, #6]
  Powerstep01_Board_StartStepClock(newFreq);
 80030e6:	88fb      	ldrh	r3, [r7, #6]
 80030e8:	4618      	mov	r0, r3
 80030ea:	f001 f9d9 	bl	80044a0 <Powerstep01_Board_StartStepClock>
}
 80030ee:	bf00      	nop
 80030f0:	3708      	adds	r7, #8
 80030f2:	46bd      	mov	sp, r7
 80030f4:	bd80      	pop	{r7, pc}

080030f6 <Powerstep01_StopStepClock>:
/******************************************************//**
 * @brief  Stops the PWM uses for the step clock
 * @retval None
 **********************************************************/
void Powerstep01_StopStepClock(void)
{
 80030f6:	b580      	push	{r7, lr}
 80030f8:	af00      	add	r7, sp, #0
  Powerstep01_Board_StopStepClock();
 80030fa:	f001 f9f7 	bl	80044ec <Powerstep01_Board_StopStepClock>
}
 80030fe:	bf00      	nop
 8003100:	bd80      	pop	{r7, pc}
	...

08003104 <Powerstep01_WaitForAllDevicesNotBusy>:
/******************************************************//**
 * @brief  Locks until all devices become not busy
 * @retval None
 **********************************************************/
void Powerstep01_WaitForAllDevicesNotBusy(void)
{
 8003104:	b580      	push	{r7, lr}
 8003106:	b082      	sub	sp, #8
 8003108:	af00      	add	r7, sp, #0
  bool busy = TRUE;
 800310a:	2301      	movs	r3, #1
 800310c:	71fb      	strb	r3, [r7, #7]
  uint8_t loop;
	
  /* Wait while at least one is active */
  while (busy)
 800310e:	e016      	b.n	800313e <Powerstep01_WaitForAllDevicesNotBusy+0x3a>
  {
    busy = FALSE;
 8003110:	2300      	movs	r3, #0
 8003112:	71fb      	strb	r3, [r7, #7]
    for (loop = 0; loop < numberOfDevices; loop++)
 8003114:	2300      	movs	r3, #0
 8003116:	71bb      	strb	r3, [r7, #6]
 8003118:	e00b      	b.n	8003132 <Powerstep01_WaitForAllDevicesNotBusy+0x2e>
    {
      busy  |= Powerstep01_IsDeviceBusy(loop);
 800311a:	79bb      	ldrb	r3, [r7, #6]
 800311c:	4618      	mov	r0, r3
 800311e:	f7ff fc92 	bl	8002a46 <Powerstep01_IsDeviceBusy>
 8003122:	4603      	mov	r3, r0
 8003124:	461a      	mov	r2, r3
 8003126:	79fb      	ldrb	r3, [r7, #7]
 8003128:	4313      	orrs	r3, r2
 800312a:	71fb      	strb	r3, [r7, #7]
    for (loop = 0; loop < numberOfDevices; loop++)
 800312c:	79bb      	ldrb	r3, [r7, #6]
 800312e:	3301      	adds	r3, #1
 8003130:	71bb      	strb	r3, [r7, #6]
 8003132:	4b07      	ldr	r3, [pc, #28]	@ (8003150 <Powerstep01_WaitForAllDevicesNotBusy+0x4c>)
 8003134:	781b      	ldrb	r3, [r3, #0]
 8003136:	b2db      	uxtb	r3, r3
 8003138:	79ba      	ldrb	r2, [r7, #6]
 800313a:	429a      	cmp	r2, r3
 800313c:	d3ed      	bcc.n	800311a <Powerstep01_WaitForAllDevicesNotBusy+0x16>
  while (busy)
 800313e:	79fb      	ldrb	r3, [r7, #7]
 8003140:	2b00      	cmp	r3, #0
 8003142:	d1e5      	bne.n	8003110 <Powerstep01_WaitForAllDevicesNotBusy+0xc>
    }   
  }
}
 8003144:	bf00      	nop
 8003146:	bf00      	nop
 8003148:	3708      	adds	r7, #8
 800314a:	46bd      	mov	sp, r7
 800314c:	bd80      	pop	{r7, pc}
 800314e:	bf00      	nop
 8003150:	200008a4 	.word	0x200008a4

08003154 <Powerstep01_WaitWhileActive>:
 * @brief  Locks until the device becomes not busy
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_WaitWhileActive(uint8_t deviceId)
 {
 8003154:	b580      	push	{r7, lr}
 8003156:	b082      	sub	sp, #8
 8003158:	af00      	add	r7, sp, #0
 800315a:	4603      	mov	r3, r0
 800315c:	71fb      	strb	r3, [r7, #7]
	/* Wait while motor is running */
	while (Powerstep01_IsDeviceBusy(deviceId) != 0);
 800315e:	bf00      	nop
 8003160:	79fb      	ldrb	r3, [r7, #7]
 8003162:	4618      	mov	r0, r3
 8003164:	f7ff fc6f 	bl	8002a46 <Powerstep01_IsDeviceBusy>
 8003168:	4603      	mov	r3, r0
 800316a:	2b00      	cmp	r3, #0
 800316c:	d1f8      	bne.n	8003160 <Powerstep01_WaitWhileActive+0xc>
}
 800316e:	bf00      	nop
 8003170:	bf00      	nop
 8003172:	3708      	adds	r7, #8
 8003174:	46bd      	mov	sp, r7
 8003176:	bd80      	pop	{r7, pc}

08003178 <Powerstep01_ConvertPosition>:
 * @brief  Converts the ABS_POSITION register value to a 32b signed integer
 * @param[in] abs_position_reg value of the ABS_POSITION register
 * @retval operation_result 32b signed integer corresponding to the absolute position 
 **********************************************************/
int32_t Powerstep01_ConvertPosition(uint32_t abs_position_reg)
{
 8003178:	b480      	push	{r7}
 800317a:	b085      	sub	sp, #20
 800317c:	af00      	add	r7, sp, #0
 800317e:	6078      	str	r0, [r7, #4]
	int32_t operation_result;

  if (abs_position_reg & POWERSTEP01_ABS_POS_SIGN_BIT_MASK) 
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003186:	2b00      	cmp	r3, #0
 8003188:	d00d      	beq.n	80031a6 <Powerstep01_ConvertPosition+0x2e>
  {
		/* Negative register value */
		abs_position_reg = ~abs_position_reg;
 800318a:	687b      	ldr	r3, [r7, #4]
 800318c:	43db      	mvns	r3, r3
 800318e:	607b      	str	r3, [r7, #4]
		abs_position_reg += 1;
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	3301      	adds	r3, #1
 8003194:	607b      	str	r3, [r7, #4]

		operation_result = (int32_t) (abs_position_reg & POWERSTEP01_ABS_POS_VALUE_MASK);
 8003196:	687b      	ldr	r3, [r7, #4]
 8003198:	f3c3 0315 	ubfx	r3, r3, #0, #22
 800319c:	60fb      	str	r3, [r7, #12]
		operation_result = -operation_result;
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	425b      	negs	r3, r3
 80031a2:	60fb      	str	r3, [r7, #12]
 80031a4:	e001      	b.n	80031aa <Powerstep01_ConvertPosition+0x32>
  } 
  else 
  {
		operation_result = (int32_t) abs_position_reg;
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	60fb      	str	r3, [r7, #12]
	}
	return operation_result;
 80031aa:	68fb      	ldr	r3, [r7, #12]
}
 80031ac:	4618      	mov	r0, r3
 80031ae:	3714      	adds	r7, #20
 80031b0:	46bd      	mov	sp, r7
 80031b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031b6:	4770      	bx	lr

080031b8 <Powerstep01_BusyInterruptHandler>:
/******************************************************//**
 * @brief  Handlers of the busy interrupt which calls the user callback (if defined)
 * @retval None
 **********************************************************/
void Powerstep01_BusyInterruptHandler(void)
{
 80031b8:	b580      	push	{r7, lr}
 80031ba:	af00      	add	r7, sp, #0
  if (busyInterruptCallback != 0)
 80031bc:	4b07      	ldr	r3, [pc, #28]	@ (80031dc <Powerstep01_BusyInterruptHandler+0x24>)
 80031be:	681b      	ldr	r3, [r3, #0]
 80031c0:	2b00      	cmp	r3, #0
 80031c2:	d008      	beq.n	80031d6 <Powerstep01_BusyInterruptHandler+0x1e>
  {
    /* Set isr flag */
    isrFlag = TRUE;
 80031c4:	4b06      	ldr	r3, [pc, #24]	@ (80031e0 <Powerstep01_BusyInterruptHandler+0x28>)
 80031c6:	2201      	movs	r2, #1
 80031c8:	701a      	strb	r2, [r3, #0]
    
    busyInterruptCallback();
 80031ca:	4b04      	ldr	r3, [pc, #16]	@ (80031dc <Powerstep01_BusyInterruptHandler+0x24>)
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	4798      	blx	r3
    
    /* Reset isr flag */
    isrFlag = FALSE;   
 80031d0:	4b03      	ldr	r3, [pc, #12]	@ (80031e0 <Powerstep01_BusyInterruptHandler+0x28>)
 80031d2:	2200      	movs	r2, #0
 80031d4:	701a      	strb	r2, [r3, #0]
  }
}
 80031d6:	bf00      	nop
 80031d8:	bd80      	pop	{r7, pc}
 80031da:	bf00      	nop
 80031dc:	20000898 	.word	0x20000898
 80031e0:	200008b1 	.word	0x200008b1

080031e4 <Powerstep01_ErrorHandler>:
 * @brief Error handler which calls the user callback (if defined)
 * @param[in] error Number of the error
 * @retval None
 **********************************************************/
void Powerstep01_ErrorHandler(uint16_t error)
{
 80031e4:	b580      	push	{r7, lr}
 80031e6:	b082      	sub	sp, #8
 80031e8:	af00      	add	r7, sp, #0
 80031ea:	4603      	mov	r3, r0
 80031ec:	80fb      	strh	r3, [r7, #6]
  if (errorHandlerCallback != 0)
 80031ee:	4b07      	ldr	r3, [pc, #28]	@ (800320c <Powerstep01_ErrorHandler+0x28>)
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d005      	beq.n	8003202 <Powerstep01_ErrorHandler+0x1e>
  {
    errorHandlerCallback(error);
 80031f6:	4b05      	ldr	r3, [pc, #20]	@ (800320c <Powerstep01_ErrorHandler+0x28>)
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	88fa      	ldrh	r2, [r7, #6]
 80031fc:	4610      	mov	r0, r2
 80031fe:	4798      	blx	r3
    while(1)
    {
      /* Infinite loop */
    }
  }
}
 8003200:	e000      	b.n	8003204 <Powerstep01_ErrorHandler+0x20>
    while(1)
 8003202:	e7fe      	b.n	8003202 <Powerstep01_ErrorHandler+0x1e>
}
 8003204:	3708      	adds	r7, #8
 8003206:	46bd      	mov	sp, r7
 8003208:	bd80      	pop	{r7, pc}
 800320a:	bf00      	nop
 800320c:	200008a0 	.word	0x200008a0

08003210 <Powerstep01_FlagInterruptHandler>:
/******************************************************//**
 * @brief  Handlers of the flag interrupt which calls the user callback (if defined)
 * @retval None
 **********************************************************/
void Powerstep01_FlagInterruptHandler(void)
{
 8003210:	b580      	push	{r7, lr}
 8003212:	af00      	add	r7, sp, #0
  if (flagInterruptCallback != 0)
 8003214:	4b07      	ldr	r3, [pc, #28]	@ (8003234 <Powerstep01_FlagInterruptHandler+0x24>)
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	2b00      	cmp	r3, #0
 800321a:	d008      	beq.n	800322e <Powerstep01_FlagInterruptHandler+0x1e>
  {
    /* Set isr flag */
    isrFlag = TRUE;
 800321c:	4b06      	ldr	r3, [pc, #24]	@ (8003238 <Powerstep01_FlagInterruptHandler+0x28>)
 800321e:	2201      	movs	r2, #1
 8003220:	701a      	strb	r2, [r3, #0]
    
    flagInterruptCallback();
 8003222:	4b04      	ldr	r3, [pc, #16]	@ (8003234 <Powerstep01_FlagInterruptHandler+0x24>)
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	4798      	blx	r3
    
    /* Reset isr flag */
    isrFlag = FALSE;   
 8003228:	4b03      	ldr	r3, [pc, #12]	@ (8003238 <Powerstep01_FlagInterruptHandler+0x28>)
 800322a:	2200      	movs	r2, #0
 800322c:	701a      	strb	r2, [r3, #0]
  }
}
 800322e:	bf00      	nop
 8003230:	bd80      	pop	{r7, pc}
 8003232:	bf00      	nop
 8003234:	2000089c 	.word	0x2000089c
 8003238:	200008b1 	.word	0x200008b1

0800323c <Powerstep01_SendCommand>:
 * POWERSTEP01_GET_STATUS)
 * @param[in] value arguments to send on 32 bits
 * @retval None
 **********************************************************/
void Powerstep01_SendCommand(uint8_t deviceId, uint8_t param, uint32_t value)
{
 800323c:	b580      	push	{r7, lr}
 800323e:	b084      	sub	sp, #16
 8003240:	af00      	add	r7, sp, #0
 8003242:	4603      	mov	r3, r0
 8003244:	603a      	str	r2, [r7, #0]
 8003246:	71fb      	strb	r3, [r7, #7]
 8003248:	460b      	mov	r3, r1
 800324a:	71bb      	strb	r3, [r7, #6]
  if (numberOfDevices > deviceId)
 800324c:	4b59      	ldr	r3, [pc, #356]	@ (80033b4 <Powerstep01_SendCommand+0x178>)
 800324e:	781b      	ldrb	r3, [r3, #0]
 8003250:	b2db      	uxtb	r3, r3
 8003252:	79fa      	ldrb	r2, [r7, #7]
 8003254:	429a      	cmp	r2, r3
 8003256:	f080 80a8 	bcs.w	80033aa <Powerstep01_SendCommand+0x16e>
  {
    uint32_t loop;
    uint8_t maxArgumentNbBytes = 0;
 800325a:	2300      	movs	r3, #0
 800325c:	72fb      	strb	r3, [r7, #11]
    uint8_t spiIndex = numberOfDevices - deviceId - 1;
 800325e:	4b55      	ldr	r3, [pc, #340]	@ (80033b4 <Powerstep01_SendCommand+0x178>)
 8003260:	781b      	ldrb	r3, [r3, #0]
 8003262:	b2da      	uxtb	r2, r3
 8003264:	79fb      	ldrb	r3, [r7, #7]
 8003266:	1ad3      	subs	r3, r2, r3
 8003268:	b2db      	uxtb	r3, r3
 800326a:	3b01      	subs	r3, #1
 800326c:	727b      	strb	r3, [r7, #9]
    bool itDisable = FALSE; 
 800326e:	2300      	movs	r3, #0
 8003270:	72bb      	strb	r3, [r7, #10]
    
    do
    {
      spiPreemtionByIsr = FALSE;
 8003272:	4b51      	ldr	r3, [pc, #324]	@ (80033b8 <Powerstep01_SendCommand+0x17c>)
 8003274:	2200      	movs	r2, #0
 8003276:	701a      	strb	r2, [r3, #0]
      if (itDisable)
 8003278:	7abb      	ldrb	r3, [r7, #10]
 800327a:	2b00      	cmp	r3, #0
 800327c:	d003      	beq.n	8003286 <Powerstep01_SendCommand+0x4a>
      {
        /* re-enable Powerstep01_Board_EnableIrq if disable in previous iteration */
        Powerstep01_Board_EnableIrq();
 800327e:	f001 f82a 	bl	80042d6 <Powerstep01_Board_EnableIrq>
        itDisable = FALSE;
 8003282:	2300      	movs	r3, #0
 8003284:	72bb      	strb	r3, [r7, #10]
      }    
      for (loop = 0; loop < numberOfDevices; loop++)
 8003286:	2300      	movs	r3, #0
 8003288:	60fb      	str	r3, [r7, #12]
 800328a:	e019      	b.n	80032c0 <Powerstep01_SendCommand+0x84>
      {
          spiTxBursts[0][loop] = POWERSTEP01_NOP;
 800328c:	4a4b      	ldr	r2, [pc, #300]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 800328e:	68fb      	ldr	r3, [r7, #12]
 8003290:	4413      	add	r3, r2
 8003292:	2200      	movs	r2, #0
 8003294:	701a      	strb	r2, [r3, #0]
          spiTxBursts[1][loop] = POWERSTEP01_NOP;
 8003296:	4a49      	ldr	r2, [pc, #292]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	4413      	add	r3, r2
 800329c:	3301      	adds	r3, #1
 800329e:	2200      	movs	r2, #0
 80032a0:	701a      	strb	r2, [r3, #0]
          spiTxBursts[2][loop] = POWERSTEP01_NOP;
 80032a2:	4a46      	ldr	r2, [pc, #280]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 80032a4:	68fb      	ldr	r3, [r7, #12]
 80032a6:	4413      	add	r3, r2
 80032a8:	3302      	adds	r3, #2
 80032aa:	2200      	movs	r2, #0
 80032ac:	701a      	strb	r2, [r3, #0]
          spiTxBursts[3][loop] = POWERSTEP01_NOP;   
 80032ae:	4a43      	ldr	r2, [pc, #268]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 80032b0:	68fb      	ldr	r3, [r7, #12]
 80032b2:	4413      	add	r3, r2
 80032b4:	3303      	adds	r3, #3
 80032b6:	2200      	movs	r2, #0
 80032b8:	701a      	strb	r2, [r3, #0]
      for (loop = 0; loop < numberOfDevices; loop++)
 80032ba:	68fb      	ldr	r3, [r7, #12]
 80032bc:	3301      	adds	r3, #1
 80032be:	60fb      	str	r3, [r7, #12]
 80032c0:	4b3c      	ldr	r3, [pc, #240]	@ (80033b4 <Powerstep01_SendCommand+0x178>)
 80032c2:	781b      	ldrb	r3, [r3, #0]
 80032c4:	b2db      	uxtb	r3, r3
 80032c6:	461a      	mov	r2, r3
 80032c8:	68fb      	ldr	r3, [r7, #12]
 80032ca:	4293      	cmp	r3, r2
 80032cc:	d3de      	bcc.n	800328c <Powerstep01_SendCommand+0x50>
      }
      switch (param & DAISY_CHAIN_COMMAND_MASK)
 80032ce:	79bb      	ldrb	r3, [r7, #6]
 80032d0:	f003 03fa 	and.w	r3, r3, #250	@ 0xfa
 80032d4:	2b8a      	cmp	r3, #138	@ 0x8a
 80032d6:	d016      	beq.n	8003306 <Powerstep01_SendCommand+0xca>
 80032d8:	2b8a      	cmp	r3, #138	@ 0x8a
 80032da:	dc32      	bgt.n	8003342 <Powerstep01_SendCommand+0x106>
 80032dc:	2b82      	cmp	r3, #130	@ 0x82
 80032de:	d012      	beq.n	8003306 <Powerstep01_SendCommand+0xca>
 80032e0:	2b82      	cmp	r3, #130	@ 0x82
 80032e2:	dc2e      	bgt.n	8003342 <Powerstep01_SendCommand+0x106>
 80032e4:	2b68      	cmp	r3, #104	@ 0x68
 80032e6:	d00a      	beq.n	80032fe <Powerstep01_SendCommand+0xc2>
 80032e8:	2b68      	cmp	r3, #104	@ 0x68
 80032ea:	dc2a      	bgt.n	8003342 <Powerstep01_SendCommand+0x106>
 80032ec:	2b60      	cmp	r3, #96	@ 0x60
 80032ee:	d006      	beq.n	80032fe <Powerstep01_SendCommand+0xc2>
 80032f0:	2b60      	cmp	r3, #96	@ 0x60
 80032f2:	dc26      	bgt.n	8003342 <Powerstep01_SendCommand+0x106>
 80032f4:	2b40      	cmp	r3, #64	@ 0x40
 80032f6:	d006      	beq.n	8003306 <Powerstep01_SendCommand+0xca>
 80032f8:	2b50      	cmp	r3, #80	@ 0x50
 80032fa:	d004      	beq.n	8003306 <Powerstep01_SendCommand+0xca>
 80032fc:	e021      	b.n	8003342 <Powerstep01_SendCommand+0x106>
      {
        case POWERSTEP01_GO_TO:
        case POWERSTEP01_GO_TO_DIR:
          value = value & POWERSTEP01_ABS_POS_VALUE_MASK;
 80032fe:	683b      	ldr	r3, [r7, #0]
 8003300:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8003304:	603b      	str	r3, [r7, #0]
        case POWERSTEP01_RUN:
        case POWERSTEP01_MOVE:
        case POWERSTEP01_GO_UNTIL:
        case POWERSTEP01_GO_UNTIL_ACT_CPY:
          spiTxBursts[0][spiIndex] = param;
 8003306:	7a7b      	ldrb	r3, [r7, #9]
 8003308:	492c      	ldr	r1, [pc, #176]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 800330a:	79ba      	ldrb	r2, [r7, #6]
 800330c:	54ca      	strb	r2, [r1, r3]
          spiTxBursts[1][spiIndex] = (uint8_t)(value >> 16);
 800330e:	683b      	ldr	r3, [r7, #0]
 8003310:	0c1a      	lsrs	r2, r3, #16
 8003312:	7a7b      	ldrb	r3, [r7, #9]
 8003314:	b2d1      	uxtb	r1, r2
 8003316:	4a29      	ldr	r2, [pc, #164]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003318:	4413      	add	r3, r2
 800331a:	460a      	mov	r2, r1
 800331c:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = (uint8_t)(value >> 8);
 800331e:	683b      	ldr	r3, [r7, #0]
 8003320:	0a1a      	lsrs	r2, r3, #8
 8003322:	7a7b      	ldrb	r3, [r7, #9]
 8003324:	b2d1      	uxtb	r1, r2
 8003326:	4a25      	ldr	r2, [pc, #148]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003328:	4413      	add	r3, r2
 800332a:	460a      	mov	r2, r1
 800332c:	709a      	strb	r2, [r3, #2]
          spiTxBursts[3][spiIndex] = (uint8_t)(value);
 800332e:	7a7b      	ldrb	r3, [r7, #9]
 8003330:	683a      	ldr	r2, [r7, #0]
 8003332:	b2d1      	uxtb	r1, r2
 8003334:	4a21      	ldr	r2, [pc, #132]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003336:	4413      	add	r3, r2
 8003338:	460a      	mov	r2, r1
 800333a:	70da      	strb	r2, [r3, #3]
          maxArgumentNbBytes = 3;
 800333c:	2303      	movs	r3, #3
 800333e:	72fb      	strb	r3, [r7, #11]
          break;
 8003340:	e012      	b.n	8003368 <Powerstep01_SendCommand+0x12c>
      default:
          spiTxBursts[0][spiIndex] = POWERSTEP01_NOP;
 8003342:	7a7b      	ldrb	r3, [r7, #9]
 8003344:	4a1d      	ldr	r2, [pc, #116]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003346:	2100      	movs	r1, #0
 8003348:	54d1      	strb	r1, [r2, r3]
          spiTxBursts[1][spiIndex] = POWERSTEP01_NOP;
 800334a:	7a7b      	ldrb	r3, [r7, #9]
 800334c:	4a1b      	ldr	r2, [pc, #108]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 800334e:	4413      	add	r3, r2
 8003350:	2200      	movs	r2, #0
 8003352:	705a      	strb	r2, [r3, #1]
          spiTxBursts[2][spiIndex] = POWERSTEP01_NOP;
 8003354:	7a7b      	ldrb	r3, [r7, #9]
 8003356:	4a19      	ldr	r2, [pc, #100]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003358:	4413      	add	r3, r2
 800335a:	2200      	movs	r2, #0
 800335c:	709a      	strb	r2, [r3, #2]
          spiTxBursts[3][spiIndex] = param;
 800335e:	7a7b      	ldrb	r3, [r7, #9]
 8003360:	4a16      	ldr	r2, [pc, #88]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 8003362:	4413      	add	r3, r2
 8003364:	79ba      	ldrb	r2, [r7, #6]
 8003366:	70da      	strb	r2, [r3, #3]
      }
      /* Disable interruption before checking */
      /* pre-emption by ISR and SPI transfers*/
      Powerstep01_Board_DisableIrq();
 8003368:	f000 ffac 	bl	80042c4 <Powerstep01_Board_DisableIrq>
      itDisable = TRUE;
 800336c:	2301      	movs	r3, #1
 800336e:	72bb      	strb	r3, [r7, #10]
    } while (spiPreemtionByIsr); // check pre-emption by ISR
 8003370:	4b11      	ldr	r3, [pc, #68]	@ (80033b8 <Powerstep01_SendCommand+0x17c>)
 8003372:	781b      	ldrb	r3, [r3, #0]
 8003374:	b2db      	uxtb	r3, r3
 8003376:	2b00      	cmp	r3, #0
 8003378:	f47f af7b 	bne.w	8003272 <Powerstep01_SendCommand+0x36>
    for (loop = POWERSTEP01_CMD_ARG_MAX_NB_BYTES - 1 - maxArgumentNbBytes; 
 800337c:	7afb      	ldrb	r3, [r7, #11]
 800337e:	f1c3 0303 	rsb	r3, r3, #3
 8003382:	60fb      	str	r3, [r7, #12]
 8003384:	e00c      	b.n	80033a0 <Powerstep01_SendCommand+0x164>
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
         loop++)
    {
       Powerstep01_WriteBytes(&spiTxBursts[loop][0], &spiRxBursts[loop][0]);
 8003386:	68fb      	ldr	r3, [r7, #12]
 8003388:	4a0c      	ldr	r2, [pc, #48]	@ (80033bc <Powerstep01_SendCommand+0x180>)
 800338a:	441a      	add	r2, r3
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	490c      	ldr	r1, [pc, #48]	@ (80033c0 <Powerstep01_SendCommand+0x184>)
 8003390:	440b      	add	r3, r1
 8003392:	4619      	mov	r1, r3
 8003394:	4610      	mov	r0, r2
 8003396:	f000 fb63 	bl	8003a60 <Powerstep01_WriteBytes>
         loop++)
 800339a:	68fb      	ldr	r3, [r7, #12]
 800339c:	3301      	adds	r3, #1
 800339e:	60fb      	str	r3, [r7, #12]
         loop < POWERSTEP01_CMD_ARG_MAX_NB_BYTES; 
 80033a0:	68fb      	ldr	r3, [r7, #12]
 80033a2:	2b03      	cmp	r3, #3
 80033a4:	d9ef      	bls.n	8003386 <Powerstep01_SendCommand+0x14a>
    }
    /* re-enable Powerstep01_Board_EnableIrq after SPI transfers*/
    Powerstep01_Board_EnableIrq();
 80033a6:	f000 ff96 	bl	80042d6 <Powerstep01_Board_EnableIrq>
  }
}
 80033aa:	bf00      	nop
 80033ac:	3710      	adds	r7, #16
 80033ae:	46bd      	mov	sp, r7
 80033b0:	bd80      	pop	{r7, pc}
 80033b2:	bf00      	nop
 80033b4:	200008a4 	.word	0x200008a4
 80033b8:	200008b0 	.word	0x200008b0
 80033bc:	200008a8 	.word	0x200008a8
 80033c0:	200008ac 	.word	0x200008ac

080033c4 <Powerstep01_SetRegisterToPredefinedValues>:
 * from powerstep01_target_config.h
 * @param[in] deviceId (from 0 to 2)
 * @retval None
 **********************************************************/
void Powerstep01_SetRegisterToPredefinedValues(uint8_t deviceId)
{  
 80033c4:	b580      	push	{r7, lr}
 80033c6:	b084      	sub	sp, #16
 80033c8:	af00      	add	r7, sp, #0
 80033ca:	4603      	mov	r3, r0
 80033cc:	71fb      	strb	r3, [r7, #7]
  powerstep01_CmVm_t cmVm;
  
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ABS_POS, 0);
 80033ce:	79fb      	ldrb	r3, [r7, #7]
 80033d0:	2200      	movs	r2, #0
 80033d2:	2101      	movs	r1, #1
 80033d4:	4618      	mov	r0, r3
 80033d6:	f7ff f8ab 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_EL_POS, 0);
 80033da:	79fb      	ldrb	r3, [r7, #7]
 80033dc:	2200      	movs	r2, #0
 80033de:	2102      	movs	r1, #2
 80033e0:	4618      	mov	r0, r3
 80033e2:	f7ff f8a5 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MARK, 0);
 80033e6:	79fb      	ldrb	r3, [r7, #7]
 80033e8:	2200      	movs	r2, #0
 80033ea:	2103      	movs	r1, #3
 80033ec:	4618      	mov	r0, r3
 80033ee:	f7ff f89f 	bl	8002530 <Powerstep01_CmdSetParam>
  
  switch (deviceId)
 80033f2:	79fb      	ldrb	r3, [r7, #7]
 80033f4:	2b00      	cmp	r3, #0
 80033f6:	f040 8120 	bne.w	800363a <Powerstep01_SetRegisterToPredefinedValues+0x276>
  {
    case 0:
      cmVm = POWERSTEP01_CONF_PARAM_CM_VM_DEVICE_0;
 80033fa:	2308      	movs	r3, #8
 80033fc:	73fb      	strb	r3, [r7, #15]
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
        Powerstep01_AccDec_Steps_s2_to_RegVal(
 80033fe:	ed9f 0a91 	vldr	s0, [pc, #580]	@ 8003644 <Powerstep01_SetRegisterToPredefinedValues+0x280>
 8003402:	f000 fb53 	bl	8003aac <Powerstep01_AccDec_Steps_s2_to_RegVal>
 8003406:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
 8003408:	461a      	mov	r2, r3
 800340a:	79fb      	ldrb	r3, [r7, #7]
 800340c:	2105      	movs	r1, #5
 800340e:	4618      	mov	r0, r3
 8003410:	f7ff f88e 	bl	8002530 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_ACC_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
        Powerstep01_AccDec_Steps_s2_to_RegVal(
 8003414:	ed9f 0a8b 	vldr	s0, [pc, #556]	@ 8003644 <Powerstep01_SetRegisterToPredefinedValues+0x280>
 8003418:	f000 fb48 	bl	8003aac <Powerstep01_AccDec_Steps_s2_to_RegVal>
 800341c:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
 800341e:	461a      	mov	r2, r3
 8003420:	79fb      	ldrb	r3, [r7, #7]
 8003422:	2106      	movs	r1, #6
 8003424:	4618      	mov	r0, r3
 8003426:	f7ff f883 	bl	8002530 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_DEC_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
        Powerstep01_MaxSpd_Steps_s_to_RegVal(
 800342a:	ed9f 0a86 	vldr	s0, [pc, #536]	@ 8003644 <Powerstep01_SetRegisterToPredefinedValues+0x280>
 800342e:	f000 fc77 	bl	8003d20 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 8003432:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
 8003434:	461a      	mov	r2, r3
 8003436:	79fb      	ldrb	r3, [r7, #7]
 8003438:	2107      	movs	r1, #7
 800343a:	4618      	mov	r0, r3
 800343c:	f7ff f878 	bl	8002530 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_MAX_SPEED_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
        POWERSTEP01_CONF_PARAM_LSPD_BIT_DEVICE_0|
        Powerstep01_MinSpd_Steps_s_to_RegVal(
 8003440:	ed9f 0a81 	vldr	s0, [pc, #516]	@ 8003648 <Powerstep01_SetRegisterToPredefinedValues+0x284>
 8003444:	f000 fc9e 	bl	8003d84 <Powerstep01_MinSpd_Steps_s_to_RegVal>
 8003448:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
 800344a:	461a      	mov	r2, r3
 800344c:	79fb      	ldrb	r3, [r7, #7]
 800344e:	2108      	movs	r1, #8
 8003450:	4618      	mov	r0, r3
 8003452:	f7ff f86d 	bl	8002530 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_MIN_SPEED_DEVICE_0));
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
        POWERSTEP01_CONF_PARAM_BOOST_MODE_DEVICE_0|
        Powerstep01_FSSpd_Steps_s_to_RegVal(
 8003456:	ed9f 0a7d 	vldr	s0, [pc, #500]	@ 800364c <Powerstep01_SetRegisterToPredefinedValues+0x288>
 800345a:	f000 fb8d 	bl	8003b78 <Powerstep01_FSSpd_Steps_s_to_RegVal>
 800345e:	4603      	mov	r3, r0
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
 8003460:	461a      	mov	r2, r3
 8003462:	79fb      	ldrb	r3, [r7, #7]
 8003464:	2115      	movs	r1, #21
 8003466:	4618      	mov	r0, r3
 8003468:	f7ff f862 	bl	8002530 <Powerstep01_CmdSetParam>
          POWERSTEP01_CONF_PARAM_FS_SPD_DEVICE_0)); 
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_OCD_TH,
 800346c:	79fb      	ldrb	r3, [r7, #7]
 800346e:	2208      	movs	r2, #8
 8003470:	2113      	movs	r1, #19
 8003472:	4618      	mov	r0, r3
 8003474:	f7ff f85c 	bl	8002530 <Powerstep01_CmdSetParam>
        (uint8_t)POWERSTEP01_CONF_PARAM_OCD_TH_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
 8003478:	79fb      	ldrb	r3, [r7, #7]
 800347a:	220b      	movs	r2, #11
 800347c:	2116      	movs	r1, #22
 800347e:	4618      	mov	r0, r3
 8003480:	f7ff f856 	bl	8002530 <Powerstep01_CmdSetParam>
        (uint8_t)POWERSTEP01_CONF_PARAM_SYNC_MODE_DEVICE_0 |
        (uint8_t)POWERSTEP01_CONF_PARAM_CM_VM_DEVICE_0|
        (uint8_t)POWERSTEP01_CONF_PARAM_STEP_MODE_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ALARM_EN,
 8003484:	79fb      	ldrb	r3, [r7, #7]
 8003486:	22ef      	movs	r2, #239	@ 0xef
 8003488:	2117      	movs	r1, #23
 800348a:	4618      	mov	r0, r3
 800348c:	f7ff f850 	bl	8002530 <Powerstep01_CmdSetParam>
        POWERSTEP01_CONF_PARAM_ALARM_EN_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG1,
 8003490:	79fb      	ldrb	r3, [r7, #7]
 8003492:	22c3      	movs	r2, #195	@ 0xc3
 8003494:	2118      	movs	r1, #24
 8003496:	4618      	mov	r0, r3
 8003498:	f7ff f84a 	bl	8002530 <Powerstep01_CmdSetParam>
        (uint16_t)POWERSTEP01_CONF_PARAM_IGATE_DEVICE_0 | 
        (uint16_t)POWERSTEP01_CONF_PARAM_TCC_DEVICE_0   | 
        (uint16_t)POWERSTEP01_CONF_PARAM_TBOOST_DEVICE_0|
        (uint16_t)POWERSTEP01_CONF_PARAM_WD_EN_DEVICE_0);
      Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG2,
 800349c:	79fb      	ldrb	r3, [r7, #7]
 800349e:	2240      	movs	r2, #64	@ 0x40
 80034a0:	2119      	movs	r1, #25
 80034a2:	4618      	mov	r0, r3
 80034a4:	f7ff f844 	bl	8002530 <Powerstep01_CmdSetParam>
        (uint16_t)POWERSTEP01_CONF_PARAM_TBLANK_DEVICE_0 | 
        (uint16_t)POWERSTEP01_CONF_PARAM_TDT_DEVICE_0);
      // Voltage mode
      if (cmVm == POWERSTEP01_CM_VM_VOLTAGE)
 80034a8:	7bfb      	ldrb	r3, [r7, #15]
 80034aa:	2b00      	cmp	r3, #0
 80034ac:	d175      	bne.n	800359a <Powerstep01_SetRegisterToPredefinedValues+0x1d6>
      {
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
          Powerstep01_IntSpd_Steps_s_to_RegVal(
 80034ae:	ed9f 0a68 	vldr	s0, [pc, #416]	@ 8003650 <Powerstep01_SetRegisterToPredefinedValues+0x28c>
 80034b2:	f000 fb95 	bl	8003be0 <Powerstep01_IntSpd_Steps_s_to_RegVal>
 80034b6:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
 80034b8:	461a      	mov	r2, r3
 80034ba:	79fb      	ldrb	r3, [r7, #7]
 80034bc:	210d      	movs	r1, #13
 80034be:	4618      	mov	r0, r3
 80034c0:	f7ff f836 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_INT_SPD_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
          Powerstep01_KTherm_Comp_to_RegVal(
 80034c4:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
 80034c8:	f000 fbbc 	bl	8003c44 <Powerstep01_KTherm_Comp_to_RegVal>
 80034cc:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
 80034ce:	461a      	mov	r2, r3
 80034d0:	79fb      	ldrb	r3, [r7, #7]
 80034d2:	2111      	movs	r1, #17
 80034d4:	4618      	mov	r0, r3
 80034d6:	f7ff f82b 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_K_THERM_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
          Powerstep01_StallOcd_Th_to_RegVal(
 80034da:	ed9f 0a5e 	vldr	s0, [pc, #376]	@ 8003654 <Powerstep01_SetRegisterToPredefinedValues+0x290>
 80034de:	f000 fc99 	bl	8003e14 <Powerstep01_StallOcd_Th_to_RegVal>
 80034e2:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
 80034e4:	461a      	mov	r2, r3
 80034e6:	79fb      	ldrb	r3, [r7, #7]
 80034e8:	2114      	movs	r1, #20
 80034ea:	4618      	mov	r0, r3
 80034ec:	f7ff f820 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_STALL_TH_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
          Powerstep01_Kval_Perc_to_RegVal(
 80034f0:	ed9f 0a59 	vldr	s0, [pc, #356]	@ 8003658 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 80034f4:	f000 fbe2 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 80034f8:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
 80034fa:	461a      	mov	r2, r3
 80034fc:	79fb      	ldrb	r3, [r7, #7]
 80034fe:	2109      	movs	r1, #9
 8003500:	4618      	mov	r0, r3
 8003502:	f7ff f815 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_HOLD_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
          Powerstep01_Kval_Perc_to_RegVal(
 8003506:	ed9f 0a54 	vldr	s0, [pc, #336]	@ 8003658 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 800350a:	f000 fbd7 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 800350e:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
 8003510:	461a      	mov	r2, r3
 8003512:	79fb      	ldrb	r3, [r7, #7]
 8003514:	210a      	movs	r1, #10
 8003516:	4618      	mov	r0, r3
 8003518:	f7ff f80a 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_RUN_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
          Powerstep01_Kval_Perc_to_RegVal(
 800351c:	ed9f 0a4e 	vldr	s0, [pc, #312]	@ 8003658 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 8003520:	f000 fbcc 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 8003524:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
 8003526:	461a      	mov	r2, r3
 8003528:	79fb      	ldrb	r3, [r7, #7]
 800352a:	210b      	movs	r1, #11
 800352c:	4618      	mov	r0, r3
 800352e:	f7fe ffff 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_ACC_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
          Powerstep01_Kval_Perc_to_RegVal(
 8003532:	ed9f 0a49 	vldr	s0, [pc, #292]	@ 8003658 <Powerstep01_SetRegisterToPredefinedValues+0x294>
 8003536:	f000 fbc1 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 800353a:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
 800353c:	461a      	mov	r2, r3
 800353e:	79fb      	ldrb	r3, [r7, #7]
 8003540:	210c      	movs	r1, #12
 8003542:	4618      	mov	r0, r3
 8003544:	f7fe fff4 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_KVAL_DEC_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
          Powerstep01_BEMFslope_Perc_to_RegVal(
 8003548:	ed9f 0a44 	vldr	s0, [pc, #272]	@ 800365c <Powerstep01_SetRegisterToPredefinedValues+0x298>
 800354c:	f000 fae0 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 8003550:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
 8003552:	461a      	mov	r2, r3
 8003554:	79fb      	ldrb	r3, [r7, #7]
 8003556:	210e      	movs	r1, #14
 8003558:	4618      	mov	r0, r3
 800355a:	f7fe ffe9 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_ST_SLP_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
          Powerstep01_BEMFslope_Perc_to_RegVal(
 800355e:	ed9f 0a40 	vldr	s0, [pc, #256]	@ 8003660 <Powerstep01_SetRegisterToPredefinedValues+0x29c>
 8003562:	f000 fad5 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 8003566:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
 8003568:	461a      	mov	r2, r3
 800356a:	79fb      	ldrb	r3, [r7, #7]
 800356c:	210f      	movs	r1, #15
 800356e:	4618      	mov	r0, r3
 8003570:	f7fe ffde 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_FN_SLP_ACC_DEVICE_0));  
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
          Powerstep01_BEMFslope_Perc_to_RegVal(
 8003574:	ed9f 0a3a 	vldr	s0, [pc, #232]	@ 8003660 <Powerstep01_SetRegisterToPredefinedValues+0x29c>
 8003578:	f000 faca 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 800357c:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
 800357e:	461a      	mov	r2, r3
 8003580:	79fb      	ldrb	r3, [r7, #7]
 8003582:	2110      	movs	r1, #16
 8003584:	4618      	mov	r0, r3
 8003586:	f7fe ffd3 	bl	8002530 <Powerstep01_CmdSetParam>
            POWERSTEP01_CONF_PARAM_FN_SLP_DEC_DEVICE_0));
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 800358a:	79fb      	ldrb	r3, [r7, #7]
 800358c:	f642 6208 	movw	r2, #11784	@ 0x2e08
 8003590:	211a      	movs	r1, #26
 8003592:	4618      	mov	r0, r3
 8003594:	f7fe ffcc 	bl	8002530 <Powerstep01_CmdSetParam>
          (uint16_t)POWERSTEP01_CONF_PARAM_UVLOVAL_DEVICE_0       | 
          (uint16_t)POWERSTEP01_CONF_PARAM_VCCVAL_DEVICE_0        | 
          (uint16_t)POWERSTEP01_CONF_PARAM_TSW_DEVICE_0           |
          (uint16_t)POWERSTEP01_CONF_PARAM_PRED_DEVICE_0);          
      }
      break;
 8003598:	e04e      	b.n	8003638 <Powerstep01_SetRegisterToPredefinedValues+0x274>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 800359a:	ed9f 0a32 	vldr	s0, [pc, #200]	@ 8003664 <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 800359e:	f000 fc75 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 80035a2:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_HOLD,
 80035a4:	461a      	mov	r2, r3
 80035a6:	79fb      	ldrb	r3, [r7, #7]
 80035a8:	2109      	movs	r1, #9
 80035aa:	4618      	mov	r0, r3
 80035ac:	f7fe ffc0 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 80035b0:	ed9f 0a2c 	vldr	s0, [pc, #176]	@ 8003664 <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 80035b4:	f000 fc6a 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 80035b8:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_RUN,
 80035ba:	461a      	mov	r2, r3
 80035bc:	79fb      	ldrb	r3, [r7, #7]
 80035be:	210a      	movs	r1, #10
 80035c0:	4618      	mov	r0, r3
 80035c2:	f7fe ffb5 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 80035c6:	ed9f 0a27 	vldr	s0, [pc, #156]	@ 8003664 <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 80035ca:	f000 fc5f 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 80035ce:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_ACC,
 80035d0:	461a      	mov	r2, r3
 80035d2:	79fb      	ldrb	r3, [r7, #7]
 80035d4:	210b      	movs	r1, #11
 80035d6:	4618      	mov	r0, r3
 80035d8:	f7fe ffaa 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 80035dc:	ed9f 0a21 	vldr	s0, [pc, #132]	@ 8003664 <Powerstep01_SetRegisterToPredefinedValues+0x2a0>
 80035e0:	f000 fc54 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 80035e4:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_DEC,
 80035e6:	461a      	mov	r2, r3
 80035e8:	79fb      	ldrb	r3, [r7, #7]
 80035ea:	210c      	movs	r1, #12
 80035ec:	4618      	mov	r0, r3
 80035ee:	f7fe ff9f 	bl	8002530 <Powerstep01_CmdSetParam>
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_T_FAST,
 80035f2:	79fb      	ldrb	r3, [r7, #7]
 80035f4:	2235      	movs	r2, #53	@ 0x35
 80035f6:	210e      	movs	r1, #14
 80035f8:	4618      	mov	r0, r3
 80035fa:	f7fe ff99 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80035fe:	eeb0 0a08 	vmov.f32	s0, #8	@ 0x40400000  3.0
 8003602:	f000 fc7f 	bl	8003f04 <Powerstep01_Tmin_Time_to_RegVal>
 8003606:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TON_MIN,
 8003608:	461a      	mov	r2, r3
 800360a:	79fb      	ldrb	r3, [r7, #7]
 800360c:	210f      	movs	r1, #15
 800360e:	4618      	mov	r0, r3
 8003610:	f7fe ff8e 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 8003614:	eeb3 0a05 	vmov.f32	s0, #53	@ 0x41a80000  21.0
 8003618:	f000 fc74 	bl	8003f04 <Powerstep01_Tmin_Time_to_RegVal>
 800361c:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TOFF_MIN,
 800361e:	461a      	mov	r2, r3
 8003620:	79fb      	ldrb	r3, [r7, #7]
 8003622:	2110      	movs	r1, #16
 8003624:	4618      	mov	r0, r3
 8003626:	f7fe ff83 	bl	8002530 <Powerstep01_CmdSetParam>
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 800362a:	79fb      	ldrb	r3, [r7, #7]
 800362c:	f243 2208 	movw	r2, #12808	@ 0x3208
 8003630:	211a      	movs	r1, #26
 8003632:	4618      	mov	r0, r3
 8003634:	f7fe ff7c 	bl	8002530 <Powerstep01_CmdSetParam>
      break;
 8003638:	bf00      	nop
      }
      break;
#endif
    default: ;
  }
}
 800363a:	bf00      	nop
 800363c:	3710      	adds	r7, #16
 800363e:	46bd      	mov	sp, r7
 8003640:	bd80      	pop	{r7, pc}
 8003642:	bf00      	nop
 8003644:	44c80000 	.word	0x44c80000
 8003648:	00000000 	.word	0x00000000
 800364c:	451c4000 	.word	0x451c4000
 8003650:	42760c4a 	.word	0x42760c4a
 8003654:	4404d000 	.word	0x4404d000
 8003658:	418028f6 	.word	0x418028f6
 800365c:	3d1c432d 	.word	0x3d1c432d
 8003660:	3d801f75 	.word	0x3d801f75
 8003664:	43a40f5c 	.word	0x43a40f5c

08003668 <Powerstep01_SetDeviceParamsToGivenValues>:
 * parameters
 * @retval None
 **********************************************************/
void Powerstep01_SetDeviceParamsToGivenValues(uint8_t deviceId,
                                              powerstep01_Init_u_t *initPrm)
{
 8003668:	b590      	push	{r4, r7, lr}
 800366a:	b083      	sub	sp, #12
 800366c:	af00      	add	r7, sp, #0
 800366e:	4603      	mov	r3, r0
 8003670:	6039      	str	r1, [r7, #0]
 8003672:	71fb      	strb	r3, [r7, #7]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ABS_POS, 0);
 8003674:	79fb      	ldrb	r3, [r7, #7]
 8003676:	2200      	movs	r2, #0
 8003678:	2101      	movs	r1, #1
 800367a:	4618      	mov	r0, r3
 800367c:	f7fe ff58 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_EL_POS, 0);
 8003680:	79fb      	ldrb	r3, [r7, #7]
 8003682:	2200      	movs	r2, #0
 8003684:	2102      	movs	r1, #2
 8003686:	4618      	mov	r0, r3
 8003688:	f7fe ff52 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MARK, 0);
 800368c:	79fb      	ldrb	r3, [r7, #7]
 800368e:	2200      	movs	r2, #0
 8003690:	2103      	movs	r1, #3
 8003692:	4618      	mov	r0, r3
 8003694:	f7fe ff4c 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
    Powerstep01_AccDec_Steps_s2_to_RegVal(initPrm->cm.cp.acceleration));
 8003698:	683b      	ldr	r3, [r7, #0]
 800369a:	edd3 7a01 	vldr	s15, [r3, #4]
 800369e:	eeb0 0a67 	vmov.f32	s0, s15
 80036a2:	f000 fa03 	bl	8003aac <Powerstep01_AccDec_Steps_s2_to_RegVal>
 80036a6:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ACC,
 80036a8:	461a      	mov	r2, r3
 80036aa:	79fb      	ldrb	r3, [r7, #7]
 80036ac:	2105      	movs	r1, #5
 80036ae:	4618      	mov	r0, r3
 80036b0:	f7fe ff3e 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
    Powerstep01_AccDec_Steps_s2_to_RegVal(initPrm->cm.cp.deceleration));
 80036b4:	683b      	ldr	r3, [r7, #0]
 80036b6:	edd3 7a02 	vldr	s15, [r3, #8]
 80036ba:	eeb0 0a67 	vmov.f32	s0, s15
 80036be:	f000 f9f5 	bl	8003aac <Powerstep01_AccDec_Steps_s2_to_RegVal>
 80036c2:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_DEC,
 80036c4:	461a      	mov	r2, r3
 80036c6:	79fb      	ldrb	r3, [r7, #7]
 80036c8:	2106      	movs	r1, #6
 80036ca:	4618      	mov	r0, r3
 80036cc:	f7fe ff30 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
    Powerstep01_MaxSpd_Steps_s_to_RegVal(initPrm->cm.cp.maxSpeed));
 80036d0:	683b      	ldr	r3, [r7, #0]
 80036d2:	edd3 7a03 	vldr	s15, [r3, #12]
 80036d6:	eeb0 0a67 	vmov.f32	s0, s15
 80036da:	f000 fb21 	bl	8003d20 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 80036de:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MAX_SPEED,
 80036e0:	461a      	mov	r2, r3
 80036e2:	79fb      	ldrb	r3, [r7, #7]
 80036e4:	2107      	movs	r1, #7
 80036e6:	4618      	mov	r0, r3
 80036e8:	f7fe ff22 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
    initPrm->cm.cp.lowSpeedOptimization|
 80036ec:	683b      	ldr	r3, [r7, #0]
 80036ee:	8a9c      	ldrh	r4, [r3, #20]
    Powerstep01_MaxSpd_Steps_s_to_RegVal(initPrm->cm.cp.minSpeed));
 80036f0:	683b      	ldr	r3, [r7, #0]
 80036f2:	edd3 7a04 	vldr	s15, [r3, #16]
 80036f6:	eeb0 0a67 	vmov.f32	s0, s15
 80036fa:	f000 fb11 	bl	8003d20 <Powerstep01_MaxSpd_Steps_s_to_RegVal>
 80036fe:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_MIN_SPEED,
 8003700:	4323      	orrs	r3, r4
 8003702:	b29b      	uxth	r3, r3
 8003704:	461a      	mov	r2, r3
 8003706:	79fb      	ldrb	r3, [r7, #7]
 8003708:	2108      	movs	r1, #8
 800370a:	4618      	mov	r0, r3
 800370c:	f7fe ff10 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
    initPrm->cm.cp.boostMode|
 8003710:	683b      	ldr	r3, [r7, #0]
 8003712:	8b9c      	ldrh	r4, [r3, #28]
    Powerstep01_FSSpd_Steps_s_to_RegVal(initPrm->cm.cp.fullStepSpeed));
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	edd3 7a06 	vldr	s15, [r3, #24]
 800371a:	eeb0 0a67 	vmov.f32	s0, s15
 800371e:	f000 fa2b 	bl	8003b78 <Powerstep01_FSSpd_Steps_s_to_RegVal>
 8003722:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FS_SPD,
 8003724:	4323      	orrs	r3, r4
 8003726:	b29b      	uxth	r3, r3
 8003728:	461a      	mov	r2, r3
 800372a:	79fb      	ldrb	r3, [r7, #7]
 800372c:	2115      	movs	r1, #21
 800372e:	4618      	mov	r0, r3
 8003730:	f7fe fefe 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_OCD_TH,
    Powerstep01_StallOcd_Th_to_RegVal(initPrm->cm.cp.ocdThreshold));
 8003734:	683b      	ldr	r3, [r7, #0]
 8003736:	edd3 7a08 	vldr	s15, [r3, #32]
 800373a:	eeb0 0a67 	vmov.f32	s0, s15
 800373e:	f000 fb69 	bl	8003e14 <Powerstep01_StallOcd_Th_to_RegVal>
 8003742:	4603      	mov	r3, r0
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_OCD_TH,
 8003744:	461a      	mov	r2, r3
 8003746:	79fb      	ldrb	r3, [r7, #7]
 8003748:	2113      	movs	r1, #19
 800374a:	4618      	mov	r0, r3
 800374c:	f7fe fef0 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
    (uint8_t)initPrm->cm.cp.syncClockSelection|
 8003750:	683b      	ldr	r3, [r7, #0]
 8003752:	f893 2025 	ldrb.w	r2, [r3, #37]	@ 0x25
    (uint8_t)initPrm->cm.cp.cmVmSelection|
 8003756:	683b      	ldr	r3, [r7, #0]
 8003758:	781b      	ldrb	r3, [r3, #0]
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
 800375a:	4313      	orrs	r3, r2
 800375c:	b2da      	uxtb	r2, r3
    (uint8_t)(uint8_t)initPrm->cm.cp.stepMode);
 800375e:	683b      	ldr	r3, [r7, #0]
 8003760:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STEP_MODE,
 8003764:	4313      	orrs	r3, r2
 8003766:	b2db      	uxtb	r3, r3
 8003768:	461a      	mov	r2, r3
 800376a:	79fb      	ldrb	r3, [r7, #7]
 800376c:	2116      	movs	r1, #22
 800376e:	4618      	mov	r0, r3
 8003770:	f7fe fede 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ALARM_EN,
    initPrm->cm.cp.alarmsSelection);
 8003774:	683b      	ldr	r3, [r7, #0]
 8003776:	f893 3026 	ldrb.w	r3, [r3, #38]	@ 0x26
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ALARM_EN,
 800377a:	461a      	mov	r2, r3
 800377c:	79fb      	ldrb	r3, [r7, #7]
 800377e:	2117      	movs	r1, #23
 8003780:	4618      	mov	r0, r3
 8003782:	f7fe fed5 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG1,
    (uint16_t)initPrm->cm.cp.iGate|
 8003786:	683b      	ldr	r3, [r7, #0]
 8003788:	f893 2027 	ldrb.w	r2, [r3, #39]	@ 0x27
    (uint16_t)initPrm->cm.cp.tcc|
 800378c:	683b      	ldr	r3, [r7, #0]
 800378e:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
    (uint16_t)initPrm->cm.cp.iGate|
 8003792:	4313      	orrs	r3, r2
 8003794:	b2db      	uxtb	r3, r3
 8003796:	461a      	mov	r2, r3
    (uint16_t)initPrm->cm.cp.tBoost|
 8003798:	683b      	ldr	r3, [r7, #0]
 800379a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
    (uint16_t)initPrm->cm.cp.tcc|
 800379c:	4313      	orrs	r3, r2
    (uint16_t)initPrm->cm.cp.wdEn);
 800379e:	683a      	ldr	r2, [r7, #0]
 80037a0:	8d92      	ldrh	r2, [r2, #44]	@ 0x2c
    (uint16_t)initPrm->cm.cp.tBoost|
 80037a2:	4313      	orrs	r3, r2
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG1,
 80037a4:	461a      	mov	r2, r3
 80037a6:	79fb      	ldrb	r3, [r7, #7]
 80037a8:	2118      	movs	r1, #24
 80037aa:	4618      	mov	r0, r3
 80037ac:	f7fe fec0 	bl	8002530 <Powerstep01_CmdSetParam>
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG2,
    (uint16_t)initPrm->cm.cp.tBlank|
 80037b0:	683b      	ldr	r3, [r7, #0]
 80037b2:	f893 202e 	ldrb.w	r2, [r3, #46]	@ 0x2e
    (uint16_t)initPrm->cm.cp.tdt);  
 80037b6:	683b      	ldr	r3, [r7, #0]
 80037b8:	f893 302f 	ldrb.w	r3, [r3, #47]	@ 0x2f
  Powerstep01_CmdSetParam(deviceId, POWERSTEP01_GATECFG2,
 80037bc:	4313      	orrs	r3, r2
 80037be:	b2db      	uxtb	r3, r3
 80037c0:	461a      	mov	r2, r3
 80037c2:	79fb      	ldrb	r3, [r7, #7]
 80037c4:	2119      	movs	r1, #25
 80037c6:	4618      	mov	r0, r3
 80037c8:	f7fe feb2 	bl	8002530 <Powerstep01_CmdSetParam>
  if (initPrm->cm.cp.cmVmSelection == POWERSTEP01_CM_VM_VOLTAGE)
 80037cc:	683b      	ldr	r3, [r7, #0]
 80037ce:	781b      	ldrb	r3, [r3, #0]
 80037d0:	2b00      	cmp	r3, #0
 80037d2:	f040 80b6 	bne.w	8003942 <Powerstep01_SetDeviceParamsToGivenValues+0x2da>
  {
    //Voltage mode
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
      Powerstep01_IntSpd_Steps_s_to_RegVal(
 80037d6:	683b      	ldr	r3, [r7, #0]
 80037d8:	edd3 7a10 	vldr	s15, [r3, #64]	@ 0x40
 80037dc:	eeb0 0a67 	vmov.f32	s0, s15
 80037e0:	f000 f9fe 	bl	8003be0 <Powerstep01_IntSpd_Steps_s_to_RegVal>
 80037e4:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_INT_SPD,
 80037e6:	461a      	mov	r2, r3
 80037e8:	79fb      	ldrb	r3, [r7, #7]
 80037ea:	210d      	movs	r1, #13
 80037ec:	4618      	mov	r0, r3
 80037ee:	f7fe fe9f 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.intersectSpeed));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
      Powerstep01_KTherm_Comp_to_RegVal(
 80037f2:	683b      	ldr	r3, [r7, #0]
 80037f4:	edd3 7a14 	vldr	s15, [r3, #80]	@ 0x50
 80037f8:	eeb0 0a67 	vmov.f32	s0, s15
 80037fc:	f000 fa22 	bl	8003c44 <Powerstep01_KTherm_Comp_to_RegVal>
 8003800:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_K_THERM,
 8003802:	461a      	mov	r2, r3
 8003804:	79fb      	ldrb	r3, [r7, #7]
 8003806:	2111      	movs	r1, #17
 8003808:	4618      	mov	r0, r3
 800380a:	f7fe fe91 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.thermalCompensationFactor)); 
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
      Powerstep01_StallOcd_Th_to_RegVal(
 800380e:	683b      	ldr	r3, [r7, #0]
 8003810:	edd3 7a15 	vldr	s15, [r3, #84]	@ 0x54
 8003814:	eeb0 0a67 	vmov.f32	s0, s15
 8003818:	f000 fafc 	bl	8003e14 <Powerstep01_StallOcd_Th_to_RegVal>
 800381c:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_STALL_TH,
 800381e:	461a      	mov	r2, r3
 8003820:	79fb      	ldrb	r3, [r7, #7]
 8003822:	2114      	movs	r1, #20
 8003824:	4618      	mov	r0, r3
 8003826:	f7fe fe83 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.stallThreshold));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
      Powerstep01_Kval_Perc_to_RegVal(
 800382a:	683b      	ldr	r3, [r7, #0]
 800382c:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8003830:	eeb0 0a67 	vmov.f32	s0, s15
 8003834:	f000 fa42 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 8003838:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_HOLD,
 800383a:	461a      	mov	r2, r3
 800383c:	79fb      	ldrb	r3, [r7, #7]
 800383e:	2109      	movs	r1, #9
 8003840:	4618      	mov	r0, r3
 8003842:	f7fe fe75 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalHold));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
      Powerstep01_Kval_Perc_to_RegVal(
 8003846:	683b      	ldr	r3, [r7, #0]
 8003848:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 800384c:	eeb0 0a67 	vmov.f32	s0, s15
 8003850:	f000 fa34 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 8003854:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_RUN,
 8003856:	461a      	mov	r2, r3
 8003858:	79fb      	ldrb	r3, [r7, #7]
 800385a:	210a      	movs	r1, #10
 800385c:	4618      	mov	r0, r3
 800385e:	f7fe fe67 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalRun));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
      Powerstep01_Kval_Perc_to_RegVal(
 8003862:	683b      	ldr	r3, [r7, #0]
 8003864:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8003868:	eeb0 0a67 	vmov.f32	s0, s15
 800386c:	f000 fa26 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 8003870:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_ACC,
 8003872:	461a      	mov	r2, r3
 8003874:	79fb      	ldrb	r3, [r7, #7]
 8003876:	210b      	movs	r1, #11
 8003878:	4618      	mov	r0, r3
 800387a:	f7fe fe59 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalAcc));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
      Powerstep01_Kval_Perc_to_RegVal(
 800387e:	683b      	ldr	r3, [r7, #0]
 8003880:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 8003884:	eeb0 0a67 	vmov.f32	s0, s15
 8003888:	f000 fa18 	bl	8003cbc <Powerstep01_Kval_Perc_to_RegVal>
 800388c:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_KVAL_DEC,
 800388e:	461a      	mov	r2, r3
 8003890:	79fb      	ldrb	r3, [r7, #7]
 8003892:	210c      	movs	r1, #12
 8003894:	4618      	mov	r0, r3
 8003896:	f7fe fe4b 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.kvalDec));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
      Powerstep01_BEMFslope_Perc_to_RegVal(
 800389a:	683b      	ldr	r3, [r7, #0]
 800389c:	edd3 7a11 	vldr	s15, [r3, #68]	@ 0x44
 80038a0:	eeb0 0a67 	vmov.f32	s0, s15
 80038a4:	f000 f934 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 80038a8:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_ST_SLP,
 80038aa:	461a      	mov	r2, r3
 80038ac:	79fb      	ldrb	r3, [r7, #7]
 80038ae:	210e      	movs	r1, #14
 80038b0:	4618      	mov	r0, r3
 80038b2:	f7fe fe3d 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.startSlope));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
      Powerstep01_BEMFslope_Perc_to_RegVal(
 80038b6:	683b      	ldr	r3, [r7, #0]
 80038b8:	edd3 7a12 	vldr	s15, [r3, #72]	@ 0x48
 80038bc:	eeb0 0a67 	vmov.f32	s0, s15
 80038c0:	f000 f926 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 80038c4:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_ACC,
 80038c6:	461a      	mov	r2, r3
 80038c8:	79fb      	ldrb	r3, [r7, #7]
 80038ca:	210f      	movs	r1, #15
 80038cc:	4618      	mov	r0, r3
 80038ce:	f7fe fe2f 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.accelerationFinalSlope));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
      Powerstep01_BEMFslope_Perc_to_RegVal(
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	edd3 7a13 	vldr	s15, [r3, #76]	@ 0x4c
 80038d8:	eeb0 0a67 	vmov.f32	s0, s15
 80038dc:	f000 f918 	bl	8003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>
 80038e0:	4603      	mov	r3, r0
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_FN_SLP_DEC,
 80038e2:	461a      	mov	r2, r3
 80038e4:	79fb      	ldrb	r3, [r7, #7]
 80038e6:	2110      	movs	r1, #16
 80038e8:	4618      	mov	r0, r3
 80038ea:	f7fe fe21 	bl	8002530 <Powerstep01_CmdSetParam>
        initPrm->vm.decelerationFinalSlope));
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
      (uint16_t)initPrm->vm.oscClkSel| 
 80038ee:	683b      	ldr	r3, [r7, #0]
 80038f0:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
      (uint16_t)initPrm->vm.swMode | 
 80038f4:	683b      	ldr	r3, [r7, #0]
 80038f6:	f893 3059 	ldrb.w	r3, [r3, #89]	@ 0x59
      (uint16_t)initPrm->vm.enVsComp| 
 80038fa:	4313      	orrs	r3, r2
 80038fc:	b2da      	uxtb	r2, r3
 80038fe:	683b      	ldr	r3, [r7, #0]
 8003900:	f893 305a 	ldrb.w	r3, [r3, #90]	@ 0x5a
 8003904:	4313      	orrs	r3, r2
 8003906:	b2da      	uxtb	r2, r3
      (uint16_t)initPrm->vm.ocSd| 
 8003908:	683b      	ldr	r3, [r7, #0]
 800390a:	f893 305b 	ldrb.w	r3, [r3, #91]	@ 0x5b
      (uint16_t)initPrm->vm.enVsComp| 
 800390e:	4313      	orrs	r3, r2
 8003910:	b2db      	uxtb	r3, r3
 8003912:	461a      	mov	r2, r3
      (uint16_t)initPrm->vm.uvloVal| 
 8003914:	683b      	ldr	r3, [r7, #0]
 8003916:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
      (uint16_t)initPrm->vm.ocSd| 
 800391a:	4313      	orrs	r3, r2
      (uint16_t)initPrm->vm.vccVal| 
 800391c:	683a      	ldr	r2, [r7, #0]
 800391e:	f8b2 205e 	ldrh.w	r2, [r2, #94]	@ 0x5e
      (uint16_t)initPrm->vm.uvloVal| 
 8003922:	4313      	orrs	r3, r2
      (uint16_t)initPrm->vm.fPwmInt| 
 8003924:	683a      	ldr	r2, [r7, #0]
 8003926:	f8b2 2060 	ldrh.w	r2, [r2, #96]	@ 0x60
      (uint16_t)initPrm->vm.vccVal| 
 800392a:	4313      	orrs	r3, r2
      (uint16_t)initPrm->vm.fPwmDec);
 800392c:	683a      	ldr	r2, [r7, #0]
 800392e:	f8b2 2062 	ldrh.w	r2, [r2, #98]	@ 0x62
      (uint16_t)initPrm->vm.fPwmInt| 
 8003932:	4313      	orrs	r3, r2
    Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 8003934:	461a      	mov	r2, r3
 8003936:	79fb      	ldrb	r3, [r7, #7]
 8003938:	211a      	movs	r1, #26
 800393a:	4618      	mov	r0, r3
 800393c:	f7fe fdf8 	bl	8002530 <Powerstep01_CmdSetParam>
          (uint16_t)initPrm->cm.uvloVal| 
          (uint16_t)initPrm->cm.vccVal|
          (uint16_t)initPrm->cm.tsw|
          (uint16_t)initPrm->cm.predEn);
  }
}
 8003940:	e08a      	b.n	8003a58 <Powerstep01_SetDeviceParamsToGivenValues+0x3f0>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 8003942:	683b      	ldr	r3, [r7, #0]
 8003944:	edd3 7a0c 	vldr	s15, [r3, #48]	@ 0x30
 8003948:	eeb0 0a67 	vmov.f32	s0, s15
 800394c:	f000 fa9e 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 8003950:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_HOLD,
 8003952:	461a      	mov	r2, r3
 8003954:	79fb      	ldrb	r3, [r7, #7]
 8003956:	2109      	movs	r1, #9
 8003958:	4618      	mov	r0, r3
 800395a:	f7fe fde9 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 800395e:	683b      	ldr	r3, [r7, #0]
 8003960:	edd3 7a0d 	vldr	s15, [r3, #52]	@ 0x34
 8003964:	eeb0 0a67 	vmov.f32	s0, s15
 8003968:	f000 fa90 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 800396c:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_RUN,
 800396e:	461a      	mov	r2, r3
 8003970:	79fb      	ldrb	r3, [r7, #7]
 8003972:	210a      	movs	r1, #10
 8003974:	4618      	mov	r0, r3
 8003976:	f7fe fddb 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 800397a:	683b      	ldr	r3, [r7, #0]
 800397c:	edd3 7a0e 	vldr	s15, [r3, #56]	@ 0x38
 8003980:	eeb0 0a67 	vmov.f32	s0, s15
 8003984:	f000 fa82 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 8003988:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_ACC,
 800398a:	461a      	mov	r2, r3
 800398c:	79fb      	ldrb	r3, [r7, #7]
 800398e:	210b      	movs	r1, #11
 8003990:	4618      	mov	r0, r3
 8003992:	f7fe fdcd 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tval_RefVoltage_to_RegVal(
 8003996:	683b      	ldr	r3, [r7, #0]
 8003998:	edd3 7a0f 	vldr	s15, [r3, #60]	@ 0x3c
 800399c:	eeb0 0a67 	vmov.f32	s0, s15
 80039a0:	f000 fa74 	bl	8003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>
 80039a4:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TVAL_DEC,
 80039a6:	461a      	mov	r2, r3
 80039a8:	79fb      	ldrb	r3, [r7, #7]
 80039aa:	210c      	movs	r1, #12
 80039ac:	4618      	mov	r0, r3
 80039ae:	f7fe fdbf 	bl	8002530 <Powerstep01_CmdSetParam>
          (uint8_t)initPrm->cm.toffFast|
 80039b2:	683b      	ldr	r3, [r7, #0]
 80039b4:	f893 2040 	ldrb.w	r2, [r3, #64]	@ 0x40
          (uint8_t)initPrm->cm.fastStep);
 80039b8:	683b      	ldr	r3, [r7, #0]
 80039ba:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_T_FAST,
 80039be:	4313      	orrs	r3, r2
 80039c0:	b2db      	uxtb	r3, r3
 80039c2:	461a      	mov	r2, r3
 80039c4:	79fb      	ldrb	r3, [r7, #7]
 80039c6:	210e      	movs	r1, #14
 80039c8:	4618      	mov	r0, r3
 80039ca:	f7fe fdb1 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80039ce:	683b      	ldr	r3, [r7, #0]
 80039d0:	edd3 7a11 	vldr	s15, [r3, #68]	@ 0x44
 80039d4:	eeb0 0a67 	vmov.f32	s0, s15
 80039d8:	f000 fa94 	bl	8003f04 <Powerstep01_Tmin_Time_to_RegVal>
 80039dc:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TON_MIN,
 80039de:	461a      	mov	r2, r3
 80039e0:	79fb      	ldrb	r3, [r7, #7]
 80039e2:	210f      	movs	r1, #15
 80039e4:	4618      	mov	r0, r3
 80039e6:	f7fe fda3 	bl	8002530 <Powerstep01_CmdSetParam>
          Powerstep01_Tmin_Time_to_RegVal(
 80039ea:	683b      	ldr	r3, [r7, #0]
 80039ec:	edd3 7a12 	vldr	s15, [r3, #72]	@ 0x48
 80039f0:	eeb0 0a67 	vmov.f32	s0, s15
 80039f4:	f000 fa86 	bl	8003f04 <Powerstep01_Tmin_Time_to_RegVal>
 80039f8:	4603      	mov	r3, r0
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_TOFF_MIN,
 80039fa:	461a      	mov	r2, r3
 80039fc:	79fb      	ldrb	r3, [r7, #7]
 80039fe:	2110      	movs	r1, #16
 8003a00:	4618      	mov	r0, r3
 8003a02:	f7fe fd95 	bl	8002530 <Powerstep01_CmdSetParam>
          (uint16_t)initPrm->cm.oscClkSel| 
 8003a06:	683b      	ldr	r3, [r7, #0]
 8003a08:	f893 204c 	ldrb.w	r2, [r3, #76]	@ 0x4c
          (uint16_t)initPrm->cm.swMode| 
 8003a0c:	683b      	ldr	r3, [r7, #0]
 8003a0e:	f893 304d 	ldrb.w	r3, [r3, #77]	@ 0x4d
          (uint16_t)initPrm->cm.tqReg| 
 8003a12:	4313      	orrs	r3, r2
 8003a14:	b2da      	uxtb	r2, r3
 8003a16:	683b      	ldr	r3, [r7, #0]
 8003a18:	f893 304e 	ldrb.w	r3, [r3, #78]	@ 0x4e
 8003a1c:	4313      	orrs	r3, r2
 8003a1e:	b2da      	uxtb	r2, r3
          (uint16_t)initPrm->cm.ocSd| 
 8003a20:	683b      	ldr	r3, [r7, #0]
 8003a22:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
          (uint16_t)initPrm->cm.tqReg| 
 8003a26:	4313      	orrs	r3, r2
 8003a28:	b2db      	uxtb	r3, r3
 8003a2a:	461a      	mov	r2, r3
          (uint16_t)initPrm->cm.uvloVal| 
 8003a2c:	683b      	ldr	r3, [r7, #0]
 8003a2e:	f8b3 3052 	ldrh.w	r3, [r3, #82]	@ 0x52
          (uint16_t)initPrm->cm.ocSd| 
 8003a32:	4313      	orrs	r3, r2
          (uint16_t)initPrm->cm.vccVal|
 8003a34:	683a      	ldr	r2, [r7, #0]
 8003a36:	f8b2 2054 	ldrh.w	r2, [r2, #84]	@ 0x54
          (uint16_t)initPrm->cm.uvloVal| 
 8003a3a:	4313      	orrs	r3, r2
          (uint16_t)initPrm->cm.tsw|
 8003a3c:	683a      	ldr	r2, [r7, #0]
 8003a3e:	f8b2 2056 	ldrh.w	r2, [r2, #86]	@ 0x56
          (uint16_t)initPrm->cm.vccVal|
 8003a42:	4313      	orrs	r3, r2
          (uint16_t)initPrm->cm.predEn);
 8003a44:	683a      	ldr	r2, [r7, #0]
 8003a46:	f8b2 2058 	ldrh.w	r2, [r2, #88]	@ 0x58
          (uint16_t)initPrm->cm.tsw|
 8003a4a:	4313      	orrs	r3, r2
        Powerstep01_CmdSetParam(deviceId, POWERSTEP01_CONFIG,
 8003a4c:	461a      	mov	r2, r3
 8003a4e:	79fb      	ldrb	r3, [r7, #7]
 8003a50:	211a      	movs	r1, #26
 8003a52:	4618      	mov	r0, r3
 8003a54:	f7fe fd6c 	bl	8002530 <Powerstep01_CmdSetParam>
}
 8003a58:	bf00      	nop
 8003a5a:	370c      	adds	r7, #12
 8003a5c:	46bd      	mov	sp, r7
 8003a5e:	bd90      	pop	{r4, r7, pc}

08003a60 <Powerstep01_WriteBytes>:
 * @param[in] pByteToTransmit pointer to the byte to transmit
 * @param[in] pReceivedByte pointer to the received byte
 * @retval None
 *********************************************************/
void Powerstep01_WriteBytes(uint8_t *pByteToTransmit, uint8_t *pReceivedByte)
{
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b082      	sub	sp, #8
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	6078      	str	r0, [r7, #4]
 8003a68:	6039      	str	r1, [r7, #0]
  if (Powerstep01_Board_SpiWriteBytes(pByteToTransmit, pReceivedByte, numberOfDevices) != 0)
 8003a6a:	4b0d      	ldr	r3, [pc, #52]	@ (8003aa0 <Powerstep01_WriteBytes+0x40>)
 8003a6c:	781b      	ldrb	r3, [r3, #0]
 8003a6e:	b2db      	uxtb	r3, r3
 8003a70:	461a      	mov	r2, r3
 8003a72:	6839      	ldr	r1, [r7, #0]
 8003a74:	6878      	ldr	r0, [r7, #4]
 8003a76:	f000 fd9b 	bl	80045b0 <Powerstep01_Board_SpiWriteBytes>
 8003a7a:	4603      	mov	r3, r0
 8003a7c:	2b00      	cmp	r3, #0
 8003a7e:	d003      	beq.n	8003a88 <Powerstep01_WriteBytes+0x28>
  {
    Powerstep01_ErrorHandler(POWERSTEP01_ERROR_1);
 8003a80:	f24b 0001 	movw	r0, #45057	@ 0xb001
 8003a84:	f7ff fbae 	bl	80031e4 <Powerstep01_ErrorHandler>
  }
  
  if (isrFlag)
 8003a88:	4b06      	ldr	r3, [pc, #24]	@ (8003aa4 <Powerstep01_WriteBytes+0x44>)
 8003a8a:	781b      	ldrb	r3, [r3, #0]
 8003a8c:	b2db      	uxtb	r3, r3
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d002      	beq.n	8003a98 <Powerstep01_WriteBytes+0x38>
  {
    spiPreemtionByIsr = TRUE;
 8003a92:	4b05      	ldr	r3, [pc, #20]	@ (8003aa8 <Powerstep01_WriteBytes+0x48>)
 8003a94:	2201      	movs	r2, #1
 8003a96:	701a      	strb	r2, [r3, #0]
  }
}                     
 8003a98:	bf00      	nop
 8003a9a:	3708      	adds	r7, #8
 8003a9c:	46bd      	mov	sp, r7
 8003a9e:	bd80      	pop	{r7, pc}
 8003aa0:	200008a4 	.word	0x200008a4
 8003aa4:	200008b1 	.word	0x200008b1
 8003aa8:	200008b0 	.word	0x200008b0

08003aac <Powerstep01_AccDec_Steps_s2_to_RegVal>:
 * @param[in] steps_s2 the acceleration or deceleration as
 * steps/s^2, range 14.55 to 59590 steps/s^2
 * @retval The acceleration or deceleration as steps/tick^2
 **********************************************************/
inline uint16_t Powerstep01_AccDec_Steps_s2_to_RegVal(float steps_s2)
{
 8003aac:	b480      	push	{r7}
 8003aae:	b083      	sub	sp, #12
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s2)*0.068719476736f)+0.5f));
 8003ab6:	edd7 7a01 	vldr	s15, [r7, #4]
 8003aba:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8003ae0 <Powerstep01_AccDec_Steps_s2_to_RegVal+0x34>
 8003abe:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ac2:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003ac6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003aca:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003ace:	ee17 3a90 	vmov	r3, s15
 8003ad2:	b29b      	uxth	r3, r3
}
 8003ad4:	4618      	mov	r0, r3
 8003ad6:	370c      	adds	r7, #12
 8003ad8:	46bd      	mov	sp, r7
 8003ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ade:	4770      	bx	lr
 8003ae0:	3d8cbccc 	.word	0x3d8cbccc

08003ae4 <Powerstep01_AccDec_RegVal_to_Steps_s2>:
 * @brief Convert the ACC or DEC register value into step/s^2
 * @param[in] regVal The ACC or DEC register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_AccDec_RegVal_to_Steps_s2(uint32_t regVal)
{
 8003ae4:	b480      	push	{r7}
 8003ae6:	b083      	sub	sp, #12
 8003ae8:	af00      	add	r7, sp, #0
 8003aea:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*14.5519152283f);
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	ee07 3a90 	vmov	s15, r3
 8003af2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003af6:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003b0c <Powerstep01_AccDec_RegVal_to_Steps_s2+0x28>
 8003afa:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003afe:	eeb0 0a67 	vmov.f32	s0, s15
 8003b02:	370c      	adds	r7, #12
 8003b04:	46bd      	mov	sp, r7
 8003b06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b0a:	4770      	bx	lr
 8003b0c:	4168d4a5 	.word	0x4168d4a5

08003b10 <Powerstep01_BEMFslope_Perc_to_RegVal>:
 * @param[in] percentage BEMF compensation slope percentage,
 * range 0 to 0.4% (0.004) s/step
 * @retval value for ST_SLP, FN_SLP_ACC or FN_SLP_DEC register
 **********************************************************/
inline uint8_t Powerstep01_BEMFslope_Perc_to_RegVal(float percentage)
{
 8003b10:	b480      	push	{r7}
 8003b12:	b083      	sub	sp, #12
 8003b14:	af00      	add	r7, sp, #0
 8003b16:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)(((float)(percentage)*637.5f)+0.5f));
 8003b1a:	edd7 7a01 	vldr	s15, [r7, #4]
 8003b1e:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 8003b48 <Powerstep01_BEMFslope_Perc_to_RegVal+0x38>
 8003b22:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b26:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003b2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003b2e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b32:	edc7 7a00 	vstr	s15, [r7]
 8003b36:	783b      	ldrb	r3, [r7, #0]
 8003b38:	b2db      	uxtb	r3, r3
}
 8003b3a:	4618      	mov	r0, r3
 8003b3c:	370c      	adds	r7, #12
 8003b3e:	46bd      	mov	sp, r7
 8003b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b44:	4770      	bx	lr
 8003b46:	bf00      	nop
 8003b48:	441f6000 	.word	0x441f6000

08003b4c <Powerstep01_BEMFslope_RegVal_to_Perc>:
 * @param[in] regVal The ST_SLP, FN_SLP_ACC or FN_SLP_DEC
 * register value
 * @retval BEMF compensation slope percentage
 **********************************************************/
inline float Powerstep01_BEMFslope_RegVal_to_Perc(uint32_t regVal)
{
 8003b4c:	b480      	push	{r7}
 8003b4e:	b083      	sub	sp, #12
 8003b50:	af00      	add	r7, sp, #0
 8003b52:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.00156862745098f);
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	ee07 3a90 	vmov	s15, r3
 8003b5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003b5e:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003b74 <Powerstep01_BEMFslope_RegVal_to_Perc+0x28>
 8003b62:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003b66:	eeb0 0a67 	vmov.f32	s0, s15
 8003b6a:	370c      	adds	r7, #12
 8003b6c:	46bd      	mov	sp, r7
 8003b6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b72:	4770      	bx	lr
 8003b74:	3acd9a67 	.word	0x3acd9a67

08003b78 <Powerstep01_FSSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 15.25 to 15610 steps/s
 * @retval The speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_FSSpd_Steps_s_to_RegVal(float steps_s)
{
 8003b78:	b480      	push	{r7}
 8003b7a:	b083      	sub	sp, #12
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)((float)(steps_s)*0.065536f));
 8003b82:	edd7 7a01 	vldr	s15, [r7, #4]
 8003b86:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8003ba4 <Powerstep01_FSSpd_Steps_s_to_RegVal+0x2c>
 8003b8a:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003b8e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003b92:	ee17 3a90 	vmov	r3, s15
 8003b96:	b29b      	uxth	r3, r3
}
 8003b98:	4618      	mov	r0, r3
 8003b9a:	370c      	adds	r7, #12
 8003b9c:	46bd      	mov	sp, r7
 8003b9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ba2:	4770      	bx	lr
 8003ba4:	3d8637bd 	.word	0x3d8637bd

08003ba8 <Powerstep01_FSSpd_RegVal_to_Steps_s>:
 * @brief Convert the FS_SPD register value into step/s
 * @param[in] regVal The FS_SPD register value
 * @retval The full Step speed as steps/s
 **********************************************************/
inline float Powerstep01_FSSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003ba8:	b480      	push	{r7}
 8003baa:	b083      	sub	sp, #12
 8003bac:	af00      	add	r7, sp, #0
 8003bae:	6078      	str	r0, [r7, #4]
  return (((float)regVal+0.999f)*15.258789f);
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	ee07 3a90 	vmov	s15, r3
 8003bb6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003bba:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8003bd8 <Powerstep01_FSSpd_RegVal_to_Steps_s+0x30>
 8003bbe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003bc2:	ed9f 7a06 	vldr	s14, [pc, #24]	@ 8003bdc <Powerstep01_FSSpd_RegVal_to_Steps_s+0x34>
 8003bc6:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003bca:	eeb0 0a67 	vmov.f32	s0, s15
 8003bce:	370c      	adds	r7, #12
 8003bd0:	46bd      	mov	sp, r7
 8003bd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bd6:	4770      	bx	lr
 8003bd8:	3f7fbe77 	.word	0x3f7fbe77
 8003bdc:	41742400 	.word	0x41742400

08003be0 <Powerstep01_IntSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 0 to 976.5 steps/s
 * @retval The intersect speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_IntSpd_Steps_s_to_RegVal(float steps_s)
{
 8003be0:	b480      	push	{r7}
 8003be2:	b083      	sub	sp, #12
 8003be4:	af00      	add	r7, sp, #0
 8003be6:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s)*16.777216f)+0.5f));
 8003bea:	edd7 7a01 	vldr	s15, [r7, #4]
 8003bee:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8003c14 <Powerstep01_IntSpd_Steps_s_to_RegVal+0x34>
 8003bf2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003bf6:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003bfa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003bfe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c02:	ee17 3a90 	vmov	r3, s15
 8003c06:	b29b      	uxth	r3, r3
}
 8003c08:	4618      	mov	r0, r3
 8003c0a:	370c      	adds	r7, #12
 8003c0c:	46bd      	mov	sp, r7
 8003c0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c12:	4770      	bx	lr
 8003c14:	418637bd 	.word	0x418637bd

08003c18 <Powerstep01_IntSpd_RegVal_to_Steps_s>:
 * @brief Convert the INT_SPEED register value into step/s
 * @param[in] regVal The INT_SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_IntSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003c18:	b480      	push	{r7}
 8003c1a:	b083      	sub	sp, #12
 8003c1c:	af00      	add	r7, sp, #0
 8003c1e:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.0596045f);
 8003c20:	687b      	ldr	r3, [r7, #4]
 8003c22:	ee07 3a90 	vmov	s15, r3
 8003c26:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003c2a:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003c40 <Powerstep01_IntSpd_RegVal_to_Steps_s+0x28>
 8003c2e:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003c32:	eeb0 0a67 	vmov.f32	s0, s15
 8003c36:	370c      	adds	r7, #12
 8003c38:	46bd      	mov	sp, r7
 8003c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c3e:	4770      	bx	lr
 8003c40:	3d7423d9 	.word	0x3d7423d9

08003c44 <Powerstep01_KTherm_Comp_to_RegVal>:
 * @param[in] compFactor the float formatted thermal 
 * compensation factor, range 1 to 1.46875
 * @retval value for K_THERM register
 **********************************************************/
inline uint8_t Powerstep01_KTherm_Comp_to_RegVal(float compFactor)
{
 8003c44:	b480      	push	{r7}
 8003c46:	b083      	sub	sp, #12
 8003c48:	af00      	add	r7, sp, #0
 8003c4a:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(compFactor)-1.0f)*32.0f)+0.5f));
 8003c4e:	edd7 7a01 	vldr	s15, [r7, #4]
 8003c52:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8003c56:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003c5a:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 8003c84 <Powerstep01_KTherm_Comp_to_RegVal+0x40>
 8003c5e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003c62:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003c66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003c6a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003c6e:	edc7 7a00 	vstr	s15, [r7]
 8003c72:	783b      	ldrb	r3, [r7, #0]
 8003c74:	b2db      	uxtb	r3, r3
}
 8003c76:	4618      	mov	r0, r3
 8003c78:	370c      	adds	r7, #12
 8003c7a:	46bd      	mov	sp, r7
 8003c7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c80:	4770      	bx	lr
 8003c82:	bf00      	nop
 8003c84:	42000000 	.word	0x42000000

08003c88 <Powerstep01_KTherm_RegVal_to_Comp>:
 * formatted thermal compensation factor
 * @param[in] regVal The K_THERM register value
 * @retval The float formatted thermal compensation factor
 **********************************************************/
inline float Powerstep01_KTherm_RegVal_to_Comp(uint32_t regVal)
{
 8003c88:	b480      	push	{r7}
 8003c8a:	b083      	sub	sp, #12
 8003c8c:	af00      	add	r7, sp, #0
 8003c8e:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.03125f+1);
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	ee07 3a90 	vmov	s15, r3
 8003c96:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003c9a:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 8003cb8 <Powerstep01_KTherm_RegVal_to_Comp+0x30>
 8003c9e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003ca2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8003ca6:	ee77 7a87 	vadd.f32	s15, s15, s14
}
 8003caa:	eeb0 0a67 	vmov.f32	s0, s15
 8003cae:	370c      	adds	r7, #12
 8003cb0:	46bd      	mov	sp, r7
 8003cb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cb6:	4770      	bx	lr
 8003cb8:	3d000000 	.word	0x3d000000

08003cbc <Powerstep01_Kval_Perc_to_RegVal>:
 * @retval value for KVAL_RUN, KVAL_HOLD, KVAL_ACC or
 * KVAL_DEC register
 * @note The voltage applied is sinusoidal
 **********************************************************/
inline uint8_t Powerstep01_Kval_Perc_to_RegVal(float percentage)
{
 8003cbc:	b480      	push	{r7}
 8003cbe:	b083      	sub	sp, #12
 8003cc0:	af00      	add	r7, sp, #0
 8003cc2:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)(((float)(percentage)*2.56f)+0.5f));
 8003cc6:	edd7 7a01 	vldr	s15, [r7, #4]
 8003cca:	ed9f 7a0a 	vldr	s14, [pc, #40]	@ 8003cf4 <Powerstep01_Kval_Perc_to_RegVal+0x38>
 8003cce:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003cd2:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003cd6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003cda:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003cde:	edc7 7a00 	vstr	s15, [r7]
 8003ce2:	783b      	ldrb	r3, [r7, #0]
 8003ce4:	b2db      	uxtb	r3, r3
}
 8003ce6:	4618      	mov	r0, r3
 8003ce8:	370c      	adds	r7, #12
 8003cea:	46bd      	mov	sp, r7
 8003cec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cf0:	4770      	bx	lr
 8003cf2:	bf00      	nop
 8003cf4:	4023d70a 	.word	0x4023d70a

08003cf8 <Powerstep01_Kval_RegVal_to_Perc>:
 * @retval percentage of the power supply voltage applied to
 * the motor windings
 * @note The voltage applied is sinusoidal
 **********************************************************/
inline float Powerstep01_Kval_RegVal_to_Perc(uint32_t regVal)
{
 8003cf8:	b480      	push	{r7}
 8003cfa:	b083      	sub	sp, #12
 8003cfc:	af00      	add	r7, sp, #0
 8003cfe:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.390625f);
 8003d00:	687b      	ldr	r3, [r7, #4]
 8003d02:	ee07 3a90 	vmov	s15, r3
 8003d06:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003d0a:	eeb5 7a09 	vmov.f32	s14, #89	@ 0x3ec80000  0.3906250
 8003d0e:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003d12:	eeb0 0a67 	vmov.f32	s0, s15
 8003d16:	370c      	adds	r7, #12
 8003d18:	46bd      	mov	sp, r7
 8003d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d1e:	4770      	bx	lr

08003d20 <Powerstep01_MaxSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 15.25 to 15610 steps/s
 * @retval The speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_MaxSpd_Steps_s_to_RegVal(float steps_s)
{
 8003d20:	b480      	push	{r7}
 8003d22:	b083      	sub	sp, #12
 8003d24:	af00      	add	r7, sp, #0
 8003d26:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s)*0.065536f)+0.5f));
 8003d2a:	edd7 7a01 	vldr	s15, [r7, #4]
 8003d2e:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8003d54 <Powerstep01_MaxSpd_Steps_s_to_RegVal+0x34>
 8003d32:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d36:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003d3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003d3e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003d42:	ee17 3a90 	vmov	r3, s15
 8003d46:	b29b      	uxth	r3, r3
}
 8003d48:	4618      	mov	r0, r3
 8003d4a:	370c      	adds	r7, #12
 8003d4c:	46bd      	mov	sp, r7
 8003d4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d52:	4770      	bx	lr
 8003d54:	3d8637bd 	.word	0x3d8637bd

08003d58 <Powerstep01_MaxSpd_RegVal_to_Steps_s>:
 * @brief Convert the MAX_SPEED register value into step/s
 * @param[in] regVal The MAX_SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_MaxSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003d58:	b480      	push	{r7}
 8003d5a:	b083      	sub	sp, #12
 8003d5c:	af00      	add	r7, sp, #0
 8003d5e:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*15.258789f);
 8003d60:	687b      	ldr	r3, [r7, #4]
 8003d62:	ee07 3a90 	vmov	s15, r3
 8003d66:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003d6a:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003d80 <Powerstep01_MaxSpd_RegVal_to_Steps_s+0x28>
 8003d6e:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003d72:	eeb0 0a67 	vmov.f32	s0, s15
 8003d76:	370c      	adds	r7, #12
 8003d78:	46bd      	mov	sp, r7
 8003d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d7e:	4770      	bx	lr
 8003d80:	41742400 	.word	0x41742400

08003d84 <Powerstep01_MinSpd_Steps_s_to_RegVal>:
 * register value
 * @param[in] steps_s the speed as steps/s, range 0 to 976.3 steps/s
 * @retval The speed as steps/tick
 **********************************************************/
inline uint16_t Powerstep01_MinSpd_Steps_s_to_RegVal(float steps_s)
{
 8003d84:	b480      	push	{r7}
 8003d86:	b083      	sub	sp, #12
 8003d88:	af00      	add	r7, sp, #0
 8003d8a:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint16_t)(((float)(steps_s)*4.194304f)+0.5f));
 8003d8e:	edd7 7a01 	vldr	s15, [r7, #4]
 8003d92:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8003db8 <Powerstep01_MinSpd_Steps_s_to_RegVal+0x34>
 8003d96:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003d9a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003d9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003da2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003da6:	ee17 3a90 	vmov	r3, s15
 8003daa:	b29b      	uxth	r3, r3
}
 8003dac:	4618      	mov	r0, r3
 8003dae:	370c      	adds	r7, #12
 8003db0:	46bd      	mov	sp, r7
 8003db2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003db6:	4770      	bx	lr
 8003db8:	408637bd 	.word	0x408637bd

08003dbc <Powerstep01_MinSpd_RegVal_to_Steps_s>:
 * @brief Convert the MIN_SPEED register value into step/s
 * @param[in] regVal The MIN_SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_MinSpd_RegVal_to_Steps_s(uint32_t regVal)
{
 8003dbc:	b480      	push	{r7}
 8003dbe:	b083      	sub	sp, #12
 8003dc0:	af00      	add	r7, sp, #0
 8003dc2:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.238418579f);
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	ee07 3a90 	vmov	s15, r3
 8003dca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003dce:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003de4 <Powerstep01_MinSpd_RegVal_to_Steps_s+0x28>
 8003dd2:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003dd6:	eeb0 0a67 	vmov.f32	s0, s15
 8003dda:	370c      	adds	r7, #12
 8003ddc:	46bd      	mov	sp, r7
 8003dde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003de2:	4770      	bx	lr
 8003de4:	3e742400 	.word	0x3e742400

08003de8 <Powerstep01_Speed_RegVal_to_Steps_s>:
 * @brief Convert the SPEED register value into step/s
 * @param[in] regVal The SPEED register value
 * @retval The speed as steps/s
 **********************************************************/
inline float Powerstep01_Speed_RegVal_to_Steps_s(uint32_t regVal)
{
 8003de8:	b480      	push	{r7}
 8003dea:	b083      	sub	sp, #12
 8003dec:	af00      	add	r7, sp, #0
 8003dee:	6078      	str	r0, [r7, #4]
  return (((float)(regVal))*0.01490116119f);
 8003df0:	687b      	ldr	r3, [r7, #4]
 8003df2:	ee07 3a90 	vmov	s15, r3
 8003df6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003dfa:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003e10 <Powerstep01_Speed_RegVal_to_Steps_s+0x28>
 8003dfe:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003e02:	eeb0 0a67 	vmov.f32	s0, s15
 8003e06:	370c      	adds	r7, #12
 8003e08:	46bd      	mov	sp, r7
 8003e0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e0e:	4770      	bx	lr
 8003e10:	3c742400 	.word	0x3c742400

08003e14 <Powerstep01_StallOcd_Th_to_RegVal>:
 * values for STALL_TH or OCD_TH register
 * @param[in] mV voltage in mV, range 31.25mV to 1000mV
 * @retval value for STALL_TH or OCD_TH register
 **********************************************************/
inline uint8_t Powerstep01_StallOcd_Th_to_RegVal(float mV)
{
 8003e14:	b480      	push	{r7}
 8003e16:	b083      	sub	sp, #12
 8003e18:	af00      	add	r7, sp, #0
 8003e1a:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(mV)-31.25f)*0.032f)+0.5f));
 8003e1e:	edd7 7a01 	vldr	s15, [r7, #4]
 8003e22:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8003e54 <Powerstep01_StallOcd_Th_to_RegVal+0x40>
 8003e26:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003e2a:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8003e58 <Powerstep01_StallOcd_Th_to_RegVal+0x44>
 8003e2e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003e32:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003e36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003e3a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003e3e:	edc7 7a00 	vstr	s15, [r7]
 8003e42:	783b      	ldrb	r3, [r7, #0]
 8003e44:	b2db      	uxtb	r3, r3
}
 8003e46:	4618      	mov	r0, r3
 8003e48:	370c      	adds	r7, #12
 8003e4a:	46bd      	mov	sp, r7
 8003e4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e50:	4770      	bx	lr
 8003e52:	bf00      	nop
 8003e54:	41fa0000 	.word	0x41fa0000
 8003e58:	3d03126f 	.word	0x3d03126f

08003e5c <Powerstep01_StallOcd_RegVal_to_Th>:
 * to mV
 * @param[in] regVal The STALL_TH or OCD_TH register value
 * @retval voltage in mV
 **********************************************************/
inline float Powerstep01_StallOcd_RegVal_to_Th(uint32_t regVal)
{
 8003e5c:	b480      	push	{r7}
 8003e5e:	b083      	sub	sp, #12
 8003e60:	af00      	add	r7, sp, #0
 8003e62:	6078      	str	r0, [r7, #4]
  return (((float)(regVal+1))*31.25f);
 8003e64:	687b      	ldr	r3, [r7, #4]
 8003e66:	3301      	adds	r3, #1
 8003e68:	ee07 3a90 	vmov	s15, r3
 8003e6c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003e70:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003e88 <Powerstep01_StallOcd_RegVal_to_Th+0x2c>
 8003e74:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003e78:	eeb0 0a67 	vmov.f32	s0, s15
 8003e7c:	370c      	adds	r7, #12
 8003e7e:	46bd      	mov	sp, r7
 8003e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e84:	4770      	bx	lr
 8003e86:	bf00      	nop
 8003e88:	41fa0000 	.word	0x41fa0000

08003e8c <Powerstep01_Tval_RefVoltage_to_RegVal>:
 * TVAL_DEC register
 * @note The voltage corresponds to a peak output current
 * accross the external sense power resistor
 **********************************************************/
inline uint8_t Powerstep01_Tval_RefVoltage_to_RegVal(float voltage_mV)
{
 8003e8c:	b480      	push	{r7}
 8003e8e:	b083      	sub	sp, #12
 8003e90:	af00      	add	r7, sp, #0
 8003e92:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(voltage_mV)-7.8125f)*0.128f)+0.5f));
 8003e96:	edd7 7a01 	vldr	s15, [r7, #4]
 8003e9a:	ed9f 7a0c 	vldr	s14, [pc, #48]	@ 8003ecc <Powerstep01_Tval_RefVoltage_to_RegVal+0x40>
 8003e9e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003ea2:	ed9f 7a0b 	vldr	s14, [pc, #44]	@ 8003ed0 <Powerstep01_Tval_RefVoltage_to_RegVal+0x44>
 8003ea6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003eaa:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003eae:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003eb2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003eb6:	edc7 7a00 	vstr	s15, [r7]
 8003eba:	783b      	ldrb	r3, [r7, #0]
 8003ebc:	b2db      	uxtb	r3, r3
}
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	370c      	adds	r7, #12
 8003ec2:	46bd      	mov	sp, r7
 8003ec4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ec8:	4770      	bx	lr
 8003eca:	bf00      	nop
 8003ecc:	40fa0000 	.word	0x40fa0000
 8003ed0:	3e03126f 	.word	0x3e03126f

08003ed4 <Powerstep01_Tval_RegVal_to_RefVoltage>:
 * @retval voltage in mV
 * @note The voltage corresponds to a peak output current
 * accross the external sense power resistor
 **********************************************************/
inline float Powerstep01_Tval_RegVal_to_RefVoltage(uint32_t regVal)
{
 8003ed4:	b480      	push	{r7}
 8003ed6:	b083      	sub	sp, #12
 8003ed8:	af00      	add	r7, sp, #0
 8003eda:	6078      	str	r0, [r7, #4]
  return (((float)(regVal+1))*7.8125f);
 8003edc:	687b      	ldr	r3, [r7, #4]
 8003ede:	3301      	adds	r3, #1
 8003ee0:	ee07 3a90 	vmov	s15, r3
 8003ee4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003ee8:	ed9f 7a05 	vldr	s14, [pc, #20]	@ 8003f00 <Powerstep01_Tval_RegVal_to_RefVoltage+0x2c>
 8003eec:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003ef0:	eeb0 0a67 	vmov.f32	s0, s15
 8003ef4:	370c      	adds	r7, #12
 8003ef6:	46bd      	mov	sp, r7
 8003ef8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003efc:	4770      	bx	lr
 8003efe:	bf00      	nop
 8003f00:	40fa0000 	.word	0x40fa0000

08003f04 <Powerstep01_Tmin_Time_to_RegVal>:
 * @brief Convert time in us to values for TON_MIN register
 * @param[in] tmin_us time in us, range 0.5us to 64us
 * @retval value for TON_MIN register
 **********************************************************/
inline uint8_t Powerstep01_Tmin_Time_to_RegVal(float tmin_us)
{
 8003f04:	b480      	push	{r7}
 8003f06:	b083      	sub	sp, #12
 8003f08:	af00      	add	r7, sp, #0
 8003f0a:	ed87 0a01 	vstr	s0, [r7, #4]
  return ((uint8_t)((((float)(tmin_us)-0.5f)*2.0f)+0.5f));
 8003f0e:	edd7 7a01 	vldr	s15, [r7, #4]
 8003f12:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003f16:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003f1a:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8003f1e:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003f22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003f26:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8003f2a:	edc7 7a00 	vstr	s15, [r7]
 8003f2e:	783b      	ldrb	r3, [r7, #0]
 8003f30:	b2db      	uxtb	r3, r3
}
 8003f32:	4618      	mov	r0, r3
 8003f34:	370c      	adds	r7, #12
 8003f36:	46bd      	mov	sp, r7
 8003f38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f3c:	4770      	bx	lr

08003f3e <Powerstep01_Tmin_RegVal_to_Time>:
 * @brief Convert values for TON_MIN or TOFF_MIN register to time in us
 * @param[in] regVal The TON_MIN or TOFF_MIN register value
 * @retval time in us
 **********************************************************/
inline float Powerstep01_Tmin_RegVal_to_Time(uint32_t regVal)
{
 8003f3e:	b480      	push	{r7}
 8003f40:	b083      	sub	sp, #12
 8003f42:	af00      	add	r7, sp, #0
 8003f44:	6078      	str	r0, [r7, #4]
  return (((float)(regVal+1))*0.5f);
 8003f46:	687b      	ldr	r3, [r7, #4]
 8003f48:	3301      	adds	r3, #1
 8003f4a:	ee07 3a90 	vmov	s15, r3
 8003f4e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003f52:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8003f56:	ee67 7a87 	vmul.f32	s15, s15, s14
}
 8003f5a:	eeb0 0a67 	vmov.f32	s0, s15
 8003f5e:	370c      	adds	r7, #12
 8003f60:	46bd      	mov	sp, r7
 8003f62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f66:	4770      	bx	lr

08003f68 <I2Cx_MspInit>:
  * @brief  Initializes I2C MSP.
  * @param  i2c_handler : I2C handler
  * @retval None
  */
static void I2Cx_MspInit(I2C_HandleTypeDef *i2c_handler)
{
 8003f68:	b580      	push	{r7, lr}
 8003f6a:	b08c      	sub	sp, #48	@ 0x30
 8003f6c:	af00      	add	r7, sp, #0
 8003f6e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef  gpio_init_structure;
  
  if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 8003f70:	687b      	ldr	r3, [r7, #4]
 8003f72:	4a51      	ldr	r2, [pc, #324]	@ (80040b8 <I2Cx_MspInit+0x150>)
 8003f74:	4293      	cmp	r3, r2
 8003f76:	d14d      	bne.n	8004014 <I2Cx_MspInit+0xac>
  {
    /* AUDIO and LCD I2C MSP init */

    /*** Configure the GPIOs ***/
    /* Enable GPIO clock */
    DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8003f78:	4b50      	ldr	r3, [pc, #320]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003f7a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f7c:	4a4f      	ldr	r2, [pc, #316]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003f7e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003f82:	6313      	str	r3, [r2, #48]	@ 0x30
 8003f84:	4b4d      	ldr	r3, [pc, #308]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003f86:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003f88:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003f8c:	61bb      	str	r3, [r7, #24]
 8003f8e:	69bb      	ldr	r3, [r7, #24]

    /* Configure I2C Tx as alternate function */
    gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SCL_PIN;
 8003f90:	2380      	movs	r3, #128	@ 0x80
 8003f92:	61fb      	str	r3, [r7, #28]
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8003f94:	2312      	movs	r3, #18
 8003f96:	623b      	str	r3, [r7, #32]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8003f98:	2300      	movs	r3, #0
 8003f9a:	627b      	str	r3, [r7, #36]	@ 0x24
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8003f9c:	2302      	movs	r3, #2
 8003f9e:	62bb      	str	r3, [r7, #40]	@ 0x28
    gpio_init_structure.Alternate = DISCOVERY_AUDIO_I2Cx_SCL_SDA_AF;
 8003fa0:	2304      	movs	r3, #4
 8003fa2:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003fa4:	f107 031c 	add.w	r3, r7, #28
 8003fa8:	4619      	mov	r1, r3
 8003faa:	4845      	ldr	r0, [pc, #276]	@ (80040c0 <I2Cx_MspInit+0x158>)
 8003fac:	f001 fa58 	bl	8005460 <HAL_GPIO_Init>

    /* Configure I2C Rx as alternate function */
    gpio_init_structure.Pin = DISCOVERY_AUDIO_I2Cx_SDA_PIN;
 8003fb0:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8003fb4:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DISCOVERY_AUDIO_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8003fb6:	f107 031c 	add.w	r3, r7, #28
 8003fba:	4619      	mov	r1, r3
 8003fbc:	4840      	ldr	r0, [pc, #256]	@ (80040c0 <I2Cx_MspInit+0x158>)
 8003fbe:	f001 fa4f 	bl	8005460 <HAL_GPIO_Init>

    /*** Configure the I2C peripheral ***/
    /* Enable I2C clock */
    DISCOVERY_AUDIO_I2Cx_CLK_ENABLE();
 8003fc2:	4b3e      	ldr	r3, [pc, #248]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fc4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003fc6:	4a3d      	ldr	r2, [pc, #244]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fc8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003fcc:	6413      	str	r3, [r2, #64]	@ 0x40
 8003fce:	4b3b      	ldr	r3, [pc, #236]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fd0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003fd2:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003fd6:	617b      	str	r3, [r7, #20]
 8003fd8:	697b      	ldr	r3, [r7, #20]

    /* Force the I2C peripheral clock reset */
    DISCOVERY_AUDIO_I2Cx_FORCE_RESET();
 8003fda:	4b38      	ldr	r3, [pc, #224]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fdc:	6a1b      	ldr	r3, [r3, #32]
 8003fde:	4a37      	ldr	r2, [pc, #220]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fe0:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003fe4:	6213      	str	r3, [r2, #32]

    /* Release the I2C peripheral clock reset */
    DISCOVERY_AUDIO_I2Cx_RELEASE_RESET();
 8003fe6:	4b35      	ldr	r3, [pc, #212]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fe8:	6a1b      	ldr	r3, [r3, #32]
 8003fea:	4a34      	ldr	r2, [pc, #208]	@ (80040bc <I2Cx_MspInit+0x154>)
 8003fec:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 8003ff0:	6213      	str	r3, [r2, #32]

    /* Enable and set I2Cx Interrupt to a lower priority */
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_EV_IRQn, 0x0F, 0);
 8003ff2:	2200      	movs	r2, #0
 8003ff4:	210f      	movs	r1, #15
 8003ff6:	2048      	movs	r0, #72	@ 0x48
 8003ff8:	f000 fea5 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_EV_IRQn);
 8003ffc:	2048      	movs	r0, #72	@ 0x48
 8003ffe:	f000 febe 	bl	8004d7e <HAL_NVIC_EnableIRQ>

    /* Enable and set I2Cx Interrupt to a lower priority */
    HAL_NVIC_SetPriority(DISCOVERY_AUDIO_I2Cx_ER_IRQn, 0x0F, 0);
 8004002:	2200      	movs	r2, #0
 8004004:	210f      	movs	r1, #15
 8004006:	2049      	movs	r0, #73	@ 0x49
 8004008:	f000 fe9d 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_AUDIO_I2Cx_ER_IRQn);
 800400c:	2049      	movs	r0, #73	@ 0x49
 800400e:	f000 feb6 	bl	8004d7e <HAL_NVIC_EnableIRQ>

    /* Enable and set I2Cx Interrupt to a lower priority */
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x0F, 0);
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
  }
}
 8004012:	e04d      	b.n	80040b0 <I2Cx_MspInit+0x148>
    DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_CLK_ENABLE();
 8004014:	4b29      	ldr	r3, [pc, #164]	@ (80040bc <I2Cx_MspInit+0x154>)
 8004016:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004018:	4a28      	ldr	r2, [pc, #160]	@ (80040bc <I2Cx_MspInit+0x154>)
 800401a:	f043 0302 	orr.w	r3, r3, #2
 800401e:	6313      	str	r3, [r2, #48]	@ 0x30
 8004020:	4b26      	ldr	r3, [pc, #152]	@ (80040bc <I2Cx_MspInit+0x154>)
 8004022:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004024:	f003 0302 	and.w	r3, r3, #2
 8004028:	613b      	str	r3, [r7, #16]
 800402a:	693b      	ldr	r3, [r7, #16]
    gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SCL_PIN;
 800402c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8004030:	61fb      	str	r3, [r7, #28]
    gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8004032:	2312      	movs	r3, #18
 8004034:	623b      	str	r3, [r7, #32]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8004036:	2300      	movs	r3, #0
 8004038:	627b      	str	r3, [r7, #36]	@ 0x24
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800403a:	2302      	movs	r3, #2
 800403c:	62bb      	str	r3, [r7, #40]	@ 0x28
    gpio_init_structure.Alternate = DISCOVERY_EXT_I2Cx_SCL_SDA_AF;
 800403e:	2304      	movs	r3, #4
 8004040:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004042:	f107 031c 	add.w	r3, r7, #28
 8004046:	4619      	mov	r1, r3
 8004048:	481e      	ldr	r0, [pc, #120]	@ (80040c4 <I2Cx_MspInit+0x15c>)
 800404a:	f001 fa09 	bl	8005460 <HAL_GPIO_Init>
    gpio_init_structure.Pin = DISCOVERY_EXT_I2Cx_SDA_PIN;
 800404e:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8004052:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(DISCOVERY_EXT_I2Cx_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8004054:	f107 031c 	add.w	r3, r7, #28
 8004058:	4619      	mov	r1, r3
 800405a:	481a      	ldr	r0, [pc, #104]	@ (80040c4 <I2Cx_MspInit+0x15c>)
 800405c:	f001 fa00 	bl	8005460 <HAL_GPIO_Init>
    DISCOVERY_EXT_I2Cx_CLK_ENABLE();
 8004060:	4b16      	ldr	r3, [pc, #88]	@ (80040bc <I2Cx_MspInit+0x154>)
 8004062:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004064:	4a15      	ldr	r2, [pc, #84]	@ (80040bc <I2Cx_MspInit+0x154>)
 8004066:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 800406a:	6413      	str	r3, [r2, #64]	@ 0x40
 800406c:	4b13      	ldr	r3, [pc, #76]	@ (80040bc <I2Cx_MspInit+0x154>)
 800406e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004070:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004074:	60fb      	str	r3, [r7, #12]
 8004076:	68fb      	ldr	r3, [r7, #12]
    DISCOVERY_EXT_I2Cx_FORCE_RESET();
 8004078:	4b10      	ldr	r3, [pc, #64]	@ (80040bc <I2Cx_MspInit+0x154>)
 800407a:	6a1b      	ldr	r3, [r3, #32]
 800407c:	4a0f      	ldr	r2, [pc, #60]	@ (80040bc <I2Cx_MspInit+0x154>)
 800407e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8004082:	6213      	str	r3, [r2, #32]
    DISCOVERY_EXT_I2Cx_RELEASE_RESET();
 8004084:	4b0d      	ldr	r3, [pc, #52]	@ (80040bc <I2Cx_MspInit+0x154>)
 8004086:	6a1b      	ldr	r3, [r3, #32]
 8004088:	4a0c      	ldr	r2, [pc, #48]	@ (80040bc <I2Cx_MspInit+0x154>)
 800408a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800408e:	6213      	str	r3, [r2, #32]
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_EV_IRQn, 0x0F, 0);
 8004090:	2200      	movs	r2, #0
 8004092:	210f      	movs	r1, #15
 8004094:	201f      	movs	r0, #31
 8004096:	f000 fe56 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_EV_IRQn);
 800409a:	201f      	movs	r0, #31
 800409c:	f000 fe6f 	bl	8004d7e <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(DISCOVERY_EXT_I2Cx_ER_IRQn, 0x0F, 0);
 80040a0:	2200      	movs	r2, #0
 80040a2:	210f      	movs	r1, #15
 80040a4:	2020      	movs	r0, #32
 80040a6:	f000 fe4e 	bl	8004d46 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DISCOVERY_EXT_I2Cx_ER_IRQn);
 80040aa:	2020      	movs	r0, #32
 80040ac:	f000 fe67 	bl	8004d7e <HAL_NVIC_EnableIRQ>
}
 80040b0:	bf00      	nop
 80040b2:	3730      	adds	r7, #48	@ 0x30
 80040b4:	46bd      	mov	sp, r7
 80040b6:	bd80      	pop	{r7, pc}
 80040b8:	200008b4 	.word	0x200008b4
 80040bc:	40023800 	.word	0x40023800
 80040c0:	40021c00 	.word	0x40021c00
 80040c4:	40020400 	.word	0x40020400

080040c8 <I2Cx_Init>:
  * @brief  Initializes I2C HAL.
  * @param  i2c_handler : I2C handler
  * @retval None
  */
static void I2Cx_Init(I2C_HandleTypeDef *i2c_handler)
{
 80040c8:	b580      	push	{r7, lr}
 80040ca:	b082      	sub	sp, #8
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	6078      	str	r0, [r7, #4]
  if(HAL_I2C_GetState(i2c_handler) == HAL_I2C_STATE_RESET)
 80040d0:	6878      	ldr	r0, [r7, #4]
 80040d2:	f001 ffcd 	bl	8006070 <HAL_I2C_GetState>
 80040d6:	4603      	mov	r3, r0
 80040d8:	2b00      	cmp	r3, #0
 80040da:	d125      	bne.n	8004128 <I2Cx_Init+0x60>
  {
    if (i2c_handler == (I2C_HandleTypeDef*)(&hI2cAudioHandler))
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	4a14      	ldr	r2, [pc, #80]	@ (8004130 <I2Cx_Init+0x68>)
 80040e0:	4293      	cmp	r3, r2
 80040e2:	d103      	bne.n	80040ec <I2Cx_Init+0x24>
    {
      /* Audio and LCD I2C configuration */
      i2c_handler->Instance = DISCOVERY_AUDIO_I2Cx;
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	4a13      	ldr	r2, [pc, #76]	@ (8004134 <I2Cx_Init+0x6c>)
 80040e8:	601a      	str	r2, [r3, #0]
 80040ea:	e002      	b.n	80040f2 <I2Cx_Init+0x2a>
    }
    else
    {
      /* External, camera and Arduino connector  I2C configuration */
      i2c_handler->Instance = DISCOVERY_EXT_I2Cx;
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	4a12      	ldr	r2, [pc, #72]	@ (8004138 <I2Cx_Init+0x70>)
 80040f0:	601a      	str	r2, [r3, #0]
    }
    i2c_handler->Init.Timing           = DISCOVERY_I2Cx_TIMING;
 80040f2:	687b      	ldr	r3, [r7, #4]
 80040f4:	4a11      	ldr	r2, [pc, #68]	@ (800413c <I2Cx_Init+0x74>)
 80040f6:	605a      	str	r2, [r3, #4]
    i2c_handler->Init.OwnAddress1      = 0;
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	2200      	movs	r2, #0
 80040fc:	609a      	str	r2, [r3, #8]
    i2c_handler->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
 80040fe:	687b      	ldr	r3, [r7, #4]
 8004100:	2201      	movs	r2, #1
 8004102:	60da      	str	r2, [r3, #12]
    i2c_handler->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
 8004104:	687b      	ldr	r3, [r7, #4]
 8004106:	2200      	movs	r2, #0
 8004108:	611a      	str	r2, [r3, #16]
    i2c_handler->Init.OwnAddress2      = 0;
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	2200      	movs	r2, #0
 800410e:	615a      	str	r2, [r3, #20]
    i2c_handler->Init.GeneralCallMode  = I2C_GENERALCALL_DISABLE;
 8004110:	687b      	ldr	r3, [r7, #4]
 8004112:	2200      	movs	r2, #0
 8004114:	61da      	str	r2, [r3, #28]
    i2c_handler->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
 8004116:	687b      	ldr	r3, [r7, #4]
 8004118:	2200      	movs	r2, #0
 800411a:	621a      	str	r2, [r3, #32]

    /* Init the I2C */
    I2Cx_MspInit(i2c_handler);
 800411c:	6878      	ldr	r0, [r7, #4]
 800411e:	f7ff ff23 	bl	8003f68 <I2Cx_MspInit>
    HAL_I2C_Init(i2c_handler);
 8004122:	6878      	ldr	r0, [r7, #4]
 8004124:	f001 fcaa 	bl	8005a7c <HAL_I2C_Init>
  }
}
 8004128:	bf00      	nop
 800412a:	3708      	adds	r7, #8
 800412c:	46bd      	mov	sp, r7
 800412e:	bd80      	pop	{r7, pc}
 8004130:	200008b4 	.word	0x200008b4
 8004134:	40005c00 	.word	0x40005c00
 8004138:	40005400 	.word	0x40005400
 800413c:	40912732 	.word	0x40912732

08004140 <I2Cx_ReadMultiple>:
                                           uint8_t Addr,
                                           uint16_t Reg,
                                           uint16_t MemAddress,
                                           uint8_t *Buffer,
                                           uint16_t Length)
{
 8004140:	b580      	push	{r7, lr}
 8004142:	b08a      	sub	sp, #40	@ 0x28
 8004144:	af04      	add	r7, sp, #16
 8004146:	60f8      	str	r0, [r7, #12]
 8004148:	4608      	mov	r0, r1
 800414a:	4611      	mov	r1, r2
 800414c:	461a      	mov	r2, r3
 800414e:	4603      	mov	r3, r0
 8004150:	72fb      	strb	r3, [r7, #11]
 8004152:	460b      	mov	r3, r1
 8004154:	813b      	strh	r3, [r7, #8]
 8004156:	4613      	mov	r3, r2
 8004158:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 800415a:	2300      	movs	r3, #0
 800415c:	75fb      	strb	r3, [r7, #23]

  status = HAL_I2C_Mem_Read(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 800415e:	7afb      	ldrb	r3, [r7, #11]
 8004160:	b299      	uxth	r1, r3
 8004162:	88f8      	ldrh	r0, [r7, #6]
 8004164:	893a      	ldrh	r2, [r7, #8]
 8004166:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800416a:	9302      	str	r3, [sp, #8]
 800416c:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800416e:	9301      	str	r3, [sp, #4]
 8004170:	6a3b      	ldr	r3, [r7, #32]
 8004172:	9300      	str	r3, [sp, #0]
 8004174:	4603      	mov	r3, r0
 8004176:	68f8      	ldr	r0, [r7, #12]
 8004178:	f001 fe60 	bl	8005e3c <HAL_I2C_Mem_Read>
 800417c:	4603      	mov	r3, r0
 800417e:	75fb      	strb	r3, [r7, #23]

  /* Check the communication status */
  if(status != HAL_OK)
 8004180:	7dfb      	ldrb	r3, [r7, #23]
 8004182:	2b00      	cmp	r3, #0
 8004184:	d004      	beq.n	8004190 <I2Cx_ReadMultiple+0x50>
  {
    /* I2C error occurred */
    I2Cx_Error(i2c_handler, Addr);
 8004186:	7afb      	ldrb	r3, [r7, #11]
 8004188:	4619      	mov	r1, r3
 800418a:	68f8      	ldr	r0, [r7, #12]
 800418c:	f000 f832 	bl	80041f4 <I2Cx_Error>
  }
  return status;    
 8004190:	7dfb      	ldrb	r3, [r7, #23]
}
 8004192:	4618      	mov	r0, r3
 8004194:	3718      	adds	r7, #24
 8004196:	46bd      	mov	sp, r7
 8004198:	bd80      	pop	{r7, pc}

0800419a <I2Cx_WriteMultiple>:
                                            uint8_t Addr,
                                            uint16_t Reg,
                                            uint16_t MemAddress,
                                            uint8_t *Buffer,
                                            uint16_t Length)
{
 800419a:	b580      	push	{r7, lr}
 800419c:	b08a      	sub	sp, #40	@ 0x28
 800419e:	af04      	add	r7, sp, #16
 80041a0:	60f8      	str	r0, [r7, #12]
 80041a2:	4608      	mov	r0, r1
 80041a4:	4611      	mov	r1, r2
 80041a6:	461a      	mov	r2, r3
 80041a8:	4603      	mov	r3, r0
 80041aa:	72fb      	strb	r3, [r7, #11]
 80041ac:	460b      	mov	r3, r1
 80041ae:	813b      	strh	r3, [r7, #8]
 80041b0:	4613      	mov	r3, r2
 80041b2:	80fb      	strh	r3, [r7, #6]
  HAL_StatusTypeDef status = HAL_OK;
 80041b4:	2300      	movs	r3, #0
 80041b6:	75fb      	strb	r3, [r7, #23]
  
  status = HAL_I2C_Mem_Write(i2c_handler, Addr, (uint16_t)Reg, MemAddress, Buffer, Length, 1000);
 80041b8:	7afb      	ldrb	r3, [r7, #11]
 80041ba:	b299      	uxth	r1, r3
 80041bc:	88f8      	ldrh	r0, [r7, #6]
 80041be:	893a      	ldrh	r2, [r7, #8]
 80041c0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80041c4:	9302      	str	r3, [sp, #8]
 80041c6:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 80041c8:	9301      	str	r3, [sp, #4]
 80041ca:	6a3b      	ldr	r3, [r7, #32]
 80041cc:	9300      	str	r3, [sp, #0]
 80041ce:	4603      	mov	r3, r0
 80041d0:	68f8      	ldr	r0, [r7, #12]
 80041d2:	f001 fd1f 	bl	8005c14 <HAL_I2C_Mem_Write>
 80041d6:	4603      	mov	r3, r0
 80041d8:	75fb      	strb	r3, [r7, #23]
  
  /* Check the communication status */
  if(status != HAL_OK)
 80041da:	7dfb      	ldrb	r3, [r7, #23]
 80041dc:	2b00      	cmp	r3, #0
 80041de:	d004      	beq.n	80041ea <I2Cx_WriteMultiple+0x50>
  {
    /* Re-Initiaize the I2C Bus */
    I2Cx_Error(i2c_handler, Addr);
 80041e0:	7afb      	ldrb	r3, [r7, #11]
 80041e2:	4619      	mov	r1, r3
 80041e4:	68f8      	ldr	r0, [r7, #12]
 80041e6:	f000 f805 	bl	80041f4 <I2Cx_Error>
  }
  return status;
 80041ea:	7dfb      	ldrb	r3, [r7, #23]
}
 80041ec:	4618      	mov	r0, r3
 80041ee:	3718      	adds	r7, #24
 80041f0:	46bd      	mov	sp, r7
 80041f2:	bd80      	pop	{r7, pc}

080041f4 <I2Cx_Error>:
  * @param  i2c_handler : I2C handler
  * @param  Addr: I2C Address
  * @retval None
  */
static void I2Cx_Error(I2C_HandleTypeDef *i2c_handler, uint8_t Addr)
{
 80041f4:	b580      	push	{r7, lr}
 80041f6:	b082      	sub	sp, #8
 80041f8:	af00      	add	r7, sp, #0
 80041fa:	6078      	str	r0, [r7, #4]
 80041fc:	460b      	mov	r3, r1
 80041fe:	70fb      	strb	r3, [r7, #3]
  /* De-initialize the I2C communication bus */
  HAL_I2C_DeInit(i2c_handler);
 8004200:	6878      	ldr	r0, [r7, #4]
 8004202:	f001 fcd7 	bl	8005bb4 <HAL_I2C_DeInit>
  
  /* Re-Initialize the I2C communication bus */
  I2Cx_Init(i2c_handler);
 8004206:	6878      	ldr	r0, [r7, #4]
 8004208:	f7ff ff5e 	bl	80040c8 <I2Cx_Init>
}
 800420c:	bf00      	nop
 800420e:	3708      	adds	r7, #8
 8004210:	46bd      	mov	sp, r7
 8004212:	bd80      	pop	{r7, pc}

08004214 <TS_IO_Init>:
/**
  * @brief  Initializes Touchscreen low level.
  * @retval None
  */
void TS_IO_Init(void)
{
 8004214:	b580      	push	{r7, lr}
 8004216:	af00      	add	r7, sp, #0
  I2Cx_Init(&hI2cAudioHandler);
 8004218:	4802      	ldr	r0, [pc, #8]	@ (8004224 <TS_IO_Init+0x10>)
 800421a:	f7ff ff55 	bl	80040c8 <I2Cx_Init>
}
 800421e:	bf00      	nop
 8004220:	bd80      	pop	{r7, pc}
 8004222:	bf00      	nop
 8004224:	200008b4 	.word	0x200008b4

08004228 <TS_IO_Write>:
  * @param  Reg: Reg address
  * @param  Value: Data to be written
  * @retval None
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8004228:	b580      	push	{r7, lr}
 800422a:	b084      	sub	sp, #16
 800422c:	af02      	add	r7, sp, #8
 800422e:	4603      	mov	r3, r0
 8004230:	71fb      	strb	r3, [r7, #7]
 8004232:	460b      	mov	r3, r1
 8004234:	71bb      	strb	r3, [r7, #6]
 8004236:	4613      	mov	r3, r2
 8004238:	717b      	strb	r3, [r7, #5]
  I2Cx_WriteMultiple(&hI2cAudioHandler, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT,(uint8_t*)&Value, 1);
 800423a:	79bb      	ldrb	r3, [r7, #6]
 800423c:	b29a      	uxth	r2, r3
 800423e:	79f9      	ldrb	r1, [r7, #7]
 8004240:	2301      	movs	r3, #1
 8004242:	9301      	str	r3, [sp, #4]
 8004244:	1d7b      	adds	r3, r7, #5
 8004246:	9300      	str	r3, [sp, #0]
 8004248:	2301      	movs	r3, #1
 800424a:	4803      	ldr	r0, [pc, #12]	@ (8004258 <TS_IO_Write+0x30>)
 800424c:	f7ff ffa5 	bl	800419a <I2Cx_WriteMultiple>
}
 8004250:	bf00      	nop
 8004252:	3708      	adds	r7, #8
 8004254:	46bd      	mov	sp, r7
 8004256:	bd80      	pop	{r7, pc}
 8004258:	200008b4 	.word	0x200008b4

0800425c <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Reg address
  * @retval Data to be read
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 800425c:	b580      	push	{r7, lr}
 800425e:	b086      	sub	sp, #24
 8004260:	af02      	add	r7, sp, #8
 8004262:	4603      	mov	r3, r0
 8004264:	460a      	mov	r2, r1
 8004266:	71fb      	strb	r3, [r7, #7]
 8004268:	4613      	mov	r3, r2
 800426a:	71bb      	strb	r3, [r7, #6]
  uint8_t read_value = 0;
 800426c:	2300      	movs	r3, #0
 800426e:	73fb      	strb	r3, [r7, #15]

  I2Cx_ReadMultiple(&hI2cAudioHandler, Addr, Reg, I2C_MEMADD_SIZE_8BIT, (uint8_t*)&read_value, 1);
 8004270:	79bb      	ldrb	r3, [r7, #6]
 8004272:	b29a      	uxth	r2, r3
 8004274:	79f9      	ldrb	r1, [r7, #7]
 8004276:	2301      	movs	r3, #1
 8004278:	9301      	str	r3, [sp, #4]
 800427a:	f107 030f 	add.w	r3, r7, #15
 800427e:	9300      	str	r3, [sp, #0]
 8004280:	2301      	movs	r3, #1
 8004282:	4804      	ldr	r0, [pc, #16]	@ (8004294 <TS_IO_Read+0x38>)
 8004284:	f7ff ff5c 	bl	8004140 <I2Cx_ReadMultiple>

  return read_value;
 8004288:	7bfb      	ldrb	r3, [r7, #15]
}
 800428a:	4618      	mov	r0, r3
 800428c:	3710      	adds	r7, #16
 800428e:	46bd      	mov	sp, r7
 8004290:	bd80      	pop	{r7, pc}
 8004292:	bf00      	nop
 8004294:	200008b4 	.word	0x200008b4

08004298 <TS_IO_Delay>:
  * @brief  TS delay
  * @param  Delay: Delay in ms
  * @retval None
  */
void TS_IO_Delay(uint32_t Delay)
{
 8004298:	b580      	push	{r7, lr}
 800429a:	b082      	sub	sp, #8
 800429c:	af00      	add	r7, sp, #0
 800429e:	6078      	str	r0, [r7, #4]
  HAL_Delay(Delay);
 80042a0:	6878      	ldr	r0, [r7, #4]
 80042a2:	f000 fc51 	bl	8004b48 <HAL_Delay>
}
 80042a6:	bf00      	nop
 80042a8:	3708      	adds	r7, #8
 80042aa:	46bd      	mov	sp, r7
 80042ac:	bd80      	pop	{r7, pc}

080042ae <Powerstep01_Board_Delay>:
 * @brief This function provides an accurate delay in milliseconds
 * @param[in] delay  time length in milliseconds
 * @retval None
 **********************************************************/
void Powerstep01_Board_Delay(uint32_t delay)
{
 80042ae:	b580      	push	{r7, lr}
 80042b0:	b082      	sub	sp, #8
 80042b2:	af00      	add	r7, sp, #0
 80042b4:	6078      	str	r0, [r7, #4]
  HAL_Delay(delay);
 80042b6:	6878      	ldr	r0, [r7, #4]
 80042b8:	f000 fc46 	bl	8004b48 <HAL_Delay>
}
 80042bc:	bf00      	nop
 80042be:	3708      	adds	r7, #8
 80042c0:	46bd      	mov	sp, r7
 80042c2:	bd80      	pop	{r7, pc}

080042c4 <Powerstep01_Board_DisableIrq>:
/******************************************************//**
 * @brief This function disable the interruptions
 * @retval None
 **********************************************************/
void Powerstep01_Board_DisableIrq(void)
{
 80042c4:	b480      	push	{r7}
 80042c6:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsid i" : : : "memory");
 80042c8:	b672      	cpsid	i
}
 80042ca:	bf00      	nop
  __disable_irq();
}
 80042cc:	bf00      	nop
 80042ce:	46bd      	mov	sp, r7
 80042d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042d4:	4770      	bx	lr

080042d6 <Powerstep01_Board_EnableIrq>:
/******************************************************//**
 * @brief This function enable the interruptions
 * @retval None
 **********************************************************/
void Powerstep01_Board_EnableIrq(void)
{
 80042d6:	b480      	push	{r7}
 80042d8:	af00      	add	r7, sp, #0
  __ASM volatile ("cpsie i" : : : "memory");
 80042da:	b662      	cpsie	i
}
 80042dc:	bf00      	nop
  __enable_irq();
}
 80042de:	bf00      	nop
 80042e0:	46bd      	mov	sp, r7
 80042e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042e6:	4770      	bx	lr

080042e8 <Powerstep01_Board_GpioInit>:
 * @brief  Initiliases the GPIOs used by the powerSTEP01s
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
  **********************************************************/
void Powerstep01_Board_GpioInit(uint8_t deviceId)
{
 80042e8:	b580      	push	{r7, lr}
 80042ea:	b08c      	sub	sp, #48	@ 0x30
 80042ec:	af00      	add	r7, sp, #0
 80042ee:	4603      	mov	r3, r0
 80042f0:	71fb      	strb	r3, [r7, #7]
  GPIO_InitTypeDef GPIO_InitStruct;
  
  if (deviceId==0)
 80042f2:	79fb      	ldrb	r3, [r7, #7]
 80042f4:	2b00      	cmp	r3, #0
 80042f6:	f040 8088 	bne.w	800440a <Powerstep01_Board_GpioInit+0x122>
  {
    /* GPIO Ports Clock Enable */
    __GPIOA_CLK_ENABLE();
 80042fa:	4b46      	ldr	r3, [pc, #280]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 80042fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80042fe:	4a45      	ldr	r2, [pc, #276]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004300:	f043 0301 	orr.w	r3, r3, #1
 8004304:	6313      	str	r3, [r2, #48]	@ 0x30
 8004306:	4b43      	ldr	r3, [pc, #268]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004308:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800430a:	f003 0301 	and.w	r3, r3, #1
 800430e:	61bb      	str	r3, [r7, #24]
 8004310:	69bb      	ldr	r3, [r7, #24]
    __GPIOB_CLK_ENABLE();
 8004312:	4b40      	ldr	r3, [pc, #256]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004314:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004316:	4a3f      	ldr	r2, [pc, #252]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004318:	f043 0302 	orr.w	r3, r3, #2
 800431c:	6313      	str	r3, [r2, #48]	@ 0x30
 800431e:	4b3d      	ldr	r3, [pc, #244]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004320:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004322:	f003 0302 	and.w	r3, r3, #2
 8004326:	617b      	str	r3, [r7, #20]
 8004328:	697b      	ldr	r3, [r7, #20]
    __GPIOG_CLK_ENABLE();
 800432a:	4b3a      	ldr	r3, [pc, #232]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 800432c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800432e:	4a39      	ldr	r2, [pc, #228]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004330:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004334:	6313      	str	r3, [r2, #48]	@ 0x30
 8004336:	4b37      	ldr	r3, [pc, #220]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004338:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800433a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800433e:	613b      	str	r3, [r7, #16]
 8004340:	693b      	ldr	r3, [r7, #16]
    __GPIOI_CLK_ENABLE();
 8004342:	4b34      	ldr	r3, [pc, #208]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004344:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004346:	4a33      	ldr	r2, [pc, #204]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004348:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800434c:	6313      	str	r3, [r2, #48]	@ 0x30
 800434e:	4b31      	ldr	r3, [pc, #196]	@ (8004414 <Powerstep01_Board_GpioInit+0x12c>)
 8004350:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004352:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004356:	60fb      	str	r3, [r7, #12]
 8004358:	68fb      	ldr	r3, [r7, #12]
    
    /* Configure Powerstep01 - Busy pin --------------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_BUSY_PIN;
 800435a:	2380      	movs	r3, #128	@ 0x80
 800435c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING_FALLING;
 800435e:	f44f 1344 	mov.w	r3, #3211264	@ 0x310000
 8004362:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8004364:	2301      	movs	r3, #1
 8004366:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 8004368:	2301      	movs	r3, #1
 800436a:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_BUSY_PORT, &GPIO_InitStruct);
 800436c:	f107 031c 	add.w	r3, r7, #28
 8004370:	4619      	mov	r1, r3
 8004372:	4829      	ldr	r0, [pc, #164]	@ (8004418 <Powerstep01_Board_GpioInit+0x130>)
 8004374:	f001 f874 	bl	8005460 <HAL_GPIO_Init>
    
    /* Set Priority of Exti line Interrupt used for the busy interrupt*/ 
    HAL_NVIC_SetPriority(BUSY_EXTI_LINE_IRQn, 6, 0);
 8004378:	2200      	movs	r2, #0
 800437a:	2106      	movs	r1, #6
 800437c:	2017      	movs	r0, #23
 800437e:	f000 fce2 	bl	8004d46 <HAL_NVIC_SetPriority>
      
    /* Enable the Exti line Interrupt used for the busy interrupt*/
    HAL_NVIC_EnableIRQ(BUSY_EXTI_LINE_IRQn);
 8004382:	2017      	movs	r0, #23
 8004384:	f000 fcfb 	bl	8004d7e <HAL_NVIC_EnableIRQ>
    
    /* Configure Powerstep01 - Flag pin --------------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_FLAG_PIN;
 8004388:	2340      	movs	r3, #64	@ 0x40
 800438a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 800438c:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8004390:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8004392:	2301      	movs	r3, #1
 8004394:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 8004396:	2301      	movs	r3, #1
 8004398:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_FLAG_PORT, &GPIO_InitStruct);
 800439a:	f107 031c 	add.w	r3, r7, #28
 800439e:	4619      	mov	r1, r3
 80043a0:	481d      	ldr	r0, [pc, #116]	@ (8004418 <Powerstep01_Board_GpioInit+0x130>)
 80043a2:	f001 f85d 	bl	8005460 <HAL_GPIO_Init>
    
    /* Set Priority of Exti lineInterrupt used for the Flag interrupt*/ 
    HAL_NVIC_SetPriority(FLAG_EXTI_LINE_IRQn, 5, 0);
 80043a6:	2200      	movs	r2, #0
 80043a8:	2105      	movs	r1, #5
 80043aa:	2017      	movs	r0, #23
 80043ac:	f000 fccb 	bl	8004d46 <HAL_NVIC_SetPriority>
      
    /* Enable the Exti line  Interrupt used for the Flag interrupt*/
    HAL_NVIC_EnableIRQ(FLAG_EXTI_LINE_IRQn);    
 80043b0:	2017      	movs	r0, #23
 80043b2:	f000 fce4 	bl	8004d7e <HAL_NVIC_EnableIRQ>
  
    /* Configure Powerstep01 - CS pin ----------------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_CS_PIN;
 80043b6:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80043ba:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80043bc:	2301      	movs	r3, #1
 80043be:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80043c0:	2300      	movs	r3, #0
 80043c2:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 80043c4:	2301      	movs	r3, #1
 80043c6:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_CS_PORT, &GPIO_InitStruct);
 80043c8:	f107 031c 	add.w	r3, r7, #28
 80043cc:	4619      	mov	r1, r3
 80043ce:	4813      	ldr	r0, [pc, #76]	@ (800441c <Powerstep01_Board_GpioInit+0x134>)
 80043d0:	f001 f846 	bl	8005460 <HAL_GPIO_Init>
    HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_CS_PORT, BSP_MOTOR_CONTROL_BOARD_CS_PIN, GPIO_PIN_SET); 
 80043d4:	2201      	movs	r2, #1
 80043d6:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80043da:	4810      	ldr	r0, [pc, #64]	@ (800441c <Powerstep01_Board_GpioInit+0x134>)
 80043dc:	f001 fb10 	bl	8005a00 <HAL_GPIO_WritePin>
    
    /* Configure Powerstep01 - STBY/RESET pin --------------------------------*/
    GPIO_InitStruct.Pin = BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PIN;
 80043e0:	2304      	movs	r3, #4
 80043e2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80043e4:	2301      	movs	r3, #1
 80043e6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80043e8:	2300      	movs	r3, #0
 80043ea:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_MEDIUM;
 80043ec:	2301      	movs	r3, #1
 80043ee:	62bb      	str	r3, [r7, #40]	@ 0x28
    HAL_GPIO_Init(BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PORT, &GPIO_InitStruct);
 80043f0:	f107 031c 	add.w	r3, r7, #28
 80043f4:	4619      	mov	r1, r3
 80043f6:	480a      	ldr	r0, [pc, #40]	@ (8004420 <Powerstep01_Board_GpioInit+0x138>)
 80043f8:	f001 f832 	bl	8005460 <HAL_GPIO_Init>
    
    /* Reset Powerstep0*/
    Powerstep01_Board_Reset(deviceId);
 80043fc:	79fb      	ldrb	r3, [r7, #7]
 80043fe:	4618      	mov	r0, r3
 8004400:	f000 f88e 	bl	8004520 <Powerstep01_Board_Reset>
    
    /* Let a delay after reset */
    Powerstep01_Board_Delay(1); 
 8004404:	2001      	movs	r0, #1
 8004406:	f7ff ff52 	bl	80042ae <Powerstep01_Board_Delay>
  }
}
 800440a:	bf00      	nop
 800440c:	3730      	adds	r7, #48	@ 0x30
 800440e:	46bd      	mov	sp, r7
 8004410:	bd80      	pop	{r7, pc}
 8004412:	bf00      	nop
 8004414:	40023800 	.word	0x40023800
 8004418:	40021800 	.word	0x40021800
 800441c:	40020000 	.word	0x40020000
 8004420:	40022000 	.word	0x40022000

08004424 <Powerstep01_Board_StepClockInit>:
 * @brief  Initialises the step clock by setting 
 * corresponding GPIO, Timer, Pwm,...
 * @retval None
 **********************************************************/
void Powerstep01_Board_StepClockInit(void)
{
 8004424:	b580      	push	{r7, lr}
 8004426:	b08e      	sub	sp, #56	@ 0x38
 8004428:	af00      	add	r7, sp, #0
  TIM_OC_InitTypeDef sConfigOC;
  TIM_MasterConfigTypeDef sMasterConfig;
  TIM_ClockConfigTypeDef sClockSourceConfig;
  
  hTimStepClock.Instance = BSP_MOTOR_CONTROL_BOARD_TIMER_STEP_CLOCK;
 800442a:	4b1c      	ldr	r3, [pc, #112]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 800442c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8004430:	601a      	str	r2, [r3, #0]
  hTimStepClock.Init.Prescaler = TIMER_PRESCALER -1;
 8004432:	4b1a      	ldr	r3, [pc, #104]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 8004434:	223f      	movs	r2, #63	@ 0x3f
 8004436:	605a      	str	r2, [r3, #4]
  hTimStepClock.Init.CounterMode = TIM_COUNTERMODE_UP;
 8004438:	4b18      	ldr	r3, [pc, #96]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 800443a:	2200      	movs	r2, #0
 800443c:	609a      	str	r2, [r3, #8]
  hTimStepClock.Init.Period = 0;
 800443e:	4b17      	ldr	r3, [pc, #92]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 8004440:	2200      	movs	r2, #0
 8004442:	60da      	str	r2, [r3, #12]
  hTimStepClock.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8004444:	4b15      	ldr	r3, [pc, #84]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 8004446:	2200      	movs	r2, #0
 8004448:	611a      	str	r2, [r3, #16]
  HAL_TIM_PWM_Init(&hTimStepClock);
 800444a:	4814      	ldr	r0, [pc, #80]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 800444c:	f004 fc6e 	bl	8008d2c <HAL_TIM_PWM_Init>

  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8004450:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004454:	603b      	str	r3, [r7, #0]
  HAL_TIM_ConfigClockSource(&hTimStepClock, &sClockSourceConfig);
 8004456:	463b      	mov	r3, r7
 8004458:	4619      	mov	r1, r3
 800445a:	4810      	ldr	r0, [pc, #64]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 800445c:	f005 f928 	bl	80096b0 <HAL_TIM_ConfigClockSource>
  
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8004460:	2360      	movs	r3, #96	@ 0x60
 8004462:	61fb      	str	r3, [r7, #28]
  sConfigOC.Pulse = 0;
 8004464:	2300      	movs	r3, #0
 8004466:	623b      	str	r3, [r7, #32]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8004468:	2300      	movs	r3, #0
 800446a:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800446c:	2300      	movs	r3, #0
 800446e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_TIM_PWM_ConfigChannel(&hTimStepClock, &sConfigOC, BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK);
 8004470:	f107 031c 	add.w	r3, r7, #28
 8004474:	2200      	movs	r2, #0
 8004476:	4619      	mov	r1, r3
 8004478:	4808      	ldr	r0, [pc, #32]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 800447a:	f005 f805 	bl	8009488 <HAL_TIM_PWM_ConfigChannel>
  
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800447e:	2300      	movs	r3, #0
 8004480:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8004482:	2300      	movs	r3, #0
 8004484:	61bb      	str	r3, [r7, #24]
  HAL_TIMEx_MasterConfigSynchronization(&hTimStepClock, &sMasterConfig);
 8004486:	f107 0310 	add.w	r3, r7, #16
 800448a:	4619      	mov	r1, r3
 800448c:	4803      	ldr	r0, [pc, #12]	@ (800449c <Powerstep01_Board_StepClockInit+0x78>)
 800448e:	f005 fe65 	bl	800a15c <HAL_TIMEx_MasterConfigSynchronization>
}
 8004492:	bf00      	nop
 8004494:	3738      	adds	r7, #56	@ 0x38
 8004496:	46bd      	mov	sp, r7
 8004498:	bd80      	pop	{r7, pc}
 800449a:	bf00      	nop
 800449c:	20000994 	.word	0x20000994

080044a0 <Powerstep01_Board_StartStepClock>:
 * @param[in] newFreq in Hz of the step clock
 * @retval None
 * @note The frequency is directly the current speed of the device
 **********************************************************/
void Powerstep01_Board_StartStepClock(uint16_t newFreq)
{
 80044a0:	b580      	push	{r7, lr}
 80044a2:	b084      	sub	sp, #16
 80044a4:	af00      	add	r7, sp, #0
 80044a6:	4603      	mov	r3, r0
 80044a8:	80fb      	strh	r3, [r7, #6]
  uint32_t sysFreq = HAL_RCC_GetSysClockFreq();
 80044aa:	f003 f983 	bl	80077b4 <HAL_RCC_GetSysClockFreq>
 80044ae:	60f8      	str	r0, [r7, #12]
  uint32_t period = (sysFreq/ (TIMER_PRESCALER * newFreq)) - 1;
 80044b0:	88fb      	ldrh	r3, [r7, #6]
 80044b2:	019b      	lsls	r3, r3, #6
 80044b4:	461a      	mov	r2, r3
 80044b6:	68fb      	ldr	r3, [r7, #12]
 80044b8:	fbb3 f3f2 	udiv	r3, r3, r2
 80044bc:	3b01      	subs	r3, #1
 80044be:	60bb      	str	r3, [r7, #8]
  
  __HAL_TIM_SetAutoreload(&hTimStepClock, period);
 80044c0:	4b09      	ldr	r3, [pc, #36]	@ (80044e8 <Powerstep01_Board_StartStepClock+0x48>)
 80044c2:	681b      	ldr	r3, [r3, #0]
 80044c4:	68ba      	ldr	r2, [r7, #8]
 80044c6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80044c8:	4a07      	ldr	r2, [pc, #28]	@ (80044e8 <Powerstep01_Board_StartStepClock+0x48>)
 80044ca:	68bb      	ldr	r3, [r7, #8]
 80044cc:	60d3      	str	r3, [r2, #12]
  __HAL_TIM_SetCompare(&hTimStepClock, BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK, period >> 1);
 80044ce:	4b06      	ldr	r3, [pc, #24]	@ (80044e8 <Powerstep01_Board_StartStepClock+0x48>)
 80044d0:	681b      	ldr	r3, [r3, #0]
 80044d2:	68ba      	ldr	r2, [r7, #8]
 80044d4:	0852      	lsrs	r2, r2, #1
 80044d6:	635a      	str	r2, [r3, #52]	@ 0x34
  HAL_TIM_PWM_Start_IT(&hTimStepClock, BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK);  
 80044d8:	2100      	movs	r1, #0
 80044da:	4803      	ldr	r0, [pc, #12]	@ (80044e8 <Powerstep01_Board_StartStepClock+0x48>)
 80044dc:	f004 fc94 	bl	8008e08 <HAL_TIM_PWM_Start_IT>
}
 80044e0:	bf00      	nop
 80044e2:	3710      	adds	r7, #16
 80044e4:	46bd      	mov	sp, r7
 80044e6:	bd80      	pop	{r7, pc}
 80044e8:	20000994 	.word	0x20000994

080044ec <Powerstep01_Board_StopStepClock>:
/******************************************************//**
 * @brief  Stops the PWM uses for the step clock
 * @retval None
 **********************************************************/
void Powerstep01_Board_StopStepClock(void)
{
 80044ec:	b580      	push	{r7, lr}
 80044ee:	af00      	add	r7, sp, #0
  HAL_TIM_PWM_Stop_IT(&hTimStepClock,BSP_MOTOR_CONTROL_BOARD_CHAN_TIMER_STEP_CLOCK);
 80044f0:	2100      	movs	r1, #0
 80044f2:	4802      	ldr	r0, [pc, #8]	@ (80044fc <Powerstep01_Board_StopStepClock+0x10>)
 80044f4:	f004 fdd0 	bl	8009098 <HAL_TIM_PWM_Stop_IT>
}
 80044f8:	bf00      	nop
 80044fa:	bd80      	pop	{r7, pc}
 80044fc:	20000994 	.word	0x20000994

08004500 <Powerstep01_Board_ReleaseReset>:
 * @brief  Releases the powerSTEP01 reset (pin set to High) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_Board_ReleaseReset(uint8_t deviceId)
{ 
 8004500:	b580      	push	{r7, lr}
 8004502:	b082      	sub	sp, #8
 8004504:	af00      	add	r7, sp, #0
 8004506:	4603      	mov	r3, r0
 8004508:	71fb      	strb	r3, [r7, #7]
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PORT, BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PIN, GPIO_PIN_SET);
 800450a:	2201      	movs	r2, #1
 800450c:	2104      	movs	r1, #4
 800450e:	4803      	ldr	r0, [pc, #12]	@ (800451c <Powerstep01_Board_ReleaseReset+0x1c>)
 8004510:	f001 fa76 	bl	8005a00 <HAL_GPIO_WritePin>
}
 8004514:	bf00      	nop
 8004516:	3708      	adds	r7, #8
 8004518:	46bd      	mov	sp, r7
 800451a:	bd80      	pop	{r7, pc}
 800451c:	40022000 	.word	0x40022000

08004520 <Powerstep01_Board_Reset>:
 * @brief  Resets the powerSTEP01 (reset pin set to low) of all devices
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void Powerstep01_Board_Reset(uint8_t deviceId)
{
 8004520:	b580      	push	{r7, lr}
 8004522:	b082      	sub	sp, #8
 8004524:	af00      	add	r7, sp, #0
 8004526:	4603      	mov	r3, r0
 8004528:	71fb      	strb	r3, [r7, #7]
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PORT, BSP_MOTOR_CONTROL_BOARD_STBY_RESET_PIN, GPIO_PIN_RESET);
 800452a:	2200      	movs	r2, #0
 800452c:	2104      	movs	r1, #4
 800452e:	4803      	ldr	r0, [pc, #12]	@ (800453c <Powerstep01_Board_Reset+0x1c>)
 8004530:	f001 fa66 	bl	8005a00 <HAL_GPIO_WritePin>
}
 8004534:	bf00      	nop
 8004536:	3708      	adds	r7, #8
 8004538:	46bd      	mov	sp, r7
 800453a:	bd80      	pop	{r7, pc}
 800453c:	40022000 	.word	0x40022000

08004540 <Powerstep01_Board_SpiInit>:
/******************************************************//**
 * @brief  Initialise the SPI used by powerSTEP01
 * @retval HAL_OK if SPI transaction is OK, HAL_KO else
 **********************************************************/
uint8_t Powerstep01_Board_SpiInit(void)
{
 8004540:	b580      	push	{r7, lr}
 8004542:	b082      	sub	sp, #8
 8004544:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef status;
  
  /* Initialises the SPI  --------------------------------------------------*/
  SpiHandle.Instance               = SPIx;
 8004546:	4b18      	ldr	r3, [pc, #96]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004548:	4a18      	ldr	r2, [pc, #96]	@ (80045ac <Powerstep01_Board_SpiInit+0x6c>)
 800454a:	601a      	str	r2, [r3, #0]
  SpiHandle.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_32; 
 800454c:	4b16      	ldr	r3, [pc, #88]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 800454e:	2220      	movs	r2, #32
 8004550:	61da      	str	r2, [r3, #28]
  SpiHandle.Init.Direction         = SPI_DIRECTION_2LINES;
 8004552:	4b15      	ldr	r3, [pc, #84]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004554:	2200      	movs	r2, #0
 8004556:	609a      	str	r2, [r3, #8]
  SpiHandle.Init.CLKPhase          = SPI_PHASE_2EDGE;    
 8004558:	4b13      	ldr	r3, [pc, #76]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 800455a:	2201      	movs	r2, #1
 800455c:	615a      	str	r2, [r3, #20]
  SpiHandle.Init.CLKPolarity       = SPI_POLARITY_HIGH;
 800455e:	4b12      	ldr	r3, [pc, #72]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004560:	2202      	movs	r2, #2
 8004562:	611a      	str	r2, [r3, #16]
  SpiHandle.Init.CRCCalculation    = SPI_CRCCALCULATION_DISABLED;
 8004564:	4b10      	ldr	r3, [pc, #64]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004566:	2200      	movs	r2, #0
 8004568:	629a      	str	r2, [r3, #40]	@ 0x28
  SpiHandle.Init.CRCPolynomial     = 7;
 800456a:	4b0f      	ldr	r3, [pc, #60]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 800456c:	2207      	movs	r2, #7
 800456e:	62da      	str	r2, [r3, #44]	@ 0x2c
  SpiHandle.Init.DataSize          = SPI_DATASIZE_8BIT;
 8004570:	4b0d      	ldr	r3, [pc, #52]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004572:	f44f 62e0 	mov.w	r2, #1792	@ 0x700
 8004576:	60da      	str	r2, [r3, #12]
  SpiHandle.Init.FirstBit          = SPI_FIRSTBIT_MSB;
 8004578:	4b0b      	ldr	r3, [pc, #44]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 800457a:	2200      	movs	r2, #0
 800457c:	621a      	str	r2, [r3, #32]
  SpiHandle.Init.NSS               = SPI_NSS_SOFT;
 800457e:	4b0a      	ldr	r3, [pc, #40]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004580:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004584:	619a      	str	r2, [r3, #24]
  SpiHandle.Init.TIMode            = SPI_TIMODE_DISABLED;
 8004586:	4b08      	ldr	r3, [pc, #32]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004588:	2200      	movs	r2, #0
 800458a:	625a      	str	r2, [r3, #36]	@ 0x24
  
  SpiHandle.Init.Mode = SPI_MODE_MASTER;
 800458c:	4b06      	ldr	r3, [pc, #24]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 800458e:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8004592:	605a      	str	r2, [r3, #4]
  
  status = HAL_SPI_Init(&SpiHandle);
 8004594:	4804      	ldr	r0, [pc, #16]	@ (80045a8 <Powerstep01_Board_SpiInit+0x68>)
 8004596:	f003 fe89 	bl	80082ac <HAL_SPI_Init>
 800459a:	4603      	mov	r3, r0
 800459c:	71fb      	strb	r3, [r7, #7]
  
  return (uint8_t) status;
 800459e:	79fb      	ldrb	r3, [r7, #7]
}
 80045a0:	4618      	mov	r0, r3
 80045a2:	3708      	adds	r7, #8
 80045a4:	46bd      	mov	sp, r7
 80045a6:	bd80      	pop	{r7, pc}
 80045a8:	20000908 	.word	0x20000908
 80045ac:	40003800 	.word	0x40003800

080045b0 <Powerstep01_Board_SpiWriteBytes>:
 * @param[in] pReceivedByte pointer to the received byte
 * @param[in] nbDevices Number of device in the SPI chain
 * @retval HAL_OK if SPI transaction is OK, HAL_KO else 
 **********************************************************/
uint8_t Powerstep01_Board_SpiWriteBytes(uint8_t *pByteToTransmit, uint8_t *pReceivedByte, uint8_t nbDevices)
{
 80045b0:	b580      	push	{r7, lr}
 80045b2:	b088      	sub	sp, #32
 80045b4:	af02      	add	r7, sp, #8
 80045b6:	60f8      	str	r0, [r7, #12]
 80045b8:	60b9      	str	r1, [r7, #8]
 80045ba:	4613      	mov	r3, r2
 80045bc:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status;
  uint32_t i;
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_CS_PORT, BSP_MOTOR_CONTROL_BOARD_CS_PIN, GPIO_PIN_RESET); 
 80045be:	2200      	movs	r2, #0
 80045c0:	f44f 7180 	mov.w	r1, #256	@ 0x100
 80045c4:	4816      	ldr	r0, [pc, #88]	@ (8004620 <Powerstep01_Board_SpiWriteBytes+0x70>)
 80045c6:	f001 fa1b 	bl	8005a00 <HAL_GPIO_WritePin>
  for (i = 0; i < nbDevices; i++)
 80045ca:	2300      	movs	r3, #0
 80045cc:	613b      	str	r3, [r7, #16]
 80045ce:	e016      	b.n	80045fe <Powerstep01_Board_SpiWriteBytes+0x4e>
  {
    status = HAL_SPI_TransmitReceive(&SpiHandle, pByteToTransmit, pReceivedByte, 1, SPIx_TIMEOUT_MAX);
 80045d0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80045d4:	9300      	str	r3, [sp, #0]
 80045d6:	2301      	movs	r3, #1
 80045d8:	68ba      	ldr	r2, [r7, #8]
 80045da:	68f9      	ldr	r1, [r7, #12]
 80045dc:	4811      	ldr	r0, [pc, #68]	@ (8004624 <Powerstep01_Board_SpiWriteBytes+0x74>)
 80045de:	f003 ff47 	bl	8008470 <HAL_SPI_TransmitReceive>
 80045e2:	4603      	mov	r3, r0
 80045e4:	75fb      	strb	r3, [r7, #23]
    if (status != HAL_OK)
 80045e6:	7dfb      	ldrb	r3, [r7, #23]
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	d10d      	bne.n	8004608 <Powerstep01_Board_SpiWriteBytes+0x58>
    {
      break;
    }
    pByteToTransmit++;
 80045ec:	68fb      	ldr	r3, [r7, #12]
 80045ee:	3301      	adds	r3, #1
 80045f0:	60fb      	str	r3, [r7, #12]
    pReceivedByte++;
 80045f2:	68bb      	ldr	r3, [r7, #8]
 80045f4:	3301      	adds	r3, #1
 80045f6:	60bb      	str	r3, [r7, #8]
  for (i = 0; i < nbDevices; i++)
 80045f8:	693b      	ldr	r3, [r7, #16]
 80045fa:	3301      	adds	r3, #1
 80045fc:	613b      	str	r3, [r7, #16]
 80045fe:	79fb      	ldrb	r3, [r7, #7]
 8004600:	693a      	ldr	r2, [r7, #16]
 8004602:	429a      	cmp	r2, r3
 8004604:	d3e4      	bcc.n	80045d0 <Powerstep01_Board_SpiWriteBytes+0x20>
 8004606:	e000      	b.n	800460a <Powerstep01_Board_SpiWriteBytes+0x5a>
      break;
 8004608:	bf00      	nop
  }
  HAL_GPIO_WritePin(BSP_MOTOR_CONTROL_BOARD_CS_PORT, BSP_MOTOR_CONTROL_BOARD_CS_PIN, GPIO_PIN_SET); 
 800460a:	2201      	movs	r2, #1
 800460c:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8004610:	4803      	ldr	r0, [pc, #12]	@ (8004620 <Powerstep01_Board_SpiWriteBytes+0x70>)
 8004612:	f001 f9f5 	bl	8005a00 <HAL_GPIO_WritePin>
  
  return (uint8_t) status;  
 8004616:	7dfb      	ldrb	r3, [r7, #23]
}
 8004618:	4618      	mov	r0, r3
 800461a:	3718      	adds	r7, #24
 800461c:	46bd      	mov	sp, r7
 800461e:	bd80      	pop	{r7, pc}
 8004620:	40020000 	.word	0x40020000
 8004624:	20000908 	.word	0x20000908

08004628 <Powerstep01_Board_BUSY_PIN_GetState>:
/******************************************************//**
 * @brief  Returns the BUSY pin state.
 * @retval The BUSY pin value.
 **********************************************************/
uint32_t Powerstep01_Board_BUSY_PIN_GetState(void)
{
 8004628:	b580      	push	{r7, lr}
 800462a:	af00      	add	r7, sp, #0
  return HAL_GPIO_ReadPin(BSP_MOTOR_CONTROL_BOARD_BUSY_PORT, BSP_MOTOR_CONTROL_BOARD_BUSY_PIN);
 800462c:	2180      	movs	r1, #128	@ 0x80
 800462e:	4803      	ldr	r0, [pc, #12]	@ (800463c <Powerstep01_Board_BUSY_PIN_GetState+0x14>)
 8004630:	f001 f9ce 	bl	80059d0 <HAL_GPIO_ReadPin>
 8004634:	4603      	mov	r3, r0
}
 8004636:	4618      	mov	r0, r3
 8004638:	bd80      	pop	{r7, pc}
 800463a:	bf00      	nop
 800463c:	40021800 	.word	0x40021800

08004640 <Powerstep01_Board_FLAG_PIN_GetState>:
/******************************************************//**
 * @brief  Returns the FLAG pin state.
 * @retval The FLAG pin value.
 **********************************************************/
uint32_t Powerstep01_Board_FLAG_PIN_GetState(void)
{
 8004640:	b580      	push	{r7, lr}
 8004642:	af00      	add	r7, sp, #0
  return HAL_GPIO_ReadPin(BSP_MOTOR_CONTROL_BOARD_FLAG_PORT, BSP_MOTOR_CONTROL_BOARD_FLAG_PIN);
 8004644:	2140      	movs	r1, #64	@ 0x40
 8004646:	4803      	ldr	r0, [pc, #12]	@ (8004654 <Powerstep01_Board_FLAG_PIN_GetState+0x14>)
 8004648:	f001 f9c2 	bl	80059d0 <HAL_GPIO_ReadPin>
 800464c:	4603      	mov	r3, r0
}
 800464e:	4618      	mov	r0, r3
 8004650:	bd80      	pop	{r7, pc}
 8004652:	bf00      	nop
 8004654:	40021800 	.word	0x40021800

08004658 <L6474_GetMotorHandle>:

/** @defgroup MOTOR_CONTROL_Weak_Private_Functions MOTOR CONTROL Weak Private Functions
 * @{
 */
/// Get motor handle for L6474
__weak motorDrv_t* L6474_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8004658:	b480      	push	{r7}
 800465a:	af00      	add	r7, sp, #0
 800465c:	2300      	movs	r3, #0
 800465e:	4618      	mov	r0, r3
 8004660:	46bd      	mov	sp, r7
 8004662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004666:	4770      	bx	lr

08004668 <l647x_GetMotorHandle>:
/// Get motor handle for L647x
__weak motorDrv_t* l647x_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8004668:	b480      	push	{r7}
 800466a:	af00      	add	r7, sp, #0
 800466c:	2300      	movs	r3, #0
 800466e:	4618      	mov	r0, r3
 8004670:	46bd      	mov	sp, r7
 8004672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004676:	4770      	bx	lr

08004678 <l648x_GetMotorHandle>:
/// Get motor handle for L648x
__weak motorDrv_t* l648x_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8004678:	b480      	push	{r7}
 800467a:	af00      	add	r7, sp, #0
 800467c:	2300      	movs	r3, #0
 800467e:	4618      	mov	r0, r3
 8004680:	46bd      	mov	sp, r7
 8004682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004686:	4770      	bx	lr

08004688 <L6206_GetMotorHandle>:
/// Get motor handle for Powerstep
__weak motorDrv_t* Powerstep01_GetMotorHandle(void){return ((motorDrv_t* )0);}
/// Get motor handle for L6206
__weak motorDrv_t* L6206_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8004688:	b480      	push	{r7}
 800468a:	af00      	add	r7, sp, #0
 800468c:	2300      	movs	r3, #0
 800468e:	4618      	mov	r0, r3
 8004690:	46bd      	mov	sp, r7
 8004692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004696:	4770      	bx	lr

08004698 <L6208_GetMotorHandle>:
/// Get motor handle for L6208
__weak motorDrv_t* L6208_GetMotorHandle(void){return ((motorDrv_t* )0);}
 8004698:	b480      	push	{r7}
 800469a:	af00      	add	r7, sp, #0
 800469c:	2300      	movs	r3, #0
 800469e:	4618      	mov	r0, r3
 80046a0:	46bd      	mov	sp, r7
 80046a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046a6:	4770      	bx	lr

080046a8 <Stspin220_GetMotorHandle>:
/// Get motor handle for STSPIN220
__weak motorDrv_t* Stspin220_GetMotorHandle(void){return ((motorDrv_t* )0);}
 80046a8:	b480      	push	{r7}
 80046aa:	af00      	add	r7, sp, #0
 80046ac:	2300      	movs	r3, #0
 80046ae:	4618      	mov	r0, r3
 80046b0:	46bd      	mov	sp, r7
 80046b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046b6:	4770      	bx	lr

080046b8 <Stspin240_250_GetMotorHandle>:
/// Get motor handle for STSPIN240
__weak motorDrv_t* Stspin240_250_GetMotorHandle(void){return ((motorDrv_t* )0);}
 80046b8:	b480      	push	{r7}
 80046ba:	af00      	add	r7, sp, #0
 80046bc:	2300      	movs	r3, #0
 80046be:	4618      	mov	r0, r3
 80046c0:	46bd      	mov	sp, r7
 80046c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c6:	4770      	bx	lr

080046c8 <BSP_MotorControl_AttachErrorHandler>:
 * @param[in] callback Name of the callback to attach 
 * to the error Hanlder
 * @retval None
 **********************************************************/
void BSP_MotorControl_AttachErrorHandler(void (*callback)(uint16_t))
{
 80046c8:	b580      	push	{r7, lr}
 80046ca:	b082      	sub	sp, #8
 80046cc:	af00      	add	r7, sp, #0
 80046ce:	6078      	str	r0, [r7, #4]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->AttachErrorHandler != 0))
 80046d0:	4b0b      	ldr	r3, [pc, #44]	@ (8004700 <BSP_MotorControl_AttachErrorHandler+0x38>)
 80046d2:	681b      	ldr	r3, [r3, #0]
 80046d4:	2b00      	cmp	r3, #0
 80046d6:	d00a      	beq.n	80046ee <BSP_MotorControl_AttachErrorHandler+0x26>
 80046d8:	4b09      	ldr	r3, [pc, #36]	@ (8004700 <BSP_MotorControl_AttachErrorHandler+0x38>)
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	689b      	ldr	r3, [r3, #8]
 80046de:	2b00      	cmp	r3, #0
 80046e0:	d005      	beq.n	80046ee <BSP_MotorControl_AttachErrorHandler+0x26>
  {
    motorDrvHandle->AttachErrorHandler(callback);
 80046e2:	4b07      	ldr	r3, [pc, #28]	@ (8004700 <BSP_MotorControl_AttachErrorHandler+0x38>)
 80046e4:	681b      	ldr	r3, [r3, #0]
 80046e6:	689b      	ldr	r3, [r3, #8]
 80046e8:	6878      	ldr	r0, [r7, #4]
 80046ea:	4798      	blx	r3
 80046ec:	e004      	b.n	80046f8 <BSP_MotorControl_AttachErrorHandler+0x30>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(2);
 80046ee:	f640 0002 	movw	r0, #2050	@ 0x802
 80046f2:	f000 f843 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }
}
 80046f6:	bf00      	nop
 80046f8:	bf00      	nop
 80046fa:	3708      	adds	r7, #8
 80046fc:	46bd      	mov	sp, r7
 80046fe:	bd80      	pop	{r7, pc}
 8004700:	20000a50 	.word	0x20000a50

08004704 <BSP_MotorControl_AttachFlagInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Flag interrupt Hanlder
 * @retval None
 **********************************************************/
void BSP_MotorControl_AttachFlagInterrupt(void (*callback)(void))
{
 8004704:	b580      	push	{r7, lr}
 8004706:	b082      	sub	sp, #8
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->AttachFlagInterrupt != 0))
 800470c:	4b0b      	ldr	r3, [pc, #44]	@ (800473c <BSP_MotorControl_AttachFlagInterrupt+0x38>)
 800470e:	681b      	ldr	r3, [r3, #0]
 8004710:	2b00      	cmp	r3, #0
 8004712:	d00a      	beq.n	800472a <BSP_MotorControl_AttachFlagInterrupt+0x26>
 8004714:	4b09      	ldr	r3, [pc, #36]	@ (800473c <BSP_MotorControl_AttachFlagInterrupt+0x38>)
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	68db      	ldr	r3, [r3, #12]
 800471a:	2b00      	cmp	r3, #0
 800471c:	d005      	beq.n	800472a <BSP_MotorControl_AttachFlagInterrupt+0x26>
  {
    motorDrvHandle->AttachFlagInterrupt(callback);
 800471e:	4b07      	ldr	r3, [pc, #28]	@ (800473c <BSP_MotorControl_AttachFlagInterrupt+0x38>)
 8004720:	681b      	ldr	r3, [r3, #0]
 8004722:	68db      	ldr	r3, [r3, #12]
 8004724:	6878      	ldr	r0, [r7, #4]
 8004726:	4798      	blx	r3
 8004728:	e004      	b.n	8004734 <BSP_MotorControl_AttachFlagInterrupt+0x30>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(3);
 800472a:	f640 0003 	movw	r0, #2051	@ 0x803
 800472e:	f000 f825 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }  
}
 8004732:	bf00      	nop
 8004734:	bf00      	nop
 8004736:	3708      	adds	r7, #8
 8004738:	46bd      	mov	sp, r7
 800473a:	bd80      	pop	{r7, pc}
 800473c:	20000a50 	.word	0x20000a50

08004740 <BSP_MotorControl_AttachBusyInterrupt>:
 * @param[in] callback Name of the callback to attach 
 * to the Busy interrupt Hanlder
 * @retval None
 **********************************************************/
void BSP_MotorControl_AttachBusyInterrupt(void (*callback)(void))
{
 8004740:	b580      	push	{r7, lr}
 8004742:	b082      	sub	sp, #8
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->AttachBusyInterrupt != 0))
 8004748:	4b0b      	ldr	r3, [pc, #44]	@ (8004778 <BSP_MotorControl_AttachBusyInterrupt+0x38>)
 800474a:	681b      	ldr	r3, [r3, #0]
 800474c:	2b00      	cmp	r3, #0
 800474e:	d00a      	beq.n	8004766 <BSP_MotorControl_AttachBusyInterrupt+0x26>
 8004750:	4b09      	ldr	r3, [pc, #36]	@ (8004778 <BSP_MotorControl_AttachBusyInterrupt+0x38>)
 8004752:	681b      	ldr	r3, [r3, #0]
 8004754:	691b      	ldr	r3, [r3, #16]
 8004756:	2b00      	cmp	r3, #0
 8004758:	d005      	beq.n	8004766 <BSP_MotorControl_AttachBusyInterrupt+0x26>
  {
    motorDrvHandle->AttachBusyInterrupt(callback);
 800475a:	4b07      	ldr	r3, [pc, #28]	@ (8004778 <BSP_MotorControl_AttachBusyInterrupt+0x38>)
 800475c:	681b      	ldr	r3, [r3, #0]
 800475e:	691b      	ldr	r3, [r3, #16]
 8004760:	6878      	ldr	r0, [r7, #4]
 8004762:	4798      	blx	r3
 8004764:	e004      	b.n	8004770 <BSP_MotorControl_AttachBusyInterrupt+0x30>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(4);
 8004766:	f640 0004 	movw	r0, #2052	@ 0x804
 800476a:	f000 f807 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }  
}
 800476e:	bf00      	nop
 8004770:	bf00      	nop
 8004772:	3708      	adds	r7, #8
 8004774:	46bd      	mov	sp, r7
 8004776:	bd80      	pop	{r7, pc}
 8004778:	20000a50 	.word	0x20000a50

0800477c <BSP_MotorControl_ErrorHandler>:
 * @brief Motor control error handler
 * @param[in] error number of the error
 * @retval None
 **********************************************************/
void BSP_MotorControl_ErrorHandler(uint16_t error)
{
 800477c:	b580      	push	{r7, lr}
 800477e:	b082      	sub	sp, #8
 8004780:	af00      	add	r7, sp, #0
 8004782:	4603      	mov	r3, r0
 8004784:	80fb      	strh	r3, [r7, #6]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->ErrorHandler != 0))
 8004786:	4b0b      	ldr	r3, [pc, #44]	@ (80047b4 <BSP_MotorControl_ErrorHandler+0x38>)
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	2b00      	cmp	r3, #0
 800478c:	d00d      	beq.n	80047aa <BSP_MotorControl_ErrorHandler+0x2e>
 800478e:	4b09      	ldr	r3, [pc, #36]	@ (80047b4 <BSP_MotorControl_ErrorHandler+0x38>)
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8004796:	2b00      	cmp	r3, #0
 8004798:	d007      	beq.n	80047aa <BSP_MotorControl_ErrorHandler+0x2e>
  {
    motorDrvHandle->ErrorHandler(error);
 800479a:	4b06      	ldr	r3, [pc, #24]	@ (80047b4 <BSP_MotorControl_ErrorHandler+0x38>)
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 80047a2:	88fa      	ldrh	r2, [r7, #6]
 80047a4:	4610      	mov	r0, r2
 80047a6:	4798      	blx	r3
    while(1)
    {
      /* Infinite loop as Error handler must be defined*/
    }
  }
}
 80047a8:	e000      	b.n	80047ac <BSP_MotorControl_ErrorHandler+0x30>
    while(1)
 80047aa:	e7fe      	b.n	80047aa <BSP_MotorControl_ErrorHandler+0x2e>
}
 80047ac:	3708      	adds	r7, #8
 80047ae:	46bd      	mov	sp, r7
 80047b0:	bd80      	pop	{r7, pc}
 80047b2:	bf00      	nop
 80047b4:	20000a50 	.word	0x20000a50

080047b8 <BSP_MotorControl_Init>:
 * @param[in] id Component Id (L6474, Powerstep01,...)
 * @param[in] initDeviceParameters Initialization structure for one device
 * @retval None
 **********************************************************/
void BSP_MotorControl_Init(uint16_t id, void* initDeviceParameters)
{
 80047b8:	b580      	push	{r7, lr}
 80047ba:	b082      	sub	sp, #8
 80047bc:	af00      	add	r7, sp, #0
 80047be:	4603      	mov	r3, r0
 80047c0:	6039      	str	r1, [r7, #0]
 80047c2:	80fb      	strh	r3, [r7, #6]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->Init != 0))
 80047c4:	4b0b      	ldr	r3, [pc, #44]	@ (80047f4 <BSP_MotorControl_Init+0x3c>)
 80047c6:	681b      	ldr	r3, [r3, #0]
 80047c8:	2b00      	cmp	r3, #0
 80047ca:	d00a      	beq.n	80047e2 <BSP_MotorControl_Init+0x2a>
 80047cc:	4b09      	ldr	r3, [pc, #36]	@ (80047f4 <BSP_MotorControl_Init+0x3c>)
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	681b      	ldr	r3, [r3, #0]
 80047d2:	2b00      	cmp	r3, #0
 80047d4:	d005      	beq.n	80047e2 <BSP_MotorControl_Init+0x2a>
  {
    motorDrvHandle->Init(initDeviceParameters);
 80047d6:	4b07      	ldr	r3, [pc, #28]	@ (80047f4 <BSP_MotorControl_Init+0x3c>)
 80047d8:	681b      	ldr	r3, [r3, #0]
 80047da:	681b      	ldr	r3, [r3, #0]
 80047dc:	6838      	ldr	r0, [r7, #0]
 80047de:	4798      	blx	r3
 80047e0:	e004      	b.n	80047ec <BSP_MotorControl_Init+0x34>
  }  
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(0);
 80047e2:	f44f 6000 	mov.w	r0, #2048	@ 0x800
 80047e6:	f7ff ffc9 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }  
}
 80047ea:	bf00      	nop
 80047ec:	bf00      	nop
 80047ee:	3708      	adds	r7, #8
 80047f0:	46bd      	mov	sp, r7
 80047f2:	bd80      	pop	{r7, pc}
 80047f4:	20000a50 	.word	0x20000a50

080047f8 <BSP_MotorControl_Move>:
 * @param[in] direction FORWARD or BACKWARD
 * @param[in] stepCount Number of steps to perform
 * @retval None
 **********************************************************/
void BSP_MotorControl_Move(uint8_t deviceId, motorDir_t direction, uint32_t stepCount)
{
 80047f8:	b580      	push	{r7, lr}
 80047fa:	b082      	sub	sp, #8
 80047fc:	af00      	add	r7, sp, #0
 80047fe:	4603      	mov	r3, r0
 8004800:	603a      	str	r2, [r7, #0]
 8004802:	71fb      	strb	r3, [r7, #7]
 8004804:	460b      	mov	r3, r1
 8004806:	71bb      	strb	r3, [r7, #6]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->Move != 0))
 8004808:	4b0c      	ldr	r3, [pc, #48]	@ (800483c <BSP_MotorControl_Move+0x44>)
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	2b00      	cmp	r3, #0
 800480e:	d00c      	beq.n	800482a <BSP_MotorControl_Move+0x32>
 8004810:	4b0a      	ldr	r3, [pc, #40]	@ (800483c <BSP_MotorControl_Move+0x44>)
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004816:	2b00      	cmp	r3, #0
 8004818:	d007      	beq.n	800482a <BSP_MotorControl_Move+0x32>
  {
    motorDrvHandle->Move(deviceId, direction, stepCount);
 800481a:	4b08      	ldr	r3, [pc, #32]	@ (800483c <BSP_MotorControl_Move+0x44>)
 800481c:	681b      	ldr	r3, [r3, #0]
 800481e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004820:	79b9      	ldrb	r1, [r7, #6]
 8004822:	79f8      	ldrb	r0, [r7, #7]
 8004824:	683a      	ldr	r2, [r7, #0]
 8004826:	4798      	blx	r3
 8004828:	e004      	b.n	8004834 <BSP_MotorControl_Move+0x3c>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(19);
 800482a:	f640 0013 	movw	r0, #2067	@ 0x813
 800482e:	f7ff ffa5 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }      
}
 8004832:	bf00      	nop
 8004834:	bf00      	nop
 8004836:	3708      	adds	r7, #8
 8004838:	46bd      	mov	sp, r7
 800483a:	bd80      	pop	{r7, pc}
 800483c:	20000a50 	.word	0x20000a50

08004840 <BSP_MotorControl_CmdGetStatus>:
 * the flags of the status register are reset. 
 * This is not the case when the status register is read with the
 * GetParam command (via the functions ReadStatusRegister or CmdGetParam).
 **********************************************************/
uint16_t BSP_MotorControl_CmdGetStatus(uint8_t deviceId)
{
 8004840:	b580      	push	{r7, lr}
 8004842:	b084      	sub	sp, #16
 8004844:	af00      	add	r7, sp, #0
 8004846:	4603      	mov	r3, r0
 8004848:	71fb      	strb	r3, [r7, #7]
  uint16_t status = 0;
 800484a:	2300      	movs	r3, #0
 800484c:	81fb      	strh	r3, [r7, #14]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->CmdGetStatus != 0))
 800484e:	4b0e      	ldr	r3, [pc, #56]	@ (8004888 <BSP_MotorControl_CmdGetStatus+0x48>)
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	2b00      	cmp	r3, #0
 8004854:	d00f      	beq.n	8004876 <BSP_MotorControl_CmdGetStatus+0x36>
 8004856:	4b0c      	ldr	r3, [pc, #48]	@ (8004888 <BSP_MotorControl_CmdGetStatus+0x48>)
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800485e:	2b00      	cmp	r3, #0
 8004860:	d009      	beq.n	8004876 <BSP_MotorControl_CmdGetStatus+0x36>
  {
    status = motorDrvHandle->CmdGetStatus(deviceId);
 8004862:	4b09      	ldr	r3, [pc, #36]	@ (8004888 <BSP_MotorControl_CmdGetStatus+0x48>)
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800486a:	79fa      	ldrb	r2, [r7, #7]
 800486c:	4610      	mov	r0, r2
 800486e:	4798      	blx	r3
 8004870:	4603      	mov	r3, r0
 8004872:	81fb      	strh	r3, [r7, #14]
 8004874:	e003      	b.n	800487e <BSP_MotorControl_CmdGetStatus+0x3e>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(34);
 8004876:	f640 0022 	movw	r0, #2082	@ 0x822
 800487a:	f7ff ff7f 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }      
  return (status);
 800487e:	89fb      	ldrh	r3, [r7, #14]
}
 8004880:	4618      	mov	r0, r3
 8004882:	3710      	adds	r7, #16
 8004884:	46bd      	mov	sp, r7
 8004886:	bd80      	pop	{r7, pc}
 8004888:	20000a50 	.word	0x20000a50

0800488c <BSP_MotorControl_CheckBusyHw>:
 * busy pin position. 
 * The busy pin is shared between all devices.
 * @retval One if at least one device is busy, otherwise zero
 **********************************************************/
uint8_t BSP_MotorControl_CheckBusyHw(void)
{
 800488c:	b580      	push	{r7, lr}
 800488e:	b082      	sub	sp, #8
 8004890:	af00      	add	r7, sp, #0
  uint8_t value = 0;
 8004892:	2300      	movs	r3, #0
 8004894:	71fb      	strb	r3, [r7, #7]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->CheckBusyHw != 0))
 8004896:	4b0d      	ldr	r3, [pc, #52]	@ (80048cc <BSP_MotorControl_CheckBusyHw+0x40>)
 8004898:	681b      	ldr	r3, [r3, #0]
 800489a:	2b00      	cmp	r3, #0
 800489c:	d00d      	beq.n	80048ba <BSP_MotorControl_CheckBusyHw+0x2e>
 800489e:	4b0b      	ldr	r3, [pc, #44]	@ (80048cc <BSP_MotorControl_CheckBusyHw+0x40>)
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80048a6:	2b00      	cmp	r3, #0
 80048a8:	d007      	beq.n	80048ba <BSP_MotorControl_CheckBusyHw+0x2e>
  {
    value = motorDrvHandle->CheckBusyHw();
 80048aa:	4b08      	ldr	r3, [pc, #32]	@ (80048cc <BSP_MotorControl_CheckBusyHw+0x40>)
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 80048b2:	4798      	blx	r3
 80048b4:	4603      	mov	r3, r0
 80048b6:	71fb      	strb	r3, [r7, #7]
 80048b8:	e003      	b.n	80048c2 <BSP_MotorControl_CheckBusyHw+0x36>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(43);
 80048ba:	f640 002b 	movw	r0, #2091	@ 0x82b
 80048be:	f7ff ff5d 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }
  return (value);
 80048c2:	79fb      	ldrb	r3, [r7, #7]
}
 80048c4:	4618      	mov	r0, r3
 80048c6:	3708      	adds	r7, #8
 80048c8:	46bd      	mov	sp, r7
 80048ca:	bd80      	pop	{r7, pc}
 80048cc:	20000a50 	.word	0x20000a50

080048d0 <BSP_MotorControl_CmdSoftHiZ>:
 * @brief Issues Soft HiZ command
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval None
 **********************************************************/
void BSP_MotorControl_CmdSoftHiZ(uint8_t deviceId)
{
 80048d0:	b580      	push	{r7, lr}
 80048d2:	b082      	sub	sp, #8
 80048d4:	af00      	add	r7, sp, #0
 80048d6:	4603      	mov	r3, r0
 80048d8:	71fb      	strb	r3, [r7, #7]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->CmdSoftHiZ != 0))
 80048da:	4b0d      	ldr	r3, [pc, #52]	@ (8004910 <BSP_MotorControl_CmdSoftHiZ+0x40>)
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d00d      	beq.n	80048fe <BSP_MotorControl_CmdSoftHiZ+0x2e>
 80048e2:	4b0b      	ldr	r3, [pc, #44]	@ (8004910 <BSP_MotorControl_CmdSoftHiZ+0x40>)
 80048e4:	681b      	ldr	r3, [r3, #0]
 80048e6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 80048ea:	2b00      	cmp	r3, #0
 80048ec:	d007      	beq.n	80048fe <BSP_MotorControl_CmdSoftHiZ+0x2e>
  {
    motorDrvHandle->CmdSoftHiZ(deviceId);
 80048ee:	4b08      	ldr	r3, [pc, #32]	@ (8004910 <BSP_MotorControl_CmdSoftHiZ+0x40>)
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 80048f6:	79fa      	ldrb	r2, [r7, #7]
 80048f8:	4610      	mov	r0, r2
 80048fa:	4798      	blx	r3
 80048fc:	e004      	b.n	8004908 <BSP_MotorControl_CmdSoftHiZ+0x38>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(51);
 80048fe:	f640 0033 	movw	r0, #2099	@ 0x833
 8004902:	f7ff ff3b 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }
}
 8004906:	bf00      	nop
 8004908:	bf00      	nop
 800490a:	3708      	adds	r7, #8
 800490c:	46bd      	mov	sp, r7
 800490e:	bd80      	pop	{r7, pc}
 8004910:	20000a50 	.word	0x20000a50

08004914 <BSP_MotorControl_IsDeviceBusy>:
 * by reading the Busy bit of its status Register
 * @param[in] deviceId (from 0 to MAX_NUMBER_OF_DEVICES-1 )
 * @retval true if device is busy, else false
 **********************************************************/
bool BSP_MotorControl_IsDeviceBusy(uint8_t deviceId)
{
 8004914:	b580      	push	{r7, lr}
 8004916:	b084      	sub	sp, #16
 8004918:	af00      	add	r7, sp, #0
 800491a:	4603      	mov	r3, r0
 800491c:	71fb      	strb	r3, [r7, #7]
  bool value = 0;
 800491e:	2300      	movs	r3, #0
 8004920:	73fb      	strb	r3, [r7, #15]
  if ((motorDrvHandle != 0)&&(motorDrvHandle->IsDeviceBusy != 0))
 8004922:	4b0e      	ldr	r3, [pc, #56]	@ (800495c <BSP_MotorControl_IsDeviceBusy+0x48>)
 8004924:	681b      	ldr	r3, [r3, #0]
 8004926:	2b00      	cmp	r3, #0
 8004928:	d00f      	beq.n	800494a <BSP_MotorControl_IsDeviceBusy+0x36>
 800492a:	4b0c      	ldr	r3, [pc, #48]	@ (800495c <BSP_MotorControl_IsDeviceBusy+0x48>)
 800492c:	681b      	ldr	r3, [r3, #0]
 800492e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8004932:	2b00      	cmp	r3, #0
 8004934:	d009      	beq.n	800494a <BSP_MotorControl_IsDeviceBusy+0x36>
  {
    value = motorDrvHandle->IsDeviceBusy(deviceId);
 8004936:	4b09      	ldr	r3, [pc, #36]	@ (800495c <BSP_MotorControl_IsDeviceBusy+0x48>)
 8004938:	681b      	ldr	r3, [r3, #0]
 800493a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800493e:	79fa      	ldrb	r2, [r7, #7]
 8004940:	4610      	mov	r0, r2
 8004942:	4798      	blx	r3
 8004944:	4603      	mov	r3, r0
 8004946:	73fb      	strb	r3, [r7, #15]
 8004948:	e003      	b.n	8004952 <BSP_MotorControl_IsDeviceBusy+0x3e>
  }
  else
  {
    MOTOR_CONTROL_ERROR_UNDEFINED_FUNCTION(56);
 800494a:	f640 0038 	movw	r0, #2104	@ 0x838
 800494e:	f7ff ff15 	bl	800477c <BSP_MotorControl_ErrorHandler>
  }
  return (value);
 8004952:	7bfb      	ldrb	r3, [r7, #15]
}
 8004954:	4618      	mov	r0, r3
 8004956:	3710      	adds	r7, #16
 8004958:	46bd      	mov	sp, r7
 800495a:	bd80      	pop	{r7, pc}
 800495c:	20000a50 	.word	0x20000a50

08004960 <BSP_MotorControl_SetNbDevices>:
 * from 1 to MAX_NUMBER_OF_DEVICES
 * @retval TRUE if successfull, FALSE if failure, attempt 
 * to set a number of devices greater than MAX_NUMBER_OF_DEVICES
 **********************************************************/
bool BSP_MotorControl_SetNbDevices(uint16_t id, uint8_t nbDevices)
{
 8004960:	b580      	push	{r7, lr}
 8004962:	b084      	sub	sp, #16
 8004964:	af00      	add	r7, sp, #0
 8004966:	4603      	mov	r3, r0
 8004968:	460a      	mov	r2, r1
 800496a:	80fb      	strh	r3, [r7, #6]
 800496c:	4613      	mov	r3, r2
 800496e:	717b      	strb	r3, [r7, #5]
  MotorControlBoardId = id;
 8004970:	4a40      	ldr	r2, [pc, #256]	@ (8004a74 <BSP_MotorControl_SetNbDevices+0x114>)
 8004972:	88fb      	ldrh	r3, [r7, #6]
 8004974:	8013      	strh	r3, [r2, #0]
  bool status = FALSE;
 8004976:	2300      	movs	r3, #0
 8004978:	73fb      	strb	r3, [r7, #15]
  if (id == BSP_MOTOR_CONTROL_BOARD_ID_L6474)
 800497a:	88fb      	ldrh	r3, [r7, #6]
 800497c:	f641 124a 	movw	r2, #6474	@ 0x194a
 8004980:	4293      	cmp	r3, r2
 8004982:	d105      	bne.n	8004990 <BSP_MotorControl_SetNbDevices+0x30>
  {
    motorDrvHandle = L6474_GetMotorHandle();
 8004984:	f7ff fe68 	bl	8004658 <L6474_GetMotorHandle>
 8004988:	4603      	mov	r3, r0
 800498a:	4a3b      	ldr	r2, [pc, #236]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 800498c:	6013      	str	r3, [r2, #0]
 800498e:	e055      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_POWERSTEP01)
 8004990:	88fb      	ldrh	r3, [r7, #6]
 8004992:	2b01      	cmp	r3, #1
 8004994:	d105      	bne.n	80049a2 <BSP_MotorControl_SetNbDevices+0x42>
  {
    motorDrvHandle = Powerstep01_GetMotorHandle();
 8004996:	f7fd ff4f 	bl	8002838 <Powerstep01_GetMotorHandle>
 800499a:	4603      	mov	r3, r0
 800499c:	4a36      	ldr	r2, [pc, #216]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 800499e:	6013      	str	r3, [r2, #0]
 80049a0:	e04c      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_L6206)
 80049a2:	88fb      	ldrh	r3, [r7, #6]
 80049a4:	f641 023e 	movw	r2, #6206	@ 0x183e
 80049a8:	4293      	cmp	r3, r2
 80049aa:	d105      	bne.n	80049b8 <BSP_MotorControl_SetNbDevices+0x58>
  {
    motorDrvHandle = L6206_GetMotorHandle();
 80049ac:	f7ff fe6c 	bl	8004688 <L6206_GetMotorHandle>
 80049b0:	4603      	mov	r3, r0
 80049b2:	4a31      	ldr	r2, [pc, #196]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 80049b4:	6013      	str	r3, [r2, #0]
 80049b6:	e041      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_L6208)
 80049b8:	88fb      	ldrh	r3, [r7, #6]
 80049ba:	f5b3 5fc2 	cmp.w	r3, #6208	@ 0x1840
 80049be:	d105      	bne.n	80049cc <BSP_MotorControl_SetNbDevices+0x6c>
  {
    motorDrvHandle = L6208_GetMotorHandle();
 80049c0:	f7ff fe6a 	bl	8004698 <L6208_GetMotorHandle>
 80049c4:	4603      	mov	r3, r0
 80049c6:	4a2c      	ldr	r2, [pc, #176]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 80049c8:	6013      	str	r3, [r2, #0]
 80049ca:	e037      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if (id == BSP_MOTOR_CONTROL_BOARD_ID_STSPIN220)
 80049cc:	88fb      	ldrh	r3, [r7, #6]
 80049ce:	2bdc      	cmp	r3, #220	@ 0xdc
 80049d0:	d105      	bne.n	80049de <BSP_MotorControl_SetNbDevices+0x7e>
  {
    motorDrvHandle = Stspin220_GetMotorHandle();
 80049d2:	f7ff fe69 	bl	80046a8 <Stspin220_GetMotorHandle>
 80049d6:	4603      	mov	r3, r0
 80049d8:	4a27      	ldr	r2, [pc, #156]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 80049da:	6013      	str	r3, [r2, #0]
 80049dc:	e02e      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if ( (id == BSP_MOTOR_CONTROL_BOARD_ID_L6470) ||
 80049de:	88fb      	ldrh	r3, [r7, #6]
 80049e0:	f641 1246 	movw	r2, #6470	@ 0x1946
 80049e4:	4293      	cmp	r3, r2
 80049e6:	d004      	beq.n	80049f2 <BSP_MotorControl_SetNbDevices+0x92>
 80049e8:	88fb      	ldrh	r3, [r7, #6]
 80049ea:	f641 1248 	movw	r2, #6472	@ 0x1948
 80049ee:	4293      	cmp	r3, r2
 80049f0:	d105      	bne.n	80049fe <BSP_MotorControl_SetNbDevices+0x9e>
		     (id == BSP_MOTOR_CONTROL_BOARD_ID_L6472) )
  {
    motorDrvHandle = l647x_GetMotorHandle();
 80049f2:	f7ff fe39 	bl	8004668 <l647x_GetMotorHandle>
 80049f6:	4603      	mov	r3, r0
 80049f8:	4a1f      	ldr	r2, [pc, #124]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 80049fa:	6013      	str	r3, [r2, #0]
 80049fc:	e01e      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if ( (id == BSP_MOTOR_CONTROL_BOARD_ID_L6480) ||
 80049fe:	88fb      	ldrh	r3, [r7, #6]
 8004a00:	f641 1250 	movw	r2, #6480	@ 0x1950
 8004a04:	4293      	cmp	r3, r2
 8004a06:	d004      	beq.n	8004a12 <BSP_MotorControl_SetNbDevices+0xb2>
 8004a08:	88fb      	ldrh	r3, [r7, #6]
 8004a0a:	f641 1252 	movw	r2, #6482	@ 0x1952
 8004a0e:	4293      	cmp	r3, r2
 8004a10:	d105      	bne.n	8004a1e <BSP_MotorControl_SetNbDevices+0xbe>
		     (id == BSP_MOTOR_CONTROL_BOARD_ID_L6482) )
  {
    motorDrvHandle = l648x_GetMotorHandle();
 8004a12:	f7ff fe31 	bl	8004678 <l648x_GetMotorHandle>
 8004a16:	4603      	mov	r3, r0
 8004a18:	4a17      	ldr	r2, [pc, #92]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 8004a1a:	6013      	str	r3, [r2, #0]
 8004a1c:	e00e      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }
  else if ((id == BSP_MOTOR_CONTROL_BOARD_ID_STSPIN240)||
 8004a1e:	88fb      	ldrh	r3, [r7, #6]
 8004a20:	2bf0      	cmp	r3, #240	@ 0xf0
 8004a22:	d002      	beq.n	8004a2a <BSP_MotorControl_SetNbDevices+0xca>
 8004a24:	88fb      	ldrh	r3, [r7, #6]
 8004a26:	2bfa      	cmp	r3, #250	@ 0xfa
 8004a28:	d105      	bne.n	8004a36 <BSP_MotorControl_SetNbDevices+0xd6>
            (id == BSP_MOTOR_CONTROL_BOARD_ID_STSPIN250))
  {
    motorDrvHandle = Stspin240_250_GetMotorHandle();
 8004a2a:	f7ff fe45 	bl	80046b8 <Stspin240_250_GetMotorHandle>
 8004a2e:	4603      	mov	r3, r0
 8004a30:	4a11      	ldr	r2, [pc, #68]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 8004a32:	6013      	str	r3, [r2, #0]
 8004a34:	e002      	b.n	8004a3c <BSP_MotorControl_SetNbDevices+0xdc>
  }  
  else
  {
    motorDrvHandle = 0;
 8004a36:	4b10      	ldr	r3, [pc, #64]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 8004a38:	2200      	movs	r2, #0
 8004a3a:	601a      	str	r2, [r3, #0]
  }
  if ((motorDrvHandle != 0)&&
 8004a3c:	4b0e      	ldr	r3, [pc, #56]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d011      	beq.n	8004a68 <BSP_MotorControl_SetNbDevices+0x108>
      (motorDrvHandle->SetNbDevices != 0)&&
 8004a44:	4b0c      	ldr	r3, [pc, #48]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 8004a46:	681b      	ldr	r3, [r3, #0]
 8004a48:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
  if ((motorDrvHandle != 0)&&
 8004a4c:	2b00      	cmp	r3, #0
 8004a4e:	d00b      	beq.n	8004a68 <BSP_MotorControl_SetNbDevices+0x108>
      (motorDrvHandle->SetNbDevices != 0)&&
 8004a50:	797b      	ldrb	r3, [r7, #5]
 8004a52:	2b00      	cmp	r3, #0
 8004a54:	d008      	beq.n	8004a68 <BSP_MotorControl_SetNbDevices+0x108>
      (nbDevices !=0))
  {
    status = motorDrvHandle->SetNbDevices(nbDevices);
 8004a56:	4b08      	ldr	r3, [pc, #32]	@ (8004a78 <BSP_MotorControl_SetNbDevices+0x118>)
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	f8d3 3144 	ldr.w	r3, [r3, #324]	@ 0x144
 8004a5e:	797a      	ldrb	r2, [r7, #5]
 8004a60:	4610      	mov	r0, r2
 8004a62:	4798      	blx	r3
 8004a64:	4603      	mov	r3, r0
 8004a66:	73fb      	strb	r3, [r7, #15]
  }
  return (status);
 8004a68:	7bfb      	ldrb	r3, [r7, #15]
}
 8004a6a:	4618      	mov	r0, r3
 8004a6c:	3710      	adds	r7, #16
 8004a6e:	46bd      	mov	sp, r7
 8004a70:	bd80      	pop	{r7, pc}
 8004a72:	bf00      	nop
 8004a74:	20000a54 	.word	0x20000a54
 8004a78:	20000a50 	.word	0x20000a50

08004a7c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8004a7c:	b580      	push	{r7, lr}
 8004a7e:	af00      	add	r7, sp, #0
  __HAL_FLASH_ART_ENABLE();
#endif /* ART_ACCELERATOR_ENABLE */

  /* Configure Flash prefetch */
#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8004a80:	4b08      	ldr	r3, [pc, #32]	@ (8004aa4 <HAL_Init+0x28>)
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	4a07      	ldr	r2, [pc, #28]	@ (8004aa4 <HAL_Init+0x28>)
 8004a86:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004a8a:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8004a8c:	2003      	movs	r0, #3
 8004a8e:	f000 f94f 	bl	8004d30 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8004a92:	200f      	movs	r0, #15
 8004a94:	f000 f808 	bl	8004aa8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8004a98:	f7fc fd94 	bl	80015c4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8004a9c:	2300      	movs	r3, #0
}
 8004a9e:	4618      	mov	r0, r3
 8004aa0:	bd80      	pop	{r7, pc}
 8004aa2:	bf00      	nop
 8004aa4:	40023c00 	.word	0x40023c00

08004aa8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8004aa8:	b580      	push	{r7, lr}
 8004aaa:	b082      	sub	sp, #8
 8004aac:	af00      	add	r7, sp, #0
 8004aae:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8004ab0:	4b12      	ldr	r3, [pc, #72]	@ (8004afc <HAL_InitTick+0x54>)
 8004ab2:	681a      	ldr	r2, [r3, #0]
 8004ab4:	4b12      	ldr	r3, [pc, #72]	@ (8004b00 <HAL_InitTick+0x58>)
 8004ab6:	781b      	ldrb	r3, [r3, #0]
 8004ab8:	4619      	mov	r1, r3
 8004aba:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8004abe:	fbb3 f3f1 	udiv	r3, r3, r1
 8004ac2:	fbb2 f3f3 	udiv	r3, r2, r3
 8004ac6:	4618      	mov	r0, r3
 8004ac8:	f000 f967 	bl	8004d9a <HAL_SYSTICK_Config>
 8004acc:	4603      	mov	r3, r0
 8004ace:	2b00      	cmp	r3, #0
 8004ad0:	d001      	beq.n	8004ad6 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8004ad2:	2301      	movs	r3, #1
 8004ad4:	e00e      	b.n	8004af4 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8004ad6:	687b      	ldr	r3, [r7, #4]
 8004ad8:	2b0f      	cmp	r3, #15
 8004ada:	d80a      	bhi.n	8004af2 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8004adc:	2200      	movs	r2, #0
 8004ade:	6879      	ldr	r1, [r7, #4]
 8004ae0:	f04f 30ff 	mov.w	r0, #4294967295
 8004ae4:	f000 f92f 	bl	8004d46 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8004ae8:	4a06      	ldr	r2, [pc, #24]	@ (8004b04 <HAL_InitTick+0x5c>)
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8004aee:	2300      	movs	r3, #0
 8004af0:	e000      	b.n	8004af4 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8004af2:	2301      	movs	r3, #1
}
 8004af4:	4618      	mov	r0, r3
 8004af6:	3708      	adds	r7, #8
 8004af8:	46bd      	mov	sp, r7
 8004afa:	bd80      	pop	{r7, pc}
 8004afc:	20000004 	.word	0x20000004
 8004b00:	20000198 	.word	0x20000198
 8004b04:	20000194 	.word	0x20000194

08004b08 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8004b08:	b480      	push	{r7}
 8004b0a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8004b0c:	4b06      	ldr	r3, [pc, #24]	@ (8004b28 <HAL_IncTick+0x20>)
 8004b0e:	781b      	ldrb	r3, [r3, #0]
 8004b10:	461a      	mov	r2, r3
 8004b12:	4b06      	ldr	r3, [pc, #24]	@ (8004b2c <HAL_IncTick+0x24>)
 8004b14:	681b      	ldr	r3, [r3, #0]
 8004b16:	4413      	add	r3, r2
 8004b18:	4a04      	ldr	r2, [pc, #16]	@ (8004b2c <HAL_IncTick+0x24>)
 8004b1a:	6013      	str	r3, [r2, #0]
}
 8004b1c:	bf00      	nop
 8004b1e:	46bd      	mov	sp, r7
 8004b20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b24:	4770      	bx	lr
 8004b26:	bf00      	nop
 8004b28:	20000198 	.word	0x20000198
 8004b2c:	20000a58 	.word	0x20000a58

08004b30 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8004b30:	b480      	push	{r7}
 8004b32:	af00      	add	r7, sp, #0
  return uwTick;
 8004b34:	4b03      	ldr	r3, [pc, #12]	@ (8004b44 <HAL_GetTick+0x14>)
 8004b36:	681b      	ldr	r3, [r3, #0]
}
 8004b38:	4618      	mov	r0, r3
 8004b3a:	46bd      	mov	sp, r7
 8004b3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b40:	4770      	bx	lr
 8004b42:	bf00      	nop
 8004b44:	20000a58 	.word	0x20000a58

08004b48 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8004b48:	b580      	push	{r7, lr}
 8004b4a:	b084      	sub	sp, #16
 8004b4c:	af00      	add	r7, sp, #0
 8004b4e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8004b50:	f7ff ffee 	bl	8004b30 <HAL_GetTick>
 8004b54:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8004b56:	687b      	ldr	r3, [r7, #4]
 8004b58:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8004b5a:	68fb      	ldr	r3, [r7, #12]
 8004b5c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004b60:	d005      	beq.n	8004b6e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8004b62:	4b0a      	ldr	r3, [pc, #40]	@ (8004b8c <HAL_Delay+0x44>)
 8004b64:	781b      	ldrb	r3, [r3, #0]
 8004b66:	461a      	mov	r2, r3
 8004b68:	68fb      	ldr	r3, [r7, #12]
 8004b6a:	4413      	add	r3, r2
 8004b6c:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 8004b6e:	bf00      	nop
 8004b70:	f7ff ffde 	bl	8004b30 <HAL_GetTick>
 8004b74:	4602      	mov	r2, r0
 8004b76:	68bb      	ldr	r3, [r7, #8]
 8004b78:	1ad3      	subs	r3, r2, r3
 8004b7a:	68fa      	ldr	r2, [r7, #12]
 8004b7c:	429a      	cmp	r2, r3
 8004b7e:	d8f7      	bhi.n	8004b70 <HAL_Delay+0x28>
  {
  }
}
 8004b80:	bf00      	nop
 8004b82:	bf00      	nop
 8004b84:	3710      	adds	r7, #16
 8004b86:	46bd      	mov	sp, r7
 8004b88:	bd80      	pop	{r7, pc}
 8004b8a:	bf00      	nop
 8004b8c:	20000198 	.word	0x20000198

08004b90 <__NVIC_SetPriorityGrouping>:
{
 8004b90:	b480      	push	{r7}
 8004b92:	b085      	sub	sp, #20
 8004b94:	af00      	add	r7, sp, #0
 8004b96:	6078      	str	r0, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	f003 0307 	and.w	r3, r3, #7
 8004b9e:	60fb      	str	r3, [r7, #12]
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8004ba0:	4b0b      	ldr	r3, [pc, #44]	@ (8004bd0 <__NVIC_SetPriorityGrouping+0x40>)
 8004ba2:	68db      	ldr	r3, [r3, #12]
 8004ba4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8004ba6:	68ba      	ldr	r2, [r7, #8]
 8004ba8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8004bac:	4013      	ands	r3, r2
 8004bae:	60bb      	str	r3, [r7, #8]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8004bb4:	68bb      	ldr	r3, [r7, #8]
 8004bb6:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8004bb8:	4b06      	ldr	r3, [pc, #24]	@ (8004bd4 <__NVIC_SetPriorityGrouping+0x44>)
 8004bba:	4313      	orrs	r3, r2
 8004bbc:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8004bbe:	4a04      	ldr	r2, [pc, #16]	@ (8004bd0 <__NVIC_SetPriorityGrouping+0x40>)
 8004bc0:	68bb      	ldr	r3, [r7, #8]
 8004bc2:	60d3      	str	r3, [r2, #12]
}
 8004bc4:	bf00      	nop
 8004bc6:	3714      	adds	r7, #20
 8004bc8:	46bd      	mov	sp, r7
 8004bca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bce:	4770      	bx	lr
 8004bd0:	e000ed00 	.word	0xe000ed00
 8004bd4:	05fa0000 	.word	0x05fa0000

08004bd8 <__NVIC_GetPriorityGrouping>:
{
 8004bd8:	b480      	push	{r7}
 8004bda:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8004bdc:	4b04      	ldr	r3, [pc, #16]	@ (8004bf0 <__NVIC_GetPriorityGrouping+0x18>)
 8004bde:	68db      	ldr	r3, [r3, #12]
 8004be0:	0a1b      	lsrs	r3, r3, #8
 8004be2:	f003 0307 	and.w	r3, r3, #7
}
 8004be6:	4618      	mov	r0, r3
 8004be8:	46bd      	mov	sp, r7
 8004bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bee:	4770      	bx	lr
 8004bf0:	e000ed00 	.word	0xe000ed00

08004bf4 <__NVIC_EnableIRQ>:
{
 8004bf4:	b480      	push	{r7}
 8004bf6:	b083      	sub	sp, #12
 8004bf8:	af00      	add	r7, sp, #0
 8004bfa:	4603      	mov	r3, r0
 8004bfc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004bfe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c02:	2b00      	cmp	r3, #0
 8004c04:	db0b      	blt.n	8004c1e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8004c06:	79fb      	ldrb	r3, [r7, #7]
 8004c08:	f003 021f 	and.w	r2, r3, #31
 8004c0c:	4907      	ldr	r1, [pc, #28]	@ (8004c2c <__NVIC_EnableIRQ+0x38>)
 8004c0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c12:	095b      	lsrs	r3, r3, #5
 8004c14:	2001      	movs	r0, #1
 8004c16:	fa00 f202 	lsl.w	r2, r0, r2
 8004c1a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8004c1e:	bf00      	nop
 8004c20:	370c      	adds	r7, #12
 8004c22:	46bd      	mov	sp, r7
 8004c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c28:	4770      	bx	lr
 8004c2a:	bf00      	nop
 8004c2c:	e000e100 	.word	0xe000e100

08004c30 <__NVIC_SetPriority>:
{
 8004c30:	b480      	push	{r7}
 8004c32:	b083      	sub	sp, #12
 8004c34:	af00      	add	r7, sp, #0
 8004c36:	4603      	mov	r3, r0
 8004c38:	6039      	str	r1, [r7, #0]
 8004c3a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8004c3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	db0a      	blt.n	8004c5a <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c44:	683b      	ldr	r3, [r7, #0]
 8004c46:	b2da      	uxtb	r2, r3
 8004c48:	490c      	ldr	r1, [pc, #48]	@ (8004c7c <__NVIC_SetPriority+0x4c>)
 8004c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004c4e:	0112      	lsls	r2, r2, #4
 8004c50:	b2d2      	uxtb	r2, r2
 8004c52:	440b      	add	r3, r1
 8004c54:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 8004c58:	e00a      	b.n	8004c70 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8004c5a:	683b      	ldr	r3, [r7, #0]
 8004c5c:	b2da      	uxtb	r2, r3
 8004c5e:	4908      	ldr	r1, [pc, #32]	@ (8004c80 <__NVIC_SetPriority+0x50>)
 8004c60:	79fb      	ldrb	r3, [r7, #7]
 8004c62:	f003 030f 	and.w	r3, r3, #15
 8004c66:	3b04      	subs	r3, #4
 8004c68:	0112      	lsls	r2, r2, #4
 8004c6a:	b2d2      	uxtb	r2, r2
 8004c6c:	440b      	add	r3, r1
 8004c6e:	761a      	strb	r2, [r3, #24]
}
 8004c70:	bf00      	nop
 8004c72:	370c      	adds	r7, #12
 8004c74:	46bd      	mov	sp, r7
 8004c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c7a:	4770      	bx	lr
 8004c7c:	e000e100 	.word	0xe000e100
 8004c80:	e000ed00 	.word	0xe000ed00

08004c84 <NVIC_EncodePriority>:
{
 8004c84:	b480      	push	{r7}
 8004c86:	b089      	sub	sp, #36	@ 0x24
 8004c88:	af00      	add	r7, sp, #0
 8004c8a:	60f8      	str	r0, [r7, #12]
 8004c8c:	60b9      	str	r1, [r7, #8]
 8004c8e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8004c90:	68fb      	ldr	r3, [r7, #12]
 8004c92:	f003 0307 	and.w	r3, r3, #7
 8004c96:	61fb      	str	r3, [r7, #28]
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8004c98:	69fb      	ldr	r3, [r7, #28]
 8004c9a:	f1c3 0307 	rsb	r3, r3, #7
 8004c9e:	2b04      	cmp	r3, #4
 8004ca0:	bf28      	it	cs
 8004ca2:	2304      	movcs	r3, #4
 8004ca4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8004ca6:	69fb      	ldr	r3, [r7, #28]
 8004ca8:	3304      	adds	r3, #4
 8004caa:	2b06      	cmp	r3, #6
 8004cac:	d902      	bls.n	8004cb4 <NVIC_EncodePriority+0x30>
 8004cae:	69fb      	ldr	r3, [r7, #28]
 8004cb0:	3b03      	subs	r3, #3
 8004cb2:	e000      	b.n	8004cb6 <NVIC_EncodePriority+0x32>
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	617b      	str	r3, [r7, #20]
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004cb8:	f04f 32ff 	mov.w	r2, #4294967295
 8004cbc:	69bb      	ldr	r3, [r7, #24]
 8004cbe:	fa02 f303 	lsl.w	r3, r2, r3
 8004cc2:	43da      	mvns	r2, r3
 8004cc4:	68bb      	ldr	r3, [r7, #8]
 8004cc6:	401a      	ands	r2, r3
 8004cc8:	697b      	ldr	r3, [r7, #20]
 8004cca:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8004ccc:	f04f 31ff 	mov.w	r1, #4294967295
 8004cd0:	697b      	ldr	r3, [r7, #20]
 8004cd2:	fa01 f303 	lsl.w	r3, r1, r3
 8004cd6:	43d9      	mvns	r1, r3
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8004cdc:	4313      	orrs	r3, r2
}
 8004cde:	4618      	mov	r0, r3
 8004ce0:	3724      	adds	r7, #36	@ 0x24
 8004ce2:	46bd      	mov	sp, r7
 8004ce4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ce8:	4770      	bx	lr
	...

08004cec <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8004cec:	b580      	push	{r7, lr}
 8004cee:	b082      	sub	sp, #8
 8004cf0:	af00      	add	r7, sp, #0
 8004cf2:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	3b01      	subs	r3, #1
 8004cf8:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004cfc:	d301      	bcc.n	8004d02 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8004cfe:	2301      	movs	r3, #1
 8004d00:	e00f      	b.n	8004d22 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8004d02:	4a0a      	ldr	r2, [pc, #40]	@ (8004d2c <SysTick_Config+0x40>)
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	3b01      	subs	r3, #1
 8004d08:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8004d0a:	210f      	movs	r1, #15
 8004d0c:	f04f 30ff 	mov.w	r0, #4294967295
 8004d10:	f7ff ff8e 	bl	8004c30 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8004d14:	4b05      	ldr	r3, [pc, #20]	@ (8004d2c <SysTick_Config+0x40>)
 8004d16:	2200      	movs	r2, #0
 8004d18:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8004d1a:	4b04      	ldr	r3, [pc, #16]	@ (8004d2c <SysTick_Config+0x40>)
 8004d1c:	2207      	movs	r2, #7
 8004d1e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8004d20:	2300      	movs	r3, #0
}
 8004d22:	4618      	mov	r0, r3
 8004d24:	3708      	adds	r7, #8
 8004d26:	46bd      	mov	sp, r7
 8004d28:	bd80      	pop	{r7, pc}
 8004d2a:	bf00      	nop
 8004d2c:	e000e010 	.word	0xe000e010

08004d30 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8004d30:	b580      	push	{r7, lr}
 8004d32:	b082      	sub	sp, #8
 8004d34:	af00      	add	r7, sp, #0
 8004d36:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8004d38:	6878      	ldr	r0, [r7, #4]
 8004d3a:	f7ff ff29 	bl	8004b90 <__NVIC_SetPriorityGrouping>
}
 8004d3e:	bf00      	nop
 8004d40:	3708      	adds	r7, #8
 8004d42:	46bd      	mov	sp, r7
 8004d44:	bd80      	pop	{r7, pc}

08004d46 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8004d46:	b580      	push	{r7, lr}
 8004d48:	b086      	sub	sp, #24
 8004d4a:	af00      	add	r7, sp, #0
 8004d4c:	4603      	mov	r3, r0
 8004d4e:	60b9      	str	r1, [r7, #8]
 8004d50:	607a      	str	r2, [r7, #4]
 8004d52:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00;
 8004d54:	2300      	movs	r3, #0
 8004d56:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8004d58:	f7ff ff3e 	bl	8004bd8 <__NVIC_GetPriorityGrouping>
 8004d5c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8004d5e:	687a      	ldr	r2, [r7, #4]
 8004d60:	68b9      	ldr	r1, [r7, #8]
 8004d62:	6978      	ldr	r0, [r7, #20]
 8004d64:	f7ff ff8e 	bl	8004c84 <NVIC_EncodePriority>
 8004d68:	4602      	mov	r2, r0
 8004d6a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004d6e:	4611      	mov	r1, r2
 8004d70:	4618      	mov	r0, r3
 8004d72:	f7ff ff5d 	bl	8004c30 <__NVIC_SetPriority>
}
 8004d76:	bf00      	nop
 8004d78:	3718      	adds	r7, #24
 8004d7a:	46bd      	mov	sp, r7
 8004d7c:	bd80      	pop	{r7, pc}

08004d7e <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8004d7e:	b580      	push	{r7, lr}
 8004d80:	b082      	sub	sp, #8
 8004d82:	af00      	add	r7, sp, #0
 8004d84:	4603      	mov	r3, r0
 8004d86:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8004d88:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004d8c:	4618      	mov	r0, r3
 8004d8e:	f7ff ff31 	bl	8004bf4 <__NVIC_EnableIRQ>
}
 8004d92:	bf00      	nop
 8004d94:	3708      	adds	r7, #8
 8004d96:	46bd      	mov	sp, r7
 8004d98:	bd80      	pop	{r7, pc}

08004d9a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8004d9a:	b580      	push	{r7, lr}
 8004d9c:	b082      	sub	sp, #8
 8004d9e:	af00      	add	r7, sp, #0
 8004da0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8004da2:	6878      	ldr	r0, [r7, #4]
 8004da4:	f7ff ffa2 	bl	8004cec <SysTick_Config>
 8004da8:	4603      	mov	r3, r0
}
 8004daa:	4618      	mov	r0, r3
 8004dac:	3708      	adds	r7, #8
 8004dae:	46bd      	mov	sp, r7
 8004db0:	bd80      	pop	{r7, pc}
	...

08004db4 <HAL_MPU_Disable>:
/**
  * @brief  Disables the MPU
  * @retval None
  */
void HAL_MPU_Disable(void)
{
 8004db4:	b480      	push	{r7}
 8004db6:	af00      	add	r7, sp, #0
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
 8004db8:	f3bf 8f5f 	dmb	sy
}
 8004dbc:	bf00      	nop
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 8004dbe:	4b07      	ldr	r3, [pc, #28]	@ (8004ddc <HAL_MPU_Disable+0x28>)
 8004dc0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dc2:	4a06      	ldr	r2, [pc, #24]	@ (8004ddc <HAL_MPU_Disable+0x28>)
 8004dc4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004dc8:	6253      	str	r3, [r2, #36]	@ 0x24
  
  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
 8004dca:	4b05      	ldr	r3, [pc, #20]	@ (8004de0 <HAL_MPU_Disable+0x2c>)
 8004dcc:	2200      	movs	r2, #0
 8004dce:	605a      	str	r2, [r3, #4]
}
 8004dd0:	bf00      	nop
 8004dd2:	46bd      	mov	sp, r7
 8004dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004dd8:	4770      	bx	lr
 8004dda:	bf00      	nop
 8004ddc:	e000ed00 	.word	0xe000ed00
 8004de0:	e000ed90 	.word	0xe000ed90

08004de4 <HAL_MPU_Enable>:
  *            @arg MPU_PRIVILEGED_DEFAULT
  *            @arg MPU_HFNMI_PRIVDEF
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
 8004de4:	b480      	push	{r7}
 8004de6:	b083      	sub	sp, #12
 8004de8:	af00      	add	r7, sp, #0
 8004dea:	6078      	str	r0, [r7, #4]
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 8004dec:	4a0b      	ldr	r2, [pc, #44]	@ (8004e1c <HAL_MPU_Enable+0x38>)
 8004dee:	687b      	ldr	r3, [r7, #4]
 8004df0:	f043 0301 	orr.w	r3, r3, #1
 8004df4:	6053      	str	r3, [r2, #4]
  
  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 8004df6:	4b0a      	ldr	r3, [pc, #40]	@ (8004e20 <HAL_MPU_Enable+0x3c>)
 8004df8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004dfa:	4a09      	ldr	r2, [pc, #36]	@ (8004e20 <HAL_MPU_Enable+0x3c>)
 8004dfc:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004e00:	6253      	str	r3, [r2, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
 8004e02:	f3bf 8f4f 	dsb	sy
}
 8004e06:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8004e08:	f3bf 8f6f 	isb	sy
}
 8004e0c:	bf00      	nop
  
  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
 8004e0e:	bf00      	nop
 8004e10:	370c      	adds	r7, #12
 8004e12:	46bd      	mov	sp, r7
 8004e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e18:	4770      	bx	lr
 8004e1a:	bf00      	nop
 8004e1c:	e000ed90 	.word	0xe000ed90
 8004e20:	e000ed00 	.word	0xe000ed00

08004e24 <HAL_MPU_ConfigRegion>:
  * @param MPU_Init Pointer to a MPU_Region_InitTypeDef structure that contains
  *                the initialization and configuration information.
  * @retval None
  */
void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
{
 8004e24:	b480      	push	{r7}
 8004e26:	b083      	sub	sp, #12
 8004e28:	af00      	add	r7, sp, #0
 8004e2a:	6078      	str	r0, [r7, #4]
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	785a      	ldrb	r2, [r3, #1]
 8004e30:	4b1b      	ldr	r3, [pc, #108]	@ (8004ea0 <HAL_MPU_ConfigRegion+0x7c>)
 8004e32:	609a      	str	r2, [r3, #8]

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
 8004e34:	4b1a      	ldr	r3, [pc, #104]	@ (8004ea0 <HAL_MPU_ConfigRegion+0x7c>)
 8004e36:	691b      	ldr	r3, [r3, #16]
 8004e38:	4a19      	ldr	r2, [pc, #100]	@ (8004ea0 <HAL_MPU_ConfigRegion+0x7c>)
 8004e3a:	f023 0301 	bic.w	r3, r3, #1
 8004e3e:	6113      	str	r3, [r2, #16]

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
 8004e40:	4a17      	ldr	r2, [pc, #92]	@ (8004ea0 <HAL_MPU_ConfigRegion+0x7c>)
 8004e42:	687b      	ldr	r3, [r7, #4]
 8004e44:	685b      	ldr	r3, [r3, #4]
 8004e46:	60d3      	str	r3, [r2, #12]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004e48:	687b      	ldr	r3, [r7, #4]
 8004e4a:	7b1b      	ldrb	r3, [r3, #12]
 8004e4c:	071a      	lsls	r2, r3, #28
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	7adb      	ldrb	r3, [r3, #11]
 8004e52:	061b      	lsls	r3, r3, #24
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004e54:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	7a9b      	ldrb	r3, [r3, #10]
 8004e5a:	04db      	lsls	r3, r3, #19
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 8004e5c:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	7b5b      	ldrb	r3, [r3, #13]
 8004e62:	049b      	lsls	r3, r3, #18
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 8004e64:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	7b9b      	ldrb	r3, [r3, #14]
 8004e6a:	045b      	lsls	r3, r3, #17
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 8004e6c:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004e6e:	687b      	ldr	r3, [r7, #4]
 8004e70:	7bdb      	ldrb	r3, [r3, #15]
 8004e72:	041b      	lsls	r3, r3, #16
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 8004e74:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004e76:	687b      	ldr	r3, [r7, #4]
 8004e78:	7a5b      	ldrb	r3, [r3, #9]
 8004e7a:	021b      	lsls	r3, r3, #8
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 8004e7c:	431a      	orrs	r2, r3
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004e7e:	687b      	ldr	r3, [r7, #4]
 8004e80:	7a1b      	ldrb	r3, [r3, #8]
 8004e82:	005b      	lsls	r3, r3, #1
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 8004e84:	4313      	orrs	r3, r2
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 8004e86:	687a      	ldr	r2, [r7, #4]
 8004e88:	7812      	ldrb	r2, [r2, #0]
 8004e8a:	4611      	mov	r1, r2
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004e8c:	4a04      	ldr	r2, [pc, #16]	@ (8004ea0 <HAL_MPU_ConfigRegion+0x7c>)
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 8004e8e:	430b      	orrs	r3, r1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 8004e90:	6113      	str	r3, [r2, #16]
}
 8004e92:	bf00      	nop
 8004e94:	370c      	adds	r7, #12
 8004e96:	46bd      	mov	sp, r7
 8004e98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e9c:	4770      	bx	lr
 8004e9e:	bf00      	nop
 8004ea0:	e000ed90 	.word	0xe000ed90

08004ea4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8004ea4:	b580      	push	{r7, lr}
 8004ea6:	b082      	sub	sp, #8
 8004ea8:	af00      	add	r7, sp, #0
 8004eaa:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8004eac:	687b      	ldr	r3, [r7, #4]
 8004eae:	2b00      	cmp	r3, #0
 8004eb0:	d101      	bne.n	8004eb6 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8004eb2:	2301      	movs	r3, #1
 8004eb4:	e054      	b.n	8004f60 <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8004eb6:	687b      	ldr	r3, [r7, #4]
 8004eb8:	7f5b      	ldrb	r3, [r3, #29]
 8004eba:	b2db      	uxtb	r3, r3
 8004ebc:	2b00      	cmp	r3, #0
 8004ebe:	d105      	bne.n	8004ecc <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	2200      	movs	r2, #0
 8004ec4:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8004ec6:	6878      	ldr	r0, [r7, #4]
 8004ec8:	f7fb fb8c 	bl	80005e4 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8004ecc:	687b      	ldr	r3, [r7, #4]
 8004ece:	2202      	movs	r2, #2
 8004ed0:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	791b      	ldrb	r3, [r3, #4]
 8004ed6:	2b00      	cmp	r3, #0
 8004ed8:	d10c      	bne.n	8004ef4 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	681b      	ldr	r3, [r3, #0]
 8004ede:	4a22      	ldr	r2, [pc, #136]	@ (8004f68 <HAL_CRC_Init+0xc4>)
 8004ee0:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	681b      	ldr	r3, [r3, #0]
 8004ee6:	689a      	ldr	r2, [r3, #8]
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	681b      	ldr	r3, [r3, #0]
 8004eec:	f022 0218 	bic.w	r2, r2, #24
 8004ef0:	609a      	str	r2, [r3, #8]
 8004ef2:	e00c      	b.n	8004f0e <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	6899      	ldr	r1, [r3, #8]
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	68db      	ldr	r3, [r3, #12]
 8004efc:	461a      	mov	r2, r3
 8004efe:	6878      	ldr	r0, [r7, #4]
 8004f00:	f000 f834 	bl	8004f6c <HAL_CRCEx_Polynomial_Set>
 8004f04:	4603      	mov	r3, r0
 8004f06:	2b00      	cmp	r3, #0
 8004f08:	d001      	beq.n	8004f0e <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 8004f0a:	2301      	movs	r3, #1
 8004f0c:	e028      	b.n	8004f60 <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	795b      	ldrb	r3, [r3, #5]
 8004f12:	2b00      	cmp	r3, #0
 8004f14:	d105      	bne.n	8004f22 <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	f04f 32ff 	mov.w	r2, #4294967295
 8004f1e:	611a      	str	r2, [r3, #16]
 8004f20:	e004      	b.n	8004f2c <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	687a      	ldr	r2, [r7, #4]
 8004f28:	6912      	ldr	r2, [r2, #16]
 8004f2a:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8004f2c:	687b      	ldr	r3, [r7, #4]
 8004f2e:	681b      	ldr	r3, [r3, #0]
 8004f30:	689b      	ldr	r3, [r3, #8]
 8004f32:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	695a      	ldr	r2, [r3, #20]
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	430a      	orrs	r2, r1
 8004f40:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 8004f42:	687b      	ldr	r3, [r7, #4]
 8004f44:	681b      	ldr	r3, [r3, #0]
 8004f46:	689b      	ldr	r3, [r3, #8]
 8004f48:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8004f4c:	687b      	ldr	r3, [r7, #4]
 8004f4e:	699a      	ldr	r2, [r3, #24]
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	681b      	ldr	r3, [r3, #0]
 8004f54:	430a      	orrs	r2, r1
 8004f56:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	2201      	movs	r2, #1
 8004f5c:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 8004f5e:	2300      	movs	r3, #0
}
 8004f60:	4618      	mov	r0, r3
 8004f62:	3708      	adds	r7, #8
 8004f64:	46bd      	mov	sp, r7
 8004f66:	bd80      	pop	{r7, pc}
 8004f68:	04c11db7 	.word	0x04c11db7

08004f6c <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 8004f6c:	b480      	push	{r7}
 8004f6e:	b087      	sub	sp, #28
 8004f70:	af00      	add	r7, sp, #0
 8004f72:	60f8      	str	r0, [r7, #12]
 8004f74:	60b9      	str	r1, [r7, #8]
 8004f76:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004f78:	2300      	movs	r3, #0
 8004f7a:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 8004f7c:	231f      	movs	r3, #31
 8004f7e:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 8004f80:	68bb      	ldr	r3, [r7, #8]
 8004f82:	f003 0301 	and.w	r3, r3, #1
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d102      	bne.n	8004f90 <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 8004f8a:	2301      	movs	r3, #1
 8004f8c:	75fb      	strb	r3, [r7, #23]
 8004f8e:	e063      	b.n	8005058 <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 8004f90:	bf00      	nop
 8004f92:	693b      	ldr	r3, [r7, #16]
 8004f94:	1e5a      	subs	r2, r3, #1
 8004f96:	613a      	str	r2, [r7, #16]
 8004f98:	2b00      	cmp	r3, #0
 8004f9a:	d009      	beq.n	8004fb0 <HAL_CRCEx_Polynomial_Set+0x44>
 8004f9c:	693b      	ldr	r3, [r7, #16]
 8004f9e:	f003 031f 	and.w	r3, r3, #31
 8004fa2:	68ba      	ldr	r2, [r7, #8]
 8004fa4:	fa22 f303 	lsr.w	r3, r2, r3
 8004fa8:	f003 0301 	and.w	r3, r3, #1
 8004fac:	2b00      	cmp	r3, #0
 8004fae:	d0f0      	beq.n	8004f92 <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	2b18      	cmp	r3, #24
 8004fb4:	d846      	bhi.n	8005044 <HAL_CRCEx_Polynomial_Set+0xd8>
 8004fb6:	a201      	add	r2, pc, #4	@ (adr r2, 8004fbc <HAL_CRCEx_Polynomial_Set+0x50>)
 8004fb8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004fbc:	0800504b 	.word	0x0800504b
 8004fc0:	08005045 	.word	0x08005045
 8004fc4:	08005045 	.word	0x08005045
 8004fc8:	08005045 	.word	0x08005045
 8004fcc:	08005045 	.word	0x08005045
 8004fd0:	08005045 	.word	0x08005045
 8004fd4:	08005045 	.word	0x08005045
 8004fd8:	08005045 	.word	0x08005045
 8004fdc:	08005039 	.word	0x08005039
 8004fe0:	08005045 	.word	0x08005045
 8004fe4:	08005045 	.word	0x08005045
 8004fe8:	08005045 	.word	0x08005045
 8004fec:	08005045 	.word	0x08005045
 8004ff0:	08005045 	.word	0x08005045
 8004ff4:	08005045 	.word	0x08005045
 8004ff8:	08005045 	.word	0x08005045
 8004ffc:	0800502d 	.word	0x0800502d
 8005000:	08005045 	.word	0x08005045
 8005004:	08005045 	.word	0x08005045
 8005008:	08005045 	.word	0x08005045
 800500c:	08005045 	.word	0x08005045
 8005010:	08005045 	.word	0x08005045
 8005014:	08005045 	.word	0x08005045
 8005018:	08005045 	.word	0x08005045
 800501c:	08005021 	.word	0x08005021
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 8005020:	693b      	ldr	r3, [r7, #16]
 8005022:	2b06      	cmp	r3, #6
 8005024:	d913      	bls.n	800504e <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 8005026:	2301      	movs	r3, #1
 8005028:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800502a:	e010      	b.n	800504e <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 800502c:	693b      	ldr	r3, [r7, #16]
 800502e:	2b07      	cmp	r3, #7
 8005030:	d90f      	bls.n	8005052 <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 8005032:	2301      	movs	r3, #1
 8005034:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8005036:	e00c      	b.n	8005052 <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 8005038:	693b      	ldr	r3, [r7, #16]
 800503a:	2b0f      	cmp	r3, #15
 800503c:	d90b      	bls.n	8005056 <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 800503e:	2301      	movs	r3, #1
 8005040:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8005042:	e008      	b.n	8005056 <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 8005044:	2301      	movs	r3, #1
 8005046:	75fb      	strb	r3, [r7, #23]
        break;
 8005048:	e006      	b.n	8005058 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800504a:	bf00      	nop
 800504c:	e004      	b.n	8005058 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 800504e:	bf00      	nop
 8005050:	e002      	b.n	8005058 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8005052:	bf00      	nop
 8005054:	e000      	b.n	8005058 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 8005056:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 8005058:	7dfb      	ldrb	r3, [r7, #23]
 800505a:	2b00      	cmp	r3, #0
 800505c:	d10d      	bne.n	800507a <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 800505e:	68fb      	ldr	r3, [r7, #12]
 8005060:	681b      	ldr	r3, [r3, #0]
 8005062:	68ba      	ldr	r2, [r7, #8]
 8005064:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 8005066:	68fb      	ldr	r3, [r7, #12]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	689b      	ldr	r3, [r3, #8]
 800506c:	f023 0118 	bic.w	r1, r3, #24
 8005070:	68fb      	ldr	r3, [r7, #12]
 8005072:	681b      	ldr	r3, [r3, #0]
 8005074:	687a      	ldr	r2, [r7, #4]
 8005076:	430a      	orrs	r2, r1
 8005078:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 800507a:	7dfb      	ldrb	r3, [r7, #23]
}
 800507c:	4618      	mov	r0, r3
 800507e:	371c      	adds	r7, #28
 8005080:	46bd      	mov	sp, r7
 8005082:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005086:	4770      	bx	lr

08005088 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8005088:	b580      	push	{r7, lr}
 800508a:	b082      	sub	sp, #8
 800508c:	af00      	add	r7, sp, #0
 800508e:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	2b00      	cmp	r3, #0
 8005094:	d101      	bne.n	800509a <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 8005096:	2301      	movs	r3, #1
 8005098:	e039      	b.n	800510e <HAL_DMA2D_Init+0x86>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800509a:	687b      	ldr	r3, [r7, #4]
 800509c:	f893 3039 	ldrb.w	r3, [r3, #57]	@ 0x39
 80050a0:	b2db      	uxtb	r3, r3
 80050a2:	2b00      	cmp	r3, #0
 80050a4:	d106      	bne.n	80050b4 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	2200      	movs	r2, #0
 80050aa:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80050ae:	6878      	ldr	r0, [r7, #4]
 80050b0:	f7fb faea 	bl	8000688 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80050b4:	687b      	ldr	r3, [r7, #4]
 80050b6:	2202      	movs	r2, #2
 80050b8:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80050bc:	687b      	ldr	r3, [r7, #4]
 80050be:	681b      	ldr	r3, [r3, #0]
 80050c0:	681b      	ldr	r3, [r3, #0]
 80050c2:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 80050c6:	687b      	ldr	r3, [r7, #4]
 80050c8:	685a      	ldr	r2, [r3, #4]
 80050ca:	687b      	ldr	r3, [r7, #4]
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	430a      	orrs	r2, r1
 80050d0:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80050d8:	f023 0107 	bic.w	r1, r3, #7
 80050dc:	687b      	ldr	r3, [r7, #4]
 80050de:	689a      	ldr	r2, [r3, #8]
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	430a      	orrs	r2, r1
 80050e6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 80050ee:	4b0a      	ldr	r3, [pc, #40]	@ (8005118 <HAL_DMA2D_Init+0x90>)
 80050f0:	4013      	ands	r3, r2
 80050f2:	687a      	ldr	r2, [r7, #4]
 80050f4:	68d1      	ldr	r1, [r2, #12]
 80050f6:	687a      	ldr	r2, [r7, #4]
 80050f8:	6812      	ldr	r2, [r2, #0]
 80050fa:	430b      	orrs	r3, r1
 80050fc:	6413      	str	r3, [r2, #64]	@ 0x40
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80050fe:	687b      	ldr	r3, [r7, #4]
 8005100:	2200      	movs	r2, #0
 8005102:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	2201      	movs	r2, #1
 8005108:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  return HAL_OK;
 800510c:	2300      	movs	r3, #0
}
 800510e:	4618      	mov	r0, r3
 8005110:	3708      	adds	r7, #8
 8005112:	46bd      	mov	sp, r7
 8005114:	bd80      	pop	{r7, pc}
 8005116:	bf00      	nop
 8005118:	ffffc000 	.word	0xffffc000

0800511c <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 800511c:	b580      	push	{r7, lr}
 800511e:	b084      	sub	sp, #16
 8005120:	af00      	add	r7, sp, #0
 8005122:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	685b      	ldr	r3, [r3, #4]
 800512a:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8005134:	68fb      	ldr	r3, [r7, #12]
 8005136:	f003 0301 	and.w	r3, r3, #1
 800513a:	2b00      	cmp	r3, #0
 800513c:	d026      	beq.n	800518c <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800513e:	68bb      	ldr	r3, [r7, #8]
 8005140:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005144:	2b00      	cmp	r3, #0
 8005146:	d021      	beq.n	800518c <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8005148:	687b      	ldr	r3, [r7, #4]
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	681a      	ldr	r2, [r3, #0]
 800514e:	687b      	ldr	r3, [r7, #4]
 8005150:	681b      	ldr	r3, [r3, #0]
 8005152:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8005156:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800515c:	f043 0201 	orr.w	r2, r3, #1
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	681b      	ldr	r3, [r3, #0]
 8005168:	2201      	movs	r2, #1
 800516a:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	2204      	movs	r2, #4
 8005170:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	2200      	movs	r2, #0
 8005178:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	695b      	ldr	r3, [r3, #20]
 8005180:	2b00      	cmp	r3, #0
 8005182:	d003      	beq.n	800518c <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005184:	687b      	ldr	r3, [r7, #4]
 8005186:	695b      	ldr	r3, [r3, #20]
 8005188:	6878      	ldr	r0, [r7, #4]
 800518a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	f003 0320 	and.w	r3, r3, #32
 8005192:	2b00      	cmp	r3, #0
 8005194:	d026      	beq.n	80051e4 <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8005196:	68bb      	ldr	r3, [r7, #8]
 8005198:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800519c:	2b00      	cmp	r3, #0
 800519e:	d021      	beq.n	80051e4 <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80051a0:	687b      	ldr	r3, [r7, #4]
 80051a2:	681b      	ldr	r3, [r3, #0]
 80051a4:	681a      	ldr	r2, [r3, #0]
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 80051ae:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	2220      	movs	r2, #32
 80051b6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80051bc:	f043 0202 	orr.w	r2, r3, #2
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	2204      	movs	r2, #4
 80051c8:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	2200      	movs	r2, #0
 80051d0:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferErrorCallback != NULL)
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	695b      	ldr	r3, [r3, #20]
 80051d8:	2b00      	cmp	r3, #0
 80051da:	d003      	beq.n	80051e4 <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	695b      	ldr	r3, [r3, #20]
 80051e0:	6878      	ldr	r0, [r7, #4]
 80051e2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80051e4:	68fb      	ldr	r3, [r7, #12]
 80051e6:	f003 0308 	and.w	r3, r3, #8
 80051ea:	2b00      	cmp	r3, #0
 80051ec:	d026      	beq.n	800523c <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80051ee:	68bb      	ldr	r3, [r7, #8]
 80051f0:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80051f4:	2b00      	cmp	r3, #0
 80051f6:	d021      	beq.n	800523c <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	681a      	ldr	r2, [r3, #0]
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	681b      	ldr	r3, [r3, #0]
 8005202:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005206:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8005208:	687b      	ldr	r3, [r7, #4]
 800520a:	681b      	ldr	r3, [r3, #0]
 800520c:	2208      	movs	r2, #8
 800520e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005214:	f043 0204 	orr.w	r2, r3, #4
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	2204      	movs	r2, #4
 8005220:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	2200      	movs	r2, #0
 8005228:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	695b      	ldr	r3, [r3, #20]
 8005230:	2b00      	cmp	r3, #0
 8005232:	d003      	beq.n	800523c <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	695b      	ldr	r3, [r3, #20]
 8005238:	6878      	ldr	r0, [r7, #4]
 800523a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	f003 0304 	and.w	r3, r3, #4
 8005242:	2b00      	cmp	r3, #0
 8005244:	d013      	beq.n	800526e <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8005246:	68bb      	ldr	r3, [r7, #8]
 8005248:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800524c:	2b00      	cmp	r3, #0
 800524e:	d00e      	beq.n	800526e <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8005250:	687b      	ldr	r3, [r7, #4]
 8005252:	681b      	ldr	r3, [r3, #0]
 8005254:	681a      	ldr	r2, [r3, #0]
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800525e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	2204      	movs	r2, #4
 8005266:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8005268:	6878      	ldr	r0, [r7, #4]
 800526a:	f000 f853 	bl	8005314 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800526e:	68fb      	ldr	r3, [r7, #12]
 8005270:	f003 0302 	and.w	r3, r3, #2
 8005274:	2b00      	cmp	r3, #0
 8005276:	d024      	beq.n	80052c2 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8005278:	68bb      	ldr	r3, [r7, #8]
 800527a:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800527e:	2b00      	cmp	r3, #0
 8005280:	d01f      	beq.n	80052c2 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	681b      	ldr	r3, [r3, #0]
 8005286:	681a      	ldr	r2, [r3, #0]
 8005288:	687b      	ldr	r3, [r7, #4]
 800528a:	681b      	ldr	r3, [r3, #0]
 800528c:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8005290:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	681b      	ldr	r3, [r3, #0]
 8005296:	2202      	movs	r2, #2
 8005298:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800529e:	687b      	ldr	r3, [r7, #4]
 80052a0:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80052a2:	687b      	ldr	r3, [r7, #4]
 80052a4:	2201      	movs	r2, #1
 80052a6:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	2200      	movs	r2, #0
 80052ae:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	691b      	ldr	r3, [r3, #16]
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d003      	beq.n	80052c2 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80052ba:	687b      	ldr	r3, [r7, #4]
 80052bc:	691b      	ldr	r3, [r3, #16]
 80052be:	6878      	ldr	r0, [r7, #4]
 80052c0:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80052c2:	68fb      	ldr	r3, [r7, #12]
 80052c4:	f003 0310 	and.w	r3, r3, #16
 80052c8:	2b00      	cmp	r3, #0
 80052ca:	d01f      	beq.n	800530c <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80052cc:	68bb      	ldr	r3, [r7, #8]
 80052ce:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80052d2:	2b00      	cmp	r3, #0
 80052d4:	d01a      	beq.n	800530c <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80052d6:	687b      	ldr	r3, [r7, #4]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	681a      	ldr	r2, [r3, #0]
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80052e4:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	2210      	movs	r2, #16
 80052ec:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80052ee:	687b      	ldr	r3, [r7, #4]
 80052f0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	63da      	str	r2, [r3, #60]	@ 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	2201      	movs	r2, #1
 80052fa:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	2200      	movs	r2, #0
 8005302:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8005306:	6878      	ldr	r0, [r7, #4]
 8005308:	f000 f80e 	bl	8005328 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800530c:	bf00      	nop
 800530e:	3710      	adds	r7, #16
 8005310:	46bd      	mov	sp, r7
 8005312:	bd80      	pop	{r7, pc}

08005314 <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8005314:	b480      	push	{r7}
 8005316:	b083      	sub	sp, #12
 8005318:	af00      	add	r7, sp, #0
 800531a:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 800531c:	bf00      	nop
 800531e:	370c      	adds	r7, #12
 8005320:	46bd      	mov	sp, r7
 8005322:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005326:	4770      	bx	lr

08005328 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8005328:	b480      	push	{r7}
 800532a:	b083      	sub	sp, #12
 800532c:	af00      	add	r7, sp, #0
 800532e:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8005330:	bf00      	nop
 8005332:	370c      	adds	r7, #12
 8005334:	46bd      	mov	sp, r7
 8005336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800533a:	4770      	bx	lr

0800533c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800533c:	b480      	push	{r7}
 800533e:	b087      	sub	sp, #28
 8005340:	af00      	add	r7, sp, #0
 8005342:	6078      	str	r0, [r7, #4]
 8005344:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	685b      	ldr	r3, [r3, #4]
 800534a:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8005354:	2b01      	cmp	r3, #1
 8005356:	d101      	bne.n	800535c <HAL_DMA2D_ConfigLayer+0x20>
 8005358:	2302      	movs	r3, #2
 800535a:	e079      	b.n	8005450 <HAL_DMA2D_ConfigLayer+0x114>
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	2201      	movs	r2, #1
 8005360:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	2202      	movs	r2, #2
 8005368:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 800536c:	683b      	ldr	r3, [r7, #0]
 800536e:	011b      	lsls	r3, r3, #4
 8005370:	3318      	adds	r3, #24
 8005372:	687a      	ldr	r2, [r7, #4]
 8005374:	4413      	add	r3, r2
 8005376:	613b      	str	r3, [r7, #16]
#if defined (DMA2D_ALPHA_INV_RB_SWAP_SUPPORT)
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
#else
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8005378:	693b      	ldr	r3, [r7, #16]
 800537a:	685a      	ldr	r2, [r3, #4]
 800537c:	693b      	ldr	r3, [r7, #16]
 800537e:	689b      	ldr	r3, [r3, #8]
 8005380:	041b      	lsls	r3, r3, #16
 8005382:	4313      	orrs	r3, r2
 8005384:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 8005386:	4b35      	ldr	r3, [pc, #212]	@ (800545c <HAL_DMA2D_ConfigLayer+0x120>)
 8005388:	60fb      	str	r3, [r7, #12]
#endif /* DMA2D_ALPHA_INV_RB_SWAP_SUPPORT */


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800538a:	693b      	ldr	r3, [r7, #16]
 800538c:	685b      	ldr	r3, [r3, #4]
 800538e:	2b0a      	cmp	r3, #10
 8005390:	d003      	beq.n	800539a <HAL_DMA2D_ConfigLayer+0x5e>
 8005392:	693b      	ldr	r3, [r7, #16]
 8005394:	685b      	ldr	r3, [r3, #4]
 8005396:	2b09      	cmp	r3, #9
 8005398:	d107      	bne.n	80053aa <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800539a:	693b      	ldr	r3, [r7, #16]
 800539c:	68db      	ldr	r3, [r3, #12]
 800539e:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 80053a2:	697a      	ldr	r2, [r7, #20]
 80053a4:	4313      	orrs	r3, r2
 80053a6:	617b      	str	r3, [r7, #20]
 80053a8:	e005      	b.n	80053b6 <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80053aa:	693b      	ldr	r3, [r7, #16]
 80053ac:	68db      	ldr	r3, [r3, #12]
 80053ae:	061b      	lsls	r3, r3, #24
 80053b0:	697a      	ldr	r2, [r7, #20]
 80053b2:	4313      	orrs	r3, r2
 80053b4:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 80053b6:	683b      	ldr	r3, [r7, #0]
 80053b8:	2b00      	cmp	r3, #0
 80053ba:	d120      	bne.n	80053fe <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80053bc:	687b      	ldr	r3, [r7, #4]
 80053be:	681b      	ldr	r3, [r3, #0]
 80053c0:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80053c2:	68fb      	ldr	r3, [r7, #12]
 80053c4:	43db      	mvns	r3, r3
 80053c6:	ea02 0103 	and.w	r1, r2, r3
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	697a      	ldr	r2, [r7, #20]
 80053d0:	430a      	orrs	r2, r1
 80053d2:	625a      	str	r2, [r3, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	681b      	ldr	r3, [r3, #0]
 80053d8:	693a      	ldr	r2, [r7, #16]
 80053da:	6812      	ldr	r2, [r2, #0]
 80053dc:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80053de:	693b      	ldr	r3, [r7, #16]
 80053e0:	685b      	ldr	r3, [r3, #4]
 80053e2:	2b0a      	cmp	r3, #10
 80053e4:	d003      	beq.n	80053ee <HAL_DMA2D_ConfigLayer+0xb2>
 80053e6:	693b      	ldr	r3, [r7, #16]
 80053e8:	685b      	ldr	r3, [r3, #4]
 80053ea:	2b09      	cmp	r3, #9
 80053ec:	d127      	bne.n	800543e <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 80053ee:	693b      	ldr	r3, [r7, #16]
 80053f0:	68da      	ldr	r2, [r3, #12]
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	681b      	ldr	r3, [r3, #0]
 80053f6:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 80053fa:	629a      	str	r2, [r3, #40]	@ 0x28
 80053fc:	e01f      	b.n	800543e <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80053fe:	687b      	ldr	r3, [r7, #4]
 8005400:	681b      	ldr	r3, [r3, #0]
 8005402:	69da      	ldr	r2, [r3, #28]
 8005404:	68fb      	ldr	r3, [r7, #12]
 8005406:	43db      	mvns	r3, r3
 8005408:	ea02 0103 	and.w	r1, r2, r3
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	697a      	ldr	r2, [r7, #20]
 8005412:	430a      	orrs	r2, r1
 8005414:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	681b      	ldr	r3, [r3, #0]
 800541a:	693a      	ldr	r2, [r7, #16]
 800541c:	6812      	ldr	r2, [r2, #0]
 800541e:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8005420:	693b      	ldr	r3, [r7, #16]
 8005422:	685b      	ldr	r3, [r3, #4]
 8005424:	2b0a      	cmp	r3, #10
 8005426:	d003      	beq.n	8005430 <HAL_DMA2D_ConfigLayer+0xf4>
 8005428:	693b      	ldr	r3, [r7, #16]
 800542a:	685b      	ldr	r3, [r3, #4]
 800542c:	2b09      	cmp	r3, #9
 800542e:	d106      	bne.n	800543e <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8005430:	693b      	ldr	r3, [r7, #16]
 8005432:	68da      	ldr	r2, [r3, #12]
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	681b      	ldr	r3, [r3, #0]
 8005438:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 800543c:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800543e:	687b      	ldr	r3, [r7, #4]
 8005440:	2201      	movs	r2, #1
 8005442:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	2200      	movs	r2, #0
 800544a:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38

  return HAL_OK;
 800544e:	2300      	movs	r3, #0
}
 8005450:	4618      	mov	r0, r3
 8005452:	371c      	adds	r7, #28
 8005454:	46bd      	mov	sp, r7
 8005456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800545a:	4770      	bx	lr
 800545c:	ff03000f 	.word	0xff03000f

08005460 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8005460:	b480      	push	{r7}
 8005462:	b089      	sub	sp, #36	@ 0x24
 8005464:	af00      	add	r7, sp, #0
 8005466:	6078      	str	r0, [r7, #4]
 8005468:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00;
 800546a:	2300      	movs	r3, #0
 800546c:	61fb      	str	r3, [r7, #28]
  uint32_t ioposition = 0x00;
 800546e:	2300      	movs	r3, #0
 8005470:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00;
 8005472:	2300      	movs	r3, #0
 8005474:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00;
 8005476:	2300      	movs	r3, #0
 8005478:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for (position = 0; position < GPIO_NUMBER; position++)
 800547a:	2300      	movs	r3, #0
 800547c:	61fb      	str	r3, [r7, #28]
 800547e:	e175      	b.n	800576c <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 8005480:	2201      	movs	r2, #1
 8005482:	69fb      	ldr	r3, [r7, #28]
 8005484:	fa02 f303 	lsl.w	r3, r2, r3
 8005488:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800548a:	683b      	ldr	r3, [r7, #0]
 800548c:	681b      	ldr	r3, [r3, #0]
 800548e:	697a      	ldr	r2, [r7, #20]
 8005490:	4013      	ands	r3, r2
 8005492:	613b      	str	r3, [r7, #16]

    if (iocurrent == ioposition)
 8005494:	693a      	ldr	r2, [r7, #16]
 8005496:	697b      	ldr	r3, [r7, #20]
 8005498:	429a      	cmp	r2, r3
 800549a:	f040 8164 	bne.w	8005766 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800549e:	683b      	ldr	r3, [r7, #0]
 80054a0:	685b      	ldr	r3, [r3, #4]
 80054a2:	f003 0303 	and.w	r3, r3, #3
 80054a6:	2b01      	cmp	r3, #1
 80054a8:	d005      	beq.n	80054b6 <HAL_GPIO_Init+0x56>
 80054aa:	683b      	ldr	r3, [r7, #0]
 80054ac:	685b      	ldr	r3, [r3, #4]
 80054ae:	f003 0303 	and.w	r3, r3, #3
 80054b2:	2b02      	cmp	r3, #2
 80054b4:	d130      	bne.n	8005518 <HAL_GPIO_Init+0xb8>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	689b      	ldr	r3, [r3, #8]
 80054ba:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 80054bc:	69fb      	ldr	r3, [r7, #28]
 80054be:	005b      	lsls	r3, r3, #1
 80054c0:	2203      	movs	r2, #3
 80054c2:	fa02 f303 	lsl.w	r3, r2, r3
 80054c6:	43db      	mvns	r3, r3
 80054c8:	69ba      	ldr	r2, [r7, #24]
 80054ca:	4013      	ands	r3, r2
 80054cc:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2));
 80054ce:	683b      	ldr	r3, [r7, #0]
 80054d0:	68da      	ldr	r2, [r3, #12]
 80054d2:	69fb      	ldr	r3, [r7, #28]
 80054d4:	005b      	lsls	r3, r3, #1
 80054d6:	fa02 f303 	lsl.w	r3, r2, r3
 80054da:	69ba      	ldr	r2, [r7, #24]
 80054dc:	4313      	orrs	r3, r2
 80054de:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	69ba      	ldr	r2, [r7, #24]
 80054e4:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 80054e6:	687b      	ldr	r3, [r7, #4]
 80054e8:	685b      	ldr	r3, [r3, #4]
 80054ea:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80054ec:	2201      	movs	r2, #1
 80054ee:	69fb      	ldr	r3, [r7, #28]
 80054f0:	fa02 f303 	lsl.w	r3, r2, r3
 80054f4:	43db      	mvns	r3, r3
 80054f6:	69ba      	ldr	r2, [r7, #24]
 80054f8:	4013      	ands	r3, r2
 80054fa:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80054fc:	683b      	ldr	r3, [r7, #0]
 80054fe:	685b      	ldr	r3, [r3, #4]
 8005500:	091b      	lsrs	r3, r3, #4
 8005502:	f003 0201 	and.w	r2, r3, #1
 8005506:	69fb      	ldr	r3, [r7, #28]
 8005508:	fa02 f303 	lsl.w	r3, r2, r3
 800550c:	69ba      	ldr	r2, [r7, #24]
 800550e:	4313      	orrs	r3, r2
 8005510:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	69ba      	ldr	r2, [r7, #24]
 8005516:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8005518:	683b      	ldr	r3, [r7, #0]
 800551a:	685b      	ldr	r3, [r3, #4]
 800551c:	f003 0303 	and.w	r3, r3, #3
 8005520:	2b03      	cmp	r3, #3
 8005522:	d017      	beq.n	8005554 <HAL_GPIO_Init+0xf4>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	68db      	ldr	r3, [r3, #12]
 8005528:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 800552a:	69fb      	ldr	r3, [r7, #28]
 800552c:	005b      	lsls	r3, r3, #1
 800552e:	2203      	movs	r2, #3
 8005530:	fa02 f303 	lsl.w	r3, r2, r3
 8005534:	43db      	mvns	r3, r3
 8005536:	69ba      	ldr	r2, [r7, #24]
 8005538:	4013      	ands	r3, r2
 800553a:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2));
 800553c:	683b      	ldr	r3, [r7, #0]
 800553e:	689a      	ldr	r2, [r3, #8]
 8005540:	69fb      	ldr	r3, [r7, #28]
 8005542:	005b      	lsls	r3, r3, #1
 8005544:	fa02 f303 	lsl.w	r3, r2, r3
 8005548:	69ba      	ldr	r2, [r7, #24]
 800554a:	4313      	orrs	r3, r2
 800554c:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 800554e:	687b      	ldr	r3, [r7, #4]
 8005550:	69ba      	ldr	r2, [r7, #24]
 8005552:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8005554:	683b      	ldr	r3, [r7, #0]
 8005556:	685b      	ldr	r3, [r3, #4]
 8005558:	f003 0303 	and.w	r3, r3, #3
 800555c:	2b02      	cmp	r3, #2
 800555e:	d123      	bne.n	80055a8 <HAL_GPIO_Init+0x148>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3];
 8005560:	69fb      	ldr	r3, [r7, #28]
 8005562:	08da      	lsrs	r2, r3, #3
 8005564:	687b      	ldr	r3, [r7, #4]
 8005566:	3208      	adds	r2, #8
 8005568:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800556c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 800556e:	69fb      	ldr	r3, [r7, #28]
 8005570:	f003 0307 	and.w	r3, r3, #7
 8005574:	009b      	lsls	r3, r3, #2
 8005576:	220f      	movs	r2, #15
 8005578:	fa02 f303 	lsl.w	r3, r2, r3
 800557c:	43db      	mvns	r3, r3
 800557e:	69ba      	ldr	r2, [r7, #24]
 8005580:	4013      	ands	r3, r2
 8005582:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07) * 4));
 8005584:	683b      	ldr	r3, [r7, #0]
 8005586:	691a      	ldr	r2, [r3, #16]
 8005588:	69fb      	ldr	r3, [r7, #28]
 800558a:	f003 0307 	and.w	r3, r3, #7
 800558e:	009b      	lsls	r3, r3, #2
 8005590:	fa02 f303 	lsl.w	r3, r2, r3
 8005594:	69ba      	ldr	r2, [r7, #24]
 8005596:	4313      	orrs	r3, r2
 8005598:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3] = temp;
 800559a:	69fb      	ldr	r3, [r7, #28]
 800559c:	08da      	lsrs	r2, r3, #3
 800559e:	687b      	ldr	r3, [r7, #4]
 80055a0:	3208      	adds	r2, #8
 80055a2:	69b9      	ldr	r1, [r7, #24]
 80055a4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2));
 80055ae:	69fb      	ldr	r3, [r7, #28]
 80055b0:	005b      	lsls	r3, r3, #1
 80055b2:	2203      	movs	r2, #3
 80055b4:	fa02 f303 	lsl.w	r3, r2, r3
 80055b8:	43db      	mvns	r3, r3
 80055ba:	69ba      	ldr	r2, [r7, #24]
 80055bc:	4013      	ands	r3, r2
 80055be:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2));
 80055c0:	683b      	ldr	r3, [r7, #0]
 80055c2:	685b      	ldr	r3, [r3, #4]
 80055c4:	f003 0203 	and.w	r2, r3, #3
 80055c8:	69fb      	ldr	r3, [r7, #28]
 80055ca:	005b      	lsls	r3, r3, #1
 80055cc:	fa02 f303 	lsl.w	r3, r2, r3
 80055d0:	69ba      	ldr	r2, [r7, #24]
 80055d2:	4313      	orrs	r3, r2
 80055d4:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80055d6:	687b      	ldr	r3, [r7, #4]
 80055d8:	69ba      	ldr	r2, [r7, #24]
 80055da:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 80055dc:	683b      	ldr	r3, [r7, #0]
 80055de:	685b      	ldr	r3, [r3, #4]
 80055e0:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 80055e4:	2b00      	cmp	r3, #0
 80055e6:	f000 80be 	beq.w	8005766 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80055ea:	4b66      	ldr	r3, [pc, #408]	@ (8005784 <HAL_GPIO_Init+0x324>)
 80055ec:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80055ee:	4a65      	ldr	r2, [pc, #404]	@ (8005784 <HAL_GPIO_Init+0x324>)
 80055f0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80055f4:	6453      	str	r3, [r2, #68]	@ 0x44
 80055f6:	4b63      	ldr	r3, [pc, #396]	@ (8005784 <HAL_GPIO_Init+0x324>)
 80055f8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80055fa:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80055fe:	60fb      	str	r3, [r7, #12]
 8005600:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2];
 8005602:	4a61      	ldr	r2, [pc, #388]	@ (8005788 <HAL_GPIO_Init+0x328>)
 8005604:	69fb      	ldr	r3, [r7, #28]
 8005606:	089b      	lsrs	r3, r3, #2
 8005608:	3302      	adds	r3, #2
 800560a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800560e:	61bb      	str	r3, [r7, #24]
        temp &= ~(((uint32_t)0x0F) << (4 * (position & 0x03)));
 8005610:	69fb      	ldr	r3, [r7, #28]
 8005612:	f003 0303 	and.w	r3, r3, #3
 8005616:	009b      	lsls	r3, r3, #2
 8005618:	220f      	movs	r2, #15
 800561a:	fa02 f303 	lsl.w	r3, r2, r3
 800561e:	43db      	mvns	r3, r3
 8005620:	69ba      	ldr	r2, [r7, #24]
 8005622:	4013      	ands	r3, r2
 8005624:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03)));
 8005626:	687b      	ldr	r3, [r7, #4]
 8005628:	4a58      	ldr	r2, [pc, #352]	@ (800578c <HAL_GPIO_Init+0x32c>)
 800562a:	4293      	cmp	r3, r2
 800562c:	d037      	beq.n	800569e <HAL_GPIO_Init+0x23e>
 800562e:	687b      	ldr	r3, [r7, #4]
 8005630:	4a57      	ldr	r2, [pc, #348]	@ (8005790 <HAL_GPIO_Init+0x330>)
 8005632:	4293      	cmp	r3, r2
 8005634:	d031      	beq.n	800569a <HAL_GPIO_Init+0x23a>
 8005636:	687b      	ldr	r3, [r7, #4]
 8005638:	4a56      	ldr	r2, [pc, #344]	@ (8005794 <HAL_GPIO_Init+0x334>)
 800563a:	4293      	cmp	r3, r2
 800563c:	d02b      	beq.n	8005696 <HAL_GPIO_Init+0x236>
 800563e:	687b      	ldr	r3, [r7, #4]
 8005640:	4a55      	ldr	r2, [pc, #340]	@ (8005798 <HAL_GPIO_Init+0x338>)
 8005642:	4293      	cmp	r3, r2
 8005644:	d025      	beq.n	8005692 <HAL_GPIO_Init+0x232>
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	4a54      	ldr	r2, [pc, #336]	@ (800579c <HAL_GPIO_Init+0x33c>)
 800564a:	4293      	cmp	r3, r2
 800564c:	d01f      	beq.n	800568e <HAL_GPIO_Init+0x22e>
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	4a53      	ldr	r2, [pc, #332]	@ (80057a0 <HAL_GPIO_Init+0x340>)
 8005652:	4293      	cmp	r3, r2
 8005654:	d019      	beq.n	800568a <HAL_GPIO_Init+0x22a>
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	4a52      	ldr	r2, [pc, #328]	@ (80057a4 <HAL_GPIO_Init+0x344>)
 800565a:	4293      	cmp	r3, r2
 800565c:	d013      	beq.n	8005686 <HAL_GPIO_Init+0x226>
 800565e:	687b      	ldr	r3, [r7, #4]
 8005660:	4a51      	ldr	r2, [pc, #324]	@ (80057a8 <HAL_GPIO_Init+0x348>)
 8005662:	4293      	cmp	r3, r2
 8005664:	d00d      	beq.n	8005682 <HAL_GPIO_Init+0x222>
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	4a50      	ldr	r2, [pc, #320]	@ (80057ac <HAL_GPIO_Init+0x34c>)
 800566a:	4293      	cmp	r3, r2
 800566c:	d007      	beq.n	800567e <HAL_GPIO_Init+0x21e>
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	4a4f      	ldr	r2, [pc, #316]	@ (80057b0 <HAL_GPIO_Init+0x350>)
 8005672:	4293      	cmp	r3, r2
 8005674:	d101      	bne.n	800567a <HAL_GPIO_Init+0x21a>
 8005676:	2309      	movs	r3, #9
 8005678:	e012      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 800567a:	230a      	movs	r3, #10
 800567c:	e010      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 800567e:	2308      	movs	r3, #8
 8005680:	e00e      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 8005682:	2307      	movs	r3, #7
 8005684:	e00c      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 8005686:	2306      	movs	r3, #6
 8005688:	e00a      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 800568a:	2305      	movs	r3, #5
 800568c:	e008      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 800568e:	2304      	movs	r3, #4
 8005690:	e006      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 8005692:	2303      	movs	r3, #3
 8005694:	e004      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 8005696:	2302      	movs	r3, #2
 8005698:	e002      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 800569a:	2301      	movs	r3, #1
 800569c:	e000      	b.n	80056a0 <HAL_GPIO_Init+0x240>
 800569e:	2300      	movs	r3, #0
 80056a0:	69fa      	ldr	r2, [r7, #28]
 80056a2:	f002 0203 	and.w	r2, r2, #3
 80056a6:	0092      	lsls	r2, r2, #2
 80056a8:	4093      	lsls	r3, r2
 80056aa:	69ba      	ldr	r2, [r7, #24]
 80056ac:	4313      	orrs	r3, r2
 80056ae:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2] = temp;
 80056b0:	4935      	ldr	r1, [pc, #212]	@ (8005788 <HAL_GPIO_Init+0x328>)
 80056b2:	69fb      	ldr	r3, [r7, #28]
 80056b4:	089b      	lsrs	r3, r3, #2
 80056b6:	3302      	adds	r3, #2
 80056b8:	69ba      	ldr	r2, [r7, #24]
 80056ba:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80056be:	4b3d      	ldr	r3, [pc, #244]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 80056c0:	689b      	ldr	r3, [r3, #8]
 80056c2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80056c4:	693b      	ldr	r3, [r7, #16]
 80056c6:	43db      	mvns	r3, r3
 80056c8:	69ba      	ldr	r2, [r7, #24]
 80056ca:	4013      	ands	r3, r2
 80056cc:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 80056ce:	683b      	ldr	r3, [r7, #0]
 80056d0:	685b      	ldr	r3, [r3, #4]
 80056d2:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80056d6:	2b00      	cmp	r3, #0
 80056d8:	d003      	beq.n	80056e2 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80056da:	69ba      	ldr	r2, [r7, #24]
 80056dc:	693b      	ldr	r3, [r7, #16]
 80056de:	4313      	orrs	r3, r2
 80056e0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80056e2:	4a34      	ldr	r2, [pc, #208]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 80056e4:	69bb      	ldr	r3, [r7, #24]
 80056e6:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80056e8:	4b32      	ldr	r3, [pc, #200]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 80056ea:	68db      	ldr	r3, [r3, #12]
 80056ec:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80056ee:	693b      	ldr	r3, [r7, #16]
 80056f0:	43db      	mvns	r3, r3
 80056f2:	69ba      	ldr	r2, [r7, #24]
 80056f4:	4013      	ands	r3, r2
 80056f6:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 80056f8:	683b      	ldr	r3, [r7, #0]
 80056fa:	685b      	ldr	r3, [r3, #4]
 80056fc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8005700:	2b00      	cmp	r3, #0
 8005702:	d003      	beq.n	800570c <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8005704:	69ba      	ldr	r2, [r7, #24]
 8005706:	693b      	ldr	r3, [r7, #16]
 8005708:	4313      	orrs	r3, r2
 800570a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 800570c:	4a29      	ldr	r2, [pc, #164]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 800570e:	69bb      	ldr	r3, [r7, #24]
 8005710:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8005712:	4b28      	ldr	r3, [pc, #160]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 8005714:	685b      	ldr	r3, [r3, #4]
 8005716:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8005718:	693b      	ldr	r3, [r7, #16]
 800571a:	43db      	mvns	r3, r3
 800571c:	69ba      	ldr	r2, [r7, #24]
 800571e:	4013      	ands	r3, r2
 8005720:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8005722:	683b      	ldr	r3, [r7, #0]
 8005724:	685b      	ldr	r3, [r3, #4]
 8005726:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800572a:	2b00      	cmp	r3, #0
 800572c:	d003      	beq.n	8005736 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 800572e:	69ba      	ldr	r2, [r7, #24]
 8005730:	693b      	ldr	r3, [r7, #16]
 8005732:	4313      	orrs	r3, r2
 8005734:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8005736:	4a1f      	ldr	r2, [pc, #124]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 8005738:	69bb      	ldr	r3, [r7, #24]
 800573a:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800573c:	4b1d      	ldr	r3, [pc, #116]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 800573e:	681b      	ldr	r3, [r3, #0]
 8005740:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8005742:	693b      	ldr	r3, [r7, #16]
 8005744:	43db      	mvns	r3, r3
 8005746:	69ba      	ldr	r2, [r7, #24]
 8005748:	4013      	ands	r3, r2
 800574a:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 800574c:	683b      	ldr	r3, [r7, #0]
 800574e:	685b      	ldr	r3, [r3, #4]
 8005750:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8005754:	2b00      	cmp	r3, #0
 8005756:	d003      	beq.n	8005760 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8005758:	69ba      	ldr	r2, [r7, #24]
 800575a:	693b      	ldr	r3, [r7, #16]
 800575c:	4313      	orrs	r3, r2
 800575e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8005760:	4a14      	ldr	r2, [pc, #80]	@ (80057b4 <HAL_GPIO_Init+0x354>)
 8005762:	69bb      	ldr	r3, [r7, #24]
 8005764:	6013      	str	r3, [r2, #0]
  for (position = 0; position < GPIO_NUMBER; position++)
 8005766:	69fb      	ldr	r3, [r7, #28]
 8005768:	3301      	adds	r3, #1
 800576a:	61fb      	str	r3, [r7, #28]
 800576c:	69fb      	ldr	r3, [r7, #28]
 800576e:	2b0f      	cmp	r3, #15
 8005770:	f67f ae86 	bls.w	8005480 <HAL_GPIO_Init+0x20>
      }
    }
  }
}
 8005774:	bf00      	nop
 8005776:	bf00      	nop
 8005778:	3724      	adds	r7, #36	@ 0x24
 800577a:	46bd      	mov	sp, r7
 800577c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005780:	4770      	bx	lr
 8005782:	bf00      	nop
 8005784:	40023800 	.word	0x40023800
 8005788:	40013800 	.word	0x40013800
 800578c:	40020000 	.word	0x40020000
 8005790:	40020400 	.word	0x40020400
 8005794:	40020800 	.word	0x40020800
 8005798:	40020c00 	.word	0x40020c00
 800579c:	40021000 	.word	0x40021000
 80057a0:	40021400 	.word	0x40021400
 80057a4:	40021800 	.word	0x40021800
 80057a8:	40021c00 	.word	0x40021c00
 80057ac:	40022000 	.word	0x40022000
 80057b0:	40022400 	.word	0x40022400
 80057b4:	40013c00 	.word	0x40013c00

080057b8 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 80057b8:	b480      	push	{r7}
 80057ba:	b087      	sub	sp, #28
 80057bc:	af00      	add	r7, sp, #0
 80057be:	6078      	str	r0, [r7, #4]
 80057c0:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00;
 80057c2:	2300      	movs	r3, #0
 80057c4:	613b      	str	r3, [r7, #16]
  uint32_t iocurrent = 0x00;
 80057c6:	2300      	movs	r3, #0
 80057c8:	60fb      	str	r3, [r7, #12]
  uint32_t tmp = 0x00;
 80057ca:	2300      	movs	r3, #0
 80057cc:	60bb      	str	r3, [r7, #8]

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));

  /* Configure the port pins */
  for (position = 0; position < GPIO_NUMBER; position++)
 80057ce:	2300      	movs	r3, #0
 80057d0:	617b      	str	r3, [r7, #20]
 80057d2:	e0d9      	b.n	8005988 <HAL_GPIO_DeInit+0x1d0>
  {
    /* Get the IO position */
    ioposition = ((uint32_t)0x01) << position;
 80057d4:	2201      	movs	r2, #1
 80057d6:	697b      	ldr	r3, [r7, #20]
 80057d8:	fa02 f303 	lsl.w	r3, r2, r3
 80057dc:	613b      	str	r3, [r7, #16]
    /* Get the current IO position */
    iocurrent = (GPIO_Pin) & ioposition;
 80057de:	683a      	ldr	r2, [r7, #0]
 80057e0:	693b      	ldr	r3, [r7, #16]
 80057e2:	4013      	ands	r3, r2
 80057e4:	60fb      	str	r3, [r7, #12]

    if (iocurrent == ioposition)
 80057e6:	68fa      	ldr	r2, [r7, #12]
 80057e8:	693b      	ldr	r3, [r7, #16]
 80057ea:	429a      	cmp	r2, r3
 80057ec:	f040 80c9 	bne.w	8005982 <HAL_GPIO_DeInit+0x1ca>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2];
 80057f0:	4a6b      	ldr	r2, [pc, #428]	@ (80059a0 <HAL_GPIO_DeInit+0x1e8>)
 80057f2:	697b      	ldr	r3, [r7, #20]
 80057f4:	089b      	lsrs	r3, r3, #2
 80057f6:	3302      	adds	r3, #2
 80057f8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80057fc:	60bb      	str	r3, [r7, #8]
      tmp &= (((uint32_t)0x0F) << (4 * (position & 0x03)));
 80057fe:	697b      	ldr	r3, [r7, #20]
 8005800:	f003 0303 	and.w	r3, r3, #3
 8005804:	009b      	lsls	r3, r3, #2
 8005806:	220f      	movs	r2, #15
 8005808:	fa02 f303 	lsl.w	r3, r2, r3
 800580c:	68ba      	ldr	r2, [r7, #8]
 800580e:	4013      	ands	r3, r2
 8005810:	60bb      	str	r3, [r7, #8]
      if (tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03))))
 8005812:	687b      	ldr	r3, [r7, #4]
 8005814:	4a63      	ldr	r2, [pc, #396]	@ (80059a4 <HAL_GPIO_DeInit+0x1ec>)
 8005816:	4293      	cmp	r3, r2
 8005818:	d037      	beq.n	800588a <HAL_GPIO_DeInit+0xd2>
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	4a62      	ldr	r2, [pc, #392]	@ (80059a8 <HAL_GPIO_DeInit+0x1f0>)
 800581e:	4293      	cmp	r3, r2
 8005820:	d031      	beq.n	8005886 <HAL_GPIO_DeInit+0xce>
 8005822:	687b      	ldr	r3, [r7, #4]
 8005824:	4a61      	ldr	r2, [pc, #388]	@ (80059ac <HAL_GPIO_DeInit+0x1f4>)
 8005826:	4293      	cmp	r3, r2
 8005828:	d02b      	beq.n	8005882 <HAL_GPIO_DeInit+0xca>
 800582a:	687b      	ldr	r3, [r7, #4]
 800582c:	4a60      	ldr	r2, [pc, #384]	@ (80059b0 <HAL_GPIO_DeInit+0x1f8>)
 800582e:	4293      	cmp	r3, r2
 8005830:	d025      	beq.n	800587e <HAL_GPIO_DeInit+0xc6>
 8005832:	687b      	ldr	r3, [r7, #4]
 8005834:	4a5f      	ldr	r2, [pc, #380]	@ (80059b4 <HAL_GPIO_DeInit+0x1fc>)
 8005836:	4293      	cmp	r3, r2
 8005838:	d01f      	beq.n	800587a <HAL_GPIO_DeInit+0xc2>
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	4a5e      	ldr	r2, [pc, #376]	@ (80059b8 <HAL_GPIO_DeInit+0x200>)
 800583e:	4293      	cmp	r3, r2
 8005840:	d019      	beq.n	8005876 <HAL_GPIO_DeInit+0xbe>
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	4a5d      	ldr	r2, [pc, #372]	@ (80059bc <HAL_GPIO_DeInit+0x204>)
 8005846:	4293      	cmp	r3, r2
 8005848:	d013      	beq.n	8005872 <HAL_GPIO_DeInit+0xba>
 800584a:	687b      	ldr	r3, [r7, #4]
 800584c:	4a5c      	ldr	r2, [pc, #368]	@ (80059c0 <HAL_GPIO_DeInit+0x208>)
 800584e:	4293      	cmp	r3, r2
 8005850:	d00d      	beq.n	800586e <HAL_GPIO_DeInit+0xb6>
 8005852:	687b      	ldr	r3, [r7, #4]
 8005854:	4a5b      	ldr	r2, [pc, #364]	@ (80059c4 <HAL_GPIO_DeInit+0x20c>)
 8005856:	4293      	cmp	r3, r2
 8005858:	d007      	beq.n	800586a <HAL_GPIO_DeInit+0xb2>
 800585a:	687b      	ldr	r3, [r7, #4]
 800585c:	4a5a      	ldr	r2, [pc, #360]	@ (80059c8 <HAL_GPIO_DeInit+0x210>)
 800585e:	4293      	cmp	r3, r2
 8005860:	d101      	bne.n	8005866 <HAL_GPIO_DeInit+0xae>
 8005862:	2309      	movs	r3, #9
 8005864:	e012      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 8005866:	230a      	movs	r3, #10
 8005868:	e010      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 800586a:	2308      	movs	r3, #8
 800586c:	e00e      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 800586e:	2307      	movs	r3, #7
 8005870:	e00c      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 8005872:	2306      	movs	r3, #6
 8005874:	e00a      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 8005876:	2305      	movs	r3, #5
 8005878:	e008      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 800587a:	2304      	movs	r3, #4
 800587c:	e006      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 800587e:	2303      	movs	r3, #3
 8005880:	e004      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 8005882:	2302      	movs	r3, #2
 8005884:	e002      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 8005886:	2301      	movs	r3, #1
 8005888:	e000      	b.n	800588c <HAL_GPIO_DeInit+0xd4>
 800588a:	2300      	movs	r3, #0
 800588c:	697a      	ldr	r2, [r7, #20]
 800588e:	f002 0203 	and.w	r2, r2, #3
 8005892:	0092      	lsls	r2, r2, #2
 8005894:	4093      	lsls	r3, r2
 8005896:	68ba      	ldr	r2, [r7, #8]
 8005898:	429a      	cmp	r2, r3
 800589a:	d132      	bne.n	8005902 <HAL_GPIO_DeInit+0x14a>
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800589c:	4b4b      	ldr	r3, [pc, #300]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 800589e:	681a      	ldr	r2, [r3, #0]
 80058a0:	68fb      	ldr	r3, [r7, #12]
 80058a2:	43db      	mvns	r3, r3
 80058a4:	4949      	ldr	r1, [pc, #292]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058a6:	4013      	ands	r3, r2
 80058a8:	600b      	str	r3, [r1, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80058aa:	4b48      	ldr	r3, [pc, #288]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058ac:	685a      	ldr	r2, [r3, #4]
 80058ae:	68fb      	ldr	r3, [r7, #12]
 80058b0:	43db      	mvns	r3, r3
 80058b2:	4946      	ldr	r1, [pc, #280]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058b4:	4013      	ands	r3, r2
 80058b6:	604b      	str	r3, [r1, #4]

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80058b8:	4b44      	ldr	r3, [pc, #272]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058ba:	68da      	ldr	r2, [r3, #12]
 80058bc:	68fb      	ldr	r3, [r7, #12]
 80058be:	43db      	mvns	r3, r3
 80058c0:	4942      	ldr	r1, [pc, #264]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058c2:	4013      	ands	r3, r2
 80058c4:	60cb      	str	r3, [r1, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80058c6:	4b41      	ldr	r3, [pc, #260]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058c8:	689a      	ldr	r2, [r3, #8]
 80058ca:	68fb      	ldr	r3, [r7, #12]
 80058cc:	43db      	mvns	r3, r3
 80058ce:	493f      	ldr	r1, [pc, #252]	@ (80059cc <HAL_GPIO_DeInit+0x214>)
 80058d0:	4013      	ands	r3, r2
 80058d2:	608b      	str	r3, [r1, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = ((uint32_t)0x0F) << (4 * (position & 0x03));
 80058d4:	697b      	ldr	r3, [r7, #20]
 80058d6:	f003 0303 	and.w	r3, r3, #3
 80058da:	009b      	lsls	r3, r3, #2
 80058dc:	220f      	movs	r2, #15
 80058de:	fa02 f303 	lsl.w	r3, r2, r3
 80058e2:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2] &= ~tmp;
 80058e4:	4a2e      	ldr	r2, [pc, #184]	@ (80059a0 <HAL_GPIO_DeInit+0x1e8>)
 80058e6:	697b      	ldr	r3, [r7, #20]
 80058e8:	089b      	lsrs	r3, r3, #2
 80058ea:	3302      	adds	r3, #2
 80058ec:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80058f0:	68bb      	ldr	r3, [r7, #8]
 80058f2:	43da      	mvns	r2, r3
 80058f4:	482a      	ldr	r0, [pc, #168]	@ (80059a0 <HAL_GPIO_DeInit+0x1e8>)
 80058f6:	697b      	ldr	r3, [r7, #20]
 80058f8:	089b      	lsrs	r3, r3, #2
 80058fa:	400a      	ands	r2, r1
 80058fc:	3302      	adds	r3, #2
 80058fe:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }
      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2));
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	681a      	ldr	r2, [r3, #0]
 8005906:	697b      	ldr	r3, [r7, #20]
 8005908:	005b      	lsls	r3, r3, #1
 800590a:	2103      	movs	r1, #3
 800590c:	fa01 f303 	lsl.w	r3, r1, r3
 8005910:	43db      	mvns	r3, r3
 8005912:	401a      	ands	r2, r3
 8005914:	687b      	ldr	r3, [r7, #4]
 8005916:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3] &= ~((uint32_t)0xF << ((uint32_t)(position & (uint32_t)0x07) * 4)) ;
 8005918:	697b      	ldr	r3, [r7, #20]
 800591a:	08da      	lsrs	r2, r3, #3
 800591c:	687b      	ldr	r3, [r7, #4]
 800591e:	3208      	adds	r2, #8
 8005920:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005924:	697b      	ldr	r3, [r7, #20]
 8005926:	f003 0307 	and.w	r3, r3, #7
 800592a:	009b      	lsls	r3, r3, #2
 800592c:	220f      	movs	r2, #15
 800592e:	fa02 f303 	lsl.w	r3, r2, r3
 8005932:	43db      	mvns	r3, r3
 8005934:	697a      	ldr	r2, [r7, #20]
 8005936:	08d2      	lsrs	r2, r2, #3
 8005938:	4019      	ands	r1, r3
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	3208      	adds	r2, #8
 800593e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2));
 8005942:	687b      	ldr	r3, [r7, #4]
 8005944:	68da      	ldr	r2, [r3, #12]
 8005946:	697b      	ldr	r3, [r7, #20]
 8005948:	005b      	lsls	r3, r3, #1
 800594a:	2103      	movs	r1, #3
 800594c:	fa01 f303 	lsl.w	r3, r1, r3
 8005950:	43db      	mvns	r3, r3
 8005952:	401a      	ands	r2, r3
 8005954:	687b      	ldr	r3, [r7, #4]
 8005956:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	685a      	ldr	r2, [r3, #4]
 800595c:	2101      	movs	r1, #1
 800595e:	697b      	ldr	r3, [r7, #20]
 8005960:	fa01 f303 	lsl.w	r3, r1, r3
 8005964:	43db      	mvns	r3, r3
 8005966:	401a      	ands	r2, r3
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2));
 800596c:	687b      	ldr	r3, [r7, #4]
 800596e:	689a      	ldr	r2, [r3, #8]
 8005970:	697b      	ldr	r3, [r7, #20]
 8005972:	005b      	lsls	r3, r3, #1
 8005974:	2103      	movs	r1, #3
 8005976:	fa01 f303 	lsl.w	r3, r1, r3
 800597a:	43db      	mvns	r3, r3
 800597c:	401a      	ands	r2, r3
 800597e:	687b      	ldr	r3, [r7, #4]
 8005980:	609a      	str	r2, [r3, #8]
  for (position = 0; position < GPIO_NUMBER; position++)
 8005982:	697b      	ldr	r3, [r7, #20]
 8005984:	3301      	adds	r3, #1
 8005986:	617b      	str	r3, [r7, #20]
 8005988:	697b      	ldr	r3, [r7, #20]
 800598a:	2b0f      	cmp	r3, #15
 800598c:	f67f af22 	bls.w	80057d4 <HAL_GPIO_DeInit+0x1c>
    }
  }
}
 8005990:	bf00      	nop
 8005992:	bf00      	nop
 8005994:	371c      	adds	r7, #28
 8005996:	46bd      	mov	sp, r7
 8005998:	f85d 7b04 	ldr.w	r7, [sp], #4
 800599c:	4770      	bx	lr
 800599e:	bf00      	nop
 80059a0:	40013800 	.word	0x40013800
 80059a4:	40020000 	.word	0x40020000
 80059a8:	40020400 	.word	0x40020400
 80059ac:	40020800 	.word	0x40020800
 80059b0:	40020c00 	.word	0x40020c00
 80059b4:	40021000 	.word	0x40021000
 80059b8:	40021400 	.word	0x40021400
 80059bc:	40021800 	.word	0x40021800
 80059c0:	40021c00 	.word	0x40021c00
 80059c4:	40022000 	.word	0x40022000
 80059c8:	40022400 	.word	0x40022400
 80059cc:	40013c00 	.word	0x40013c00

080059d0 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be any combination of GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80059d0:	b480      	push	{r7}
 80059d2:	b085      	sub	sp, #20
 80059d4:	af00      	add	r7, sp, #0
 80059d6:	6078      	str	r0, [r7, #4]
 80059d8:	460b      	mov	r3, r1
 80059da:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	691a      	ldr	r2, [r3, #16]
 80059e0:	887b      	ldrh	r3, [r7, #2]
 80059e2:	4013      	ands	r3, r2
 80059e4:	2b00      	cmp	r3, #0
 80059e6:	d002      	beq.n	80059ee <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80059e8:	2301      	movs	r3, #1
 80059ea:	73fb      	strb	r3, [r7, #15]
 80059ec:	e001      	b.n	80059f2 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80059ee:	2300      	movs	r3, #0
 80059f0:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80059f2:	7bfb      	ldrb	r3, [r7, #15]
}
 80059f4:	4618      	mov	r0, r3
 80059f6:	3714      	adds	r7, #20
 80059f8:	46bd      	mov	sp, r7
 80059fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059fe:	4770      	bx	lr

08005a00 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8005a00:	b480      	push	{r7}
 8005a02:	b083      	sub	sp, #12
 8005a04:	af00      	add	r7, sp, #0
 8005a06:	6078      	str	r0, [r7, #4]
 8005a08:	460b      	mov	r3, r1
 8005a0a:	807b      	strh	r3, [r7, #2]
 8005a0c:	4613      	mov	r3, r2
 8005a0e:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8005a10:	787b      	ldrb	r3, [r7, #1]
 8005a12:	2b00      	cmp	r3, #0
 8005a14:	d003      	beq.n	8005a1e <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8005a16:	887a      	ldrh	r2, [r7, #2]
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
  }
}
 8005a1c:	e003      	b.n	8005a26 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16;
 8005a1e:	887b      	ldrh	r3, [r7, #2]
 8005a20:	041a      	lsls	r2, r3, #16
 8005a22:	687b      	ldr	r3, [r7, #4]
 8005a24:	619a      	str	r2, [r3, #24]
}
 8005a26:	bf00      	nop
 8005a28:	370c      	adds	r7, #12
 8005a2a:	46bd      	mov	sp, r7
 8005a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a30:	4770      	bx	lr
	...

08005a34 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8005a34:	b580      	push	{r7, lr}
 8005a36:	b082      	sub	sp, #8
 8005a38:	af00      	add	r7, sp, #0
 8005a3a:	4603      	mov	r3, r0
 8005a3c:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8005a3e:	4b08      	ldr	r3, [pc, #32]	@ (8005a60 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005a40:	695a      	ldr	r2, [r3, #20]
 8005a42:	88fb      	ldrh	r3, [r7, #6]
 8005a44:	4013      	ands	r3, r2
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	d006      	beq.n	8005a58 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 8005a4a:	4a05      	ldr	r2, [pc, #20]	@ (8005a60 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8005a4c:	88fb      	ldrh	r3, [r7, #6]
 8005a4e:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8005a50:	88fb      	ldrh	r3, [r7, #6]
 8005a52:	4618      	mov	r0, r3
 8005a54:	f000 f806 	bl	8005a64 <HAL_GPIO_EXTI_Callback>
  }
}
 8005a58:	bf00      	nop
 8005a5a:	3708      	adds	r7, #8
 8005a5c:	46bd      	mov	sp, r7
 8005a5e:	bd80      	pop	{r7, pc}
 8005a60:	40013c00 	.word	0x40013c00

08005a64 <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8005a64:	b480      	push	{r7}
 8005a66:	b083      	sub	sp, #12
 8005a68:	af00      	add	r7, sp, #0
 8005a6a:	4603      	mov	r3, r0
 8005a6c:	80fb      	strh	r3, [r7, #6]
  UNUSED(GPIO_Pin);

  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8005a6e:	bf00      	nop
 8005a70:	370c      	adds	r7, #12
 8005a72:	46bd      	mov	sp, r7
 8005a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a78:	4770      	bx	lr
	...

08005a7c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8005a7c:	b580      	push	{r7, lr}
 8005a7e:	b082      	sub	sp, #8
 8005a80:	af00      	add	r7, sp, #0
 8005a82:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d101      	bne.n	8005a8e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8005a8a:	2301      	movs	r3, #1
 8005a8c:	e08b      	b.n	8005ba6 <HAL_I2C_Init+0x12a>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005a94:	b2db      	uxtb	r3, r3
 8005a96:	2b00      	cmp	r3, #0
 8005a98:	d106      	bne.n	8005aa8 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8005a9a:	687b      	ldr	r3, [r7, #4]
 8005a9c:	2200      	movs	r2, #0
 8005a9e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 8005aa2:	6878      	ldr	r0, [r7, #4]
 8005aa4:	f7fb f8ac 	bl	8000c00 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	2224      	movs	r2, #36	@ 0x24
 8005aac:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8005ab0:	687b      	ldr	r3, [r7, #4]
 8005ab2:	681b      	ldr	r3, [r3, #0]
 8005ab4:	681a      	ldr	r2, [r3, #0]
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	681b      	ldr	r3, [r3, #0]
 8005aba:	f022 0201 	bic.w	r2, r2, #1
 8005abe:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	685a      	ldr	r2, [r3, #4]
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8005acc:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8005ace:	687b      	ldr	r3, [r7, #4]
 8005ad0:	681b      	ldr	r3, [r3, #0]
 8005ad2:	689a      	ldr	r2, [r3, #8]
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	681b      	ldr	r3, [r3, #0]
 8005ad8:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005adc:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	68db      	ldr	r3, [r3, #12]
 8005ae2:	2b01      	cmp	r3, #1
 8005ae4:	d107      	bne.n	8005af6 <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8005ae6:	687b      	ldr	r3, [r7, #4]
 8005ae8:	689a      	ldr	r2, [r3, #8]
 8005aea:	687b      	ldr	r3, [r7, #4]
 8005aec:	681b      	ldr	r3, [r3, #0]
 8005aee:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8005af2:	609a      	str	r2, [r3, #8]
 8005af4:	e006      	b.n	8005b04 <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	689a      	ldr	r2, [r3, #8]
 8005afa:	687b      	ldr	r3, [r7, #4]
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8005b02:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8005b04:	687b      	ldr	r3, [r7, #4]
 8005b06:	68db      	ldr	r3, [r3, #12]
 8005b08:	2b02      	cmp	r3, #2
 8005b0a:	d108      	bne.n	8005b1e <HAL_I2C_Init+0xa2>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005b0c:	687b      	ldr	r3, [r7, #4]
 8005b0e:	681b      	ldr	r3, [r3, #0]
 8005b10:	685a      	ldr	r2, [r3, #4]
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8005b1a:	605a      	str	r2, [r3, #4]
 8005b1c:	e007      	b.n	8005b2e <HAL_I2C_Init+0xb2>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	685a      	ldr	r2, [r3, #4]
 8005b24:	687b      	ldr	r3, [r7, #4]
 8005b26:	681b      	ldr	r3, [r3, #0]
 8005b28:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8005b2c:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8005b2e:	687b      	ldr	r3, [r7, #4]
 8005b30:	681b      	ldr	r3, [r3, #0]
 8005b32:	6859      	ldr	r1, [r3, #4]
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	681a      	ldr	r2, [r3, #0]
 8005b38:	4b1d      	ldr	r3, [pc, #116]	@ (8005bb0 <HAL_I2C_Init+0x134>)
 8005b3a:	430b      	orrs	r3, r1
 8005b3c:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	68da      	ldr	r2, [r3, #12]
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8005b4c:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005b4e:	687b      	ldr	r3, [r7, #4]
 8005b50:	691a      	ldr	r2, [r3, #16]
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	695b      	ldr	r3, [r3, #20]
 8005b56:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	699b      	ldr	r3, [r3, #24]
 8005b5e:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8005b60:	687b      	ldr	r3, [r7, #4]
 8005b62:	681b      	ldr	r3, [r3, #0]
 8005b64:	430a      	orrs	r2, r1
 8005b66:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8005b68:	687b      	ldr	r3, [r7, #4]
 8005b6a:	69d9      	ldr	r1, [r3, #28]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	6a1a      	ldr	r2, [r3, #32]
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	430a      	orrs	r2, r1
 8005b76:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8005b78:	687b      	ldr	r3, [r7, #4]
 8005b7a:	681b      	ldr	r3, [r3, #0]
 8005b7c:	681a      	ldr	r2, [r3, #0]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	f042 0201 	orr.w	r2, r2, #1
 8005b86:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005b88:	687b      	ldr	r3, [r7, #4]
 8005b8a:	2200      	movs	r2, #0
 8005b8c:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	2220      	movs	r2, #32
 8005b92:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005b96:	687b      	ldr	r3, [r7, #4]
 8005b98:	2200      	movs	r2, #0
 8005b9a:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	2200      	movs	r2, #0
 8005ba0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  return HAL_OK;
 8005ba4:	2300      	movs	r3, #0
}
 8005ba6:	4618      	mov	r0, r3
 8005ba8:	3708      	adds	r7, #8
 8005baa:	46bd      	mov	sp, r7
 8005bac:	bd80      	pop	{r7, pc}
 8005bae:	bf00      	nop
 8005bb0:	02008000 	.word	0x02008000

08005bb4 <HAL_I2C_DeInit>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
{
 8005bb4:	b580      	push	{r7, lr}
 8005bb6:	b082      	sub	sp, #8
 8005bb8:	af00      	add	r7, sp, #0
 8005bba:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8005bbc:	687b      	ldr	r3, [r7, #4]
 8005bbe:	2b00      	cmp	r3, #0
 8005bc0:	d101      	bne.n	8005bc6 <HAL_I2C_DeInit+0x12>
  {
    return HAL_ERROR;
 8005bc2:	2301      	movs	r3, #1
 8005bc4:	e021      	b.n	8005c0a <HAL_I2C_DeInit+0x56>
  }

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));

  hi2c->State = HAL_I2C_STATE_BUSY;
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	2224      	movs	r2, #36	@ 0x24
 8005bca:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the I2C Peripheral Clock */
  __HAL_I2C_DISABLE(hi2c);
 8005bce:	687b      	ldr	r3, [r7, #4]
 8005bd0:	681b      	ldr	r3, [r3, #0]
 8005bd2:	681a      	ldr	r2, [r3, #0]
 8005bd4:	687b      	ldr	r3, [r7, #4]
 8005bd6:	681b      	ldr	r3, [r3, #0]
 8005bd8:	f022 0201 	bic.w	r2, r2, #1
 8005bdc:	601a      	str	r2, [r3, #0]

  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  hi2c->MspDeInitCallback(hi2c);
#else
  /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
  HAL_I2C_MspDeInit(hi2c);
 8005bde:	6878      	ldr	r0, [r7, #4]
 8005be0:	f7fb f86e 	bl	8000cc0 <HAL_I2C_MspDeInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005be4:	687b      	ldr	r3, [r7, #4]
 8005be6:	2200      	movs	r2, #0
 8005be8:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_RESET;
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	2200      	movs	r2, #0
 8005bee:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	2200      	movs	r2, #0
 8005bf6:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	2200      	movs	r2, #0
 8005bfc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  /* Release Lock */
  __HAL_UNLOCK(hi2c);
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	2200      	movs	r2, #0
 8005c04:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  return HAL_OK;
 8005c08:	2300      	movs	r3, #0
}
 8005c0a:	4618      	mov	r0, r3
 8005c0c:	3708      	adds	r7, #8
 8005c0e:	46bd      	mov	sp, r7
 8005c10:	bd80      	pop	{r7, pc}
	...

08005c14 <HAL_I2C_Mem_Write>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005c14:	b580      	push	{r7, lr}
 8005c16:	b088      	sub	sp, #32
 8005c18:	af02      	add	r7, sp, #8
 8005c1a:	60f8      	str	r0, [r7, #12]
 8005c1c:	4608      	mov	r0, r1
 8005c1e:	4611      	mov	r1, r2
 8005c20:	461a      	mov	r2, r3
 8005c22:	4603      	mov	r3, r0
 8005c24:	817b      	strh	r3, [r7, #10]
 8005c26:	460b      	mov	r3, r1
 8005c28:	813b      	strh	r3, [r7, #8]
 8005c2a:	4613      	mov	r3, r2
 8005c2c:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005c2e:	68fb      	ldr	r3, [r7, #12]
 8005c30:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005c34:	b2db      	uxtb	r3, r3
 8005c36:	2b20      	cmp	r3, #32
 8005c38:	f040 80f9 	bne.w	8005e2e <HAL_I2C_Mem_Write+0x21a>
  {
    if ((pData == NULL) || (Size == 0U))
 8005c3c:	6a3b      	ldr	r3, [r7, #32]
 8005c3e:	2b00      	cmp	r3, #0
 8005c40:	d002      	beq.n	8005c48 <HAL_I2C_Mem_Write+0x34>
 8005c42:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d105      	bne.n	8005c54 <HAL_I2C_Mem_Write+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005c48:	68fb      	ldr	r3, [r7, #12]
 8005c4a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005c4e:	645a      	str	r2, [r3, #68]	@ 0x44
      return  HAL_ERROR;
 8005c50:	2301      	movs	r3, #1
 8005c52:	e0ed      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005c5a:	2b01      	cmp	r3, #1
 8005c5c:	d101      	bne.n	8005c62 <HAL_I2C_Mem_Write+0x4e>
 8005c5e:	2302      	movs	r3, #2
 8005c60:	e0e6      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	2201      	movs	r2, #1
 8005c66:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8005c6a:	f7fe ff61 	bl	8004b30 <HAL_GetTick>
 8005c6e:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005c70:	697b      	ldr	r3, [r7, #20]
 8005c72:	9300      	str	r3, [sp, #0]
 8005c74:	2319      	movs	r3, #25
 8005c76:	2201      	movs	r2, #1
 8005c78:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005c7c:	68f8      	ldr	r0, [r7, #12]
 8005c7e:	f000 fad1 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 8005c82:	4603      	mov	r3, r0
 8005c84:	2b00      	cmp	r3, #0
 8005c86:	d001      	beq.n	8005c8c <HAL_I2C_Mem_Write+0x78>
    {
      return HAL_ERROR;
 8005c88:	2301      	movs	r3, #1
 8005c8a:	e0d1      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8005c8c:	68fb      	ldr	r3, [r7, #12]
 8005c8e:	2221      	movs	r2, #33	@ 0x21
 8005c90:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005c94:	68fb      	ldr	r3, [r7, #12]
 8005c96:	2240      	movs	r2, #64	@ 0x40
 8005c98:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005c9c:	68fb      	ldr	r3, [r7, #12]
 8005c9e:	2200      	movs	r2, #0
 8005ca0:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8005ca2:	68fb      	ldr	r3, [r7, #12]
 8005ca4:	6a3a      	ldr	r2, [r7, #32]
 8005ca6:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 8005ca8:	68fb      	ldr	r3, [r7, #12]
 8005caa:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8005cac:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 8005cae:	68fb      	ldr	r3, [r7, #12]
 8005cb0:	2200      	movs	r2, #0
 8005cb2:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005cb4:	88f8      	ldrh	r0, [r7, #6]
 8005cb6:	893a      	ldrh	r2, [r7, #8]
 8005cb8:	8979      	ldrh	r1, [r7, #10]
 8005cba:	697b      	ldr	r3, [r7, #20]
 8005cbc:	9301      	str	r3, [sp, #4]
 8005cbe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005cc0:	9300      	str	r3, [sp, #0]
 8005cc2:	4603      	mov	r3, r0
 8005cc4:	68f8      	ldr	r0, [r7, #12]
 8005cc6:	f000 f9e1 	bl	800608c <I2C_RequestMemoryWrite>
 8005cca:	4603      	mov	r3, r0
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	d005      	beq.n	8005cdc <HAL_I2C_Mem_Write+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005cd0:	68fb      	ldr	r3, [r7, #12]
 8005cd2:	2200      	movs	r2, #0
 8005cd4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
      return HAL_ERROR;
 8005cd8:	2301      	movs	r3, #1
 8005cda:	e0a9      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005cdc:	68fb      	ldr	r3, [r7, #12]
 8005cde:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005ce0:	b29b      	uxth	r3, r3
 8005ce2:	2bff      	cmp	r3, #255	@ 0xff
 8005ce4:	d90e      	bls.n	8005d04 <HAL_I2C_Mem_Write+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8005ce6:	68fb      	ldr	r3, [r7, #12]
 8005ce8:	22ff      	movs	r2, #255	@ 0xff
 8005cea:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8005cec:	68fb      	ldr	r3, [r7, #12]
 8005cee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005cf0:	b2da      	uxtb	r2, r3
 8005cf2:	8979      	ldrh	r1, [r7, #10]
 8005cf4:	2300      	movs	r3, #0
 8005cf6:	9300      	str	r3, [sp, #0]
 8005cf8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005cfc:	68f8      	ldr	r0, [r7, #12]
 8005cfe:	f000 fc55 	bl	80065ac <I2C_TransferConfig>
 8005d02:	e00f      	b.n	8005d24 <HAL_I2C_Mem_Write+0x110>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8005d04:	68fb      	ldr	r3, [r7, #12]
 8005d06:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005d08:	b29a      	uxth	r2, r3
 8005d0a:	68fb      	ldr	r3, [r7, #12]
 8005d0c:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005d12:	b2da      	uxtb	r2, r3
 8005d14:	8979      	ldrh	r1, [r7, #10]
 8005d16:	2300      	movs	r3, #0
 8005d18:	9300      	str	r3, [sp, #0]
 8005d1a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005d1e:	68f8      	ldr	r0, [r7, #12]
 8005d20:	f000 fc44 	bl	80065ac <I2C_TransferConfig>
    }

    do
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005d24:	697a      	ldr	r2, [r7, #20]
 8005d26:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005d28:	68f8      	ldr	r0, [r7, #12]
 8005d2a:	f000 fad4 	bl	80062d6 <I2C_WaitOnTXISFlagUntilTimeout>
 8005d2e:	4603      	mov	r3, r0
 8005d30:	2b00      	cmp	r3, #0
 8005d32:	d001      	beq.n	8005d38 <HAL_I2C_Mem_Write+0x124>
      {
        return HAL_ERROR;
 8005d34:	2301      	movs	r3, #1
 8005d36:	e07b      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
      }

      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8005d38:	68fb      	ldr	r3, [r7, #12]
 8005d3a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d3c:	781a      	ldrb	r2, [r3, #0]
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	681b      	ldr	r3, [r3, #0]
 8005d42:	629a      	str	r2, [r3, #40]	@ 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005d48:	1c5a      	adds	r2, r3, #1
 8005d4a:	68fb      	ldr	r3, [r7, #12]
 8005d4c:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferCount--;
 8005d4e:	68fb      	ldr	r3, [r7, #12]
 8005d50:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005d52:	b29b      	uxth	r3, r3
 8005d54:	3b01      	subs	r3, #1
 8005d56:	b29a      	uxth	r2, r3
 8005d58:	68fb      	ldr	r3, [r7, #12]
 8005d5a:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8005d5c:	68fb      	ldr	r3, [r7, #12]
 8005d5e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005d60:	3b01      	subs	r3, #1
 8005d62:	b29a      	uxth	r2, r3
 8005d64:	68fb      	ldr	r3, [r7, #12]
 8005d66:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005d68:	68fb      	ldr	r3, [r7, #12]
 8005d6a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005d6c:	b29b      	uxth	r3, r3
 8005d6e:	2b00      	cmp	r3, #0
 8005d70:	d034      	beq.n	8005ddc <HAL_I2C_Mem_Write+0x1c8>
 8005d72:	68fb      	ldr	r3, [r7, #12]
 8005d74:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005d76:	2b00      	cmp	r3, #0
 8005d78:	d130      	bne.n	8005ddc <HAL_I2C_Mem_Write+0x1c8>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005d7a:	697b      	ldr	r3, [r7, #20]
 8005d7c:	9300      	str	r3, [sp, #0]
 8005d7e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005d80:	2200      	movs	r2, #0
 8005d82:	2180      	movs	r1, #128	@ 0x80
 8005d84:	68f8      	ldr	r0, [r7, #12]
 8005d86:	f000 fa4d 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 8005d8a:	4603      	mov	r3, r0
 8005d8c:	2b00      	cmp	r3, #0
 8005d8e:	d001      	beq.n	8005d94 <HAL_I2C_Mem_Write+0x180>
        {
          return HAL_ERROR;
 8005d90:	2301      	movs	r3, #1
 8005d92:	e04d      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005d94:	68fb      	ldr	r3, [r7, #12]
 8005d96:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005d98:	b29b      	uxth	r3, r3
 8005d9a:	2bff      	cmp	r3, #255	@ 0xff
 8005d9c:	d90e      	bls.n	8005dbc <HAL_I2C_Mem_Write+0x1a8>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8005d9e:	68fb      	ldr	r3, [r7, #12]
 8005da0:	22ff      	movs	r2, #255	@ 0xff
 8005da2:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005da4:	68fb      	ldr	r3, [r7, #12]
 8005da6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005da8:	b2da      	uxtb	r2, r3
 8005daa:	8979      	ldrh	r1, [r7, #10]
 8005dac:	2300      	movs	r3, #0
 8005dae:	9300      	str	r3, [sp, #0]
 8005db0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005db4:	68f8      	ldr	r0, [r7, #12]
 8005db6:	f000 fbf9 	bl	80065ac <I2C_TransferConfig>
 8005dba:	e00f      	b.n	8005ddc <HAL_I2C_Mem_Write+0x1c8>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8005dbc:	68fb      	ldr	r3, [r7, #12]
 8005dbe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005dc0:	b29a      	uxth	r2, r3
 8005dc2:	68fb      	ldr	r3, [r7, #12]
 8005dc4:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005dc6:	68fb      	ldr	r3, [r7, #12]
 8005dc8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005dca:	b2da      	uxtb	r2, r3
 8005dcc:	8979      	ldrh	r1, [r7, #10]
 8005dce:	2300      	movs	r3, #0
 8005dd0:	9300      	str	r3, [sp, #0]
 8005dd2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005dd6:	68f8      	ldr	r0, [r7, #12]
 8005dd8:	f000 fbe8 	bl	80065ac <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }

    } while (hi2c->XferCount > 0U);
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005de0:	b29b      	uxth	r3, r3
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	d19e      	bne.n	8005d24 <HAL_I2C_Mem_Write+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8005de6:	697a      	ldr	r2, [r7, #20]
 8005de8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005dea:	68f8      	ldr	r0, [r7, #12]
 8005dec:	f000 faba 	bl	8006364 <I2C_WaitOnSTOPFlagUntilTimeout>
 8005df0:	4603      	mov	r3, r0
 8005df2:	2b00      	cmp	r3, #0
 8005df4:	d001      	beq.n	8005dfa <HAL_I2C_Mem_Write+0x1e6>
    {
      return HAL_ERROR;
 8005df6:	2301      	movs	r3, #1
 8005df8:	e01a      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005dfa:	68fb      	ldr	r3, [r7, #12]
 8005dfc:	681b      	ldr	r3, [r3, #0]
 8005dfe:	2220      	movs	r2, #32
 8005e00:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8005e02:	68fb      	ldr	r3, [r7, #12]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	6859      	ldr	r1, [r3, #4]
 8005e08:	68fb      	ldr	r3, [r7, #12]
 8005e0a:	681a      	ldr	r2, [r3, #0]
 8005e0c:	4b0a      	ldr	r3, [pc, #40]	@ (8005e38 <HAL_I2C_Mem_Write+0x224>)
 8005e0e:	400b      	ands	r3, r1
 8005e10:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8005e12:	68fb      	ldr	r3, [r7, #12]
 8005e14:	2220      	movs	r2, #32
 8005e16:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8005e1a:	68fb      	ldr	r3, [r7, #12]
 8005e1c:	2200      	movs	r2, #0
 8005e1e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005e22:	68fb      	ldr	r3, [r7, #12]
 8005e24:	2200      	movs	r2, #0
 8005e26:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 8005e2a:	2300      	movs	r3, #0
 8005e2c:	e000      	b.n	8005e30 <HAL_I2C_Mem_Write+0x21c>
  }
  else
  {
    return HAL_BUSY;
 8005e2e:	2302      	movs	r3, #2
  }
}
 8005e30:	4618      	mov	r0, r3
 8005e32:	3718      	adds	r7, #24
 8005e34:	46bd      	mov	sp, r7
 8005e36:	bd80      	pop	{r7, pc}
 8005e38:	fe00e800 	.word	0xfe00e800

08005e3c <HAL_I2C_Mem_Read>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                   uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8005e3c:	b580      	push	{r7, lr}
 8005e3e:	b088      	sub	sp, #32
 8005e40:	af02      	add	r7, sp, #8
 8005e42:	60f8      	str	r0, [r7, #12]
 8005e44:	4608      	mov	r0, r1
 8005e46:	4611      	mov	r1, r2
 8005e48:	461a      	mov	r2, r3
 8005e4a:	4603      	mov	r3, r0
 8005e4c:	817b      	strh	r3, [r7, #10]
 8005e4e:	460b      	mov	r3, r1
 8005e50:	813b      	strh	r3, [r7, #8]
 8005e52:	4613      	mov	r3, r2
 8005e54:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8005e56:	68fb      	ldr	r3, [r7, #12]
 8005e58:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005e5c:	b2db      	uxtb	r3, r3
 8005e5e:	2b20      	cmp	r3, #32
 8005e60:	f040 80fd 	bne.w	800605e <HAL_I2C_Mem_Read+0x222>
  {
    if ((pData == NULL) || (Size == 0U))
 8005e64:	6a3b      	ldr	r3, [r7, #32]
 8005e66:	2b00      	cmp	r3, #0
 8005e68:	d002      	beq.n	8005e70 <HAL_I2C_Mem_Read+0x34>
 8005e6a:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	d105      	bne.n	8005e7c <HAL_I2C_Mem_Read+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8005e70:	68fb      	ldr	r3, [r7, #12]
 8005e72:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8005e76:	645a      	str	r2, [r3, #68]	@ 0x44
      return  HAL_ERROR;
 8005e78:	2301      	movs	r3, #1
 8005e7a:	e0f1      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8005e82:	2b01      	cmp	r3, #1
 8005e84:	d101      	bne.n	8005e8a <HAL_I2C_Mem_Read+0x4e>
 8005e86:	2302      	movs	r3, #2
 8005e88:	e0ea      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	2201      	movs	r2, #1
 8005e8e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8005e92:	f7fe fe4d 	bl	8004b30 <HAL_GetTick>
 8005e96:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8005e98:	697b      	ldr	r3, [r7, #20]
 8005e9a:	9300      	str	r3, [sp, #0]
 8005e9c:	2319      	movs	r3, #25
 8005e9e:	2201      	movs	r2, #1
 8005ea0:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8005ea4:	68f8      	ldr	r0, [r7, #12]
 8005ea6:	f000 f9bd 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 8005eaa:	4603      	mov	r3, r0
 8005eac:	2b00      	cmp	r3, #0
 8005eae:	d001      	beq.n	8005eb4 <HAL_I2C_Mem_Read+0x78>
    {
      return HAL_ERROR;
 8005eb0:	2301      	movs	r3, #1
 8005eb2:	e0d5      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8005eb4:	68fb      	ldr	r3, [r7, #12]
 8005eb6:	2222      	movs	r2, #34	@ 0x22
 8005eb8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	2240      	movs	r2, #64	@ 0x40
 8005ec0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8005ec4:	68fb      	ldr	r3, [r7, #12]
 8005ec6:	2200      	movs	r2, #0
 8005ec8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8005eca:	68fb      	ldr	r3, [r7, #12]
 8005ecc:	6a3a      	ldr	r2, [r7, #32]
 8005ece:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 8005ed0:	68fb      	ldr	r3, [r7, #12]
 8005ed2:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8005ed4:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 8005ed6:	68fb      	ldr	r3, [r7, #12]
 8005ed8:	2200      	movs	r2, #0
 8005eda:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8005edc:	88f8      	ldrh	r0, [r7, #6]
 8005ede:	893a      	ldrh	r2, [r7, #8]
 8005ee0:	8979      	ldrh	r1, [r7, #10]
 8005ee2:	697b      	ldr	r3, [r7, #20]
 8005ee4:	9301      	str	r3, [sp, #4]
 8005ee6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005ee8:	9300      	str	r3, [sp, #0]
 8005eea:	4603      	mov	r3, r0
 8005eec:	68f8      	ldr	r0, [r7, #12]
 8005eee:	f000 f921 	bl	8006134 <I2C_RequestMemoryRead>
 8005ef2:	4603      	mov	r3, r0
 8005ef4:	2b00      	cmp	r3, #0
 8005ef6:	d005      	beq.n	8005f04 <HAL_I2C_Mem_Read+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005ef8:	68fb      	ldr	r3, [r7, #12]
 8005efa:	2200      	movs	r2, #0
 8005efc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
      return HAL_ERROR;
 8005f00:	2301      	movs	r3, #1
 8005f02:	e0ad      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
    }

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005f04:	68fb      	ldr	r3, [r7, #12]
 8005f06:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005f08:	b29b      	uxth	r3, r3
 8005f0a:	2bff      	cmp	r3, #255	@ 0xff
 8005f0c:	d90e      	bls.n	8005f2c <HAL_I2C_Mem_Read+0xf0>
    {
      hi2c->XferSize = 1U;
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	2201      	movs	r2, #1
 8005f12:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8005f14:	68fb      	ldr	r3, [r7, #12]
 8005f16:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005f18:	b2da      	uxtb	r2, r3
 8005f1a:	8979      	ldrh	r1, [r7, #10]
 8005f1c:	4b52      	ldr	r3, [pc, #328]	@ (8006068 <HAL_I2C_Mem_Read+0x22c>)
 8005f1e:	9300      	str	r3, [sp, #0]
 8005f20:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005f24:	68f8      	ldr	r0, [r7, #12]
 8005f26:	f000 fb41 	bl	80065ac <I2C_TransferConfig>
 8005f2a:	e00f      	b.n	8005f4c <HAL_I2C_Mem_Read+0x110>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8005f2c:	68fb      	ldr	r3, [r7, #12]
 8005f2e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005f30:	b29a      	uxth	r2, r3
 8005f32:	68fb      	ldr	r3, [r7, #12]
 8005f34:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005f36:	68fb      	ldr	r3, [r7, #12]
 8005f38:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005f3a:	b2da      	uxtb	r2, r3
 8005f3c:	8979      	ldrh	r1, [r7, #10]
 8005f3e:	4b4a      	ldr	r3, [pc, #296]	@ (8006068 <HAL_I2C_Mem_Read+0x22c>)
 8005f40:	9300      	str	r3, [sp, #0]
 8005f42:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8005f46:	68f8      	ldr	r0, [r7, #12]
 8005f48:	f000 fb30 	bl	80065ac <I2C_TransferConfig>
    }

    do
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8005f4c:	697b      	ldr	r3, [r7, #20]
 8005f4e:	9300      	str	r3, [sp, #0]
 8005f50:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005f52:	2200      	movs	r2, #0
 8005f54:	2104      	movs	r1, #4
 8005f56:	68f8      	ldr	r0, [r7, #12]
 8005f58:	f000 f964 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 8005f5c:	4603      	mov	r3, r0
 8005f5e:	2b00      	cmp	r3, #0
 8005f60:	d001      	beq.n	8005f66 <HAL_I2C_Mem_Read+0x12a>
      {
        return HAL_ERROR;
 8005f62:	2301      	movs	r3, #1
 8005f64:	e07c      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	681b      	ldr	r3, [r3, #0]
 8005f6a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8005f6c:	68fb      	ldr	r3, [r7, #12]
 8005f6e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005f70:	b2d2      	uxtb	r2, r2
 8005f72:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8005f74:	68fb      	ldr	r3, [r7, #12]
 8005f76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005f78:	1c5a      	adds	r2, r3, #1
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferSize--;
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005f82:	3b01      	subs	r3, #1
 8005f84:	b29a      	uxth	r2, r3
 8005f86:	68fb      	ldr	r3, [r7, #12]
 8005f88:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 8005f8a:	68fb      	ldr	r3, [r7, #12]
 8005f8c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005f8e:	b29b      	uxth	r3, r3
 8005f90:	3b01      	subs	r3, #1
 8005f92:	b29a      	uxth	r2, r3
 8005f94:	68fb      	ldr	r3, [r7, #12]
 8005f96:	855a      	strh	r2, [r3, #42]	@ 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005f9c:	b29b      	uxth	r3, r3
 8005f9e:	2b00      	cmp	r3, #0
 8005fa0:	d034      	beq.n	800600c <HAL_I2C_Mem_Read+0x1d0>
 8005fa2:	68fb      	ldr	r3, [r7, #12]
 8005fa4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005fa6:	2b00      	cmp	r3, #0
 8005fa8:	d130      	bne.n	800600c <HAL_I2C_Mem_Read+0x1d0>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8005faa:	697b      	ldr	r3, [r7, #20]
 8005fac:	9300      	str	r3, [sp, #0]
 8005fae:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8005fb0:	2200      	movs	r2, #0
 8005fb2:	2180      	movs	r1, #128	@ 0x80
 8005fb4:	68f8      	ldr	r0, [r7, #12]
 8005fb6:	f000 f935 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 8005fba:	4603      	mov	r3, r0
 8005fbc:	2b00      	cmp	r3, #0
 8005fbe:	d001      	beq.n	8005fc4 <HAL_I2C_Mem_Read+0x188>
        {
          return HAL_ERROR;
 8005fc0:	2301      	movs	r3, #1
 8005fc2:	e04d      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8005fc4:	68fb      	ldr	r3, [r7, #12]
 8005fc6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005fc8:	b29b      	uxth	r3, r3
 8005fca:	2bff      	cmp	r3, #255	@ 0xff
 8005fcc:	d90e      	bls.n	8005fec <HAL_I2C_Mem_Read+0x1b0>
        {
          hi2c->XferSize = 1U;
 8005fce:	68fb      	ldr	r3, [r7, #12]
 8005fd0:	2201      	movs	r2, #1
 8005fd2:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 8005fd4:	68fb      	ldr	r3, [r7, #12]
 8005fd6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005fd8:	b2da      	uxtb	r2, r3
 8005fda:	8979      	ldrh	r1, [r7, #10]
 8005fdc:	2300      	movs	r3, #0
 8005fde:	9300      	str	r3, [sp, #0]
 8005fe0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8005fe4:	68f8      	ldr	r0, [r7, #12]
 8005fe6:	f000 fae1 	bl	80065ac <I2C_TransferConfig>
 8005fea:	e00f      	b.n	800600c <HAL_I2C_Mem_Read+0x1d0>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8005ff0:	b29a      	uxth	r2, r3
 8005ff2:	68fb      	ldr	r3, [r7, #12]
 8005ff4:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8005ff6:	68fb      	ldr	r3, [r7, #12]
 8005ff8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8005ffa:	b2da      	uxtb	r2, r3
 8005ffc:	8979      	ldrh	r1, [r7, #10]
 8005ffe:	2300      	movs	r3, #0
 8006000:	9300      	str	r3, [sp, #0]
 8006002:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8006006:	68f8      	ldr	r0, [r7, #12]
 8006008:	f000 fad0 	bl	80065ac <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }
    } while (hi2c->XferCount > 0U);
 800600c:	68fb      	ldr	r3, [r7, #12]
 800600e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8006010:	b29b      	uxth	r3, r3
 8006012:	2b00      	cmp	r3, #0
 8006014:	d19a      	bne.n	8005f4c <HAL_I2C_Mem_Read+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006016:	697a      	ldr	r2, [r7, #20]
 8006018:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800601a:	68f8      	ldr	r0, [r7, #12]
 800601c:	f000 f9a2 	bl	8006364 <I2C_WaitOnSTOPFlagUntilTimeout>
 8006020:	4603      	mov	r3, r0
 8006022:	2b00      	cmp	r3, #0
 8006024:	d001      	beq.n	800602a <HAL_I2C_Mem_Read+0x1ee>
    {
      return HAL_ERROR;
 8006026:	2301      	movs	r3, #1
 8006028:	e01a      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	681b      	ldr	r3, [r3, #0]
 800602e:	2220      	movs	r2, #32
 8006030:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	681b      	ldr	r3, [r3, #0]
 8006036:	6859      	ldr	r1, [r3, #4]
 8006038:	68fb      	ldr	r3, [r7, #12]
 800603a:	681a      	ldr	r2, [r3, #0]
 800603c:	4b0b      	ldr	r3, [pc, #44]	@ (800606c <HAL_I2C_Mem_Read+0x230>)
 800603e:	400b      	ands	r3, r1
 8006040:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8006042:	68fb      	ldr	r3, [r7, #12]
 8006044:	2220      	movs	r2, #32
 8006046:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800604a:	68fb      	ldr	r3, [r7, #12]
 800604c:	2200      	movs	r2, #0
 800604e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006052:	68fb      	ldr	r3, [r7, #12]
 8006054:	2200      	movs	r2, #0
 8006056:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 800605a:	2300      	movs	r3, #0
 800605c:	e000      	b.n	8006060 <HAL_I2C_Mem_Read+0x224>
  }
  else
  {
    return HAL_BUSY;
 800605e:	2302      	movs	r3, #2
  }
}
 8006060:	4618      	mov	r0, r3
 8006062:	3718      	adds	r7, #24
 8006064:	46bd      	mov	sp, r7
 8006066:	bd80      	pop	{r7, pc}
 8006068:	80002400 	.word	0x80002400
 800606c:	fe00e800 	.word	0xfe00e800

08006070 <HAL_I2C_GetState>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL state
  */
HAL_I2C_StateTypeDef HAL_I2C_GetState(const I2C_HandleTypeDef *hi2c)
{
 8006070:	b480      	push	{r7}
 8006072:	b083      	sub	sp, #12
 8006074:	af00      	add	r7, sp, #0
 8006076:	6078      	str	r0, [r7, #4]
  /* Return I2C handle state */
  return hi2c->State;
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800607e:	b2db      	uxtb	r3, r3
}
 8006080:	4618      	mov	r0, r3
 8006082:	370c      	adds	r7, #12
 8006084:	46bd      	mov	sp, r7
 8006086:	f85d 7b04 	ldr.w	r7, [sp], #4
 800608a:	4770      	bx	lr

0800608c <I2C_RequestMemoryWrite>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                                uint32_t Tickstart)
{
 800608c:	b580      	push	{r7, lr}
 800608e:	b086      	sub	sp, #24
 8006090:	af02      	add	r7, sp, #8
 8006092:	60f8      	str	r0, [r7, #12]
 8006094:	4608      	mov	r0, r1
 8006096:	4611      	mov	r1, r2
 8006098:	461a      	mov	r2, r3
 800609a:	4603      	mov	r3, r0
 800609c:	817b      	strh	r3, [r7, #10]
 800609e:	460b      	mov	r3, r1
 80060a0:	813b      	strh	r3, [r7, #8]
 80060a2:	4613      	mov	r3, r2
 80060a4:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 80060a6:	88fb      	ldrh	r3, [r7, #6]
 80060a8:	b2da      	uxtb	r2, r3
 80060aa:	8979      	ldrh	r1, [r7, #10]
 80060ac:	4b20      	ldr	r3, [pc, #128]	@ (8006130 <I2C_RequestMemoryWrite+0xa4>)
 80060ae:	9300      	str	r3, [sp, #0]
 80060b0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80060b4:	68f8      	ldr	r0, [r7, #12]
 80060b6:	f000 fa79 	bl	80065ac <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060ba:	69fa      	ldr	r2, [r7, #28]
 80060bc:	69b9      	ldr	r1, [r7, #24]
 80060be:	68f8      	ldr	r0, [r7, #12]
 80060c0:	f000 f909 	bl	80062d6 <I2C_WaitOnTXISFlagUntilTimeout>
 80060c4:	4603      	mov	r3, r0
 80060c6:	2b00      	cmp	r3, #0
 80060c8:	d001      	beq.n	80060ce <I2C_RequestMemoryWrite+0x42>
  {
    return HAL_ERROR;
 80060ca:	2301      	movs	r3, #1
 80060cc:	e02c      	b.n	8006128 <I2C_RequestMemoryWrite+0x9c>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80060ce:	88fb      	ldrh	r3, [r7, #6]
 80060d0:	2b01      	cmp	r3, #1
 80060d2:	d105      	bne.n	80060e0 <I2C_RequestMemoryWrite+0x54>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80060d4:	893b      	ldrh	r3, [r7, #8]
 80060d6:	b2da      	uxtb	r2, r3
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	629a      	str	r2, [r3, #40]	@ 0x28
 80060de:	e015      	b.n	800610c <I2C_RequestMemoryWrite+0x80>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 80060e0:	893b      	ldrh	r3, [r7, #8]
 80060e2:	0a1b      	lsrs	r3, r3, #8
 80060e4:	b29b      	uxth	r3, r3
 80060e6:	b2da      	uxtb	r2, r3
 80060e8:	68fb      	ldr	r3, [r7, #12]
 80060ea:	681b      	ldr	r3, [r3, #0]
 80060ec:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80060ee:	69fa      	ldr	r2, [r7, #28]
 80060f0:	69b9      	ldr	r1, [r7, #24]
 80060f2:	68f8      	ldr	r0, [r7, #12]
 80060f4:	f000 f8ef 	bl	80062d6 <I2C_WaitOnTXISFlagUntilTimeout>
 80060f8:	4603      	mov	r3, r0
 80060fa:	2b00      	cmp	r3, #0
 80060fc:	d001      	beq.n	8006102 <I2C_RequestMemoryWrite+0x76>
    {
      return HAL_ERROR;
 80060fe:	2301      	movs	r3, #1
 8006100:	e012      	b.n	8006128 <I2C_RequestMemoryWrite+0x9c>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8006102:	893b      	ldrh	r3, [r7, #8]
 8006104:	b2da      	uxtb	r2, r3
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	681b      	ldr	r3, [r3, #0]
 800610a:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Wait until TCR flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 800610c:	69fb      	ldr	r3, [r7, #28]
 800610e:	9300      	str	r3, [sp, #0]
 8006110:	69bb      	ldr	r3, [r7, #24]
 8006112:	2200      	movs	r2, #0
 8006114:	2180      	movs	r1, #128	@ 0x80
 8006116:	68f8      	ldr	r0, [r7, #12]
 8006118:	f000 f884 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 800611c:	4603      	mov	r3, r0
 800611e:	2b00      	cmp	r3, #0
 8006120:	d001      	beq.n	8006126 <I2C_RequestMemoryWrite+0x9a>
  {
    return HAL_ERROR;
 8006122:	2301      	movs	r3, #1
 8006124:	e000      	b.n	8006128 <I2C_RequestMemoryWrite+0x9c>
  }

  return HAL_OK;
 8006126:	2300      	movs	r3, #0
}
 8006128:	4618      	mov	r0, r3
 800612a:	3710      	adds	r7, #16
 800612c:	46bd      	mov	sp, r7
 800612e:	bd80      	pop	{r7, pc}
 8006130:	80002000 	.word	0x80002000

08006134 <I2C_RequestMemoryRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                               uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                               uint32_t Tickstart)
{
 8006134:	b580      	push	{r7, lr}
 8006136:	b086      	sub	sp, #24
 8006138:	af02      	add	r7, sp, #8
 800613a:	60f8      	str	r0, [r7, #12]
 800613c:	4608      	mov	r0, r1
 800613e:	4611      	mov	r1, r2
 8006140:	461a      	mov	r2, r3
 8006142:	4603      	mov	r3, r0
 8006144:	817b      	strh	r3, [r7, #10]
 8006146:	460b      	mov	r3, r1
 8006148:	813b      	strh	r3, [r7, #8]
 800614a:	4613      	mov	r3, r2
 800614c:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 800614e:	88fb      	ldrh	r3, [r7, #6]
 8006150:	b2da      	uxtb	r2, r3
 8006152:	8979      	ldrh	r1, [r7, #10]
 8006154:	4b20      	ldr	r3, [pc, #128]	@ (80061d8 <I2C_RequestMemoryRead+0xa4>)
 8006156:	9300      	str	r3, [sp, #0]
 8006158:	2300      	movs	r3, #0
 800615a:	68f8      	ldr	r0, [r7, #12]
 800615c:	f000 fa26 	bl	80065ac <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006160:	69fa      	ldr	r2, [r7, #28]
 8006162:	69b9      	ldr	r1, [r7, #24]
 8006164:	68f8      	ldr	r0, [r7, #12]
 8006166:	f000 f8b6 	bl	80062d6 <I2C_WaitOnTXISFlagUntilTimeout>
 800616a:	4603      	mov	r3, r0
 800616c:	2b00      	cmp	r3, #0
 800616e:	d001      	beq.n	8006174 <I2C_RequestMemoryRead+0x40>
  {
    return HAL_ERROR;
 8006170:	2301      	movs	r3, #1
 8006172:	e02c      	b.n	80061ce <I2C_RequestMemoryRead+0x9a>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006174:	88fb      	ldrh	r3, [r7, #6]
 8006176:	2b01      	cmp	r3, #1
 8006178:	d105      	bne.n	8006186 <I2C_RequestMemoryRead+0x52>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800617a:	893b      	ldrh	r3, [r7, #8]
 800617c:	b2da      	uxtb	r2, r3
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	681b      	ldr	r3, [r3, #0]
 8006182:	629a      	str	r2, [r3, #40]	@ 0x28
 8006184:	e015      	b.n	80061b2 <I2C_RequestMemoryRead+0x7e>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8006186:	893b      	ldrh	r3, [r7, #8]
 8006188:	0a1b      	lsrs	r3, r3, #8
 800618a:	b29b      	uxth	r3, r3
 800618c:	b2da      	uxtb	r2, r3
 800618e:	68fb      	ldr	r3, [r7, #12]
 8006190:	681b      	ldr	r3, [r3, #0]
 8006192:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006194:	69fa      	ldr	r2, [r7, #28]
 8006196:	69b9      	ldr	r1, [r7, #24]
 8006198:	68f8      	ldr	r0, [r7, #12]
 800619a:	f000 f89c 	bl	80062d6 <I2C_WaitOnTXISFlagUntilTimeout>
 800619e:	4603      	mov	r3, r0
 80061a0:	2b00      	cmp	r3, #0
 80061a2:	d001      	beq.n	80061a8 <I2C_RequestMemoryRead+0x74>
    {
      return HAL_ERROR;
 80061a4:	2301      	movs	r3, #1
 80061a6:	e012      	b.n	80061ce <I2C_RequestMemoryRead+0x9a>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80061a8:	893b      	ldrh	r3, [r7, #8]
 80061aa:	b2da      	uxtb	r2, r3
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Wait until TC flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 80061b2:	69fb      	ldr	r3, [r7, #28]
 80061b4:	9300      	str	r3, [sp, #0]
 80061b6:	69bb      	ldr	r3, [r7, #24]
 80061b8:	2200      	movs	r2, #0
 80061ba:	2140      	movs	r1, #64	@ 0x40
 80061bc:	68f8      	ldr	r0, [r7, #12]
 80061be:	f000 f831 	bl	8006224 <I2C_WaitOnFlagUntilTimeout>
 80061c2:	4603      	mov	r3, r0
 80061c4:	2b00      	cmp	r3, #0
 80061c6:	d001      	beq.n	80061cc <I2C_RequestMemoryRead+0x98>
  {
    return HAL_ERROR;
 80061c8:	2301      	movs	r3, #1
 80061ca:	e000      	b.n	80061ce <I2C_RequestMemoryRead+0x9a>
  }

  return HAL_OK;
 80061cc:	2300      	movs	r3, #0
}
 80061ce:	4618      	mov	r0, r3
 80061d0:	3710      	adds	r7, #16
 80061d2:	46bd      	mov	sp, r7
 80061d4:	bd80      	pop	{r7, pc}
 80061d6:	bf00      	nop
 80061d8:	80002000 	.word	0x80002000

080061dc <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 80061dc:	b480      	push	{r7}
 80061de:	b083      	sub	sp, #12
 80061e0:	af00      	add	r7, sp, #0
 80061e2:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	681b      	ldr	r3, [r3, #0]
 80061e8:	699b      	ldr	r3, [r3, #24]
 80061ea:	f003 0302 	and.w	r3, r3, #2
 80061ee:	2b02      	cmp	r3, #2
 80061f0:	d103      	bne.n	80061fa <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 80061f2:	687b      	ldr	r3, [r7, #4]
 80061f4:	681b      	ldr	r3, [r3, #0]
 80061f6:	2200      	movs	r2, #0
 80061f8:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80061fa:	687b      	ldr	r3, [r7, #4]
 80061fc:	681b      	ldr	r3, [r3, #0]
 80061fe:	699b      	ldr	r3, [r3, #24]
 8006200:	f003 0301 	and.w	r3, r3, #1
 8006204:	2b01      	cmp	r3, #1
 8006206:	d007      	beq.n	8006218 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8006208:	687b      	ldr	r3, [r7, #4]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	699a      	ldr	r2, [r3, #24]
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f042 0201 	orr.w	r2, r2, #1
 8006216:	619a      	str	r2, [r3, #24]
  }
}
 8006218:	bf00      	nop
 800621a:	370c      	adds	r7, #12
 800621c:	46bd      	mov	sp, r7
 800621e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006222:	4770      	bx	lr

08006224 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8006224:	b580      	push	{r7, lr}
 8006226:	b084      	sub	sp, #16
 8006228:	af00      	add	r7, sp, #0
 800622a:	60f8      	str	r0, [r7, #12]
 800622c:	60b9      	str	r1, [r7, #8]
 800622e:	603b      	str	r3, [r7, #0]
 8006230:	4613      	mov	r3, r2
 8006232:	71fb      	strb	r3, [r7, #7]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006234:	e03b      	b.n	80062ae <I2C_WaitOnFlagUntilTimeout+0x8a>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8006236:	69ba      	ldr	r2, [r7, #24]
 8006238:	6839      	ldr	r1, [r7, #0]
 800623a:	68f8      	ldr	r0, [r7, #12]
 800623c:	f000 f8d6 	bl	80063ec <I2C_IsErrorOccurred>
 8006240:	4603      	mov	r3, r0
 8006242:	2b00      	cmp	r3, #0
 8006244:	d001      	beq.n	800624a <I2C_WaitOnFlagUntilTimeout+0x26>
    {
      return HAL_ERROR;
 8006246:	2301      	movs	r3, #1
 8006248:	e041      	b.n	80062ce <I2C_WaitOnFlagUntilTimeout+0xaa>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800624a:	683b      	ldr	r3, [r7, #0]
 800624c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006250:	d02d      	beq.n	80062ae <I2C_WaitOnFlagUntilTimeout+0x8a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006252:	f7fe fc6d 	bl	8004b30 <HAL_GetTick>
 8006256:	4602      	mov	r2, r0
 8006258:	69bb      	ldr	r3, [r7, #24]
 800625a:	1ad3      	subs	r3, r2, r3
 800625c:	683a      	ldr	r2, [r7, #0]
 800625e:	429a      	cmp	r2, r3
 8006260:	d302      	bcc.n	8006268 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006262:	683b      	ldr	r3, [r7, #0]
 8006264:	2b00      	cmp	r3, #0
 8006266:	d122      	bne.n	80062ae <I2C_WaitOnFlagUntilTimeout+0x8a>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	699a      	ldr	r2, [r3, #24]
 800626e:	68bb      	ldr	r3, [r7, #8]
 8006270:	4013      	ands	r3, r2
 8006272:	68ba      	ldr	r2, [r7, #8]
 8006274:	429a      	cmp	r2, r3
 8006276:	bf0c      	ite	eq
 8006278:	2301      	moveq	r3, #1
 800627a:	2300      	movne	r3, #0
 800627c:	b2db      	uxtb	r3, r3
 800627e:	461a      	mov	r2, r3
 8006280:	79fb      	ldrb	r3, [r7, #7]
 8006282:	429a      	cmp	r2, r3
 8006284:	d113      	bne.n	80062ae <I2C_WaitOnFlagUntilTimeout+0x8a>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006286:	68fb      	ldr	r3, [r7, #12]
 8006288:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800628a:	f043 0220 	orr.w	r2, r3, #32
 800628e:	68fb      	ldr	r3, [r7, #12]
 8006290:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8006292:	68fb      	ldr	r3, [r7, #12]
 8006294:	2220      	movs	r2, #32
 8006296:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800629a:	68fb      	ldr	r3, [r7, #12]
 800629c:	2200      	movs	r2, #0
 800629e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80062a2:	68fb      	ldr	r3, [r7, #12]
 80062a4:	2200      	movs	r2, #0
 80062a6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
          return HAL_ERROR;
 80062aa:	2301      	movs	r3, #1
 80062ac:	e00f      	b.n	80062ce <I2C_WaitOnFlagUntilTimeout+0xaa>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80062ae:	68fb      	ldr	r3, [r7, #12]
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	699a      	ldr	r2, [r3, #24]
 80062b4:	68bb      	ldr	r3, [r7, #8]
 80062b6:	4013      	ands	r3, r2
 80062b8:	68ba      	ldr	r2, [r7, #8]
 80062ba:	429a      	cmp	r2, r3
 80062bc:	bf0c      	ite	eq
 80062be:	2301      	moveq	r3, #1
 80062c0:	2300      	movne	r3, #0
 80062c2:	b2db      	uxtb	r3, r3
 80062c4:	461a      	mov	r2, r3
 80062c6:	79fb      	ldrb	r3, [r7, #7]
 80062c8:	429a      	cmp	r2, r3
 80062ca:	d0b4      	beq.n	8006236 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80062cc:	2300      	movs	r3, #0
}
 80062ce:	4618      	mov	r0, r3
 80062d0:	3710      	adds	r7, #16
 80062d2:	46bd      	mov	sp, r7
 80062d4:	bd80      	pop	{r7, pc}

080062d6 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 80062d6:	b580      	push	{r7, lr}
 80062d8:	b084      	sub	sp, #16
 80062da:	af00      	add	r7, sp, #0
 80062dc:	60f8      	str	r0, [r7, #12]
 80062de:	60b9      	str	r1, [r7, #8]
 80062e0:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80062e2:	e033      	b.n	800634c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80062e4:	687a      	ldr	r2, [r7, #4]
 80062e6:	68b9      	ldr	r1, [r7, #8]
 80062e8:	68f8      	ldr	r0, [r7, #12]
 80062ea:	f000 f87f 	bl	80063ec <I2C_IsErrorOccurred>
 80062ee:	4603      	mov	r3, r0
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d001      	beq.n	80062f8 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 80062f4:	2301      	movs	r3, #1
 80062f6:	e031      	b.n	800635c <I2C_WaitOnTXISFlagUntilTimeout+0x86>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80062f8:	68bb      	ldr	r3, [r7, #8]
 80062fa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062fe:	d025      	beq.n	800634c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006300:	f7fe fc16 	bl	8004b30 <HAL_GetTick>
 8006304:	4602      	mov	r2, r0
 8006306:	687b      	ldr	r3, [r7, #4]
 8006308:	1ad3      	subs	r3, r2, r3
 800630a:	68ba      	ldr	r2, [r7, #8]
 800630c:	429a      	cmp	r2, r3
 800630e:	d302      	bcc.n	8006316 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 8006310:	68bb      	ldr	r3, [r7, #8]
 8006312:	2b00      	cmp	r3, #0
 8006314:	d11a      	bne.n	800634c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	699b      	ldr	r3, [r3, #24]
 800631c:	f003 0302 	and.w	r3, r3, #2
 8006320:	2b02      	cmp	r3, #2
 8006322:	d013      	beq.n	800634c <I2C_WaitOnTXISFlagUntilTimeout+0x76>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8006324:	68fb      	ldr	r3, [r7, #12]
 8006326:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006328:	f043 0220 	orr.w	r2, r3, #32
 800632c:	68fb      	ldr	r3, [r7, #12]
 800632e:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8006330:	68fb      	ldr	r3, [r7, #12]
 8006332:	2220      	movs	r2, #32
 8006334:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8006338:	68fb      	ldr	r3, [r7, #12]
 800633a:	2200      	movs	r2, #0
 800633c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8006340:	68fb      	ldr	r3, [r7, #12]
 8006342:	2200      	movs	r2, #0
 8006344:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

          return HAL_ERROR;
 8006348:	2301      	movs	r3, #1
 800634a:	e007      	b.n	800635c <I2C_WaitOnTXISFlagUntilTimeout+0x86>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 800634c:	68fb      	ldr	r3, [r7, #12]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	699b      	ldr	r3, [r3, #24]
 8006352:	f003 0302 	and.w	r3, r3, #2
 8006356:	2b02      	cmp	r3, #2
 8006358:	d1c4      	bne.n	80062e4 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 800635a:	2300      	movs	r3, #0
}
 800635c:	4618      	mov	r0, r3
 800635e:	3710      	adds	r7, #16
 8006360:	46bd      	mov	sp, r7
 8006362:	bd80      	pop	{r7, pc}

08006364 <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8006364:	b580      	push	{r7, lr}
 8006366:	b084      	sub	sp, #16
 8006368:	af00      	add	r7, sp, #0
 800636a:	60f8      	str	r0, [r7, #12]
 800636c:	60b9      	str	r1, [r7, #8]
 800636e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8006370:	e02f      	b.n	80063d2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8006372:	687a      	ldr	r2, [r7, #4]
 8006374:	68b9      	ldr	r1, [r7, #8]
 8006376:	68f8      	ldr	r0, [r7, #12]
 8006378:	f000 f838 	bl	80063ec <I2C_IsErrorOccurred>
 800637c:	4603      	mov	r3, r0
 800637e:	2b00      	cmp	r3, #0
 8006380:	d001      	beq.n	8006386 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8006382:	2301      	movs	r3, #1
 8006384:	e02d      	b.n	80063e2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006386:	f7fe fbd3 	bl	8004b30 <HAL_GetTick>
 800638a:	4602      	mov	r2, r0
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	1ad3      	subs	r3, r2, r3
 8006390:	68ba      	ldr	r2, [r7, #8]
 8006392:	429a      	cmp	r2, r3
 8006394:	d302      	bcc.n	800639c <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8006396:	68bb      	ldr	r3, [r7, #8]
 8006398:	2b00      	cmp	r3, #0
 800639a:	d11a      	bne.n	80063d2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 800639c:	68fb      	ldr	r3, [r7, #12]
 800639e:	681b      	ldr	r3, [r3, #0]
 80063a0:	699b      	ldr	r3, [r3, #24]
 80063a2:	f003 0320 	and.w	r3, r3, #32
 80063a6:	2b20      	cmp	r3, #32
 80063a8:	d013      	beq.n	80063d2 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80063ae:	f043 0220 	orr.w	r2, r3, #32
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	645a      	str	r2, [r3, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80063b6:	68fb      	ldr	r3, [r7, #12]
 80063b8:	2220      	movs	r2, #32
 80063ba:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80063be:	68fb      	ldr	r3, [r7, #12]
 80063c0:	2200      	movs	r2, #0
 80063c2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80063c6:	68fb      	ldr	r3, [r7, #12]
 80063c8:	2200      	movs	r2, #0
 80063ca:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

        return HAL_ERROR;
 80063ce:	2301      	movs	r3, #1
 80063d0:	e007      	b.n	80063e2 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	699b      	ldr	r3, [r3, #24]
 80063d8:	f003 0320 	and.w	r3, r3, #32
 80063dc:	2b20      	cmp	r3, #32
 80063de:	d1c8      	bne.n	8006372 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80063e0:	2300      	movs	r3, #0
}
 80063e2:	4618      	mov	r0, r3
 80063e4:	3710      	adds	r7, #16
 80063e6:	46bd      	mov	sp, r7
 80063e8:	bd80      	pop	{r7, pc}
	...

080063ec <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80063ec:	b580      	push	{r7, lr}
 80063ee:	b08a      	sub	sp, #40	@ 0x28
 80063f0:	af00      	add	r7, sp, #0
 80063f2:	60f8      	str	r0, [r7, #12]
 80063f4:	60b9      	str	r1, [r7, #8]
 80063f6:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80063f8:	2300      	movs	r3, #0
 80063fa:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  uint32_t itflag   = hi2c->Instance->ISR;
 80063fe:	68fb      	ldr	r3, [r7, #12]
 8006400:	681b      	ldr	r3, [r3, #0]
 8006402:	699b      	ldr	r3, [r3, #24]
 8006404:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8006406:	2300      	movs	r3, #0
 8006408:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 800640a:	687b      	ldr	r3, [r7, #4]
 800640c:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 800640e:	69bb      	ldr	r3, [r7, #24]
 8006410:	f003 0310 	and.w	r3, r3, #16
 8006414:	2b00      	cmp	r3, #0
 8006416:	d068      	beq.n	80064ea <I2C_IsErrorOccurred+0xfe>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	2210      	movs	r2, #16
 800641e:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8006420:	e049      	b.n	80064b6 <I2C_IsErrorOccurred+0xca>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 8006422:	68bb      	ldr	r3, [r7, #8]
 8006424:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006428:	d045      	beq.n	80064b6 <I2C_IsErrorOccurred+0xca>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800642a:	f7fe fb81 	bl	8004b30 <HAL_GetTick>
 800642e:	4602      	mov	r2, r0
 8006430:	69fb      	ldr	r3, [r7, #28]
 8006432:	1ad3      	subs	r3, r2, r3
 8006434:	68ba      	ldr	r2, [r7, #8]
 8006436:	429a      	cmp	r2, r3
 8006438:	d302      	bcc.n	8006440 <I2C_IsErrorOccurred+0x54>
 800643a:	68bb      	ldr	r3, [r7, #8]
 800643c:	2b00      	cmp	r3, #0
 800643e:	d13a      	bne.n	80064b6 <I2C_IsErrorOccurred+0xca>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	685b      	ldr	r3, [r3, #4]
 8006446:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800644a:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8006452:	74fb      	strb	r3, [r7, #19]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8006454:	68fb      	ldr	r3, [r7, #12]
 8006456:	681b      	ldr	r3, [r3, #0]
 8006458:	699b      	ldr	r3, [r3, #24]
 800645a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800645e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006462:	d121      	bne.n	80064a8 <I2C_IsErrorOccurred+0xbc>
 8006464:	697b      	ldr	r3, [r7, #20]
 8006466:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800646a:	d01d      	beq.n	80064a8 <I2C_IsErrorOccurred+0xbc>
              (tmp1 != I2C_CR2_STOP) && \
 800646c:	7cfb      	ldrb	r3, [r7, #19]
 800646e:	2b20      	cmp	r3, #32
 8006470:	d01a      	beq.n	80064a8 <I2C_IsErrorOccurred+0xbc>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8006472:	68fb      	ldr	r3, [r7, #12]
 8006474:	681b      	ldr	r3, [r3, #0]
 8006476:	685a      	ldr	r2, [r3, #4]
 8006478:	68fb      	ldr	r3, [r7, #12]
 800647a:	681b      	ldr	r3, [r3, #0]
 800647c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8006480:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 8006482:	f7fe fb55 	bl	8004b30 <HAL_GetTick>
 8006486:	61f8      	str	r0, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8006488:	e00e      	b.n	80064a8 <I2C_IsErrorOccurred+0xbc>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800648a:	f7fe fb51 	bl	8004b30 <HAL_GetTick>
 800648e:	4602      	mov	r2, r0
 8006490:	69fb      	ldr	r3, [r7, #28]
 8006492:	1ad3      	subs	r3, r2, r3
 8006494:	2b19      	cmp	r3, #25
 8006496:	d907      	bls.n	80064a8 <I2C_IsErrorOccurred+0xbc>
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8006498:	6a3b      	ldr	r3, [r7, #32]
 800649a:	f043 0320 	orr.w	r3, r3, #32
 800649e:	623b      	str	r3, [r7, #32]

              status = HAL_ERROR;
 80064a0:	2301      	movs	r3, #1
 80064a2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

              break;
 80064a6:	e006      	b.n	80064b6 <I2C_IsErrorOccurred+0xca>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80064a8:	68fb      	ldr	r3, [r7, #12]
 80064aa:	681b      	ldr	r3, [r3, #0]
 80064ac:	699b      	ldr	r3, [r3, #24]
 80064ae:	f003 0320 	and.w	r3, r3, #32
 80064b2:	2b20      	cmp	r3, #32
 80064b4:	d1e9      	bne.n	800648a <I2C_IsErrorOccurred+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80064b6:	68fb      	ldr	r3, [r7, #12]
 80064b8:	681b      	ldr	r3, [r3, #0]
 80064ba:	699b      	ldr	r3, [r3, #24]
 80064bc:	f003 0320 	and.w	r3, r3, #32
 80064c0:	2b20      	cmp	r3, #32
 80064c2:	d003      	beq.n	80064cc <I2C_IsErrorOccurred+0xe0>
 80064c4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80064c8:	2b00      	cmp	r3, #0
 80064ca:	d0aa      	beq.n	8006422 <I2C_IsErrorOccurred+0x36>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 80064cc:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80064d0:	2b00      	cmp	r3, #0
 80064d2:	d103      	bne.n	80064dc <I2C_IsErrorOccurred+0xf0>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80064d4:	68fb      	ldr	r3, [r7, #12]
 80064d6:	681b      	ldr	r3, [r3, #0]
 80064d8:	2220      	movs	r2, #32
 80064da:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 80064dc:	6a3b      	ldr	r3, [r7, #32]
 80064de:	f043 0304 	orr.w	r3, r3, #4
 80064e2:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 80064e4:	2301      	movs	r3, #1
 80064e6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 80064ea:	68fb      	ldr	r3, [r7, #12]
 80064ec:	681b      	ldr	r3, [r3, #0]
 80064ee:	699b      	ldr	r3, [r3, #24]
 80064f0:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 80064f2:	69bb      	ldr	r3, [r7, #24]
 80064f4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80064f8:	2b00      	cmp	r3, #0
 80064fa:	d00b      	beq.n	8006514 <I2C_IsErrorOccurred+0x128>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 80064fc:	6a3b      	ldr	r3, [r7, #32]
 80064fe:	f043 0301 	orr.w	r3, r3, #1
 8006502:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8006504:	68fb      	ldr	r3, [r7, #12]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	f44f 7280 	mov.w	r2, #256	@ 0x100
 800650c:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 800650e:	2301      	movs	r3, #1
 8006510:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 8006514:	69bb      	ldr	r3, [r7, #24]
 8006516:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800651a:	2b00      	cmp	r3, #0
 800651c:	d00b      	beq.n	8006536 <I2C_IsErrorOccurred+0x14a>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 800651e:	6a3b      	ldr	r3, [r7, #32]
 8006520:	f043 0308 	orr.w	r3, r3, #8
 8006524:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	681b      	ldr	r3, [r3, #0]
 800652a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 800652e:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8006530:	2301      	movs	r3, #1
 8006532:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 8006536:	69bb      	ldr	r3, [r7, #24]
 8006538:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800653c:	2b00      	cmp	r3, #0
 800653e:	d00b      	beq.n	8006558 <I2C_IsErrorOccurred+0x16c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 8006540:	6a3b      	ldr	r3, [r7, #32]
 8006542:	f043 0302 	orr.w	r3, r3, #2
 8006546:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8006548:	68fb      	ldr	r3, [r7, #12]
 800654a:	681b      	ldr	r3, [r3, #0]
 800654c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8006550:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8006552:	2301      	movs	r3, #1
 8006554:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  if (status != HAL_OK)
 8006558:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800655c:	2b00      	cmp	r3, #0
 800655e:	d01c      	beq.n	800659a <I2C_IsErrorOccurred+0x1ae>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 8006560:	68f8      	ldr	r0, [r7, #12]
 8006562:	f7ff fe3b 	bl	80061dc <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8006566:	68fb      	ldr	r3, [r7, #12]
 8006568:	681b      	ldr	r3, [r3, #0]
 800656a:	6859      	ldr	r1, [r3, #4]
 800656c:	68fb      	ldr	r3, [r7, #12]
 800656e:	681a      	ldr	r2, [r3, #0]
 8006570:	4b0d      	ldr	r3, [pc, #52]	@ (80065a8 <I2C_IsErrorOccurred+0x1bc>)
 8006572:	400b      	ands	r3, r1
 8006574:	6053      	str	r3, [r2, #4]

    hi2c->ErrorCode |= error_code;
 8006576:	68fb      	ldr	r3, [r7, #12]
 8006578:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800657a:	6a3b      	ldr	r3, [r7, #32]
 800657c:	431a      	orrs	r2, r3
 800657e:	68fb      	ldr	r3, [r7, #12]
 8006580:	645a      	str	r2, [r3, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8006582:	68fb      	ldr	r3, [r7, #12]
 8006584:	2220      	movs	r2, #32
 8006586:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	2200      	movs	r2, #0
 800658e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006592:	68fb      	ldr	r3, [r7, #12]
 8006594:	2200      	movs	r2, #0
 8006596:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  }

  return status;
 800659a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
}
 800659e:	4618      	mov	r0, r3
 80065a0:	3728      	adds	r7, #40	@ 0x28
 80065a2:	46bd      	mov	sp, r7
 80065a4:	bd80      	pop	{r7, pc}
 80065a6:	bf00      	nop
 80065a8:	fe00e800 	.word	0xfe00e800

080065ac <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80065ac:	b480      	push	{r7}
 80065ae:	b087      	sub	sp, #28
 80065b0:	af00      	add	r7, sp, #0
 80065b2:	60f8      	str	r0, [r7, #12]
 80065b4:	607b      	str	r3, [r7, #4]
 80065b6:	460b      	mov	r3, r1
 80065b8:	817b      	strh	r3, [r7, #10]
 80065ba:	4613      	mov	r3, r2
 80065bc:	727b      	strb	r3, [r7, #9]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80065be:	897b      	ldrh	r3, [r7, #10]
 80065c0:	f3c3 0209 	ubfx	r2, r3, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 80065c4:	7a7b      	ldrb	r3, [r7, #9]
 80065c6:	041b      	lsls	r3, r3, #16
 80065c8:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80065cc:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 80065ce:	687b      	ldr	r3, [r7, #4]
 80065d0:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 80065d2:	6a3b      	ldr	r3, [r7, #32]
 80065d4:	4313      	orrs	r3, r2
 80065d6:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80065da:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 80065dc:	68fb      	ldr	r3, [r7, #12]
 80065de:	681b      	ldr	r3, [r3, #0]
 80065e0:	685a      	ldr	r2, [r3, #4]
 80065e2:	6a3b      	ldr	r3, [r7, #32]
 80065e4:	0d5b      	lsrs	r3, r3, #21
 80065e6:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 80065ea:	4b08      	ldr	r3, [pc, #32]	@ (800660c <I2C_TransferConfig+0x60>)
 80065ec:	430b      	orrs	r3, r1
 80065ee:	43db      	mvns	r3, r3
 80065f0:	ea02 0103 	and.w	r1, r2, r3
 80065f4:	68fb      	ldr	r3, [r7, #12]
 80065f6:	681b      	ldr	r3, [r3, #0]
 80065f8:	697a      	ldr	r2, [r7, #20]
 80065fa:	430a      	orrs	r2, r1
 80065fc:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 80065fe:	bf00      	nop
 8006600:	371c      	adds	r7, #28
 8006602:	46bd      	mov	sp, r7
 8006604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006608:	4770      	bx	lr
 800660a:	bf00      	nop
 800660c:	03ff63ff 	.word	0x03ff63ff

08006610 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006610:	b480      	push	{r7}
 8006612:	b083      	sub	sp, #12
 8006614:	af00      	add	r7, sp, #0
 8006616:	6078      	str	r0, [r7, #4]
 8006618:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800661a:	687b      	ldr	r3, [r7, #4]
 800661c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006620:	b2db      	uxtb	r3, r3
 8006622:	2b20      	cmp	r3, #32
 8006624:	d138      	bne.n	8006698 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8006626:	687b      	ldr	r3, [r7, #4]
 8006628:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800662c:	2b01      	cmp	r3, #1
 800662e:	d101      	bne.n	8006634 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8006630:	2302      	movs	r3, #2
 8006632:	e032      	b.n	800669a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8006634:	687b      	ldr	r3, [r7, #4]
 8006636:	2201      	movs	r2, #1
 8006638:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 800663c:	687b      	ldr	r3, [r7, #4]
 800663e:	2224      	movs	r2, #36	@ 0x24
 8006640:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006644:	687b      	ldr	r3, [r7, #4]
 8006646:	681b      	ldr	r3, [r3, #0]
 8006648:	681a      	ldr	r2, [r3, #0]
 800664a:	687b      	ldr	r3, [r7, #4]
 800664c:	681b      	ldr	r3, [r3, #0]
 800664e:	f022 0201 	bic.w	r2, r2, #1
 8006652:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8006654:	687b      	ldr	r3, [r7, #4]
 8006656:	681b      	ldr	r3, [r3, #0]
 8006658:	681a      	ldr	r2, [r3, #0]
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8006662:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	681b      	ldr	r3, [r3, #0]
 8006668:	6819      	ldr	r1, [r3, #0]
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	683a      	ldr	r2, [r7, #0]
 8006670:	430a      	orrs	r2, r1
 8006672:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	681b      	ldr	r3, [r3, #0]
 8006678:	681a      	ldr	r2, [r3, #0]
 800667a:	687b      	ldr	r3, [r7, #4]
 800667c:	681b      	ldr	r3, [r3, #0]
 800667e:	f042 0201 	orr.w	r2, r2, #1
 8006682:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006684:	687b      	ldr	r3, [r7, #4]
 8006686:	2220      	movs	r2, #32
 8006688:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	2200      	movs	r2, #0
 8006690:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 8006694:	2300      	movs	r3, #0
 8006696:	e000      	b.n	800669a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8006698:	2302      	movs	r3, #2
  }
}
 800669a:	4618      	mov	r0, r3
 800669c:	370c      	adds	r7, #12
 800669e:	46bd      	mov	sp, r7
 80066a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80066a4:	4770      	bx	lr

080066a6 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 80066a6:	b480      	push	{r7}
 80066a8:	b085      	sub	sp, #20
 80066aa:	af00      	add	r7, sp, #0
 80066ac:	6078      	str	r0, [r7, #4]
 80066ae:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80066b6:	b2db      	uxtb	r3, r3
 80066b8:	2b20      	cmp	r3, #32
 80066ba:	d139      	bne.n	8006730 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80066c2:	2b01      	cmp	r3, #1
 80066c4:	d101      	bne.n	80066ca <HAL_I2CEx_ConfigDigitalFilter+0x24>
 80066c6:	2302      	movs	r3, #2
 80066c8:	e033      	b.n	8006732 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	2201      	movs	r2, #1
 80066ce:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	2224      	movs	r2, #36	@ 0x24
 80066d6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80066da:	687b      	ldr	r3, [r7, #4]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	681a      	ldr	r2, [r3, #0]
 80066e0:	687b      	ldr	r3, [r7, #4]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	f022 0201 	bic.w	r2, r2, #1
 80066e8:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 80066ea:	687b      	ldr	r3, [r7, #4]
 80066ec:	681b      	ldr	r3, [r3, #0]
 80066ee:	681b      	ldr	r3, [r3, #0]
 80066f0:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 80066f2:	68fb      	ldr	r3, [r7, #12]
 80066f4:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80066f8:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 80066fa:	683b      	ldr	r3, [r7, #0]
 80066fc:	021b      	lsls	r3, r3, #8
 80066fe:	68fa      	ldr	r2, [r7, #12]
 8006700:	4313      	orrs	r3, r2
 8006702:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	68fa      	ldr	r2, [r7, #12]
 800670a:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800670c:	687b      	ldr	r3, [r7, #4]
 800670e:	681b      	ldr	r3, [r3, #0]
 8006710:	681a      	ldr	r2, [r3, #0]
 8006712:	687b      	ldr	r3, [r7, #4]
 8006714:	681b      	ldr	r3, [r3, #0]
 8006716:	f042 0201 	orr.w	r2, r2, #1
 800671a:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800671c:	687b      	ldr	r3, [r7, #4]
 800671e:	2220      	movs	r2, #32
 8006720:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006724:	687b      	ldr	r3, [r7, #4]
 8006726:	2200      	movs	r2, #0
 8006728:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 800672c:	2300      	movs	r3, #0
 800672e:	e000      	b.n	8006732 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 8006730:	2302      	movs	r3, #2
  }
}
 8006732:	4618      	mov	r0, r3
 8006734:	3714      	adds	r7, #20
 8006736:	46bd      	mov	sp, r7
 8006738:	f85d 7b04 	ldr.w	r7, [sp], #4
 800673c:	4770      	bx	lr
	...

08006740 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8006740:	b580      	push	{r7, lr}
 8006742:	b084      	sub	sp, #16
 8006744:	af00      	add	r7, sp, #0
 8006746:	6078      	str	r0, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	2b00      	cmp	r3, #0
 800674c:	d101      	bne.n	8006752 <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 800674e:	2301      	movs	r3, #1
 8006750:	e0bf      	b.n	80068d2 <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006752:	687b      	ldr	r3, [r7, #4]
 8006754:	f893 30a1 	ldrb.w	r3, [r3, #161]	@ 0xa1
 8006758:	b2db      	uxtb	r3, r3
 800675a:	2b00      	cmp	r3, #0
 800675c:	d106      	bne.n	800676c <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	2200      	movs	r2, #0
 8006762:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8006766:	6878      	ldr	r0, [r7, #4]
 8006768:	f7fa fb4e 	bl	8000e08 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800676c:	687b      	ldr	r3, [r7, #4]
 800676e:	2202      	movs	r2, #2
 8006770:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	699a      	ldr	r2, [r3, #24]
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	681b      	ldr	r3, [r3, #0]
 800677e:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8006782:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006784:	687b      	ldr	r3, [r7, #4]
 8006786:	681b      	ldr	r3, [r3, #0]
 8006788:	6999      	ldr	r1, [r3, #24]
 800678a:	687b      	ldr	r3, [r7, #4]
 800678c:	685a      	ldr	r2, [r3, #4]
 800678e:	687b      	ldr	r3, [r7, #4]
 8006790:	689b      	ldr	r3, [r3, #8]
 8006792:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006798:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	691b      	ldr	r3, [r3, #16]
 800679e:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	681b      	ldr	r3, [r3, #0]
 80067a4:	430a      	orrs	r2, r1
 80067a6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80067a8:	687b      	ldr	r3, [r7, #4]
 80067aa:	681b      	ldr	r3, [r3, #0]
 80067ac:	6899      	ldr	r1, [r3, #8]
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	681a      	ldr	r2, [r3, #0]
 80067b2:	4b4a      	ldr	r3, [pc, #296]	@ (80068dc <HAL_LTDC_Init+0x19c>)
 80067b4:	400b      	ands	r3, r1
 80067b6:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80067b8:	687b      	ldr	r3, [r7, #4]
 80067ba:	695b      	ldr	r3, [r3, #20]
 80067bc:	041b      	lsls	r3, r3, #16
 80067be:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	6899      	ldr	r1, [r3, #8]
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	699a      	ldr	r2, [r3, #24]
 80067ca:	68fb      	ldr	r3, [r7, #12]
 80067cc:	431a      	orrs	r2, r3
 80067ce:	687b      	ldr	r3, [r7, #4]
 80067d0:	681b      	ldr	r3, [r3, #0]
 80067d2:	430a      	orrs	r2, r1
 80067d4:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	68d9      	ldr	r1, [r3, #12]
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	681a      	ldr	r2, [r3, #0]
 80067e0:	4b3e      	ldr	r3, [pc, #248]	@ (80068dc <HAL_LTDC_Init+0x19c>)
 80067e2:	400b      	ands	r3, r1
 80067e4:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	69db      	ldr	r3, [r3, #28]
 80067ea:	041b      	lsls	r3, r3, #16
 80067ec:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	68d9      	ldr	r1, [r3, #12]
 80067f4:	687b      	ldr	r3, [r7, #4]
 80067f6:	6a1a      	ldr	r2, [r3, #32]
 80067f8:	68fb      	ldr	r3, [r7, #12]
 80067fa:	431a      	orrs	r2, r3
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	430a      	orrs	r2, r1
 8006802:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	6919      	ldr	r1, [r3, #16]
 800680a:	687b      	ldr	r3, [r7, #4]
 800680c:	681a      	ldr	r2, [r3, #0]
 800680e:	4b33      	ldr	r3, [pc, #204]	@ (80068dc <HAL_LTDC_Init+0x19c>)
 8006810:	400b      	ands	r3, r1
 8006812:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006818:	041b      	lsls	r3, r3, #16
 800681a:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800681c:	687b      	ldr	r3, [r7, #4]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	6919      	ldr	r1, [r3, #16]
 8006822:	687b      	ldr	r3, [r7, #4]
 8006824:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8006826:	68fb      	ldr	r3, [r7, #12]
 8006828:	431a      	orrs	r2, r3
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	681b      	ldr	r3, [r3, #0]
 800682e:	430a      	orrs	r2, r1
 8006830:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8006832:	687b      	ldr	r3, [r7, #4]
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	6959      	ldr	r1, [r3, #20]
 8006838:	687b      	ldr	r3, [r7, #4]
 800683a:	681a      	ldr	r2, [r3, #0]
 800683c:	4b27      	ldr	r3, [pc, #156]	@ (80068dc <HAL_LTDC_Init+0x19c>)
 800683e:	400b      	ands	r3, r1
 8006840:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006846:	041b      	lsls	r3, r3, #16
 8006848:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800684a:	687b      	ldr	r3, [r7, #4]
 800684c:	681b      	ldr	r3, [r3, #0]
 800684e:	6959      	ldr	r1, [r3, #20]
 8006850:	687b      	ldr	r3, [r7, #4]
 8006852:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006854:	68fb      	ldr	r3, [r7, #12]
 8006856:	431a      	orrs	r2, r3
 8006858:	687b      	ldr	r3, [r7, #4]
 800685a:	681b      	ldr	r3, [r3, #0]
 800685c:	430a      	orrs	r2, r1
 800685e:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8006860:	687b      	ldr	r3, [r7, #4]
 8006862:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8006866:	021b      	lsls	r3, r3, #8
 8006868:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800686a:	687b      	ldr	r3, [r7, #4]
 800686c:	f893 3036 	ldrb.w	r3, [r3, #54]	@ 0x36
 8006870:	041b      	lsls	r3, r3, #16
 8006872:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8006874:	687b      	ldr	r3, [r7, #4]
 8006876:	681b      	ldr	r3, [r3, #0]
 8006878:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	681b      	ldr	r3, [r3, #0]
 800687e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8006882:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 800688a:	68ba      	ldr	r2, [r7, #8]
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	4313      	orrs	r3, r2
 8006890:	687a      	ldr	r2, [r7, #4]
 8006892:	f892 2034 	ldrb.w	r2, [r2, #52]	@ 0x34
 8006896:	431a      	orrs	r2, r3
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	681b      	ldr	r3, [r3, #0]
 800689c:	430a      	orrs	r2, r1
 800689e:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	681b      	ldr	r3, [r3, #0]
 80068aa:	f042 0206 	orr.w	r2, r2, #6
 80068ae:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	681b      	ldr	r3, [r3, #0]
 80068b4:	699a      	ldr	r2, [r3, #24]
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	f042 0201 	orr.w	r2, r2, #1
 80068be:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	2200      	movs	r2, #0
 80068c4:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	2201      	movs	r2, #1
 80068cc:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  return HAL_OK;
 80068d0:	2300      	movs	r3, #0
}
 80068d2:	4618      	mov	r0, r3
 80068d4:	3710      	adds	r7, #16
 80068d6:	46bd      	mov	sp, r7
 80068d8:	bd80      	pop	{r7, pc}
 80068da:	bf00      	nop
 80068dc:	f000f800 	.word	0xf000f800

080068e0 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 80068e0:	b580      	push	{r7, lr}
 80068e2:	b084      	sub	sp, #16
 80068e4:	af00      	add	r7, sp, #0
 80068e6:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80068e8:	687b      	ldr	r3, [r7, #4]
 80068ea:	681b      	ldr	r3, [r3, #0]
 80068ec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80068ee:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	681b      	ldr	r3, [r3, #0]
 80068f4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80068f6:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80068f8:	68fb      	ldr	r3, [r7, #12]
 80068fa:	f003 0304 	and.w	r3, r3, #4
 80068fe:	2b00      	cmp	r3, #0
 8006900:	d023      	beq.n	800694a <HAL_LTDC_IRQHandler+0x6a>
 8006902:	68bb      	ldr	r3, [r7, #8]
 8006904:	f003 0304 	and.w	r3, r3, #4
 8006908:	2b00      	cmp	r3, #0
 800690a:	d01e      	beq.n	800694a <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	681b      	ldr	r3, [r3, #0]
 8006910:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006912:	687b      	ldr	r3, [r7, #4]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	f022 0204 	bic.w	r2, r2, #4
 800691a:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	681b      	ldr	r3, [r3, #0]
 8006920:	2204      	movs	r2, #4
 8006922:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800692a:	f043 0201 	orr.w	r2, r3, #1
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006934:	687b      	ldr	r3, [r7, #4]
 8006936:	2204      	movs	r2, #4
 8006938:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800693c:	687b      	ldr	r3, [r7, #4]
 800693e:	2200      	movs	r2, #0
 8006940:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8006944:	6878      	ldr	r0, [r7, #4]
 8006946:	f000 f86f 	bl	8006a28 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	f003 0302 	and.w	r3, r3, #2
 8006950:	2b00      	cmp	r3, #0
 8006952:	d023      	beq.n	800699c <HAL_LTDC_IRQHandler+0xbc>
 8006954:	68bb      	ldr	r3, [r7, #8]
 8006956:	f003 0302 	and.w	r3, r3, #2
 800695a:	2b00      	cmp	r3, #0
 800695c:	d01e      	beq.n	800699c <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	681b      	ldr	r3, [r3, #0]
 8006962:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006964:	687b      	ldr	r3, [r7, #4]
 8006966:	681b      	ldr	r3, [r3, #0]
 8006968:	f022 0202 	bic.w	r2, r2, #2
 800696c:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800696e:	687b      	ldr	r3, [r7, #4]
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	2202      	movs	r2, #2
 8006974:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8006976:	687b      	ldr	r3, [r7, #4]
 8006978:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 800697c:	f043 0202 	orr.w	r2, r3, #2
 8006980:	687b      	ldr	r3, [r7, #4]
 8006982:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8006986:	687b      	ldr	r3, [r7, #4]
 8006988:	2204      	movs	r2, #4
 800698a:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800698e:	687b      	ldr	r3, [r7, #4]
 8006990:	2200      	movs	r2, #0
 8006992:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8006996:	6878      	ldr	r0, [r7, #4]
 8006998:	f000 f846 	bl	8006a28 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800699c:	68fb      	ldr	r3, [r7, #12]
 800699e:	f003 0301 	and.w	r3, r3, #1
 80069a2:	2b00      	cmp	r3, #0
 80069a4:	d01b      	beq.n	80069de <HAL_LTDC_IRQHandler+0xfe>
 80069a6:	68bb      	ldr	r3, [r7, #8]
 80069a8:	f003 0301 	and.w	r3, r3, #1
 80069ac:	2b00      	cmp	r3, #0
 80069ae:	d016      	beq.n	80069de <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80069b0:	687b      	ldr	r3, [r7, #4]
 80069b2:	681b      	ldr	r3, [r3, #0]
 80069b4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	681b      	ldr	r3, [r3, #0]
 80069ba:	f022 0201 	bic.w	r2, r2, #1
 80069be:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80069c0:	687b      	ldr	r3, [r7, #4]
 80069c2:	681b      	ldr	r3, [r3, #0]
 80069c4:	2201      	movs	r2, #1
 80069c6:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 80069c8:	687b      	ldr	r3, [r7, #4]
 80069ca:	2201      	movs	r2, #1
 80069cc:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	2200      	movs	r2, #0
 80069d4:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 80069d8:	6878      	ldr	r0, [r7, #4]
 80069da:	f00b f855 	bl	8011a88 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	f003 0308 	and.w	r3, r3, #8
 80069e4:	2b00      	cmp	r3, #0
 80069e6:	d01b      	beq.n	8006a20 <HAL_LTDC_IRQHandler+0x140>
 80069e8:	68bb      	ldr	r3, [r7, #8]
 80069ea:	f003 0308 	and.w	r3, r3, #8
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d016      	beq.n	8006a20 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	681b      	ldr	r3, [r3, #0]
 80069f6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80069f8:	687b      	ldr	r3, [r7, #4]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	f022 0208 	bic.w	r2, r2, #8
 8006a00:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8006a02:	687b      	ldr	r3, [r7, #4]
 8006a04:	681b      	ldr	r3, [r3, #0]
 8006a06:	2208      	movs	r2, #8
 8006a08:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	2201      	movs	r2, #1
 8006a0e:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8006a12:	687b      	ldr	r3, [r7, #4]
 8006a14:	2200      	movs	r2, #0
 8006a16:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8006a1a:	6878      	ldr	r0, [r7, #4]
 8006a1c:	f000 f80e 	bl	8006a3c <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8006a20:	bf00      	nop
 8006a22:	3710      	adds	r7, #16
 8006a24:	46bd      	mov	sp, r7
 8006a26:	bd80      	pop	{r7, pc}

08006a28 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8006a28:	b480      	push	{r7}
 8006a2a:	b083      	sub	sp, #12
 8006a2c:	af00      	add	r7, sp, #0
 8006a2e:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8006a30:	bf00      	nop
 8006a32:	370c      	adds	r7, #12
 8006a34:	46bd      	mov	sp, r7
 8006a36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a3a:	4770      	bx	lr

08006a3c <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8006a3c:	b480      	push	{r7}
 8006a3e:	b083      	sub	sp, #12
 8006a40:	af00      	add	r7, sp, #0
 8006a42:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8006a44:	bf00      	nop
 8006a46:	370c      	adds	r7, #12
 8006a48:	46bd      	mov	sp, r7
 8006a4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a4e:	4770      	bx	lr

08006a50 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8006a50:	b5b0      	push	{r4, r5, r7, lr}
 8006a52:	b084      	sub	sp, #16
 8006a54:	af00      	add	r7, sp, #0
 8006a56:	60f8      	str	r0, [r7, #12]
 8006a58:	60b9      	str	r1, [r7, #8]
 8006a5a:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8006a5c:	68fb      	ldr	r3, [r7, #12]
 8006a5e:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8006a62:	2b01      	cmp	r3, #1
 8006a64:	d101      	bne.n	8006a6a <HAL_LTDC_ConfigLayer+0x1a>
 8006a66:	2302      	movs	r3, #2
 8006a68:	e02c      	b.n	8006ac4 <HAL_LTDC_ConfigLayer+0x74>
 8006a6a:	68fb      	ldr	r3, [r7, #12]
 8006a6c:	2201      	movs	r2, #1
 8006a6e:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006a72:	68fb      	ldr	r3, [r7, #12]
 8006a74:	2202      	movs	r2, #2
 8006a76:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8006a7a:	68fa      	ldr	r2, [r7, #12]
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	2134      	movs	r1, #52	@ 0x34
 8006a80:	fb01 f303 	mul.w	r3, r1, r3
 8006a84:	4413      	add	r3, r2
 8006a86:	f103 0238 	add.w	r2, r3, #56	@ 0x38
 8006a8a:	68bb      	ldr	r3, [r7, #8]
 8006a8c:	4614      	mov	r4, r2
 8006a8e:	461d      	mov	r5, r3
 8006a90:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a92:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a94:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a96:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a9a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8006a9c:	682b      	ldr	r3, [r5, #0]
 8006a9e:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8006aa0:	687a      	ldr	r2, [r7, #4]
 8006aa2:	68b9      	ldr	r1, [r7, #8]
 8006aa4:	68f8      	ldr	r0, [r7, #12]
 8006aa6:	f000 f849 	bl	8006b3c <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8006aaa:	68fb      	ldr	r3, [r7, #12]
 8006aac:	681b      	ldr	r3, [r3, #0]
 8006aae:	2201      	movs	r2, #1
 8006ab0:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8006ab2:	68fb      	ldr	r3, [r7, #12]
 8006ab4:	2201      	movs	r2, #1
 8006ab6:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8006aba:	68fb      	ldr	r3, [r7, #12]
 8006abc:	2200      	movs	r2, #0
 8006abe:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 8006ac2:	2300      	movs	r3, #0
}
 8006ac4:	4618      	mov	r0, r3
 8006ac6:	3710      	adds	r7, #16
 8006ac8:	46bd      	mov	sp, r7
 8006aca:	bdb0      	pop	{r4, r5, r7, pc}

08006acc <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8006acc:	b480      	push	{r7}
 8006ace:	b083      	sub	sp, #12
 8006ad0:	af00      	add	r7, sp, #0
 8006ad2:	6078      	str	r0, [r7, #4]
 8006ad4:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8006adc:	2b01      	cmp	r3, #1
 8006ade:	d101      	bne.n	8006ae4 <HAL_LTDC_ProgramLineEvent+0x18>
 8006ae0:	2302      	movs	r3, #2
 8006ae2:	e023      	b.n	8006b2c <HAL_LTDC_ProgramLineEvent+0x60>
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	2201      	movs	r2, #1
 8006ae8:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	2202      	movs	r2, #2
 8006af0:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	681b      	ldr	r3, [r3, #0]
 8006afe:	f022 0201 	bic.w	r2, r2, #1
 8006b02:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8006b04:	4a0c      	ldr	r2, [pc, #48]	@ (8006b38 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8006b06:	683b      	ldr	r3, [r7, #0]
 8006b08:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8006b0a:	687b      	ldr	r3, [r7, #4]
 8006b0c:	681b      	ldr	r3, [r3, #0]
 8006b0e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8006b10:	687b      	ldr	r3, [r7, #4]
 8006b12:	681b      	ldr	r3, [r3, #0]
 8006b14:	f042 0201 	orr.w	r2, r2, #1
 8006b18:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	2201      	movs	r2, #1
 8006b1e:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	2200      	movs	r2, #0
 8006b26:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 8006b2a:	2300      	movs	r3, #0
}
 8006b2c:	4618      	mov	r0, r3
 8006b2e:	370c      	adds	r7, #12
 8006b30:	46bd      	mov	sp, r7
 8006b32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b36:	4770      	bx	lr
 8006b38:	40016800 	.word	0x40016800

08006b3c <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8006b3c:	b480      	push	{r7}
 8006b3e:	b089      	sub	sp, #36	@ 0x24
 8006b40:	af00      	add	r7, sp, #0
 8006b42:	60f8      	str	r0, [r7, #12]
 8006b44:	60b9      	str	r1, [r7, #8]
 8006b46:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006b48:	68bb      	ldr	r3, [r7, #8]
 8006b4a:	685a      	ldr	r2, [r3, #4]
 8006b4c:	68fb      	ldr	r3, [r7, #12]
 8006b4e:	681b      	ldr	r3, [r3, #0]
 8006b50:	68db      	ldr	r3, [r3, #12]
 8006b52:	0c1b      	lsrs	r3, r3, #16
 8006b54:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b58:	4413      	add	r3, r2
 8006b5a:	041b      	lsls	r3, r3, #16
 8006b5c:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006b5e:	68fb      	ldr	r3, [r7, #12]
 8006b60:	681b      	ldr	r3, [r3, #0]
 8006b62:	461a      	mov	r2, r3
 8006b64:	687b      	ldr	r3, [r7, #4]
 8006b66:	01db      	lsls	r3, r3, #7
 8006b68:	4413      	add	r3, r2
 8006b6a:	3384      	adds	r3, #132	@ 0x84
 8006b6c:	685b      	ldr	r3, [r3, #4]
 8006b6e:	68fa      	ldr	r2, [r7, #12]
 8006b70:	6812      	ldr	r2, [r2, #0]
 8006b72:	4611      	mov	r1, r2
 8006b74:	687a      	ldr	r2, [r7, #4]
 8006b76:	01d2      	lsls	r2, r2, #7
 8006b78:	440a      	add	r2, r1
 8006b7a:	3284      	adds	r2, #132	@ 0x84
 8006b7c:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 8006b80:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006b82:	68bb      	ldr	r3, [r7, #8]
 8006b84:	681a      	ldr	r2, [r3, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006b86:	68fb      	ldr	r3, [r7, #12]
 8006b88:	681b      	ldr	r3, [r3, #0]
 8006b8a:	68db      	ldr	r3, [r3, #12]
 8006b8c:	0c1b      	lsrs	r3, r3, #16
 8006b8e:	f3c3 030b 	ubfx	r3, r3, #0, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006b92:	4413      	add	r3, r2
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006b94:	1c5a      	adds	r2, r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006b96:	68fb      	ldr	r3, [r7, #12]
 8006b98:	681b      	ldr	r3, [r3, #0]
 8006b9a:	4619      	mov	r1, r3
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	01db      	lsls	r3, r3, #7
 8006ba0:	440b      	add	r3, r1
 8006ba2:	3384      	adds	r3, #132	@ 0x84
 8006ba4:	4619      	mov	r1, r3
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ba6:	69fb      	ldr	r3, [r7, #28]
 8006ba8:	4313      	orrs	r3, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8006baa:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006bac:	68bb      	ldr	r3, [r7, #8]
 8006bae:	68da      	ldr	r2, [r3, #12]
 8006bb0:	68fb      	ldr	r3, [r7, #12]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	68db      	ldr	r3, [r3, #12]
 8006bb6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006bba:	4413      	add	r3, r2
 8006bbc:	041b      	lsls	r3, r3, #16
 8006bbe:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006bc0:	68fb      	ldr	r3, [r7, #12]
 8006bc2:	681b      	ldr	r3, [r3, #0]
 8006bc4:	461a      	mov	r2, r3
 8006bc6:	687b      	ldr	r3, [r7, #4]
 8006bc8:	01db      	lsls	r3, r3, #7
 8006bca:	4413      	add	r3, r2
 8006bcc:	3384      	adds	r3, #132	@ 0x84
 8006bce:	689b      	ldr	r3, [r3, #8]
 8006bd0:	68fa      	ldr	r2, [r7, #12]
 8006bd2:	6812      	ldr	r2, [r2, #0]
 8006bd4:	4611      	mov	r1, r2
 8006bd6:	687a      	ldr	r2, [r7, #4]
 8006bd8:	01d2      	lsls	r2, r2, #7
 8006bda:	440a      	add	r2, r1
 8006bdc:	3284      	adds	r2, #132	@ 0x84
 8006bde:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 8006be2:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006be4:	68bb      	ldr	r3, [r7, #8]
 8006be6:	689a      	ldr	r2, [r3, #8]
 8006be8:	68fb      	ldr	r3, [r7, #12]
 8006bea:	681b      	ldr	r3, [r3, #0]
 8006bec:	68db      	ldr	r3, [r3, #12]
 8006bee:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8006bf2:	4413      	add	r3, r2
 8006bf4:	1c5a      	adds	r2, r3, #1
 8006bf6:	68fb      	ldr	r3, [r7, #12]
 8006bf8:	681b      	ldr	r3, [r3, #0]
 8006bfa:	4619      	mov	r1, r3
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	01db      	lsls	r3, r3, #7
 8006c00:	440b      	add	r3, r1
 8006c02:	3384      	adds	r3, #132	@ 0x84
 8006c04:	4619      	mov	r1, r3
 8006c06:	69fb      	ldr	r3, [r7, #28]
 8006c08:	4313      	orrs	r3, r2
 8006c0a:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006c0c:	68fb      	ldr	r3, [r7, #12]
 8006c0e:	681b      	ldr	r3, [r3, #0]
 8006c10:	461a      	mov	r2, r3
 8006c12:	687b      	ldr	r3, [r7, #4]
 8006c14:	01db      	lsls	r3, r3, #7
 8006c16:	4413      	add	r3, r2
 8006c18:	3384      	adds	r3, #132	@ 0x84
 8006c1a:	691b      	ldr	r3, [r3, #16]
 8006c1c:	68fa      	ldr	r2, [r7, #12]
 8006c1e:	6812      	ldr	r2, [r2, #0]
 8006c20:	4611      	mov	r1, r2
 8006c22:	687a      	ldr	r2, [r7, #4]
 8006c24:	01d2      	lsls	r2, r2, #7
 8006c26:	440a      	add	r2, r1
 8006c28:	3284      	adds	r2, #132	@ 0x84
 8006c2a:	f023 0307 	bic.w	r3, r3, #7
 8006c2e:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006c30:	68fb      	ldr	r3, [r7, #12]
 8006c32:	681b      	ldr	r3, [r3, #0]
 8006c34:	461a      	mov	r2, r3
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	01db      	lsls	r3, r3, #7
 8006c3a:	4413      	add	r3, r2
 8006c3c:	3384      	adds	r3, #132	@ 0x84
 8006c3e:	461a      	mov	r2, r3
 8006c40:	68bb      	ldr	r3, [r7, #8]
 8006c42:	691b      	ldr	r3, [r3, #16]
 8006c44:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006c46:	68bb      	ldr	r3, [r7, #8]
 8006c48:	f893 3031 	ldrb.w	r3, [r3, #49]	@ 0x31
 8006c4c:	021b      	lsls	r3, r3, #8
 8006c4e:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006c50:	68bb      	ldr	r3, [r7, #8]
 8006c52:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 8006c56:	041b      	lsls	r3, r3, #16
 8006c58:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006c5a:	68bb      	ldr	r3, [r7, #8]
 8006c5c:	699b      	ldr	r3, [r3, #24]
 8006c5e:	061b      	lsls	r3, r3, #24
 8006c60:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8006c62:	68fb      	ldr	r3, [r7, #12]
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	461a      	mov	r2, r3
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	01db      	lsls	r3, r3, #7
 8006c6c:	4413      	add	r3, r2
 8006c6e:	3384      	adds	r3, #132	@ 0x84
 8006c70:	699b      	ldr	r3, [r3, #24]
 8006c72:	68fb      	ldr	r3, [r7, #12]
 8006c74:	681b      	ldr	r3, [r3, #0]
 8006c76:	461a      	mov	r2, r3
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	01db      	lsls	r3, r3, #7
 8006c7c:	4413      	add	r3, r2
 8006c7e:	3384      	adds	r3, #132	@ 0x84
 8006c80:	461a      	mov	r2, r3
 8006c82:	2300      	movs	r3, #0
 8006c84:	6193      	str	r3, [r2, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006c86:	68bb      	ldr	r3, [r7, #8]
 8006c88:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8006c8c:	461a      	mov	r2, r3
 8006c8e:	69fb      	ldr	r3, [r7, #28]
 8006c90:	431a      	orrs	r2, r3
 8006c92:	69bb      	ldr	r3, [r7, #24]
 8006c94:	431a      	orrs	r2, r3
 8006c96:	68fb      	ldr	r3, [r7, #12]
 8006c98:	681b      	ldr	r3, [r3, #0]
 8006c9a:	4619      	mov	r1, r3
 8006c9c:	687b      	ldr	r3, [r7, #4]
 8006c9e:	01db      	lsls	r3, r3, #7
 8006ca0:	440b      	add	r3, r1
 8006ca2:	3384      	adds	r3, #132	@ 0x84
 8006ca4:	4619      	mov	r1, r3
 8006ca6:	697b      	ldr	r3, [r7, #20]
 8006ca8:	4313      	orrs	r3, r2
 8006caa:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006cac:	68fb      	ldr	r3, [r7, #12]
 8006cae:	681b      	ldr	r3, [r3, #0]
 8006cb0:	461a      	mov	r2, r3
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	01db      	lsls	r3, r3, #7
 8006cb6:	4413      	add	r3, r2
 8006cb8:	3384      	adds	r3, #132	@ 0x84
 8006cba:	695b      	ldr	r3, [r3, #20]
 8006cbc:	68fa      	ldr	r2, [r7, #12]
 8006cbe:	6812      	ldr	r2, [r2, #0]
 8006cc0:	4611      	mov	r1, r2
 8006cc2:	687a      	ldr	r2, [r7, #4]
 8006cc4:	01d2      	lsls	r2, r2, #7
 8006cc6:	440a      	add	r2, r1
 8006cc8:	3284      	adds	r2, #132	@ 0x84
 8006cca:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8006cce:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006cd0:	68fb      	ldr	r3, [r7, #12]
 8006cd2:	681b      	ldr	r3, [r3, #0]
 8006cd4:	461a      	mov	r2, r3
 8006cd6:	687b      	ldr	r3, [r7, #4]
 8006cd8:	01db      	lsls	r3, r3, #7
 8006cda:	4413      	add	r3, r2
 8006cdc:	3384      	adds	r3, #132	@ 0x84
 8006cde:	461a      	mov	r2, r3
 8006ce0:	68bb      	ldr	r3, [r7, #8]
 8006ce2:	695b      	ldr	r3, [r3, #20]
 8006ce4:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006ce6:	68fb      	ldr	r3, [r7, #12]
 8006ce8:	681b      	ldr	r3, [r3, #0]
 8006cea:	461a      	mov	r2, r3
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	01db      	lsls	r3, r3, #7
 8006cf0:	4413      	add	r3, r2
 8006cf2:	3384      	adds	r3, #132	@ 0x84
 8006cf4:	69da      	ldr	r2, [r3, #28]
 8006cf6:	68fb      	ldr	r3, [r7, #12]
 8006cf8:	681b      	ldr	r3, [r3, #0]
 8006cfa:	4619      	mov	r1, r3
 8006cfc:	687b      	ldr	r3, [r7, #4]
 8006cfe:	01db      	lsls	r3, r3, #7
 8006d00:	440b      	add	r3, r1
 8006d02:	3384      	adds	r3, #132	@ 0x84
 8006d04:	4619      	mov	r1, r3
 8006d06:	4b58      	ldr	r3, [pc, #352]	@ (8006e68 <LTDC_SetConfig+0x32c>)
 8006d08:	4013      	ands	r3, r2
 8006d0a:	61cb      	str	r3, [r1, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006d0c:	68bb      	ldr	r3, [r7, #8]
 8006d0e:	69da      	ldr	r2, [r3, #28]
 8006d10:	68bb      	ldr	r3, [r7, #8]
 8006d12:	6a1b      	ldr	r3, [r3, #32]
 8006d14:	68f9      	ldr	r1, [r7, #12]
 8006d16:	6809      	ldr	r1, [r1, #0]
 8006d18:	4608      	mov	r0, r1
 8006d1a:	6879      	ldr	r1, [r7, #4]
 8006d1c:	01c9      	lsls	r1, r1, #7
 8006d1e:	4401      	add	r1, r0
 8006d20:	3184      	adds	r1, #132	@ 0x84
 8006d22:	4313      	orrs	r3, r2
 8006d24:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006d26:	68fb      	ldr	r3, [r7, #12]
 8006d28:	681b      	ldr	r3, [r3, #0]
 8006d2a:	461a      	mov	r2, r3
 8006d2c:	687b      	ldr	r3, [r7, #4]
 8006d2e:	01db      	lsls	r3, r3, #7
 8006d30:	4413      	add	r3, r2
 8006d32:	3384      	adds	r3, #132	@ 0x84
 8006d34:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006d36:	68fb      	ldr	r3, [r7, #12]
 8006d38:	681b      	ldr	r3, [r3, #0]
 8006d3a:	461a      	mov	r2, r3
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	01db      	lsls	r3, r3, #7
 8006d40:	4413      	add	r3, r2
 8006d42:	3384      	adds	r3, #132	@ 0x84
 8006d44:	461a      	mov	r2, r3
 8006d46:	2300      	movs	r3, #0
 8006d48:	6293      	str	r3, [r2, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006d4a:	68fb      	ldr	r3, [r7, #12]
 8006d4c:	681b      	ldr	r3, [r3, #0]
 8006d4e:	461a      	mov	r2, r3
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	01db      	lsls	r3, r3, #7
 8006d54:	4413      	add	r3, r2
 8006d56:	3384      	adds	r3, #132	@ 0x84
 8006d58:	461a      	mov	r2, r3
 8006d5a:	68bb      	ldr	r3, [r7, #8]
 8006d5c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006d5e:	6293      	str	r3, [r2, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006d60:	68bb      	ldr	r3, [r7, #8]
 8006d62:	691b      	ldr	r3, [r3, #16]
 8006d64:	2b00      	cmp	r3, #0
 8006d66:	d102      	bne.n	8006d6e <LTDC_SetConfig+0x232>
  {
    tmp = 4U;
 8006d68:	2304      	movs	r3, #4
 8006d6a:	61fb      	str	r3, [r7, #28]
 8006d6c:	e01b      	b.n	8006da6 <LTDC_SetConfig+0x26a>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006d6e:	68bb      	ldr	r3, [r7, #8]
 8006d70:	691b      	ldr	r3, [r3, #16]
 8006d72:	2b01      	cmp	r3, #1
 8006d74:	d102      	bne.n	8006d7c <LTDC_SetConfig+0x240>
  {
    tmp = 3U;
 8006d76:	2303      	movs	r3, #3
 8006d78:	61fb      	str	r3, [r7, #28]
 8006d7a:	e014      	b.n	8006da6 <LTDC_SetConfig+0x26a>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006d7c:	68bb      	ldr	r3, [r7, #8]
 8006d7e:	691b      	ldr	r3, [r3, #16]
 8006d80:	2b04      	cmp	r3, #4
 8006d82:	d00b      	beq.n	8006d9c <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8006d84:	68bb      	ldr	r3, [r7, #8]
 8006d86:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006d88:	2b02      	cmp	r3, #2
 8006d8a:	d007      	beq.n	8006d9c <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8006d8c:	68bb      	ldr	r3, [r7, #8]
 8006d8e:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8006d90:	2b03      	cmp	r3, #3
 8006d92:	d003      	beq.n	8006d9c <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8006d94:	68bb      	ldr	r3, [r7, #8]
 8006d96:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8006d98:	2b07      	cmp	r3, #7
 8006d9a:	d102      	bne.n	8006da2 <LTDC_SetConfig+0x266>
  {
    tmp = 2U;
 8006d9c:	2302      	movs	r3, #2
 8006d9e:	61fb      	str	r3, [r7, #28]
 8006da0:	e001      	b.n	8006da6 <LTDC_SetConfig+0x26a>
  }
  else
  {
    tmp = 1U;
 8006da2:	2301      	movs	r3, #1
 8006da4:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	681b      	ldr	r3, [r3, #0]
 8006daa:	461a      	mov	r2, r3
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	01db      	lsls	r3, r3, #7
 8006db0:	4413      	add	r3, r2
 8006db2:	3384      	adds	r3, #132	@ 0x84
 8006db4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006db6:	68fa      	ldr	r2, [r7, #12]
 8006db8:	6812      	ldr	r2, [r2, #0]
 8006dba:	4611      	mov	r1, r2
 8006dbc:	687a      	ldr	r2, [r7, #4]
 8006dbe:	01d2      	lsls	r2, r2, #7
 8006dc0:	440a      	add	r2, r1
 8006dc2:	3284      	adds	r2, #132	@ 0x84
 8006dc4:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
 8006dc8:	62d3      	str	r3, [r2, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006dca:	68bb      	ldr	r3, [r7, #8]
 8006dcc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006dce:	69fa      	ldr	r2, [r7, #28]
 8006dd0:	fb02 f303 	mul.w	r3, r2, r3
 8006dd4:	041a      	lsls	r2, r3, #16
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006dd6:	68bb      	ldr	r3, [r7, #8]
 8006dd8:	6859      	ldr	r1, [r3, #4]
 8006dda:	68bb      	ldr	r3, [r7, #8]
 8006ddc:	681b      	ldr	r3, [r3, #0]
 8006dde:	1acb      	subs	r3, r1, r3
 8006de0:	69f9      	ldr	r1, [r7, #28]
 8006de2:	fb01 f303 	mul.w	r3, r1, r3
 8006de6:	3303      	adds	r3, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8006de8:	68f9      	ldr	r1, [r7, #12]
 8006dea:	6809      	ldr	r1, [r1, #0]
 8006dec:	4608      	mov	r0, r1
 8006dee:	6879      	ldr	r1, [r7, #4]
 8006df0:	01c9      	lsls	r1, r1, #7
 8006df2:	4401      	add	r1, r0
 8006df4:	3184      	adds	r1, #132	@ 0x84
 8006df6:	4313      	orrs	r3, r2
 8006df8:	62cb      	str	r3, [r1, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006dfa:	68fb      	ldr	r3, [r7, #12]
 8006dfc:	681b      	ldr	r3, [r3, #0]
 8006dfe:	461a      	mov	r2, r3
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	01db      	lsls	r3, r3, #7
 8006e04:	4413      	add	r3, r2
 8006e06:	3384      	adds	r3, #132	@ 0x84
 8006e08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006e0a:	68fb      	ldr	r3, [r7, #12]
 8006e0c:	681b      	ldr	r3, [r3, #0]
 8006e0e:	4619      	mov	r1, r3
 8006e10:	687b      	ldr	r3, [r7, #4]
 8006e12:	01db      	lsls	r3, r3, #7
 8006e14:	440b      	add	r3, r1
 8006e16:	3384      	adds	r3, #132	@ 0x84
 8006e18:	4619      	mov	r1, r3
 8006e1a:	4b14      	ldr	r3, [pc, #80]	@ (8006e6c <LTDC_SetConfig+0x330>)
 8006e1c:	4013      	ands	r3, r2
 8006e1e:	630b      	str	r3, [r1, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006e20:	68fb      	ldr	r3, [r7, #12]
 8006e22:	681b      	ldr	r3, [r3, #0]
 8006e24:	461a      	mov	r2, r3
 8006e26:	687b      	ldr	r3, [r7, #4]
 8006e28:	01db      	lsls	r3, r3, #7
 8006e2a:	4413      	add	r3, r2
 8006e2c:	3384      	adds	r3, #132	@ 0x84
 8006e2e:	461a      	mov	r2, r3
 8006e30:	68bb      	ldr	r3, [r7, #8]
 8006e32:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006e34:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006e36:	68fb      	ldr	r3, [r7, #12]
 8006e38:	681b      	ldr	r3, [r3, #0]
 8006e3a:	461a      	mov	r2, r3
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	01db      	lsls	r3, r3, #7
 8006e40:	4413      	add	r3, r2
 8006e42:	3384      	adds	r3, #132	@ 0x84
 8006e44:	681b      	ldr	r3, [r3, #0]
 8006e46:	68fa      	ldr	r2, [r7, #12]
 8006e48:	6812      	ldr	r2, [r2, #0]
 8006e4a:	4611      	mov	r1, r2
 8006e4c:	687a      	ldr	r2, [r7, #4]
 8006e4e:	01d2      	lsls	r2, r2, #7
 8006e50:	440a      	add	r2, r1
 8006e52:	3284      	adds	r2, #132	@ 0x84
 8006e54:	f043 0301 	orr.w	r3, r3, #1
 8006e58:	6013      	str	r3, [r2, #0]
}
 8006e5a:	bf00      	nop
 8006e5c:	3724      	adds	r7, #36	@ 0x24
 8006e5e:	46bd      	mov	sp, r7
 8006e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e64:	4770      	bx	lr
 8006e66:	bf00      	nop
 8006e68:	fffff8f8 	.word	0xfffff8f8
 8006e6c:	fffff800 	.word	0xfffff800

08006e70 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8006e70:	b580      	push	{r7, lr}
 8006e72:	b082      	sub	sp, #8
 8006e74:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0;
 8006e76:	2300      	movs	r3, #0
 8006e78:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8006e7a:	4b23      	ldr	r3, [pc, #140]	@ (8006f08 <HAL_PWREx_EnableOverDrive+0x98>)
 8006e7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006e7e:	4a22      	ldr	r2, [pc, #136]	@ (8006f08 <HAL_PWREx_EnableOverDrive+0x98>)
 8006e80:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8006e84:	6413      	str	r3, [r2, #64]	@ 0x40
 8006e86:	4b20      	ldr	r3, [pc, #128]	@ (8006f08 <HAL_PWREx_EnableOverDrive+0x98>)
 8006e88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006e8a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8006e8e:	603b      	str	r3, [r7, #0]
 8006e90:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 216 MHz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8006e92:	4b1e      	ldr	r3, [pc, #120]	@ (8006f0c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006e94:	681b      	ldr	r3, [r3, #0]
 8006e96:	4a1d      	ldr	r2, [pc, #116]	@ (8006f0c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006e98:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006e9c:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006e9e:	f7fd fe47 	bl	8004b30 <HAL_GetTick>
 8006ea2:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006ea4:	e009      	b.n	8006eba <HAL_PWREx_EnableOverDrive+0x4a>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006ea6:	f7fd fe43 	bl	8004b30 <HAL_GetTick>
 8006eaa:	4602      	mov	r2, r0
 8006eac:	687b      	ldr	r3, [r7, #4]
 8006eae:	1ad3      	subs	r3, r2, r3
 8006eb0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8006eb4:	d901      	bls.n	8006eba <HAL_PWREx_EnableOverDrive+0x4a>
    {
      return HAL_TIMEOUT;
 8006eb6:	2303      	movs	r3, #3
 8006eb8:	e022      	b.n	8006f00 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8006eba:	4b14      	ldr	r3, [pc, #80]	@ (8006f0c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006ebc:	685b      	ldr	r3, [r3, #4]
 8006ebe:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8006ec2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006ec6:	d1ee      	bne.n	8006ea6 <HAL_PWREx_EnableOverDrive+0x36>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8006ec8:	4b10      	ldr	r3, [pc, #64]	@ (8006f0c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006eca:	681b      	ldr	r3, [r3, #0]
 8006ecc:	4a0f      	ldr	r2, [pc, #60]	@ (8006f0c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006ece:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8006ed2:	6013      	str	r3, [r2, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8006ed4:	f7fd fe2c 	bl	8004b30 <HAL_GetTick>
 8006ed8:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006eda:	e009      	b.n	8006ef0 <HAL_PWREx_EnableOverDrive+0x80>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8006edc:	f7fd fe28 	bl	8004b30 <HAL_GetTick>
 8006ee0:	4602      	mov	r2, r0
 8006ee2:	687b      	ldr	r3, [r7, #4]
 8006ee4:	1ad3      	subs	r3, r2, r3
 8006ee6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8006eea:	d901      	bls.n	8006ef0 <HAL_PWREx_EnableOverDrive+0x80>
    {
      return HAL_TIMEOUT;
 8006eec:	2303      	movs	r3, #3
 8006eee:	e007      	b.n	8006f00 <HAL_PWREx_EnableOverDrive+0x90>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8006ef0:	4b06      	ldr	r3, [pc, #24]	@ (8006f0c <HAL_PWREx_EnableOverDrive+0x9c>)
 8006ef2:	685b      	ldr	r3, [r3, #4]
 8006ef4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006ef8:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006efc:	d1ee      	bne.n	8006edc <HAL_PWREx_EnableOverDrive+0x6c>
    }
  } 
  return HAL_OK;
 8006efe:	2300      	movs	r3, #0
}
 8006f00:	4618      	mov	r0, r3
 8006f02:	3708      	adds	r7, #8
 8006f04:	46bd      	mov	sp, r7
 8006f06:	bd80      	pop	{r7, pc}
 8006f08:	40023800 	.word	0x40023800
 8006f0c:	40007000 	.word	0x40007000

08006f10 <HAL_QSPI_Init>:
  *        in the QSPI_InitTypeDef and initialize the associated handle.
  * @param hqspi QSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_QSPI_Init(QSPI_HandleTypeDef *hqspi)
{
 8006f10:	b580      	push	{r7, lr}
 8006f12:	b086      	sub	sp, #24
 8006f14:	af02      	add	r7, sp, #8
 8006f16:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 8006f18:	f7fd fe0a 	bl	8004b30 <HAL_GetTick>
 8006f1c:	60f8      	str	r0, [r7, #12]

  /* Check the QSPI handle allocation */
  if(hqspi == NULL)
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	2b00      	cmp	r3, #0
 8006f22:	d101      	bne.n	8006f28 <HAL_QSPI_Init+0x18>
  {
    return HAL_ERROR;
 8006f24:	2301      	movs	r3, #1
 8006f26:	e067      	b.n	8006ff8 <HAL_QSPI_Init+0xe8>
  if (hqspi->Init.DualFlash != QSPI_DUALFLASH_ENABLE )
  {
    assert_param(IS_QSPI_FLASH_ID(hqspi->Init.FlashID));
  }

  if(hqspi->State == HAL_QSPI_STATE_RESET)
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8006f2e:	b2db      	uxtb	r3, r3
 8006f30:	2b00      	cmp	r3, #0
 8006f32:	d10b      	bne.n	8006f4c <HAL_QSPI_Init+0x3c>
  {
    /* Allocate lock resource and initialize it */
    hqspi->Lock = HAL_UNLOCKED;
 8006f34:	687b      	ldr	r3, [r7, #4]
 8006f36:	2200      	movs	r2, #0
 8006f38:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware */
    hqspi->MspInitCallback(hqspi);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_QSPI_MspInit(hqspi);
 8006f3c:	6878      	ldr	r0, [r7, #4]
 8006f3e:	f7fa fa11 	bl	8001364 <HAL_QSPI_MspInit>
#endif

    /* Configure the default timeout for the QSPI memory access */
    HAL_QSPI_SetTimeout(hqspi, HAL_QSPI_TIMEOUT_DEFAULT_VALUE);
 8006f42:	f241 3188 	movw	r1, #5000	@ 0x1388
 8006f46:	6878      	ldr	r0, [r7, #4]
 8006f48:	f000 f85e 	bl	8007008 <HAL_QSPI_SetTimeout>
  }

  /* Configure QSPI FIFO Threshold */
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 8006f4c:	687b      	ldr	r3, [r7, #4]
 8006f4e:	681b      	ldr	r3, [r3, #0]
 8006f50:	681b      	ldr	r3, [r3, #0]
 8006f52:	f423 51f8 	bic.w	r1, r3, #7936	@ 0x1f00
 8006f56:	687b      	ldr	r3, [r7, #4]
 8006f58:	689b      	ldr	r3, [r3, #8]
 8006f5a:	3b01      	subs	r3, #1
 8006f5c:	021a      	lsls	r2, r3, #8
 8006f5e:	687b      	ldr	r3, [r7, #4]
 8006f60:	681b      	ldr	r3, [r3, #0]
 8006f62:	430a      	orrs	r2, r1
 8006f64:	601a      	str	r2, [r3, #0]
             ((hqspi->Init.FifoThreshold - 1U) << QUADSPI_CR_FTHRES_Pos));

  /* Wait till BUSY flag reset */
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006f6a:	9300      	str	r3, [sp, #0]
 8006f6c:	68fb      	ldr	r3, [r7, #12]
 8006f6e:	2200      	movs	r2, #0
 8006f70:	2120      	movs	r1, #32
 8006f72:	6878      	ldr	r0, [r7, #4]
 8006f74:	f000 f856 	bl	8007024 <QSPI_WaitFlagStateUntilTimeout>
 8006f78:	4603      	mov	r3, r0
 8006f7a:	72fb      	strb	r3, [r7, #11]

  if(status == HAL_OK)
 8006f7c:	7afb      	ldrb	r3, [r7, #11]
 8006f7e:	2b00      	cmp	r3, #0
 8006f80:	d135      	bne.n	8006fee <HAL_QSPI_Init+0xde>
  {
    /* Configure QSPI Clock Prescaler and Sample Shift */
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	681b      	ldr	r3, [r3, #0]
 8006f86:	681a      	ldr	r2, [r3, #0]
 8006f88:	4b1d      	ldr	r3, [pc, #116]	@ (8007000 <HAL_QSPI_Init+0xf0>)
 8006f8a:	4013      	ands	r3, r2
 8006f8c:	687a      	ldr	r2, [r7, #4]
 8006f8e:	6852      	ldr	r2, [r2, #4]
 8006f90:	0611      	lsls	r1, r2, #24
 8006f92:	687a      	ldr	r2, [r7, #4]
 8006f94:	68d2      	ldr	r2, [r2, #12]
 8006f96:	4311      	orrs	r1, r2
 8006f98:	687a      	ldr	r2, [r7, #4]
 8006f9a:	69d2      	ldr	r2, [r2, #28]
 8006f9c:	4311      	orrs	r1, r2
 8006f9e:	687a      	ldr	r2, [r7, #4]
 8006fa0:	6a12      	ldr	r2, [r2, #32]
 8006fa2:	4311      	orrs	r1, r2
 8006fa4:	687a      	ldr	r2, [r7, #4]
 8006fa6:	6812      	ldr	r2, [r2, #0]
 8006fa8:	430b      	orrs	r3, r1
 8006faa:	6013      	str	r3, [r2, #0]
               ((hqspi->Init.ClockPrescaler << QUADSPI_CR_PRESCALER_Pos) |
                hqspi->Init.SampleShifting  | hqspi->Init.FlashID | hqspi->Init.DualFlash));

    /* Configure QSPI Flash Size, CS High Time and Clock Mode */
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	681b      	ldr	r3, [r3, #0]
 8006fb0:	685a      	ldr	r2, [r3, #4]
 8006fb2:	4b14      	ldr	r3, [pc, #80]	@ (8007004 <HAL_QSPI_Init+0xf4>)
 8006fb4:	4013      	ands	r3, r2
 8006fb6:	687a      	ldr	r2, [r7, #4]
 8006fb8:	6912      	ldr	r2, [r2, #16]
 8006fba:	0411      	lsls	r1, r2, #16
 8006fbc:	687a      	ldr	r2, [r7, #4]
 8006fbe:	6952      	ldr	r2, [r2, #20]
 8006fc0:	4311      	orrs	r1, r2
 8006fc2:	687a      	ldr	r2, [r7, #4]
 8006fc4:	6992      	ldr	r2, [r2, #24]
 8006fc6:	4311      	orrs	r1, r2
 8006fc8:	687a      	ldr	r2, [r7, #4]
 8006fca:	6812      	ldr	r2, [r2, #0]
 8006fcc:	430b      	orrs	r3, r1
 8006fce:	6053      	str	r3, [r2, #4]
               ((hqspi->Init.FlashSize << QUADSPI_DCR_FSIZE_Pos) |
                hqspi->Init.ChipSelectHighTime | hqspi->Init.ClockMode));

    /* Enable the QSPI peripheral */
    __HAL_QSPI_ENABLE(hqspi);
 8006fd0:	687b      	ldr	r3, [r7, #4]
 8006fd2:	681b      	ldr	r3, [r3, #0]
 8006fd4:	681a      	ldr	r2, [r3, #0]
 8006fd6:	687b      	ldr	r3, [r7, #4]
 8006fd8:	681b      	ldr	r3, [r3, #0]
 8006fda:	f042 0201 	orr.w	r2, r2, #1
 8006fde:	601a      	str	r2, [r3, #0]

    /* Set QSPI error code to none */
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	2200      	movs	r2, #0
 8006fe4:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Initialize the QSPI state */
    hqspi->State = HAL_QSPI_STATE_READY;
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	2201      	movs	r2, #1
 8006fea:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  }

  /* Release Lock */
  __HAL_UNLOCK(hqspi);
 8006fee:	687b      	ldr	r3, [r7, #4]
 8006ff0:	2200      	movs	r2, #0
 8006ff2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

  /* Return function status */
  return status;
 8006ff6:	7afb      	ldrb	r3, [r7, #11]
}
 8006ff8:	4618      	mov	r0, r3
 8006ffa:	3710      	adds	r7, #16
 8006ffc:	46bd      	mov	sp, r7
 8006ffe:	bd80      	pop	{r7, pc}
 8007000:	00ffff2f 	.word	0x00ffff2f
 8007004:	ffe0f8fe 	.word	0xffe0f8fe

08007008 <HAL_QSPI_SetTimeout>:
  * @param  hqspi QSPI handle.
  * @param  Timeout Timeout for the QSPI memory access.
  * @retval None
  */
void HAL_QSPI_SetTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
{
 8007008:	b480      	push	{r7}
 800700a:	b083      	sub	sp, #12
 800700c:	af00      	add	r7, sp, #0
 800700e:	6078      	str	r0, [r7, #4]
 8007010:	6039      	str	r1, [r7, #0]
  hqspi->Timeout = Timeout;
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	683a      	ldr	r2, [r7, #0]
 8007016:	649a      	str	r2, [r3, #72]	@ 0x48
}
 8007018:	bf00      	nop
 800701a:	370c      	adds	r7, #12
 800701c:	46bd      	mov	sp, r7
 800701e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007022:	4770      	bx	lr

08007024 <QSPI_WaitFlagStateUntilTimeout>:
  * @param  Timeout Duration of the timeout
  * @retval HAL status
  */
static HAL_StatusTypeDef QSPI_WaitFlagStateUntilTimeout(QSPI_HandleTypeDef *hqspi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8007024:	b580      	push	{r7, lr}
 8007026:	b084      	sub	sp, #16
 8007028:	af00      	add	r7, sp, #0
 800702a:	60f8      	str	r0, [r7, #12]
 800702c:	60b9      	str	r1, [r7, #8]
 800702e:	603b      	str	r3, [r7, #0]
 8007030:	4613      	mov	r3, r2
 8007032:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8007034:	e01a      	b.n	800706c <QSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8007036:	69bb      	ldr	r3, [r7, #24]
 8007038:	f1b3 3fff 	cmp.w	r3, #4294967295
 800703c:	d016      	beq.n	800706c <QSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800703e:	f7fd fd77 	bl	8004b30 <HAL_GetTick>
 8007042:	4602      	mov	r2, r0
 8007044:	683b      	ldr	r3, [r7, #0]
 8007046:	1ad3      	subs	r3, r2, r3
 8007048:	69ba      	ldr	r2, [r7, #24]
 800704a:	429a      	cmp	r2, r3
 800704c:	d302      	bcc.n	8007054 <QSPI_WaitFlagStateUntilTimeout+0x30>
 800704e:	69bb      	ldr	r3, [r7, #24]
 8007050:	2b00      	cmp	r3, #0
 8007052:	d10b      	bne.n	800706c <QSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8007054:	68fb      	ldr	r3, [r7, #12]
 8007056:	2204      	movs	r2, #4
 8007058:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800705c:	68fb      	ldr	r3, [r7, #12]
 800705e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007060:	f043 0201 	orr.w	r2, r3, #1
 8007064:	68fb      	ldr	r3, [r7, #12]
 8007066:	645a      	str	r2, [r3, #68]	@ 0x44

        return HAL_ERROR;
 8007068:	2301      	movs	r3, #1
 800706a:	e00e      	b.n	800708a <QSPI_WaitFlagStateUntilTimeout+0x66>
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800706c:	68fb      	ldr	r3, [r7, #12]
 800706e:	681b      	ldr	r3, [r3, #0]
 8007070:	689a      	ldr	r2, [r3, #8]
 8007072:	68bb      	ldr	r3, [r7, #8]
 8007074:	4013      	ands	r3, r2
 8007076:	2b00      	cmp	r3, #0
 8007078:	bf14      	ite	ne
 800707a:	2301      	movne	r3, #1
 800707c:	2300      	moveq	r3, #0
 800707e:	b2db      	uxtb	r3, r3
 8007080:	461a      	mov	r2, r3
 8007082:	79fb      	ldrb	r3, [r7, #7]
 8007084:	429a      	cmp	r2, r3
 8007086:	d1d6      	bne.n	8007036 <QSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8007088:	2300      	movs	r3, #0
}
 800708a:	4618      	mov	r0, r3
 800708c:	3710      	adds	r7, #16
 800708e:	46bd      	mov	sp, r7
 8007090:	bd80      	pop	{r7, pc}
	...

08007094 <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007094:	b580      	push	{r7, lr}
 8007096:	b086      	sub	sp, #24
 8007098:	af00      	add	r7, sp, #0
 800709a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;
  FlagStatus pwrclkchanged = RESET;
 800709c:	2300      	movs	r3, #0
 800709e:	75fb      	strb	r3, [r7, #23]

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 80070a0:	687b      	ldr	r3, [r7, #4]
 80070a2:	2b00      	cmp	r3, #0
 80070a4:	d101      	bne.n	80070aa <HAL_RCC_OscConfig+0x16>
  {
    return HAL_ERROR;
 80070a6:	2301      	movs	r3, #1
 80070a8:	e291      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	f003 0301 	and.w	r3, r3, #1
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	f000 8087 	beq.w	80071c6 <HAL_RCC_OscConfig+0x132>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL, It can not be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80070b8:	4b96      	ldr	r3, [pc, #600]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80070ba:	689b      	ldr	r3, [r3, #8]
 80070bc:	f003 030c 	and.w	r3, r3, #12
 80070c0:	2b04      	cmp	r3, #4
 80070c2:	d00c      	beq.n	80070de <HAL_RCC_OscConfig+0x4a>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 80070c4:	4b93      	ldr	r3, [pc, #588]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80070c6:	689b      	ldr	r3, [r3, #8]
 80070c8:	f003 030c 	and.w	r3, r3, #12
 80070cc:	2b08      	cmp	r3, #8
 80070ce:	d112      	bne.n	80070f6 <HAL_RCC_OscConfig+0x62>
 80070d0:	4b90      	ldr	r3, [pc, #576]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80070d2:	685b      	ldr	r3, [r3, #4]
 80070d4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80070d8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 80070dc:	d10b      	bne.n	80070f6 <HAL_RCC_OscConfig+0x62>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80070de:	4b8d      	ldr	r3, [pc, #564]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80070e6:	2b00      	cmp	r3, #0
 80070e8:	d06c      	beq.n	80071c4 <HAL_RCC_OscConfig+0x130>
 80070ea:	687b      	ldr	r3, [r7, #4]
 80070ec:	685b      	ldr	r3, [r3, #4]
 80070ee:	2b00      	cmp	r3, #0
 80070f0:	d168      	bne.n	80071c4 <HAL_RCC_OscConfig+0x130>
      {
        return HAL_ERROR;
 80070f2:	2301      	movs	r3, #1
 80070f4:	e26b      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80070f6:	687b      	ldr	r3, [r7, #4]
 80070f8:	685b      	ldr	r3, [r3, #4]
 80070fa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80070fe:	d106      	bne.n	800710e <HAL_RCC_OscConfig+0x7a>
 8007100:	4b84      	ldr	r3, [pc, #528]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007102:	681b      	ldr	r3, [r3, #0]
 8007104:	4a83      	ldr	r2, [pc, #524]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007106:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800710a:	6013      	str	r3, [r2, #0]
 800710c:	e02e      	b.n	800716c <HAL_RCC_OscConfig+0xd8>
 800710e:	687b      	ldr	r3, [r7, #4]
 8007110:	685b      	ldr	r3, [r3, #4]
 8007112:	2b00      	cmp	r3, #0
 8007114:	d10c      	bne.n	8007130 <HAL_RCC_OscConfig+0x9c>
 8007116:	4b7f      	ldr	r3, [pc, #508]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	4a7e      	ldr	r2, [pc, #504]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800711c:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007120:	6013      	str	r3, [r2, #0]
 8007122:	4b7c      	ldr	r3, [pc, #496]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	4a7b      	ldr	r2, [pc, #492]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007128:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800712c:	6013      	str	r3, [r2, #0]
 800712e:	e01d      	b.n	800716c <HAL_RCC_OscConfig+0xd8>
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	685b      	ldr	r3, [r3, #4]
 8007134:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8007138:	d10c      	bne.n	8007154 <HAL_RCC_OscConfig+0xc0>
 800713a:	4b76      	ldr	r3, [pc, #472]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800713c:	681b      	ldr	r3, [r3, #0]
 800713e:	4a75      	ldr	r2, [pc, #468]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007140:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8007144:	6013      	str	r3, [r2, #0]
 8007146:	4b73      	ldr	r3, [pc, #460]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007148:	681b      	ldr	r3, [r3, #0]
 800714a:	4a72      	ldr	r2, [pc, #456]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800714c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007150:	6013      	str	r3, [r2, #0]
 8007152:	e00b      	b.n	800716c <HAL_RCC_OscConfig+0xd8>
 8007154:	4b6f      	ldr	r3, [pc, #444]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007156:	681b      	ldr	r3, [r3, #0]
 8007158:	4a6e      	ldr	r2, [pc, #440]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800715a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800715e:	6013      	str	r3, [r2, #0]
 8007160:	4b6c      	ldr	r3, [pc, #432]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	4a6b      	ldr	r2, [pc, #428]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007166:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800716a:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	685b      	ldr	r3, [r3, #4]
 8007170:	2b00      	cmp	r3, #0
 8007172:	d013      	beq.n	800719c <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007174:	f7fd fcdc 	bl	8004b30 <HAL_GetTick>
 8007178:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800717a:	e008      	b.n	800718e <HAL_RCC_OscConfig+0xfa>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 800717c:	f7fd fcd8 	bl	8004b30 <HAL_GetTick>
 8007180:	4602      	mov	r2, r0
 8007182:	693b      	ldr	r3, [r7, #16]
 8007184:	1ad3      	subs	r3, r2, r3
 8007186:	2b64      	cmp	r3, #100	@ 0x64
 8007188:	d901      	bls.n	800718e <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800718a:	2303      	movs	r3, #3
 800718c:	e21f      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800718e:	4b61      	ldr	r3, [pc, #388]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007190:	681b      	ldr	r3, [r3, #0]
 8007192:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007196:	2b00      	cmp	r3, #0
 8007198:	d0f0      	beq.n	800717c <HAL_RCC_OscConfig+0xe8>
 800719a:	e014      	b.n	80071c6 <HAL_RCC_OscConfig+0x132>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800719c:	f7fd fcc8 	bl	8004b30 <HAL_GetTick>
 80071a0:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80071a2:	e008      	b.n	80071b6 <HAL_RCC_OscConfig+0x122>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80071a4:	f7fd fcc4 	bl	8004b30 <HAL_GetTick>
 80071a8:	4602      	mov	r2, r0
 80071aa:	693b      	ldr	r3, [r7, #16]
 80071ac:	1ad3      	subs	r3, r2, r3
 80071ae:	2b64      	cmp	r3, #100	@ 0x64
 80071b0:	d901      	bls.n	80071b6 <HAL_RCC_OscConfig+0x122>
          {
            return HAL_TIMEOUT;
 80071b2:	2303      	movs	r3, #3
 80071b4:	e20b      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80071b6:	4b57      	ldr	r3, [pc, #348]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80071b8:	681b      	ldr	r3, [r3, #0]
 80071ba:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80071be:	2b00      	cmp	r3, #0
 80071c0:	d1f0      	bne.n	80071a4 <HAL_RCC_OscConfig+0x110>
 80071c2:	e000      	b.n	80071c6 <HAL_RCC_OscConfig+0x132>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80071c4:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80071c6:	687b      	ldr	r3, [r7, #4]
 80071c8:	681b      	ldr	r3, [r3, #0]
 80071ca:	f003 0302 	and.w	r3, r3, #2
 80071ce:	2b00      	cmp	r3, #0
 80071d0:	d069      	beq.n	80072a6 <HAL_RCC_OscConfig+0x212>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80071d2:	4b50      	ldr	r3, [pc, #320]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80071d4:	689b      	ldr	r3, [r3, #8]
 80071d6:	f003 030c 	and.w	r3, r3, #12
 80071da:	2b00      	cmp	r3, #0
 80071dc:	d00b      	beq.n	80071f6 <HAL_RCC_OscConfig+0x162>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80071de:	4b4d      	ldr	r3, [pc, #308]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80071e0:	689b      	ldr	r3, [r3, #8]
 80071e2:	f003 030c 	and.w	r3, r3, #12
 80071e6:	2b08      	cmp	r3, #8
 80071e8:	d11c      	bne.n	8007224 <HAL_RCC_OscConfig+0x190>
 80071ea:	4b4a      	ldr	r3, [pc, #296]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80071ec:	685b      	ldr	r3, [r3, #4]
 80071ee:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80071f2:	2b00      	cmp	r3, #0
 80071f4:	d116      	bne.n	8007224 <HAL_RCC_OscConfig+0x190>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80071f6:	4b47      	ldr	r3, [pc, #284]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80071f8:	681b      	ldr	r3, [r3, #0]
 80071fa:	f003 0302 	and.w	r3, r3, #2
 80071fe:	2b00      	cmp	r3, #0
 8007200:	d005      	beq.n	800720e <HAL_RCC_OscConfig+0x17a>
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	68db      	ldr	r3, [r3, #12]
 8007206:	2b01      	cmp	r3, #1
 8007208:	d001      	beq.n	800720e <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 800720a:	2301      	movs	r3, #1
 800720c:	e1df      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800720e:	4b41      	ldr	r3, [pc, #260]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007210:	681b      	ldr	r3, [r3, #0]
 8007212:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8007216:	687b      	ldr	r3, [r7, #4]
 8007218:	691b      	ldr	r3, [r3, #16]
 800721a:	00db      	lsls	r3, r3, #3
 800721c:	493d      	ldr	r1, [pc, #244]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800721e:	4313      	orrs	r3, r2
 8007220:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007222:	e040      	b.n	80072a6 <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8007224:	687b      	ldr	r3, [r7, #4]
 8007226:	68db      	ldr	r3, [r3, #12]
 8007228:	2b00      	cmp	r3, #0
 800722a:	d023      	beq.n	8007274 <HAL_RCC_OscConfig+0x1e0>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 800722c:	4b39      	ldr	r3, [pc, #228]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800722e:	681b      	ldr	r3, [r3, #0]
 8007230:	4a38      	ldr	r2, [pc, #224]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007232:	f043 0301 	orr.w	r3, r3, #1
 8007236:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007238:	f7fd fc7a 	bl	8004b30 <HAL_GetTick>
 800723c:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800723e:	e008      	b.n	8007252 <HAL_RCC_OscConfig+0x1be>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007240:	f7fd fc76 	bl	8004b30 <HAL_GetTick>
 8007244:	4602      	mov	r2, r0
 8007246:	693b      	ldr	r3, [r7, #16]
 8007248:	1ad3      	subs	r3, r2, r3
 800724a:	2b02      	cmp	r3, #2
 800724c:	d901      	bls.n	8007252 <HAL_RCC_OscConfig+0x1be>
          {
            return HAL_TIMEOUT;
 800724e:	2303      	movs	r3, #3
 8007250:	e1bd      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007252:	4b30      	ldr	r3, [pc, #192]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007254:	681b      	ldr	r3, [r3, #0]
 8007256:	f003 0302 	and.w	r3, r3, #2
 800725a:	2b00      	cmp	r3, #0
 800725c:	d0f0      	beq.n	8007240 <HAL_RCC_OscConfig+0x1ac>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800725e:	4b2d      	ldr	r3, [pc, #180]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007260:	681b      	ldr	r3, [r3, #0]
 8007262:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8007266:	687b      	ldr	r3, [r7, #4]
 8007268:	691b      	ldr	r3, [r3, #16]
 800726a:	00db      	lsls	r3, r3, #3
 800726c:	4929      	ldr	r1, [pc, #164]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800726e:	4313      	orrs	r3, r2
 8007270:	600b      	str	r3, [r1, #0]
 8007272:	e018      	b.n	80072a6 <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8007274:	4b27      	ldr	r3, [pc, #156]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	4a26      	ldr	r2, [pc, #152]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800727a:	f023 0301 	bic.w	r3, r3, #1
 800727e:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007280:	f7fd fc56 	bl	8004b30 <HAL_GetTick>
 8007284:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007286:	e008      	b.n	800729a <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8007288:	f7fd fc52 	bl	8004b30 <HAL_GetTick>
 800728c:	4602      	mov	r2, r0
 800728e:	693b      	ldr	r3, [r7, #16]
 8007290:	1ad3      	subs	r3, r2, r3
 8007292:	2b02      	cmp	r3, #2
 8007294:	d901      	bls.n	800729a <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8007296:	2303      	movs	r3, #3
 8007298:	e199      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800729a:	4b1e      	ldr	r3, [pc, #120]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 800729c:	681b      	ldr	r3, [r3, #0]
 800729e:	f003 0302 	and.w	r3, r3, #2
 80072a2:	2b00      	cmp	r3, #0
 80072a4:	d1f0      	bne.n	8007288 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80072a6:	687b      	ldr	r3, [r7, #4]
 80072a8:	681b      	ldr	r3, [r3, #0]
 80072aa:	f003 0308 	and.w	r3, r3, #8
 80072ae:	2b00      	cmp	r3, #0
 80072b0:	d038      	beq.n	8007324 <HAL_RCC_OscConfig+0x290>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 80072b2:	687b      	ldr	r3, [r7, #4]
 80072b4:	695b      	ldr	r3, [r3, #20]
 80072b6:	2b00      	cmp	r3, #0
 80072b8:	d019      	beq.n	80072ee <HAL_RCC_OscConfig+0x25a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 80072ba:	4b16      	ldr	r3, [pc, #88]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80072bc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80072be:	4a15      	ldr	r2, [pc, #84]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80072c0:	f043 0301 	orr.w	r3, r3, #1
 80072c4:	6753      	str	r3, [r2, #116]	@ 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80072c6:	f7fd fc33 	bl	8004b30 <HAL_GetTick>
 80072ca:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80072cc:	e008      	b.n	80072e0 <HAL_RCC_OscConfig+0x24c>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80072ce:	f7fd fc2f 	bl	8004b30 <HAL_GetTick>
 80072d2:	4602      	mov	r2, r0
 80072d4:	693b      	ldr	r3, [r7, #16]
 80072d6:	1ad3      	subs	r3, r2, r3
 80072d8:	2b02      	cmp	r3, #2
 80072da:	d901      	bls.n	80072e0 <HAL_RCC_OscConfig+0x24c>
        {
          return HAL_TIMEOUT;
 80072dc:	2303      	movs	r3, #3
 80072de:	e176      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80072e0:	4b0c      	ldr	r3, [pc, #48]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80072e2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80072e4:	f003 0302 	and.w	r3, r3, #2
 80072e8:	2b00      	cmp	r3, #0
 80072ea:	d0f0      	beq.n	80072ce <HAL_RCC_OscConfig+0x23a>
 80072ec:	e01a      	b.n	8007324 <HAL_RCC_OscConfig+0x290>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80072ee:	4b09      	ldr	r3, [pc, #36]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80072f0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80072f2:	4a08      	ldr	r2, [pc, #32]	@ (8007314 <HAL_RCC_OscConfig+0x280>)
 80072f4:	f023 0301 	bic.w	r3, r3, #1
 80072f8:	6753      	str	r3, [r2, #116]	@ 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 80072fa:	f7fd fc19 	bl	8004b30 <HAL_GetTick>
 80072fe:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007300:	e00a      	b.n	8007318 <HAL_RCC_OscConfig+0x284>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8007302:	f7fd fc15 	bl	8004b30 <HAL_GetTick>
 8007306:	4602      	mov	r2, r0
 8007308:	693b      	ldr	r3, [r7, #16]
 800730a:	1ad3      	subs	r3, r2, r3
 800730c:	2b02      	cmp	r3, #2
 800730e:	d903      	bls.n	8007318 <HAL_RCC_OscConfig+0x284>
        {
          return HAL_TIMEOUT;
 8007310:	2303      	movs	r3, #3
 8007312:	e15c      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
 8007314:	40023800 	.word	0x40023800
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007318:	4b91      	ldr	r3, [pc, #580]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 800731a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800731c:	f003 0302 	and.w	r3, r3, #2
 8007320:	2b00      	cmp	r3, #0
 8007322:	d1ee      	bne.n	8007302 <HAL_RCC_OscConfig+0x26e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007324:	687b      	ldr	r3, [r7, #4]
 8007326:	681b      	ldr	r3, [r3, #0]
 8007328:	f003 0304 	and.w	r3, r3, #4
 800732c:	2b00      	cmp	r3, #0
 800732e:	f000 80a4 	beq.w	800747a <HAL_RCC_OscConfig+0x3e6>
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007332:	4b8b      	ldr	r3, [pc, #556]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007334:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007336:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800733a:	2b00      	cmp	r3, #0
 800733c:	d10d      	bne.n	800735a <HAL_RCC_OscConfig+0x2c6>
    {
      /* Enable Power Clock*/
      __HAL_RCC_PWR_CLK_ENABLE();
 800733e:	4b88      	ldr	r3, [pc, #544]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007340:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007342:	4a87      	ldr	r2, [pc, #540]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007344:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007348:	6413      	str	r3, [r2, #64]	@ 0x40
 800734a:	4b85      	ldr	r3, [pc, #532]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 800734c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800734e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007352:	60bb      	str	r3, [r7, #8]
 8007354:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8007356:	2301      	movs	r3, #1
 8007358:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800735a:	4b82      	ldr	r3, [pc, #520]	@ (8007564 <HAL_RCC_OscConfig+0x4d0>)
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007362:	2b00      	cmp	r3, #0
 8007364:	d118      	bne.n	8007398 <HAL_RCC_OscConfig+0x304>
    {
      /* Enable write access to Backup domain */
      PWR->CR1 |= PWR_CR1_DBP;
 8007366:	4b7f      	ldr	r3, [pc, #508]	@ (8007564 <HAL_RCC_OscConfig+0x4d0>)
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	4a7e      	ldr	r2, [pc, #504]	@ (8007564 <HAL_RCC_OscConfig+0x4d0>)
 800736c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007370:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8007372:	f7fd fbdd 	bl	8004b30 <HAL_GetTick>
 8007376:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8007378:	e008      	b.n	800738c <HAL_RCC_OscConfig+0x2f8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800737a:	f7fd fbd9 	bl	8004b30 <HAL_GetTick>
 800737e:	4602      	mov	r2, r0
 8007380:	693b      	ldr	r3, [r7, #16]
 8007382:	1ad3      	subs	r3, r2, r3
 8007384:	2b64      	cmp	r3, #100	@ 0x64
 8007386:	d901      	bls.n	800738c <HAL_RCC_OscConfig+0x2f8>
        {
          return HAL_TIMEOUT;
 8007388:	2303      	movs	r3, #3
 800738a:	e120      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 800738c:	4b75      	ldr	r3, [pc, #468]	@ (8007564 <HAL_RCC_OscConfig+0x4d0>)
 800738e:	681b      	ldr	r3, [r3, #0]
 8007390:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007394:	2b00      	cmp	r3, #0
 8007396:	d0f0      	beq.n	800737a <HAL_RCC_OscConfig+0x2e6>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007398:	687b      	ldr	r3, [r7, #4]
 800739a:	689b      	ldr	r3, [r3, #8]
 800739c:	2b01      	cmp	r3, #1
 800739e:	d106      	bne.n	80073ae <HAL_RCC_OscConfig+0x31a>
 80073a0:	4b6f      	ldr	r3, [pc, #444]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073a2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073a4:	4a6e      	ldr	r2, [pc, #440]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073a6:	f043 0301 	orr.w	r3, r3, #1
 80073aa:	6713      	str	r3, [r2, #112]	@ 0x70
 80073ac:	e02d      	b.n	800740a <HAL_RCC_OscConfig+0x376>
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	689b      	ldr	r3, [r3, #8]
 80073b2:	2b00      	cmp	r3, #0
 80073b4:	d10c      	bne.n	80073d0 <HAL_RCC_OscConfig+0x33c>
 80073b6:	4b6a      	ldr	r3, [pc, #424]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073b8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073ba:	4a69      	ldr	r2, [pc, #420]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073bc:	f023 0301 	bic.w	r3, r3, #1
 80073c0:	6713      	str	r3, [r2, #112]	@ 0x70
 80073c2:	4b67      	ldr	r3, [pc, #412]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073c4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073c6:	4a66      	ldr	r2, [pc, #408]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073c8:	f023 0304 	bic.w	r3, r3, #4
 80073cc:	6713      	str	r3, [r2, #112]	@ 0x70
 80073ce:	e01c      	b.n	800740a <HAL_RCC_OscConfig+0x376>
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	689b      	ldr	r3, [r3, #8]
 80073d4:	2b05      	cmp	r3, #5
 80073d6:	d10c      	bne.n	80073f2 <HAL_RCC_OscConfig+0x35e>
 80073d8:	4b61      	ldr	r3, [pc, #388]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073da:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073dc:	4a60      	ldr	r2, [pc, #384]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073de:	f043 0304 	orr.w	r3, r3, #4
 80073e2:	6713      	str	r3, [r2, #112]	@ 0x70
 80073e4:	4b5e      	ldr	r3, [pc, #376]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073e6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073e8:	4a5d      	ldr	r2, [pc, #372]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073ea:	f043 0301 	orr.w	r3, r3, #1
 80073ee:	6713      	str	r3, [r2, #112]	@ 0x70
 80073f0:	e00b      	b.n	800740a <HAL_RCC_OscConfig+0x376>
 80073f2:	4b5b      	ldr	r3, [pc, #364]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073f4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80073f6:	4a5a      	ldr	r2, [pc, #360]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80073f8:	f023 0301 	bic.w	r3, r3, #1
 80073fc:	6713      	str	r3, [r2, #112]	@ 0x70
 80073fe:	4b58      	ldr	r3, [pc, #352]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007400:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007402:	4a57      	ldr	r2, [pc, #348]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007404:	f023 0304 	bic.w	r3, r3, #4
 8007408:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800740a:	687b      	ldr	r3, [r7, #4]
 800740c:	689b      	ldr	r3, [r3, #8]
 800740e:	2b00      	cmp	r3, #0
 8007410:	d015      	beq.n	800743e <HAL_RCC_OscConfig+0x3aa>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8007412:	f7fd fb8d 	bl	8004b30 <HAL_GetTick>
 8007416:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007418:	e00a      	b.n	8007430 <HAL_RCC_OscConfig+0x39c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800741a:	f7fd fb89 	bl	8004b30 <HAL_GetTick>
 800741e:	4602      	mov	r2, r0
 8007420:	693b      	ldr	r3, [r7, #16]
 8007422:	1ad3      	subs	r3, r2, r3
 8007424:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007428:	4293      	cmp	r3, r2
 800742a:	d901      	bls.n	8007430 <HAL_RCC_OscConfig+0x39c>
        {
          return HAL_TIMEOUT;
 800742c:	2303      	movs	r3, #3
 800742e:	e0ce      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007430:	4b4b      	ldr	r3, [pc, #300]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007432:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007434:	f003 0302 	and.w	r3, r3, #2
 8007438:	2b00      	cmp	r3, #0
 800743a:	d0ee      	beq.n	800741a <HAL_RCC_OscConfig+0x386>
 800743c:	e014      	b.n	8007468 <HAL_RCC_OscConfig+0x3d4>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800743e:	f7fd fb77 	bl	8004b30 <HAL_GetTick>
 8007442:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007444:	e00a      	b.n	800745c <HAL_RCC_OscConfig+0x3c8>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8007446:	f7fd fb73 	bl	8004b30 <HAL_GetTick>
 800744a:	4602      	mov	r2, r0
 800744c:	693b      	ldr	r3, [r7, #16]
 800744e:	1ad3      	subs	r3, r2, r3
 8007450:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007454:	4293      	cmp	r3, r2
 8007456:	d901      	bls.n	800745c <HAL_RCC_OscConfig+0x3c8>
        {
          return HAL_TIMEOUT;
 8007458:	2303      	movs	r3, #3
 800745a:	e0b8      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800745c:	4b40      	ldr	r3, [pc, #256]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 800745e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007460:	f003 0302 	and.w	r3, r3, #2
 8007464:	2b00      	cmp	r3, #0
 8007466:	d1ee      	bne.n	8007446 <HAL_RCC_OscConfig+0x3b2>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8007468:	7dfb      	ldrb	r3, [r7, #23]
 800746a:	2b01      	cmp	r3, #1
 800746c:	d105      	bne.n	800747a <HAL_RCC_OscConfig+0x3e6>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800746e:	4b3c      	ldr	r3, [pc, #240]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007470:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007472:	4a3b      	ldr	r2, [pc, #236]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007474:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007478:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800747a:	687b      	ldr	r3, [r7, #4]
 800747c:	699b      	ldr	r3, [r3, #24]
 800747e:	2b00      	cmp	r3, #0
 8007480:	f000 80a4 	beq.w	80075cc <HAL_RCC_OscConfig+0x538>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8007484:	4b36      	ldr	r3, [pc, #216]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007486:	689b      	ldr	r3, [r3, #8]
 8007488:	f003 030c 	and.w	r3, r3, #12
 800748c:	2b08      	cmp	r3, #8
 800748e:	d06b      	beq.n	8007568 <HAL_RCC_OscConfig+0x4d4>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007490:	687b      	ldr	r3, [r7, #4]
 8007492:	699b      	ldr	r3, [r3, #24]
 8007494:	2b02      	cmp	r3, #2
 8007496:	d149      	bne.n	800752c <HAL_RCC_OscConfig+0x498>
#if defined (RCC_PLLCFGR_PLLR)
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
#endif

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007498:	4b31      	ldr	r3, [pc, #196]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 800749a:	681b      	ldr	r3, [r3, #0]
 800749c:	4a30      	ldr	r2, [pc, #192]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 800749e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80074a2:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80074a4:	f7fd fb44 	bl	8004b30 <HAL_GetTick>
 80074a8:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074aa:	e008      	b.n	80074be <HAL_RCC_OscConfig+0x42a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80074ac:	f7fd fb40 	bl	8004b30 <HAL_GetTick>
 80074b0:	4602      	mov	r2, r0
 80074b2:	693b      	ldr	r3, [r7, #16]
 80074b4:	1ad3      	subs	r3, r2, r3
 80074b6:	2b02      	cmp	r3, #2
 80074b8:	d901      	bls.n	80074be <HAL_RCC_OscConfig+0x42a>
          {
            return HAL_TIMEOUT;
 80074ba:	2303      	movs	r3, #3
 80074bc:	e087      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074be:	4b28      	ldr	r3, [pc, #160]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80074c6:	2b00      	cmp	r3, #0
 80074c8:	d1f0      	bne.n	80074ac <HAL_RCC_OscConfig+0x418>
                             RCC_OscInitStruct->PLL.PLLN,
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);
#else
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80074ca:	687b      	ldr	r3, [r7, #4]
 80074cc:	69da      	ldr	r2, [r3, #28]
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	6a1b      	ldr	r3, [r3, #32]
 80074d2:	431a      	orrs	r2, r3
 80074d4:	687b      	ldr	r3, [r7, #4]
 80074d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80074d8:	019b      	lsls	r3, r3, #6
 80074da:	431a      	orrs	r2, r3
 80074dc:	687b      	ldr	r3, [r7, #4]
 80074de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80074e0:	085b      	lsrs	r3, r3, #1
 80074e2:	3b01      	subs	r3, #1
 80074e4:	041b      	lsls	r3, r3, #16
 80074e6:	431a      	orrs	r2, r3
 80074e8:	687b      	ldr	r3, [r7, #4]
 80074ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80074ec:	061b      	lsls	r3, r3, #24
 80074ee:	4313      	orrs	r3, r2
 80074f0:	4a1b      	ldr	r2, [pc, #108]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80074f2:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 80074f6:	6053      	str	r3, [r2, #4]
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ);
#endif

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80074f8:	4b19      	ldr	r3, [pc, #100]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80074fa:	681b      	ldr	r3, [r3, #0]
 80074fc:	4a18      	ldr	r2, [pc, #96]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 80074fe:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007502:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007504:	f7fd fb14 	bl	8004b30 <HAL_GetTick>
 8007508:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800750a:	e008      	b.n	800751e <HAL_RCC_OscConfig+0x48a>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800750c:	f7fd fb10 	bl	8004b30 <HAL_GetTick>
 8007510:	4602      	mov	r2, r0
 8007512:	693b      	ldr	r3, [r7, #16]
 8007514:	1ad3      	subs	r3, r2, r3
 8007516:	2b02      	cmp	r3, #2
 8007518:	d901      	bls.n	800751e <HAL_RCC_OscConfig+0x48a>
          {
            return HAL_TIMEOUT;
 800751a:	2303      	movs	r3, #3
 800751c:	e057      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800751e:	4b10      	ldr	r3, [pc, #64]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007520:	681b      	ldr	r3, [r3, #0]
 8007522:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007526:	2b00      	cmp	r3, #0
 8007528:	d0f0      	beq.n	800750c <HAL_RCC_OscConfig+0x478>
 800752a:	e04f      	b.n	80075cc <HAL_RCC_OscConfig+0x538>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800752c:	4b0c      	ldr	r3, [pc, #48]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 800752e:	681b      	ldr	r3, [r3, #0]
 8007530:	4a0b      	ldr	r2, [pc, #44]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007532:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007536:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007538:	f7fd fafa 	bl	8004b30 <HAL_GetTick>
 800753c:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800753e:	e008      	b.n	8007552 <HAL_RCC_OscConfig+0x4be>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007540:	f7fd faf6 	bl	8004b30 <HAL_GetTick>
 8007544:	4602      	mov	r2, r0
 8007546:	693b      	ldr	r3, [r7, #16]
 8007548:	1ad3      	subs	r3, r2, r3
 800754a:	2b02      	cmp	r3, #2
 800754c:	d901      	bls.n	8007552 <HAL_RCC_OscConfig+0x4be>
          {
            return HAL_TIMEOUT;
 800754e:	2303      	movs	r3, #3
 8007550:	e03d      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007552:	4b03      	ldr	r3, [pc, #12]	@ (8007560 <HAL_RCC_OscConfig+0x4cc>)
 8007554:	681b      	ldr	r3, [r3, #0]
 8007556:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800755a:	2b00      	cmp	r3, #0
 800755c:	d1f0      	bne.n	8007540 <HAL_RCC_OscConfig+0x4ac>
 800755e:	e035      	b.n	80075cc <HAL_RCC_OscConfig+0x538>
 8007560:	40023800 	.word	0x40023800
 8007564:	40007000 	.word	0x40007000
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      pll_config = RCC->PLLCFGR;
 8007568:	4b1b      	ldr	r3, [pc, #108]	@ (80075d8 <HAL_RCC_OscConfig+0x544>)
 800756a:	685b      	ldr	r3, [r3, #4]
 800756c:	60fb      	str	r3, [r7, #12]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
#else
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800756e:	687b      	ldr	r3, [r7, #4]
 8007570:	699b      	ldr	r3, [r3, #24]
 8007572:	2b01      	cmp	r3, #1
 8007574:	d028      	beq.n	80075c8 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8007576:	68fb      	ldr	r3, [r7, #12]
 8007578:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800757c:	687b      	ldr	r3, [r7, #4]
 800757e:	69db      	ldr	r3, [r3, #28]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007580:	429a      	cmp	r2, r3
 8007582:	d121      	bne.n	80075c8 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007584:	68fb      	ldr	r3, [r7, #12]
 8007586:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800758a:	687b      	ldr	r3, [r7, #4]
 800758c:	6a1b      	ldr	r3, [r3, #32]
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800758e:	429a      	cmp	r2, r3
 8007590:	d11a      	bne.n	80075c8 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8007592:	68fa      	ldr	r2, [r7, #12]
 8007594:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8007598:	4013      	ands	r3, r2
 800759a:	687a      	ldr	r2, [r7, #4]
 800759c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800759e:	0192      	lsls	r2, r2, #6
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80075a0:	4293      	cmp	r3, r2
 80075a2:	d111      	bne.n	80075c8 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80075a4:	68fb      	ldr	r3, [r7, #12]
 80075a6:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80075ae:	085b      	lsrs	r3, r3, #1
 80075b0:	3b01      	subs	r3, #1
 80075b2:	041b      	lsls	r3, r3, #16
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 80075b4:	429a      	cmp	r2, r3
 80075b6:	d107      	bne.n	80075c8 <HAL_RCC_OscConfig+0x534>
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 80075b8:	68fb      	ldr	r3, [r7, #12]
 80075ba:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80075c2:	061b      	lsls	r3, r3, #24
          (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != ((((RCC_OscInitStruct->PLL.PLLP) >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)) ||
 80075c4:	429a      	cmp	r2, r3
 80075c6:	d001      	beq.n	80075cc <HAL_RCC_OscConfig+0x538>
#endif
      {
        return HAL_ERROR;
 80075c8:	2301      	movs	r3, #1
 80075ca:	e000      	b.n	80075ce <HAL_RCC_OscConfig+0x53a>
      }
    }
  }
  return HAL_OK;
 80075cc:	2300      	movs	r3, #0
}
 80075ce:	4618      	mov	r0, r3
 80075d0:	3718      	adds	r7, #24
 80075d2:	46bd      	mov	sp, r7
 80075d4:	bd80      	pop	{r7, pc}
 80075d6:	bf00      	nop
 80075d8:	40023800 	.word	0x40023800

080075dc <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80075dc:	b580      	push	{r7, lr}
 80075de:	b084      	sub	sp, #16
 80075e0:	af00      	add	r7, sp, #0
 80075e2:	6078      	str	r0, [r7, #4]
 80075e4:	6039      	str	r1, [r7, #0]
  uint32_t tickstart = 0;
 80075e6:	2300      	movs	r3, #0
 80075e8:	60fb      	str	r3, [r7, #12]

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 80075ea:	687b      	ldr	r3, [r7, #4]
 80075ec:	2b00      	cmp	r3, #0
 80075ee:	d101      	bne.n	80075f4 <HAL_RCC_ClockConfig+0x18>
  {
    return HAL_ERROR;
 80075f0:	2301      	movs	r3, #1
 80075f2:	e0d0      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
     must be correctly programmed according to the frequency of the CPU clock
     (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 80075f4:	4b6a      	ldr	r3, [pc, #424]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 80075f6:	681b      	ldr	r3, [r3, #0]
 80075f8:	f003 030f 	and.w	r3, r3, #15
 80075fc:	683a      	ldr	r2, [r7, #0]
 80075fe:	429a      	cmp	r2, r3
 8007600:	d910      	bls.n	8007624 <HAL_RCC_ClockConfig+0x48>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007602:	4b67      	ldr	r3, [pc, #412]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 8007604:	681b      	ldr	r3, [r3, #0]
 8007606:	f023 020f 	bic.w	r2, r3, #15
 800760a:	4965      	ldr	r1, [pc, #404]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 800760c:	683b      	ldr	r3, [r7, #0]
 800760e:	4313      	orrs	r3, r2
 8007610:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8007612:	4b63      	ldr	r3, [pc, #396]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	f003 030f 	and.w	r3, r3, #15
 800761a:	683a      	ldr	r2, [r7, #0]
 800761c:	429a      	cmp	r2, r3
 800761e:	d001      	beq.n	8007624 <HAL_RCC_ClockConfig+0x48>
    {
      return HAL_ERROR;
 8007620:	2301      	movs	r3, #1
 8007622:	e0b8      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007624:	687b      	ldr	r3, [r7, #4]
 8007626:	681b      	ldr	r3, [r3, #0]
 8007628:	f003 0302 	and.w	r3, r3, #2
 800762c:	2b00      	cmp	r3, #0
 800762e:	d020      	beq.n	8007672 <HAL_RCC_ClockConfig+0x96>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007630:	687b      	ldr	r3, [r7, #4]
 8007632:	681b      	ldr	r3, [r3, #0]
 8007634:	f003 0304 	and.w	r3, r3, #4
 8007638:	2b00      	cmp	r3, #0
 800763a:	d005      	beq.n	8007648 <HAL_RCC_ClockConfig+0x6c>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800763c:	4b59      	ldr	r3, [pc, #356]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800763e:	689b      	ldr	r3, [r3, #8]
 8007640:	4a58      	ldr	r2, [pc, #352]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 8007642:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8007646:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007648:	687b      	ldr	r3, [r7, #4]
 800764a:	681b      	ldr	r3, [r3, #0]
 800764c:	f003 0308 	and.w	r3, r3, #8
 8007650:	2b00      	cmp	r3, #0
 8007652:	d005      	beq.n	8007660 <HAL_RCC_ClockConfig+0x84>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007654:	4b53      	ldr	r3, [pc, #332]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 8007656:	689b      	ldr	r3, [r3, #8]
 8007658:	4a52      	ldr	r2, [pc, #328]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800765a:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 800765e:	6093      	str	r3, [r2, #8]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007660:	4b50      	ldr	r3, [pc, #320]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 8007662:	689b      	ldr	r3, [r3, #8]
 8007664:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8007668:	687b      	ldr	r3, [r7, #4]
 800766a:	689b      	ldr	r3, [r3, #8]
 800766c:	494d      	ldr	r1, [pc, #308]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800766e:	4313      	orrs	r3, r2
 8007670:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	681b      	ldr	r3, [r3, #0]
 8007676:	f003 0301 	and.w	r3, r3, #1
 800767a:	2b00      	cmp	r3, #0
 800767c:	d040      	beq.n	8007700 <HAL_RCC_ClockConfig+0x124>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800767e:	687b      	ldr	r3, [r7, #4]
 8007680:	685b      	ldr	r3, [r3, #4]
 8007682:	2b01      	cmp	r3, #1
 8007684:	d107      	bne.n	8007696 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007686:	4b47      	ldr	r3, [pc, #284]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800768e:	2b00      	cmp	r3, #0
 8007690:	d115      	bne.n	80076be <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 8007692:	2301      	movs	r3, #1
 8007694:	e07f      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8007696:	687b      	ldr	r3, [r7, #4]
 8007698:	685b      	ldr	r3, [r3, #4]
 800769a:	2b02      	cmp	r3, #2
 800769c:	d107      	bne.n	80076ae <HAL_RCC_ClockConfig+0xd2>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800769e:	4b41      	ldr	r3, [pc, #260]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80076a6:	2b00      	cmp	r3, #0
 80076a8:	d109      	bne.n	80076be <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80076aa:	2301      	movs	r3, #1
 80076ac:	e073      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80076ae:	4b3d      	ldr	r3, [pc, #244]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	f003 0302 	and.w	r3, r3, #2
 80076b6:	2b00      	cmp	r3, #0
 80076b8:	d101      	bne.n	80076be <HAL_RCC_ClockConfig+0xe2>
      {
        return HAL_ERROR;
 80076ba:	2301      	movs	r3, #1
 80076bc:	e06b      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80076be:	4b39      	ldr	r3, [pc, #228]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 80076c0:	689b      	ldr	r3, [r3, #8]
 80076c2:	f023 0203 	bic.w	r2, r3, #3
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	685b      	ldr	r3, [r3, #4]
 80076ca:	4936      	ldr	r1, [pc, #216]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 80076cc:	4313      	orrs	r3, r2
 80076ce:	608b      	str	r3, [r1, #8]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80076d0:	f7fd fa2e 	bl	8004b30 <HAL_GetTick>
 80076d4:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076d6:	e00a      	b.n	80076ee <HAL_RCC_ClockConfig+0x112>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80076d8:	f7fd fa2a 	bl	8004b30 <HAL_GetTick>
 80076dc:	4602      	mov	r2, r0
 80076de:	68fb      	ldr	r3, [r7, #12]
 80076e0:	1ad3      	subs	r3, r2, r3
 80076e2:	f241 3288 	movw	r2, #5000	@ 0x1388
 80076e6:	4293      	cmp	r3, r2
 80076e8:	d901      	bls.n	80076ee <HAL_RCC_ClockConfig+0x112>
      {
        return HAL_TIMEOUT;
 80076ea:	2303      	movs	r3, #3
 80076ec:	e053      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80076ee:	4b2d      	ldr	r3, [pc, #180]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 80076f0:	689b      	ldr	r3, [r3, #8]
 80076f2:	f003 020c 	and.w	r2, r3, #12
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	685b      	ldr	r3, [r3, #4]
 80076fa:	009b      	lsls	r3, r3, #2
 80076fc:	429a      	cmp	r2, r3
 80076fe:	d1eb      	bne.n	80076d8 <HAL_RCC_ClockConfig+0xfc>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007700:	4b27      	ldr	r3, [pc, #156]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 8007702:	681b      	ldr	r3, [r3, #0]
 8007704:	f003 030f 	and.w	r3, r3, #15
 8007708:	683a      	ldr	r2, [r7, #0]
 800770a:	429a      	cmp	r2, r3
 800770c:	d210      	bcs.n	8007730 <HAL_RCC_ClockConfig+0x154>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800770e:	4b24      	ldr	r3, [pc, #144]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 8007710:	681b      	ldr	r3, [r3, #0]
 8007712:	f023 020f 	bic.w	r2, r3, #15
 8007716:	4922      	ldr	r1, [pc, #136]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 8007718:	683b      	ldr	r3, [r7, #0]
 800771a:	4313      	orrs	r3, r2
 800771c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800771e:	4b20      	ldr	r3, [pc, #128]	@ (80077a0 <HAL_RCC_ClockConfig+0x1c4>)
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	f003 030f 	and.w	r3, r3, #15
 8007726:	683a      	ldr	r2, [r7, #0]
 8007728:	429a      	cmp	r2, r3
 800772a:	d001      	beq.n	8007730 <HAL_RCC_ClockConfig+0x154>
    {
      return HAL_ERROR;
 800772c:	2301      	movs	r3, #1
 800772e:	e032      	b.n	8007796 <HAL_RCC_ClockConfig+0x1ba>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	681b      	ldr	r3, [r3, #0]
 8007734:	f003 0304 	and.w	r3, r3, #4
 8007738:	2b00      	cmp	r3, #0
 800773a:	d008      	beq.n	800774e <HAL_RCC_ClockConfig+0x172>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800773c:	4b19      	ldr	r3, [pc, #100]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800773e:	689b      	ldr	r3, [r3, #8]
 8007740:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8007744:	687b      	ldr	r3, [r7, #4]
 8007746:	68db      	ldr	r3, [r3, #12]
 8007748:	4916      	ldr	r1, [pc, #88]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800774a:	4313      	orrs	r3, r2
 800774c:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800774e:	687b      	ldr	r3, [r7, #4]
 8007750:	681b      	ldr	r3, [r3, #0]
 8007752:	f003 0308 	and.w	r3, r3, #8
 8007756:	2b00      	cmp	r3, #0
 8007758:	d009      	beq.n	800776e <HAL_RCC_ClockConfig+0x192>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800775a:	4b12      	ldr	r3, [pc, #72]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800775c:	689b      	ldr	r3, [r3, #8]
 800775e:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8007762:	687b      	ldr	r3, [r7, #4]
 8007764:	691b      	ldr	r3, [r3, #16]
 8007766:	00db      	lsls	r3, r3, #3
 8007768:	490e      	ldr	r1, [pc, #56]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 800776a:	4313      	orrs	r3, r2
 800776c:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 800776e:	f000 f821 	bl	80077b4 <HAL_RCC_GetSysClockFreq>
 8007772:	4602      	mov	r2, r0
 8007774:	4b0b      	ldr	r3, [pc, #44]	@ (80077a4 <HAL_RCC_ClockConfig+0x1c8>)
 8007776:	689b      	ldr	r3, [r3, #8]
 8007778:	091b      	lsrs	r3, r3, #4
 800777a:	f003 030f 	and.w	r3, r3, #15
 800777e:	490a      	ldr	r1, [pc, #40]	@ (80077a8 <HAL_RCC_ClockConfig+0x1cc>)
 8007780:	5ccb      	ldrb	r3, [r1, r3]
 8007782:	fa22 f303 	lsr.w	r3, r2, r3
 8007786:	4a09      	ldr	r2, [pc, #36]	@ (80077ac <HAL_RCC_ClockConfig+0x1d0>)
 8007788:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 800778a:	4b09      	ldr	r3, [pc, #36]	@ (80077b0 <HAL_RCC_ClockConfig+0x1d4>)
 800778c:	681b      	ldr	r3, [r3, #0]
 800778e:	4618      	mov	r0, r3
 8007790:	f7fd f98a 	bl	8004aa8 <HAL_InitTick>

  return HAL_OK;
 8007794:	2300      	movs	r3, #0
}
 8007796:	4618      	mov	r0, r3
 8007798:	3710      	adds	r7, #16
 800779a:	46bd      	mov	sp, r7
 800779c:	bd80      	pop	{r7, pc}
 800779e:	bf00      	nop
 80077a0:	40023c00 	.word	0x40023c00
 80077a4:	40023800 	.word	0x40023800
 80077a8:	08029644 	.word	0x08029644
 80077ac:	20000004 	.word	0x20000004
 80077b0:	20000194 	.word	0x20000194

080077b4 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80077b4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80077b8:	b090      	sub	sp, #64	@ 0x40
 80077ba:	af00      	add	r7, sp, #0
  uint32_t pllm = 0, pllvco = 0, pllp = 0;
 80077bc:	2300      	movs	r3, #0
 80077be:	637b      	str	r3, [r7, #52]	@ 0x34
 80077c0:	2300      	movs	r3, #0
 80077c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80077c4:	2300      	movs	r3, #0
 80077c6:	633b      	str	r3, [r7, #48]	@ 0x30
  uint32_t sysclockfreq = 0;
 80077c8:	2300      	movs	r3, #0
 80077ca:	63bb      	str	r3, [r7, #56]	@ 0x38

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80077cc:	4b59      	ldr	r3, [pc, #356]	@ (8007934 <HAL_RCC_GetSysClockFreq+0x180>)
 80077ce:	689b      	ldr	r3, [r3, #8]
 80077d0:	f003 030c 	and.w	r3, r3, #12
 80077d4:	2b08      	cmp	r3, #8
 80077d6:	d00d      	beq.n	80077f4 <HAL_RCC_GetSysClockFreq+0x40>
 80077d8:	2b08      	cmp	r3, #8
 80077da:	f200 80a1 	bhi.w	8007920 <HAL_RCC_GetSysClockFreq+0x16c>
 80077de:	2b00      	cmp	r3, #0
 80077e0:	d002      	beq.n	80077e8 <HAL_RCC_GetSysClockFreq+0x34>
 80077e2:	2b04      	cmp	r3, #4
 80077e4:	d003      	beq.n	80077ee <HAL_RCC_GetSysClockFreq+0x3a>
 80077e6:	e09b      	b.n	8007920 <HAL_RCC_GetSysClockFreq+0x16c>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 80077e8:	4b53      	ldr	r3, [pc, #332]	@ (8007938 <HAL_RCC_GetSysClockFreq+0x184>)
 80077ea:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 80077ec:	e09b      	b.n	8007926 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 80077ee:	4b53      	ldr	r3, [pc, #332]	@ (800793c <HAL_RCC_GetSysClockFreq+0x188>)
 80077f0:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 80077f2:	e098      	b.n	8007926 <HAL_RCC_GetSysClockFreq+0x172>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80077f4:	4b4f      	ldr	r3, [pc, #316]	@ (8007934 <HAL_RCC_GetSysClockFreq+0x180>)
 80077f6:	685b      	ldr	r3, [r3, #4]
 80077f8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80077fc:	637b      	str	r3, [r7, #52]	@ 0x34
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLCFGR_PLLSRC_HSI)
 80077fe:	4b4d      	ldr	r3, [pc, #308]	@ (8007934 <HAL_RCC_GetSysClockFreq+0x180>)
 8007800:	685b      	ldr	r3, [r3, #4]
 8007802:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007806:	2b00      	cmp	r3, #0
 8007808:	d028      	beq.n	800785c <HAL_RCC_GetSysClockFreq+0xa8>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800780a:	4b4a      	ldr	r3, [pc, #296]	@ (8007934 <HAL_RCC_GetSysClockFreq+0x180>)
 800780c:	685b      	ldr	r3, [r3, #4]
 800780e:	099b      	lsrs	r3, r3, #6
 8007810:	2200      	movs	r2, #0
 8007812:	623b      	str	r3, [r7, #32]
 8007814:	627a      	str	r2, [r7, #36]	@ 0x24
 8007816:	6a3b      	ldr	r3, [r7, #32]
 8007818:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800781c:	2100      	movs	r1, #0
 800781e:	4b47      	ldr	r3, [pc, #284]	@ (800793c <HAL_RCC_GetSysClockFreq+0x188>)
 8007820:	fb03 f201 	mul.w	r2, r3, r1
 8007824:	2300      	movs	r3, #0
 8007826:	fb00 f303 	mul.w	r3, r0, r3
 800782a:	4413      	add	r3, r2
 800782c:	4a43      	ldr	r2, [pc, #268]	@ (800793c <HAL_RCC_GetSysClockFreq+0x188>)
 800782e:	fba0 1202 	umull	r1, r2, r0, r2
 8007832:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007834:	460a      	mov	r2, r1
 8007836:	62ba      	str	r2, [r7, #40]	@ 0x28
 8007838:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800783a:	4413      	add	r3, r2
 800783c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800783e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007840:	2200      	movs	r2, #0
 8007842:	61bb      	str	r3, [r7, #24]
 8007844:	61fa      	str	r2, [r7, #28]
 8007846:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800784a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	@ 0x28
 800784e:	f7f8 fd2f 	bl	80002b0 <__aeabi_uldivmod>
 8007852:	4602      	mov	r2, r0
 8007854:	460b      	mov	r3, r1
 8007856:	4613      	mov	r3, r2
 8007858:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800785a:	e053      	b.n	8007904 <HAL_RCC_GetSysClockFreq+0x150>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800785c:	4b35      	ldr	r3, [pc, #212]	@ (8007934 <HAL_RCC_GetSysClockFreq+0x180>)
 800785e:	685b      	ldr	r3, [r3, #4]
 8007860:	099b      	lsrs	r3, r3, #6
 8007862:	2200      	movs	r2, #0
 8007864:	613b      	str	r3, [r7, #16]
 8007866:	617a      	str	r2, [r7, #20]
 8007868:	693b      	ldr	r3, [r7, #16]
 800786a:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 800786e:	f04f 0b00 	mov.w	fp, #0
 8007872:	4652      	mov	r2, sl
 8007874:	465b      	mov	r3, fp
 8007876:	f04f 0000 	mov.w	r0, #0
 800787a:	f04f 0100 	mov.w	r1, #0
 800787e:	0159      	lsls	r1, r3, #5
 8007880:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007884:	0150      	lsls	r0, r2, #5
 8007886:	4602      	mov	r2, r0
 8007888:	460b      	mov	r3, r1
 800788a:	ebb2 080a 	subs.w	r8, r2, sl
 800788e:	eb63 090b 	sbc.w	r9, r3, fp
 8007892:	f04f 0200 	mov.w	r2, #0
 8007896:	f04f 0300 	mov.w	r3, #0
 800789a:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800789e:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 80078a2:	ea4f 1288 	mov.w	r2, r8, lsl #6
 80078a6:	ebb2 0408 	subs.w	r4, r2, r8
 80078aa:	eb63 0509 	sbc.w	r5, r3, r9
 80078ae:	f04f 0200 	mov.w	r2, #0
 80078b2:	f04f 0300 	mov.w	r3, #0
 80078b6:	00eb      	lsls	r3, r5, #3
 80078b8:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80078bc:	00e2      	lsls	r2, r4, #3
 80078be:	4614      	mov	r4, r2
 80078c0:	461d      	mov	r5, r3
 80078c2:	eb14 030a 	adds.w	r3, r4, sl
 80078c6:	603b      	str	r3, [r7, #0]
 80078c8:	eb45 030b 	adc.w	r3, r5, fp
 80078cc:	607b      	str	r3, [r7, #4]
 80078ce:	f04f 0200 	mov.w	r2, #0
 80078d2:	f04f 0300 	mov.w	r3, #0
 80078d6:	e9d7 4500 	ldrd	r4, r5, [r7]
 80078da:	4629      	mov	r1, r5
 80078dc:	028b      	lsls	r3, r1, #10
 80078de:	4621      	mov	r1, r4
 80078e0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80078e4:	4621      	mov	r1, r4
 80078e6:	028a      	lsls	r2, r1, #10
 80078e8:	4610      	mov	r0, r2
 80078ea:	4619      	mov	r1, r3
 80078ec:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80078ee:	2200      	movs	r2, #0
 80078f0:	60bb      	str	r3, [r7, #8]
 80078f2:	60fa      	str	r2, [r7, #12]
 80078f4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80078f8:	f7f8 fcda 	bl	80002b0 <__aeabi_uldivmod>
 80078fc:	4602      	mov	r2, r0
 80078fe:	460b      	mov	r3, r1
 8007900:	4613      	mov	r3, r2
 8007902:	63fb      	str	r3, [r7, #60]	@ 0x3c
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1) * 2);
 8007904:	4b0b      	ldr	r3, [pc, #44]	@ (8007934 <HAL_RCC_GetSysClockFreq+0x180>)
 8007906:	685b      	ldr	r3, [r3, #4]
 8007908:	0c1b      	lsrs	r3, r3, #16
 800790a:	f003 0303 	and.w	r3, r3, #3
 800790e:	3301      	adds	r3, #1
 8007910:	005b      	lsls	r3, r3, #1
 8007912:	633b      	str	r3, [r7, #48]	@ 0x30

      sysclockfreq = pllvco / pllp;
 8007914:	6bfa      	ldr	r2, [r7, #60]	@ 0x3c
 8007916:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007918:	fbb2 f3f3 	udiv	r3, r2, r3
 800791c:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 800791e:	e002      	b.n	8007926 <HAL_RCC_GetSysClockFreq+0x172>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8007920:	4b05      	ldr	r3, [pc, #20]	@ (8007938 <HAL_RCC_GetSysClockFreq+0x184>)
 8007922:	63bb      	str	r3, [r7, #56]	@ 0x38
      break;
 8007924:	bf00      	nop
    }
  }
  return sysclockfreq;
 8007926:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
}
 8007928:	4618      	mov	r0, r3
 800792a:	3740      	adds	r7, #64	@ 0x40
 800792c:	46bd      	mov	sp, r7
 800792e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8007932:	bf00      	nop
 8007934:	40023800 	.word	0x40023800
 8007938:	00f42400 	.word	0x00f42400
 800793c:	017d7840 	.word	0x017d7840

08007940 <HAL_RCC_GetHCLKFreq>:
  *         right HCLK value. Otherwise, any configuration based on this function will be incorrect.
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 8007940:	b480      	push	{r7}
 8007942:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8007944:	4b03      	ldr	r3, [pc, #12]	@ (8007954 <HAL_RCC_GetHCLKFreq+0x14>)
 8007946:	681b      	ldr	r3, [r3, #0]
}
 8007948:	4618      	mov	r0, r3
 800794a:	46bd      	mov	sp, r7
 800794c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007950:	4770      	bx	lr
 8007952:	bf00      	nop
 8007954:	20000004 	.word	0x20000004

08007958 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007958:	b580      	push	{r7, lr}
 800795a:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 800795c:	f7ff fff0 	bl	8007940 <HAL_RCC_GetHCLKFreq>
 8007960:	4602      	mov	r2, r0
 8007962:	4b05      	ldr	r3, [pc, #20]	@ (8007978 <HAL_RCC_GetPCLK1Freq+0x20>)
 8007964:	689b      	ldr	r3, [r3, #8]
 8007966:	0a9b      	lsrs	r3, r3, #10
 8007968:	f003 0307 	and.w	r3, r3, #7
 800796c:	4903      	ldr	r1, [pc, #12]	@ (800797c <HAL_RCC_GetPCLK1Freq+0x24>)
 800796e:	5ccb      	ldrb	r3, [r1, r3]
 8007970:	fa22 f303 	lsr.w	r3, r2, r3
}
 8007974:	4618      	mov	r0, r3
 8007976:	bd80      	pop	{r7, pc}
 8007978:	40023800 	.word	0x40023800
 800797c:	08029654 	.word	0x08029654

08007980 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8007980:	b580      	push	{r7, lr}
 8007982:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8007984:	f7ff ffdc 	bl	8007940 <HAL_RCC_GetHCLKFreq>
 8007988:	4602      	mov	r2, r0
 800798a:	4b05      	ldr	r3, [pc, #20]	@ (80079a0 <HAL_RCC_GetPCLK2Freq+0x20>)
 800798c:	689b      	ldr	r3, [r3, #8]
 800798e:	0b5b      	lsrs	r3, r3, #13
 8007990:	f003 0307 	and.w	r3, r3, #7
 8007994:	4903      	ldr	r1, [pc, #12]	@ (80079a4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007996:	5ccb      	ldrb	r3, [r1, r3]
 8007998:	fa22 f303 	lsr.w	r3, r2, r3
}
 800799c:	4618      	mov	r0, r3
 800799e:	bd80      	pop	{r7, pc}
 80079a0:	40023800 	.word	0x40023800
 80079a4:	08029654 	.word	0x08029654

080079a8 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80079a8:	b580      	push	{r7, lr}
 80079aa:	b088      	sub	sp, #32
 80079ac:	af00      	add	r7, sp, #0
 80079ae:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0;
 80079b0:	2300      	movs	r3, #0
 80079b2:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg0 = 0;
 80079b4:	2300      	movs	r3, #0
 80079b6:	613b      	str	r3, [r7, #16]
  uint32_t tmpreg1 = 0;
 80079b8:	2300      	movs	r3, #0
 80079ba:	60fb      	str	r3, [r7, #12]
  uint32_t plli2sused = 0;
 80079bc:	2300      	movs	r3, #0
 80079be:	61fb      	str	r3, [r7, #28]
  uint32_t pllsaiused = 0;
 80079c0:	2300      	movs	r3, #0
 80079c2:	61bb      	str	r3, [r7, #24]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*----------------------------------- I2S configuration ----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	681b      	ldr	r3, [r3, #0]
 80079c8:	f003 0301 	and.w	r3, r3, #1
 80079cc:	2b00      	cmp	r3, #0
 80079ce:	d012      	beq.n	80079f6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2SCLKSOURCE(PeriphClkInit->I2sClockSelection));

    /* Configure I2S Clock source */
    __HAL_RCC_I2S_CONFIG(PeriphClkInit->I2sClockSelection);
 80079d0:	4b69      	ldr	r3, [pc, #420]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80079d2:	689b      	ldr	r3, [r3, #8]
 80079d4:	4a68      	ldr	r2, [pc, #416]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80079d6:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 80079da:	6093      	str	r3, [r2, #8]
 80079dc:	4b66      	ldr	r3, [pc, #408]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80079de:	689a      	ldr	r2, [r3, #8]
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80079e4:	4964      	ldr	r1, [pc, #400]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 80079e6:	4313      	orrs	r3, r2
 80079e8:	608b      	str	r3, [r1, #8]

    /* Enable the PLLI2S when it's used as clock source for I2S */
    if(PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)
 80079ea:	687b      	ldr	r3, [r7, #4]
 80079ec:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80079ee:	2b00      	cmp	r3, #0
 80079f0:	d101      	bne.n	80079f6 <HAL_RCCEx_PeriphCLKConfig+0x4e>
    {
      plli2sused = 1;
 80079f2:	2301      	movs	r3, #1
 80079f4:	61fb      	str	r3, [r7, #28]
    }
  }

  /*------------------------------------ SAI1 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == (RCC_PERIPHCLK_SAI1))
 80079f6:	687b      	ldr	r3, [r7, #4]
 80079f8:	681b      	ldr	r3, [r3, #0]
 80079fa:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 80079fe:	2b00      	cmp	r3, #0
 8007a00:	d017      	beq.n	8007a32 <HAL_RCCEx_PeriphCLKConfig+0x8a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI1CLKSOURCE(PeriphClkInit->Sai1ClockSelection));

    /* Configure SAI1 Clock source */
    __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007a02:	4b5d      	ldr	r3, [pc, #372]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a04:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007a08:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007a0c:	687b      	ldr	r3, [r7, #4]
 8007a0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007a10:	4959      	ldr	r1, [pc, #356]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a12:	4313      	orrs	r3, r2
 8007a14:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007a1c:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007a20:	d101      	bne.n	8007a26 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      plli2sused = 1;
 8007a22:	2301      	movs	r3, #1
 8007a24:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)
 8007a26:	687b      	ldr	r3, [r7, #4]
 8007a28:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007a2a:	2b00      	cmp	r3, #0
 8007a2c:	d101      	bne.n	8007a32 <HAL_RCCEx_PeriphCLKConfig+0x8a>
    {
      pllsaiused = 1;
 8007a2e:	2301      	movs	r3, #1
 8007a30:	61bb      	str	r3, [r7, #24]
    }
  }

  /*------------------------------------ SAI2 configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == (RCC_PERIPHCLK_SAI2))
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	681b      	ldr	r3, [r3, #0]
 8007a36:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8007a3a:	2b00      	cmp	r3, #0
 8007a3c:	d017      	beq.n	8007a6e <HAL_RCCEx_PeriphCLKConfig+0xc6>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SAI2CLKSOURCE(PeriphClkInit->Sai2ClockSelection));

    /* Configure SAI2 Clock source */
    __HAL_RCC_SAI2_CONFIG(PeriphClkInit->Sai2ClockSelection);
 8007a3e:	4b4e      	ldr	r3, [pc, #312]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a40:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007a44:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8007a48:	687b      	ldr	r3, [r7, #4]
 8007a4a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007a4c:	494a      	ldr	r1, [pc, #296]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a4e:	4313      	orrs	r3, r2
 8007a50:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c

    /* Enable the PLLI2S when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007a58:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007a5c:	d101      	bne.n	8007a62 <HAL_RCCEx_PeriphCLKConfig+0xba>
    {
      plli2sused = 1;
 8007a5e:	2301      	movs	r3, #1
 8007a60:	61fb      	str	r3, [r7, #28]
    }
    /* Enable the PLLSAI when it's used as clock source for SAI */
    if(PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007a66:	2b00      	cmp	r3, #0
 8007a68:	d101      	bne.n	8007a6e <HAL_RCCEx_PeriphCLKConfig+0xc6>
    {
      pllsaiused = 1;
 8007a6a:	2301      	movs	r3, #1
 8007a6c:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- SPDIF-RX Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007a6e:	687b      	ldr	r3, [r7, #4]
 8007a70:	681b      	ldr	r3, [r3, #0]
 8007a72:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8007a76:	2b00      	cmp	r3, #0
 8007a78:	d001      	beq.n	8007a7e <HAL_RCCEx_PeriphCLKConfig+0xd6>
  {
      plli2sused = 1;
 8007a7a:	2301      	movs	r3, #1
 8007a7c:	61fb      	str	r3, [r7, #28]
  }

  /*------------------------------------ RTC configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	681b      	ldr	r3, [r3, #0]
 8007a82:	f003 0320 	and.w	r3, r3, #32
 8007a86:	2b00      	cmp	r3, #0
 8007a88:	f000 808b 	beq.w	8007ba2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007a8c:	4b3a      	ldr	r3, [pc, #232]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007a90:	4a39      	ldr	r2, [pc, #228]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a92:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007a96:	6413      	str	r3, [r2, #64]	@ 0x40
 8007a98:	4b37      	ldr	r3, [pc, #220]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007a9a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007a9c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8007aa0:	60bb      	str	r3, [r7, #8]
 8007aa2:	68bb      	ldr	r3, [r7, #8]

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8007aa4:	4b35      	ldr	r3, [pc, #212]	@ (8007b7c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8007aa6:	681b      	ldr	r3, [r3, #0]
 8007aa8:	4a34      	ldr	r2, [pc, #208]	@ (8007b7c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8007aaa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007aae:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007ab0:	f7fd f83e 	bl	8004b30 <HAL_GetTick>
 8007ab4:	6178      	str	r0, [r7, #20]

    /* Wait for Backup domain Write protection disable */
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8007ab6:	e008      	b.n	8007aca <HAL_RCCEx_PeriphCLKConfig+0x122>
    {
      if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007ab8:	f7fd f83a 	bl	8004b30 <HAL_GetTick>
 8007abc:	4602      	mov	r2, r0
 8007abe:	697b      	ldr	r3, [r7, #20]
 8007ac0:	1ad3      	subs	r3, r2, r3
 8007ac2:	2b64      	cmp	r3, #100	@ 0x64
 8007ac4:	d901      	bls.n	8007aca <HAL_RCCEx_PeriphCLKConfig+0x122>
      {
        return HAL_TIMEOUT;
 8007ac6:	2303      	movs	r3, #3
 8007ac8:	e357      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while((PWR->CR1 & PWR_CR1_DBP) == RESET)
 8007aca:	4b2c      	ldr	r3, [pc, #176]	@ (8007b7c <HAL_RCCEx_PeriphCLKConfig+0x1d4>)
 8007acc:	681b      	ldr	r3, [r3, #0]
 8007ace:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007ad2:	2b00      	cmp	r3, #0
 8007ad4:	d0f0      	beq.n	8007ab8 <HAL_RCCEx_PeriphCLKConfig+0x110>
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified */
    tmpreg0 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007ad6:	4b28      	ldr	r3, [pc, #160]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007ad8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007ada:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007ade:	613b      	str	r3, [r7, #16]

    if((tmpreg0 != 0x00000000U) && (tmpreg0 != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007ae0:	693b      	ldr	r3, [r7, #16]
 8007ae2:	2b00      	cmp	r3, #0
 8007ae4:	d035      	beq.n	8007b52 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007aea:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007aee:	693a      	ldr	r2, [r7, #16]
 8007af0:	429a      	cmp	r2, r3
 8007af2:	d02e      	beq.n	8007b52 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg0 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007af4:	4b20      	ldr	r3, [pc, #128]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007af6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007af8:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007afc:	613b      	str	r3, [r7, #16]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8007afe:	4b1e      	ldr	r3, [pc, #120]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b00:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007b02:	4a1d      	ldr	r2, [pc, #116]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b04:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8007b08:	6713      	str	r3, [r2, #112]	@ 0x70
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007b0a:	4b1b      	ldr	r3, [pc, #108]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b0c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007b0e:	4a1a      	ldr	r2, [pc, #104]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b10:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007b14:	6713      	str	r3, [r2, #112]	@ 0x70

      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg0;
 8007b16:	4a18      	ldr	r2, [pc, #96]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b18:	693b      	ldr	r3, [r7, #16]
 8007b1a:	6713      	str	r3, [r2, #112]	@ 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if (HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007b1c:	4b16      	ldr	r3, [pc, #88]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b1e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007b20:	f003 0301 	and.w	r3, r3, #1
 8007b24:	2b01      	cmp	r3, #1
 8007b26:	d114      	bne.n	8007b52 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007b28:	f7fd f802 	bl	8004b30 <HAL_GetTick>
 8007b2c:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007b2e:	e00a      	b.n	8007b46 <HAL_RCCEx_PeriphCLKConfig+0x19e>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007b30:	f7fc fffe 	bl	8004b30 <HAL_GetTick>
 8007b34:	4602      	mov	r2, r0
 8007b36:	697b      	ldr	r3, [r7, #20]
 8007b38:	1ad3      	subs	r3, r2, r3
 8007b3a:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007b3e:	4293      	cmp	r3, r2
 8007b40:	d901      	bls.n	8007b46 <HAL_RCCEx_PeriphCLKConfig+0x19e>
          {
            return HAL_TIMEOUT;
 8007b42:	2303      	movs	r3, #3
 8007b44:	e319      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007b46:	4b0c      	ldr	r3, [pc, #48]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b48:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007b4a:	f003 0302 	and.w	r3, r3, #2
 8007b4e:	2b00      	cmp	r3, #0
 8007b50:	d0ee      	beq.n	8007b30 <HAL_RCCEx_PeriphCLKConfig+0x188>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007b52:	687b      	ldr	r3, [r7, #4]
 8007b54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b56:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8007b5a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007b5e:	d111      	bne.n	8007b84 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
 8007b60:	4b05      	ldr	r3, [pc, #20]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b62:	689b      	ldr	r3, [r3, #8]
 8007b64:	f423 12f8 	bic.w	r2, r3, #2031616	@ 0x1f0000
 8007b68:	687b      	ldr	r3, [r7, #4]
 8007b6a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8007b6c:	4b04      	ldr	r3, [pc, #16]	@ (8007b80 <HAL_RCCEx_PeriphCLKConfig+0x1d8>)
 8007b6e:	400b      	ands	r3, r1
 8007b70:	4901      	ldr	r1, [pc, #4]	@ (8007b78 <HAL_RCCEx_PeriphCLKConfig+0x1d0>)
 8007b72:	4313      	orrs	r3, r2
 8007b74:	608b      	str	r3, [r1, #8]
 8007b76:	e00b      	b.n	8007b90 <HAL_RCCEx_PeriphCLKConfig+0x1e8>
 8007b78:	40023800 	.word	0x40023800
 8007b7c:	40007000 	.word	0x40007000
 8007b80:	0ffffcff 	.word	0x0ffffcff
 8007b84:	4baa      	ldr	r3, [pc, #680]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007b86:	689b      	ldr	r3, [r3, #8]
 8007b88:	4aa9      	ldr	r2, [pc, #676]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007b8a:	f423 13f8 	bic.w	r3, r3, #2031616	@ 0x1f0000
 8007b8e:	6093      	str	r3, [r2, #8]
 8007b90:	4ba7      	ldr	r3, [pc, #668]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007b92:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8007b94:	687b      	ldr	r3, [r7, #4]
 8007b96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007b98:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007b9c:	49a4      	ldr	r1, [pc, #656]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007b9e:	4313      	orrs	r3, r2
 8007ba0:	670b      	str	r3, [r1, #112]	@ 0x70
  }

  /*------------------------------------ TIM configuration --------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007ba2:	687b      	ldr	r3, [r7, #4]
 8007ba4:	681b      	ldr	r3, [r3, #0]
 8007ba6:	f003 0310 	and.w	r3, r3, #16
 8007baa:	2b00      	cmp	r3, #0
 8007bac:	d010      	beq.n	8007bd0 <HAL_RCCEx_PeriphCLKConfig+0x228>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007bae:	4ba0      	ldr	r3, [pc, #640]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007bb0:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007bb4:	4a9e      	ldr	r2, [pc, #632]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007bb6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007bba:	f8c2 308c 	str.w	r3, [r2, #140]	@ 0x8c
 8007bbe:	4b9c      	ldr	r3, [pc, #624]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007bc0:	f8d3 208c 	ldr.w	r2, [r3, #140]	@ 0x8c
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007bc8:	4999      	ldr	r1, [pc, #612]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007bca:	4313      	orrs	r3, r2
 8007bcc:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
  }

  /*-------------------------------------- I2C1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8007bd0:	687b      	ldr	r3, [r7, #4]
 8007bd2:	681b      	ldr	r3, [r3, #0]
 8007bd4:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8007bd8:	2b00      	cmp	r3, #0
 8007bda:	d00a      	beq.n	8007bf2 <HAL_RCCEx_PeriphCLKConfig+0x24a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 8007bdc:	4b94      	ldr	r3, [pc, #592]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007bde:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007be2:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8007bea:	4991      	ldr	r1, [pc, #580]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007bec:	4313      	orrs	r3, r2
 8007bee:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C2) == RCC_PERIPHCLK_I2C2)
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	681b      	ldr	r3, [r3, #0]
 8007bf6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d00a      	beq.n	8007c14 <HAL_RCCEx_PeriphCLKConfig+0x26c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C2CLKSOURCE(PeriphClkInit->I2c2ClockSelection));

    /* Configure the I2C2 clock source */
    __HAL_RCC_I2C2_CONFIG(PeriphClkInit->I2c2ClockSelection);
 8007bfe:	4b8c      	ldr	r3, [pc, #560]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c00:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007c04:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8007c0c:	4988      	ldr	r1, [pc, #544]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c0e:	4313      	orrs	r3, r2
 8007c10:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	681b      	ldr	r3, [r3, #0]
 8007c18:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8007c1c:	2b00      	cmp	r3, #0
 8007c1e:	d00a      	beq.n	8007c36 <HAL_RCCEx_PeriphCLKConfig+0x28e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 8007c20:	4b83      	ldr	r3, [pc, #524]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c22:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007c26:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8007c2a:	687b      	ldr	r3, [r7, #4]
 8007c2c:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007c2e:	4980      	ldr	r1, [pc, #512]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c30:	4313      	orrs	r3, r2
 8007c32:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- I2C4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 8007c36:	687b      	ldr	r3, [r7, #4]
 8007c38:	681b      	ldr	r3, [r3, #0]
 8007c3a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8007c3e:	2b00      	cmp	r3, #0
 8007c40:	d00a      	beq.n	8007c58 <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    /* Configure the I2C4 clock source */
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 8007c42:	4b7b      	ldr	r3, [pc, #492]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c44:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007c48:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8007c50:	4977      	ldr	r1, [pc, #476]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c52:	4313      	orrs	r3, r2
 8007c54:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	681b      	ldr	r3, [r3, #0]
 8007c5c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007c60:	2b00      	cmp	r3, #0
 8007c62:	d00a      	beq.n	8007c7a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8007c64:	4b72      	ldr	r3, [pc, #456]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c66:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007c6a:	f023 0203 	bic.w	r2, r3, #3
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8007c72:	496f      	ldr	r1, [pc, #444]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c74:	4313      	orrs	r3, r2
 8007c76:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART2 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8007c7a:	687b      	ldr	r3, [r7, #4]
 8007c7c:	681b      	ldr	r3, [r3, #0]
 8007c7e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007c82:	2b00      	cmp	r3, #0
 8007c84:	d00a      	beq.n	8007c9c <HAL_RCCEx_PeriphCLKConfig+0x2f4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8007c86:	4b6a      	ldr	r3, [pc, #424]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c88:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007c8c:	f023 020c 	bic.w	r2, r3, #12
 8007c90:	687b      	ldr	r3, [r7, #4]
 8007c92:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007c94:	4966      	ldr	r1, [pc, #408]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007c96:	4313      	orrs	r3, r2
 8007c98:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART3 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART3) == RCC_PERIPHCLK_USART3)
 8007c9c:	687b      	ldr	r3, [r7, #4]
 8007c9e:	681b      	ldr	r3, [r3, #0]
 8007ca0:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8007ca4:	2b00      	cmp	r3, #0
 8007ca6:	d00a      	beq.n	8007cbe <HAL_RCCEx_PeriphCLKConfig+0x316>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART3CLKSOURCE(PeriphClkInit->Usart3ClockSelection));

    /* Configure the USART3 clock source */
    __HAL_RCC_USART3_CONFIG(PeriphClkInit->Usart3ClockSelection);
 8007ca8:	4b61      	ldr	r3, [pc, #388]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007caa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007cae:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8007cb2:	687b      	ldr	r3, [r7, #4]
 8007cb4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007cb6:	495e      	ldr	r1, [pc, #376]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007cb8:	4313      	orrs	r3, r2
 8007cba:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART4 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART4) == RCC_PERIPHCLK_UART4)
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8007cc6:	2b00      	cmp	r3, #0
 8007cc8:	d00a      	beq.n	8007ce0 <HAL_RCCEx_PeriphCLKConfig+0x338>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART4CLKSOURCE(PeriphClkInit->Uart4ClockSelection));

    /* Configure the UART4 clock source */
    __HAL_RCC_UART4_CONFIG(PeriphClkInit->Uart4ClockSelection);
 8007cca:	4b59      	ldr	r3, [pc, #356]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007ccc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007cd0:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8007cd4:	687b      	ldr	r3, [r7, #4]
 8007cd6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007cd8:	4955      	ldr	r1, [pc, #340]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007cda:	4313      	orrs	r3, r2
 8007cdc:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART5 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART5) == RCC_PERIPHCLK_UART5)
 8007ce0:	687b      	ldr	r3, [r7, #4]
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8007ce8:	2b00      	cmp	r3, #0
 8007cea:	d00a      	beq.n	8007d02 <HAL_RCCEx_PeriphCLKConfig+0x35a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART5CLKSOURCE(PeriphClkInit->Uart5ClockSelection));

    /* Configure the UART5 clock source */
    __HAL_RCC_UART5_CONFIG(PeriphClkInit->Uart5ClockSelection);
 8007cec:	4b50      	ldr	r3, [pc, #320]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007cee:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007cf2:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8007cf6:	687b      	ldr	r3, [r7, #4]
 8007cf8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007cfa:	494d      	ldr	r1, [pc, #308]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007cfc:	4313      	orrs	r3, r2
 8007cfe:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- USART6 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART6) == RCC_PERIPHCLK_USART6)
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8007d0a:	2b00      	cmp	r3, #0
 8007d0c:	d00a      	beq.n	8007d24 <HAL_RCCEx_PeriphCLKConfig+0x37c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART6CLKSOURCE(PeriphClkInit->Usart6ClockSelection));

    /* Configure the USART6 clock source */
    __HAL_RCC_USART6_CONFIG(PeriphClkInit->Usart6ClockSelection);
 8007d0e:	4b48      	ldr	r3, [pc, #288]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d10:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007d14:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8007d18:	687b      	ldr	r3, [r7, #4]
 8007d1a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007d1c:	4944      	ldr	r1, [pc, #272]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d1e:	4313      	orrs	r3, r2
 8007d20:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART7 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART7) == RCC_PERIPHCLK_UART7)
 8007d24:	687b      	ldr	r3, [r7, #4]
 8007d26:	681b      	ldr	r3, [r3, #0]
 8007d28:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8007d2c:	2b00      	cmp	r3, #0
 8007d2e:	d00a      	beq.n	8007d46 <HAL_RCCEx_PeriphCLKConfig+0x39e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART7CLKSOURCE(PeriphClkInit->Uart7ClockSelection));

    /* Configure the UART7 clock source */
    __HAL_RCC_UART7_CONFIG(PeriphClkInit->Uart7ClockSelection);
 8007d30:	4b3f      	ldr	r3, [pc, #252]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d32:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007d36:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007d3e:	493c      	ldr	r1, [pc, #240]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d40:	4313      	orrs	r3, r2
 8007d42:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- UART8 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_UART8) == RCC_PERIPHCLK_UART8)
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	681b      	ldr	r3, [r3, #0]
 8007d4a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8007d4e:	2b00      	cmp	r3, #0
 8007d50:	d00a      	beq.n	8007d68 <HAL_RCCEx_PeriphCLKConfig+0x3c0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_UART8CLKSOURCE(PeriphClkInit->Uart8ClockSelection));

    /* Configure the UART8 clock source */
    __HAL_RCC_UART8_CONFIG(PeriphClkInit->Uart8ClockSelection);
 8007d52:	4b37      	ldr	r3, [pc, #220]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d54:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007d58:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8007d5c:	687b      	ldr	r3, [r7, #4]
 8007d5e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007d60:	4933      	ldr	r1, [pc, #204]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d62:	4313      	orrs	r3, r2
 8007d64:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*--------------------------------------- CEC Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	681b      	ldr	r3, [r3, #0]
 8007d6c:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8007d70:	2b00      	cmp	r3, #0
 8007d72:	d00a      	beq.n	8007d8a <HAL_RCCEx_PeriphCLKConfig+0x3e2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8007d74:	4b2e      	ldr	r3, [pc, #184]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d76:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007d7a:	f023 6280 	bic.w	r2, r3, #67108864	@ 0x4000000
 8007d7e:	687b      	ldr	r3, [r7, #4]
 8007d80:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8007d82:	492b      	ldr	r1, [pc, #172]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d84:	4313      	orrs	r3, r2
 8007d86:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }

  /*-------------------------------------- CK48 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8007d8a:	687b      	ldr	r3, [r7, #4]
 8007d8c:	681b      	ldr	r3, [r3, #0]
 8007d8e:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8007d92:	2b00      	cmp	r3, #0
 8007d94:	d011      	beq.n	8007dba <HAL_RCCEx_PeriphCLKConfig+0x412>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48SOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8007d96:	4b26      	ldr	r3, [pc, #152]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007d98:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007d9c:	f023 6200 	bic.w	r2, r3, #134217728	@ 0x8000000
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007da4:	4922      	ldr	r1, [pc, #136]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007da6:	4313      	orrs	r3, r2
 8007da8:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90

    /* Enable the PLLSAI when it's used as clock source for CK48 */
    if(PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP)
 8007dac:	687b      	ldr	r3, [r7, #4]
 8007dae:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007db0:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8007db4:	d101      	bne.n	8007dba <HAL_RCCEx_PeriphCLKConfig+0x412>
    {
      pllsaiused = 1;
 8007db6:	2301      	movs	r3, #1
 8007db8:	61bb      	str	r3, [r7, #24]
    }
  }

  /*-------------------------------------- LTDC Configuration -----------------------------------*/
#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	f003 0308 	and.w	r3, r3, #8
 8007dc2:	2b00      	cmp	r3, #0
 8007dc4:	d001      	beq.n	8007dca <HAL_RCCEx_PeriphCLKConfig+0x422>
  {
    pllsaiused = 1;
 8007dc6:	2301      	movs	r3, #1
 8007dc8:	61bb      	str	r3, [r7, #24]
  }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx */

  /*-------------------------------------- LPTIM1 Configuration -----------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8007dca:	687b      	ldr	r3, [r7, #4]
 8007dcc:	681b      	ldr	r3, [r3, #0]
 8007dce:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8007dd2:	2b00      	cmp	r3, #0
 8007dd4:	d00a      	beq.n	8007dec <HAL_RCCEx_PeriphCLKConfig+0x444>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPTIM1CLK(PeriphClkInit->Lptim1ClockSelection));

    /* Configure the LTPIM1 clock source */
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 8007dd6:	4b16      	ldr	r3, [pc, #88]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007dd8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007ddc:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8007de4:	4912      	ldr	r1, [pc, #72]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007de6:	4313      	orrs	r3, r2
 8007de8:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
   }

  /*------------------------------------- SDMMC1 Configuration ------------------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC1) == RCC_PERIPHCLK_SDMMC1)
 8007dec:	687b      	ldr	r3, [r7, #4]
 8007dee:	681b      	ldr	r3, [r3, #0]
 8007df0:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8007df4:	2b00      	cmp	r3, #0
 8007df6:	d00b      	beq.n	8007e10 <HAL_RCCEx_PeriphCLKConfig+0x468>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC1CLKSOURCE(PeriphClkInit->Sdmmc1ClockSelection));

    /* Configure the SDMMC1 clock source */
    __HAL_RCC_SDMMC1_CONFIG(PeriphClkInit->Sdmmc1ClockSelection);
 8007df8:	4b0d      	ldr	r3, [pc, #52]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007dfa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8007dfe:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 8007e02:	687b      	ldr	r3, [r7, #4]
 8007e04:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8007e08:	4909      	ldr	r1, [pc, #36]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007e0a:	4313      	orrs	r3, r2
 8007e0c:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
  }
#endif /* STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx */

  /*-------------------------------------- PLLI2S Configuration ---------------------------------*/
  /* PLLI2S is configured when a peripheral will use it as source clock : SAI1, SAI2, I2S or SPDIF-RX */
  if((plli2sused == 1) || ((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 8007e10:	69fb      	ldr	r3, [r7, #28]
 8007e12:	2b01      	cmp	r3, #1
 8007e14:	d006      	beq.n	8007e24 <HAL_RCCEx_PeriphCLKConfig+0x47c>
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	681b      	ldr	r3, [r3, #0]
 8007e1a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007e1e:	2b00      	cmp	r3, #0
 8007e20:	f000 80d9 	beq.w	8007fd6 <HAL_RCCEx_PeriphCLKConfig+0x62e>
  {
    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 8007e24:	4b02      	ldr	r3, [pc, #8]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007e26:	681b      	ldr	r3, [r3, #0]
 8007e28:	4a01      	ldr	r2, [pc, #4]	@ (8007e30 <HAL_RCCEx_PeriphCLKConfig+0x488>)
 8007e2a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007e2e:	e001      	b.n	8007e34 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8007e30:	40023800 	.word	0x40023800
 8007e34:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007e36:	f7fc fe7b 	bl	8004b30 <HAL_GetTick>
 8007e3a:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007e3c:	e008      	b.n	8007e50 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8007e3e:	f7fc fe77 	bl	8004b30 <HAL_GetTick>
 8007e42:	4602      	mov	r2, r0
 8007e44:	697b      	ldr	r3, [r7, #20]
 8007e46:	1ad3      	subs	r3, r2, r3
 8007e48:	2b64      	cmp	r3, #100	@ 0x64
 8007e4a:	d901      	bls.n	8007e50 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8007e4c:	2303      	movs	r3, #3
 8007e4e:	e194      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007e50:	4b6c      	ldr	r3, [pc, #432]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007e52:	681b      	ldr	r3, [r3, #0]
 8007e54:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007e58:	2b00      	cmp	r3, #0
 8007e5a:	d1f0      	bne.n	8007e3e <HAL_RCCEx_PeriphCLKConfig+0x496>

    /* check for common PLLI2S Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /*----------------- In Case of PLLI2S is selected as source clock for I2S -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) && (PeriphClkInit->I2sClockSelection == RCC_I2SCLKSOURCE_PLLI2S)))
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	f003 0301 	and.w	r3, r3, #1
 8007e64:	2b00      	cmp	r3, #0
 8007e66:	d021      	beq.n	8007eac <HAL_RCCEx_PeriphCLKConfig+0x504>
 8007e68:	687b      	ldr	r3, [r7, #4]
 8007e6a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8007e6c:	2b00      	cmp	r3, #0
 8007e6e:	d11d      	bne.n	8007eac <HAL_RCCEx_PeriphCLKConfig+0x504>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Read PLLI2SP and PLLI2SQ value from PLLI2SCFGR register (this value is not needed for I2S configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8007e70:	4b64      	ldr	r3, [pc, #400]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007e72:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007e76:	0c1b      	lsrs	r3, r3, #16
 8007e78:	f003 0303 	and.w	r3, r3, #3
 8007e7c:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8007e7e:	4b61      	ldr	r3, [pc, #388]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007e80:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007e84:	0e1b      	lsrs	r3, r3, #24
 8007e86:	f003 030f 	and.w	r3, r3, #15
 8007e8a:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , tmpreg0, tmpreg1, PeriphClkInit->PLLI2S.PLLI2SR);
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	685b      	ldr	r3, [r3, #4]
 8007e90:	019a      	lsls	r2, r3, #6
 8007e92:	693b      	ldr	r3, [r7, #16]
 8007e94:	041b      	lsls	r3, r3, #16
 8007e96:	431a      	orrs	r2, r3
 8007e98:	68fb      	ldr	r3, [r7, #12]
 8007e9a:	061b      	lsls	r3, r3, #24
 8007e9c:	431a      	orrs	r2, r3
 8007e9e:	687b      	ldr	r3, [r7, #4]
 8007ea0:	689b      	ldr	r3, [r3, #8]
 8007ea2:	071b      	lsls	r3, r3, #28
 8007ea4:	4957      	ldr	r1, [pc, #348]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007ea6:	4313      	orrs	r3, r2
 8007ea8:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	681b      	ldr	r3, [r3, #0]
 8007eb0:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8007eb4:	2b00      	cmp	r3, #0
 8007eb6:	d004      	beq.n	8007ec2 <HAL_RCCEx_PeriphCLKConfig+0x51a>
 8007eb8:	687b      	ldr	r3, [r7, #4]
 8007eba:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007ebc:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007ec0:	d00a      	beq.n	8007ed8 <HAL_RCCEx_PeriphCLKConfig+0x530>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8007ec2:	687b      	ldr	r3, [r7, #4]
 8007ec4:	681b      	ldr	r3, [r3, #0]
 8007ec6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLI2S)) ||
 8007eca:	2b00      	cmp	r3, #0
 8007ecc:	d02e      	beq.n	8007f2c <HAL_RCCEx_PeriphCLKConfig+0x584>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLI2S)))
 8007ece:	687b      	ldr	r3, [r7, #4]
 8007ed0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007ed2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007ed6:	d129      	bne.n	8007f2c <HAL_RCCEx_PeriphCLKConfig+0x584>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      /* Check for PLLI2S/DIVQ parameters */
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SP and PLLI2SR values from PLLI2SCFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SP) >> RCC_PLLI2SCFGR_PLLI2SP_Pos);
 8007ed8:	4b4a      	ldr	r3, [pc, #296]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007eda:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007ede:	0c1b      	lsrs	r3, r3, #16
 8007ee0:	f003 0303 	and.w	r3, r3, #3
 8007ee4:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007ee6:	4b47      	ldr	r3, [pc, #284]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007ee8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007eec:	0f1b      	lsrs	r3, r3, #28
 8007eee:	f003 0307 	and.w	r3, r3, #7
 8007ef2:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, tmpreg0, PeriphClkInit->PLLI2S.PLLI2SQ, tmpreg1);
 8007ef4:	687b      	ldr	r3, [r7, #4]
 8007ef6:	685b      	ldr	r3, [r3, #4]
 8007ef8:	019a      	lsls	r2, r3, #6
 8007efa:	693b      	ldr	r3, [r7, #16]
 8007efc:	041b      	lsls	r3, r3, #16
 8007efe:	431a      	orrs	r2, r3
 8007f00:	687b      	ldr	r3, [r7, #4]
 8007f02:	68db      	ldr	r3, [r3, #12]
 8007f04:	061b      	lsls	r3, r3, #24
 8007f06:	431a      	orrs	r2, r3
 8007f08:	68fb      	ldr	r3, [r7, #12]
 8007f0a:	071b      	lsls	r3, r3, #28
 8007f0c:	493d      	ldr	r1, [pc, #244]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f0e:	4313      	orrs	r3, r2
 8007f10:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84

      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007f14:	4b3b      	ldr	r3, [pc, #236]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f16:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8007f1a:	f023 021f 	bic.w	r2, r3, #31
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007f22:	3b01      	subs	r3, #1
 8007f24:	4937      	ldr	r1, [pc, #220]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f26:	4313      	orrs	r3, r2
 8007f28:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLI2S is selected as source clock for SPDIF-RX -------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	681b      	ldr	r3, [r3, #0]
 8007f30:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8007f34:	2b00      	cmp	r3, #0
 8007f36:	d01d      	beq.n	8007f74 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SP_VALUE(PeriphClkInit->PLLI2S.PLLI2SP));

     /* Read PLLI2SR value from PLLI2SCFGR register (this value is not needed for SPDIF-RX configuration) */
      tmpreg0 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SQ) >> RCC_PLLI2SCFGR_PLLI2SQ_Pos);
 8007f38:	4b32      	ldr	r3, [pc, #200]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f3a:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007f3e:	0e1b      	lsrs	r3, r3, #24
 8007f40:	f003 030f 	and.w	r3, r3, #15
 8007f44:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007f46:	4b2f      	ldr	r3, [pc, #188]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f48:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8007f4c:	0f1b      	lsrs	r3, r3, #28
 8007f4e:	f003 0307 	and.w	r3, r3, #7
 8007f52:	60fb      	str	r3, [r7, #12]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLM) */
      /* SPDIFCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, tmpreg0, tmpreg1);
 8007f54:	687b      	ldr	r3, [r7, #4]
 8007f56:	685b      	ldr	r3, [r3, #4]
 8007f58:	019a      	lsls	r2, r3, #6
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	691b      	ldr	r3, [r3, #16]
 8007f5e:	041b      	lsls	r3, r3, #16
 8007f60:	431a      	orrs	r2, r3
 8007f62:	693b      	ldr	r3, [r7, #16]
 8007f64:	061b      	lsls	r3, r3, #24
 8007f66:	431a      	orrs	r2, r3
 8007f68:	68fb      	ldr	r3, [r7, #12]
 8007f6a:	071b      	lsls	r3, r3, #28
 8007f6c:	4925      	ldr	r1, [pc, #148]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f6e:	4313      	orrs	r3, r2
 8007f70:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007f74:	687b      	ldr	r3, [r7, #4]
 8007f76:	681b      	ldr	r3, [r3, #0]
 8007f78:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007f7c:	2b00      	cmp	r3, #0
 8007f7e:	d011      	beq.n	8007fa4 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));

      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) x (PLLI2SN/PLLI2SM) */
      /* SPDIFRXCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SP */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SP, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	685b      	ldr	r3, [r3, #4]
 8007f84:	019a      	lsls	r2, r3, #6
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	691b      	ldr	r3, [r3, #16]
 8007f8a:	041b      	lsls	r3, r3, #16
 8007f8c:	431a      	orrs	r2, r3
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	68db      	ldr	r3, [r3, #12]
 8007f92:	061b      	lsls	r3, r3, #24
 8007f94:	431a      	orrs	r2, r3
 8007f96:	687b      	ldr	r3, [r7, #4]
 8007f98:	689b      	ldr	r3, [r3, #8]
 8007f9a:	071b      	lsls	r3, r3, #28
 8007f9c:	4919      	ldr	r1, [pc, #100]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007f9e:	4313      	orrs	r3, r2
 8007fa0:	f8c1 3084 	str.w	r3, [r1, #132]	@ 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 8007fa4:	4b17      	ldr	r3, [pc, #92]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	4a16      	ldr	r2, [pc, #88]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007faa:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007fae:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007fb0:	f7fc fdbe 	bl	8004b30 <HAL_GetTick>
 8007fb4:	6178      	str	r0, [r7, #20]

    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007fb6:	e008      	b.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x622>
    {
      if((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 8007fb8:	f7fc fdba 	bl	8004b30 <HAL_GetTick>
 8007fbc:	4602      	mov	r2, r0
 8007fbe:	697b      	ldr	r3, [r7, #20]
 8007fc0:	1ad3      	subs	r3, r2, r3
 8007fc2:	2b64      	cmp	r3, #100	@ 0x64
 8007fc4:	d901      	bls.n	8007fca <HAL_RCCEx_PeriphCLKConfig+0x622>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8007fc6:	2303      	movs	r3, #3
 8007fc8:	e0d7      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007fca:	4b0e      	ldr	r3, [pc, #56]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007fd2:	2b00      	cmp	r3, #0
 8007fd4:	d0f0      	beq.n	8007fb8 <HAL_RCCEx_PeriphCLKConfig+0x610>
    }
  }

  /*-------------------------------------- PLLSAI Configuration ---------------------------------*/
  /* PLLSAI is configured when a peripheral will use it as source clock : SAI1, SAI2, LTDC or CK48 */
  if(pllsaiused == 1)
 8007fd6:	69bb      	ldr	r3, [r7, #24]
 8007fd8:	2b01      	cmp	r3, #1
 8007fda:	f040 80cd 	bne.w	8008178 <HAL_RCCEx_PeriphCLKConfig+0x7d0>
  {
    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007fde:	4b09      	ldr	r3, [pc, #36]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007fe0:	681b      	ldr	r3, [r3, #0]
 8007fe2:	4a08      	ldr	r2, [pc, #32]	@ (8008004 <HAL_RCCEx_PeriphCLKConfig+0x65c>)
 8007fe4:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007fe8:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007fea:	f7fc fda1 	bl	8004b30 <HAL_GetTick>
 8007fee:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007ff0:	e00a      	b.n	8008008 <HAL_RCCEx_PeriphCLKConfig+0x660>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8007ff2:	f7fc fd9d 	bl	8004b30 <HAL_GetTick>
 8007ff6:	4602      	mov	r2, r0
 8007ff8:	697b      	ldr	r3, [r7, #20]
 8007ffa:	1ad3      	subs	r3, r2, r3
 8007ffc:	2b64      	cmp	r3, #100	@ 0x64
 8007ffe:	d903      	bls.n	8008008 <HAL_RCCEx_PeriphCLKConfig+0x660>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8008000:	2303      	movs	r3, #3
 8008002:	e0ba      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
 8008004:	40023800 	.word	0x40023800
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008008:	4b5e      	ldr	r3, [pc, #376]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800800a:	681b      	ldr	r3, [r3, #0]
 800800c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008010:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008014:	d0ed      	beq.n	8007ff2 <HAL_RCCEx_PeriphCLKConfig+0x64a>

    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /*----------------- In Case of PLLSAI is selected as source clock for SAI -------------------*/
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8008016:	687b      	ldr	r3, [r7, #4]
 8008018:	681b      	ldr	r3, [r3, #0]
 800801a:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 800801e:	2b00      	cmp	r3, #0
 8008020:	d003      	beq.n	800802a <HAL_RCCEx_PeriphCLKConfig+0x682>
 8008022:	687b      	ldr	r3, [r7, #4]
 8008024:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008026:	2b00      	cmp	r3, #0
 8008028:	d009      	beq.n	800803e <HAL_RCCEx_PeriphCLKConfig+0x696>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 800802a:	687b      	ldr	r3, [r7, #4]
 800802c:	681b      	ldr	r3, [r3, #0]
 800802e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
    if(((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1) && (PeriphClkInit->Sai1ClockSelection == RCC_SAI1CLKSOURCE_PLLSAI)) ||\
 8008032:	2b00      	cmp	r3, #0
 8008034:	d02e      	beq.n	8008094 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
       ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI2) == RCC_PERIPHCLK_SAI2) && (PeriphClkInit->Sai2ClockSelection == RCC_SAI2CLKSOURCE_PLLSAI)))
 8008036:	687b      	ldr	r3, [r7, #4]
 8008038:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800803a:	2b00      	cmp	r3, #0
 800803c:	d12a      	bne.n	8008094 <HAL_RCCEx_PeriphCLKConfig+0x6ec>
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      /* check for PLLSAI/DIVQ Parameter */
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 800803e:	4b51      	ldr	r3, [pc, #324]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008040:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008044:	0c1b      	lsrs	r3, r3, #16
 8008046:	f003 0303 	and.w	r3, r3, #3
 800804a:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800804c:	4b4d      	ldr	r3, [pc, #308]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800804e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008052:	0f1b      	lsrs	r3, r3, #28
 8008054:	f003 0307 	and.w	r3, r3, #7
 8008058:	60fb      	str	r3, [r7, #12]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg0, PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800805a:	687b      	ldr	r3, [r7, #4]
 800805c:	695b      	ldr	r3, [r3, #20]
 800805e:	019a      	lsls	r2, r3, #6
 8008060:	693b      	ldr	r3, [r7, #16]
 8008062:	041b      	lsls	r3, r3, #16
 8008064:	431a      	orrs	r2, r3
 8008066:	687b      	ldr	r3, [r7, #4]
 8008068:	699b      	ldr	r3, [r3, #24]
 800806a:	061b      	lsls	r3, r3, #24
 800806c:	431a      	orrs	r2, r3
 800806e:	68fb      	ldr	r3, [r7, #12]
 8008070:	071b      	lsls	r3, r3, #28
 8008072:	4944      	ldr	r1, [pc, #272]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008074:	4313      	orrs	r3, r2
 8008076:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88

      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800807a:	4b42      	ldr	r3, [pc, #264]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800807c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008080:	f423 52f8 	bic.w	r2, r3, #7936	@ 0x1f00
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008088:	3b01      	subs	r3, #1
 800808a:	021b      	lsls	r3, r3, #8
 800808c:	493d      	ldr	r1, [pc, #244]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800808e:	4313      	orrs	r3, r2
 8008090:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    }

    /*----------------- In Case of PLLSAI is selected as source clock for CLK48 -------------------*/
    /* In Case of PLLI2S is selected as source clock for CK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48) && (PeriphClkInit->Clk48ClockSelection == RCC_CLK48SOURCE_PLLSAIP))
 8008094:	687b      	ldr	r3, [r7, #4]
 8008096:	681b      	ldr	r3, [r3, #0]
 8008098:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800809c:	2b00      	cmp	r3, #0
 800809e:	d022      	beq.n	80080e6 <HAL_RCCEx_PeriphCLKConfig+0x73e>
 80080a0:	687b      	ldr	r3, [r7, #4]
 80080a2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80080a4:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 80080a8:	d11d      	bne.n	80080e6 <HAL_RCCEx_PeriphCLKConfig+0x73e>
    {
      /* check for Parameters */
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));
      /* Read PLLSAIQ and PLLSAIR value from PLLSAICFGR register (this value is not needed for CK48 configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80080aa:	4b36      	ldr	r3, [pc, #216]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80080ac:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80080b0:	0e1b      	lsrs	r3, r3, #24
 80080b2:	f003 030f 	and.w	r3, r3, #15
 80080b6:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80080b8:	4b32      	ldr	r3, [pc, #200]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80080ba:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80080be:	0f1b      	lsrs	r3, r3, #28
 80080c0:	f003 0307 	and.w	r3, r3, #7
 80080c4:	60fb      	str	r3, [r7, #12]

      /* Configure the PLLSAI division factors */
      /* PLLSAI_VCO = f(VCO clock) = f(PLLSAI clock input) x (PLLI2SN/PLLM) */
      /* 48CLK = f(PLLSAI clock output) = f(VCO clock) / PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIP, tmpreg0, tmpreg1);
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	695b      	ldr	r3, [r3, #20]
 80080ca:	019a      	lsls	r2, r3, #6
 80080cc:	687b      	ldr	r3, [r7, #4]
 80080ce:	6a1b      	ldr	r3, [r3, #32]
 80080d0:	041b      	lsls	r3, r3, #16
 80080d2:	431a      	orrs	r2, r3
 80080d4:	693b      	ldr	r3, [r7, #16]
 80080d6:	061b      	lsls	r3, r3, #24
 80080d8:	431a      	orrs	r2, r3
 80080da:	68fb      	ldr	r3, [r7, #12]
 80080dc:	071b      	lsls	r3, r3, #28
 80080de:	4929      	ldr	r1, [pc, #164]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80080e0:	4313      	orrs	r3, r2
 80080e2:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
    }

#if defined(STM32F746xx) || defined(STM32F756xx) || defined (STM32F767xx) || defined (STM32F769xx) || defined (STM32F777xx) || defined (STM32F779xx) || defined (STM32F750xx)
    /*---------------------------- LTDC configuration -------------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	681b      	ldr	r3, [r3, #0]
 80080ea:	f003 0308 	and.w	r3, r3, #8
 80080ee:	2b00      	cmp	r3, #0
 80080f0:	d028      	beq.n	8008144 <HAL_RCCEx_PeriphCLKConfig+0x79c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP and PLLSAIQ value from PLLSAICFGR register (these value are not needed for LTDC configuration) */
      tmpreg0 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80080f2:	4b24      	ldr	r3, [pc, #144]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 80080f4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80080f8:	0e1b      	lsrs	r3, r3, #24
 80080fa:	f003 030f 	and.w	r3, r3, #15
 80080fe:	613b      	str	r3, [r7, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos);
 8008100:	4b20      	ldr	r3, [pc, #128]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008102:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008106:	0c1b      	lsrs	r3, r3, #16
 8008108:	f003 0303 	and.w	r3, r3, #3
 800810c:	60fb      	str	r3, [r7, #12]

      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, tmpreg0, PeriphClkInit->PLLSAI.PLLSAIR);
 800810e:	687b      	ldr	r3, [r7, #4]
 8008110:	695b      	ldr	r3, [r3, #20]
 8008112:	019a      	lsls	r2, r3, #6
 8008114:	68fb      	ldr	r3, [r7, #12]
 8008116:	041b      	lsls	r3, r3, #16
 8008118:	431a      	orrs	r2, r3
 800811a:	693b      	ldr	r3, [r7, #16]
 800811c:	061b      	lsls	r3, r3, #24
 800811e:	431a      	orrs	r2, r3
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	69db      	ldr	r3, [r3, #28]
 8008124:	071b      	lsls	r3, r3, #28
 8008126:	4917      	ldr	r1, [pc, #92]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008128:	4313      	orrs	r3, r2
 800812a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88

      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800812e:	4b15      	ldr	r3, [pc, #84]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008130:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008134:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800813c:	4911      	ldr	r1, [pc, #68]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800813e:	4313      	orrs	r3, r2
 8008140:	f8c1 308c 	str.w	r3, [r1, #140]	@ 0x8c
    }
#endif /* STM32F746xx || STM32F756xx || STM32F767xx || STM32F769xx || STM32F777xx || STM32F779xx || STM32F750xx  */

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8008144:	4b0f      	ldr	r3, [pc, #60]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 8008146:	681b      	ldr	r3, [r3, #0]
 8008148:	4a0e      	ldr	r2, [pc, #56]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800814a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800814e:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8008150:	f7fc fcee 	bl	8004b30 <HAL_GetTick>
 8008154:	6178      	str	r0, [r7, #20]

    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008156:	e008      	b.n	800816a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
    {
      if((HAL_GetTick() - tickstart) > PLLSAI_TIMEOUT_VALUE)
 8008158:	f7fc fcea 	bl	8004b30 <HAL_GetTick>
 800815c:	4602      	mov	r2, r0
 800815e:	697b      	ldr	r3, [r7, #20]
 8008160:	1ad3      	subs	r3, r2, r3
 8008162:	2b64      	cmp	r3, #100	@ 0x64
 8008164:	d901      	bls.n	800816a <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8008166:	2303      	movs	r3, #3
 8008168:	e007      	b.n	800817a <HAL_RCCEx_PeriphCLKConfig+0x7d2>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800816a:	4b06      	ldr	r3, [pc, #24]	@ (8008184 <HAL_RCCEx_PeriphCLKConfig+0x7dc>)
 800816c:	681b      	ldr	r3, [r3, #0]
 800816e:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8008172:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8008176:	d1ef      	bne.n	8008158 <HAL_RCCEx_PeriphCLKConfig+0x7b0>
      }
    }
  }
  return HAL_OK;
 8008178:	2300      	movs	r3, #0
}
 800817a:	4618      	mov	r0, r3
 800817c:	3720      	adds	r7, #32
 800817e:	46bd      	mov	sp, r7
 8008180:	bd80      	pop	{r7, pc}
 8008182:	bf00      	nop
 8008184:	40023800 	.word	0x40023800

08008188 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8008188:	b580      	push	{r7, lr}
 800818a:	b082      	sub	sp, #8
 800818c:	af00      	add	r7, sp, #0
 800818e:	6078      	str	r0, [r7, #4]
 8008190:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8008192:	687b      	ldr	r3, [r7, #4]
 8008194:	2b00      	cmp	r3, #0
 8008196:	d101      	bne.n	800819c <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8008198:	2301      	movs	r3, #1
 800819a:	e025      	b.n	80081e8 <HAL_SDRAM_Init+0x60>
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800819c:	687b      	ldr	r3, [r7, #4]
 800819e:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 80081a2:	b2db      	uxtb	r3, r3
 80081a4:	2b00      	cmp	r3, #0
 80081a6:	d106      	bne.n	80081b6 <HAL_SDRAM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80081a8:	687b      	ldr	r3, [r7, #4]
 80081aa:	2200      	movs	r2, #0
 80081ac:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80081b0:	6878      	ldr	r0, [r7, #4]
 80081b2:	f7f8 fbcb 	bl	800094c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80081b6:	687b      	ldr	r3, [r7, #4]
 80081b8:	2202      	movs	r2, #2
 80081ba:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	681a      	ldr	r2, [r3, #0]
 80081c2:	687b      	ldr	r3, [r7, #4]
 80081c4:	3304      	adds	r3, #4
 80081c6:	4619      	mov	r1, r3
 80081c8:	4610      	mov	r0, r2
 80081ca:	f002 fda5 	bl	800ad18 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	6818      	ldr	r0, [r3, #0]
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	685b      	ldr	r3, [r3, #4]
 80081d6:	461a      	mov	r2, r3
 80081d8:	6839      	ldr	r1, [r7, #0]
 80081da:	f002 fdf9 	bl	800add0 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80081de:	687b      	ldr	r3, [r7, #4]
 80081e0:	2201      	movs	r2, #1
 80081e2:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

  return HAL_OK;
 80081e6:	2300      	movs	r3, #0
}
 80081e8:	4618      	mov	r0, r3
 80081ea:	3708      	adds	r7, #8
 80081ec:	46bd      	mov	sp, r7
 80081ee:	bd80      	pop	{r7, pc}

080081f0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 80081f0:	b580      	push	{r7, lr}
 80081f2:	b086      	sub	sp, #24
 80081f4:	af00      	add	r7, sp, #0
 80081f6:	60f8      	str	r0, [r7, #12]
 80081f8:	60b9      	str	r1, [r7, #8]
 80081fa:	607a      	str	r2, [r7, #4]
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 80081fc:	68fb      	ldr	r3, [r7, #12]
 80081fe:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8008202:	75fb      	strb	r3, [r7, #23]

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8008204:	7dfb      	ldrb	r3, [r7, #23]
 8008206:	2b02      	cmp	r3, #2
 8008208:	d101      	bne.n	800820e <HAL_SDRAM_SendCommand+0x1e>
  {
    return HAL_BUSY;
 800820a:	2302      	movs	r3, #2
 800820c:	e021      	b.n	8008252 <HAL_SDRAM_SendCommand+0x62>
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800820e:	7dfb      	ldrb	r3, [r7, #23]
 8008210:	2b01      	cmp	r3, #1
 8008212:	d002      	beq.n	800821a <HAL_SDRAM_SendCommand+0x2a>
 8008214:	7dfb      	ldrb	r3, [r7, #23]
 8008216:	2b05      	cmp	r3, #5
 8008218:	d118      	bne.n	800824c <HAL_SDRAM_SendCommand+0x5c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800821a:	68fb      	ldr	r3, [r7, #12]
 800821c:	2202      	movs	r2, #2
 800821e:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8008222:	68fb      	ldr	r3, [r7, #12]
 8008224:	681b      	ldr	r3, [r3, #0]
 8008226:	687a      	ldr	r2, [r7, #4]
 8008228:	68b9      	ldr	r1, [r7, #8]
 800822a:	4618      	mov	r0, r3
 800822c:	f002 fe3a 	bl	800aea4 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008230:	68bb      	ldr	r3, [r7, #8]
 8008232:	681b      	ldr	r3, [r3, #0]
 8008234:	2b02      	cmp	r3, #2
 8008236:	d104      	bne.n	8008242 <HAL_SDRAM_SendCommand+0x52>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8008238:	68fb      	ldr	r3, [r7, #12]
 800823a:	2205      	movs	r2, #5
 800823c:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008240:	e006      	b.n	8008250 <HAL_SDRAM_SendCommand+0x60>
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8008242:	68fb      	ldr	r3, [r7, #12]
 8008244:	2201      	movs	r2, #1
 8008246:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800824a:	e001      	b.n	8008250 <HAL_SDRAM_SendCommand+0x60>
    }
  }
  else
  {
    return HAL_ERROR;
 800824c:	2301      	movs	r3, #1
 800824e:	e000      	b.n	8008252 <HAL_SDRAM_SendCommand+0x62>
  }

  return HAL_OK;
 8008250:	2300      	movs	r3, #0
}
 8008252:	4618      	mov	r0, r3
 8008254:	3718      	adds	r7, #24
 8008256:	46bd      	mov	sp, r7
 8008258:	bd80      	pop	{r7, pc}

0800825a <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800825a:	b580      	push	{r7, lr}
 800825c:	b082      	sub	sp, #8
 800825e:	af00      	add	r7, sp, #0
 8008260:	6078      	str	r0, [r7, #4]
 8008262:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008264:	687b      	ldr	r3, [r7, #4]
 8008266:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 800826a:	b2db      	uxtb	r3, r3
 800826c:	2b02      	cmp	r3, #2
 800826e:	d101      	bne.n	8008274 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8008270:	2302      	movs	r3, #2
 8008272:	e016      	b.n	80082a2 <HAL_SDRAM_ProgramRefreshRate+0x48>
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8008274:	687b      	ldr	r3, [r7, #4]
 8008276:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 800827a:	b2db      	uxtb	r3, r3
 800827c:	2b01      	cmp	r3, #1
 800827e:	d10f      	bne.n	80082a0 <HAL_SDRAM_ProgramRefreshRate+0x46>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008280:	687b      	ldr	r3, [r7, #4]
 8008282:	2202      	movs	r2, #2
 8008284:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	681b      	ldr	r3, [r3, #0]
 800828c:	6839      	ldr	r1, [r7, #0]
 800828e:	4618      	mov	r0, r3
 8008290:	f002 fe2c 	bl	800aeec <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8008294:	687b      	ldr	r3, [r7, #4]
 8008296:	2201      	movs	r2, #1
 8008298:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800829c:	2300      	movs	r3, #0
 800829e:	e000      	b.n	80082a2 <HAL_SDRAM_ProgramRefreshRate+0x48>
    return HAL_ERROR;
 80082a0:	2301      	movs	r3, #1
}
 80082a2:	4618      	mov	r0, r3
 80082a4:	3708      	adds	r7, #8
 80082a6:	46bd      	mov	sp, r7
 80082a8:	bd80      	pop	{r7, pc}
	...

080082ac <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 80082ac:	b580      	push	{r7, lr}
 80082ae:	b084      	sub	sp, #16
 80082b0:	af00      	add	r7, sp, #0
 80082b2:	6078      	str	r0, [r7, #4]
  uint32_t frxth;

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	2b00      	cmp	r3, #0
 80082b8:	d101      	bne.n	80082be <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 80082ba:	2301      	movs	r3, #1
 80082bc:	e0c1      	b.n	8008442 <HAL_SPI_Init+0x196>
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_NSSP(hspi->Init.NSSPMode));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80082c2:	2b00      	cmp	r3, #0
 80082c4:	d108      	bne.n	80082d8 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	685b      	ldr	r3, [r3, #4]
 80082ca:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80082ce:	d009      	beq.n	80082e4 <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80082d0:	687b      	ldr	r3, [r7, #4]
 80082d2:	2200      	movs	r2, #0
 80082d4:	61da      	str	r2, [r3, #28]
 80082d6:	e005      	b.n	80082e4 <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 80082d8:	687b      	ldr	r3, [r7, #4]
 80082da:	2200      	movs	r2, #0
 80082dc:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 80082de:	687b      	ldr	r3, [r7, #4]
 80082e0:	2200      	movs	r2, #0
 80082e2:	615a      	str	r2, [r3, #20]
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_LENGTH(hspi->Init.CRCLength));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80082e4:	687b      	ldr	r3, [r7, #4]
 80082e6:	2200      	movs	r2, #0
 80082e8:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 80082f0:	b2db      	uxtb	r3, r3
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	d12a      	bne.n	800834c <HAL_SPI_Init+0xa0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80082f6:	687b      	ldr	r3, [r7, #4]
 80082f8:	2200      	movs	r2, #0
 80082fa:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
    /* Init the SPI Callback settings */
    hspi->TxCpltCallback       = HAL_SPI_TxCpltCallback;       /* Legacy weak TxCpltCallback       */
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	4a52      	ldr	r2, [pc, #328]	@ (800844c <HAL_SPI_Init+0x1a0>)
 8008302:	665a      	str	r2, [r3, #100]	@ 0x64
    hspi->RxCpltCallback       = HAL_SPI_RxCpltCallback;       /* Legacy weak RxCpltCallback       */
 8008304:	687b      	ldr	r3, [r7, #4]
 8008306:	4a52      	ldr	r2, [pc, #328]	@ (8008450 <HAL_SPI_Init+0x1a4>)
 8008308:	669a      	str	r2, [r3, #104]	@ 0x68
    hspi->TxRxCpltCallback     = HAL_SPI_TxRxCpltCallback;     /* Legacy weak TxRxCpltCallback     */
 800830a:	687b      	ldr	r3, [r7, #4]
 800830c:	4a51      	ldr	r2, [pc, #324]	@ (8008454 <HAL_SPI_Init+0x1a8>)
 800830e:	66da      	str	r2, [r3, #108]	@ 0x6c
    hspi->TxHalfCpltCallback   = HAL_SPI_TxHalfCpltCallback;   /* Legacy weak TxHalfCpltCallback   */
 8008310:	687b      	ldr	r3, [r7, #4]
 8008312:	4a51      	ldr	r2, [pc, #324]	@ (8008458 <HAL_SPI_Init+0x1ac>)
 8008314:	671a      	str	r2, [r3, #112]	@ 0x70
    hspi->RxHalfCpltCallback   = HAL_SPI_RxHalfCpltCallback;   /* Legacy weak RxHalfCpltCallback   */
 8008316:	687b      	ldr	r3, [r7, #4]
 8008318:	4a50      	ldr	r2, [pc, #320]	@ (800845c <HAL_SPI_Init+0x1b0>)
 800831a:	675a      	str	r2, [r3, #116]	@ 0x74
    hspi->TxRxHalfCpltCallback = HAL_SPI_TxRxHalfCpltCallback; /* Legacy weak TxRxHalfCpltCallback */
 800831c:	687b      	ldr	r3, [r7, #4]
 800831e:	4a50      	ldr	r2, [pc, #320]	@ (8008460 <HAL_SPI_Init+0x1b4>)
 8008320:	679a      	str	r2, [r3, #120]	@ 0x78
    hspi->ErrorCallback        = HAL_SPI_ErrorCallback;        /* Legacy weak ErrorCallback        */
 8008322:	687b      	ldr	r3, [r7, #4]
 8008324:	4a4f      	ldr	r2, [pc, #316]	@ (8008464 <HAL_SPI_Init+0x1b8>)
 8008326:	67da      	str	r2, [r3, #124]	@ 0x7c
    hspi->AbortCpltCallback    = HAL_SPI_AbortCpltCallback;    /* Legacy weak AbortCpltCallback    */
 8008328:	687b      	ldr	r3, [r7, #4]
 800832a:	4a4f      	ldr	r2, [pc, #316]	@ (8008468 <HAL_SPI_Init+0x1bc>)
 800832c:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80

    if (hspi->MspInitCallback == NULL)
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008336:	2b00      	cmp	r3, #0
 8008338:	d103      	bne.n	8008342 <HAL_SPI_Init+0x96>
    {
      hspi->MspInitCallback = HAL_SPI_MspInit; /* Legacy weak MspInit  */
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	4a4b      	ldr	r2, [pc, #300]	@ (800846c <HAL_SPI_Init+0x1c0>)
 800833e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
    }

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008348:	6878      	ldr	r0, [r7, #4]
 800834a:	4798      	blx	r3
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800834c:	687b      	ldr	r3, [r7, #4]
 800834e:	2202      	movs	r2, #2
 8008350:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	681b      	ldr	r3, [r3, #0]
 8008358:	681a      	ldr	r2, [r3, #0]
 800835a:	687b      	ldr	r3, [r7, #4]
 800835c:	681b      	ldr	r3, [r3, #0]
 800835e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008362:	601a      	str	r2, [r3, #0]

  /* Align by default the rs fifo threshold on the data size */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8008364:	687b      	ldr	r3, [r7, #4]
 8008366:	68db      	ldr	r3, [r3, #12]
 8008368:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800836c:	d902      	bls.n	8008374 <HAL_SPI_Init+0xc8>
  {
    frxth = SPI_RXFIFO_THRESHOLD_HF;
 800836e:	2300      	movs	r3, #0
 8008370:	60fb      	str	r3, [r7, #12]
 8008372:	e002      	b.n	800837a <HAL_SPI_Init+0xce>
  }
  else
  {
    frxth = SPI_RXFIFO_THRESHOLD_QF;
 8008374:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8008378:	60fb      	str	r3, [r7, #12]
  }

  /* CRC calculation is valid only for 16Bit and 8 Bit */
  if ((hspi->Init.DataSize != SPI_DATASIZE_16BIT) && (hspi->Init.DataSize != SPI_DATASIZE_8BIT))
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	68db      	ldr	r3, [r3, #12]
 800837e:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 8008382:	d007      	beq.n	8008394 <HAL_SPI_Init+0xe8>
 8008384:	687b      	ldr	r3, [r7, #4]
 8008386:	68db      	ldr	r3, [r3, #12]
 8008388:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800838c:	d002      	beq.n	8008394 <HAL_SPI_Init+0xe8>
  {
    /* CRC must be disabled */
    hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800838e:	687b      	ldr	r3, [r7, #4]
 8008390:	2200      	movs	r2, #0
 8008392:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	685b      	ldr	r3, [r3, #4]
 8008398:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 800839c:	687b      	ldr	r3, [r7, #4]
 800839e:	689b      	ldr	r3, [r3, #8]
 80083a0:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80083a4:	431a      	orrs	r2, r3
 80083a6:	687b      	ldr	r3, [r7, #4]
 80083a8:	691b      	ldr	r3, [r3, #16]
 80083aa:	f003 0302 	and.w	r3, r3, #2
 80083ae:	431a      	orrs	r2, r3
 80083b0:	687b      	ldr	r3, [r7, #4]
 80083b2:	695b      	ldr	r3, [r3, #20]
 80083b4:	f003 0301 	and.w	r3, r3, #1
 80083b8:	431a      	orrs	r2, r3
 80083ba:	687b      	ldr	r3, [r7, #4]
 80083bc:	699b      	ldr	r3, [r3, #24]
 80083be:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80083c2:	431a      	orrs	r2, r3
 80083c4:	687b      	ldr	r3, [r7, #4]
 80083c6:	69db      	ldr	r3, [r3, #28]
 80083c8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80083cc:	431a      	orrs	r2, r3
 80083ce:	687b      	ldr	r3, [r7, #4]
 80083d0:	6a1b      	ldr	r3, [r3, #32]
 80083d2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80083d6:	ea42 0103 	orr.w	r1, r2, r3
 80083da:	687b      	ldr	r3, [r7, #4]
 80083dc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80083de:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80083e2:	687b      	ldr	r3, [r7, #4]
 80083e4:	681b      	ldr	r3, [r3, #0]
 80083e6:	430a      	orrs	r2, r1
 80083e8:	601a      	str	r2, [r3, #0]
    }
  }
#endif /* USE_SPI_CRC */

  /* Configure : NSS management, TI Mode, NSS Pulse, Data size and Rx Fifo threshold */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) |
 80083ea:	687b      	ldr	r3, [r7, #4]
 80083ec:	699b      	ldr	r3, [r3, #24]
 80083ee:	0c1b      	lsrs	r3, r3, #16
 80083f0:	f003 0204 	and.w	r2, r3, #4
 80083f4:	687b      	ldr	r3, [r7, #4]
 80083f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80083f8:	f003 0310 	and.w	r3, r3, #16
 80083fc:	431a      	orrs	r2, r3
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8008402:	f003 0308 	and.w	r3, r3, #8
 8008406:	431a      	orrs	r2, r3
 8008408:	687b      	ldr	r3, [r7, #4]
 800840a:	68db      	ldr	r3, [r3, #12]
 800840c:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 8008410:	ea42 0103 	orr.w	r1, r2, r3
 8008414:	68fb      	ldr	r3, [r7, #12]
 8008416:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	681b      	ldr	r3, [r3, #0]
 800841e:	430a      	orrs	r2, r1
 8008420:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8008422:	687b      	ldr	r3, [r7, #4]
 8008424:	681b      	ldr	r3, [r3, #0]
 8008426:	69da      	ldr	r2, [r3, #28]
 8008428:	687b      	ldr	r3, [r7, #4]
 800842a:	681b      	ldr	r3, [r3, #0]
 800842c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8008430:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008432:	687b      	ldr	r3, [r7, #4]
 8008434:	2200      	movs	r2, #0
 8008436:	661a      	str	r2, [r3, #96]	@ 0x60
  hspi->State     = HAL_SPI_STATE_READY;
 8008438:	687b      	ldr	r3, [r7, #4]
 800843a:	2201      	movs	r2, #1
 800843c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

  return HAL_OK;
 8008440:	2300      	movs	r3, #0
}
 8008442:	4618      	mov	r0, r3
 8008444:	3710      	adds	r7, #16
 8008446:	46bd      	mov	sp, r7
 8008448:	bd80      	pop	{r7, pc}
 800844a:	bf00      	nop
 800844c:	080088b5 	.word	0x080088b5
 8008450:	080088c9 	.word	0x080088c9
 8008454:	080088dd 	.word	0x080088dd
 8008458:	080088f1 	.word	0x080088f1
 800845c:	08008905 	.word	0x08008905
 8008460:	08008919 	.word	0x08008919
 8008464:	0800892d 	.word	0x0800892d
 8008468:	08008941 	.word	0x08008941
 800846c:	08001501 	.word	0x08001501

08008470 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, uint8_t *pTxData, uint8_t *pRxData, uint16_t Size,
                                          uint32_t Timeout)
{
 8008470:	b580      	push	{r7, lr}
 8008472:	b08a      	sub	sp, #40	@ 0x28
 8008474:	af00      	add	r7, sp, #0
 8008476:	60f8      	str	r0, [r7, #12]
 8008478:	60b9      	str	r1, [r7, #8]
 800847a:	607a      	str	r2, [r7, #4]
 800847c:	807b      	strh	r3, [r7, #2]
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 800847e:	2301      	movs	r3, #1
 8008480:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_StatusTypeDef    errorcode = HAL_OK;
 8008482:	2300      	movs	r3, #0
 8008484:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Process Locked */
  __HAL_LOCK(hspi);
 8008488:	68fb      	ldr	r3, [r7, #12]
 800848a:	f893 305c 	ldrb.w	r3, [r3, #92]	@ 0x5c
 800848e:	2b01      	cmp	r3, #1
 8008490:	d101      	bne.n	8008496 <HAL_SPI_TransmitReceive+0x26>
 8008492:	2302      	movs	r3, #2
 8008494:	e20a      	b.n	80088ac <HAL_SPI_TransmitReceive+0x43c>
 8008496:	68fb      	ldr	r3, [r7, #12]
 8008498:	2201      	movs	r2, #1
 800849a:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800849e:	f7fc fb47 	bl	8004b30 <HAL_GetTick>
 80084a2:	61f8      	str	r0, [r7, #28]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 80084a4:	68fb      	ldr	r3, [r7, #12]
 80084a6:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 80084aa:	76fb      	strb	r3, [r7, #27]
  tmp_mode            = hspi->Init.Mode;
 80084ac:	68fb      	ldr	r3, [r7, #12]
 80084ae:	685b      	ldr	r3, [r3, #4]
 80084b0:	617b      	str	r3, [r7, #20]
  initial_TxXferCount = Size;
 80084b2:	887b      	ldrh	r3, [r7, #2]
 80084b4:	827b      	strh	r3, [r7, #18]
  initial_RxXferCount = Size;
 80084b6:	887b      	ldrh	r3, [r7, #2]
 80084b8:	823b      	strh	r3, [r7, #16]
#if (USE_SPI_CRC != 0U)
  spi_cr1             = READ_REG(hspi->Instance->CR1);
  spi_cr2             = READ_REG(hspi->Instance->CR2);
#endif /* USE_SPI_CRC */

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80084ba:	7efb      	ldrb	r3, [r7, #27]
 80084bc:	2b01      	cmp	r3, #1
 80084be:	d00e      	beq.n	80084de <HAL_SPI_TransmitReceive+0x6e>
 80084c0:	697b      	ldr	r3, [r7, #20]
 80084c2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80084c6:	d106      	bne.n	80084d6 <HAL_SPI_TransmitReceive+0x66>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	689b      	ldr	r3, [r3, #8]
 80084cc:	2b00      	cmp	r3, #0
 80084ce:	d102      	bne.n	80084d6 <HAL_SPI_TransmitReceive+0x66>
 80084d0:	7efb      	ldrb	r3, [r7, #27]
 80084d2:	2b04      	cmp	r3, #4
 80084d4:	d003      	beq.n	80084de <HAL_SPI_TransmitReceive+0x6e>
  {
    errorcode = HAL_BUSY;
 80084d6:	2302      	movs	r3, #2
 80084d8:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    goto error;
 80084dc:	e1e0      	b.n	80088a0 <HAL_SPI_TransmitReceive+0x430>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80084de:	68bb      	ldr	r3, [r7, #8]
 80084e0:	2b00      	cmp	r3, #0
 80084e2:	d005      	beq.n	80084f0 <HAL_SPI_TransmitReceive+0x80>
 80084e4:	687b      	ldr	r3, [r7, #4]
 80084e6:	2b00      	cmp	r3, #0
 80084e8:	d002      	beq.n	80084f0 <HAL_SPI_TransmitReceive+0x80>
 80084ea:	887b      	ldrh	r3, [r7, #2]
 80084ec:	2b00      	cmp	r3, #0
 80084ee:	d103      	bne.n	80084f8 <HAL_SPI_TransmitReceive+0x88>
  {
    errorcode = HAL_ERROR;
 80084f0:	2301      	movs	r3, #1
 80084f2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    goto error;
 80084f6:	e1d3      	b.n	80088a0 <HAL_SPI_TransmitReceive+0x430>
  }

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80084f8:	68fb      	ldr	r3, [r7, #12]
 80084fa:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 80084fe:	b2db      	uxtb	r3, r3
 8008500:	2b04      	cmp	r3, #4
 8008502:	d003      	beq.n	800850c <HAL_SPI_TransmitReceive+0x9c>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8008504:	68fb      	ldr	r3, [r7, #12]
 8008506:	2205      	movs	r2, #5
 8008508:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800850c:	68fb      	ldr	r3, [r7, #12]
 800850e:	2200      	movs	r2, #0
 8008510:	661a      	str	r2, [r3, #96]	@ 0x60
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8008512:	68fb      	ldr	r3, [r7, #12]
 8008514:	687a      	ldr	r2, [r7, #4]
 8008516:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferCount = Size;
 8008518:	68fb      	ldr	r3, [r7, #12]
 800851a:	887a      	ldrh	r2, [r7, #2]
 800851c:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
  hspi->RxXferSize  = Size;
 8008520:	68fb      	ldr	r3, [r7, #12]
 8008522:	887a      	ldrh	r2, [r7, #2]
 8008524:	f8a3 2044 	strh.w	r2, [r3, #68]	@ 0x44
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8008528:	68fb      	ldr	r3, [r7, #12]
 800852a:	68ba      	ldr	r2, [r7, #8]
 800852c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxXferCount = Size;
 800852e:	68fb      	ldr	r3, [r7, #12]
 8008530:	887a      	ldrh	r2, [r7, #2]
 8008532:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferSize  = Size;
 8008534:	68fb      	ldr	r3, [r7, #12]
 8008536:	887a      	ldrh	r2, [r7, #2]
 8008538:	879a      	strh	r2, [r3, #60]	@ 0x3c

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 800853a:	68fb      	ldr	r3, [r7, #12]
 800853c:	2200      	movs	r2, #0
 800853e:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi->TxISR       = NULL;
 8008540:	68fb      	ldr	r3, [r7, #12]
 8008542:	2200      	movs	r2, #0
 8008544:	651a      	str	r2, [r3, #80]	@ 0x50
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the Rx Fifo threshold */
  if ((hspi->Init.DataSize > SPI_DATASIZE_8BIT) || (initial_RxXferCount > 1U))
 8008546:	68fb      	ldr	r3, [r7, #12]
 8008548:	68db      	ldr	r3, [r3, #12]
 800854a:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800854e:	d802      	bhi.n	8008556 <HAL_SPI_TransmitReceive+0xe6>
 8008550:	8a3b      	ldrh	r3, [r7, #16]
 8008552:	2b01      	cmp	r3, #1
 8008554:	d908      	bls.n	8008568 <HAL_SPI_TransmitReceive+0xf8>
  {
    /* Set fiforxthreshold according the reception data length: 16bit */
    CLEAR_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8008556:	68fb      	ldr	r3, [r7, #12]
 8008558:	681b      	ldr	r3, [r3, #0]
 800855a:	685a      	ldr	r2, [r3, #4]
 800855c:	68fb      	ldr	r3, [r7, #12]
 800855e:	681b      	ldr	r3, [r3, #0]
 8008560:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8008564:	605a      	str	r2, [r3, #4]
 8008566:	e007      	b.n	8008578 <HAL_SPI_TransmitReceive+0x108>
  }
  else
  {
    /* Set fiforxthreshold according the reception data length: 8bit */
    SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 8008568:	68fb      	ldr	r3, [r7, #12]
 800856a:	681b      	ldr	r3, [r3, #0]
 800856c:	685a      	ldr	r2, [r3, #4]
 800856e:	68fb      	ldr	r3, [r7, #12]
 8008570:	681b      	ldr	r3, [r3, #0]
 8008572:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8008576:	605a      	str	r2, [r3, #4]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008578:	68fb      	ldr	r3, [r7, #12]
 800857a:	681b      	ldr	r3, [r3, #0]
 800857c:	681b      	ldr	r3, [r3, #0]
 800857e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008582:	2b40      	cmp	r3, #64	@ 0x40
 8008584:	d007      	beq.n	8008596 <HAL_SPI_TransmitReceive+0x126>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8008586:	68fb      	ldr	r3, [r7, #12]
 8008588:	681b      	ldr	r3, [r3, #0]
 800858a:	681a      	ldr	r2, [r3, #0]
 800858c:	68fb      	ldr	r3, [r7, #12]
 800858e:	681b      	ldr	r3, [r3, #0]
 8008590:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8008594:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8008596:	68fb      	ldr	r3, [r7, #12]
 8008598:	68db      	ldr	r3, [r3, #12]
 800859a:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 800859e:	f240 8081 	bls.w	80086a4 <HAL_SPI_TransmitReceive+0x234>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80085a2:	68fb      	ldr	r3, [r7, #12]
 80085a4:	685b      	ldr	r3, [r3, #4]
 80085a6:	2b00      	cmp	r3, #0
 80085a8:	d002      	beq.n	80085b0 <HAL_SPI_TransmitReceive+0x140>
 80085aa:	8a7b      	ldrh	r3, [r7, #18]
 80085ac:	2b01      	cmp	r3, #1
 80085ae:	d16d      	bne.n	800868c <HAL_SPI_TransmitReceive+0x21c>
    {
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80085b0:	68fb      	ldr	r3, [r7, #12]
 80085b2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80085b4:	881a      	ldrh	r2, [r3, #0]
 80085b6:	68fb      	ldr	r3, [r7, #12]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80085bc:	68fb      	ldr	r3, [r7, #12]
 80085be:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80085c0:	1c9a      	adds	r2, r3, #2
 80085c2:	68fb      	ldr	r3, [r7, #12]
 80085c4:	639a      	str	r2, [r3, #56]	@ 0x38
      hspi->TxXferCount--;
 80085c6:	68fb      	ldr	r3, [r7, #12]
 80085c8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80085ca:	b29b      	uxth	r3, r3
 80085cc:	3b01      	subs	r3, #1
 80085ce:	b29a      	uxth	r2, r3
 80085d0:	68fb      	ldr	r3, [r7, #12]
 80085d2:	87da      	strh	r2, [r3, #62]	@ 0x3e
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80085d4:	e05a      	b.n	800868c <HAL_SPI_TransmitReceive+0x21c>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80085d6:	68fb      	ldr	r3, [r7, #12]
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	689b      	ldr	r3, [r3, #8]
 80085dc:	f003 0302 	and.w	r3, r3, #2
 80085e0:	2b02      	cmp	r3, #2
 80085e2:	d11b      	bne.n	800861c <HAL_SPI_TransmitReceive+0x1ac>
 80085e4:	68fb      	ldr	r3, [r7, #12]
 80085e6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80085e8:	b29b      	uxth	r3, r3
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	d016      	beq.n	800861c <HAL_SPI_TransmitReceive+0x1ac>
 80085ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80085f0:	2b01      	cmp	r3, #1
 80085f2:	d113      	bne.n	800861c <HAL_SPI_TransmitReceive+0x1ac>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80085f4:	68fb      	ldr	r3, [r7, #12]
 80085f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80085f8:	881a      	ldrh	r2, [r3, #0]
 80085fa:	68fb      	ldr	r3, [r7, #12]
 80085fc:	681b      	ldr	r3, [r3, #0]
 80085fe:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008600:	68fb      	ldr	r3, [r7, #12]
 8008602:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008604:	1c9a      	adds	r2, r3, #2
 8008606:	68fb      	ldr	r3, [r7, #12]
 8008608:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount--;
 800860a:	68fb      	ldr	r3, [r7, #12]
 800860c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800860e:	b29b      	uxth	r3, r3
 8008610:	3b01      	subs	r3, #1
 8008612:	b29a      	uxth	r2, r3
 8008614:	68fb      	ldr	r3, [r7, #12]
 8008616:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8008618:	2300      	movs	r3, #0
 800861a:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 800861c:	68fb      	ldr	r3, [r7, #12]
 800861e:	681b      	ldr	r3, [r3, #0]
 8008620:	689b      	ldr	r3, [r3, #8]
 8008622:	f003 0301 	and.w	r3, r3, #1
 8008626:	2b01      	cmp	r3, #1
 8008628:	d11c      	bne.n	8008664 <HAL_SPI_TransmitReceive+0x1f4>
 800862a:	68fb      	ldr	r3, [r7, #12]
 800862c:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8008630:	b29b      	uxth	r3, r3
 8008632:	2b00      	cmp	r3, #0
 8008634:	d016      	beq.n	8008664 <HAL_SPI_TransmitReceive+0x1f4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8008636:	68fb      	ldr	r3, [r7, #12]
 8008638:	681b      	ldr	r3, [r3, #0]
 800863a:	68da      	ldr	r2, [r3, #12]
 800863c:	68fb      	ldr	r3, [r7, #12]
 800863e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008640:	b292      	uxth	r2, r2
 8008642:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008644:	68fb      	ldr	r3, [r7, #12]
 8008646:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008648:	1c9a      	adds	r2, r3, #2
 800864a:	68fb      	ldr	r3, [r7, #12]
 800864c:	641a      	str	r2, [r3, #64]	@ 0x40
        hspi->RxXferCount--;
 800864e:	68fb      	ldr	r3, [r7, #12]
 8008650:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8008654:	b29b      	uxth	r3, r3
 8008656:	3b01      	subs	r3, #1
 8008658:	b29a      	uxth	r2, r3
 800865a:	68fb      	ldr	r3, [r7, #12]
 800865c:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8008660:	2301      	movs	r3, #1
 8008662:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8008664:	f7fc fa64 	bl	8004b30 <HAL_GetTick>
 8008668:	4602      	mov	r2, r0
 800866a:	69fb      	ldr	r3, [r7, #28]
 800866c:	1ad3      	subs	r3, r2, r3
 800866e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008670:	429a      	cmp	r2, r3
 8008672:	d80b      	bhi.n	800868c <HAL_SPI_TransmitReceive+0x21c>
 8008674:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008676:	f1b3 3fff 	cmp.w	r3, #4294967295
 800867a:	d007      	beq.n	800868c <HAL_SPI_TransmitReceive+0x21c>
      {
        errorcode = HAL_TIMEOUT;
 800867c:	2303      	movs	r3, #3
 800867e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        hspi->State = HAL_SPI_STATE_READY;
 8008682:	68fb      	ldr	r3, [r7, #12]
 8008684:	2201      	movs	r2, #1
 8008686:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
        goto error;
 800868a:	e109      	b.n	80088a0 <HAL_SPI_TransmitReceive+0x430>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800868c:	68fb      	ldr	r3, [r7, #12]
 800868e:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008690:	b29b      	uxth	r3, r3
 8008692:	2b00      	cmp	r3, #0
 8008694:	d19f      	bne.n	80085d6 <HAL_SPI_TransmitReceive+0x166>
 8008696:	68fb      	ldr	r3, [r7, #12]
 8008698:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 800869c:	b29b      	uxth	r3, r3
 800869e:	2b00      	cmp	r3, #0
 80086a0:	d199      	bne.n	80085d6 <HAL_SPI_TransmitReceive+0x166>
 80086a2:	e0e3      	b.n	800886c <HAL_SPI_TransmitReceive+0x3fc>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80086a4:	68fb      	ldr	r3, [r7, #12]
 80086a6:	685b      	ldr	r3, [r3, #4]
 80086a8:	2b00      	cmp	r3, #0
 80086aa:	d003      	beq.n	80086b4 <HAL_SPI_TransmitReceive+0x244>
 80086ac:	8a7b      	ldrh	r3, [r7, #18]
 80086ae:	2b01      	cmp	r3, #1
 80086b0:	f040 80cf 	bne.w	8008852 <HAL_SPI_TransmitReceive+0x3e2>
    {
      if (hspi->TxXferCount > 1U)
 80086b4:	68fb      	ldr	r3, [r7, #12]
 80086b6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80086b8:	b29b      	uxth	r3, r3
 80086ba:	2b01      	cmp	r3, #1
 80086bc:	d912      	bls.n	80086e4 <HAL_SPI_TransmitReceive+0x274>
      {
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80086be:	68fb      	ldr	r3, [r7, #12]
 80086c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80086c2:	881a      	ldrh	r2, [r3, #0]
 80086c4:	68fb      	ldr	r3, [r7, #12]
 80086c6:	681b      	ldr	r3, [r3, #0]
 80086c8:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80086ca:	68fb      	ldr	r3, [r7, #12]
 80086cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80086ce:	1c9a      	adds	r2, r3, #2
 80086d0:	68fb      	ldr	r3, [r7, #12]
 80086d2:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount -= 2U;
 80086d4:	68fb      	ldr	r3, [r7, #12]
 80086d6:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80086d8:	b29b      	uxth	r3, r3
 80086da:	3b02      	subs	r3, #2
 80086dc:	b29a      	uxth	r2, r3
 80086de:	68fb      	ldr	r3, [r7, #12]
 80086e0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80086e2:	e0b6      	b.n	8008852 <HAL_SPI_TransmitReceive+0x3e2>
      }
      else
      {
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 80086e4:	68fb      	ldr	r3, [r7, #12]
 80086e6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80086e8:	68fb      	ldr	r3, [r7, #12]
 80086ea:	681b      	ldr	r3, [r3, #0]
 80086ec:	330c      	adds	r3, #12
 80086ee:	7812      	ldrb	r2, [r2, #0]
 80086f0:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80086f2:	68fb      	ldr	r3, [r7, #12]
 80086f4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80086f6:	1c5a      	adds	r2, r3, #1
 80086f8:	68fb      	ldr	r3, [r7, #12]
 80086fa:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->TxXferCount--;
 80086fc:	68fb      	ldr	r3, [r7, #12]
 80086fe:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008700:	b29b      	uxth	r3, r3
 8008702:	3b01      	subs	r3, #1
 8008704:	b29a      	uxth	r2, r3
 8008706:	68fb      	ldr	r3, [r7, #12]
 8008708:	87da      	strh	r2, [r3, #62]	@ 0x3e
          SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
        }
#endif /* USE_SPI_CRC */
      }
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800870a:	e0a2      	b.n	8008852 <HAL_SPI_TransmitReceive+0x3e2>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800870c:	68fb      	ldr	r3, [r7, #12]
 800870e:	681b      	ldr	r3, [r3, #0]
 8008710:	689b      	ldr	r3, [r3, #8]
 8008712:	f003 0302 	and.w	r3, r3, #2
 8008716:	2b02      	cmp	r3, #2
 8008718:	d134      	bne.n	8008784 <HAL_SPI_TransmitReceive+0x314>
 800871a:	68fb      	ldr	r3, [r7, #12]
 800871c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800871e:	b29b      	uxth	r3, r3
 8008720:	2b00      	cmp	r3, #0
 8008722:	d02f      	beq.n	8008784 <HAL_SPI_TransmitReceive+0x314>
 8008724:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008726:	2b01      	cmp	r3, #1
 8008728:	d12c      	bne.n	8008784 <HAL_SPI_TransmitReceive+0x314>
      {
        if (hspi->TxXferCount > 1U)
 800872a:	68fb      	ldr	r3, [r7, #12]
 800872c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800872e:	b29b      	uxth	r3, r3
 8008730:	2b01      	cmp	r3, #1
 8008732:	d912      	bls.n	800875a <HAL_SPI_TransmitReceive+0x2ea>
        {
          hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008734:	68fb      	ldr	r3, [r7, #12]
 8008736:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008738:	881a      	ldrh	r2, [r3, #0]
 800873a:	68fb      	ldr	r3, [r7, #12]
 800873c:	681b      	ldr	r3, [r3, #0]
 800873e:	60da      	str	r2, [r3, #12]
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8008740:	68fb      	ldr	r3, [r7, #12]
 8008742:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008744:	1c9a      	adds	r2, r3, #2
 8008746:	68fb      	ldr	r3, [r7, #12]
 8008748:	639a      	str	r2, [r3, #56]	@ 0x38
          hspi->TxXferCount -= 2U;
 800874a:	68fb      	ldr	r3, [r7, #12]
 800874c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800874e:	b29b      	uxth	r3, r3
 8008750:	3b02      	subs	r3, #2
 8008752:	b29a      	uxth	r2, r3
 8008754:	68fb      	ldr	r3, [r7, #12]
 8008756:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8008758:	e012      	b.n	8008780 <HAL_SPI_TransmitReceive+0x310>
        }
        else
        {
          *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800875a:	68fb      	ldr	r3, [r7, #12]
 800875c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800875e:	68fb      	ldr	r3, [r7, #12]
 8008760:	681b      	ldr	r3, [r3, #0]
 8008762:	330c      	adds	r3, #12
 8008764:	7812      	ldrb	r2, [r2, #0]
 8008766:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr++;
 8008768:	68fb      	ldr	r3, [r7, #12]
 800876a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800876c:	1c5a      	adds	r2, r3, #1
 800876e:	68fb      	ldr	r3, [r7, #12]
 8008770:	639a      	str	r2, [r3, #56]	@ 0x38
          hspi->TxXferCount--;
 8008772:	68fb      	ldr	r3, [r7, #12]
 8008774:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008776:	b29b      	uxth	r3, r3
 8008778:	3b01      	subs	r3, #1
 800877a:	b29a      	uxth	r2, r3
 800877c:	68fb      	ldr	r3, [r7, #12]
 800877e:	87da      	strh	r2, [r3, #62]	@ 0x3e
        }
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 8008780:	2300      	movs	r3, #0
 8008782:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8008784:	68fb      	ldr	r3, [r7, #12]
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	689b      	ldr	r3, [r3, #8]
 800878a:	f003 0301 	and.w	r3, r3, #1
 800878e:	2b01      	cmp	r3, #1
 8008790:	d148      	bne.n	8008824 <HAL_SPI_TransmitReceive+0x3b4>
 8008792:	68fb      	ldr	r3, [r7, #12]
 8008794:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8008798:	b29b      	uxth	r3, r3
 800879a:	2b00      	cmp	r3, #0
 800879c:	d042      	beq.n	8008824 <HAL_SPI_TransmitReceive+0x3b4>
      {
        if (hspi->RxXferCount > 1U)
 800879e:	68fb      	ldr	r3, [r7, #12]
 80087a0:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80087a4:	b29b      	uxth	r3, r3
 80087a6:	2b01      	cmp	r3, #1
 80087a8:	d923      	bls.n	80087f2 <HAL_SPI_TransmitReceive+0x382>
        {
          *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80087aa:	68fb      	ldr	r3, [r7, #12]
 80087ac:	681b      	ldr	r3, [r3, #0]
 80087ae:	68da      	ldr	r2, [r3, #12]
 80087b0:	68fb      	ldr	r3, [r7, #12]
 80087b2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80087b4:	b292      	uxth	r2, r2
 80087b6:	801a      	strh	r2, [r3, #0]
          hspi->pRxBuffPtr += sizeof(uint16_t);
 80087b8:	68fb      	ldr	r3, [r7, #12]
 80087ba:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80087bc:	1c9a      	adds	r2, r3, #2
 80087be:	68fb      	ldr	r3, [r7, #12]
 80087c0:	641a      	str	r2, [r3, #64]	@ 0x40
          hspi->RxXferCount -= 2U;
 80087c2:	68fb      	ldr	r3, [r7, #12]
 80087c4:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80087c8:	b29b      	uxth	r3, r3
 80087ca:	3b02      	subs	r3, #2
 80087cc:	b29a      	uxth	r2, r3
 80087ce:	68fb      	ldr	r3, [r7, #12]
 80087d0:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
          if (hspi->RxXferCount <= 1U)
 80087d4:	68fb      	ldr	r3, [r7, #12]
 80087d6:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 80087da:	b29b      	uxth	r3, r3
 80087dc:	2b01      	cmp	r3, #1
 80087de:	d81f      	bhi.n	8008820 <HAL_SPI_TransmitReceive+0x3b0>
          {
            /* Set RX Fifo threshold before to switch on 8 bit data size */
            SET_BIT(hspi->Instance->CR2, SPI_RXFIFO_THRESHOLD);
 80087e0:	68fb      	ldr	r3, [r7, #12]
 80087e2:	681b      	ldr	r3, [r3, #0]
 80087e4:	685a      	ldr	r2, [r3, #4]
 80087e6:	68fb      	ldr	r3, [r7, #12]
 80087e8:	681b      	ldr	r3, [r3, #0]
 80087ea:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 80087ee:	605a      	str	r2, [r3, #4]
 80087f0:	e016      	b.n	8008820 <HAL_SPI_TransmitReceive+0x3b0>
          }
        }
        else
        {
          (*(uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80087f2:	68fb      	ldr	r3, [r7, #12]
 80087f4:	681b      	ldr	r3, [r3, #0]
 80087f6:	f103 020c 	add.w	r2, r3, #12
 80087fa:	68fb      	ldr	r3, [r7, #12]
 80087fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80087fe:	7812      	ldrb	r2, [r2, #0]
 8008800:	b2d2      	uxtb	r2, r2
 8008802:	701a      	strb	r2, [r3, #0]
          hspi->pRxBuffPtr++;
 8008804:	68fb      	ldr	r3, [r7, #12]
 8008806:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8008808:	1c5a      	adds	r2, r3, #1
 800880a:	68fb      	ldr	r3, [r7, #12]
 800880c:	641a      	str	r2, [r3, #64]	@ 0x40
          hspi->RxXferCount--;
 800880e:	68fb      	ldr	r3, [r7, #12]
 8008810:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8008814:	b29b      	uxth	r3, r3
 8008816:	3b01      	subs	r3, #1
 8008818:	b29a      	uxth	r2, r3
 800881a:	68fb      	ldr	r3, [r7, #12]
 800881c:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
        }
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8008820:	2301      	movs	r3, #1
 8008822:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8008824:	f7fc f984 	bl	8004b30 <HAL_GetTick>
 8008828:	4602      	mov	r2, r0
 800882a:	69fb      	ldr	r3, [r7, #28]
 800882c:	1ad3      	subs	r3, r2, r3
 800882e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008830:	429a      	cmp	r2, r3
 8008832:	d803      	bhi.n	800883c <HAL_SPI_TransmitReceive+0x3cc>
 8008834:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008836:	f1b3 3fff 	cmp.w	r3, #4294967295
 800883a:	d102      	bne.n	8008842 <HAL_SPI_TransmitReceive+0x3d2>
 800883c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800883e:	2b00      	cmp	r3, #0
 8008840:	d107      	bne.n	8008852 <HAL_SPI_TransmitReceive+0x3e2>
      {
        errorcode = HAL_TIMEOUT;
 8008842:	2303      	movs	r3, #3
 8008844:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        hspi->State = HAL_SPI_STATE_READY;
 8008848:	68fb      	ldr	r3, [r7, #12]
 800884a:	2201      	movs	r2, #1
 800884c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
        goto error;
 8008850:	e026      	b.n	80088a0 <HAL_SPI_TransmitReceive+0x430>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008852:	68fb      	ldr	r3, [r7, #12]
 8008854:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8008856:	b29b      	uxth	r3, r3
 8008858:	2b00      	cmp	r3, #0
 800885a:	f47f af57 	bne.w	800870c <HAL_SPI_TransmitReceive+0x29c>
 800885e:	68fb      	ldr	r3, [r7, #12]
 8008860:	f8b3 3046 	ldrh.w	r3, [r3, #70]	@ 0x46
 8008864:	b29b      	uxth	r3, r3
 8008866:	2b00      	cmp	r3, #0
 8008868:	f47f af50 	bne.w	800870c <HAL_SPI_TransmitReceive+0x29c>
    errorcode = HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800886c:	69fa      	ldr	r2, [r7, #28]
 800886e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8008870:	68f8      	ldr	r0, [r7, #12]
 8008872:	f000 f98d 	bl	8008b90 <SPI_EndRxTxTransaction>
 8008876:	4603      	mov	r3, r0
 8008878:	2b00      	cmp	r3, #0
 800887a:	d005      	beq.n	8008888 <HAL_SPI_TransmitReceive+0x418>
  {
    errorcode = HAL_ERROR;
 800887c:	2301      	movs	r3, #1
 800887e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008882:	68fb      	ldr	r3, [r7, #12]
 8008884:	2220      	movs	r2, #32
 8008886:	661a      	str	r2, [r3, #96]	@ 0x60
  }

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008888:	68fb      	ldr	r3, [r7, #12]
 800888a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800888c:	2b00      	cmp	r3, #0
 800888e:	d003      	beq.n	8008898 <HAL_SPI_TransmitReceive+0x428>
  {
    errorcode = HAL_ERROR;
 8008890:	2301      	movs	r3, #1
 8008892:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8008896:	e003      	b.n	80088a0 <HAL_SPI_TransmitReceive+0x430>
  }
  else
  {
    hspi->State = HAL_SPI_STATE_READY;
 8008898:	68fb      	ldr	r3, [r7, #12]
 800889a:	2201      	movs	r2, #1
 800889c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
  }
  
error :
  __HAL_UNLOCK(hspi);
 80088a0:	68fb      	ldr	r3, [r7, #12]
 80088a2:	2200      	movs	r2, #0
 80088a4:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
  return errorcode;
 80088a8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
}
 80088ac:	4618      	mov	r0, r3
 80088ae:	3728      	adds	r7, #40	@ 0x28
 80088b0:	46bd      	mov	sp, r7
 80088b2:	bd80      	pop	{r7, pc}

080088b4 <HAL_SPI_TxCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi)
{
 80088b4:	b480      	push	{r7}
 80088b6:	b083      	sub	sp, #12
 80088b8:	af00      	add	r7, sp, #0
 80088ba:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxCpltCallback should be implemented in the user file
   */
}
 80088bc:	bf00      	nop
 80088be:	370c      	adds	r7, #12
 80088c0:	46bd      	mov	sp, r7
 80088c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088c6:	4770      	bx	lr

080088c8 <HAL_SPI_RxCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef *hspi)
{
 80088c8:	b480      	push	{r7}
 80088ca:	b083      	sub	sp, #12
 80088cc:	af00      	add	r7, sp, #0
 80088ce:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxCpltCallback should be implemented in the user file
   */
}
 80088d0:	bf00      	nop
 80088d2:	370c      	adds	r7, #12
 80088d4:	46bd      	mov	sp, r7
 80088d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088da:	4770      	bx	lr

080088dc <HAL_SPI_TxRxCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxCpltCallback(SPI_HandleTypeDef *hspi)
{
 80088dc:	b480      	push	{r7}
 80088de:	b083      	sub	sp, #12
 80088e0:	af00      	add	r7, sp, #0
 80088e2:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxCpltCallback should be implemented in the user file
   */
}
 80088e4:	bf00      	nop
 80088e6:	370c      	adds	r7, #12
 80088e8:	46bd      	mov	sp, r7
 80088ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ee:	4770      	bx	lr

080088f0 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 80088f0:	b480      	push	{r7}
 80088f2:	b083      	sub	sp, #12
 80088f4:	af00      	add	r7, sp, #0
 80088f6:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 80088f8:	bf00      	nop
 80088fa:	370c      	adds	r7, #12
 80088fc:	46bd      	mov	sp, r7
 80088fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008902:	4770      	bx	lr

08008904 <HAL_SPI_RxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_RxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8008904:	b480      	push	{r7}
 8008906:	b083      	sub	sp, #12
 8008908:	af00      	add	r7, sp, #0
 800890a:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_RxHalfCpltCallback() should be implemented in the user file
   */
}
 800890c:	bf00      	nop
 800890e:	370c      	adds	r7, #12
 8008910:	46bd      	mov	sp, r7
 8008912:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008916:	4770      	bx	lr

08008918 <HAL_SPI_TxRxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxRxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8008918:	b480      	push	{r7}
 800891a:	b083      	sub	sp, #12
 800891c:	af00      	add	r7, sp, #0
 800891e:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxRxHalfCpltCallback() should be implemented in the user file
   */
}
 8008920:	bf00      	nop
 8008922:	370c      	adds	r7, #12
 8008924:	46bd      	mov	sp, r7
 8008926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800892a:	4770      	bx	lr

0800892c <HAL_SPI_ErrorCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi)
{
 800892c:	b480      	push	{r7}
 800892e:	b083      	sub	sp, #12
 8008930:	af00      	add	r7, sp, #0
 8008932:	6078      	str	r0, [r7, #4]
            the HAL_SPI_ErrorCallback should be implemented in the user file
   */
  /* NOTE : The ErrorCode parameter in the hspi handle is updated by the SPI processes
            and user can use HAL_SPI_GetError() API to check the latest error occurred
   */
}
 8008934:	bf00      	nop
 8008936:	370c      	adds	r7, #12
 8008938:	46bd      	mov	sp, r7
 800893a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800893e:	4770      	bx	lr

08008940 <HAL_SPI_AbortCpltCallback>:
  * @brief  SPI Abort Complete callback.
  * @param  hspi SPI handle.
  * @retval None
  */
__weak void HAL_SPI_AbortCpltCallback(SPI_HandleTypeDef *hspi)
{
 8008940:	b480      	push	{r7}
 8008942:	b083      	sub	sp, #12
 8008944:	af00      	add	r7, sp, #0
 8008946:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_AbortCpltCallback can be implemented in the user file.
   */
}
 8008948:	bf00      	nop
 800894a:	370c      	adds	r7, #12
 800894c:	46bd      	mov	sp, r7
 800894e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008952:	4770      	bx	lr

08008954 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8008954:	b580      	push	{r7, lr}
 8008956:	b088      	sub	sp, #32
 8008958:	af00      	add	r7, sp, #0
 800895a:	60f8      	str	r0, [r7, #12]
 800895c:	60b9      	str	r1, [r7, #8]
 800895e:	603b      	str	r3, [r7, #0]
 8008960:	4613      	mov	r3, r2
 8008962:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8008964:	f7fc f8e4 	bl	8004b30 <HAL_GetTick>
 8008968:	4602      	mov	r2, r0
 800896a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800896c:	1a9b      	subs	r3, r3, r2
 800896e:	683a      	ldr	r2, [r7, #0]
 8008970:	4413      	add	r3, r2
 8008972:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8008974:	f7fc f8dc 	bl	8004b30 <HAL_GetTick>
 8008978:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 800897a:	4b39      	ldr	r3, [pc, #228]	@ (8008a60 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 800897c:	681b      	ldr	r3, [r3, #0]
 800897e:	015b      	lsls	r3, r3, #5
 8008980:	0d1b      	lsrs	r3, r3, #20
 8008982:	69fa      	ldr	r2, [r7, #28]
 8008984:	fb02 f303 	mul.w	r3, r2, r3
 8008988:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 800898a:	e054      	b.n	8008a36 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 800898c:	683b      	ldr	r3, [r7, #0]
 800898e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008992:	d050      	beq.n	8008a36 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8008994:	f7fc f8cc 	bl	8004b30 <HAL_GetTick>
 8008998:	4602      	mov	r2, r0
 800899a:	69bb      	ldr	r3, [r7, #24]
 800899c:	1ad3      	subs	r3, r2, r3
 800899e:	69fa      	ldr	r2, [r7, #28]
 80089a0:	429a      	cmp	r2, r3
 80089a2:	d902      	bls.n	80089aa <SPI_WaitFlagStateUntilTimeout+0x56>
 80089a4:	69fb      	ldr	r3, [r7, #28]
 80089a6:	2b00      	cmp	r3, #0
 80089a8:	d13d      	bne.n	8008a26 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 80089aa:	68fb      	ldr	r3, [r7, #12]
 80089ac:	681b      	ldr	r3, [r3, #0]
 80089ae:	685a      	ldr	r2, [r3, #4]
 80089b0:	68fb      	ldr	r3, [r7, #12]
 80089b2:	681b      	ldr	r3, [r3, #0]
 80089b4:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80089b8:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80089ba:	68fb      	ldr	r3, [r7, #12]
 80089bc:	685b      	ldr	r3, [r3, #4]
 80089be:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80089c2:	d111      	bne.n	80089e8 <SPI_WaitFlagStateUntilTimeout+0x94>
 80089c4:	68fb      	ldr	r3, [r7, #12]
 80089c6:	689b      	ldr	r3, [r3, #8]
 80089c8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80089cc:	d004      	beq.n	80089d8 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 80089ce:	68fb      	ldr	r3, [r7, #12]
 80089d0:	689b      	ldr	r3, [r3, #8]
 80089d2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80089d6:	d107      	bne.n	80089e8 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 80089d8:	68fb      	ldr	r3, [r7, #12]
 80089da:	681b      	ldr	r3, [r3, #0]
 80089dc:	681a      	ldr	r2, [r3, #0]
 80089de:	68fb      	ldr	r3, [r7, #12]
 80089e0:	681b      	ldr	r3, [r3, #0]
 80089e2:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80089e6:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 80089e8:	68fb      	ldr	r3, [r7, #12]
 80089ea:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80089ec:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80089f0:	d10f      	bne.n	8008a12 <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 80089f2:	68fb      	ldr	r3, [r7, #12]
 80089f4:	681b      	ldr	r3, [r3, #0]
 80089f6:	681a      	ldr	r2, [r3, #0]
 80089f8:	68fb      	ldr	r3, [r7, #12]
 80089fa:	681b      	ldr	r3, [r3, #0]
 80089fc:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8008a00:	601a      	str	r2, [r3, #0]
 8008a02:	68fb      	ldr	r3, [r7, #12]
 8008a04:	681b      	ldr	r3, [r3, #0]
 8008a06:	681a      	ldr	r2, [r3, #0]
 8008a08:	68fb      	ldr	r3, [r7, #12]
 8008a0a:	681b      	ldr	r3, [r3, #0]
 8008a0c:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8008a10:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8008a12:	68fb      	ldr	r3, [r7, #12]
 8008a14:	2201      	movs	r2, #1
 8008a16:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8008a1a:	68fb      	ldr	r3, [r7, #12]
 8008a1c:	2200      	movs	r2, #0
 8008a1e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

        return HAL_TIMEOUT;
 8008a22:	2303      	movs	r3, #3
 8008a24:	e017      	b.n	8008a56 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8008a26:	697b      	ldr	r3, [r7, #20]
 8008a28:	2b00      	cmp	r3, #0
 8008a2a:	d101      	bne.n	8008a30 <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8008a2c:	2300      	movs	r3, #0
 8008a2e:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8008a30:	697b      	ldr	r3, [r7, #20]
 8008a32:	3b01      	subs	r3, #1
 8008a34:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8008a36:	68fb      	ldr	r3, [r7, #12]
 8008a38:	681b      	ldr	r3, [r3, #0]
 8008a3a:	689a      	ldr	r2, [r3, #8]
 8008a3c:	68bb      	ldr	r3, [r7, #8]
 8008a3e:	4013      	ands	r3, r2
 8008a40:	68ba      	ldr	r2, [r7, #8]
 8008a42:	429a      	cmp	r2, r3
 8008a44:	bf0c      	ite	eq
 8008a46:	2301      	moveq	r3, #1
 8008a48:	2300      	movne	r3, #0
 8008a4a:	b2db      	uxtb	r3, r3
 8008a4c:	461a      	mov	r2, r3
 8008a4e:	79fb      	ldrb	r3, [r7, #7]
 8008a50:	429a      	cmp	r2, r3
 8008a52:	d19b      	bne.n	800898c <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8008a54:	2300      	movs	r3, #0
}
 8008a56:	4618      	mov	r0, r3
 8008a58:	3720      	adds	r7, #32
 8008a5a:	46bd      	mov	sp, r7
 8008a5c:	bd80      	pop	{r7, pc}
 8008a5e:	bf00      	nop
 8008a60:	20000004 	.word	0x20000004

08008a64 <SPI_WaitFifoStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFifoStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Fifo, uint32_t State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8008a64:	b580      	push	{r7, lr}
 8008a66:	b08a      	sub	sp, #40	@ 0x28
 8008a68:	af00      	add	r7, sp, #0
 8008a6a:	60f8      	str	r0, [r7, #12]
 8008a6c:	60b9      	str	r1, [r7, #8]
 8008a6e:	607a      	str	r2, [r7, #4]
 8008a70:	603b      	str	r3, [r7, #0]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;
  __IO uint8_t  *ptmpreg8;
  __IO uint8_t  tmpreg8 = 0;
 8008a72:	2300      	movs	r3, #0
 8008a74:	75fb      	strb	r3, [r7, #23]

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout = Timeout - (HAL_GetTick() - Tickstart);
 8008a76:	f7fc f85b 	bl	8004b30 <HAL_GetTick>
 8008a7a:	4602      	mov	r2, r0
 8008a7c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8008a7e:	1a9b      	subs	r3, r3, r2
 8008a80:	683a      	ldr	r2, [r7, #0]
 8008a82:	4413      	add	r3, r2
 8008a84:	627b      	str	r3, [r7, #36]	@ 0x24
  tmp_tickstart = HAL_GetTick();
 8008a86:	f7fc f853 	bl	8004b30 <HAL_GetTick>
 8008a8a:	6238      	str	r0, [r7, #32]

  /* Initialize the 8bit temporary pointer */
  ptmpreg8 = (__IO uint8_t *)&hspi->Instance->DR;
 8008a8c:	68fb      	ldr	r3, [r7, #12]
 8008a8e:	681b      	ldr	r3, [r3, #0]
 8008a90:	330c      	adds	r3, #12
 8008a92:	61fb      	str	r3, [r7, #28]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 35U) >> 20U);
 8008a94:	4b3d      	ldr	r3, [pc, #244]	@ (8008b8c <SPI_WaitFifoStateUntilTimeout+0x128>)
 8008a96:	681a      	ldr	r2, [r3, #0]
 8008a98:	4613      	mov	r3, r2
 8008a9a:	009b      	lsls	r3, r3, #2
 8008a9c:	4413      	add	r3, r2
 8008a9e:	00da      	lsls	r2, r3, #3
 8008aa0:	1ad3      	subs	r3, r2, r3
 8008aa2:	0d1b      	lsrs	r3, r3, #20
 8008aa4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008aa6:	fb02 f303 	mul.w	r3, r2, r3
 8008aaa:	61bb      	str	r3, [r7, #24]

  while ((hspi->Instance->SR & Fifo) != State)
 8008aac:	e060      	b.n	8008b70 <SPI_WaitFifoStateUntilTimeout+0x10c>
  {
    if ((Fifo == SPI_SR_FRLVL) && (State == SPI_FRLVL_EMPTY))
 8008aae:	68bb      	ldr	r3, [r7, #8]
 8008ab0:	f5b3 6fc0 	cmp.w	r3, #1536	@ 0x600
 8008ab4:	d107      	bne.n	8008ac6 <SPI_WaitFifoStateUntilTimeout+0x62>
 8008ab6:	687b      	ldr	r3, [r7, #4]
 8008ab8:	2b00      	cmp	r3, #0
 8008aba:	d104      	bne.n	8008ac6 <SPI_WaitFifoStateUntilTimeout+0x62>
    {
      /* Flush Data Register by a blank read */
      tmpreg8 = *ptmpreg8;
 8008abc:	69fb      	ldr	r3, [r7, #28]
 8008abe:	781b      	ldrb	r3, [r3, #0]
 8008ac0:	b2db      	uxtb	r3, r3
 8008ac2:	75fb      	strb	r3, [r7, #23]
      /* To avoid GCC warning */
      UNUSED(tmpreg8);
 8008ac4:	7dfb      	ldrb	r3, [r7, #23]
    }

    if (Timeout != HAL_MAX_DELAY)
 8008ac6:	683b      	ldr	r3, [r7, #0]
 8008ac8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008acc:	d050      	beq.n	8008b70 <SPI_WaitFifoStateUntilTimeout+0x10c>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8008ace:	f7fc f82f 	bl	8004b30 <HAL_GetTick>
 8008ad2:	4602      	mov	r2, r0
 8008ad4:	6a3b      	ldr	r3, [r7, #32]
 8008ad6:	1ad3      	subs	r3, r2, r3
 8008ad8:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8008ada:	429a      	cmp	r2, r3
 8008adc:	d902      	bls.n	8008ae4 <SPI_WaitFifoStateUntilTimeout+0x80>
 8008ade:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008ae0:	2b00      	cmp	r3, #0
 8008ae2:	d13d      	bne.n	8008b60 <SPI_WaitFifoStateUntilTimeout+0xfc>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8008ae4:	68fb      	ldr	r3, [r7, #12]
 8008ae6:	681b      	ldr	r3, [r3, #0]
 8008ae8:	685a      	ldr	r2, [r3, #4]
 8008aea:	68fb      	ldr	r3, [r7, #12]
 8008aec:	681b      	ldr	r3, [r3, #0]
 8008aee:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8008af2:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008af4:	68fb      	ldr	r3, [r7, #12]
 8008af6:	685b      	ldr	r3, [r3, #4]
 8008af8:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8008afc:	d111      	bne.n	8008b22 <SPI_WaitFifoStateUntilTimeout+0xbe>
 8008afe:	68fb      	ldr	r3, [r7, #12]
 8008b00:	689b      	ldr	r3, [r3, #8]
 8008b02:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008b06:	d004      	beq.n	8008b12 <SPI_WaitFifoStateUntilTimeout+0xae>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8008b08:	68fb      	ldr	r3, [r7, #12]
 8008b0a:	689b      	ldr	r3, [r3, #8]
 8008b0c:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8008b10:	d107      	bne.n	8008b22 <SPI_WaitFifoStateUntilTimeout+0xbe>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8008b12:	68fb      	ldr	r3, [r7, #12]
 8008b14:	681b      	ldr	r3, [r3, #0]
 8008b16:	681a      	ldr	r2, [r3, #0]
 8008b18:	68fb      	ldr	r3, [r7, #12]
 8008b1a:	681b      	ldr	r3, [r3, #0]
 8008b1c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8008b20:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8008b22:	68fb      	ldr	r3, [r7, #12]
 8008b24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008b26:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008b2a:	d10f      	bne.n	8008b4c <SPI_WaitFifoStateUntilTimeout+0xe8>
        {
          SPI_RESET_CRC(hspi);
 8008b2c:	68fb      	ldr	r3, [r7, #12]
 8008b2e:	681b      	ldr	r3, [r3, #0]
 8008b30:	681a      	ldr	r2, [r3, #0]
 8008b32:	68fb      	ldr	r3, [r7, #12]
 8008b34:	681b      	ldr	r3, [r3, #0]
 8008b36:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8008b3a:	601a      	str	r2, [r3, #0]
 8008b3c:	68fb      	ldr	r3, [r7, #12]
 8008b3e:	681b      	ldr	r3, [r3, #0]
 8008b40:	681a      	ldr	r2, [r3, #0]
 8008b42:	68fb      	ldr	r3, [r7, #12]
 8008b44:	681b      	ldr	r3, [r3, #0]
 8008b46:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8008b4a:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8008b4c:	68fb      	ldr	r3, [r7, #12]
 8008b4e:	2201      	movs	r2, #1
 8008b50:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8008b54:	68fb      	ldr	r3, [r7, #12]
 8008b56:	2200      	movs	r2, #0
 8008b58:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c

        return HAL_TIMEOUT;
 8008b5c:	2303      	movs	r3, #3
 8008b5e:	e010      	b.n	8008b82 <SPI_WaitFifoStateUntilTimeout+0x11e>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8008b60:	69bb      	ldr	r3, [r7, #24]
 8008b62:	2b00      	cmp	r3, #0
 8008b64:	d101      	bne.n	8008b6a <SPI_WaitFifoStateUntilTimeout+0x106>
      {
        tmp_timeout = 0U;
 8008b66:	2300      	movs	r3, #0
 8008b68:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      count--;
 8008b6a:	69bb      	ldr	r3, [r7, #24]
 8008b6c:	3b01      	subs	r3, #1
 8008b6e:	61bb      	str	r3, [r7, #24]
  while ((hspi->Instance->SR & Fifo) != State)
 8008b70:	68fb      	ldr	r3, [r7, #12]
 8008b72:	681b      	ldr	r3, [r3, #0]
 8008b74:	689a      	ldr	r2, [r3, #8]
 8008b76:	68bb      	ldr	r3, [r7, #8]
 8008b78:	4013      	ands	r3, r2
 8008b7a:	687a      	ldr	r2, [r7, #4]
 8008b7c:	429a      	cmp	r2, r3
 8008b7e:	d196      	bne.n	8008aae <SPI_WaitFifoStateUntilTimeout+0x4a>
    }
  }

  return HAL_OK;
 8008b80:	2300      	movs	r3, #0
}
 8008b82:	4618      	mov	r0, r3
 8008b84:	3728      	adds	r7, #40	@ 0x28
 8008b86:	46bd      	mov	sp, r7
 8008b88:	bd80      	pop	{r7, pc}
 8008b8a:	bf00      	nop
 8008b8c:	20000004 	.word	0x20000004

08008b90 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8008b90:	b580      	push	{r7, lr}
 8008b92:	b088      	sub	sp, #32
 8008b94:	af02      	add	r7, sp, #8
 8008b96:	60f8      	str	r0, [r7, #12]
 8008b98:	60b9      	str	r1, [r7, #8]
 8008b9a:	607a      	str	r2, [r7, #4]
  /* Control if the TX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FTLVL, SPI_FTLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8008b9c:	687b      	ldr	r3, [r7, #4]
 8008b9e:	9300      	str	r3, [sp, #0]
 8008ba0:	68bb      	ldr	r3, [r7, #8]
 8008ba2:	2200      	movs	r2, #0
 8008ba4:	f44f 51c0 	mov.w	r1, #6144	@ 0x1800
 8008ba8:	68f8      	ldr	r0, [r7, #12]
 8008baa:	f7ff ff5b 	bl	8008a64 <SPI_WaitFifoStateUntilTimeout>
 8008bae:	4603      	mov	r3, r0
 8008bb0:	2b00      	cmp	r3, #0
 8008bb2:	d007      	beq.n	8008bc4 <SPI_EndRxTxTransaction+0x34>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008bb4:	68fb      	ldr	r3, [r7, #12]
 8008bb6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008bb8:	f043 0220 	orr.w	r2, r3, #32
 8008bbc:	68fb      	ldr	r3, [r7, #12]
 8008bbe:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 8008bc0:	2303      	movs	r3, #3
 8008bc2:	e046      	b.n	8008c52 <SPI_EndRxTxTransaction+0xc2>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8008bc4:	4b25      	ldr	r3, [pc, #148]	@ (8008c5c <SPI_EndRxTxTransaction+0xcc>)
 8008bc6:	681b      	ldr	r3, [r3, #0]
 8008bc8:	4a25      	ldr	r2, [pc, #148]	@ (8008c60 <SPI_EndRxTxTransaction+0xd0>)
 8008bca:	fba2 2303 	umull	r2, r3, r2, r3
 8008bce:	0d5b      	lsrs	r3, r3, #21
 8008bd0:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8008bd4:	fb02 f303 	mul.w	r3, r2, r3
 8008bd8:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008bda:	68fb      	ldr	r3, [r7, #12]
 8008bdc:	685b      	ldr	r3, [r3, #4]
 8008bde:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8008be2:	d112      	bne.n	8008c0a <SPI_EndRxTxTransaction+0x7a>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8008be4:	687b      	ldr	r3, [r7, #4]
 8008be6:	9300      	str	r3, [sp, #0]
 8008be8:	68bb      	ldr	r3, [r7, #8]
 8008bea:	2200      	movs	r2, #0
 8008bec:	2180      	movs	r1, #128	@ 0x80
 8008bee:	68f8      	ldr	r0, [r7, #12]
 8008bf0:	f7ff feb0 	bl	8008954 <SPI_WaitFlagStateUntilTimeout>
 8008bf4:	4603      	mov	r3, r0
 8008bf6:	2b00      	cmp	r3, #0
 8008bf8:	d016      	beq.n	8008c28 <SPI_EndRxTxTransaction+0x98>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008bfa:	68fb      	ldr	r3, [r7, #12]
 8008bfc:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008bfe:	f043 0220 	orr.w	r2, r3, #32
 8008c02:	68fb      	ldr	r3, [r7, #12]
 8008c04:	661a      	str	r2, [r3, #96]	@ 0x60
      return HAL_TIMEOUT;
 8008c06:	2303      	movs	r3, #3
 8008c08:	e023      	b.n	8008c52 <SPI_EndRxTxTransaction+0xc2>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8008c0a:	697b      	ldr	r3, [r7, #20]
 8008c0c:	2b00      	cmp	r3, #0
 8008c0e:	d00a      	beq.n	8008c26 <SPI_EndRxTxTransaction+0x96>
      {
        break;
      }
      count--;
 8008c10:	697b      	ldr	r3, [r7, #20]
 8008c12:	3b01      	subs	r3, #1
 8008c14:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8008c16:	68fb      	ldr	r3, [r7, #12]
 8008c18:	681b      	ldr	r3, [r3, #0]
 8008c1a:	689b      	ldr	r3, [r3, #8]
 8008c1c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008c20:	2b80      	cmp	r3, #128	@ 0x80
 8008c22:	d0f2      	beq.n	8008c0a <SPI_EndRxTxTransaction+0x7a>
 8008c24:	e000      	b.n	8008c28 <SPI_EndRxTxTransaction+0x98>
        break;
 8008c26:	bf00      	nop
  }


  /* Control if the RX fifo is empty */
  if (SPI_WaitFifoStateUntilTimeout(hspi, SPI_FLAG_FRLVL, SPI_FRLVL_EMPTY, Timeout, Tickstart) != HAL_OK)
 8008c28:	687b      	ldr	r3, [r7, #4]
 8008c2a:	9300      	str	r3, [sp, #0]
 8008c2c:	68bb      	ldr	r3, [r7, #8]
 8008c2e:	2200      	movs	r2, #0
 8008c30:	f44f 61c0 	mov.w	r1, #1536	@ 0x600
 8008c34:	68f8      	ldr	r0, [r7, #12]
 8008c36:	f7ff ff15 	bl	8008a64 <SPI_WaitFifoStateUntilTimeout>
 8008c3a:	4603      	mov	r3, r0
 8008c3c:	2b00      	cmp	r3, #0
 8008c3e:	d007      	beq.n	8008c50 <SPI_EndRxTxTransaction+0xc0>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008c40:	68fb      	ldr	r3, [r7, #12]
 8008c42:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8008c44:	f043 0220 	orr.w	r2, r3, #32
 8008c48:	68fb      	ldr	r3, [r7, #12]
 8008c4a:	661a      	str	r2, [r3, #96]	@ 0x60
    return HAL_TIMEOUT;
 8008c4c:	2303      	movs	r3, #3
 8008c4e:	e000      	b.n	8008c52 <SPI_EndRxTxTransaction+0xc2>
  }

  return HAL_OK;
 8008c50:	2300      	movs	r3, #0
}
 8008c52:	4618      	mov	r0, r3
 8008c54:	3718      	adds	r7, #24
 8008c56:	46bd      	mov	sp, r7
 8008c58:	bd80      	pop	{r7, pc}
 8008c5a:	bf00      	nop
 8008c5c:	20000004 	.word	0x20000004
 8008c60:	165e9f81 	.word	0x165e9f81

08008c64 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8008c64:	b580      	push	{r7, lr}
 8008c66:	b082      	sub	sp, #8
 8008c68:	af00      	add	r7, sp, #0
 8008c6a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	2b00      	cmp	r3, #0
 8008c70:	d101      	bne.n	8008c76 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8008c72:	2301      	movs	r3, #1
 8008c74:	e054      	b.n	8008d20 <HAL_TIM_Base_Init+0xbc>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008c76:	687b      	ldr	r3, [r7, #4]
 8008c78:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008c7c:	b2db      	uxtb	r3, r3
 8008c7e:	2b00      	cmp	r3, #0
 8008c80:	d111      	bne.n	8008ca6 <HAL_TIM_Base_Init+0x42>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008c82:	687b      	ldr	r3, [r7, #4]
 8008c84:	2200      	movs	r2, #0
 8008c86:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
    /* Reset interrupt callbacks to legacy weak callbacks */
    TIM_ResetCallback(htim);
 8008c8a:	6878      	ldr	r0, [r7, #4]
 8008c8c:	f001 fa08 	bl	800a0a0 <TIM_ResetCallback>

    if (htim->Base_MspInitCallback == NULL)
 8008c90:	687b      	ldr	r3, [r7, #4]
 8008c92:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008c94:	2b00      	cmp	r3, #0
 8008c96:	d102      	bne.n	8008c9e <HAL_TIM_Base_Init+0x3a>
    {
      htim->Base_MspInitCallback = HAL_TIM_Base_MspInit;
 8008c98:	687b      	ldr	r3, [r7, #4]
 8008c9a:	4a23      	ldr	r2, [pc, #140]	@ (8008d28 <HAL_TIM_Base_Init+0xc4>)
 8008c9c:	64da      	str	r2, [r3, #76]	@ 0x4c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
 8008c9e:	687b      	ldr	r3, [r7, #4]
 8008ca0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008ca2:	6878      	ldr	r0, [r7, #4]
 8008ca4:	4798      	blx	r3
    HAL_TIM_Base_MspInit(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008ca6:	687b      	ldr	r3, [r7, #4]
 8008ca8:	2202      	movs	r2, #2
 8008caa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	681a      	ldr	r2, [r3, #0]
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	3304      	adds	r3, #4
 8008cb6:	4619      	mov	r1, r3
 8008cb8:	4610      	mov	r0, r2
 8008cba:	f000 fe27 	bl	800990c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	2201      	movs	r2, #1
 8008cc2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	2201      	movs	r2, #1
 8008cca:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	2201      	movs	r2, #1
 8008cd2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008cd6:	687b      	ldr	r3, [r7, #4]
 8008cd8:	2201      	movs	r2, #1
 8008cda:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008cde:	687b      	ldr	r3, [r7, #4]
 8008ce0:	2201      	movs	r2, #1
 8008ce2:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008ce6:	687b      	ldr	r3, [r7, #4]
 8008ce8:	2201      	movs	r2, #1
 8008cea:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008cee:	687b      	ldr	r3, [r7, #4]
 8008cf0:	2201      	movs	r2, #1
 8008cf2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	2201      	movs	r2, #1
 8008cfa:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008cfe:	687b      	ldr	r3, [r7, #4]
 8008d00:	2201      	movs	r2, #1
 8008d02:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008d06:	687b      	ldr	r3, [r7, #4]
 8008d08:	2201      	movs	r2, #1
 8008d0a:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008d0e:	687b      	ldr	r3, [r7, #4]
 8008d10:	2201      	movs	r2, #1
 8008d12:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	2201      	movs	r2, #1
 8008d1a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8008d1e:	2300      	movs	r3, #0
}
 8008d20:	4618      	mov	r0, r3
 8008d22:	3708      	adds	r7, #8
 8008d24:	46bd      	mov	sp, r7
 8008d26:	bd80      	pop	{r7, pc}
 8008d28:	08001959 	.word	0x08001959

08008d2c <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8008d2c:	b580      	push	{r7, lr}
 8008d2e:	b082      	sub	sp, #8
 8008d30:	af00      	add	r7, sp, #0
 8008d32:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8008d34:	687b      	ldr	r3, [r7, #4]
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	d101      	bne.n	8008d3e <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8008d3a:	2301      	movs	r3, #1
 8008d3c:	e054      	b.n	8008de8 <HAL_TIM_PWM_Init+0xbc>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8008d3e:	687b      	ldr	r3, [r7, #4]
 8008d40:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8008d44:	b2db      	uxtb	r3, r3
 8008d46:	2b00      	cmp	r3, #0
 8008d48:	d111      	bne.n	8008d6e <HAL_TIM_PWM_Init+0x42>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8008d4a:	687b      	ldr	r3, [r7, #4]
 8008d4c:	2200      	movs	r2, #0
 8008d4e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
    /* Reset interrupt callbacks to legacy weak callbacks */
    TIM_ResetCallback(htim);
 8008d52:	6878      	ldr	r0, [r7, #4]
 8008d54:	f001 f9a4 	bl	800a0a0 <TIM_ResetCallback>

    if (htim->PWM_MspInitCallback == NULL)
 8008d58:	687b      	ldr	r3, [r7, #4]
 8008d5a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008d5c:	2b00      	cmp	r3, #0
 8008d5e:	d102      	bne.n	8008d66 <HAL_TIM_PWM_Init+0x3a>
    {
      htim->PWM_MspInitCallback = HAL_TIM_PWM_MspInit;
 8008d60:	687b      	ldr	r3, [r7, #4]
 8008d62:	4a23      	ldr	r2, [pc, #140]	@ (8008df0 <HAL_TIM_PWM_Init+0xc4>)
 8008d64:	665a      	str	r2, [r3, #100]	@ 0x64
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
 8008d66:	687b      	ldr	r3, [r7, #4]
 8008d68:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8008d6a:	6878      	ldr	r0, [r7, #4]
 8008d6c:	4798      	blx	r3
    HAL_TIM_PWM_MspInit(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008d6e:	687b      	ldr	r3, [r7, #4]
 8008d70:	2202      	movs	r2, #2
 8008d72:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8008d76:	687b      	ldr	r3, [r7, #4]
 8008d78:	681a      	ldr	r2, [r3, #0]
 8008d7a:	687b      	ldr	r3, [r7, #4]
 8008d7c:	3304      	adds	r3, #4
 8008d7e:	4619      	mov	r1, r3
 8008d80:	4610      	mov	r0, r2
 8008d82:	f000 fdc3 	bl	800990c <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8008d86:	687b      	ldr	r3, [r7, #4]
 8008d88:	2201      	movs	r2, #1
 8008d8a:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008d8e:	687b      	ldr	r3, [r7, #4]
 8008d90:	2201      	movs	r2, #1
 8008d92:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008d96:	687b      	ldr	r3, [r7, #4]
 8008d98:	2201      	movs	r2, #1
 8008d9a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008d9e:	687b      	ldr	r3, [r7, #4]
 8008da0:	2201      	movs	r2, #1
 8008da2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008da6:	687b      	ldr	r3, [r7, #4]
 8008da8:	2201      	movs	r2, #1
 8008daa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008dae:	687b      	ldr	r3, [r7, #4]
 8008db0:	2201      	movs	r2, #1
 8008db2:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008db6:	687b      	ldr	r3, [r7, #4]
 8008db8:	2201      	movs	r2, #1
 8008dba:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8008dbe:	687b      	ldr	r3, [r7, #4]
 8008dc0:	2201      	movs	r2, #1
 8008dc2:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8008dc6:	687b      	ldr	r3, [r7, #4]
 8008dc8:	2201      	movs	r2, #1
 8008dca:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8008dce:	687b      	ldr	r3, [r7, #4]
 8008dd0:	2201      	movs	r2, #1
 8008dd2:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	2201      	movs	r2, #1
 8008dda:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8008dde:	687b      	ldr	r3, [r7, #4]
 8008de0:	2201      	movs	r2, #1
 8008de2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8008de6:	2300      	movs	r3, #0
}
 8008de8:	4618      	mov	r0, r3
 8008dea:	3708      	adds	r7, #8
 8008dec:	46bd      	mov	sp, r7
 8008dee:	bd80      	pop	{r7, pc}
 8008df0:	08008df5 	.word	0x08008df5

08008df4 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8008df4:	b480      	push	{r7}
 8008df6:	b083      	sub	sp, #12
 8008df8:	af00      	add	r7, sp, #0
 8008dfa:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8008dfc:	bf00      	nop
 8008dfe:	370c      	adds	r7, #12
 8008e00:	46bd      	mov	sp, r7
 8008e02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e06:	4770      	bx	lr

08008e08 <HAL_TIM_PWM_Start_IT>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8008e08:	b580      	push	{r7, lr}
 8008e0a:	b084      	sub	sp, #16
 8008e0c:	af00      	add	r7, sp, #0
 8008e0e:	6078      	str	r0, [r7, #4]
 8008e10:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8008e12:	2300      	movs	r3, #0
 8008e14:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_CHANNEL(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8008e16:	683b      	ldr	r3, [r7, #0]
 8008e18:	2b00      	cmp	r3, #0
 8008e1a:	d109      	bne.n	8008e30 <HAL_TIM_PWM_Start_IT+0x28>
 8008e1c:	687b      	ldr	r3, [r7, #4]
 8008e1e:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8008e22:	b2db      	uxtb	r3, r3
 8008e24:	2b01      	cmp	r3, #1
 8008e26:	bf14      	ite	ne
 8008e28:	2301      	movne	r3, #1
 8008e2a:	2300      	moveq	r3, #0
 8008e2c:	b2db      	uxtb	r3, r3
 8008e2e:	e03c      	b.n	8008eaa <HAL_TIM_PWM_Start_IT+0xa2>
 8008e30:	683b      	ldr	r3, [r7, #0]
 8008e32:	2b04      	cmp	r3, #4
 8008e34:	d109      	bne.n	8008e4a <HAL_TIM_PWM_Start_IT+0x42>
 8008e36:	687b      	ldr	r3, [r7, #4]
 8008e38:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8008e3c:	b2db      	uxtb	r3, r3
 8008e3e:	2b01      	cmp	r3, #1
 8008e40:	bf14      	ite	ne
 8008e42:	2301      	movne	r3, #1
 8008e44:	2300      	moveq	r3, #0
 8008e46:	b2db      	uxtb	r3, r3
 8008e48:	e02f      	b.n	8008eaa <HAL_TIM_PWM_Start_IT+0xa2>
 8008e4a:	683b      	ldr	r3, [r7, #0]
 8008e4c:	2b08      	cmp	r3, #8
 8008e4e:	d109      	bne.n	8008e64 <HAL_TIM_PWM_Start_IT+0x5c>
 8008e50:	687b      	ldr	r3, [r7, #4]
 8008e52:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8008e56:	b2db      	uxtb	r3, r3
 8008e58:	2b01      	cmp	r3, #1
 8008e5a:	bf14      	ite	ne
 8008e5c:	2301      	movne	r3, #1
 8008e5e:	2300      	moveq	r3, #0
 8008e60:	b2db      	uxtb	r3, r3
 8008e62:	e022      	b.n	8008eaa <HAL_TIM_PWM_Start_IT+0xa2>
 8008e64:	683b      	ldr	r3, [r7, #0]
 8008e66:	2b0c      	cmp	r3, #12
 8008e68:	d109      	bne.n	8008e7e <HAL_TIM_PWM_Start_IT+0x76>
 8008e6a:	687b      	ldr	r3, [r7, #4]
 8008e6c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8008e70:	b2db      	uxtb	r3, r3
 8008e72:	2b01      	cmp	r3, #1
 8008e74:	bf14      	ite	ne
 8008e76:	2301      	movne	r3, #1
 8008e78:	2300      	moveq	r3, #0
 8008e7a:	b2db      	uxtb	r3, r3
 8008e7c:	e015      	b.n	8008eaa <HAL_TIM_PWM_Start_IT+0xa2>
 8008e7e:	683b      	ldr	r3, [r7, #0]
 8008e80:	2b10      	cmp	r3, #16
 8008e82:	d109      	bne.n	8008e98 <HAL_TIM_PWM_Start_IT+0x90>
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8008e8a:	b2db      	uxtb	r3, r3
 8008e8c:	2b01      	cmp	r3, #1
 8008e8e:	bf14      	ite	ne
 8008e90:	2301      	movne	r3, #1
 8008e92:	2300      	moveq	r3, #0
 8008e94:	b2db      	uxtb	r3, r3
 8008e96:	e008      	b.n	8008eaa <HAL_TIM_PWM_Start_IT+0xa2>
 8008e98:	687b      	ldr	r3, [r7, #4]
 8008e9a:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8008e9e:	b2db      	uxtb	r3, r3
 8008ea0:	2b01      	cmp	r3, #1
 8008ea2:	bf14      	ite	ne
 8008ea4:	2301      	movne	r3, #1
 8008ea6:	2300      	moveq	r3, #0
 8008ea8:	b2db      	uxtb	r3, r3
 8008eaa:	2b00      	cmp	r3, #0
 8008eac:	d001      	beq.n	8008eb2 <HAL_TIM_PWM_Start_IT+0xaa>
  {
    return HAL_ERROR;
 8008eae:	2301      	movs	r3, #1
 8008eb0:	e0dd      	b.n	800906e <HAL_TIM_PWM_Start_IT+0x266>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 8008eb2:	683b      	ldr	r3, [r7, #0]
 8008eb4:	2b00      	cmp	r3, #0
 8008eb6:	d104      	bne.n	8008ec2 <HAL_TIM_PWM_Start_IT+0xba>
 8008eb8:	687b      	ldr	r3, [r7, #4]
 8008eba:	2202      	movs	r2, #2
 8008ebc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8008ec0:	e023      	b.n	8008f0a <HAL_TIM_PWM_Start_IT+0x102>
 8008ec2:	683b      	ldr	r3, [r7, #0]
 8008ec4:	2b04      	cmp	r3, #4
 8008ec6:	d104      	bne.n	8008ed2 <HAL_TIM_PWM_Start_IT+0xca>
 8008ec8:	687b      	ldr	r3, [r7, #4]
 8008eca:	2202      	movs	r2, #2
 8008ecc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8008ed0:	e01b      	b.n	8008f0a <HAL_TIM_PWM_Start_IT+0x102>
 8008ed2:	683b      	ldr	r3, [r7, #0]
 8008ed4:	2b08      	cmp	r3, #8
 8008ed6:	d104      	bne.n	8008ee2 <HAL_TIM_PWM_Start_IT+0xda>
 8008ed8:	687b      	ldr	r3, [r7, #4]
 8008eda:	2202      	movs	r2, #2
 8008edc:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8008ee0:	e013      	b.n	8008f0a <HAL_TIM_PWM_Start_IT+0x102>
 8008ee2:	683b      	ldr	r3, [r7, #0]
 8008ee4:	2b0c      	cmp	r3, #12
 8008ee6:	d104      	bne.n	8008ef2 <HAL_TIM_PWM_Start_IT+0xea>
 8008ee8:	687b      	ldr	r3, [r7, #4]
 8008eea:	2202      	movs	r2, #2
 8008eec:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8008ef0:	e00b      	b.n	8008f0a <HAL_TIM_PWM_Start_IT+0x102>
 8008ef2:	683b      	ldr	r3, [r7, #0]
 8008ef4:	2b10      	cmp	r3, #16
 8008ef6:	d104      	bne.n	8008f02 <HAL_TIM_PWM_Start_IT+0xfa>
 8008ef8:	687b      	ldr	r3, [r7, #4]
 8008efa:	2202      	movs	r2, #2
 8008efc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8008f00:	e003      	b.n	8008f0a <HAL_TIM_PWM_Start_IT+0x102>
 8008f02:	687b      	ldr	r3, [r7, #4]
 8008f04:	2202      	movs	r2, #2
 8008f06:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43

  switch (Channel)
 8008f0a:	683b      	ldr	r3, [r7, #0]
 8008f0c:	2b0c      	cmp	r3, #12
 8008f0e:	d841      	bhi.n	8008f94 <HAL_TIM_PWM_Start_IT+0x18c>
 8008f10:	a201      	add	r2, pc, #4	@ (adr r2, 8008f18 <HAL_TIM_PWM_Start_IT+0x110>)
 8008f12:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f16:	bf00      	nop
 8008f18:	08008f4d 	.word	0x08008f4d
 8008f1c:	08008f95 	.word	0x08008f95
 8008f20:	08008f95 	.word	0x08008f95
 8008f24:	08008f95 	.word	0x08008f95
 8008f28:	08008f5f 	.word	0x08008f5f
 8008f2c:	08008f95 	.word	0x08008f95
 8008f30:	08008f95 	.word	0x08008f95
 8008f34:	08008f95 	.word	0x08008f95
 8008f38:	08008f71 	.word	0x08008f71
 8008f3c:	08008f95 	.word	0x08008f95
 8008f40:	08008f95 	.word	0x08008f95
 8008f44:	08008f95 	.word	0x08008f95
 8008f48:	08008f83 	.word	0x08008f83
  {
    case TIM_CHANNEL_1:
    {
      /* Enable the TIM Capture/Compare 1 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8008f4c:	687b      	ldr	r3, [r7, #4]
 8008f4e:	681b      	ldr	r3, [r3, #0]
 8008f50:	68da      	ldr	r2, [r3, #12]
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	681b      	ldr	r3, [r3, #0]
 8008f56:	f042 0202 	orr.w	r2, r2, #2
 8008f5a:	60da      	str	r2, [r3, #12]
      break;
 8008f5c:	e01d      	b.n	8008f9a <HAL_TIM_PWM_Start_IT+0x192>
    }

    case TIM_CHANNEL_2:
    {
      /* Enable the TIM Capture/Compare 2 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8008f5e:	687b      	ldr	r3, [r7, #4]
 8008f60:	681b      	ldr	r3, [r3, #0]
 8008f62:	68da      	ldr	r2, [r3, #12]
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	681b      	ldr	r3, [r3, #0]
 8008f68:	f042 0204 	orr.w	r2, r2, #4
 8008f6c:	60da      	str	r2, [r3, #12]
      break;
 8008f6e:	e014      	b.n	8008f9a <HAL_TIM_PWM_Start_IT+0x192>
    }

    case TIM_CHANNEL_3:
    {
      /* Enable the TIM Capture/Compare 3 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	681b      	ldr	r3, [r3, #0]
 8008f74:	68da      	ldr	r2, [r3, #12]
 8008f76:	687b      	ldr	r3, [r7, #4]
 8008f78:	681b      	ldr	r3, [r3, #0]
 8008f7a:	f042 0208 	orr.w	r2, r2, #8
 8008f7e:	60da      	str	r2, [r3, #12]
      break;
 8008f80:	e00b      	b.n	8008f9a <HAL_TIM_PWM_Start_IT+0x192>
    }

    case TIM_CHANNEL_4:
    {
      /* Enable the TIM Capture/Compare 4 interrupt */
      __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	68da      	ldr	r2, [r3, #12]
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	681b      	ldr	r3, [r3, #0]
 8008f8c:	f042 0210 	orr.w	r2, r2, #16
 8008f90:	60da      	str	r2, [r3, #12]
      break;
 8008f92:	e002      	b.n	8008f9a <HAL_TIM_PWM_Start_IT+0x192>
    }

    default:
      status = HAL_ERROR;
 8008f94:	2301      	movs	r3, #1
 8008f96:	73fb      	strb	r3, [r7, #15]
      break;
 8008f98:	bf00      	nop
  }

  if (status == HAL_OK)
 8008f9a:	7bfb      	ldrb	r3, [r7, #15]
 8008f9c:	2b00      	cmp	r3, #0
 8008f9e:	d165      	bne.n	800906c <HAL_TIM_PWM_Start_IT+0x264>
  {
    /* Enable the Capture compare channel */
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 8008fa0:	687b      	ldr	r3, [r7, #4]
 8008fa2:	681b      	ldr	r3, [r3, #0]
 8008fa4:	2201      	movs	r2, #1
 8008fa6:	6839      	ldr	r1, [r7, #0]
 8008fa8:	4618      	mov	r0, r3
 8008faa:	f001 f853 	bl	800a054 <TIM_CCxChannelCmd>

    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 8008fae:	687b      	ldr	r3, [r7, #4]
 8008fb0:	681b      	ldr	r3, [r3, #0]
 8008fb2:	4a31      	ldr	r2, [pc, #196]	@ (8009078 <HAL_TIM_PWM_Start_IT+0x270>)
 8008fb4:	4293      	cmp	r3, r2
 8008fb6:	d004      	beq.n	8008fc2 <HAL_TIM_PWM_Start_IT+0x1ba>
 8008fb8:	687b      	ldr	r3, [r7, #4]
 8008fba:	681b      	ldr	r3, [r3, #0]
 8008fbc:	4a2f      	ldr	r2, [pc, #188]	@ (800907c <HAL_TIM_PWM_Start_IT+0x274>)
 8008fbe:	4293      	cmp	r3, r2
 8008fc0:	d101      	bne.n	8008fc6 <HAL_TIM_PWM_Start_IT+0x1be>
 8008fc2:	2301      	movs	r3, #1
 8008fc4:	e000      	b.n	8008fc8 <HAL_TIM_PWM_Start_IT+0x1c0>
 8008fc6:	2300      	movs	r3, #0
 8008fc8:	2b00      	cmp	r3, #0
 8008fca:	d007      	beq.n	8008fdc <HAL_TIM_PWM_Start_IT+0x1d4>
    {
      /* Enable the main output */
      __HAL_TIM_MOE_ENABLE(htim);
 8008fcc:	687b      	ldr	r3, [r7, #4]
 8008fce:	681b      	ldr	r3, [r3, #0]
 8008fd0:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8008fd2:	687b      	ldr	r3, [r7, #4]
 8008fd4:	681b      	ldr	r3, [r3, #0]
 8008fd6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8008fda:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
    if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008fdc:	687b      	ldr	r3, [r7, #4]
 8008fde:	681b      	ldr	r3, [r3, #0]
 8008fe0:	4a25      	ldr	r2, [pc, #148]	@ (8009078 <HAL_TIM_PWM_Start_IT+0x270>)
 8008fe2:	4293      	cmp	r3, r2
 8008fe4:	d022      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 8008fe6:	687b      	ldr	r3, [r7, #4]
 8008fe8:	681b      	ldr	r3, [r3, #0]
 8008fea:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8008fee:	d01d      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 8008ff0:	687b      	ldr	r3, [r7, #4]
 8008ff2:	681b      	ldr	r3, [r3, #0]
 8008ff4:	4a22      	ldr	r2, [pc, #136]	@ (8009080 <HAL_TIM_PWM_Start_IT+0x278>)
 8008ff6:	4293      	cmp	r3, r2
 8008ff8:	d018      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 8008ffa:	687b      	ldr	r3, [r7, #4]
 8008ffc:	681b      	ldr	r3, [r3, #0]
 8008ffe:	4a21      	ldr	r2, [pc, #132]	@ (8009084 <HAL_TIM_PWM_Start_IT+0x27c>)
 8009000:	4293      	cmp	r3, r2
 8009002:	d013      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 8009004:	687b      	ldr	r3, [r7, #4]
 8009006:	681b      	ldr	r3, [r3, #0]
 8009008:	4a1f      	ldr	r2, [pc, #124]	@ (8009088 <HAL_TIM_PWM_Start_IT+0x280>)
 800900a:	4293      	cmp	r3, r2
 800900c:	d00e      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 800900e:	687b      	ldr	r3, [r7, #4]
 8009010:	681b      	ldr	r3, [r3, #0]
 8009012:	4a1a      	ldr	r2, [pc, #104]	@ (800907c <HAL_TIM_PWM_Start_IT+0x274>)
 8009014:	4293      	cmp	r3, r2
 8009016:	d009      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 8009018:	687b      	ldr	r3, [r7, #4]
 800901a:	681b      	ldr	r3, [r3, #0]
 800901c:	4a1b      	ldr	r2, [pc, #108]	@ (800908c <HAL_TIM_PWM_Start_IT+0x284>)
 800901e:	4293      	cmp	r3, r2
 8009020:	d004      	beq.n	800902c <HAL_TIM_PWM_Start_IT+0x224>
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	681b      	ldr	r3, [r3, #0]
 8009026:	4a1a      	ldr	r2, [pc, #104]	@ (8009090 <HAL_TIM_PWM_Start_IT+0x288>)
 8009028:	4293      	cmp	r3, r2
 800902a:	d115      	bne.n	8009058 <HAL_TIM_PWM_Start_IT+0x250>
    {
      tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	681b      	ldr	r3, [r3, #0]
 8009030:	689a      	ldr	r2, [r3, #8]
 8009032:	4b18      	ldr	r3, [pc, #96]	@ (8009094 <HAL_TIM_PWM_Start_IT+0x28c>)
 8009034:	4013      	ands	r3, r2
 8009036:	60bb      	str	r3, [r7, #8]
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009038:	68bb      	ldr	r3, [r7, #8]
 800903a:	2b06      	cmp	r3, #6
 800903c:	d015      	beq.n	800906a <HAL_TIM_PWM_Start_IT+0x262>
 800903e:	68bb      	ldr	r3, [r7, #8]
 8009040:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009044:	d011      	beq.n	800906a <HAL_TIM_PWM_Start_IT+0x262>
      {
        __HAL_TIM_ENABLE(htim);
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	681b      	ldr	r3, [r3, #0]
 800904a:	681a      	ldr	r2, [r3, #0]
 800904c:	687b      	ldr	r3, [r7, #4]
 800904e:	681b      	ldr	r3, [r3, #0]
 8009050:	f042 0201 	orr.w	r2, r2, #1
 8009054:	601a      	str	r2, [r3, #0]
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009056:	e008      	b.n	800906a <HAL_TIM_PWM_Start_IT+0x262>
      }
    }
    else
    {
      __HAL_TIM_ENABLE(htim);
 8009058:	687b      	ldr	r3, [r7, #4]
 800905a:	681b      	ldr	r3, [r3, #0]
 800905c:	681a      	ldr	r2, [r3, #0]
 800905e:	687b      	ldr	r3, [r7, #4]
 8009060:	681b      	ldr	r3, [r3, #0]
 8009062:	f042 0201 	orr.w	r2, r2, #1
 8009066:	601a      	str	r2, [r3, #0]
 8009068:	e000      	b.n	800906c <HAL_TIM_PWM_Start_IT+0x264>
      if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800906a:	bf00      	nop
    }
  }

  /* Return function status */
  return status;
 800906c:	7bfb      	ldrb	r3, [r7, #15]
}
 800906e:	4618      	mov	r0, r3
 8009070:	3710      	adds	r7, #16
 8009072:	46bd      	mov	sp, r7
 8009074:	bd80      	pop	{r7, pc}
 8009076:	bf00      	nop
 8009078:	40010000 	.word	0x40010000
 800907c:	40010400 	.word	0x40010400
 8009080:	40000400 	.word	0x40000400
 8009084:	40000800 	.word	0x40000800
 8009088:	40000c00 	.word	0x40000c00
 800908c:	40014000 	.word	0x40014000
 8009090:	40001800 	.word	0x40001800
 8009094:	00010007 	.word	0x00010007

08009098 <HAL_TIM_PWM_Stop_IT>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8009098:	b580      	push	{r7, lr}
 800909a:	b084      	sub	sp, #16
 800909c:	af00      	add	r7, sp, #0
 800909e:	6078      	str	r0, [r7, #4]
 80090a0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80090a2:	2300      	movs	r3, #0
 80090a4:	73fb      	strb	r3, [r7, #15]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_CHANNEL(htim->Instance, Channel));

  switch (Channel)
 80090a6:	683b      	ldr	r3, [r7, #0]
 80090a8:	2b0c      	cmp	r3, #12
 80090aa:	d841      	bhi.n	8009130 <HAL_TIM_PWM_Stop_IT+0x98>
 80090ac:	a201      	add	r2, pc, #4	@ (adr r2, 80090b4 <HAL_TIM_PWM_Stop_IT+0x1c>)
 80090ae:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80090b2:	bf00      	nop
 80090b4:	080090e9 	.word	0x080090e9
 80090b8:	08009131 	.word	0x08009131
 80090bc:	08009131 	.word	0x08009131
 80090c0:	08009131 	.word	0x08009131
 80090c4:	080090fb 	.word	0x080090fb
 80090c8:	08009131 	.word	0x08009131
 80090cc:	08009131 	.word	0x08009131
 80090d0:	08009131 	.word	0x08009131
 80090d4:	0800910d 	.word	0x0800910d
 80090d8:	08009131 	.word	0x08009131
 80090dc:	08009131 	.word	0x08009131
 80090e0:	08009131 	.word	0x08009131
 80090e4:	0800911f 	.word	0x0800911f
  {
    case TIM_CHANNEL_1:
    {
      /* Disable the TIM Capture/Compare 1 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 80090e8:	687b      	ldr	r3, [r7, #4]
 80090ea:	681b      	ldr	r3, [r3, #0]
 80090ec:	68da      	ldr	r2, [r3, #12]
 80090ee:	687b      	ldr	r3, [r7, #4]
 80090f0:	681b      	ldr	r3, [r3, #0]
 80090f2:	f022 0202 	bic.w	r2, r2, #2
 80090f6:	60da      	str	r2, [r3, #12]
      break;
 80090f8:	e01d      	b.n	8009136 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    case TIM_CHANNEL_2:
    {
      /* Disable the TIM Capture/Compare 2 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 80090fa:	687b      	ldr	r3, [r7, #4]
 80090fc:	681b      	ldr	r3, [r3, #0]
 80090fe:	68da      	ldr	r2, [r3, #12]
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	681b      	ldr	r3, [r3, #0]
 8009104:	f022 0204 	bic.w	r2, r2, #4
 8009108:	60da      	str	r2, [r3, #12]
      break;
 800910a:	e014      	b.n	8009136 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    case TIM_CHANNEL_3:
    {
      /* Disable the TIM Capture/Compare 3 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	68da      	ldr	r2, [r3, #12]
 8009112:	687b      	ldr	r3, [r7, #4]
 8009114:	681b      	ldr	r3, [r3, #0]
 8009116:	f022 0208 	bic.w	r2, r2, #8
 800911a:	60da      	str	r2, [r3, #12]
      break;
 800911c:	e00b      	b.n	8009136 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    case TIM_CHANNEL_4:
    {
      /* Disable the TIM Capture/Compare 4 interrupt */
      __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 800911e:	687b      	ldr	r3, [r7, #4]
 8009120:	681b      	ldr	r3, [r3, #0]
 8009122:	68da      	ldr	r2, [r3, #12]
 8009124:	687b      	ldr	r3, [r7, #4]
 8009126:	681b      	ldr	r3, [r3, #0]
 8009128:	f022 0210 	bic.w	r2, r2, #16
 800912c:	60da      	str	r2, [r3, #12]
      break;
 800912e:	e002      	b.n	8009136 <HAL_TIM_PWM_Stop_IT+0x9e>
    }

    default:
      status = HAL_ERROR;
 8009130:	2301      	movs	r3, #1
 8009132:	73fb      	strb	r3, [r7, #15]
      break;
 8009134:	bf00      	nop
  }

  if (status == HAL_OK)
 8009136:	7bfb      	ldrb	r3, [r7, #15]
 8009138:	2b00      	cmp	r3, #0
 800913a:	d171      	bne.n	8009220 <HAL_TIM_PWM_Stop_IT+0x188>
  {
    /* Disable the Capture compare channel */
    TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 800913c:	687b      	ldr	r3, [r7, #4]
 800913e:	681b      	ldr	r3, [r3, #0]
 8009140:	2200      	movs	r2, #0
 8009142:	6839      	ldr	r1, [r7, #0]
 8009144:	4618      	mov	r0, r3
 8009146:	f000 ff85 	bl	800a054 <TIM_CCxChannelCmd>

    if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	4a37      	ldr	r2, [pc, #220]	@ (800922c <HAL_TIM_PWM_Stop_IT+0x194>)
 8009150:	4293      	cmp	r3, r2
 8009152:	d004      	beq.n	800915e <HAL_TIM_PWM_Stop_IT+0xc6>
 8009154:	687b      	ldr	r3, [r7, #4]
 8009156:	681b      	ldr	r3, [r3, #0]
 8009158:	4a35      	ldr	r2, [pc, #212]	@ (8009230 <HAL_TIM_PWM_Stop_IT+0x198>)
 800915a:	4293      	cmp	r3, r2
 800915c:	d101      	bne.n	8009162 <HAL_TIM_PWM_Stop_IT+0xca>
 800915e:	2301      	movs	r3, #1
 8009160:	e000      	b.n	8009164 <HAL_TIM_PWM_Stop_IT+0xcc>
 8009162:	2300      	movs	r3, #0
 8009164:	2b00      	cmp	r3, #0
 8009166:	d017      	beq.n	8009198 <HAL_TIM_PWM_Stop_IT+0x100>
    {
      /* Disable the Main Output */
      __HAL_TIM_MOE_DISABLE(htim);
 8009168:	687b      	ldr	r3, [r7, #4]
 800916a:	681b      	ldr	r3, [r3, #0]
 800916c:	6a1a      	ldr	r2, [r3, #32]
 800916e:	f241 1311 	movw	r3, #4369	@ 0x1111
 8009172:	4013      	ands	r3, r2
 8009174:	2b00      	cmp	r3, #0
 8009176:	d10f      	bne.n	8009198 <HAL_TIM_PWM_Stop_IT+0x100>
 8009178:	687b      	ldr	r3, [r7, #4]
 800917a:	681b      	ldr	r3, [r3, #0]
 800917c:	6a1a      	ldr	r2, [r3, #32]
 800917e:	f240 4344 	movw	r3, #1092	@ 0x444
 8009182:	4013      	ands	r3, r2
 8009184:	2b00      	cmp	r3, #0
 8009186:	d107      	bne.n	8009198 <HAL_TIM_PWM_Stop_IT+0x100>
 8009188:	687b      	ldr	r3, [r7, #4]
 800918a:	681b      	ldr	r3, [r3, #0]
 800918c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800918e:	687b      	ldr	r3, [r7, #4]
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8009196:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Disable the Peripheral */
    __HAL_TIM_DISABLE(htim);
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	681b      	ldr	r3, [r3, #0]
 800919c:	6a1a      	ldr	r2, [r3, #32]
 800919e:	f241 1311 	movw	r3, #4369	@ 0x1111
 80091a2:	4013      	ands	r3, r2
 80091a4:	2b00      	cmp	r3, #0
 80091a6:	d10f      	bne.n	80091c8 <HAL_TIM_PWM_Stop_IT+0x130>
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	681b      	ldr	r3, [r3, #0]
 80091ac:	6a1a      	ldr	r2, [r3, #32]
 80091ae:	f240 4344 	movw	r3, #1092	@ 0x444
 80091b2:	4013      	ands	r3, r2
 80091b4:	2b00      	cmp	r3, #0
 80091b6:	d107      	bne.n	80091c8 <HAL_TIM_PWM_Stop_IT+0x130>
 80091b8:	687b      	ldr	r3, [r7, #4]
 80091ba:	681b      	ldr	r3, [r3, #0]
 80091bc:	681a      	ldr	r2, [r3, #0]
 80091be:	687b      	ldr	r3, [r7, #4]
 80091c0:	681b      	ldr	r3, [r3, #0]
 80091c2:	f022 0201 	bic.w	r2, r2, #1
 80091c6:	601a      	str	r2, [r3, #0]

    /* Set the TIM channel state */
    TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 80091c8:	683b      	ldr	r3, [r7, #0]
 80091ca:	2b00      	cmp	r3, #0
 80091cc:	d104      	bne.n	80091d8 <HAL_TIM_PWM_Stop_IT+0x140>
 80091ce:	687b      	ldr	r3, [r7, #4]
 80091d0:	2201      	movs	r2, #1
 80091d2:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80091d6:	e023      	b.n	8009220 <HAL_TIM_PWM_Stop_IT+0x188>
 80091d8:	683b      	ldr	r3, [r7, #0]
 80091da:	2b04      	cmp	r3, #4
 80091dc:	d104      	bne.n	80091e8 <HAL_TIM_PWM_Stop_IT+0x150>
 80091de:	687b      	ldr	r3, [r7, #4]
 80091e0:	2201      	movs	r2, #1
 80091e2:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80091e6:	e01b      	b.n	8009220 <HAL_TIM_PWM_Stop_IT+0x188>
 80091e8:	683b      	ldr	r3, [r7, #0]
 80091ea:	2b08      	cmp	r3, #8
 80091ec:	d104      	bne.n	80091f8 <HAL_TIM_PWM_Stop_IT+0x160>
 80091ee:	687b      	ldr	r3, [r7, #4]
 80091f0:	2201      	movs	r2, #1
 80091f2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80091f6:	e013      	b.n	8009220 <HAL_TIM_PWM_Stop_IT+0x188>
 80091f8:	683b      	ldr	r3, [r7, #0]
 80091fa:	2b0c      	cmp	r3, #12
 80091fc:	d104      	bne.n	8009208 <HAL_TIM_PWM_Stop_IT+0x170>
 80091fe:	687b      	ldr	r3, [r7, #4]
 8009200:	2201      	movs	r2, #1
 8009202:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009206:	e00b      	b.n	8009220 <HAL_TIM_PWM_Stop_IT+0x188>
 8009208:	683b      	ldr	r3, [r7, #0]
 800920a:	2b10      	cmp	r3, #16
 800920c:	d104      	bne.n	8009218 <HAL_TIM_PWM_Stop_IT+0x180>
 800920e:	687b      	ldr	r3, [r7, #4]
 8009210:	2201      	movs	r2, #1
 8009212:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8009216:	e003      	b.n	8009220 <HAL_TIM_PWM_Stop_IT+0x188>
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	2201      	movs	r2, #1
 800921c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  }

  /* Return function status */
  return status;
 8009220:	7bfb      	ldrb	r3, [r7, #15]
}
 8009222:	4618      	mov	r0, r3
 8009224:	3710      	adds	r7, #16
 8009226:	46bd      	mov	sp, r7
 8009228:	bd80      	pop	{r7, pc}
 800922a:	bf00      	nop
 800922c:	40010000 	.word	0x40010000
 8009230:	40010400 	.word	0x40010400

08009234 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 8009234:	b580      	push	{r7, lr}
 8009236:	b084      	sub	sp, #16
 8009238:	af00      	add	r7, sp, #0
 800923a:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 800923c:	687b      	ldr	r3, [r7, #4]
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	68db      	ldr	r3, [r3, #12]
 8009242:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 8009244:	687b      	ldr	r3, [r7, #4]
 8009246:	681b      	ldr	r3, [r3, #0]
 8009248:	691b      	ldr	r3, [r3, #16]
 800924a:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 800924c:	68bb      	ldr	r3, [r7, #8]
 800924e:	f003 0302 	and.w	r3, r3, #2
 8009252:	2b00      	cmp	r3, #0
 8009254:	d026      	beq.n	80092a4 <HAL_TIM_IRQHandler+0x70>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 8009256:	68fb      	ldr	r3, [r7, #12]
 8009258:	f003 0302 	and.w	r3, r3, #2
 800925c:	2b00      	cmp	r3, #0
 800925e:	d021      	beq.n	80092a4 <HAL_TIM_IRQHandler+0x70>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 8009260:	687b      	ldr	r3, [r7, #4]
 8009262:	681b      	ldr	r3, [r3, #0]
 8009264:	f06f 0202 	mvn.w	r2, #2
 8009268:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	2201      	movs	r2, #1
 800926e:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8009270:	687b      	ldr	r3, [r7, #4]
 8009272:	681b      	ldr	r3, [r3, #0]
 8009274:	699b      	ldr	r3, [r3, #24]
 8009276:	f003 0303 	and.w	r3, r3, #3
 800927a:	2b00      	cmp	r3, #0
 800927c:	d005      	beq.n	800928a <HAL_TIM_IRQHandler+0x56>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
 800927e:	687b      	ldr	r3, [r7, #4]
 8009280:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8009284:	6878      	ldr	r0, [r7, #4]
 8009286:	4798      	blx	r3
 8009288:	e009      	b.n	800929e <HAL_TIM_IRQHandler+0x6a>
        }
        /* Output compare event */
        else
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
 800928a:	687b      	ldr	r3, [r7, #4]
 800928c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8009290:	6878      	ldr	r0, [r7, #4]
 8009292:	4798      	blx	r3
          htim->PWM_PulseFinishedCallback(htim);
 8009294:	687b      	ldr	r3, [r7, #4]
 8009296:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800929a:	6878      	ldr	r0, [r7, #4]
 800929c:	4798      	blx	r3
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800929e:	687b      	ldr	r3, [r7, #4]
 80092a0:	2200      	movs	r2, #0
 80092a2:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 80092a4:	68bb      	ldr	r3, [r7, #8]
 80092a6:	f003 0304 	and.w	r3, r3, #4
 80092aa:	2b00      	cmp	r3, #0
 80092ac:	d026      	beq.n	80092fc <HAL_TIM_IRQHandler+0xc8>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 80092ae:	68fb      	ldr	r3, [r7, #12]
 80092b0:	f003 0304 	and.w	r3, r3, #4
 80092b4:	2b00      	cmp	r3, #0
 80092b6:	d021      	beq.n	80092fc <HAL_TIM_IRQHandler+0xc8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 80092b8:	687b      	ldr	r3, [r7, #4]
 80092ba:	681b      	ldr	r3, [r3, #0]
 80092bc:	f06f 0204 	mvn.w	r2, #4
 80092c0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80092c2:	687b      	ldr	r3, [r7, #4]
 80092c4:	2202      	movs	r2, #2
 80092c6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80092c8:	687b      	ldr	r3, [r7, #4]
 80092ca:	681b      	ldr	r3, [r3, #0]
 80092cc:	699b      	ldr	r3, [r3, #24]
 80092ce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80092d2:	2b00      	cmp	r3, #0
 80092d4:	d005      	beq.n	80092e2 <HAL_TIM_IRQHandler+0xae>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
 80092d6:	687b      	ldr	r3, [r7, #4]
 80092d8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80092dc:	6878      	ldr	r0, [r7, #4]
 80092de:	4798      	blx	r3
 80092e0:	e009      	b.n	80092f6 <HAL_TIM_IRQHandler+0xc2>
      }
      /* Output compare event */
      else
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80092e8:	6878      	ldr	r0, [r7, #4]
 80092ea:	4798      	blx	r3
        htim->PWM_PulseFinishedCallback(htim);
 80092ec:	687b      	ldr	r3, [r7, #4]
 80092ee:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80092f2:	6878      	ldr	r0, [r7, #4]
 80092f4:	4798      	blx	r3
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80092f6:	687b      	ldr	r3, [r7, #4]
 80092f8:	2200      	movs	r2, #0
 80092fa:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 80092fc:	68bb      	ldr	r3, [r7, #8]
 80092fe:	f003 0308 	and.w	r3, r3, #8
 8009302:	2b00      	cmp	r3, #0
 8009304:	d026      	beq.n	8009354 <HAL_TIM_IRQHandler+0x120>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8009306:	68fb      	ldr	r3, [r7, #12]
 8009308:	f003 0308 	and.w	r3, r3, #8
 800930c:	2b00      	cmp	r3, #0
 800930e:	d021      	beq.n	8009354 <HAL_TIM_IRQHandler+0x120>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 8009310:	687b      	ldr	r3, [r7, #4]
 8009312:	681b      	ldr	r3, [r3, #0]
 8009314:	f06f 0208 	mvn.w	r2, #8
 8009318:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800931a:	687b      	ldr	r3, [r7, #4]
 800931c:	2204      	movs	r2, #4
 800931e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009320:	687b      	ldr	r3, [r7, #4]
 8009322:	681b      	ldr	r3, [r3, #0]
 8009324:	69db      	ldr	r3, [r3, #28]
 8009326:	f003 0303 	and.w	r3, r3, #3
 800932a:	2b00      	cmp	r3, #0
 800932c:	d005      	beq.n	800933a <HAL_TIM_IRQHandler+0x106>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8009334:	6878      	ldr	r0, [r7, #4]
 8009336:	4798      	blx	r3
 8009338:	e009      	b.n	800934e <HAL_TIM_IRQHandler+0x11a>
      }
      /* Output compare event */
      else
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
 800933a:	687b      	ldr	r3, [r7, #4]
 800933c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8009340:	6878      	ldr	r0, [r7, #4]
 8009342:	4798      	blx	r3
        htim->PWM_PulseFinishedCallback(htim);
 8009344:	687b      	ldr	r3, [r7, #4]
 8009346:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 800934a:	6878      	ldr	r0, [r7, #4]
 800934c:	4798      	blx	r3
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800934e:	687b      	ldr	r3, [r7, #4]
 8009350:	2200      	movs	r2, #0
 8009352:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 8009354:	68bb      	ldr	r3, [r7, #8]
 8009356:	f003 0310 	and.w	r3, r3, #16
 800935a:	2b00      	cmp	r3, #0
 800935c:	d026      	beq.n	80093ac <HAL_TIM_IRQHandler+0x178>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 800935e:	68fb      	ldr	r3, [r7, #12]
 8009360:	f003 0310 	and.w	r3, r3, #16
 8009364:	2b00      	cmp	r3, #0
 8009366:	d021      	beq.n	80093ac <HAL_TIM_IRQHandler+0x178>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 8009368:	687b      	ldr	r3, [r7, #4]
 800936a:	681b      	ldr	r3, [r3, #0]
 800936c:	f06f 0210 	mvn.w	r2, #16
 8009370:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	2208      	movs	r2, #8
 8009376:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009378:	687b      	ldr	r3, [r7, #4]
 800937a:	681b      	ldr	r3, [r3, #0]
 800937c:	69db      	ldr	r3, [r3, #28]
 800937e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8009382:	2b00      	cmp	r3, #0
 8009384:	d005      	beq.n	8009392 <HAL_TIM_IRQHandler+0x15e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
 8009386:	687b      	ldr	r3, [r7, #4]
 8009388:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800938c:	6878      	ldr	r0, [r7, #4]
 800938e:	4798      	blx	r3
 8009390:	e009      	b.n	80093a6 <HAL_TIM_IRQHandler+0x172>
      }
      /* Output compare event */
      else
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
 8009392:	687b      	ldr	r3, [r7, #4]
 8009394:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8009398:	6878      	ldr	r0, [r7, #4]
 800939a:	4798      	blx	r3
        htim->PWM_PulseFinishedCallback(htim);
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80093a2:	6878      	ldr	r0, [r7, #4]
 80093a4:	4798      	blx	r3
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80093a6:	687b      	ldr	r3, [r7, #4]
 80093a8:	2200      	movs	r2, #0
 80093aa:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80093ac:	68bb      	ldr	r3, [r7, #8]
 80093ae:	f003 0301 	and.w	r3, r3, #1
 80093b2:	2b00      	cmp	r3, #0
 80093b4:	d00e      	beq.n	80093d4 <HAL_TIM_IRQHandler+0x1a0>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80093b6:	68fb      	ldr	r3, [r7, #12]
 80093b8:	f003 0301 	and.w	r3, r3, #1
 80093bc:	2b00      	cmp	r3, #0
 80093be:	d009      	beq.n	80093d4 <HAL_TIM_IRQHandler+0x1a0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 80093c0:	687b      	ldr	r3, [r7, #4]
 80093c2:	681b      	ldr	r3, [r3, #0]
 80093c4:	f06f 0201 	mvn.w	r2, #1
 80093c8:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
 80093ca:	687b      	ldr	r3, [r7, #4]
 80093cc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80093d0:	6878      	ldr	r0, [r7, #4]
 80093d2:	4798      	blx	r3
      HAL_TIM_PeriodElapsedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 80093d4:	68bb      	ldr	r3, [r7, #8]
 80093d6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80093da:	2b00      	cmp	r3, #0
 80093dc:	d104      	bne.n	80093e8 <HAL_TIM_IRQHandler+0x1b4>
      ((itflag & (TIM_FLAG_SYSTEM_BREAK)) == (TIM_FLAG_SYSTEM_BREAK)))
 80093de:	68bb      	ldr	r3, [r7, #8]
 80093e0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
 80093e4:	2b00      	cmp	r3, #0
 80093e6:	d00e      	beq.n	8009406 <HAL_TIM_IRQHandler+0x1d2>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 80093e8:	68fb      	ldr	r3, [r7, #12]
 80093ea:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80093ee:	2b00      	cmp	r3, #0
 80093f0:	d009      	beq.n	8009406 <HAL_TIM_IRQHandler+0x1d2>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
 80093f2:	687b      	ldr	r3, [r7, #4]
 80093f4:	681b      	ldr	r3, [r3, #0]
 80093f6:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
 80093fa:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
 80093fc:	687b      	ldr	r3, [r7, #4]
 80093fe:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8009402:	6878      	ldr	r0, [r7, #4]
 8009404:	4798      	blx	r3
      HAL_TIMEx_BreakCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break2 input event */
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
 8009406:	68bb      	ldr	r3, [r7, #8]
 8009408:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800940c:	2b00      	cmp	r3, #0
 800940e:	d00e      	beq.n	800942e <HAL_TIM_IRQHandler+0x1fa>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 8009410:	68fb      	ldr	r3, [r7, #12]
 8009412:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009416:	2b00      	cmp	r3, #0
 8009418:	d009      	beq.n	800942e <HAL_TIM_IRQHandler+0x1fa>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
 800941a:	687b      	ldr	r3, [r7, #4]
 800941c:	681b      	ldr	r3, [r3, #0]
 800941e:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8009422:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->Break2Callback(htim);
 8009424:	687b      	ldr	r3, [r7, #4]
 8009426:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
 800942a:	6878      	ldr	r0, [r7, #4]
 800942c:	4798      	blx	r3
      HAL_TIMEx_Break2Callback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 800942e:	68bb      	ldr	r3, [r7, #8]
 8009430:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009434:	2b00      	cmp	r3, #0
 8009436:	d00e      	beq.n	8009456 <HAL_TIM_IRQHandler+0x222>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8009438:	68fb      	ldr	r3, [r7, #12]
 800943a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800943e:	2b00      	cmp	r3, #0
 8009440:	d009      	beq.n	8009456 <HAL_TIM_IRQHandler+0x222>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 8009442:	687b      	ldr	r3, [r7, #4]
 8009444:	681b      	ldr	r3, [r3, #0]
 8009446:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800944a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
 800944c:	687b      	ldr	r3, [r7, #4]
 800944e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8009452:	6878      	ldr	r0, [r7, #4]
 8009454:	4798      	blx	r3
      HAL_TIM_TriggerCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 8009456:	68bb      	ldr	r3, [r7, #8]
 8009458:	f003 0320 	and.w	r3, r3, #32
 800945c:	2b00      	cmp	r3, #0
 800945e:	d00e      	beq.n	800947e <HAL_TIM_IRQHandler+0x24a>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8009460:	68fb      	ldr	r3, [r7, #12]
 8009462:	f003 0320 	and.w	r3, r3, #32
 8009466:	2b00      	cmp	r3, #0
 8009468:	d009      	beq.n	800947e <HAL_TIM_IRQHandler+0x24a>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 800946a:	687b      	ldr	r3, [r7, #4]
 800946c:	681b      	ldr	r3, [r3, #0]
 800946e:	f06f 0220 	mvn.w	r2, #32
 8009472:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800947a:	6878      	ldr	r0, [r7, #4]
 800947c:	4798      	blx	r3
#else
      HAL_TIMEx_CommutCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800947e:	bf00      	nop
 8009480:	3710      	adds	r7, #16
 8009482:	46bd      	mov	sp, r7
 8009484:	bd80      	pop	{r7, pc}
	...

08009488 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8009488:	b580      	push	{r7, lr}
 800948a:	b086      	sub	sp, #24
 800948c:	af00      	add	r7, sp, #0
 800948e:	60f8      	str	r0, [r7, #12]
 8009490:	60b9      	str	r1, [r7, #8]
 8009492:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8009494:	2300      	movs	r3, #0
 8009496:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8009498:	68fb      	ldr	r3, [r7, #12]
 800949a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800949e:	2b01      	cmp	r3, #1
 80094a0:	d101      	bne.n	80094a6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80094a2:	2302      	movs	r3, #2
 80094a4:	e0ff      	b.n	80096a6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 80094a6:	68fb      	ldr	r3, [r7, #12]
 80094a8:	2201      	movs	r2, #1
 80094aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 80094ae:	687b      	ldr	r3, [r7, #4]
 80094b0:	2b14      	cmp	r3, #20
 80094b2:	f200 80f0 	bhi.w	8009696 <HAL_TIM_PWM_ConfigChannel+0x20e>
 80094b6:	a201      	add	r2, pc, #4	@ (adr r2, 80094bc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80094b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80094bc:	08009511 	.word	0x08009511
 80094c0:	08009697 	.word	0x08009697
 80094c4:	08009697 	.word	0x08009697
 80094c8:	08009697 	.word	0x08009697
 80094cc:	08009551 	.word	0x08009551
 80094d0:	08009697 	.word	0x08009697
 80094d4:	08009697 	.word	0x08009697
 80094d8:	08009697 	.word	0x08009697
 80094dc:	08009593 	.word	0x08009593
 80094e0:	08009697 	.word	0x08009697
 80094e4:	08009697 	.word	0x08009697
 80094e8:	08009697 	.word	0x08009697
 80094ec:	080095d3 	.word	0x080095d3
 80094f0:	08009697 	.word	0x08009697
 80094f4:	08009697 	.word	0x08009697
 80094f8:	08009697 	.word	0x08009697
 80094fc:	08009615 	.word	0x08009615
 8009500:	08009697 	.word	0x08009697
 8009504:	08009697 	.word	0x08009697
 8009508:	08009697 	.word	0x08009697
 800950c:	08009655 	.word	0x08009655
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8009510:	68fb      	ldr	r3, [r7, #12]
 8009512:	681b      	ldr	r3, [r3, #0]
 8009514:	68b9      	ldr	r1, [r7, #8]
 8009516:	4618      	mov	r0, r3
 8009518:	f000 faa4 	bl	8009a64 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800951c:	68fb      	ldr	r3, [r7, #12]
 800951e:	681b      	ldr	r3, [r3, #0]
 8009520:	699a      	ldr	r2, [r3, #24]
 8009522:	68fb      	ldr	r3, [r7, #12]
 8009524:	681b      	ldr	r3, [r3, #0]
 8009526:	f042 0208 	orr.w	r2, r2, #8
 800952a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800952c:	68fb      	ldr	r3, [r7, #12]
 800952e:	681b      	ldr	r3, [r3, #0]
 8009530:	699a      	ldr	r2, [r3, #24]
 8009532:	68fb      	ldr	r3, [r7, #12]
 8009534:	681b      	ldr	r3, [r3, #0]
 8009536:	f022 0204 	bic.w	r2, r2, #4
 800953a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800953c:	68fb      	ldr	r3, [r7, #12]
 800953e:	681b      	ldr	r3, [r3, #0]
 8009540:	6999      	ldr	r1, [r3, #24]
 8009542:	68bb      	ldr	r3, [r7, #8]
 8009544:	691a      	ldr	r2, [r3, #16]
 8009546:	68fb      	ldr	r3, [r7, #12]
 8009548:	681b      	ldr	r3, [r3, #0]
 800954a:	430a      	orrs	r2, r1
 800954c:	619a      	str	r2, [r3, #24]
      break;
 800954e:	e0a5      	b.n	800969c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8009550:	68fb      	ldr	r3, [r7, #12]
 8009552:	681b      	ldr	r3, [r3, #0]
 8009554:	68b9      	ldr	r1, [r7, #8]
 8009556:	4618      	mov	r0, r3
 8009558:	f000 faf6 	bl	8009b48 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800955c:	68fb      	ldr	r3, [r7, #12]
 800955e:	681b      	ldr	r3, [r3, #0]
 8009560:	699a      	ldr	r2, [r3, #24]
 8009562:	68fb      	ldr	r3, [r7, #12]
 8009564:	681b      	ldr	r3, [r3, #0]
 8009566:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800956a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800956c:	68fb      	ldr	r3, [r7, #12]
 800956e:	681b      	ldr	r3, [r3, #0]
 8009570:	699a      	ldr	r2, [r3, #24]
 8009572:	68fb      	ldr	r3, [r7, #12]
 8009574:	681b      	ldr	r3, [r3, #0]
 8009576:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800957a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800957c:	68fb      	ldr	r3, [r7, #12]
 800957e:	681b      	ldr	r3, [r3, #0]
 8009580:	6999      	ldr	r1, [r3, #24]
 8009582:	68bb      	ldr	r3, [r7, #8]
 8009584:	691b      	ldr	r3, [r3, #16]
 8009586:	021a      	lsls	r2, r3, #8
 8009588:	68fb      	ldr	r3, [r7, #12]
 800958a:	681b      	ldr	r3, [r3, #0]
 800958c:	430a      	orrs	r2, r1
 800958e:	619a      	str	r2, [r3, #24]
      break;
 8009590:	e084      	b.n	800969c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8009592:	68fb      	ldr	r3, [r7, #12]
 8009594:	681b      	ldr	r3, [r3, #0]
 8009596:	68b9      	ldr	r1, [r7, #8]
 8009598:	4618      	mov	r0, r3
 800959a:	f000 fb4d 	bl	8009c38 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800959e:	68fb      	ldr	r3, [r7, #12]
 80095a0:	681b      	ldr	r3, [r3, #0]
 80095a2:	69da      	ldr	r2, [r3, #28]
 80095a4:	68fb      	ldr	r3, [r7, #12]
 80095a6:	681b      	ldr	r3, [r3, #0]
 80095a8:	f042 0208 	orr.w	r2, r2, #8
 80095ac:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 80095ae:	68fb      	ldr	r3, [r7, #12]
 80095b0:	681b      	ldr	r3, [r3, #0]
 80095b2:	69da      	ldr	r2, [r3, #28]
 80095b4:	68fb      	ldr	r3, [r7, #12]
 80095b6:	681b      	ldr	r3, [r3, #0]
 80095b8:	f022 0204 	bic.w	r2, r2, #4
 80095bc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 80095be:	68fb      	ldr	r3, [r7, #12]
 80095c0:	681b      	ldr	r3, [r3, #0]
 80095c2:	69d9      	ldr	r1, [r3, #28]
 80095c4:	68bb      	ldr	r3, [r7, #8]
 80095c6:	691a      	ldr	r2, [r3, #16]
 80095c8:	68fb      	ldr	r3, [r7, #12]
 80095ca:	681b      	ldr	r3, [r3, #0]
 80095cc:	430a      	orrs	r2, r1
 80095ce:	61da      	str	r2, [r3, #28]
      break;
 80095d0:	e064      	b.n	800969c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80095d2:	68fb      	ldr	r3, [r7, #12]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	68b9      	ldr	r1, [r7, #8]
 80095d8:	4618      	mov	r0, r3
 80095da:	f000 fba3 	bl	8009d24 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80095de:	68fb      	ldr	r3, [r7, #12]
 80095e0:	681b      	ldr	r3, [r3, #0]
 80095e2:	69da      	ldr	r2, [r3, #28]
 80095e4:	68fb      	ldr	r3, [r7, #12]
 80095e6:	681b      	ldr	r3, [r3, #0]
 80095e8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80095ec:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80095ee:	68fb      	ldr	r3, [r7, #12]
 80095f0:	681b      	ldr	r3, [r3, #0]
 80095f2:	69da      	ldr	r2, [r3, #28]
 80095f4:	68fb      	ldr	r3, [r7, #12]
 80095f6:	681b      	ldr	r3, [r3, #0]
 80095f8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80095fc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80095fe:	68fb      	ldr	r3, [r7, #12]
 8009600:	681b      	ldr	r3, [r3, #0]
 8009602:	69d9      	ldr	r1, [r3, #28]
 8009604:	68bb      	ldr	r3, [r7, #8]
 8009606:	691b      	ldr	r3, [r3, #16]
 8009608:	021a      	lsls	r2, r3, #8
 800960a:	68fb      	ldr	r3, [r7, #12]
 800960c:	681b      	ldr	r3, [r3, #0]
 800960e:	430a      	orrs	r2, r1
 8009610:	61da      	str	r2, [r3, #28]
      break;
 8009612:	e043      	b.n	800969c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 8009614:	68fb      	ldr	r3, [r7, #12]
 8009616:	681b      	ldr	r3, [r3, #0]
 8009618:	68b9      	ldr	r1, [r7, #8]
 800961a:	4618      	mov	r0, r3
 800961c:	f000 fbda 	bl	8009dd4 <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 8009620:	68fb      	ldr	r3, [r7, #12]
 8009622:	681b      	ldr	r3, [r3, #0]
 8009624:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8009626:	68fb      	ldr	r3, [r7, #12]
 8009628:	681b      	ldr	r3, [r3, #0]
 800962a:	f042 0208 	orr.w	r2, r2, #8
 800962e:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 8009630:	68fb      	ldr	r3, [r7, #12]
 8009632:	681b      	ldr	r3, [r3, #0]
 8009634:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8009636:	68fb      	ldr	r3, [r7, #12]
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	f022 0204 	bic.w	r2, r2, #4
 800963e:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 8009640:	68fb      	ldr	r3, [r7, #12]
 8009642:	681b      	ldr	r3, [r3, #0]
 8009644:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8009646:	68bb      	ldr	r3, [r7, #8]
 8009648:	691a      	ldr	r2, [r3, #16]
 800964a:	68fb      	ldr	r3, [r7, #12]
 800964c:	681b      	ldr	r3, [r3, #0]
 800964e:	430a      	orrs	r2, r1
 8009650:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
 8009652:	e023      	b.n	800969c <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 8009654:	68fb      	ldr	r3, [r7, #12]
 8009656:	681b      	ldr	r3, [r3, #0]
 8009658:	68b9      	ldr	r1, [r7, #8]
 800965a:	4618      	mov	r0, r3
 800965c:	f000 fc0c 	bl	8009e78 <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 8009660:	68fb      	ldr	r3, [r7, #12]
 8009662:	681b      	ldr	r3, [r3, #0]
 8009664:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8009666:	68fb      	ldr	r3, [r7, #12]
 8009668:	681b      	ldr	r3, [r3, #0]
 800966a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800966e:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 8009670:	68fb      	ldr	r3, [r7, #12]
 8009672:	681b      	ldr	r3, [r3, #0]
 8009674:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8009676:	68fb      	ldr	r3, [r7, #12]
 8009678:	681b      	ldr	r3, [r3, #0]
 800967a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800967e:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 8009680:	68fb      	ldr	r3, [r7, #12]
 8009682:	681b      	ldr	r3, [r3, #0]
 8009684:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8009686:	68bb      	ldr	r3, [r7, #8]
 8009688:	691b      	ldr	r3, [r3, #16]
 800968a:	021a      	lsls	r2, r3, #8
 800968c:	68fb      	ldr	r3, [r7, #12]
 800968e:	681b      	ldr	r3, [r3, #0]
 8009690:	430a      	orrs	r2, r1
 8009692:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
 8009694:	e002      	b.n	800969c <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 8009696:	2301      	movs	r3, #1
 8009698:	75fb      	strb	r3, [r7, #23]
      break;
 800969a:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800969c:	68fb      	ldr	r3, [r7, #12]
 800969e:	2200      	movs	r2, #0
 80096a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 80096a4:	7dfb      	ldrb	r3, [r7, #23]
}
 80096a6:	4618      	mov	r0, r3
 80096a8:	3718      	adds	r7, #24
 80096aa:	46bd      	mov	sp, r7
 80096ac:	bd80      	pop	{r7, pc}
 80096ae:	bf00      	nop

080096b0 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 80096b0:	b580      	push	{r7, lr}
 80096b2:	b084      	sub	sp, #16
 80096b4:	af00      	add	r7, sp, #0
 80096b6:	6078      	str	r0, [r7, #4]
 80096b8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80096ba:	2300      	movs	r3, #0
 80096bc:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80096c4:	2b01      	cmp	r3, #1
 80096c6:	d101      	bne.n	80096cc <HAL_TIM_ConfigClockSource+0x1c>
 80096c8:	2302      	movs	r3, #2
 80096ca:	e0b4      	b.n	8009836 <HAL_TIM_ConfigClockSource+0x186>
 80096cc:	687b      	ldr	r3, [r7, #4]
 80096ce:	2201      	movs	r2, #1
 80096d0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 80096d4:	687b      	ldr	r3, [r7, #4]
 80096d6:	2202      	movs	r2, #2
 80096d8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 80096dc:	687b      	ldr	r3, [r7, #4]
 80096de:	681b      	ldr	r3, [r3, #0]
 80096e0:	689b      	ldr	r3, [r3, #8]
 80096e2:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 80096e4:	68ba      	ldr	r2, [r7, #8]
 80096e6:	4b56      	ldr	r3, [pc, #344]	@ (8009840 <HAL_TIM_ConfigClockSource+0x190>)
 80096e8:	4013      	ands	r3, r2
 80096ea:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 80096ec:	68bb      	ldr	r3, [r7, #8]
 80096ee:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80096f2:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 80096f4:	687b      	ldr	r3, [r7, #4]
 80096f6:	681b      	ldr	r3, [r3, #0]
 80096f8:	68ba      	ldr	r2, [r7, #8]
 80096fa:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 80096fc:	683b      	ldr	r3, [r7, #0]
 80096fe:	681b      	ldr	r3, [r3, #0]
 8009700:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8009704:	d03e      	beq.n	8009784 <HAL_TIM_ConfigClockSource+0xd4>
 8009706:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800970a:	f200 8087 	bhi.w	800981c <HAL_TIM_ConfigClockSource+0x16c>
 800970e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009712:	f000 8086 	beq.w	8009822 <HAL_TIM_ConfigClockSource+0x172>
 8009716:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800971a:	d87f      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 800971c:	2b70      	cmp	r3, #112	@ 0x70
 800971e:	d01a      	beq.n	8009756 <HAL_TIM_ConfigClockSource+0xa6>
 8009720:	2b70      	cmp	r3, #112	@ 0x70
 8009722:	d87b      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 8009724:	2b60      	cmp	r3, #96	@ 0x60
 8009726:	d050      	beq.n	80097ca <HAL_TIM_ConfigClockSource+0x11a>
 8009728:	2b60      	cmp	r3, #96	@ 0x60
 800972a:	d877      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 800972c:	2b50      	cmp	r3, #80	@ 0x50
 800972e:	d03c      	beq.n	80097aa <HAL_TIM_ConfigClockSource+0xfa>
 8009730:	2b50      	cmp	r3, #80	@ 0x50
 8009732:	d873      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 8009734:	2b40      	cmp	r3, #64	@ 0x40
 8009736:	d058      	beq.n	80097ea <HAL_TIM_ConfigClockSource+0x13a>
 8009738:	2b40      	cmp	r3, #64	@ 0x40
 800973a:	d86f      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 800973c:	2b30      	cmp	r3, #48	@ 0x30
 800973e:	d064      	beq.n	800980a <HAL_TIM_ConfigClockSource+0x15a>
 8009740:	2b30      	cmp	r3, #48	@ 0x30
 8009742:	d86b      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 8009744:	2b20      	cmp	r3, #32
 8009746:	d060      	beq.n	800980a <HAL_TIM_ConfigClockSource+0x15a>
 8009748:	2b20      	cmp	r3, #32
 800974a:	d867      	bhi.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
 800974c:	2b00      	cmp	r3, #0
 800974e:	d05c      	beq.n	800980a <HAL_TIM_ConfigClockSource+0x15a>
 8009750:	2b10      	cmp	r3, #16
 8009752:	d05a      	beq.n	800980a <HAL_TIM_ConfigClockSource+0x15a>
 8009754:	e062      	b.n	800981c <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8009756:	687b      	ldr	r3, [r7, #4]
 8009758:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 800975a:	683b      	ldr	r3, [r7, #0]
 800975c:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800975e:	683b      	ldr	r3, [r7, #0]
 8009760:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8009762:	683b      	ldr	r3, [r7, #0]
 8009764:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8009766:	f000 fc55 	bl	800a014 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 800976a:	687b      	ldr	r3, [r7, #4]
 800976c:	681b      	ldr	r3, [r3, #0]
 800976e:	689b      	ldr	r3, [r3, #8]
 8009770:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8009772:	68bb      	ldr	r3, [r7, #8]
 8009774:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8009778:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 800977a:	687b      	ldr	r3, [r7, #4]
 800977c:	681b      	ldr	r3, [r3, #0]
 800977e:	68ba      	ldr	r2, [r7, #8]
 8009780:	609a      	str	r2, [r3, #8]
      break;
 8009782:	e04f      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 8009788:	683b      	ldr	r3, [r7, #0]
 800978a:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 800978c:	683b      	ldr	r3, [r7, #0]
 800978e:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 8009790:	683b      	ldr	r3, [r7, #0]
 8009792:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 8009794:	f000 fc3e 	bl	800a014 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8009798:	687b      	ldr	r3, [r7, #4]
 800979a:	681b      	ldr	r3, [r3, #0]
 800979c:	689a      	ldr	r2, [r3, #8]
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	681b      	ldr	r3, [r3, #0]
 80097a2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 80097a6:	609a      	str	r2, [r3, #8]
      break;
 80097a8:	e03c      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80097aa:	687b      	ldr	r3, [r7, #4]
 80097ac:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80097ae:	683b      	ldr	r3, [r7, #0]
 80097b0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80097b2:	683b      	ldr	r3, [r7, #0]
 80097b4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80097b6:	461a      	mov	r2, r3
 80097b8:	f000 fbb2 	bl	8009f20 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 80097bc:	687b      	ldr	r3, [r7, #4]
 80097be:	681b      	ldr	r3, [r3, #0]
 80097c0:	2150      	movs	r1, #80	@ 0x50
 80097c2:	4618      	mov	r0, r3
 80097c4:	f000 fc0b 	bl	8009fde <TIM_ITRx_SetConfig>
      break;
 80097c8:	e02c      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 80097ca:	687b      	ldr	r3, [r7, #4]
 80097cc:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80097ce:	683b      	ldr	r3, [r7, #0]
 80097d0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80097d2:	683b      	ldr	r3, [r7, #0]
 80097d4:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 80097d6:	461a      	mov	r2, r3
 80097d8:	f000 fbd1 	bl	8009f7e <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 80097dc:	687b      	ldr	r3, [r7, #4]
 80097de:	681b      	ldr	r3, [r3, #0]
 80097e0:	2160      	movs	r1, #96	@ 0x60
 80097e2:	4618      	mov	r0, r3
 80097e4:	f000 fbfb 	bl	8009fde <TIM_ITRx_SetConfig>
      break;
 80097e8:	e01c      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 80097ee:	683b      	ldr	r3, [r7, #0]
 80097f0:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 80097f2:	683b      	ldr	r3, [r7, #0]
 80097f4:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 80097f6:	461a      	mov	r2, r3
 80097f8:	f000 fb92 	bl	8009f20 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 80097fc:	687b      	ldr	r3, [r7, #4]
 80097fe:	681b      	ldr	r3, [r3, #0]
 8009800:	2140      	movs	r1, #64	@ 0x40
 8009802:	4618      	mov	r0, r3
 8009804:	f000 fbeb 	bl	8009fde <TIM_ITRx_SetConfig>
      break;
 8009808:	e00c      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 800980a:	687b      	ldr	r3, [r7, #4]
 800980c:	681a      	ldr	r2, [r3, #0]
 800980e:	683b      	ldr	r3, [r7, #0]
 8009810:	681b      	ldr	r3, [r3, #0]
 8009812:	4619      	mov	r1, r3
 8009814:	4610      	mov	r0, r2
 8009816:	f000 fbe2 	bl	8009fde <TIM_ITRx_SetConfig>
      break;
 800981a:	e003      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 800981c:	2301      	movs	r3, #1
 800981e:	73fb      	strb	r3, [r7, #15]
      break;
 8009820:	e000      	b.n	8009824 <HAL_TIM_ConfigClockSource+0x174>
      break;
 8009822:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8009824:	687b      	ldr	r3, [r7, #4]
 8009826:	2201      	movs	r2, #1
 8009828:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 800982c:	687b      	ldr	r3, [r7, #4]
 800982e:	2200      	movs	r2, #0
 8009830:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8009834:	7bfb      	ldrb	r3, [r7, #15]
}
 8009836:	4618      	mov	r0, r3
 8009838:	3710      	adds	r7, #16
 800983a:	46bd      	mov	sp, r7
 800983c:	bd80      	pop	{r7, pc}
 800983e:	bf00      	nop
 8009840:	fffeff88 	.word	0xfffeff88

08009844 <HAL_TIM_PeriodElapsedCallback>:
  * @brief  Period elapsed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 8009844:	b480      	push	{r7}
 8009846:	b083      	sub	sp, #12
 8009848:	af00      	add	r7, sp, #0
 800984a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
}
 800984c:	bf00      	nop
 800984e:	370c      	adds	r7, #12
 8009850:	46bd      	mov	sp, r7
 8009852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009856:	4770      	bx	lr

08009858 <HAL_TIM_PeriodElapsedHalfCpltCallback>:
  * @brief  Period elapsed half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 8009858:	b480      	push	{r7}
 800985a:	b083      	sub	sp, #12
 800985c:	af00      	add	r7, sp, #0
 800985e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedHalfCpltCallback could be implemented in the user file
   */
}
 8009860:	bf00      	nop
 8009862:	370c      	adds	r7, #12
 8009864:	46bd      	mov	sp, r7
 8009866:	f85d 7b04 	ldr.w	r7, [sp], #4
 800986a:	4770      	bx	lr

0800986c <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800986c:	b480      	push	{r7}
 800986e:	b083      	sub	sp, #12
 8009870:	af00      	add	r7, sp, #0
 8009872:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8009874:	bf00      	nop
 8009876:	370c      	adds	r7, #12
 8009878:	46bd      	mov	sp, r7
 800987a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800987e:	4770      	bx	lr

08009880 <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 8009880:	b480      	push	{r7}
 8009882:	b083      	sub	sp, #12
 8009884:	af00      	add	r7, sp, #0
 8009886:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8009888:	bf00      	nop
 800988a:	370c      	adds	r7, #12
 800988c:	46bd      	mov	sp, r7
 800988e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009892:	4770      	bx	lr

08009894 <HAL_TIM_IC_CaptureHalfCpltCallback>:
  * @brief  Input Capture half complete callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 8009894:	b480      	push	{r7}
 8009896:	b083      	sub	sp, #12
 8009898:	af00      	add	r7, sp, #0
 800989a:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureHalfCpltCallback could be implemented in the user file
   */
}
 800989c:	bf00      	nop
 800989e:	370c      	adds	r7, #12
 80098a0:	46bd      	mov	sp, r7
 80098a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098a6:	4770      	bx	lr

080098a8 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80098a8:	b480      	push	{r7}
 80098aa:	b083      	sub	sp, #12
 80098ac:	af00      	add	r7, sp, #0
 80098ae:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80098b0:	bf00      	nop
 80098b2:	370c      	adds	r7, #12
 80098b4:	46bd      	mov	sp, r7
 80098b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ba:	4770      	bx	lr

080098bc <HAL_TIM_PWM_PulseFinishedHalfCpltCallback>:
  * @brief  PWM Pulse finished half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 80098bc:	b480      	push	{r7}
 80098be:	b083      	sub	sp, #12
 80098c0:	af00      	add	r7, sp, #0
 80098c2:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedHalfCpltCallback could be implemented in the user file
   */
}
 80098c4:	bf00      	nop
 80098c6:	370c      	adds	r7, #12
 80098c8:	46bd      	mov	sp, r7
 80098ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ce:	4770      	bx	lr

080098d0 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80098d0:	b480      	push	{r7}
 80098d2:	b083      	sub	sp, #12
 80098d4:	af00      	add	r7, sp, #0
 80098d6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80098d8:	bf00      	nop
 80098da:	370c      	adds	r7, #12
 80098dc:	46bd      	mov	sp, r7
 80098de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098e2:	4770      	bx	lr

080098e4 <HAL_TIM_TriggerHalfCpltCallback>:
  * @brief  Hall Trigger detection half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 80098e4:	b480      	push	{r7}
 80098e6:	b083      	sub	sp, #12
 80098e8:	af00      	add	r7, sp, #0
 80098ea:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerHalfCpltCallback could be implemented in the user file
   */
}
 80098ec:	bf00      	nop
 80098ee:	370c      	adds	r7, #12
 80098f0:	46bd      	mov	sp, r7
 80098f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098f6:	4770      	bx	lr

080098f8 <HAL_TIM_ErrorCallback>:
  * @brief  Timer error callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
{
 80098f8:	b480      	push	{r7}
 80098fa:	b083      	sub	sp, #12
 80098fc:	af00      	add	r7, sp, #0
 80098fe:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_ErrorCallback could be implemented in the user file
   */
}
 8009900:	bf00      	nop
 8009902:	370c      	adds	r7, #12
 8009904:	46bd      	mov	sp, r7
 8009906:	f85d 7b04 	ldr.w	r7, [sp], #4
 800990a:	4770      	bx	lr

0800990c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 800990c:	b480      	push	{r7}
 800990e:	b085      	sub	sp, #20
 8009910:	af00      	add	r7, sp, #0
 8009912:	6078      	str	r0, [r7, #4]
 8009914:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	681b      	ldr	r3, [r3, #0]
 800991a:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800991c:	687b      	ldr	r3, [r7, #4]
 800991e:	4a46      	ldr	r2, [pc, #280]	@ (8009a38 <TIM_Base_SetConfig+0x12c>)
 8009920:	4293      	cmp	r3, r2
 8009922:	d013      	beq.n	800994c <TIM_Base_SetConfig+0x40>
 8009924:	687b      	ldr	r3, [r7, #4]
 8009926:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800992a:	d00f      	beq.n	800994c <TIM_Base_SetConfig+0x40>
 800992c:	687b      	ldr	r3, [r7, #4]
 800992e:	4a43      	ldr	r2, [pc, #268]	@ (8009a3c <TIM_Base_SetConfig+0x130>)
 8009930:	4293      	cmp	r3, r2
 8009932:	d00b      	beq.n	800994c <TIM_Base_SetConfig+0x40>
 8009934:	687b      	ldr	r3, [r7, #4]
 8009936:	4a42      	ldr	r2, [pc, #264]	@ (8009a40 <TIM_Base_SetConfig+0x134>)
 8009938:	4293      	cmp	r3, r2
 800993a:	d007      	beq.n	800994c <TIM_Base_SetConfig+0x40>
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	4a41      	ldr	r2, [pc, #260]	@ (8009a44 <TIM_Base_SetConfig+0x138>)
 8009940:	4293      	cmp	r3, r2
 8009942:	d003      	beq.n	800994c <TIM_Base_SetConfig+0x40>
 8009944:	687b      	ldr	r3, [r7, #4]
 8009946:	4a40      	ldr	r2, [pc, #256]	@ (8009a48 <TIM_Base_SetConfig+0x13c>)
 8009948:	4293      	cmp	r3, r2
 800994a:	d108      	bne.n	800995e <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800994c:	68fb      	ldr	r3, [r7, #12]
 800994e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009952:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8009954:	683b      	ldr	r3, [r7, #0]
 8009956:	685b      	ldr	r3, [r3, #4]
 8009958:	68fa      	ldr	r2, [r7, #12]
 800995a:	4313      	orrs	r3, r2
 800995c:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800995e:	687b      	ldr	r3, [r7, #4]
 8009960:	4a35      	ldr	r2, [pc, #212]	@ (8009a38 <TIM_Base_SetConfig+0x12c>)
 8009962:	4293      	cmp	r3, r2
 8009964:	d02b      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 8009966:	687b      	ldr	r3, [r7, #4]
 8009968:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800996c:	d027      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	4a32      	ldr	r2, [pc, #200]	@ (8009a3c <TIM_Base_SetConfig+0x130>)
 8009972:	4293      	cmp	r3, r2
 8009974:	d023      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 8009976:	687b      	ldr	r3, [r7, #4]
 8009978:	4a31      	ldr	r2, [pc, #196]	@ (8009a40 <TIM_Base_SetConfig+0x134>)
 800997a:	4293      	cmp	r3, r2
 800997c:	d01f      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 800997e:	687b      	ldr	r3, [r7, #4]
 8009980:	4a30      	ldr	r2, [pc, #192]	@ (8009a44 <TIM_Base_SetConfig+0x138>)
 8009982:	4293      	cmp	r3, r2
 8009984:	d01b      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 8009986:	687b      	ldr	r3, [r7, #4]
 8009988:	4a2f      	ldr	r2, [pc, #188]	@ (8009a48 <TIM_Base_SetConfig+0x13c>)
 800998a:	4293      	cmp	r3, r2
 800998c:	d017      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 800998e:	687b      	ldr	r3, [r7, #4]
 8009990:	4a2e      	ldr	r2, [pc, #184]	@ (8009a4c <TIM_Base_SetConfig+0x140>)
 8009992:	4293      	cmp	r3, r2
 8009994:	d013      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 8009996:	687b      	ldr	r3, [r7, #4]
 8009998:	4a2d      	ldr	r2, [pc, #180]	@ (8009a50 <TIM_Base_SetConfig+0x144>)
 800999a:	4293      	cmp	r3, r2
 800999c:	d00f      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 800999e:	687b      	ldr	r3, [r7, #4]
 80099a0:	4a2c      	ldr	r2, [pc, #176]	@ (8009a54 <TIM_Base_SetConfig+0x148>)
 80099a2:	4293      	cmp	r3, r2
 80099a4:	d00b      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 80099a6:	687b      	ldr	r3, [r7, #4]
 80099a8:	4a2b      	ldr	r2, [pc, #172]	@ (8009a58 <TIM_Base_SetConfig+0x14c>)
 80099aa:	4293      	cmp	r3, r2
 80099ac:	d007      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 80099ae:	687b      	ldr	r3, [r7, #4]
 80099b0:	4a2a      	ldr	r2, [pc, #168]	@ (8009a5c <TIM_Base_SetConfig+0x150>)
 80099b2:	4293      	cmp	r3, r2
 80099b4:	d003      	beq.n	80099be <TIM_Base_SetConfig+0xb2>
 80099b6:	687b      	ldr	r3, [r7, #4]
 80099b8:	4a29      	ldr	r2, [pc, #164]	@ (8009a60 <TIM_Base_SetConfig+0x154>)
 80099ba:	4293      	cmp	r3, r2
 80099bc:	d108      	bne.n	80099d0 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 80099be:	68fb      	ldr	r3, [r7, #12]
 80099c0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80099c4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80099c6:	683b      	ldr	r3, [r7, #0]
 80099c8:	68db      	ldr	r3, [r3, #12]
 80099ca:	68fa      	ldr	r2, [r7, #12]
 80099cc:	4313      	orrs	r3, r2
 80099ce:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80099d0:	68fb      	ldr	r3, [r7, #12]
 80099d2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80099d6:	683b      	ldr	r3, [r7, #0]
 80099d8:	695b      	ldr	r3, [r3, #20]
 80099da:	4313      	orrs	r3, r2
 80099dc:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80099de:	687b      	ldr	r3, [r7, #4]
 80099e0:	68fa      	ldr	r2, [r7, #12]
 80099e2:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80099e4:	683b      	ldr	r3, [r7, #0]
 80099e6:	689a      	ldr	r2, [r3, #8]
 80099e8:	687b      	ldr	r3, [r7, #4]
 80099ea:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80099ec:	683b      	ldr	r3, [r7, #0]
 80099ee:	681a      	ldr	r2, [r3, #0]
 80099f0:	687b      	ldr	r3, [r7, #4]
 80099f2:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80099f4:	687b      	ldr	r3, [r7, #4]
 80099f6:	4a10      	ldr	r2, [pc, #64]	@ (8009a38 <TIM_Base_SetConfig+0x12c>)
 80099f8:	4293      	cmp	r3, r2
 80099fa:	d003      	beq.n	8009a04 <TIM_Base_SetConfig+0xf8>
 80099fc:	687b      	ldr	r3, [r7, #4]
 80099fe:	4a12      	ldr	r2, [pc, #72]	@ (8009a48 <TIM_Base_SetConfig+0x13c>)
 8009a00:	4293      	cmp	r3, r2
 8009a02:	d103      	bne.n	8009a0c <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8009a04:	683b      	ldr	r3, [r7, #0]
 8009a06:	691a      	ldr	r2, [r3, #16]
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8009a0c:	687b      	ldr	r3, [r7, #4]
 8009a0e:	2201      	movs	r2, #1
 8009a10:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 8009a12:	687b      	ldr	r3, [r7, #4]
 8009a14:	691b      	ldr	r3, [r3, #16]
 8009a16:	f003 0301 	and.w	r3, r3, #1
 8009a1a:	2b01      	cmp	r3, #1
 8009a1c:	d105      	bne.n	8009a2a <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 8009a1e:	687b      	ldr	r3, [r7, #4]
 8009a20:	691b      	ldr	r3, [r3, #16]
 8009a22:	f023 0201 	bic.w	r2, r3, #1
 8009a26:	687b      	ldr	r3, [r7, #4]
 8009a28:	611a      	str	r2, [r3, #16]
  }
}
 8009a2a:	bf00      	nop
 8009a2c:	3714      	adds	r7, #20
 8009a2e:	46bd      	mov	sp, r7
 8009a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a34:	4770      	bx	lr
 8009a36:	bf00      	nop
 8009a38:	40010000 	.word	0x40010000
 8009a3c:	40000400 	.word	0x40000400
 8009a40:	40000800 	.word	0x40000800
 8009a44:	40000c00 	.word	0x40000c00
 8009a48:	40010400 	.word	0x40010400
 8009a4c:	40014000 	.word	0x40014000
 8009a50:	40014400 	.word	0x40014400
 8009a54:	40014800 	.word	0x40014800
 8009a58:	40001800 	.word	0x40001800
 8009a5c:	40001c00 	.word	0x40001c00
 8009a60:	40002000 	.word	0x40002000

08009a64 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009a64:	b480      	push	{r7}
 8009a66:	b087      	sub	sp, #28
 8009a68:	af00      	add	r7, sp, #0
 8009a6a:	6078      	str	r0, [r7, #4]
 8009a6c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009a6e:	687b      	ldr	r3, [r7, #4]
 8009a70:	6a1b      	ldr	r3, [r3, #32]
 8009a72:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8009a74:	687b      	ldr	r3, [r7, #4]
 8009a76:	6a1b      	ldr	r3, [r3, #32]
 8009a78:	f023 0201 	bic.w	r2, r3, #1
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009a80:	687b      	ldr	r3, [r7, #4]
 8009a82:	685b      	ldr	r3, [r3, #4]
 8009a84:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8009a86:	687b      	ldr	r3, [r7, #4]
 8009a88:	699b      	ldr	r3, [r3, #24]
 8009a8a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8009a8c:	68fa      	ldr	r2, [r7, #12]
 8009a8e:	4b2b      	ldr	r3, [pc, #172]	@ (8009b3c <TIM_OC1_SetConfig+0xd8>)
 8009a90:	4013      	ands	r3, r2
 8009a92:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8009a94:	68fb      	ldr	r3, [r7, #12]
 8009a96:	f023 0303 	bic.w	r3, r3, #3
 8009a9a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009a9c:	683b      	ldr	r3, [r7, #0]
 8009a9e:	681b      	ldr	r3, [r3, #0]
 8009aa0:	68fa      	ldr	r2, [r7, #12]
 8009aa2:	4313      	orrs	r3, r2
 8009aa4:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8009aa6:	697b      	ldr	r3, [r7, #20]
 8009aa8:	f023 0302 	bic.w	r3, r3, #2
 8009aac:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8009aae:	683b      	ldr	r3, [r7, #0]
 8009ab0:	689b      	ldr	r3, [r3, #8]
 8009ab2:	697a      	ldr	r2, [r7, #20]
 8009ab4:	4313      	orrs	r3, r2
 8009ab6:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8009ab8:	687b      	ldr	r3, [r7, #4]
 8009aba:	4a21      	ldr	r2, [pc, #132]	@ (8009b40 <TIM_OC1_SetConfig+0xdc>)
 8009abc:	4293      	cmp	r3, r2
 8009abe:	d003      	beq.n	8009ac8 <TIM_OC1_SetConfig+0x64>
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	4a20      	ldr	r2, [pc, #128]	@ (8009b44 <TIM_OC1_SetConfig+0xe0>)
 8009ac4:	4293      	cmp	r3, r2
 8009ac6:	d10c      	bne.n	8009ae2 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8009ac8:	697b      	ldr	r3, [r7, #20]
 8009aca:	f023 0308 	bic.w	r3, r3, #8
 8009ace:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8009ad0:	683b      	ldr	r3, [r7, #0]
 8009ad2:	68db      	ldr	r3, [r3, #12]
 8009ad4:	697a      	ldr	r2, [r7, #20]
 8009ad6:	4313      	orrs	r3, r2
 8009ad8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8009ada:	697b      	ldr	r3, [r7, #20]
 8009adc:	f023 0304 	bic.w	r3, r3, #4
 8009ae0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	4a16      	ldr	r2, [pc, #88]	@ (8009b40 <TIM_OC1_SetConfig+0xdc>)
 8009ae6:	4293      	cmp	r3, r2
 8009ae8:	d003      	beq.n	8009af2 <TIM_OC1_SetConfig+0x8e>
 8009aea:	687b      	ldr	r3, [r7, #4]
 8009aec:	4a15      	ldr	r2, [pc, #84]	@ (8009b44 <TIM_OC1_SetConfig+0xe0>)
 8009aee:	4293      	cmp	r3, r2
 8009af0:	d111      	bne.n	8009b16 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8009af2:	693b      	ldr	r3, [r7, #16]
 8009af4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009af8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8009afa:	693b      	ldr	r3, [r7, #16]
 8009afc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8009b00:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8009b02:	683b      	ldr	r3, [r7, #0]
 8009b04:	695b      	ldr	r3, [r3, #20]
 8009b06:	693a      	ldr	r2, [r7, #16]
 8009b08:	4313      	orrs	r3, r2
 8009b0a:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8009b0c:	683b      	ldr	r3, [r7, #0]
 8009b0e:	699b      	ldr	r3, [r3, #24]
 8009b10:	693a      	ldr	r2, [r7, #16]
 8009b12:	4313      	orrs	r3, r2
 8009b14:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009b16:	687b      	ldr	r3, [r7, #4]
 8009b18:	693a      	ldr	r2, [r7, #16]
 8009b1a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8009b1c:	687b      	ldr	r3, [r7, #4]
 8009b1e:	68fa      	ldr	r2, [r7, #12]
 8009b20:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8009b22:	683b      	ldr	r3, [r7, #0]
 8009b24:	685a      	ldr	r2, [r3, #4]
 8009b26:	687b      	ldr	r3, [r7, #4]
 8009b28:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009b2a:	687b      	ldr	r3, [r7, #4]
 8009b2c:	697a      	ldr	r2, [r7, #20]
 8009b2e:	621a      	str	r2, [r3, #32]
}
 8009b30:	bf00      	nop
 8009b32:	371c      	adds	r7, #28
 8009b34:	46bd      	mov	sp, r7
 8009b36:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b3a:	4770      	bx	lr
 8009b3c:	fffeff8f 	.word	0xfffeff8f
 8009b40:	40010000 	.word	0x40010000
 8009b44:	40010400 	.word	0x40010400

08009b48 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009b48:	b480      	push	{r7}
 8009b4a:	b087      	sub	sp, #28
 8009b4c:	af00      	add	r7, sp, #0
 8009b4e:	6078      	str	r0, [r7, #4]
 8009b50:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	6a1b      	ldr	r3, [r3, #32]
 8009b56:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	6a1b      	ldr	r3, [r3, #32]
 8009b5c:	f023 0210 	bic.w	r2, r3, #16
 8009b60:	687b      	ldr	r3, [r7, #4]
 8009b62:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009b64:	687b      	ldr	r3, [r7, #4]
 8009b66:	685b      	ldr	r3, [r3, #4]
 8009b68:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8009b6a:	687b      	ldr	r3, [r7, #4]
 8009b6c:	699b      	ldr	r3, [r3, #24]
 8009b6e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8009b70:	68fa      	ldr	r2, [r7, #12]
 8009b72:	4b2e      	ldr	r3, [pc, #184]	@ (8009c2c <TIM_OC2_SetConfig+0xe4>)
 8009b74:	4013      	ands	r3, r2
 8009b76:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8009b78:	68fb      	ldr	r3, [r7, #12]
 8009b7a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009b7e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009b80:	683b      	ldr	r3, [r7, #0]
 8009b82:	681b      	ldr	r3, [r3, #0]
 8009b84:	021b      	lsls	r3, r3, #8
 8009b86:	68fa      	ldr	r2, [r7, #12]
 8009b88:	4313      	orrs	r3, r2
 8009b8a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8009b8c:	697b      	ldr	r3, [r7, #20]
 8009b8e:	f023 0320 	bic.w	r3, r3, #32
 8009b92:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8009b94:	683b      	ldr	r3, [r7, #0]
 8009b96:	689b      	ldr	r3, [r3, #8]
 8009b98:	011b      	lsls	r3, r3, #4
 8009b9a:	697a      	ldr	r2, [r7, #20]
 8009b9c:	4313      	orrs	r3, r2
 8009b9e:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8009ba0:	687b      	ldr	r3, [r7, #4]
 8009ba2:	4a23      	ldr	r2, [pc, #140]	@ (8009c30 <TIM_OC2_SetConfig+0xe8>)
 8009ba4:	4293      	cmp	r3, r2
 8009ba6:	d003      	beq.n	8009bb0 <TIM_OC2_SetConfig+0x68>
 8009ba8:	687b      	ldr	r3, [r7, #4]
 8009baa:	4a22      	ldr	r2, [pc, #136]	@ (8009c34 <TIM_OC2_SetConfig+0xec>)
 8009bac:	4293      	cmp	r3, r2
 8009bae:	d10d      	bne.n	8009bcc <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8009bb0:	697b      	ldr	r3, [r7, #20]
 8009bb2:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009bb6:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8009bb8:	683b      	ldr	r3, [r7, #0]
 8009bba:	68db      	ldr	r3, [r3, #12]
 8009bbc:	011b      	lsls	r3, r3, #4
 8009bbe:	697a      	ldr	r2, [r7, #20]
 8009bc0:	4313      	orrs	r3, r2
 8009bc2:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8009bc4:	697b      	ldr	r3, [r7, #20]
 8009bc6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8009bca:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009bcc:	687b      	ldr	r3, [r7, #4]
 8009bce:	4a18      	ldr	r2, [pc, #96]	@ (8009c30 <TIM_OC2_SetConfig+0xe8>)
 8009bd0:	4293      	cmp	r3, r2
 8009bd2:	d003      	beq.n	8009bdc <TIM_OC2_SetConfig+0x94>
 8009bd4:	687b      	ldr	r3, [r7, #4]
 8009bd6:	4a17      	ldr	r2, [pc, #92]	@ (8009c34 <TIM_OC2_SetConfig+0xec>)
 8009bd8:	4293      	cmp	r3, r2
 8009bda:	d113      	bne.n	8009c04 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8009bdc:	693b      	ldr	r3, [r7, #16]
 8009bde:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009be2:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8009be4:	693b      	ldr	r3, [r7, #16]
 8009be6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009bea:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8009bec:	683b      	ldr	r3, [r7, #0]
 8009bee:	695b      	ldr	r3, [r3, #20]
 8009bf0:	009b      	lsls	r3, r3, #2
 8009bf2:	693a      	ldr	r2, [r7, #16]
 8009bf4:	4313      	orrs	r3, r2
 8009bf6:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8009bf8:	683b      	ldr	r3, [r7, #0]
 8009bfa:	699b      	ldr	r3, [r3, #24]
 8009bfc:	009b      	lsls	r3, r3, #2
 8009bfe:	693a      	ldr	r2, [r7, #16]
 8009c00:	4313      	orrs	r3, r2
 8009c02:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009c04:	687b      	ldr	r3, [r7, #4]
 8009c06:	693a      	ldr	r2, [r7, #16]
 8009c08:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8009c0a:	687b      	ldr	r3, [r7, #4]
 8009c0c:	68fa      	ldr	r2, [r7, #12]
 8009c0e:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8009c10:	683b      	ldr	r3, [r7, #0]
 8009c12:	685a      	ldr	r2, [r3, #4]
 8009c14:	687b      	ldr	r3, [r7, #4]
 8009c16:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009c18:	687b      	ldr	r3, [r7, #4]
 8009c1a:	697a      	ldr	r2, [r7, #20]
 8009c1c:	621a      	str	r2, [r3, #32]
}
 8009c1e:	bf00      	nop
 8009c20:	371c      	adds	r7, #28
 8009c22:	46bd      	mov	sp, r7
 8009c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c28:	4770      	bx	lr
 8009c2a:	bf00      	nop
 8009c2c:	feff8fff 	.word	0xfeff8fff
 8009c30:	40010000 	.word	0x40010000
 8009c34:	40010400 	.word	0x40010400

08009c38 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009c38:	b480      	push	{r7}
 8009c3a:	b087      	sub	sp, #28
 8009c3c:	af00      	add	r7, sp, #0
 8009c3e:	6078      	str	r0, [r7, #4]
 8009c40:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009c42:	687b      	ldr	r3, [r7, #4]
 8009c44:	6a1b      	ldr	r3, [r3, #32]
 8009c46:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8009c48:	687b      	ldr	r3, [r7, #4]
 8009c4a:	6a1b      	ldr	r3, [r3, #32]
 8009c4c:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8009c50:	687b      	ldr	r3, [r7, #4]
 8009c52:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009c54:	687b      	ldr	r3, [r7, #4]
 8009c56:	685b      	ldr	r3, [r3, #4]
 8009c58:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8009c5a:	687b      	ldr	r3, [r7, #4]
 8009c5c:	69db      	ldr	r3, [r3, #28]
 8009c5e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8009c60:	68fa      	ldr	r2, [r7, #12]
 8009c62:	4b2d      	ldr	r3, [pc, #180]	@ (8009d18 <TIM_OC3_SetConfig+0xe0>)
 8009c64:	4013      	ands	r3, r2
 8009c66:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8009c68:	68fb      	ldr	r3, [r7, #12]
 8009c6a:	f023 0303 	bic.w	r3, r3, #3
 8009c6e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009c70:	683b      	ldr	r3, [r7, #0]
 8009c72:	681b      	ldr	r3, [r3, #0]
 8009c74:	68fa      	ldr	r2, [r7, #12]
 8009c76:	4313      	orrs	r3, r2
 8009c78:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8009c7a:	697b      	ldr	r3, [r7, #20]
 8009c7c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8009c80:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8009c82:	683b      	ldr	r3, [r7, #0]
 8009c84:	689b      	ldr	r3, [r3, #8]
 8009c86:	021b      	lsls	r3, r3, #8
 8009c88:	697a      	ldr	r2, [r7, #20]
 8009c8a:	4313      	orrs	r3, r2
 8009c8c:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8009c8e:	687b      	ldr	r3, [r7, #4]
 8009c90:	4a22      	ldr	r2, [pc, #136]	@ (8009d1c <TIM_OC3_SetConfig+0xe4>)
 8009c92:	4293      	cmp	r3, r2
 8009c94:	d003      	beq.n	8009c9e <TIM_OC3_SetConfig+0x66>
 8009c96:	687b      	ldr	r3, [r7, #4]
 8009c98:	4a21      	ldr	r2, [pc, #132]	@ (8009d20 <TIM_OC3_SetConfig+0xe8>)
 8009c9a:	4293      	cmp	r3, r2
 8009c9c:	d10d      	bne.n	8009cba <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8009c9e:	697b      	ldr	r3, [r7, #20]
 8009ca0:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8009ca4:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8009ca6:	683b      	ldr	r3, [r7, #0]
 8009ca8:	68db      	ldr	r3, [r3, #12]
 8009caa:	021b      	lsls	r3, r3, #8
 8009cac:	697a      	ldr	r2, [r7, #20]
 8009cae:	4313      	orrs	r3, r2
 8009cb0:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8009cb2:	697b      	ldr	r3, [r7, #20]
 8009cb4:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8009cb8:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	4a17      	ldr	r2, [pc, #92]	@ (8009d1c <TIM_OC3_SetConfig+0xe4>)
 8009cbe:	4293      	cmp	r3, r2
 8009cc0:	d003      	beq.n	8009cca <TIM_OC3_SetConfig+0x92>
 8009cc2:	687b      	ldr	r3, [r7, #4]
 8009cc4:	4a16      	ldr	r2, [pc, #88]	@ (8009d20 <TIM_OC3_SetConfig+0xe8>)
 8009cc6:	4293      	cmp	r3, r2
 8009cc8:	d113      	bne.n	8009cf2 <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8009cca:	693b      	ldr	r3, [r7, #16]
 8009ccc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8009cd0:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8009cd2:	693b      	ldr	r3, [r7, #16]
 8009cd4:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8009cd8:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8009cda:	683b      	ldr	r3, [r7, #0]
 8009cdc:	695b      	ldr	r3, [r3, #20]
 8009cde:	011b      	lsls	r3, r3, #4
 8009ce0:	693a      	ldr	r2, [r7, #16]
 8009ce2:	4313      	orrs	r3, r2
 8009ce4:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8009ce6:	683b      	ldr	r3, [r7, #0]
 8009ce8:	699b      	ldr	r3, [r3, #24]
 8009cea:	011b      	lsls	r3, r3, #4
 8009cec:	693a      	ldr	r2, [r7, #16]
 8009cee:	4313      	orrs	r3, r2
 8009cf0:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009cf2:	687b      	ldr	r3, [r7, #4]
 8009cf4:	693a      	ldr	r2, [r7, #16]
 8009cf6:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	68fa      	ldr	r2, [r7, #12]
 8009cfc:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8009cfe:	683b      	ldr	r3, [r7, #0]
 8009d00:	685a      	ldr	r2, [r3, #4]
 8009d02:	687b      	ldr	r3, [r7, #4]
 8009d04:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	697a      	ldr	r2, [r7, #20]
 8009d0a:	621a      	str	r2, [r3, #32]
}
 8009d0c:	bf00      	nop
 8009d0e:	371c      	adds	r7, #28
 8009d10:	46bd      	mov	sp, r7
 8009d12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d16:	4770      	bx	lr
 8009d18:	fffeff8f 	.word	0xfffeff8f
 8009d1c:	40010000 	.word	0x40010000
 8009d20:	40010400 	.word	0x40010400

08009d24 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8009d24:	b480      	push	{r7}
 8009d26:	b087      	sub	sp, #28
 8009d28:	af00      	add	r7, sp, #0
 8009d2a:	6078      	str	r0, [r7, #4]
 8009d2c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009d2e:	687b      	ldr	r3, [r7, #4]
 8009d30:	6a1b      	ldr	r3, [r3, #32]
 8009d32:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	6a1b      	ldr	r3, [r3, #32]
 8009d38:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8009d3c:	687b      	ldr	r3, [r7, #4]
 8009d3e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009d40:	687b      	ldr	r3, [r7, #4]
 8009d42:	685b      	ldr	r3, [r3, #4]
 8009d44:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	69db      	ldr	r3, [r3, #28]
 8009d4a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8009d4c:	68fa      	ldr	r2, [r7, #12]
 8009d4e:	4b1e      	ldr	r3, [pc, #120]	@ (8009dc8 <TIM_OC4_SetConfig+0xa4>)
 8009d50:	4013      	ands	r3, r2
 8009d52:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8009d54:	68fb      	ldr	r3, [r7, #12]
 8009d56:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8009d5a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009d5c:	683b      	ldr	r3, [r7, #0]
 8009d5e:	681b      	ldr	r3, [r3, #0]
 8009d60:	021b      	lsls	r3, r3, #8
 8009d62:	68fa      	ldr	r2, [r7, #12]
 8009d64:	4313      	orrs	r3, r2
 8009d66:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8009d68:	693b      	ldr	r3, [r7, #16]
 8009d6a:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8009d6e:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8009d70:	683b      	ldr	r3, [r7, #0]
 8009d72:	689b      	ldr	r3, [r3, #8]
 8009d74:	031b      	lsls	r3, r3, #12
 8009d76:	693a      	ldr	r2, [r7, #16]
 8009d78:	4313      	orrs	r3, r2
 8009d7a:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009d7c:	687b      	ldr	r3, [r7, #4]
 8009d7e:	4a13      	ldr	r2, [pc, #76]	@ (8009dcc <TIM_OC4_SetConfig+0xa8>)
 8009d80:	4293      	cmp	r3, r2
 8009d82:	d003      	beq.n	8009d8c <TIM_OC4_SetConfig+0x68>
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	4a12      	ldr	r2, [pc, #72]	@ (8009dd0 <TIM_OC4_SetConfig+0xac>)
 8009d88:	4293      	cmp	r3, r2
 8009d8a:	d109      	bne.n	8009da0 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8009d8c:	697b      	ldr	r3, [r7, #20]
 8009d8e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8009d92:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8009d94:	683b      	ldr	r3, [r7, #0]
 8009d96:	695b      	ldr	r3, [r3, #20]
 8009d98:	019b      	lsls	r3, r3, #6
 8009d9a:	697a      	ldr	r2, [r7, #20]
 8009d9c:	4313      	orrs	r3, r2
 8009d9e:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009da0:	687b      	ldr	r3, [r7, #4]
 8009da2:	697a      	ldr	r2, [r7, #20]
 8009da4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009da6:	687b      	ldr	r3, [r7, #4]
 8009da8:	68fa      	ldr	r2, [r7, #12]
 8009daa:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8009dac:	683b      	ldr	r3, [r7, #0]
 8009dae:	685a      	ldr	r2, [r3, #4]
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009db4:	687b      	ldr	r3, [r7, #4]
 8009db6:	693a      	ldr	r2, [r7, #16]
 8009db8:	621a      	str	r2, [r3, #32]
}
 8009dba:	bf00      	nop
 8009dbc:	371c      	adds	r7, #28
 8009dbe:	46bd      	mov	sp, r7
 8009dc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dc4:	4770      	bx	lr
 8009dc6:	bf00      	nop
 8009dc8:	feff8fff 	.word	0xfeff8fff
 8009dcc:	40010000 	.word	0x40010000
 8009dd0:	40010400 	.word	0x40010400

08009dd4 <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 8009dd4:	b480      	push	{r7}
 8009dd6:	b087      	sub	sp, #28
 8009dd8:	af00      	add	r7, sp, #0
 8009dda:	6078      	str	r0, [r7, #4]
 8009ddc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009dde:	687b      	ldr	r3, [r7, #4]
 8009de0:	6a1b      	ldr	r3, [r3, #32]
 8009de2:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 8009de4:	687b      	ldr	r3, [r7, #4]
 8009de6:	6a1b      	ldr	r3, [r3, #32]
 8009de8:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	685b      	ldr	r3, [r3, #4]
 8009df4:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8009df6:	687b      	ldr	r3, [r7, #4]
 8009df8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009dfa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 8009dfc:	68fa      	ldr	r2, [r7, #12]
 8009dfe:	4b1b      	ldr	r3, [pc, #108]	@ (8009e6c <TIM_OC5_SetConfig+0x98>)
 8009e00:	4013      	ands	r3, r2
 8009e02:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8009e04:	683b      	ldr	r3, [r7, #0]
 8009e06:	681b      	ldr	r3, [r3, #0]
 8009e08:	68fa      	ldr	r2, [r7, #12]
 8009e0a:	4313      	orrs	r3, r2
 8009e0c:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 8009e0e:	693b      	ldr	r3, [r7, #16]
 8009e10:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8009e14:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 8009e16:	683b      	ldr	r3, [r7, #0]
 8009e18:	689b      	ldr	r3, [r3, #8]
 8009e1a:	041b      	lsls	r3, r3, #16
 8009e1c:	693a      	ldr	r2, [r7, #16]
 8009e1e:	4313      	orrs	r3, r2
 8009e20:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	4a12      	ldr	r2, [pc, #72]	@ (8009e70 <TIM_OC5_SetConfig+0x9c>)
 8009e26:	4293      	cmp	r3, r2
 8009e28:	d003      	beq.n	8009e32 <TIM_OC5_SetConfig+0x5e>
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	4a11      	ldr	r2, [pc, #68]	@ (8009e74 <TIM_OC5_SetConfig+0xa0>)
 8009e2e:	4293      	cmp	r3, r2
 8009e30:	d109      	bne.n	8009e46 <TIM_OC5_SetConfig+0x72>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 8009e32:	697b      	ldr	r3, [r7, #20]
 8009e34:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8009e38:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 8009e3a:	683b      	ldr	r3, [r7, #0]
 8009e3c:	695b      	ldr	r3, [r3, #20]
 8009e3e:	021b      	lsls	r3, r3, #8
 8009e40:	697a      	ldr	r2, [r7, #20]
 8009e42:	4313      	orrs	r3, r2
 8009e44:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	697a      	ldr	r2, [r7, #20]
 8009e4a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8009e4c:	687b      	ldr	r3, [r7, #4]
 8009e4e:	68fa      	ldr	r2, [r7, #12]
 8009e50:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 8009e52:	683b      	ldr	r3, [r7, #0]
 8009e54:	685a      	ldr	r2, [r3, #4]
 8009e56:	687b      	ldr	r3, [r7, #4]
 8009e58:	659a      	str	r2, [r3, #88]	@ 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009e5a:	687b      	ldr	r3, [r7, #4]
 8009e5c:	693a      	ldr	r2, [r7, #16]
 8009e5e:	621a      	str	r2, [r3, #32]
}
 8009e60:	bf00      	nop
 8009e62:	371c      	adds	r7, #28
 8009e64:	46bd      	mov	sp, r7
 8009e66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e6a:	4770      	bx	lr
 8009e6c:	fffeff8f 	.word	0xfffeff8f
 8009e70:	40010000 	.word	0x40010000
 8009e74:	40010400 	.word	0x40010400

08009e78 <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 8009e78:	b480      	push	{r7}
 8009e7a:	b087      	sub	sp, #28
 8009e7c:	af00      	add	r7, sp, #0
 8009e7e:	6078      	str	r0, [r7, #4]
 8009e80:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	6a1b      	ldr	r3, [r3, #32]
 8009e86:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 8009e88:	687b      	ldr	r3, [r7, #4]
 8009e8a:	6a1b      	ldr	r3, [r3, #32]
 8009e8c:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8009e90:	687b      	ldr	r3, [r7, #4]
 8009e92:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8009e94:	687b      	ldr	r3, [r7, #4]
 8009e96:	685b      	ldr	r3, [r3, #4]
 8009e98:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 8009e9a:	687b      	ldr	r3, [r7, #4]
 8009e9c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009e9e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 8009ea0:	68fa      	ldr	r2, [r7, #12]
 8009ea2:	4b1c      	ldr	r3, [pc, #112]	@ (8009f14 <TIM_OC6_SetConfig+0x9c>)
 8009ea4:	4013      	ands	r3, r2
 8009ea6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009ea8:	683b      	ldr	r3, [r7, #0]
 8009eaa:	681b      	ldr	r3, [r3, #0]
 8009eac:	021b      	lsls	r3, r3, #8
 8009eae:	68fa      	ldr	r2, [r7, #12]
 8009eb0:	4313      	orrs	r3, r2
 8009eb2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 8009eb4:	693b      	ldr	r3, [r7, #16]
 8009eb6:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8009eba:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 8009ebc:	683b      	ldr	r3, [r7, #0]
 8009ebe:	689b      	ldr	r3, [r3, #8]
 8009ec0:	051b      	lsls	r3, r3, #20
 8009ec2:	693a      	ldr	r2, [r7, #16]
 8009ec4:	4313      	orrs	r3, r2
 8009ec6:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009ec8:	687b      	ldr	r3, [r7, #4]
 8009eca:	4a13      	ldr	r2, [pc, #76]	@ (8009f18 <TIM_OC6_SetConfig+0xa0>)
 8009ecc:	4293      	cmp	r3, r2
 8009ece:	d003      	beq.n	8009ed8 <TIM_OC6_SetConfig+0x60>
 8009ed0:	687b      	ldr	r3, [r7, #4]
 8009ed2:	4a12      	ldr	r2, [pc, #72]	@ (8009f1c <TIM_OC6_SetConfig+0xa4>)
 8009ed4:	4293      	cmp	r3, r2
 8009ed6:	d109      	bne.n	8009eec <TIM_OC6_SetConfig+0x74>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 8009ed8:	697b      	ldr	r3, [r7, #20]
 8009eda:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8009ede:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 8009ee0:	683b      	ldr	r3, [r7, #0]
 8009ee2:	695b      	ldr	r3, [r3, #20]
 8009ee4:	029b      	lsls	r3, r3, #10
 8009ee6:	697a      	ldr	r2, [r7, #20]
 8009ee8:	4313      	orrs	r3, r2
 8009eea:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009eec:	687b      	ldr	r3, [r7, #4]
 8009eee:	697a      	ldr	r2, [r7, #20]
 8009ef0:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 8009ef2:	687b      	ldr	r3, [r7, #4]
 8009ef4:	68fa      	ldr	r2, [r7, #12]
 8009ef6:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 8009ef8:	683b      	ldr	r3, [r7, #0]
 8009efa:	685a      	ldr	r2, [r3, #4]
 8009efc:	687b      	ldr	r3, [r7, #4]
 8009efe:	65da      	str	r2, [r3, #92]	@ 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009f00:	687b      	ldr	r3, [r7, #4]
 8009f02:	693a      	ldr	r2, [r7, #16]
 8009f04:	621a      	str	r2, [r3, #32]
}
 8009f06:	bf00      	nop
 8009f08:	371c      	adds	r7, #28
 8009f0a:	46bd      	mov	sp, r7
 8009f0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f10:	4770      	bx	lr
 8009f12:	bf00      	nop
 8009f14:	feff8fff 	.word	0xfeff8fff
 8009f18:	40010000 	.word	0x40010000
 8009f1c:	40010400 	.word	0x40010400

08009f20 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8009f20:	b480      	push	{r7}
 8009f22:	b087      	sub	sp, #28
 8009f24:	af00      	add	r7, sp, #0
 8009f26:	60f8      	str	r0, [r7, #12]
 8009f28:	60b9      	str	r1, [r7, #8]
 8009f2a:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8009f2c:	68fb      	ldr	r3, [r7, #12]
 8009f2e:	6a1b      	ldr	r3, [r3, #32]
 8009f30:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8009f32:	68fb      	ldr	r3, [r7, #12]
 8009f34:	6a1b      	ldr	r3, [r3, #32]
 8009f36:	f023 0201 	bic.w	r2, r3, #1
 8009f3a:	68fb      	ldr	r3, [r7, #12]
 8009f3c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8009f3e:	68fb      	ldr	r3, [r7, #12]
 8009f40:	699b      	ldr	r3, [r3, #24]
 8009f42:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8009f44:	693b      	ldr	r3, [r7, #16]
 8009f46:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8009f4a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8009f4c:	687b      	ldr	r3, [r7, #4]
 8009f4e:	011b      	lsls	r3, r3, #4
 8009f50:	693a      	ldr	r2, [r7, #16]
 8009f52:	4313      	orrs	r3, r2
 8009f54:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8009f56:	697b      	ldr	r3, [r7, #20]
 8009f58:	f023 030a 	bic.w	r3, r3, #10
 8009f5c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8009f5e:	697a      	ldr	r2, [r7, #20]
 8009f60:	68bb      	ldr	r3, [r7, #8]
 8009f62:	4313      	orrs	r3, r2
 8009f64:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8009f66:	68fb      	ldr	r3, [r7, #12]
 8009f68:	693a      	ldr	r2, [r7, #16]
 8009f6a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8009f6c:	68fb      	ldr	r3, [r7, #12]
 8009f6e:	697a      	ldr	r2, [r7, #20]
 8009f70:	621a      	str	r2, [r3, #32]
}
 8009f72:	bf00      	nop
 8009f74:	371c      	adds	r7, #28
 8009f76:	46bd      	mov	sp, r7
 8009f78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f7c:	4770      	bx	lr

08009f7e <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8009f7e:	b480      	push	{r7}
 8009f80:	b087      	sub	sp, #28
 8009f82:	af00      	add	r7, sp, #0
 8009f84:	60f8      	str	r0, [r7, #12]
 8009f86:	60b9      	str	r1, [r7, #8]
 8009f88:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8009f8a:	68fb      	ldr	r3, [r7, #12]
 8009f8c:	6a1b      	ldr	r3, [r3, #32]
 8009f8e:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8009f90:	68fb      	ldr	r3, [r7, #12]
 8009f92:	6a1b      	ldr	r3, [r3, #32]
 8009f94:	f023 0210 	bic.w	r2, r3, #16
 8009f98:	68fb      	ldr	r3, [r7, #12]
 8009f9a:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8009f9c:	68fb      	ldr	r3, [r7, #12]
 8009f9e:	699b      	ldr	r3, [r3, #24]
 8009fa0:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8009fa2:	693b      	ldr	r3, [r7, #16]
 8009fa4:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8009fa8:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8009faa:	687b      	ldr	r3, [r7, #4]
 8009fac:	031b      	lsls	r3, r3, #12
 8009fae:	693a      	ldr	r2, [r7, #16]
 8009fb0:	4313      	orrs	r3, r2
 8009fb2:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8009fb4:	697b      	ldr	r3, [r7, #20]
 8009fb6:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8009fba:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8009fbc:	68bb      	ldr	r3, [r7, #8]
 8009fbe:	011b      	lsls	r3, r3, #4
 8009fc0:	697a      	ldr	r2, [r7, #20]
 8009fc2:	4313      	orrs	r3, r2
 8009fc4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8009fc6:	68fb      	ldr	r3, [r7, #12]
 8009fc8:	693a      	ldr	r2, [r7, #16]
 8009fca:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8009fcc:	68fb      	ldr	r3, [r7, #12]
 8009fce:	697a      	ldr	r2, [r7, #20]
 8009fd0:	621a      	str	r2, [r3, #32]
}
 8009fd2:	bf00      	nop
 8009fd4:	371c      	adds	r7, #28
 8009fd6:	46bd      	mov	sp, r7
 8009fd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fdc:	4770      	bx	lr

08009fde <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8009fde:	b480      	push	{r7}
 8009fe0:	b085      	sub	sp, #20
 8009fe2:	af00      	add	r7, sp, #0
 8009fe4:	6078      	str	r0, [r7, #4]
 8009fe6:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8009fe8:	687b      	ldr	r3, [r7, #4]
 8009fea:	689b      	ldr	r3, [r3, #8]
 8009fec:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8009fee:	68fb      	ldr	r3, [r7, #12]
 8009ff0:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8009ff4:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8009ff6:	683a      	ldr	r2, [r7, #0]
 8009ff8:	68fb      	ldr	r3, [r7, #12]
 8009ffa:	4313      	orrs	r3, r2
 8009ffc:	f043 0307 	orr.w	r3, r3, #7
 800a000:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	68fa      	ldr	r2, [r7, #12]
 800a006:	609a      	str	r2, [r3, #8]
}
 800a008:	bf00      	nop
 800a00a:	3714      	adds	r7, #20
 800a00c:	46bd      	mov	sp, r7
 800a00e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a012:	4770      	bx	lr

0800a014 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800a014:	b480      	push	{r7}
 800a016:	b087      	sub	sp, #28
 800a018:	af00      	add	r7, sp, #0
 800a01a:	60f8      	str	r0, [r7, #12]
 800a01c:	60b9      	str	r1, [r7, #8]
 800a01e:	607a      	str	r2, [r7, #4]
 800a020:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800a022:	68fb      	ldr	r3, [r7, #12]
 800a024:	689b      	ldr	r3, [r3, #8]
 800a026:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 800a028:	697b      	ldr	r3, [r7, #20]
 800a02a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800a02e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 800a030:	683b      	ldr	r3, [r7, #0]
 800a032:	021a      	lsls	r2, r3, #8
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	431a      	orrs	r2, r3
 800a038:	68bb      	ldr	r3, [r7, #8]
 800a03a:	4313      	orrs	r3, r2
 800a03c:	697a      	ldr	r2, [r7, #20]
 800a03e:	4313      	orrs	r3, r2
 800a040:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800a042:	68fb      	ldr	r3, [r7, #12]
 800a044:	697a      	ldr	r2, [r7, #20]
 800a046:	609a      	str	r2, [r3, #8]
}
 800a048:	bf00      	nop
 800a04a:	371c      	adds	r7, #28
 800a04c:	46bd      	mov	sp, r7
 800a04e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a052:	4770      	bx	lr

0800a054 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800a054:	b480      	push	{r7}
 800a056:	b087      	sub	sp, #28
 800a058:	af00      	add	r7, sp, #0
 800a05a:	60f8      	str	r0, [r7, #12]
 800a05c:	60b9      	str	r1, [r7, #8]
 800a05e:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800a060:	68bb      	ldr	r3, [r7, #8]
 800a062:	f003 031f 	and.w	r3, r3, #31
 800a066:	2201      	movs	r2, #1
 800a068:	fa02 f303 	lsl.w	r3, r2, r3
 800a06c:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800a06e:	68fb      	ldr	r3, [r7, #12]
 800a070:	6a1a      	ldr	r2, [r3, #32]
 800a072:	697b      	ldr	r3, [r7, #20]
 800a074:	43db      	mvns	r3, r3
 800a076:	401a      	ands	r2, r3
 800a078:	68fb      	ldr	r3, [r7, #12]
 800a07a:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800a07c:	68fb      	ldr	r3, [r7, #12]
 800a07e:	6a1a      	ldr	r2, [r3, #32]
 800a080:	68bb      	ldr	r3, [r7, #8]
 800a082:	f003 031f 	and.w	r3, r3, #31
 800a086:	6879      	ldr	r1, [r7, #4]
 800a088:	fa01 f303 	lsl.w	r3, r1, r3
 800a08c:	431a      	orrs	r2, r3
 800a08e:	68fb      	ldr	r3, [r7, #12]
 800a090:	621a      	str	r2, [r3, #32]
}
 800a092:	bf00      	nop
 800a094:	371c      	adds	r7, #28
 800a096:	46bd      	mov	sp, r7
 800a098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a09c:	4770      	bx	lr
	...

0800a0a0 <TIM_ResetCallback>:
  * @param  htim pointer to a TIM_HandleTypeDef structure that contains
  *                the configuration information for TIM module.
  * @retval None
  */
void TIM_ResetCallback(TIM_HandleTypeDef *htim)
{
 800a0a0:	b480      	push	{r7}
 800a0a2:	b083      	sub	sp, #12
 800a0a4:	af00      	add	r7, sp, #0
 800a0a6:	6078      	str	r0, [r7, #4]
  /* Reset the TIM callback to the legacy weak callbacks */
  htim->PeriodElapsedCallback             = HAL_TIM_PeriodElapsedCallback;
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	4a1e      	ldr	r2, [pc, #120]	@ (800a124 <TIM_ResetCallback+0x84>)
 800a0ac:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  htim->PeriodElapsedHalfCpltCallback     = HAL_TIM_PeriodElapsedHalfCpltCallback;
 800a0b0:	687b      	ldr	r3, [r7, #4]
 800a0b2:	4a1d      	ldr	r2, [pc, #116]	@ (800a128 <TIM_ResetCallback+0x88>)
 800a0b4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  htim->TriggerCallback                   = HAL_TIM_TriggerCallback;
 800a0b8:	687b      	ldr	r3, [r7, #4]
 800a0ba:	4a1c      	ldr	r2, [pc, #112]	@ (800a12c <TIM_ResetCallback+0x8c>)
 800a0bc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  htim->TriggerHalfCpltCallback           = HAL_TIM_TriggerHalfCpltCallback;
 800a0c0:	687b      	ldr	r3, [r7, #4]
 800a0c2:	4a1b      	ldr	r2, [pc, #108]	@ (800a130 <TIM_ResetCallback+0x90>)
 800a0c4:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  htim->IC_CaptureCallback                = HAL_TIM_IC_CaptureCallback;
 800a0c8:	687b      	ldr	r3, [r7, #4]
 800a0ca:	4a1a      	ldr	r2, [pc, #104]	@ (800a134 <TIM_ResetCallback+0x94>)
 800a0cc:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  htim->IC_CaptureHalfCpltCallback        = HAL_TIM_IC_CaptureHalfCpltCallback;
 800a0d0:	687b      	ldr	r3, [r7, #4]
 800a0d2:	4a19      	ldr	r2, [pc, #100]	@ (800a138 <TIM_ResetCallback+0x98>)
 800a0d4:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  htim->OC_DelayElapsedCallback           = HAL_TIM_OC_DelayElapsedCallback;
 800a0d8:	687b      	ldr	r3, [r7, #4]
 800a0da:	4a18      	ldr	r2, [pc, #96]	@ (800a13c <TIM_ResetCallback+0x9c>)
 800a0dc:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  htim->PWM_PulseFinishedCallback         = HAL_TIM_PWM_PulseFinishedCallback;
 800a0e0:	687b      	ldr	r3, [r7, #4]
 800a0e2:	4a17      	ldr	r2, [pc, #92]	@ (800a140 <TIM_ResetCallback+0xa0>)
 800a0e4:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  htim->PWM_PulseFinishedHalfCpltCallback = HAL_TIM_PWM_PulseFinishedHalfCpltCallback;
 800a0e8:	687b      	ldr	r3, [r7, #4]
 800a0ea:	4a16      	ldr	r2, [pc, #88]	@ (800a144 <TIM_ResetCallback+0xa4>)
 800a0ec:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
  htim->ErrorCallback                     = HAL_TIM_ErrorCallback;
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	4a15      	ldr	r2, [pc, #84]	@ (800a148 <TIM_ResetCallback+0xa8>)
 800a0f4:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8
  htim->CommutationCallback               = HAL_TIMEx_CommutCallback;
 800a0f8:	687b      	ldr	r3, [r7, #4]
 800a0fa:	4a14      	ldr	r2, [pc, #80]	@ (800a14c <TIM_ResetCallback+0xac>)
 800a0fc:	f8c3 20ac 	str.w	r2, [r3, #172]	@ 0xac
  htim->CommutationHalfCpltCallback       = HAL_TIMEx_CommutHalfCpltCallback;
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	4a13      	ldr	r2, [pc, #76]	@ (800a150 <TIM_ResetCallback+0xb0>)
 800a104:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
  htim->BreakCallback                     = HAL_TIMEx_BreakCallback;
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	4a12      	ldr	r2, [pc, #72]	@ (800a154 <TIM_ResetCallback+0xb4>)
 800a10c:	f8c3 20b4 	str.w	r2, [r3, #180]	@ 0xb4
  htim->Break2Callback                    = HAL_TIMEx_Break2Callback;
 800a110:	687b      	ldr	r3, [r7, #4]
 800a112:	4a11      	ldr	r2, [pc, #68]	@ (800a158 <TIM_ResetCallback+0xb8>)
 800a114:	f8c3 20b8 	str.w	r2, [r3, #184]	@ 0xb8
}
 800a118:	bf00      	nop
 800a11a:	370c      	adds	r7, #12
 800a11c:	46bd      	mov	sp, r7
 800a11e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a122:	4770      	bx	lr
 800a124:	08009845 	.word	0x08009845
 800a128:	08009859 	.word	0x08009859
 800a12c:	080098d1 	.word	0x080098d1
 800a130:	080098e5 	.word	0x080098e5
 800a134:	08009881 	.word	0x08009881
 800a138:	08009895 	.word	0x08009895
 800a13c:	0800986d 	.word	0x0800986d
 800a140:	080098a9 	.word	0x080098a9
 800a144:	080098bd 	.word	0x080098bd
 800a148:	080098f9 	.word	0x080098f9
 800a14c:	0800a279 	.word	0x0800a279
 800a150:	0800a28d 	.word	0x0800a28d
 800a154:	0800a2a1 	.word	0x0800a2a1
 800a158:	0800a2b5 	.word	0x0800a2b5

0800a15c <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 800a15c:	b480      	push	{r7}
 800a15e:	b085      	sub	sp, #20
 800a160:	af00      	add	r7, sp, #0
 800a162:	6078      	str	r0, [r7, #4]
 800a164:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 800a166:	687b      	ldr	r3, [r7, #4]
 800a168:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800a16c:	2b01      	cmp	r3, #1
 800a16e:	d101      	bne.n	800a174 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800a170:	2302      	movs	r3, #2
 800a172:	e06d      	b.n	800a250 <HAL_TIMEx_MasterConfigSynchronization+0xf4>
 800a174:	687b      	ldr	r3, [r7, #4]
 800a176:	2201      	movs	r2, #1
 800a178:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 800a17c:	687b      	ldr	r3, [r7, #4]
 800a17e:	2202      	movs	r2, #2
 800a180:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	681b      	ldr	r3, [r3, #0]
 800a188:	685b      	ldr	r3, [r3, #4]
 800a18a:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 800a18c:	687b      	ldr	r3, [r7, #4]
 800a18e:	681b      	ldr	r3, [r3, #0]
 800a190:	689b      	ldr	r3, [r3, #8]
 800a192:	60bb      	str	r3, [r7, #8]

  /* If the timer supports ADC synchronization through TRGO2, set the master mode selection 2 */
  if (IS_TIM_TRGO2_INSTANCE(htim->Instance))
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	681b      	ldr	r3, [r3, #0]
 800a198:	4a30      	ldr	r2, [pc, #192]	@ (800a25c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800a19a:	4293      	cmp	r3, r2
 800a19c:	d004      	beq.n	800a1a8 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800a19e:	687b      	ldr	r3, [r7, #4]
 800a1a0:	681b      	ldr	r3, [r3, #0]
 800a1a2:	4a2f      	ldr	r2, [pc, #188]	@ (800a260 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800a1a4:	4293      	cmp	r3, r2
 800a1a6:	d108      	bne.n	800a1ba <HAL_TIMEx_MasterConfigSynchronization+0x5e>
  {
    /* Check the parameters */
    assert_param(IS_TIM_TRGO2_SOURCE(sMasterConfig->MasterOutputTrigger2));

    /* Clear the MMS2 bits */
    tmpcr2 &= ~TIM_CR2_MMS2;
 800a1a8:	68fb      	ldr	r3, [r7, #12]
 800a1aa:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800a1ae:	60fb      	str	r3, [r7, #12]
    /* Select the TRGO2 source*/
    tmpcr2 |= sMasterConfig->MasterOutputTrigger2;
 800a1b0:	683b      	ldr	r3, [r7, #0]
 800a1b2:	685b      	ldr	r3, [r3, #4]
 800a1b4:	68fa      	ldr	r2, [r7, #12]
 800a1b6:	4313      	orrs	r3, r2
 800a1b8:	60fb      	str	r3, [r7, #12]
  }

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 800a1ba:	68fb      	ldr	r3, [r7, #12]
 800a1bc:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a1c0:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 800a1c2:	683b      	ldr	r3, [r7, #0]
 800a1c4:	681b      	ldr	r3, [r3, #0]
 800a1c6:	68fa      	ldr	r2, [r7, #12]
 800a1c8:	4313      	orrs	r3, r2
 800a1ca:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 800a1cc:	687b      	ldr	r3, [r7, #4]
 800a1ce:	681b      	ldr	r3, [r3, #0]
 800a1d0:	68fa      	ldr	r2, [r7, #12]
 800a1d2:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a1d4:	687b      	ldr	r3, [r7, #4]
 800a1d6:	681b      	ldr	r3, [r3, #0]
 800a1d8:	4a20      	ldr	r2, [pc, #128]	@ (800a25c <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800a1da:	4293      	cmp	r3, r2
 800a1dc:	d022      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a1de:	687b      	ldr	r3, [r7, #4]
 800a1e0:	681b      	ldr	r3, [r3, #0]
 800a1e2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a1e6:	d01d      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a1e8:	687b      	ldr	r3, [r7, #4]
 800a1ea:	681b      	ldr	r3, [r3, #0]
 800a1ec:	4a1d      	ldr	r2, [pc, #116]	@ (800a264 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800a1ee:	4293      	cmp	r3, r2
 800a1f0:	d018      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a1f2:	687b      	ldr	r3, [r7, #4]
 800a1f4:	681b      	ldr	r3, [r3, #0]
 800a1f6:	4a1c      	ldr	r2, [pc, #112]	@ (800a268 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800a1f8:	4293      	cmp	r3, r2
 800a1fa:	d013      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a1fc:	687b      	ldr	r3, [r7, #4]
 800a1fe:	681b      	ldr	r3, [r3, #0]
 800a200:	4a1a      	ldr	r2, [pc, #104]	@ (800a26c <HAL_TIMEx_MasterConfigSynchronization+0x110>)
 800a202:	4293      	cmp	r3, r2
 800a204:	d00e      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a206:	687b      	ldr	r3, [r7, #4]
 800a208:	681b      	ldr	r3, [r3, #0]
 800a20a:	4a15      	ldr	r2, [pc, #84]	@ (800a260 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800a20c:	4293      	cmp	r3, r2
 800a20e:	d009      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	681b      	ldr	r3, [r3, #0]
 800a214:	4a16      	ldr	r2, [pc, #88]	@ (800a270 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800a216:	4293      	cmp	r3, r2
 800a218:	d004      	beq.n	800a224 <HAL_TIMEx_MasterConfigSynchronization+0xc8>
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	681b      	ldr	r3, [r3, #0]
 800a21e:	4a15      	ldr	r2, [pc, #84]	@ (800a274 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800a220:	4293      	cmp	r3, r2
 800a222:	d10c      	bne.n	800a23e <HAL_TIMEx_MasterConfigSynchronization+0xe2>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800a224:	68bb      	ldr	r3, [r7, #8]
 800a226:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a22a:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800a22c:	683b      	ldr	r3, [r7, #0]
 800a22e:	689b      	ldr	r3, [r3, #8]
 800a230:	68ba      	ldr	r2, [r7, #8]
 800a232:	4313      	orrs	r3, r2
 800a234:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	681b      	ldr	r3, [r3, #0]
 800a23a:	68ba      	ldr	r2, [r7, #8]
 800a23c:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	2201      	movs	r2, #1
 800a242:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 800a246:	687b      	ldr	r3, [r7, #4]
 800a248:	2200      	movs	r2, #0
 800a24a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 800a24e:	2300      	movs	r3, #0
}
 800a250:	4618      	mov	r0, r3
 800a252:	3714      	adds	r7, #20
 800a254:	46bd      	mov	sp, r7
 800a256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a25a:	4770      	bx	lr
 800a25c:	40010000 	.word	0x40010000
 800a260:	40010400 	.word	0x40010400
 800a264:	40000400 	.word	0x40000400
 800a268:	40000800 	.word	0x40000800
 800a26c:	40000c00 	.word	0x40000c00
 800a270:	40014000 	.word	0x40014000
 800a274:	40001800 	.word	0x40001800

0800a278 <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800a278:	b480      	push	{r7}
 800a27a:	b083      	sub	sp, #12
 800a27c:	af00      	add	r7, sp, #0
 800a27e:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 800a280:	bf00      	nop
 800a282:	370c      	adds	r7, #12
 800a284:	46bd      	mov	sp, r7
 800a286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a28a:	4770      	bx	lr

0800a28c <HAL_TIMEx_CommutHalfCpltCallback>:
  * @brief  Commutation half complete callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutHalfCpltCallback(TIM_HandleTypeDef *htim)
{
 800a28c:	b480      	push	{r7}
 800a28e:	b083      	sub	sp, #12
 800a290:	af00      	add	r7, sp, #0
 800a292:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutHalfCpltCallback could be implemented in the user file
   */
}
 800a294:	bf00      	nop
 800a296:	370c      	adds	r7, #12
 800a298:	46bd      	mov	sp, r7
 800a29a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a29e:	4770      	bx	lr

0800a2a0 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 800a2a0:	b480      	push	{r7}
 800a2a2:	b083      	sub	sp, #12
 800a2a4:	af00      	add	r7, sp, #0
 800a2a6:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 800a2a8:	bf00      	nop
 800a2aa:	370c      	adds	r7, #12
 800a2ac:	46bd      	mov	sp, r7
 800a2ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2b2:	4770      	bx	lr

0800a2b4 <HAL_TIMEx_Break2Callback>:
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
{
 800a2b4:	b480      	push	{r7}
 800a2b6:	b083      	sub	sp, #12
 800a2b8:	af00      	add	r7, sp, #0
 800a2ba:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_TIMEx_Break2Callback could be implemented in the user file
   */
}
 800a2bc:	bf00      	nop
 800a2be:	370c      	adds	r7, #12
 800a2c0:	46bd      	mov	sp, r7
 800a2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2c6:	4770      	bx	lr

0800a2c8 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800a2c8:	b580      	push	{r7, lr}
 800a2ca:	b082      	sub	sp, #8
 800a2cc:	af00      	add	r7, sp, #0
 800a2ce:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800a2d0:	687b      	ldr	r3, [r7, #4]
 800a2d2:	2b00      	cmp	r3, #0
 800a2d4:	d101      	bne.n	800a2da <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800a2d6:	2301      	movs	r3, #1
 800a2d8:	e04e      	b.n	800a378 <HAL_UART_Init+0xb0>
  {
    /* Check the parameters */
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800a2de:	2b00      	cmp	r3, #0
 800a2e0:	d114      	bne.n	800a30c <HAL_UART_Init+0x44>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	2200      	movs	r2, #0
 800a2e6:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
    UART_InitCallbacksToDefault(huart);
 800a2ea:	6878      	ldr	r0, [r7, #4]
 800a2ec:	f000 f8a6 	bl	800a43c <UART_InitCallbacksToDefault>

    if (huart->MspInitCallback == NULL)
 800a2f0:	687b      	ldr	r3, [r7, #4]
 800a2f2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800a2f6:	2b00      	cmp	r3, #0
 800a2f8:	d103      	bne.n	800a302 <HAL_UART_Init+0x3a>
    {
      huart->MspInitCallback = HAL_UART_MspInit;
 800a2fa:	687b      	ldr	r3, [r7, #4]
 800a2fc:	4a20      	ldr	r2, [pc, #128]	@ (800a380 <HAL_UART_Init+0xb8>)
 800a2fe:	f8c3 20ac 	str.w	r2, [r3, #172]	@ 0xac
    }

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
 800a302:	687b      	ldr	r3, [r7, #4]
 800a304:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 800a308:	6878      	ldr	r0, [r7, #4]
 800a30a:	4798      	blx	r3
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800a30c:	687b      	ldr	r3, [r7, #4]
 800a30e:	2224      	movs	r2, #36	@ 0x24
 800a310:	67da      	str	r2, [r3, #124]	@ 0x7c

  __HAL_UART_DISABLE(huart);
 800a312:	687b      	ldr	r3, [r7, #4]
 800a314:	681b      	ldr	r3, [r3, #0]
 800a316:	681a      	ldr	r2, [r3, #0]
 800a318:	687b      	ldr	r3, [r7, #4]
 800a31a:	681b      	ldr	r3, [r3, #0]
 800a31c:	f022 0201 	bic.w	r2, r2, #1
 800a320:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800a322:	687b      	ldr	r3, [r7, #4]
 800a324:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a326:	2b00      	cmp	r3, #0
 800a328:	d002      	beq.n	800a330 <HAL_UART_Init+0x68>
  {
    UART_AdvFeatureConfig(huart);
 800a32a:	6878      	ldr	r0, [r7, #4]
 800a32c:	f000 fb2a 	bl	800a984 <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 800a330:	6878      	ldr	r0, [r7, #4]
 800a332:	f000 f8c3 	bl	800a4bc <UART_SetConfig>
 800a336:	4603      	mov	r3, r0
 800a338:	2b01      	cmp	r3, #1
 800a33a:	d101      	bne.n	800a340 <HAL_UART_Init+0x78>
  {
    return HAL_ERROR;
 800a33c:	2301      	movs	r3, #1
 800a33e:	e01b      	b.n	800a378 <HAL_UART_Init+0xb0>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800a340:	687b      	ldr	r3, [r7, #4]
 800a342:	681b      	ldr	r3, [r3, #0]
 800a344:	685a      	ldr	r2, [r3, #4]
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	681b      	ldr	r3, [r3, #0]
 800a34a:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800a34e:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800a350:	687b      	ldr	r3, [r7, #4]
 800a352:	681b      	ldr	r3, [r3, #0]
 800a354:	689a      	ldr	r2, [r3, #8]
 800a356:	687b      	ldr	r3, [r7, #4]
 800a358:	681b      	ldr	r3, [r3, #0]
 800a35a:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800a35e:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 800a360:	687b      	ldr	r3, [r7, #4]
 800a362:	681b      	ldr	r3, [r3, #0]
 800a364:	681a      	ldr	r2, [r3, #0]
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	681b      	ldr	r3, [r3, #0]
 800a36a:	f042 0201 	orr.w	r2, r2, #1
 800a36e:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800a370:	6878      	ldr	r0, [r7, #4]
 800a372:	f000 fba9 	bl	800aac8 <UART_CheckIdleState>
 800a376:	4603      	mov	r3, r0
}
 800a378:	4618      	mov	r0, r3
 800a37a:	3708      	adds	r7, #8
 800a37c:	46bd      	mov	sp, r7
 800a37e:	bd80      	pop	{r7, pc}
 800a380:	08001a6d 	.word	0x08001a6d

0800a384 <HAL_UART_TxCpltCallback>:
  * @brief Tx Transfer completed callback.
  * @param huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 800a384:	b480      	push	{r7}
 800a386:	b083      	sub	sp, #12
 800a388:	af00      	add	r7, sp, #0
 800a38a:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_TxCpltCallback can be implemented in the user file.
   */
}
 800a38c:	bf00      	nop
 800a38e:	370c      	adds	r7, #12
 800a390:	46bd      	mov	sp, r7
 800a392:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a396:	4770      	bx	lr

0800a398 <HAL_UART_TxHalfCpltCallback>:
  * @brief  Tx Half Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 800a398:	b480      	push	{r7}
 800a39a:	b083      	sub	sp, #12
 800a39c:	af00      	add	r7, sp, #0
 800a39e:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
   */
}
 800a3a0:	bf00      	nop
 800a3a2:	370c      	adds	r7, #12
 800a3a4:	46bd      	mov	sp, r7
 800a3a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3aa:	4770      	bx	lr

0800a3ac <HAL_UART_RxCpltCallback>:
  * @brief  Rx Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 800a3ac:	b480      	push	{r7}
 800a3ae:	b083      	sub	sp, #12
 800a3b0:	af00      	add	r7, sp, #0
 800a3b2:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_RxCpltCallback can be implemented in the user file.
   */
}
 800a3b4:	bf00      	nop
 800a3b6:	370c      	adds	r7, #12
 800a3b8:	46bd      	mov	sp, r7
 800a3ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3be:	4770      	bx	lr

0800a3c0 <HAL_UART_RxHalfCpltCallback>:
  * @brief  Rx Half Transfer completed callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
{
 800a3c0:	b480      	push	{r7}
 800a3c2:	b083      	sub	sp, #12
 800a3c4:	af00      	add	r7, sp, #0
 800a3c6:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE: This function should not be modified, when the callback is needed,
           the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
   */
}
 800a3c8:	bf00      	nop
 800a3ca:	370c      	adds	r7, #12
 800a3cc:	46bd      	mov	sp, r7
 800a3ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3d2:	4770      	bx	lr

0800a3d4 <HAL_UART_ErrorCallback>:
  * @brief  UART error callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
{
 800a3d4:	b480      	push	{r7}
 800a3d6:	b083      	sub	sp, #12
 800a3d8:	af00      	add	r7, sp, #0
 800a3da:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_ErrorCallback can be implemented in the user file.
   */
}
 800a3dc:	bf00      	nop
 800a3de:	370c      	adds	r7, #12
 800a3e0:	46bd      	mov	sp, r7
 800a3e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3e6:	4770      	bx	lr

0800a3e8 <HAL_UART_AbortCpltCallback>:
  * @brief  UART Abort Complete callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
{
 800a3e8:	b480      	push	{r7}
 800a3ea:	b083      	sub	sp, #12
 800a3ec:	af00      	add	r7, sp, #0
 800a3ee:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_AbortCpltCallback can be implemented in the user file.
   */
}
 800a3f0:	bf00      	nop
 800a3f2:	370c      	adds	r7, #12
 800a3f4:	46bd      	mov	sp, r7
 800a3f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a3fa:	4770      	bx	lr

0800a3fc <HAL_UART_AbortTransmitCpltCallback>:
  * @brief  UART Abort Complete callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
{
 800a3fc:	b480      	push	{r7}
 800a3fe:	b083      	sub	sp, #12
 800a400:	af00      	add	r7, sp, #0
 800a402:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
   */
}
 800a404:	bf00      	nop
 800a406:	370c      	adds	r7, #12
 800a408:	46bd      	mov	sp, r7
 800a40a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a40e:	4770      	bx	lr

0800a410 <HAL_UART_AbortReceiveCpltCallback>:
  * @brief  UART Abort Receive Complete callback.
  * @param  huart UART handle.
  * @retval None
  */
__weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
{
 800a410:	b480      	push	{r7}
 800a412:	b083      	sub	sp, #12
 800a414:	af00      	add	r7, sp, #0
 800a416:	6078      	str	r0, [r7, #4]
  UNUSED(huart);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
   */
}
 800a418:	bf00      	nop
 800a41a:	370c      	adds	r7, #12
 800a41c:	46bd      	mov	sp, r7
 800a41e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a422:	4770      	bx	lr

0800a424 <HAL_UARTEx_RxEventCallback>:
  * @param  Size  Number of data available in application reception buffer (indicates a position in
  *               reception buffer until which, data are available)
  * @retval None
  */
__weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
{
 800a424:	b480      	push	{r7}
 800a426:	b083      	sub	sp, #12
 800a428:	af00      	add	r7, sp, #0
 800a42a:	6078      	str	r0, [r7, #4]
 800a42c:	460b      	mov	r3, r1
 800a42e:	807b      	strh	r3, [r7, #2]
  UNUSED(Size);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_UARTEx_RxEventCallback can be implemented in the user file.
   */
}
 800a430:	bf00      	nop
 800a432:	370c      	adds	r7, #12
 800a434:	46bd      	mov	sp, r7
 800a436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a43a:	4770      	bx	lr

0800a43c <UART_InitCallbacksToDefault>:
  * @param  huart UART handle.
  * @retval none
  */
#if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
{
 800a43c:	b480      	push	{r7}
 800a43e:	b083      	sub	sp, #12
 800a440:	af00      	add	r7, sp, #0
 800a442:	6078      	str	r0, [r7, #4]
  /* Init the UART Callback settings */
  huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltCallback        */
 800a444:	687b      	ldr	r3, [r7, #4]
 800a446:	4a14      	ldr	r2, [pc, #80]	@ (800a498 <UART_InitCallbacksToDefault+0x5c>)
 800a448:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallback            */
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	4a13      	ldr	r2, [pc, #76]	@ (800a49c <UART_InitCallbacksToDefault+0x60>)
 800a450:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltCallback        */
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	4a12      	ldr	r2, [pc, #72]	@ (800a4a0 <UART_InitCallbacksToDefault+0x64>)
 800a458:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
  huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallback            */
 800a45c:	687b      	ldr	r3, [r7, #4]
 800a45e:	4a11      	ldr	r2, [pc, #68]	@ (800a4a4 <UART_InitCallbacksToDefault+0x68>)
 800a460:	f8c3 2094 	str.w	r2, [r3, #148]	@ 0x94
  huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallback             */
 800a464:	687b      	ldr	r3, [r7, #4]
 800a466:	4a10      	ldr	r2, [pc, #64]	@ (800a4a8 <UART_InitCallbacksToDefault+0x6c>)
 800a468:	f8c3 2098 	str.w	r2, [r3, #152]	@ 0x98
  huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCallback         */
 800a46c:	687b      	ldr	r3, [r7, #4]
 800a46e:	4a0f      	ldr	r2, [pc, #60]	@ (800a4ac <UART_InitCallbacksToDefault+0x70>)
 800a470:	f8c3 209c 	str.w	r2, [r3, #156]	@ 0x9c
  huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransmitCpltCallback */
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	4a0e      	ldr	r2, [pc, #56]	@ (800a4b0 <UART_InitCallbacksToDefault+0x74>)
 800a478:	f8c3 20a0 	str.w	r2, [r3, #160]	@ 0xa0
  huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiveCpltCallback  */
 800a47c:	687b      	ldr	r3, [r7, #4]
 800a47e:	4a0d      	ldr	r2, [pc, #52]	@ (800a4b4 <UART_InitCallbacksToDefault+0x78>)
 800a480:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4
#if defined(USART_CR1_UESM)
#if defined(USART_CR3_WUFIE)
  huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallback            */
#endif /* USART_CR3_WUFIE */
#endif /* USART_CR1_UESM */
  huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCallback           */
 800a484:	687b      	ldr	r3, [r7, #4]
 800a486:	4a0c      	ldr	r2, [pc, #48]	@ (800a4b8 <UART_InitCallbacksToDefault+0x7c>)
 800a488:	f8c3 20a8 	str.w	r2, [r3, #168]	@ 0xa8

}
 800a48c:	bf00      	nop
 800a48e:	370c      	adds	r7, #12
 800a490:	46bd      	mov	sp, r7
 800a492:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a496:	4770      	bx	lr
 800a498:	0800a399 	.word	0x0800a399
 800a49c:	0800a385 	.word	0x0800a385
 800a4a0:	0800a3c1 	.word	0x0800a3c1
 800a4a4:	0800a3ad 	.word	0x0800a3ad
 800a4a8:	0800a3d5 	.word	0x0800a3d5
 800a4ac:	0800a3e9 	.word	0x0800a3e9
 800a4b0:	0800a3fd 	.word	0x0800a3fd
 800a4b4:	0800a411 	.word	0x0800a411
 800a4b8:	0800a425 	.word	0x0800a425

0800a4bc <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 800a4bc:	b580      	push	{r7, lr}
 800a4be:	b088      	sub	sp, #32
 800a4c0:	af00      	add	r7, sp, #0
 800a4c2:	6078      	str	r0, [r7, #4]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 800a4c4:	2300      	movs	r3, #0
 800a4c6:	77bb      	strb	r3, [r7, #30]
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800a4c8:	687b      	ldr	r3, [r7, #4]
 800a4ca:	689a      	ldr	r2, [r3, #8]
 800a4cc:	687b      	ldr	r3, [r7, #4]
 800a4ce:	691b      	ldr	r3, [r3, #16]
 800a4d0:	431a      	orrs	r2, r3
 800a4d2:	687b      	ldr	r3, [r7, #4]
 800a4d4:	695b      	ldr	r3, [r3, #20]
 800a4d6:	431a      	orrs	r2, r3
 800a4d8:	687b      	ldr	r3, [r7, #4]
 800a4da:	69db      	ldr	r3, [r3, #28]
 800a4dc:	4313      	orrs	r3, r2
 800a4de:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	681b      	ldr	r3, [r3, #0]
 800a4e4:	681a      	ldr	r2, [r3, #0]
 800a4e6:	4ba6      	ldr	r3, [pc, #664]	@ (800a780 <UART_SetConfig+0x2c4>)
 800a4e8:	4013      	ands	r3, r2
 800a4ea:	687a      	ldr	r2, [r7, #4]
 800a4ec:	6812      	ldr	r2, [r2, #0]
 800a4ee:	6979      	ldr	r1, [r7, #20]
 800a4f0:	430b      	orrs	r3, r1
 800a4f2:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	681b      	ldr	r3, [r3, #0]
 800a4f8:	685b      	ldr	r3, [r3, #4]
 800a4fa:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	68da      	ldr	r2, [r3, #12]
 800a502:	687b      	ldr	r3, [r7, #4]
 800a504:	681b      	ldr	r3, [r3, #0]
 800a506:	430a      	orrs	r2, r1
 800a508:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800a50a:	687b      	ldr	r3, [r7, #4]
 800a50c:	699b      	ldr	r3, [r3, #24]
 800a50e:	617b      	str	r3, [r7, #20]

  tmpreg |= huart->Init.OneBitSampling;
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	6a1b      	ldr	r3, [r3, #32]
 800a514:	697a      	ldr	r2, [r7, #20]
 800a516:	4313      	orrs	r3, r2
 800a518:	617b      	str	r3, [r7, #20]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800a51a:	687b      	ldr	r3, [r7, #4]
 800a51c:	681b      	ldr	r3, [r3, #0]
 800a51e:	689b      	ldr	r3, [r3, #8]
 800a520:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 800a524:	687b      	ldr	r3, [r7, #4]
 800a526:	681b      	ldr	r3, [r3, #0]
 800a528:	697a      	ldr	r2, [r7, #20]
 800a52a:	430a      	orrs	r2, r1
 800a52c:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	681b      	ldr	r3, [r3, #0]
 800a532:	4a94      	ldr	r2, [pc, #592]	@ (800a784 <UART_SetConfig+0x2c8>)
 800a534:	4293      	cmp	r3, r2
 800a536:	d120      	bne.n	800a57a <UART_SetConfig+0xbe>
 800a538:	4b93      	ldr	r3, [pc, #588]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a53a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a53e:	f003 0303 	and.w	r3, r3, #3
 800a542:	2b03      	cmp	r3, #3
 800a544:	d816      	bhi.n	800a574 <UART_SetConfig+0xb8>
 800a546:	a201      	add	r2, pc, #4	@ (adr r2, 800a54c <UART_SetConfig+0x90>)
 800a548:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a54c:	0800a55d 	.word	0x0800a55d
 800a550:	0800a569 	.word	0x0800a569
 800a554:	0800a563 	.word	0x0800a563
 800a558:	0800a56f 	.word	0x0800a56f
 800a55c:	2301      	movs	r3, #1
 800a55e:	77fb      	strb	r3, [r7, #31]
 800a560:	e150      	b.n	800a804 <UART_SetConfig+0x348>
 800a562:	2302      	movs	r3, #2
 800a564:	77fb      	strb	r3, [r7, #31]
 800a566:	e14d      	b.n	800a804 <UART_SetConfig+0x348>
 800a568:	2304      	movs	r3, #4
 800a56a:	77fb      	strb	r3, [r7, #31]
 800a56c:	e14a      	b.n	800a804 <UART_SetConfig+0x348>
 800a56e:	2308      	movs	r3, #8
 800a570:	77fb      	strb	r3, [r7, #31]
 800a572:	e147      	b.n	800a804 <UART_SetConfig+0x348>
 800a574:	2310      	movs	r3, #16
 800a576:	77fb      	strb	r3, [r7, #31]
 800a578:	e144      	b.n	800a804 <UART_SetConfig+0x348>
 800a57a:	687b      	ldr	r3, [r7, #4]
 800a57c:	681b      	ldr	r3, [r3, #0]
 800a57e:	4a83      	ldr	r2, [pc, #524]	@ (800a78c <UART_SetConfig+0x2d0>)
 800a580:	4293      	cmp	r3, r2
 800a582:	d132      	bne.n	800a5ea <UART_SetConfig+0x12e>
 800a584:	4b80      	ldr	r3, [pc, #512]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a586:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a58a:	f003 030c 	and.w	r3, r3, #12
 800a58e:	2b0c      	cmp	r3, #12
 800a590:	d828      	bhi.n	800a5e4 <UART_SetConfig+0x128>
 800a592:	a201      	add	r2, pc, #4	@ (adr r2, 800a598 <UART_SetConfig+0xdc>)
 800a594:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a598:	0800a5cd 	.word	0x0800a5cd
 800a59c:	0800a5e5 	.word	0x0800a5e5
 800a5a0:	0800a5e5 	.word	0x0800a5e5
 800a5a4:	0800a5e5 	.word	0x0800a5e5
 800a5a8:	0800a5d9 	.word	0x0800a5d9
 800a5ac:	0800a5e5 	.word	0x0800a5e5
 800a5b0:	0800a5e5 	.word	0x0800a5e5
 800a5b4:	0800a5e5 	.word	0x0800a5e5
 800a5b8:	0800a5d3 	.word	0x0800a5d3
 800a5bc:	0800a5e5 	.word	0x0800a5e5
 800a5c0:	0800a5e5 	.word	0x0800a5e5
 800a5c4:	0800a5e5 	.word	0x0800a5e5
 800a5c8:	0800a5df 	.word	0x0800a5df
 800a5cc:	2300      	movs	r3, #0
 800a5ce:	77fb      	strb	r3, [r7, #31]
 800a5d0:	e118      	b.n	800a804 <UART_SetConfig+0x348>
 800a5d2:	2302      	movs	r3, #2
 800a5d4:	77fb      	strb	r3, [r7, #31]
 800a5d6:	e115      	b.n	800a804 <UART_SetConfig+0x348>
 800a5d8:	2304      	movs	r3, #4
 800a5da:	77fb      	strb	r3, [r7, #31]
 800a5dc:	e112      	b.n	800a804 <UART_SetConfig+0x348>
 800a5de:	2308      	movs	r3, #8
 800a5e0:	77fb      	strb	r3, [r7, #31]
 800a5e2:	e10f      	b.n	800a804 <UART_SetConfig+0x348>
 800a5e4:	2310      	movs	r3, #16
 800a5e6:	77fb      	strb	r3, [r7, #31]
 800a5e8:	e10c      	b.n	800a804 <UART_SetConfig+0x348>
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	681b      	ldr	r3, [r3, #0]
 800a5ee:	4a68      	ldr	r2, [pc, #416]	@ (800a790 <UART_SetConfig+0x2d4>)
 800a5f0:	4293      	cmp	r3, r2
 800a5f2:	d120      	bne.n	800a636 <UART_SetConfig+0x17a>
 800a5f4:	4b64      	ldr	r3, [pc, #400]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a5f6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a5fa:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 800a5fe:	2b30      	cmp	r3, #48	@ 0x30
 800a600:	d013      	beq.n	800a62a <UART_SetConfig+0x16e>
 800a602:	2b30      	cmp	r3, #48	@ 0x30
 800a604:	d814      	bhi.n	800a630 <UART_SetConfig+0x174>
 800a606:	2b20      	cmp	r3, #32
 800a608:	d009      	beq.n	800a61e <UART_SetConfig+0x162>
 800a60a:	2b20      	cmp	r3, #32
 800a60c:	d810      	bhi.n	800a630 <UART_SetConfig+0x174>
 800a60e:	2b00      	cmp	r3, #0
 800a610:	d002      	beq.n	800a618 <UART_SetConfig+0x15c>
 800a612:	2b10      	cmp	r3, #16
 800a614:	d006      	beq.n	800a624 <UART_SetConfig+0x168>
 800a616:	e00b      	b.n	800a630 <UART_SetConfig+0x174>
 800a618:	2300      	movs	r3, #0
 800a61a:	77fb      	strb	r3, [r7, #31]
 800a61c:	e0f2      	b.n	800a804 <UART_SetConfig+0x348>
 800a61e:	2302      	movs	r3, #2
 800a620:	77fb      	strb	r3, [r7, #31]
 800a622:	e0ef      	b.n	800a804 <UART_SetConfig+0x348>
 800a624:	2304      	movs	r3, #4
 800a626:	77fb      	strb	r3, [r7, #31]
 800a628:	e0ec      	b.n	800a804 <UART_SetConfig+0x348>
 800a62a:	2308      	movs	r3, #8
 800a62c:	77fb      	strb	r3, [r7, #31]
 800a62e:	e0e9      	b.n	800a804 <UART_SetConfig+0x348>
 800a630:	2310      	movs	r3, #16
 800a632:	77fb      	strb	r3, [r7, #31]
 800a634:	e0e6      	b.n	800a804 <UART_SetConfig+0x348>
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	681b      	ldr	r3, [r3, #0]
 800a63a:	4a56      	ldr	r2, [pc, #344]	@ (800a794 <UART_SetConfig+0x2d8>)
 800a63c:	4293      	cmp	r3, r2
 800a63e:	d120      	bne.n	800a682 <UART_SetConfig+0x1c6>
 800a640:	4b51      	ldr	r3, [pc, #324]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a642:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a646:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 800a64a:	2bc0      	cmp	r3, #192	@ 0xc0
 800a64c:	d013      	beq.n	800a676 <UART_SetConfig+0x1ba>
 800a64e:	2bc0      	cmp	r3, #192	@ 0xc0
 800a650:	d814      	bhi.n	800a67c <UART_SetConfig+0x1c0>
 800a652:	2b80      	cmp	r3, #128	@ 0x80
 800a654:	d009      	beq.n	800a66a <UART_SetConfig+0x1ae>
 800a656:	2b80      	cmp	r3, #128	@ 0x80
 800a658:	d810      	bhi.n	800a67c <UART_SetConfig+0x1c0>
 800a65a:	2b00      	cmp	r3, #0
 800a65c:	d002      	beq.n	800a664 <UART_SetConfig+0x1a8>
 800a65e:	2b40      	cmp	r3, #64	@ 0x40
 800a660:	d006      	beq.n	800a670 <UART_SetConfig+0x1b4>
 800a662:	e00b      	b.n	800a67c <UART_SetConfig+0x1c0>
 800a664:	2300      	movs	r3, #0
 800a666:	77fb      	strb	r3, [r7, #31]
 800a668:	e0cc      	b.n	800a804 <UART_SetConfig+0x348>
 800a66a:	2302      	movs	r3, #2
 800a66c:	77fb      	strb	r3, [r7, #31]
 800a66e:	e0c9      	b.n	800a804 <UART_SetConfig+0x348>
 800a670:	2304      	movs	r3, #4
 800a672:	77fb      	strb	r3, [r7, #31]
 800a674:	e0c6      	b.n	800a804 <UART_SetConfig+0x348>
 800a676:	2308      	movs	r3, #8
 800a678:	77fb      	strb	r3, [r7, #31]
 800a67a:	e0c3      	b.n	800a804 <UART_SetConfig+0x348>
 800a67c:	2310      	movs	r3, #16
 800a67e:	77fb      	strb	r3, [r7, #31]
 800a680:	e0c0      	b.n	800a804 <UART_SetConfig+0x348>
 800a682:	687b      	ldr	r3, [r7, #4]
 800a684:	681b      	ldr	r3, [r3, #0]
 800a686:	4a44      	ldr	r2, [pc, #272]	@ (800a798 <UART_SetConfig+0x2dc>)
 800a688:	4293      	cmp	r3, r2
 800a68a:	d125      	bne.n	800a6d8 <UART_SetConfig+0x21c>
 800a68c:	4b3e      	ldr	r3, [pc, #248]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a68e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a692:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800a696:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a69a:	d017      	beq.n	800a6cc <UART_SetConfig+0x210>
 800a69c:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800a6a0:	d817      	bhi.n	800a6d2 <UART_SetConfig+0x216>
 800a6a2:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a6a6:	d00b      	beq.n	800a6c0 <UART_SetConfig+0x204>
 800a6a8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800a6ac:	d811      	bhi.n	800a6d2 <UART_SetConfig+0x216>
 800a6ae:	2b00      	cmp	r3, #0
 800a6b0:	d003      	beq.n	800a6ba <UART_SetConfig+0x1fe>
 800a6b2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800a6b6:	d006      	beq.n	800a6c6 <UART_SetConfig+0x20a>
 800a6b8:	e00b      	b.n	800a6d2 <UART_SetConfig+0x216>
 800a6ba:	2300      	movs	r3, #0
 800a6bc:	77fb      	strb	r3, [r7, #31]
 800a6be:	e0a1      	b.n	800a804 <UART_SetConfig+0x348>
 800a6c0:	2302      	movs	r3, #2
 800a6c2:	77fb      	strb	r3, [r7, #31]
 800a6c4:	e09e      	b.n	800a804 <UART_SetConfig+0x348>
 800a6c6:	2304      	movs	r3, #4
 800a6c8:	77fb      	strb	r3, [r7, #31]
 800a6ca:	e09b      	b.n	800a804 <UART_SetConfig+0x348>
 800a6cc:	2308      	movs	r3, #8
 800a6ce:	77fb      	strb	r3, [r7, #31]
 800a6d0:	e098      	b.n	800a804 <UART_SetConfig+0x348>
 800a6d2:	2310      	movs	r3, #16
 800a6d4:	77fb      	strb	r3, [r7, #31]
 800a6d6:	e095      	b.n	800a804 <UART_SetConfig+0x348>
 800a6d8:	687b      	ldr	r3, [r7, #4]
 800a6da:	681b      	ldr	r3, [r3, #0]
 800a6dc:	4a2f      	ldr	r2, [pc, #188]	@ (800a79c <UART_SetConfig+0x2e0>)
 800a6de:	4293      	cmp	r3, r2
 800a6e0:	d125      	bne.n	800a72e <UART_SetConfig+0x272>
 800a6e2:	4b29      	ldr	r3, [pc, #164]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a6e4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a6e8:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800a6ec:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a6f0:	d017      	beq.n	800a722 <UART_SetConfig+0x266>
 800a6f2:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800a6f6:	d817      	bhi.n	800a728 <UART_SetConfig+0x26c>
 800a6f8:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a6fc:	d00b      	beq.n	800a716 <UART_SetConfig+0x25a>
 800a6fe:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800a702:	d811      	bhi.n	800a728 <UART_SetConfig+0x26c>
 800a704:	2b00      	cmp	r3, #0
 800a706:	d003      	beq.n	800a710 <UART_SetConfig+0x254>
 800a708:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 800a70c:	d006      	beq.n	800a71c <UART_SetConfig+0x260>
 800a70e:	e00b      	b.n	800a728 <UART_SetConfig+0x26c>
 800a710:	2301      	movs	r3, #1
 800a712:	77fb      	strb	r3, [r7, #31]
 800a714:	e076      	b.n	800a804 <UART_SetConfig+0x348>
 800a716:	2302      	movs	r3, #2
 800a718:	77fb      	strb	r3, [r7, #31]
 800a71a:	e073      	b.n	800a804 <UART_SetConfig+0x348>
 800a71c:	2304      	movs	r3, #4
 800a71e:	77fb      	strb	r3, [r7, #31]
 800a720:	e070      	b.n	800a804 <UART_SetConfig+0x348>
 800a722:	2308      	movs	r3, #8
 800a724:	77fb      	strb	r3, [r7, #31]
 800a726:	e06d      	b.n	800a804 <UART_SetConfig+0x348>
 800a728:	2310      	movs	r3, #16
 800a72a:	77fb      	strb	r3, [r7, #31]
 800a72c:	e06a      	b.n	800a804 <UART_SetConfig+0x348>
 800a72e:	687b      	ldr	r3, [r7, #4]
 800a730:	681b      	ldr	r3, [r3, #0]
 800a732:	4a1b      	ldr	r2, [pc, #108]	@ (800a7a0 <UART_SetConfig+0x2e4>)
 800a734:	4293      	cmp	r3, r2
 800a736:	d138      	bne.n	800a7aa <UART_SetConfig+0x2ee>
 800a738:	4b13      	ldr	r3, [pc, #76]	@ (800a788 <UART_SetConfig+0x2cc>)
 800a73a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a73e:	f403 5340 	and.w	r3, r3, #12288	@ 0x3000
 800a742:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800a746:	d017      	beq.n	800a778 <UART_SetConfig+0x2bc>
 800a748:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 800a74c:	d82a      	bhi.n	800a7a4 <UART_SetConfig+0x2e8>
 800a74e:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a752:	d00b      	beq.n	800a76c <UART_SetConfig+0x2b0>
 800a754:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800a758:	d824      	bhi.n	800a7a4 <UART_SetConfig+0x2e8>
 800a75a:	2b00      	cmp	r3, #0
 800a75c:	d003      	beq.n	800a766 <UART_SetConfig+0x2aa>
 800a75e:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800a762:	d006      	beq.n	800a772 <UART_SetConfig+0x2b6>
 800a764:	e01e      	b.n	800a7a4 <UART_SetConfig+0x2e8>
 800a766:	2300      	movs	r3, #0
 800a768:	77fb      	strb	r3, [r7, #31]
 800a76a:	e04b      	b.n	800a804 <UART_SetConfig+0x348>
 800a76c:	2302      	movs	r3, #2
 800a76e:	77fb      	strb	r3, [r7, #31]
 800a770:	e048      	b.n	800a804 <UART_SetConfig+0x348>
 800a772:	2304      	movs	r3, #4
 800a774:	77fb      	strb	r3, [r7, #31]
 800a776:	e045      	b.n	800a804 <UART_SetConfig+0x348>
 800a778:	2308      	movs	r3, #8
 800a77a:	77fb      	strb	r3, [r7, #31]
 800a77c:	e042      	b.n	800a804 <UART_SetConfig+0x348>
 800a77e:	bf00      	nop
 800a780:	efff69f3 	.word	0xefff69f3
 800a784:	40011000 	.word	0x40011000
 800a788:	40023800 	.word	0x40023800
 800a78c:	40004400 	.word	0x40004400
 800a790:	40004800 	.word	0x40004800
 800a794:	40004c00 	.word	0x40004c00
 800a798:	40005000 	.word	0x40005000
 800a79c:	40011400 	.word	0x40011400
 800a7a0:	40007800 	.word	0x40007800
 800a7a4:	2310      	movs	r3, #16
 800a7a6:	77fb      	strb	r3, [r7, #31]
 800a7a8:	e02c      	b.n	800a804 <UART_SetConfig+0x348>
 800a7aa:	687b      	ldr	r3, [r7, #4]
 800a7ac:	681b      	ldr	r3, [r3, #0]
 800a7ae:	4a72      	ldr	r2, [pc, #456]	@ (800a978 <UART_SetConfig+0x4bc>)
 800a7b0:	4293      	cmp	r3, r2
 800a7b2:	d125      	bne.n	800a800 <UART_SetConfig+0x344>
 800a7b4:	4b71      	ldr	r3, [pc, #452]	@ (800a97c <UART_SetConfig+0x4c0>)
 800a7b6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a7ba:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800a7be:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 800a7c2:	d017      	beq.n	800a7f4 <UART_SetConfig+0x338>
 800a7c4:	f5b3 4f40 	cmp.w	r3, #49152	@ 0xc000
 800a7c8:	d817      	bhi.n	800a7fa <UART_SetConfig+0x33e>
 800a7ca:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a7ce:	d00b      	beq.n	800a7e8 <UART_SetConfig+0x32c>
 800a7d0:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a7d4:	d811      	bhi.n	800a7fa <UART_SetConfig+0x33e>
 800a7d6:	2b00      	cmp	r3, #0
 800a7d8:	d003      	beq.n	800a7e2 <UART_SetConfig+0x326>
 800a7da:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800a7de:	d006      	beq.n	800a7ee <UART_SetConfig+0x332>
 800a7e0:	e00b      	b.n	800a7fa <UART_SetConfig+0x33e>
 800a7e2:	2300      	movs	r3, #0
 800a7e4:	77fb      	strb	r3, [r7, #31]
 800a7e6:	e00d      	b.n	800a804 <UART_SetConfig+0x348>
 800a7e8:	2302      	movs	r3, #2
 800a7ea:	77fb      	strb	r3, [r7, #31]
 800a7ec:	e00a      	b.n	800a804 <UART_SetConfig+0x348>
 800a7ee:	2304      	movs	r3, #4
 800a7f0:	77fb      	strb	r3, [r7, #31]
 800a7f2:	e007      	b.n	800a804 <UART_SetConfig+0x348>
 800a7f4:	2308      	movs	r3, #8
 800a7f6:	77fb      	strb	r3, [r7, #31]
 800a7f8:	e004      	b.n	800a804 <UART_SetConfig+0x348>
 800a7fa:	2310      	movs	r3, #16
 800a7fc:	77fb      	strb	r3, [r7, #31]
 800a7fe:	e001      	b.n	800a804 <UART_SetConfig+0x348>
 800a800:	2310      	movs	r3, #16
 800a802:	77fb      	strb	r3, [r7, #31]

  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800a804:	687b      	ldr	r3, [r7, #4]
 800a806:	69db      	ldr	r3, [r3, #28]
 800a808:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800a80c:	d15b      	bne.n	800a8c6 <UART_SetConfig+0x40a>
  {
    switch (clocksource)
 800a80e:	7ffb      	ldrb	r3, [r7, #31]
 800a810:	2b08      	cmp	r3, #8
 800a812:	d828      	bhi.n	800a866 <UART_SetConfig+0x3aa>
 800a814:	a201      	add	r2, pc, #4	@ (adr r2, 800a81c <UART_SetConfig+0x360>)
 800a816:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a81a:	bf00      	nop
 800a81c:	0800a841 	.word	0x0800a841
 800a820:	0800a849 	.word	0x0800a849
 800a824:	0800a851 	.word	0x0800a851
 800a828:	0800a867 	.word	0x0800a867
 800a82c:	0800a857 	.word	0x0800a857
 800a830:	0800a867 	.word	0x0800a867
 800a834:	0800a867 	.word	0x0800a867
 800a838:	0800a867 	.word	0x0800a867
 800a83c:	0800a85f 	.word	0x0800a85f
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800a840:	f7fd f88a 	bl	8007958 <HAL_RCC_GetPCLK1Freq>
 800a844:	61b8      	str	r0, [r7, #24]
        break;
 800a846:	e013      	b.n	800a870 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800a848:	f7fd f89a 	bl	8007980 <HAL_RCC_GetPCLK2Freq>
 800a84c:	61b8      	str	r0, [r7, #24]
        break;
 800a84e:	e00f      	b.n	800a870 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 800a850:	4b4b      	ldr	r3, [pc, #300]	@ (800a980 <UART_SetConfig+0x4c4>)
 800a852:	61bb      	str	r3, [r7, #24]
        break;
 800a854:	e00c      	b.n	800a870 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800a856:	f7fc ffad 	bl	80077b4 <HAL_RCC_GetSysClockFreq>
 800a85a:	61b8      	str	r0, [r7, #24]
        break;
 800a85c:	e008      	b.n	800a870 <UART_SetConfig+0x3b4>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800a85e:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800a862:	61bb      	str	r3, [r7, #24]
        break;
 800a864:	e004      	b.n	800a870 <UART_SetConfig+0x3b4>
      default:
        pclk = 0U;
 800a866:	2300      	movs	r3, #0
 800a868:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 800a86a:	2301      	movs	r3, #1
 800a86c:	77bb      	strb	r3, [r7, #30]
        break;
 800a86e:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800a870:	69bb      	ldr	r3, [r7, #24]
 800a872:	2b00      	cmp	r3, #0
 800a874:	d074      	beq.n	800a960 <UART_SetConfig+0x4a4>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 800a876:	69bb      	ldr	r3, [r7, #24]
 800a878:	005a      	lsls	r2, r3, #1
 800a87a:	687b      	ldr	r3, [r7, #4]
 800a87c:	685b      	ldr	r3, [r3, #4]
 800a87e:	085b      	lsrs	r3, r3, #1
 800a880:	441a      	add	r2, r3
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	685b      	ldr	r3, [r3, #4]
 800a886:	fbb2 f3f3 	udiv	r3, r2, r3
 800a88a:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800a88c:	693b      	ldr	r3, [r7, #16]
 800a88e:	2b0f      	cmp	r3, #15
 800a890:	d916      	bls.n	800a8c0 <UART_SetConfig+0x404>
 800a892:	693b      	ldr	r3, [r7, #16]
 800a894:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a898:	d212      	bcs.n	800a8c0 <UART_SetConfig+0x404>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800a89a:	693b      	ldr	r3, [r7, #16]
 800a89c:	b29b      	uxth	r3, r3
 800a89e:	f023 030f 	bic.w	r3, r3, #15
 800a8a2:	81fb      	strh	r3, [r7, #14]
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800a8a4:	693b      	ldr	r3, [r7, #16]
 800a8a6:	085b      	lsrs	r3, r3, #1
 800a8a8:	b29b      	uxth	r3, r3
 800a8aa:	f003 0307 	and.w	r3, r3, #7
 800a8ae:	b29a      	uxth	r2, r3
 800a8b0:	89fb      	ldrh	r3, [r7, #14]
 800a8b2:	4313      	orrs	r3, r2
 800a8b4:	81fb      	strh	r3, [r7, #14]
        huart->Instance->BRR = brrtemp;
 800a8b6:	687b      	ldr	r3, [r7, #4]
 800a8b8:	681b      	ldr	r3, [r3, #0]
 800a8ba:	89fa      	ldrh	r2, [r7, #14]
 800a8bc:	60da      	str	r2, [r3, #12]
 800a8be:	e04f      	b.n	800a960 <UART_SetConfig+0x4a4>
      }
      else
      {
        ret = HAL_ERROR;
 800a8c0:	2301      	movs	r3, #1
 800a8c2:	77bb      	strb	r3, [r7, #30]
 800a8c4:	e04c      	b.n	800a960 <UART_SetConfig+0x4a4>
      }
    }
  }
  else
  {
    switch (clocksource)
 800a8c6:	7ffb      	ldrb	r3, [r7, #31]
 800a8c8:	2b08      	cmp	r3, #8
 800a8ca:	d828      	bhi.n	800a91e <UART_SetConfig+0x462>
 800a8cc:	a201      	add	r2, pc, #4	@ (adr r2, 800a8d4 <UART_SetConfig+0x418>)
 800a8ce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a8d2:	bf00      	nop
 800a8d4:	0800a8f9 	.word	0x0800a8f9
 800a8d8:	0800a901 	.word	0x0800a901
 800a8dc:	0800a909 	.word	0x0800a909
 800a8e0:	0800a91f 	.word	0x0800a91f
 800a8e4:	0800a90f 	.word	0x0800a90f
 800a8e8:	0800a91f 	.word	0x0800a91f
 800a8ec:	0800a91f 	.word	0x0800a91f
 800a8f0:	0800a91f 	.word	0x0800a91f
 800a8f4:	0800a917 	.word	0x0800a917
    {
      case UART_CLOCKSOURCE_PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800a8f8:	f7fd f82e 	bl	8007958 <HAL_RCC_GetPCLK1Freq>
 800a8fc:	61b8      	str	r0, [r7, #24]
        break;
 800a8fe:	e013      	b.n	800a928 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800a900:	f7fd f83e 	bl	8007980 <HAL_RCC_GetPCLK2Freq>
 800a904:	61b8      	str	r0, [r7, #24]
        break;
 800a906:	e00f      	b.n	800a928 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_HSI:
        pclk = (uint32_t) HSI_VALUE;
 800a908:	4b1d      	ldr	r3, [pc, #116]	@ (800a980 <UART_SetConfig+0x4c4>)
 800a90a:	61bb      	str	r3, [r7, #24]
        break;
 800a90c:	e00c      	b.n	800a928 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_SYSCLK:
        pclk = HAL_RCC_GetSysClockFreq();
 800a90e:	f7fc ff51 	bl	80077b4 <HAL_RCC_GetSysClockFreq>
 800a912:	61b8      	str	r0, [r7, #24]
        break;
 800a914:	e008      	b.n	800a928 <UART_SetConfig+0x46c>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800a916:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800a91a:	61bb      	str	r3, [r7, #24]
        break;
 800a91c:	e004      	b.n	800a928 <UART_SetConfig+0x46c>
      default:
        pclk = 0U;
 800a91e:	2300      	movs	r3, #0
 800a920:	61bb      	str	r3, [r7, #24]
        ret = HAL_ERROR;
 800a922:	2301      	movs	r3, #1
 800a924:	77bb      	strb	r3, [r7, #30]
        break;
 800a926:	bf00      	nop
    }

    if (pclk != 0U)
 800a928:	69bb      	ldr	r3, [r7, #24]
 800a92a:	2b00      	cmp	r3, #0
 800a92c:	d018      	beq.n	800a960 <UART_SetConfig+0x4a4>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 800a92e:	687b      	ldr	r3, [r7, #4]
 800a930:	685b      	ldr	r3, [r3, #4]
 800a932:	085a      	lsrs	r2, r3, #1
 800a934:	69bb      	ldr	r3, [r7, #24]
 800a936:	441a      	add	r2, r3
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	685b      	ldr	r3, [r3, #4]
 800a93c:	fbb2 f3f3 	udiv	r3, r2, r3
 800a940:	613b      	str	r3, [r7, #16]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800a942:	693b      	ldr	r3, [r7, #16]
 800a944:	2b0f      	cmp	r3, #15
 800a946:	d909      	bls.n	800a95c <UART_SetConfig+0x4a0>
 800a948:	693b      	ldr	r3, [r7, #16]
 800a94a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a94e:	d205      	bcs.n	800a95c <UART_SetConfig+0x4a0>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 800a950:	693b      	ldr	r3, [r7, #16]
 800a952:	b29a      	uxth	r2, r3
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	681b      	ldr	r3, [r3, #0]
 800a958:	60da      	str	r2, [r3, #12]
 800a95a:	e001      	b.n	800a960 <UART_SetConfig+0x4a4>
      }
      else
      {
        ret = HAL_ERROR;
 800a95c:	2301      	movs	r3, #1
 800a95e:	77bb      	strb	r3, [r7, #30]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800a960:	687b      	ldr	r3, [r7, #4]
 800a962:	2200      	movs	r2, #0
 800a964:	669a      	str	r2, [r3, #104]	@ 0x68
  huart->TxISR = NULL;
 800a966:	687b      	ldr	r3, [r7, #4]
 800a968:	2200      	movs	r2, #0
 800a96a:	66da      	str	r2, [r3, #108]	@ 0x6c

  return ret;
 800a96c:	7fbb      	ldrb	r3, [r7, #30]
}
 800a96e:	4618      	mov	r0, r3
 800a970:	3720      	adds	r7, #32
 800a972:	46bd      	mov	sp, r7
 800a974:	bd80      	pop	{r7, pc}
 800a976:	bf00      	nop
 800a978:	40007c00 	.word	0x40007c00
 800a97c:	40023800 	.word	0x40023800
 800a980:	00f42400 	.word	0x00f42400

0800a984 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 800a984:	b480      	push	{r7}
 800a986:	b083      	sub	sp, #12
 800a988:	af00      	add	r7, sp, #0
 800a98a:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800a98c:	687b      	ldr	r3, [r7, #4]
 800a98e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a990:	f003 0308 	and.w	r3, r3, #8
 800a994:	2b00      	cmp	r3, #0
 800a996:	d00a      	beq.n	800a9ae <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800a998:	687b      	ldr	r3, [r7, #4]
 800a99a:	681b      	ldr	r3, [r3, #0]
 800a99c:	685b      	ldr	r3, [r3, #4]
 800a99e:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800a9a2:	687b      	ldr	r3, [r7, #4]
 800a9a4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	681b      	ldr	r3, [r3, #0]
 800a9aa:	430a      	orrs	r2, r1
 800a9ac:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800a9ae:	687b      	ldr	r3, [r7, #4]
 800a9b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9b2:	f003 0301 	and.w	r3, r3, #1
 800a9b6:	2b00      	cmp	r3, #0
 800a9b8:	d00a      	beq.n	800a9d0 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800a9ba:	687b      	ldr	r3, [r7, #4]
 800a9bc:	681b      	ldr	r3, [r3, #0]
 800a9be:	685b      	ldr	r3, [r3, #4]
 800a9c0:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800a9c4:	687b      	ldr	r3, [r7, #4]
 800a9c6:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 800a9c8:	687b      	ldr	r3, [r7, #4]
 800a9ca:	681b      	ldr	r3, [r3, #0]
 800a9cc:	430a      	orrs	r2, r1
 800a9ce:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800a9d0:	687b      	ldr	r3, [r7, #4]
 800a9d2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9d4:	f003 0302 	and.w	r3, r3, #2
 800a9d8:	2b00      	cmp	r3, #0
 800a9da:	d00a      	beq.n	800a9f2 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800a9dc:	687b      	ldr	r3, [r7, #4]
 800a9de:	681b      	ldr	r3, [r3, #0]
 800a9e0:	685b      	ldr	r3, [r3, #4]
 800a9e2:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800a9e6:	687b      	ldr	r3, [r7, #4]
 800a9e8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	681b      	ldr	r3, [r3, #0]
 800a9ee:	430a      	orrs	r2, r1
 800a9f0:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a9f6:	f003 0304 	and.w	r3, r3, #4
 800a9fa:	2b00      	cmp	r3, #0
 800a9fc:	d00a      	beq.n	800aa14 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800a9fe:	687b      	ldr	r3, [r7, #4]
 800aa00:	681b      	ldr	r3, [r3, #0]
 800aa02:	685b      	ldr	r3, [r3, #4]
 800aa04:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800aa08:	687b      	ldr	r3, [r7, #4]
 800aa0a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800aa0c:	687b      	ldr	r3, [r7, #4]
 800aa0e:	681b      	ldr	r3, [r3, #0]
 800aa10:	430a      	orrs	r2, r1
 800aa12:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa18:	f003 0310 	and.w	r3, r3, #16
 800aa1c:	2b00      	cmp	r3, #0
 800aa1e:	d00a      	beq.n	800aa36 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800aa20:	687b      	ldr	r3, [r7, #4]
 800aa22:	681b      	ldr	r3, [r3, #0]
 800aa24:	689b      	ldr	r3, [r3, #8]
 800aa26:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800aa2a:	687b      	ldr	r3, [r7, #4]
 800aa2c:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	681b      	ldr	r3, [r3, #0]
 800aa32:	430a      	orrs	r2, r1
 800aa34:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa3a:	f003 0320 	and.w	r3, r3, #32
 800aa3e:	2b00      	cmp	r3, #0
 800aa40:	d00a      	beq.n	800aa58 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800aa42:	687b      	ldr	r3, [r7, #4]
 800aa44:	681b      	ldr	r3, [r3, #0]
 800aa46:	689b      	ldr	r3, [r3, #8]
 800aa48:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800aa4c:	687b      	ldr	r3, [r7, #4]
 800aa4e:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800aa50:	687b      	ldr	r3, [r7, #4]
 800aa52:	681b      	ldr	r3, [r3, #0]
 800aa54:	430a      	orrs	r2, r1
 800aa56:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800aa58:	687b      	ldr	r3, [r7, #4]
 800aa5a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa5c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800aa60:	2b00      	cmp	r3, #0
 800aa62:	d01a      	beq.n	800aa9a <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	681b      	ldr	r3, [r3, #0]
 800aa68:	685b      	ldr	r3, [r3, #4]
 800aa6a:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800aa6e:	687b      	ldr	r3, [r7, #4]
 800aa70:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	681b      	ldr	r3, [r3, #0]
 800aa76:	430a      	orrs	r2, r1
 800aa78:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800aa7a:	687b      	ldr	r3, [r7, #4]
 800aa7c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800aa7e:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800aa82:	d10a      	bne.n	800aa9a <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800aa84:	687b      	ldr	r3, [r7, #4]
 800aa86:	681b      	ldr	r3, [r3, #0]
 800aa88:	685b      	ldr	r3, [r3, #4]
 800aa8a:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800aa8e:	687b      	ldr	r3, [r7, #4]
 800aa90:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800aa92:	687b      	ldr	r3, [r7, #4]
 800aa94:	681b      	ldr	r3, [r3, #0]
 800aa96:	430a      	orrs	r2, r1
 800aa98:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800aa9a:	687b      	ldr	r3, [r7, #4]
 800aa9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800aa9e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800aaa2:	2b00      	cmp	r3, #0
 800aaa4:	d00a      	beq.n	800aabc <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	681b      	ldr	r3, [r3, #0]
 800aaaa:	685b      	ldr	r3, [r3, #4]
 800aaac:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800aab0:	687b      	ldr	r3, [r7, #4]
 800aab2:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	681b      	ldr	r3, [r3, #0]
 800aab8:	430a      	orrs	r2, r1
 800aaba:	605a      	str	r2, [r3, #4]
  }
}
 800aabc:	bf00      	nop
 800aabe:	370c      	adds	r7, #12
 800aac0:	46bd      	mov	sp, r7
 800aac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aac6:	4770      	bx	lr

0800aac8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800aac8:	b580      	push	{r7, lr}
 800aaca:	b08c      	sub	sp, #48	@ 0x30
 800aacc:	af02      	add	r7, sp, #8
 800aace:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800aad0:	687b      	ldr	r3, [r7, #4]
 800aad2:	2200      	movs	r2, #0
 800aad4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800aad8:	f7fa f82a 	bl	8004b30 <HAL_GetTick>
 800aadc:	6278      	str	r0, [r7, #36]	@ 0x24

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	681b      	ldr	r3, [r3, #0]
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	f003 0308 	and.w	r3, r3, #8
 800aae8:	2b08      	cmp	r3, #8
 800aaea:	d12e      	bne.n	800ab4a <UART_CheckIdleState+0x82>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800aaec:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800aaf0:	9300      	str	r3, [sp, #0]
 800aaf2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800aaf4:	2200      	movs	r2, #0
 800aaf6:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800aafa:	6878      	ldr	r0, [r7, #4]
 800aafc:	f000 f83b 	bl	800ab76 <UART_WaitOnFlagUntilTimeout>
 800ab00:	4603      	mov	r3, r0
 800ab02:	2b00      	cmp	r3, #0
 800ab04:	d021      	beq.n	800ab4a <UART_CheckIdleState+0x82>
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE));
 800ab06:	687b      	ldr	r3, [r7, #4]
 800ab08:	681b      	ldr	r3, [r3, #0]
 800ab0a:	613b      	str	r3, [r7, #16]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800ab0c:	693b      	ldr	r3, [r7, #16]
 800ab0e:	e853 3f00 	ldrex	r3, [r3]
 800ab12:	60fb      	str	r3, [r7, #12]
   return(result);
 800ab14:	68fb      	ldr	r3, [r7, #12]
 800ab16:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800ab1a:	623b      	str	r3, [r7, #32]
 800ab1c:	687b      	ldr	r3, [r7, #4]
 800ab1e:	681b      	ldr	r3, [r3, #0]
 800ab20:	461a      	mov	r2, r3
 800ab22:	6a3b      	ldr	r3, [r7, #32]
 800ab24:	61fb      	str	r3, [r7, #28]
 800ab26:	61ba      	str	r2, [r7, #24]
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800ab28:	69b9      	ldr	r1, [r7, #24]
 800ab2a:	69fa      	ldr	r2, [r7, #28]
 800ab2c:	e841 2300 	strex	r3, r2, [r1]
 800ab30:	617b      	str	r3, [r7, #20]
   return(result);
 800ab32:	697b      	ldr	r3, [r7, #20]
 800ab34:	2b00      	cmp	r3, #0
 800ab36:	d1e6      	bne.n	800ab06 <UART_CheckIdleState+0x3e>

      huart->gState = HAL_UART_STATE_READY;
 800ab38:	687b      	ldr	r3, [r7, #4]
 800ab3a:	2220      	movs	r2, #32
 800ab3c:	67da      	str	r2, [r3, #124]	@ 0x7c

      __HAL_UNLOCK(huart);
 800ab3e:	687b      	ldr	r3, [r7, #4]
 800ab40:	2200      	movs	r2, #0
 800ab42:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800ab46:	2303      	movs	r3, #3
 800ab48:	e011      	b.n	800ab6e <UART_CheckIdleState+0xa6>
    }
  }
#endif /* USART_ISR_REACK */

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	2220      	movs	r2, #32
 800ab4e:	67da      	str	r2, [r3, #124]	@ 0x7c
  huart->RxState = HAL_UART_STATE_READY;
 800ab50:	687b      	ldr	r3, [r7, #4]
 800ab52:	2220      	movs	r2, #32
 800ab54:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800ab58:	687b      	ldr	r3, [r7, #4]
 800ab5a:	2200      	movs	r2, #0
 800ab5c:	661a      	str	r2, [r3, #96]	@ 0x60
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800ab5e:	687b      	ldr	r3, [r7, #4]
 800ab60:	2200      	movs	r2, #0
 800ab62:	665a      	str	r2, [r3, #100]	@ 0x64

  __HAL_UNLOCK(huart);
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	2200      	movs	r2, #0
 800ab68:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

  return HAL_OK;
 800ab6c:	2300      	movs	r3, #0
}
 800ab6e:	4618      	mov	r0, r3
 800ab70:	3728      	adds	r7, #40	@ 0x28
 800ab72:	46bd      	mov	sp, r7
 800ab74:	bd80      	pop	{r7, pc}

0800ab76 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800ab76:	b580      	push	{r7, lr}
 800ab78:	b084      	sub	sp, #16
 800ab7a:	af00      	add	r7, sp, #0
 800ab7c:	60f8      	str	r0, [r7, #12]
 800ab7e:	60b9      	str	r1, [r7, #8]
 800ab80:	603b      	str	r3, [r7, #0]
 800ab82:	4613      	mov	r3, r2
 800ab84:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800ab86:	e04f      	b.n	800ac28 <UART_WaitOnFlagUntilTimeout+0xb2>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800ab88:	69bb      	ldr	r3, [r7, #24]
 800ab8a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ab8e:	d04b      	beq.n	800ac28 <UART_WaitOnFlagUntilTimeout+0xb2>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ab90:	f7f9 ffce 	bl	8004b30 <HAL_GetTick>
 800ab94:	4602      	mov	r2, r0
 800ab96:	683b      	ldr	r3, [r7, #0]
 800ab98:	1ad3      	subs	r3, r2, r3
 800ab9a:	69ba      	ldr	r2, [r7, #24]
 800ab9c:	429a      	cmp	r2, r3
 800ab9e:	d302      	bcc.n	800aba6 <UART_WaitOnFlagUntilTimeout+0x30>
 800aba0:	69bb      	ldr	r3, [r7, #24]
 800aba2:	2b00      	cmp	r3, #0
 800aba4:	d101      	bne.n	800abaa <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 800aba6:	2303      	movs	r3, #3
 800aba8:	e04e      	b.n	800ac48 <UART_WaitOnFlagUntilTimeout+0xd2>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 800abaa:	68fb      	ldr	r3, [r7, #12]
 800abac:	681b      	ldr	r3, [r3, #0]
 800abae:	681b      	ldr	r3, [r3, #0]
 800abb0:	f003 0304 	and.w	r3, r3, #4
 800abb4:	2b00      	cmp	r3, #0
 800abb6:	d037      	beq.n	800ac28 <UART_WaitOnFlagUntilTimeout+0xb2>
 800abb8:	68bb      	ldr	r3, [r7, #8]
 800abba:	2b80      	cmp	r3, #128	@ 0x80
 800abbc:	d034      	beq.n	800ac28 <UART_WaitOnFlagUntilTimeout+0xb2>
 800abbe:	68bb      	ldr	r3, [r7, #8]
 800abc0:	2b40      	cmp	r3, #64	@ 0x40
 800abc2:	d031      	beq.n	800ac28 <UART_WaitOnFlagUntilTimeout+0xb2>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800abc4:	68fb      	ldr	r3, [r7, #12]
 800abc6:	681b      	ldr	r3, [r3, #0]
 800abc8:	69db      	ldr	r3, [r3, #28]
 800abca:	f003 0308 	and.w	r3, r3, #8
 800abce:	2b08      	cmp	r3, #8
 800abd0:	d110      	bne.n	800abf4 <UART_WaitOnFlagUntilTimeout+0x7e>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800abd2:	68fb      	ldr	r3, [r7, #12]
 800abd4:	681b      	ldr	r3, [r3, #0]
 800abd6:	2208      	movs	r2, #8
 800abd8:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800abda:	68f8      	ldr	r0, [r7, #12]
 800abdc:	f000 f838 	bl	800ac50 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800abe0:	68fb      	ldr	r3, [r7, #12]
 800abe2:	2208      	movs	r2, #8
 800abe4:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800abe8:	68fb      	ldr	r3, [r7, #12]
 800abea:	2200      	movs	r2, #0
 800abec:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

          return HAL_ERROR;
 800abf0:	2301      	movs	r3, #1
 800abf2:	e029      	b.n	800ac48 <UART_WaitOnFlagUntilTimeout+0xd2>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800abf4:	68fb      	ldr	r3, [r7, #12]
 800abf6:	681b      	ldr	r3, [r3, #0]
 800abf8:	69db      	ldr	r3, [r3, #28]
 800abfa:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800abfe:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800ac02:	d111      	bne.n	800ac28 <UART_WaitOnFlagUntilTimeout+0xb2>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800ac04:	68fb      	ldr	r3, [r7, #12]
 800ac06:	681b      	ldr	r3, [r3, #0]
 800ac08:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800ac0c:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800ac0e:	68f8      	ldr	r0, [r7, #12]
 800ac10:	f000 f81e 	bl	800ac50 <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800ac14:	68fb      	ldr	r3, [r7, #12]
 800ac16:	2220      	movs	r2, #32
 800ac18:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800ac1c:	68fb      	ldr	r3, [r7, #12]
 800ac1e:	2200      	movs	r2, #0
 800ac20:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78

          return HAL_TIMEOUT;
 800ac24:	2303      	movs	r3, #3
 800ac26:	e00f      	b.n	800ac48 <UART_WaitOnFlagUntilTimeout+0xd2>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800ac28:	68fb      	ldr	r3, [r7, #12]
 800ac2a:	681b      	ldr	r3, [r3, #0]
 800ac2c:	69da      	ldr	r2, [r3, #28]
 800ac2e:	68bb      	ldr	r3, [r7, #8]
 800ac30:	4013      	ands	r3, r2
 800ac32:	68ba      	ldr	r2, [r7, #8]
 800ac34:	429a      	cmp	r2, r3
 800ac36:	bf0c      	ite	eq
 800ac38:	2301      	moveq	r3, #1
 800ac3a:	2300      	movne	r3, #0
 800ac3c:	b2db      	uxtb	r3, r3
 800ac3e:	461a      	mov	r2, r3
 800ac40:	79fb      	ldrb	r3, [r7, #7]
 800ac42:	429a      	cmp	r2, r3
 800ac44:	d0a0      	beq.n	800ab88 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800ac46:	2300      	movs	r3, #0
}
 800ac48:	4618      	mov	r0, r3
 800ac4a:	3710      	adds	r7, #16
 800ac4c:	46bd      	mov	sp, r7
 800ac4e:	bd80      	pop	{r7, pc}

0800ac50 <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800ac50:	b480      	push	{r7}
 800ac52:	b095      	sub	sp, #84	@ 0x54
 800ac54:	af00      	add	r7, sp, #0
 800ac56:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800ac58:	687b      	ldr	r3, [r7, #4]
 800ac5a:	681b      	ldr	r3, [r3, #0]
 800ac5c:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800ac5e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800ac60:	e853 3f00 	ldrex	r3, [r3]
 800ac64:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 800ac66:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800ac68:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800ac6c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	681b      	ldr	r3, [r3, #0]
 800ac72:	461a      	mov	r2, r3
 800ac74:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800ac76:	643b      	str	r3, [r7, #64]	@ 0x40
 800ac78:	63fa      	str	r2, [r7, #60]	@ 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800ac7a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800ac7c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800ac7e:	e841 2300 	strex	r3, r2, [r1]
 800ac82:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 800ac84:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800ac86:	2b00      	cmp	r3, #0
 800ac88:	d1e6      	bne.n	800ac58 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	681b      	ldr	r3, [r3, #0]
 800ac8e:	3308      	adds	r3, #8
 800ac90:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800ac92:	6a3b      	ldr	r3, [r7, #32]
 800ac94:	e853 3f00 	ldrex	r3, [r3]
 800ac98:	61fb      	str	r3, [r7, #28]
   return(result);
 800ac9a:	69fb      	ldr	r3, [r7, #28]
 800ac9c:	f023 0301 	bic.w	r3, r3, #1
 800aca0:	64bb      	str	r3, [r7, #72]	@ 0x48
 800aca2:	687b      	ldr	r3, [r7, #4]
 800aca4:	681b      	ldr	r3, [r3, #0]
 800aca6:	3308      	adds	r3, #8
 800aca8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800acaa:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800acac:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800acae:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800acb0:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800acb2:	e841 2300 	strex	r3, r2, [r1]
 800acb6:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 800acb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800acba:	2b00      	cmp	r3, #0
 800acbc:	d1e5      	bne.n	800ac8a <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800acbe:	687b      	ldr	r3, [r7, #4]
 800acc0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800acc2:	2b01      	cmp	r3, #1
 800acc4:	d118      	bne.n	800acf8 <UART_EndRxTransfer+0xa8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800acc6:	687b      	ldr	r3, [r7, #4]
 800acc8:	681b      	ldr	r3, [r3, #0]
 800acca:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800accc:	68fb      	ldr	r3, [r7, #12]
 800acce:	e853 3f00 	ldrex	r3, [r3]
 800acd2:	60bb      	str	r3, [r7, #8]
   return(result);
 800acd4:	68bb      	ldr	r3, [r7, #8]
 800acd6:	f023 0310 	bic.w	r3, r3, #16
 800acda:	647b      	str	r3, [r7, #68]	@ 0x44
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	681b      	ldr	r3, [r3, #0]
 800ace0:	461a      	mov	r2, r3
 800ace2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800ace4:	61bb      	str	r3, [r7, #24]
 800ace6:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800ace8:	6979      	ldr	r1, [r7, #20]
 800acea:	69ba      	ldr	r2, [r7, #24]
 800acec:	e841 2300 	strex	r3, r2, [r1]
 800acf0:	613b      	str	r3, [r7, #16]
   return(result);
 800acf2:	693b      	ldr	r3, [r7, #16]
 800acf4:	2b00      	cmp	r3, #0
 800acf6:	d1e6      	bne.n	800acc6 <UART_EndRxTransfer+0x76>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800acf8:	687b      	ldr	r3, [r7, #4]
 800acfa:	2220      	movs	r2, #32
 800acfc:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800ad00:	687b      	ldr	r3, [r7, #4]
 800ad02:	2200      	movs	r2, #0
 800ad04:	661a      	str	r2, [r3, #96]	@ 0x60

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800ad06:	687b      	ldr	r3, [r7, #4]
 800ad08:	2200      	movs	r2, #0
 800ad0a:	669a      	str	r2, [r3, #104]	@ 0x68
}
 800ad0c:	bf00      	nop
 800ad0e:	3754      	adds	r7, #84	@ 0x54
 800ad10:	46bd      	mov	sp, r7
 800ad12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad16:	4770      	bx	lr

0800ad18 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800ad18:	b480      	push	{r7}
 800ad1a:	b083      	sub	sp, #12
 800ad1c:	af00      	add	r7, sp, #0
 800ad1e:	6078      	str	r0, [r7, #4]
 800ad20:	6039      	str	r1, [r7, #0]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800ad22:	683b      	ldr	r3, [r7, #0]
 800ad24:	681b      	ldr	r3, [r3, #0]
 800ad26:	2b00      	cmp	r3, #0
 800ad28:	d121      	bne.n	800ad6e <FMC_SDRAM_Init+0x56>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ad2a:	687b      	ldr	r3, [r7, #4]
 800ad2c:	681a      	ldr	r2, [r3, #0]
 800ad2e:	4b27      	ldr	r3, [pc, #156]	@ (800adcc <FMC_SDRAM_Init+0xb4>)
 800ad30:	4013      	ands	r3, r2
 800ad32:	683a      	ldr	r2, [r7, #0]
 800ad34:	6851      	ldr	r1, [r2, #4]
 800ad36:	683a      	ldr	r2, [r7, #0]
 800ad38:	6892      	ldr	r2, [r2, #8]
 800ad3a:	4311      	orrs	r1, r2
 800ad3c:	683a      	ldr	r2, [r7, #0]
 800ad3e:	68d2      	ldr	r2, [r2, #12]
 800ad40:	4311      	orrs	r1, r2
 800ad42:	683a      	ldr	r2, [r7, #0]
 800ad44:	6912      	ldr	r2, [r2, #16]
 800ad46:	4311      	orrs	r1, r2
 800ad48:	683a      	ldr	r2, [r7, #0]
 800ad4a:	6952      	ldr	r2, [r2, #20]
 800ad4c:	4311      	orrs	r1, r2
 800ad4e:	683a      	ldr	r2, [r7, #0]
 800ad50:	6992      	ldr	r2, [r2, #24]
 800ad52:	4311      	orrs	r1, r2
 800ad54:	683a      	ldr	r2, [r7, #0]
 800ad56:	69d2      	ldr	r2, [r2, #28]
 800ad58:	4311      	orrs	r1, r2
 800ad5a:	683a      	ldr	r2, [r7, #0]
 800ad5c:	6a12      	ldr	r2, [r2, #32]
 800ad5e:	4311      	orrs	r1, r2
 800ad60:	683a      	ldr	r2, [r7, #0]
 800ad62:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800ad64:	430a      	orrs	r2, r1
 800ad66:	431a      	orrs	r2, r3
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	601a      	str	r2, [r3, #0]
 800ad6c:	e026      	b.n	800adbc <FMC_SDRAM_Init+0xa4>
                Init->ReadBurst          |
                Init->ReadPipeDelay));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ad6e:	687b      	ldr	r3, [r7, #4]
 800ad70:	681b      	ldr	r3, [r3, #0]
 800ad72:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 800ad76:	683b      	ldr	r3, [r7, #0]
 800ad78:	69d9      	ldr	r1, [r3, #28]
 800ad7a:	683b      	ldr	r3, [r7, #0]
 800ad7c:	6a1b      	ldr	r3, [r3, #32]
 800ad7e:	4319      	orrs	r1, r3
 800ad80:	683b      	ldr	r3, [r7, #0]
 800ad82:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800ad84:	430b      	orrs	r3, r1
 800ad86:	431a      	orrs	r2, r3
 800ad88:	687b      	ldr	r3, [r7, #4]
 800ad8a:	601a      	str	r2, [r3, #0]
               FMC_SDCR1_RPIPE,
               (Init->SDClockPeriod      |
                Init->ReadBurst          |
                Init->ReadPipeDelay));

    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ad8c:	687b      	ldr	r3, [r7, #4]
 800ad8e:	685a      	ldr	r2, [r3, #4]
 800ad90:	4b0e      	ldr	r3, [pc, #56]	@ (800adcc <FMC_SDRAM_Init+0xb4>)
 800ad92:	4013      	ands	r3, r2
 800ad94:	683a      	ldr	r2, [r7, #0]
 800ad96:	6851      	ldr	r1, [r2, #4]
 800ad98:	683a      	ldr	r2, [r7, #0]
 800ad9a:	6892      	ldr	r2, [r2, #8]
 800ad9c:	4311      	orrs	r1, r2
 800ad9e:	683a      	ldr	r2, [r7, #0]
 800ada0:	68d2      	ldr	r2, [r2, #12]
 800ada2:	4311      	orrs	r1, r2
 800ada4:	683a      	ldr	r2, [r7, #0]
 800ada6:	6912      	ldr	r2, [r2, #16]
 800ada8:	4311      	orrs	r1, r2
 800adaa:	683a      	ldr	r2, [r7, #0]
 800adac:	6952      	ldr	r2, [r2, #20]
 800adae:	4311      	orrs	r1, r2
 800adb0:	683a      	ldr	r2, [r7, #0]
 800adb2:	6992      	ldr	r2, [r2, #24]
 800adb4:	430a      	orrs	r2, r1
 800adb6:	431a      	orrs	r2, r3
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	605a      	str	r2, [r3, #4]
                Init->InternalBankNumber |
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
 800adbc:	2300      	movs	r3, #0
}
 800adbe:	4618      	mov	r0, r3
 800adc0:	370c      	adds	r7, #12
 800adc2:	46bd      	mov	sp, r7
 800adc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800adc8:	4770      	bx	lr
 800adca:	bf00      	nop
 800adcc:	ffff8000 	.word	0xffff8000

0800add0 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800add0:	b480      	push	{r7}
 800add2:	b085      	sub	sp, #20
 800add4:	af00      	add	r7, sp, #0
 800add6:	60f8      	str	r0, [r7, #12]
 800add8:	60b9      	str	r1, [r7, #8]
 800adda:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
 800addc:	687b      	ldr	r3, [r7, #4]
 800adde:	2b00      	cmp	r3, #0
 800ade0:	d128      	bne.n	800ae34 <FMC_SDRAM_Timing_Init+0x64>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ade2:	68fb      	ldr	r3, [r7, #12]
 800ade4:	689b      	ldr	r3, [r3, #8]
 800ade6:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 800adea:	68bb      	ldr	r3, [r7, #8]
 800adec:	681b      	ldr	r3, [r3, #0]
 800adee:	1e59      	subs	r1, r3, #1
 800adf0:	68bb      	ldr	r3, [r7, #8]
 800adf2:	685b      	ldr	r3, [r3, #4]
 800adf4:	3b01      	subs	r3, #1
 800adf6:	011b      	lsls	r3, r3, #4
 800adf8:	4319      	orrs	r1, r3
 800adfa:	68bb      	ldr	r3, [r7, #8]
 800adfc:	689b      	ldr	r3, [r3, #8]
 800adfe:	3b01      	subs	r3, #1
 800ae00:	021b      	lsls	r3, r3, #8
 800ae02:	4319      	orrs	r1, r3
 800ae04:	68bb      	ldr	r3, [r7, #8]
 800ae06:	68db      	ldr	r3, [r3, #12]
 800ae08:	3b01      	subs	r3, #1
 800ae0a:	031b      	lsls	r3, r3, #12
 800ae0c:	4319      	orrs	r1, r3
 800ae0e:	68bb      	ldr	r3, [r7, #8]
 800ae10:	691b      	ldr	r3, [r3, #16]
 800ae12:	3b01      	subs	r3, #1
 800ae14:	041b      	lsls	r3, r3, #16
 800ae16:	4319      	orrs	r1, r3
 800ae18:	68bb      	ldr	r3, [r7, #8]
 800ae1a:	695b      	ldr	r3, [r3, #20]
 800ae1c:	3b01      	subs	r3, #1
 800ae1e:	051b      	lsls	r3, r3, #20
 800ae20:	4319      	orrs	r1, r3
 800ae22:	68bb      	ldr	r3, [r7, #8]
 800ae24:	699b      	ldr	r3, [r3, #24]
 800ae26:	3b01      	subs	r3, #1
 800ae28:	061b      	lsls	r3, r3, #24
 800ae2a:	430b      	orrs	r3, r1
 800ae2c:	431a      	orrs	r2, r3
 800ae2e:	68fb      	ldr	r3, [r7, #12]
 800ae30:	609a      	str	r2, [r3, #8]
 800ae32:	e02d      	b.n	800ae90 <FMC_SDRAM_Timing_Init+0xc0>
                (((Timing->RPDelay) - 1U)              << FMC_SDTR1_TRP_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ae34:	68fb      	ldr	r3, [r7, #12]
 800ae36:	689a      	ldr	r2, [r3, #8]
 800ae38:	4b19      	ldr	r3, [pc, #100]	@ (800aea0 <FMC_SDRAM_Timing_Init+0xd0>)
 800ae3a:	4013      	ands	r3, r2
 800ae3c:	68ba      	ldr	r2, [r7, #8]
 800ae3e:	68d2      	ldr	r2, [r2, #12]
 800ae40:	3a01      	subs	r2, #1
 800ae42:	0311      	lsls	r1, r2, #12
 800ae44:	68ba      	ldr	r2, [r7, #8]
 800ae46:	6952      	ldr	r2, [r2, #20]
 800ae48:	3a01      	subs	r2, #1
 800ae4a:	0512      	lsls	r2, r2, #20
 800ae4c:	430a      	orrs	r2, r1
 800ae4e:	431a      	orrs	r2, r3
 800ae50:	68fb      	ldr	r3, [r7, #12]
 800ae52:	609a      	str	r2, [r3, #8]
               FMC_SDTR1_TRC |
               FMC_SDTR1_TRP,
               (((Timing->RowCycleDelay) - 1U)         << FMC_SDTR1_TRC_Pos)  |
               (((Timing->RPDelay) - 1U)               << FMC_SDTR1_TRP_Pos));

    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ae54:	68fb      	ldr	r3, [r7, #12]
 800ae56:	68db      	ldr	r3, [r3, #12]
 800ae58:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 800ae5c:	68bb      	ldr	r3, [r7, #8]
 800ae5e:	681b      	ldr	r3, [r3, #0]
 800ae60:	1e59      	subs	r1, r3, #1
 800ae62:	68bb      	ldr	r3, [r7, #8]
 800ae64:	685b      	ldr	r3, [r3, #4]
 800ae66:	3b01      	subs	r3, #1
 800ae68:	011b      	lsls	r3, r3, #4
 800ae6a:	4319      	orrs	r1, r3
 800ae6c:	68bb      	ldr	r3, [r7, #8]
 800ae6e:	689b      	ldr	r3, [r3, #8]
 800ae70:	3b01      	subs	r3, #1
 800ae72:	021b      	lsls	r3, r3, #8
 800ae74:	4319      	orrs	r1, r3
 800ae76:	68bb      	ldr	r3, [r7, #8]
 800ae78:	691b      	ldr	r3, [r3, #16]
 800ae7a:	3b01      	subs	r3, #1
 800ae7c:	041b      	lsls	r3, r3, #16
 800ae7e:	4319      	orrs	r1, r3
 800ae80:	68bb      	ldr	r3, [r7, #8]
 800ae82:	699b      	ldr	r3, [r3, #24]
 800ae84:	3b01      	subs	r3, #1
 800ae86:	061b      	lsls	r3, r3, #24
 800ae88:	430b      	orrs	r3, r1
 800ae8a:	431a      	orrs	r2, r3
 800ae8c:	68fb      	ldr	r3, [r7, #12]
 800ae8e:	60da      	str	r2, [r3, #12]
                (((Timing->SelfRefreshTime) - 1U)      << FMC_SDTR1_TRAS_Pos) |
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
 800ae90:	2300      	movs	r3, #0
}
 800ae92:	4618      	mov	r0, r3
 800ae94:	3714      	adds	r7, #20
 800ae96:	46bd      	mov	sp, r7
 800ae98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ae9c:	4770      	bx	lr
 800ae9e:	bf00      	nop
 800aea0:	ff0f0fff 	.word	0xff0f0fff

0800aea4 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800aea4:	b480      	push	{r7}
 800aea6:	b085      	sub	sp, #20
 800aea8:	af00      	add	r7, sp, #0
 800aeaa:	60f8      	str	r0, [r7, #12]
 800aeac:	60b9      	str	r1, [r7, #8]
 800aeae:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800aeb0:	68fb      	ldr	r3, [r7, #12]
 800aeb2:	691a      	ldr	r2, [r3, #16]
 800aeb4:	4b0c      	ldr	r3, [pc, #48]	@ (800aee8 <FMC_SDRAM_SendCommand+0x44>)
 800aeb6:	4013      	ands	r3, r2
 800aeb8:	68ba      	ldr	r2, [r7, #8]
 800aeba:	6811      	ldr	r1, [r2, #0]
 800aebc:	68ba      	ldr	r2, [r7, #8]
 800aebe:	6852      	ldr	r2, [r2, #4]
 800aec0:	4311      	orrs	r1, r2
 800aec2:	68ba      	ldr	r2, [r7, #8]
 800aec4:	6892      	ldr	r2, [r2, #8]
 800aec6:	3a01      	subs	r2, #1
 800aec8:	0152      	lsls	r2, r2, #5
 800aeca:	4311      	orrs	r1, r2
 800aecc:	68ba      	ldr	r2, [r7, #8]
 800aece:	68d2      	ldr	r2, [r2, #12]
 800aed0:	0252      	lsls	r2, r2, #9
 800aed2:	430a      	orrs	r2, r1
 800aed4:	431a      	orrs	r2, r3
 800aed6:	68fb      	ldr	r3, [r7, #12]
 800aed8:	611a      	str	r2, [r3, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
 800aeda:	2300      	movs	r3, #0
}
 800aedc:	4618      	mov	r0, r3
 800aede:	3714      	adds	r7, #20
 800aee0:	46bd      	mov	sp, r7
 800aee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aee6:	4770      	bx	lr
 800aee8:	ffc00000 	.word	0xffc00000

0800aeec <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 800aeec:	b480      	push	{r7}
 800aeee:	b083      	sub	sp, #12
 800aef0:	af00      	add	r7, sp, #0
 800aef2:	6078      	str	r0, [r7, #4]
 800aef4:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800aef6:	687b      	ldr	r3, [r7, #4]
 800aef8:	695a      	ldr	r2, [r3, #20]
 800aefa:	4b07      	ldr	r3, [pc, #28]	@ (800af18 <FMC_SDRAM_ProgramRefreshRate+0x2c>)
 800aefc:	4013      	ands	r3, r2
 800aefe:	683a      	ldr	r2, [r7, #0]
 800af00:	0052      	lsls	r2, r2, #1
 800af02:	431a      	orrs	r2, r3
 800af04:	687b      	ldr	r3, [r7, #4]
 800af06:	615a      	str	r2, [r3, #20]

  return HAL_OK;
 800af08:	2300      	movs	r3, #0
}
 800af0a:	4618      	mov	r0, r3
 800af0c:	370c      	adds	r7, #12
 800af0e:	46bd      	mov	sp, r7
 800af10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af14:	4770      	bx	lr
 800af16:	bf00      	nop
 800af18:	ffffc001 	.word	0xffffc001

0800af1c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800af1c:	b580      	push	{r7, lr}
 800af1e:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800af20:	f006 f9dc 	bl	80112dc <touchgfx_components_init>
    touchgfx_init();
 800af24:	f006 f9b0 	bl	8011288 <touchgfx_init>
}
 800af28:	bf00      	nop
 800af2a:	bd80      	pop	{r7, pc}

0800af2c <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800af2c:	b580      	push	{r7, lr}
 800af2e:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800af30:	f006 f9dc 	bl	80112ec <touchgfx_taskEntry>
}
 800af34:	bf00      	nop
 800af36:	bd80      	pop	{r7, pc}

0800af38 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800af38:	b480      	push	{r7}
 800af3a:	b083      	sub	sp, #12
 800af3c:	af00      	add	r7, sp, #0
 800af3e:	6078      	str	r0, [r7, #4]
    {
 800af40:	4a04      	ldr	r2, [pc, #16]	@ (800af54 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800af42:	687b      	ldr	r3, [r7, #4]
 800af44:	601a      	str	r2, [r3, #0]
    }
 800af46:	687b      	ldr	r3, [r7, #4]
 800af48:	4618      	mov	r0, r3
 800af4a:	370c      	adds	r7, #12
 800af4c:	46bd      	mov	sp, r7
 800af4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af52:	4770      	bx	lr
 800af54:	08029678 	.word	0x08029678

0800af58 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800af58:	b580      	push	{r7, lr}
 800af5a:	b082      	sub	sp, #8
 800af5c:	af00      	add	r7, sp, #0
 800af5e:	6078      	str	r0, [r7, #4]
    }
 800af60:	6878      	ldr	r0, [r7, #4]
 800af62:	f7ff ffe9 	bl	800af38 <_ZN8touchgfx12FontProviderD1Ev>
 800af66:	2104      	movs	r1, #4
 800af68:	6878      	ldr	r0, [r7, #4]
 800af6a:	f01c fd84 	bl	8027a76 <_ZdlPvj>
 800af6e:	687b      	ldr	r3, [r7, #4]
 800af70:	4618      	mov	r0, r3
 800af72:	3708      	adds	r7, #8
 800af74:	46bd      	mov	sp, r7
 800af76:	bd80      	pop	{r7, pc}

0800af78 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800af78:	b580      	push	{r7, lr}
 800af7a:	b082      	sub	sp, #8
 800af7c:	af00      	add	r7, sp, #0
 800af7e:	6078      	str	r0, [r7, #4]
 800af80:	460b      	mov	r3, r1
 800af82:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800af84:	887b      	ldrh	r3, [r7, #2]
 800af86:	2b02      	cmp	r3, #2
 800af88:	d010      	beq.n	800afac <_ZN23ApplicationFontProvider7getFontEt+0x34>
 800af8a:	2b02      	cmp	r3, #2
 800af8c:	dc13      	bgt.n	800afb6 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
 800af8e:	2b00      	cmp	r3, #0
 800af90:	d002      	beq.n	800af98 <_ZN23ApplicationFontProvider7getFontEt+0x20>
 800af92:	2b01      	cmp	r3, #1
 800af94:	d005      	beq.n	800afa2 <_ZN23ApplicationFontProvider7getFontEt+0x2a>
 800af96:	e00e      	b.n	800afb6 <_ZN23ApplicationFontProvider7getFontEt+0x3e>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800af98:	f004 fab0 	bl	800f4fc <_ZN17TypedTextDatabase8getFontsEv>
 800af9c:	4603      	mov	r3, r0
 800af9e:	681b      	ldr	r3, [r3, #0]
 800afa0:	e00a      	b.n	800afb8 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800afa2:	f004 faab 	bl	800f4fc <_ZN17TypedTextDatabase8getFontsEv>
 800afa6:	4603      	mov	r3, r0
 800afa8:	685b      	ldr	r3, [r3, #4]
 800afaa:	e005      	b.n	800afb8 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800afac:	f004 faa6 	bl	800f4fc <_ZN17TypedTextDatabase8getFontsEv>
 800afb0:	4603      	mov	r3, r0
 800afb2:	689b      	ldr	r3, [r3, #8]
 800afb4:	e000      	b.n	800afb8 <_ZN23ApplicationFontProvider7getFontEt+0x40>
    default:
        return 0;
 800afb6:	2300      	movs	r3, #0
    }
}
 800afb8:	4618      	mov	r0, r3
 800afba:	3708      	adds	r7, #8
 800afbc:	46bd      	mov	sp, r7
 800afbe:	bd80      	pop	{r7, pc}

0800afc0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800afc0:	b580      	push	{r7, lr}
 800afc2:	b082      	sub	sp, #8
 800afc4:	af00      	add	r7, sp, #0
 800afc6:	6078      	str	r0, [r7, #4]
 800afc8:	4a05      	ldr	r2, [pc, #20]	@ (800afe0 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800afca:	687b      	ldr	r3, [r7, #4]
 800afcc:	601a      	str	r2, [r3, #0]
 800afce:	687b      	ldr	r3, [r7, #4]
 800afd0:	4618      	mov	r0, r3
 800afd2:	f7ff ffb1 	bl	800af38 <_ZN8touchgfx12FontProviderD1Ev>
 800afd6:	687b      	ldr	r3, [r7, #4]
 800afd8:	4618      	mov	r0, r3
 800afda:	3708      	adds	r7, #8
 800afdc:	46bd      	mov	sp, r7
 800afde:	bd80      	pop	{r7, pc}
 800afe0:	08029664 	.word	0x08029664

0800afe4 <_ZN23ApplicationFontProviderD0Ev>:
 800afe4:	b580      	push	{r7, lr}
 800afe6:	b082      	sub	sp, #8
 800afe8:	af00      	add	r7, sp, #0
 800afea:	6078      	str	r0, [r7, #4]
 800afec:	6878      	ldr	r0, [r7, #4]
 800afee:	f7ff ffe7 	bl	800afc0 <_ZN23ApplicationFontProviderD1Ev>
 800aff2:	2104      	movs	r1, #4
 800aff4:	6878      	ldr	r0, [r7, #4]
 800aff6:	f01c fd3e 	bl	8027a76 <_ZdlPvj>
 800affa:	687b      	ldr	r3, [r7, #4]
 800affc:	4618      	mov	r0, r3
 800affe:	3708      	adds	r7, #8
 800b000:	46bd      	mov	sp, r7
 800b002:	bd80      	pop	{r7, pc}

0800b004 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800b004:	b480      	push	{r7}
 800b006:	b083      	sub	sp, #12
 800b008:	af00      	add	r7, sp, #0
 800b00a:	6078      	str	r0, [r7, #4]
    {
 800b00c:	4a04      	ldr	r2, [pc, #16]	@ (800b020 <_ZN8touchgfx4FontD1Ev+0x1c>)
 800b00e:	687b      	ldr	r3, [r7, #4]
 800b010:	601a      	str	r2, [r3, #0]
    }
 800b012:	687b      	ldr	r3, [r7, #4]
 800b014:	4618      	mov	r0, r3
 800b016:	370c      	adds	r7, #12
 800b018:	46bd      	mov	sp, r7
 800b01a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b01e:	4770      	bx	lr
 800b020:	08029fc8 	.word	0x08029fc8

0800b024 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800b024:	b580      	push	{r7, lr}
 800b026:	b082      	sub	sp, #8
 800b028:	af00      	add	r7, sp, #0
 800b02a:	6078      	str	r0, [r7, #4]
    }
 800b02c:	6878      	ldr	r0, [r7, #4]
 800b02e:	f7ff ffe9 	bl	800b004 <_ZN8touchgfx4FontD1Ev>
 800b032:	2114      	movs	r1, #20
 800b034:	6878      	ldr	r0, [r7, #4]
 800b036:	f01c fd1e 	bl	8027a76 <_ZdlPvj>
 800b03a:	687b      	ldr	r3, [r7, #4]
 800b03c:	4618      	mov	r0, r3
 800b03e:	3708      	adds	r7, #8
 800b040:	46bd      	mov	sp, r7
 800b042:	bd80      	pop	{r7, pc}

0800b044 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800b044:	b590      	push	{r4, r7, lr}
 800b046:	b087      	sub	sp, #28
 800b048:	af00      	add	r7, sp, #0
 800b04a:	6078      	str	r0, [r7, #4]
 800b04c:	460b      	mov	r3, r1
 800b04e:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800b050:	887b      	ldrh	r3, [r7, #2]
 800b052:	2b00      	cmp	r3, #0
 800b054:	d101      	bne.n	800b05a <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800b056:	2300      	movs	r3, #0
 800b058:	e010      	b.n	800b07c <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800b05a:	2300      	movs	r3, #0
 800b05c:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800b05e:	2300      	movs	r3, #0
 800b060:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800b062:	687b      	ldr	r3, [r7, #4]
 800b064:	681b      	ldr	r3, [r3, #0]
 800b066:	3308      	adds	r3, #8
 800b068:	681c      	ldr	r4, [r3, #0]
 800b06a:	f107 030f 	add.w	r3, r7, #15
 800b06e:	f107 0210 	add.w	r2, r7, #16
 800b072:	8879      	ldrh	r1, [r7, #2]
 800b074:	6878      	ldr	r0, [r7, #4]
 800b076:	47a0      	blx	r4
 800b078:	6178      	str	r0, [r7, #20]
        return glyph;
 800b07a:	697b      	ldr	r3, [r7, #20]
    }
 800b07c:	4618      	mov	r0, r3
 800b07e:	371c      	adds	r7, #28
 800b080:	46bd      	mov	sp, r7
 800b082:	bd90      	pop	{r4, r7, pc}

0800b084 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800b084:	b480      	push	{r7}
 800b086:	b083      	sub	sp, #12
 800b088:	af00      	add	r7, sp, #0
 800b08a:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800b08c:	687b      	ldr	r3, [r7, #4]
 800b08e:	89db      	ldrh	r3, [r3, #14]
    }
 800b090:	4618      	mov	r0, r3
 800b092:	370c      	adds	r7, #12
 800b094:	46bd      	mov	sp, r7
 800b096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b09a:	4770      	bx	lr

0800b09c <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800b09c:	b480      	push	{r7}
 800b09e:	b083      	sub	sp, #12
 800b0a0:	af00      	add	r7, sp, #0
 800b0a2:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	8a1b      	ldrh	r3, [r3, #16]
    }
 800b0a8:	4618      	mov	r0, r3
 800b0aa:	370c      	adds	r7, #12
 800b0ac:	46bd      	mov	sp, r7
 800b0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0b2:	4770      	bx	lr

0800b0b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800b0b4:	b480      	push	{r7}
 800b0b6:	b083      	sub	sp, #12
 800b0b8:	af00      	add	r7, sp, #0
 800b0ba:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800b0bc:	687b      	ldr	r3, [r7, #4]
 800b0be:	88db      	ldrh	r3, [r3, #6]
    }
 800b0c0:	4618      	mov	r0, r3
 800b0c2:	370c      	adds	r7, #12
 800b0c4:	46bd      	mov	sp, r7
 800b0c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0ca:	4770      	bx	lr

0800b0cc <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800b0cc:	b480      	push	{r7}
 800b0ce:	b083      	sub	sp, #12
 800b0d0:	af00      	add	r7, sp, #0
 800b0d2:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800b0d4:	687b      	ldr	r3, [r7, #4]
 800b0d6:	889b      	ldrh	r3, [r3, #4]
    }
 800b0d8:	4618      	mov	r0, r3
 800b0da:	370c      	adds	r7, #12
 800b0dc:	46bd      	mov	sp, r7
 800b0de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0e2:	4770      	bx	lr

0800b0e4 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800b0e4:	b480      	push	{r7}
 800b0e6:	b083      	sub	sp, #12
 800b0e8:	af00      	add	r7, sp, #0
 800b0ea:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800b0ec:	687b      	ldr	r3, [r7, #4]
 800b0ee:	7a9b      	ldrb	r3, [r3, #10]
 800b0f0:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800b0f4:	b2db      	uxtb	r3, r3
    }
 800b0f6:	4618      	mov	r0, r3
 800b0f8:	370c      	adds	r7, #12
 800b0fa:	46bd      	mov	sp, r7
 800b0fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b100:	4770      	bx	lr

0800b102 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800b102:	b480      	push	{r7}
 800b104:	b083      	sub	sp, #12
 800b106:	af00      	add	r7, sp, #0
 800b108:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	7a9b      	ldrb	r3, [r3, #10]
 800b10e:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800b112:	b2db      	uxtb	r3, r3
    }
 800b114:	4618      	mov	r0, r3
 800b116:	370c      	adds	r7, #12
 800b118:	46bd      	mov	sp, r7
 800b11a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b11e:	4770      	bx	lr

0800b120 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 800b120:	b480      	push	{r7}
 800b122:	b083      	sub	sp, #12
 800b124:	af00      	add	r7, sp, #0
 800b126:	6078      	str	r0, [r7, #4]
    {
        return false;
 800b128:	2300      	movs	r3, #0
    }
 800b12a:	4618      	mov	r0, r3
 800b12c:	370c      	adds	r7, #12
 800b12e:	46bd      	mov	sp, r7
 800b130:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b134:	4770      	bx	lr

0800b136 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800b136:	b480      	push	{r7}
 800b138:	b083      	sub	sp, #12
 800b13a:	af00      	add	r7, sp, #0
 800b13c:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800b13e:	f04f 0300 	mov.w	r3, #0
 800b142:	ee07 3a90 	vmov	s15, r3
    }
 800b146:	eeb0 0a67 	vmov.f32	s0, s15
 800b14a:	370c      	adds	r7, #12
 800b14c:	46bd      	mov	sp, r7
 800b14e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b152:	4770      	bx	lr

0800b154 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800b154:	b580      	push	{r7, lr}
 800b156:	b082      	sub	sp, #8
 800b158:	af00      	add	r7, sp, #0
 800b15a:	6078      	str	r0, [r7, #4]
 800b15c:	4a05      	ldr	r2, [pc, #20]	@ (800b174 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	601a      	str	r2, [r3, #0]
 800b162:	687b      	ldr	r3, [r7, #4]
 800b164:	4618      	mov	r0, r3
 800b166:	f7ff ff4d 	bl	800b004 <_ZN8touchgfx4FontD1Ev>
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	4618      	mov	r0, r3
 800b16e:	3708      	adds	r7, #8
 800b170:	46bd      	mov	sp, r7
 800b172:	bd80      	pop	{r7, pc}
 800b174:	0802ad58 	.word	0x0802ad58

0800b178 <_ZN8touchgfx9ConstFontD0Ev>:
 800b178:	b580      	push	{r7, lr}
 800b17a:	b082      	sub	sp, #8
 800b17c:	af00      	add	r7, sp, #0
 800b17e:	6078      	str	r0, [r7, #4]
 800b180:	6878      	ldr	r0, [r7, #4]
 800b182:	f7ff ffe7 	bl	800b154 <_ZN8touchgfx9ConstFontD1Ev>
 800b186:	211c      	movs	r1, #28
 800b188:	6878      	ldr	r0, [r7, #4]
 800b18a:	f01c fc74 	bl	8027a76 <_ZdlPvj>
 800b18e:	687b      	ldr	r3, [r7, #4]
 800b190:	4618      	mov	r0, r3
 800b192:	3708      	adds	r7, #8
 800b194:	46bd      	mov	sp, r7
 800b196:	bd80      	pop	{r7, pc}

0800b198 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800b198:	b580      	push	{r7, lr}
 800b19a:	b082      	sub	sp, #8
 800b19c:	af00      	add	r7, sp, #0
 800b19e:	6078      	str	r0, [r7, #4]
 800b1a0:	4a05      	ldr	r2, [pc, #20]	@ (800b1b8 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	601a      	str	r2, [r3, #0]
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	4618      	mov	r0, r3
 800b1aa:	f7ff ffd3 	bl	800b154 <_ZN8touchgfx9ConstFontD1Ev>
 800b1ae:	687b      	ldr	r3, [r7, #4]
 800b1b0:	4618      	mov	r0, r3
 800b1b2:	3708      	adds	r7, #8
 800b1b4:	46bd      	mov	sp, r7
 800b1b6:	bd80      	pop	{r7, pc}
 800b1b8:	0802968c 	.word	0x0802968c

0800b1bc <_ZN8touchgfx13GeneratedFontD0Ev>:
 800b1bc:	b580      	push	{r7, lr}
 800b1be:	b082      	sub	sp, #8
 800b1c0:	af00      	add	r7, sp, #0
 800b1c2:	6078      	str	r0, [r7, #4]
 800b1c4:	6878      	ldr	r0, [r7, #4]
 800b1c6:	f7ff ffe7 	bl	800b198 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b1ca:	212c      	movs	r1, #44	@ 0x2c
 800b1cc:	6878      	ldr	r0, [r7, #4]
 800b1ce:	f01c fc52 	bl	8027a76 <_ZdlPvj>
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	4618      	mov	r0, r3
 800b1d6:	3708      	adds	r7, #8
 800b1d8:	46bd      	mov	sp, r7
 800b1da:	bd80      	pop	{r7, pc}

0800b1dc <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800b1dc:	b480      	push	{r7}
 800b1de:	b083      	sub	sp, #12
 800b1e0:	af00      	add	r7, sp, #0
 800b1e2:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800b1e4:	687b      	ldr	r3, [r7, #4]
 800b1e6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 800b1e8:	4618      	mov	r0, r3
 800b1ea:	370c      	adds	r7, #12
 800b1ec:	46bd      	mov	sp, r7
 800b1ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1f2:	4770      	bx	lr

0800b1f4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800b1f4:	b480      	push	{r7}
 800b1f6:	b083      	sub	sp, #12
 800b1f8:	af00      	add	r7, sp, #0
 800b1fa:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800b1fc:	687b      	ldr	r3, [r7, #4]
 800b1fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800b200:	4618      	mov	r0, r3
 800b202:	370c      	adds	r7, #12
 800b204:	46bd      	mov	sp, r7
 800b206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b20a:	4770      	bx	lr

0800b20c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800b20c:	b580      	push	{r7, lr}
 800b20e:	b08e      	sub	sp, #56	@ 0x38
 800b210:	af0a      	add	r7, sp, #40	@ 0x28
 800b212:	60f8      	str	r0, [r7, #12]
 800b214:	60b9      	str	r1, [r7, #8]
 800b216:	4611      	mov	r1, r2
 800b218:	461a      	mov	r2, r3
 800b21a:	460b      	mov	r3, r1
 800b21c:	80fb      	strh	r3, [r7, #6]
 800b21e:	4613      	mov	r3, r2
 800b220:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800b222:	68f8      	ldr	r0, [r7, #12]
 800b224:	88b9      	ldrh	r1, [r7, #4]
 800b226:	88fa      	ldrh	r2, [r7, #6]
 800b228:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800b22c:	9308      	str	r3, [sp, #32]
 800b22e:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800b230:	9307      	str	r3, [sp, #28]
 800b232:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800b236:	9306      	str	r3, [sp, #24]
 800b238:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800b23c:	9305      	str	r3, [sp, #20]
 800b23e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800b242:	9304      	str	r3, [sp, #16]
 800b244:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800b248:	9303      	str	r3, [sp, #12]
 800b24a:	f897 3020 	ldrb.w	r3, [r7, #32]
 800b24e:	9302      	str	r3, [sp, #8]
 800b250:	7f3b      	ldrb	r3, [r7, #28]
 800b252:	9301      	str	r3, [sp, #4]
 800b254:	8b3b      	ldrh	r3, [r7, #24]
 800b256:	9300      	str	r3, [sp, #0]
 800b258:	460b      	mov	r3, r1
 800b25a:	68b9      	ldr	r1, [r7, #8]
 800b25c:	f00c f9f6 	bl	801764c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800b260:	4a09      	ldr	r2, [pc, #36]	@ (800b288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800b262:	68fb      	ldr	r3, [r7, #12]
 800b264:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800b266:	68fb      	ldr	r3, [r7, #12]
 800b268:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800b26a:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800b26c:	68fb      	ldr	r3, [r7, #12]
 800b26e:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b270:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800b272:	68fb      	ldr	r3, [r7, #12]
 800b274:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800b276:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 800b278:	68fb      	ldr	r3, [r7, #12]
 800b27a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800b27c:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 800b27e:	68fb      	ldr	r3, [r7, #12]
 800b280:	4618      	mov	r0, r3
 800b282:	3710      	adds	r7, #16
 800b284:	46bd      	mov	sp, r7
 800b286:	bd80      	pop	{r7, pc}
 800b288:	0802968c 	.word	0x0802968c

0800b28c <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800b28c:	b480      	push	{r7}
 800b28e:	b085      	sub	sp, #20
 800b290:	af00      	add	r7, sp, #0
 800b292:	6078      	str	r0, [r7, #4]
 800b294:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800b296:	687b      	ldr	r3, [r7, #4]
 800b298:	69db      	ldr	r3, [r3, #28]
 800b29a:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800b29c:	683b      	ldr	r3, [r7, #0]
 800b29e:	889b      	ldrh	r3, [r3, #4]
 800b2a0:	0adb      	lsrs	r3, r3, #11
 800b2a2:	b29b      	uxth	r3, r3
 800b2a4:	009b      	lsls	r3, r3, #2
 800b2a6:	68fa      	ldr	r2, [r7, #12]
 800b2a8:	4413      	add	r3, r2
 800b2aa:	681a      	ldr	r2, [r3, #0]
 800b2ac:	683b      	ldr	r3, [r7, #0]
 800b2ae:	681b      	ldr	r3, [r3, #0]
 800b2b0:	4413      	add	r3, r2
}
 800b2b2:	4618      	mov	r0, r3
 800b2b4:	3714      	adds	r7, #20
 800b2b6:	46bd      	mov	sp, r7
 800b2b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2bc:	4770      	bx	lr

0800b2be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800b2be:	b480      	push	{r7}
 800b2c0:	b089      	sub	sp, #36	@ 0x24
 800b2c2:	af00      	add	r7, sp, #0
 800b2c4:	60f8      	str	r0, [r7, #12]
 800b2c6:	460b      	mov	r3, r1
 800b2c8:	607a      	str	r2, [r7, #4]
 800b2ca:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800b2cc:	687b      	ldr	r3, [r7, #4]
 800b2ce:	2b00      	cmp	r3, #0
 800b2d0:	d003      	beq.n	800b2da <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	7b1b      	ldrb	r3, [r3, #12]
 800b2d6:	2b00      	cmp	r3, #0
 800b2d8:	d101      	bne.n	800b2de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800b2da:	2300      	movs	r3, #0
 800b2dc:	e031      	b.n	800b342 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800b2de:	68fb      	ldr	r3, [r7, #12]
 800b2e0:	6a1a      	ldr	r2, [r3, #32]
 800b2e2:	687b      	ldr	r3, [r7, #4]
 800b2e4:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800b2e6:	697b      	ldr	r3, [r7, #20]
 800b2e8:	7b5b      	ldrb	r3, [r3, #13]
 800b2ea:	021b      	lsls	r3, r3, #8
 800b2ec:	b21b      	sxth	r3, r3
 800b2ee:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800b2f2:	b219      	sxth	r1, r3
 800b2f4:	697b      	ldr	r3, [r7, #20]
 800b2f6:	7adb      	ldrb	r3, [r3, #11]
 800b2f8:	b21b      	sxth	r3, r3
 800b2fa:	430b      	orrs	r3, r1
 800b2fc:	b21b      	sxth	r3, r3
 800b2fe:	b29b      	uxth	r3, r3
 800b300:	009b      	lsls	r3, r3, #2
 800b302:	4413      	add	r3, r2
 800b304:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	7b1b      	ldrb	r3, [r3, #12]
 800b30a:	837b      	strh	r3, [r7, #26]
 800b30c:	e013      	b.n	800b336 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800b30e:	69fb      	ldr	r3, [r7, #28]
 800b310:	881b      	ldrh	r3, [r3, #0]
 800b312:	897a      	ldrh	r2, [r7, #10]
 800b314:	429a      	cmp	r2, r3
 800b316:	d103      	bne.n	800b320 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800b318:	69fb      	ldr	r3, [r7, #28]
 800b31a:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800b31e:	e010      	b.n	800b342 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800b320:	69fb      	ldr	r3, [r7, #28]
 800b322:	881b      	ldrh	r3, [r3, #0]
 800b324:	897a      	ldrh	r2, [r7, #10]
 800b326:	429a      	cmp	r2, r3
 800b328:	d309      	bcc.n	800b33e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800b32a:	8b7b      	ldrh	r3, [r7, #26]
 800b32c:	3b01      	subs	r3, #1
 800b32e:	837b      	strh	r3, [r7, #26]
 800b330:	69fb      	ldr	r3, [r7, #28]
 800b332:	3304      	adds	r3, #4
 800b334:	61fb      	str	r3, [r7, #28]
 800b336:	8b7b      	ldrh	r3, [r7, #26]
 800b338:	2b00      	cmp	r3, #0
 800b33a:	d1e8      	bne.n	800b30e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800b33c:	e000      	b.n	800b340 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800b33e:	bf00      	nop
        }
    }
    return 0;
 800b340:	2300      	movs	r3, #0
}
 800b342:	4618      	mov	r0, r3
 800b344:	3724      	adds	r7, #36	@ 0x24
 800b346:	46bd      	mov	sp, r7
 800b348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b34c:	4770      	bx	lr
	...

0800b350 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b350:	b580      	push	{r7, lr}
 800b352:	af00      	add	r7, sp, #0
 800b354:	4801      	ldr	r0, [pc, #4]	@ (800b35c <__tcf_0+0xc>)
 800b356:	f7ff ff1f 	bl	800b198 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b35a:	bd80      	pop	{r7, pc}
 800b35c:	20000a5c 	.word	0x20000a5c

0800b360 <_Z23getFont_verdana_10_4bppv>:
{
 800b360:	b580      	push	{r7, lr}
 800b362:	b08e      	sub	sp, #56	@ 0x38
 800b364:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800b366:	4b21      	ldr	r3, [pc, #132]	@ (800b3ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b368:	681b      	ldr	r3, [r3, #0]
 800b36a:	f3bf 8f5b 	dmb	ish
 800b36e:	f003 0301 	and.w	r3, r3, #1
 800b372:	2b00      	cmp	r3, #0
 800b374:	bf0c      	ite	eq
 800b376:	2301      	moveq	r3, #1
 800b378:	2300      	movne	r3, #0
 800b37a:	b2db      	uxtb	r3, r3
 800b37c:	2b00      	cmp	r3, #0
 800b37e:	d030      	beq.n	800b3e2 <_Z23getFont_verdana_10_4bppv+0x82>
 800b380:	481a      	ldr	r0, [pc, #104]	@ (800b3ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b382:	f01c fb7a 	bl	8027a7a <__cxa_guard_acquire>
 800b386:	4603      	mov	r3, r0
 800b388:	2b00      	cmp	r3, #0
 800b38a:	bf14      	ite	ne
 800b38c:	2301      	movne	r3, #1
 800b38e:	2300      	moveq	r3, #0
 800b390:	b2db      	uxtb	r3, r3
 800b392:	2b00      	cmp	r3, #0
 800b394:	d025      	beq.n	800b3e2 <_Z23getFont_verdana_10_4bppv+0x82>
 800b396:	2300      	movs	r3, #0
 800b398:	930c      	str	r3, [sp, #48]	@ 0x30
 800b39a:	2300      	movs	r3, #0
 800b39c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b39e:	2300      	movs	r3, #0
 800b3a0:	930a      	str	r3, [sp, #40]	@ 0x28
 800b3a2:	233f      	movs	r3, #63	@ 0x3f
 800b3a4:	9309      	str	r3, [sp, #36]	@ 0x24
 800b3a6:	4b12      	ldr	r3, [pc, #72]	@ (800b3f0 <_Z23getFont_verdana_10_4bppv+0x90>)
 800b3a8:	9308      	str	r3, [sp, #32]
 800b3aa:	4b12      	ldr	r3, [pc, #72]	@ (800b3f4 <_Z23getFont_verdana_10_4bppv+0x94>)
 800b3ac:	9307      	str	r3, [sp, #28]
 800b3ae:	2300      	movs	r3, #0
 800b3b0:	9306      	str	r3, [sp, #24]
 800b3b2:	2300      	movs	r3, #0
 800b3b4:	9305      	str	r3, [sp, #20]
 800b3b6:	2301      	movs	r3, #1
 800b3b8:	9304      	str	r3, [sp, #16]
 800b3ba:	2304      	movs	r3, #4
 800b3bc:	9303      	str	r3, [sp, #12]
 800b3be:	2300      	movs	r3, #0
 800b3c0:	9302      	str	r3, [sp, #8]
 800b3c2:	2300      	movs	r3, #0
 800b3c4:	9301      	str	r3, [sp, #4]
 800b3c6:	230a      	movs	r3, #10
 800b3c8:	9300      	str	r3, [sp, #0]
 800b3ca:	230a      	movs	r3, #10
 800b3cc:	2201      	movs	r2, #1
 800b3ce:	490a      	ldr	r1, [pc, #40]	@ (800b3f8 <_Z23getFont_verdana_10_4bppv+0x98>)
 800b3d0:	480a      	ldr	r0, [pc, #40]	@ (800b3fc <_Z23getFont_verdana_10_4bppv+0x9c>)
 800b3d2:	f7ff ff1b 	bl	800b20c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b3d6:	480a      	ldr	r0, [pc, #40]	@ (800b400 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800b3d8:	f01c fb9a 	bl	8027b10 <atexit>
 800b3dc:	4803      	ldr	r0, [pc, #12]	@ (800b3ec <_Z23getFont_verdana_10_4bppv+0x8c>)
 800b3de:	f01c fb58 	bl	8027a92 <__cxa_guard_release>
    return verdana_10_4bpp;
 800b3e2:	4b06      	ldr	r3, [pc, #24]	@ (800b3fc <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800b3e4:	4618      	mov	r0, r3
 800b3e6:	46bd      	mov	sp, r7
 800b3e8:	bd80      	pop	{r7, pc}
 800b3ea:	bf00      	nop
 800b3ec:	20000a88 	.word	0x20000a88
 800b3f0:	0802b34c 	.word	0x0802b34c
 800b3f4:	0802b358 	.word	0x0802b358
 800b3f8:	0802b31c 	.word	0x0802b31c
 800b3fc:	20000a5c 	.word	0x20000a5c
 800b400:	0800b351 	.word	0x0800b351

0800b404 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b404:	b580      	push	{r7, lr}
 800b406:	af00      	add	r7, sp, #0
 800b408:	4801      	ldr	r0, [pc, #4]	@ (800b410 <__tcf_0+0xc>)
 800b40a:	f7ff fec5 	bl	800b198 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b40e:	bd80      	pop	{r7, pc}
 800b410:	20000a8c 	.word	0x20000a8c

0800b414 <_Z23getFont_verdana_20_4bppv>:
{
 800b414:	b580      	push	{r7, lr}
 800b416:	b08e      	sub	sp, #56	@ 0x38
 800b418:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800b41a:	4b21      	ldr	r3, [pc, #132]	@ (800b4a0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b41c:	681b      	ldr	r3, [r3, #0]
 800b41e:	f3bf 8f5b 	dmb	ish
 800b422:	f003 0301 	and.w	r3, r3, #1
 800b426:	2b00      	cmp	r3, #0
 800b428:	bf0c      	ite	eq
 800b42a:	2301      	moveq	r3, #1
 800b42c:	2300      	movne	r3, #0
 800b42e:	b2db      	uxtb	r3, r3
 800b430:	2b00      	cmp	r3, #0
 800b432:	d030      	beq.n	800b496 <_Z23getFont_verdana_20_4bppv+0x82>
 800b434:	481a      	ldr	r0, [pc, #104]	@ (800b4a0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b436:	f01c fb20 	bl	8027a7a <__cxa_guard_acquire>
 800b43a:	4603      	mov	r3, r0
 800b43c:	2b00      	cmp	r3, #0
 800b43e:	bf14      	ite	ne
 800b440:	2301      	movne	r3, #1
 800b442:	2300      	moveq	r3, #0
 800b444:	b2db      	uxtb	r3, r3
 800b446:	2b00      	cmp	r3, #0
 800b448:	d025      	beq.n	800b496 <_Z23getFont_verdana_20_4bppv+0x82>
 800b44a:	2300      	movs	r3, #0
 800b44c:	930c      	str	r3, [sp, #48]	@ 0x30
 800b44e:	2300      	movs	r3, #0
 800b450:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b452:	2300      	movs	r3, #0
 800b454:	930a      	str	r3, [sp, #40]	@ 0x28
 800b456:	233f      	movs	r3, #63	@ 0x3f
 800b458:	9309      	str	r3, [sp, #36]	@ 0x24
 800b45a:	4b12      	ldr	r3, [pc, #72]	@ (800b4a4 <_Z23getFont_verdana_20_4bppv+0x90>)
 800b45c:	9308      	str	r3, [sp, #32]
 800b45e:	4b12      	ldr	r3, [pc, #72]	@ (800b4a8 <_Z23getFont_verdana_20_4bppv+0x94>)
 800b460:	9307      	str	r3, [sp, #28]
 800b462:	2300      	movs	r3, #0
 800b464:	9306      	str	r3, [sp, #24]
 800b466:	2300      	movs	r3, #0
 800b468:	9305      	str	r3, [sp, #20]
 800b46a:	2301      	movs	r3, #1
 800b46c:	9304      	str	r3, [sp, #16]
 800b46e:	2304      	movs	r3, #4
 800b470:	9303      	str	r3, [sp, #12]
 800b472:	2300      	movs	r3, #0
 800b474:	9302      	str	r3, [sp, #8]
 800b476:	2300      	movs	r3, #0
 800b478:	9301      	str	r3, [sp, #4]
 800b47a:	2314      	movs	r3, #20
 800b47c:	9300      	str	r3, [sp, #0]
 800b47e:	2314      	movs	r3, #20
 800b480:	2201      	movs	r2, #1
 800b482:	490a      	ldr	r1, [pc, #40]	@ (800b4ac <_Z23getFont_verdana_20_4bppv+0x98>)
 800b484:	480a      	ldr	r0, [pc, #40]	@ (800b4b0 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800b486:	f7ff fec1 	bl	800b20c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b48a:	480a      	ldr	r0, [pc, #40]	@ (800b4b4 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800b48c:	f01c fb40 	bl	8027b10 <atexit>
 800b490:	4803      	ldr	r0, [pc, #12]	@ (800b4a0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800b492:	f01c fafe 	bl	8027a92 <__cxa_guard_release>
    return verdana_20_4bpp;
 800b496:	4b06      	ldr	r3, [pc, #24]	@ (800b4b0 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800b498:	4618      	mov	r0, r3
 800b49a:	46bd      	mov	sp, r7
 800b49c:	bd80      	pop	{r7, pc}
 800b49e:	bf00      	nop
 800b4a0:	20000ab8 	.word	0x20000ab8
 800b4a4:	0802b350 	.word	0x0802b350
 800b4a8:	0802b35c 	.word	0x0802b35c
 800b4ac:	0802b32c 	.word	0x0802b32c
 800b4b0:	20000a8c 	.word	0x20000a8c
 800b4b4:	0800b405 	.word	0x0800b405

0800b4b8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b4b8:	b580      	push	{r7, lr}
 800b4ba:	af00      	add	r7, sp, #0
 800b4bc:	4801      	ldr	r0, [pc, #4]	@ (800b4c4 <__tcf_0+0xc>)
 800b4be:	f7ff fe6b 	bl	800b198 <_ZN8touchgfx13GeneratedFontD1Ev>
 800b4c2:	bd80      	pop	{r7, pc}
 800b4c4:	20000abc 	.word	0x20000abc

0800b4c8 <_Z23getFont_verdana_40_4bppv>:
{
 800b4c8:	b580      	push	{r7, lr}
 800b4ca:	b08e      	sub	sp, #56	@ 0x38
 800b4cc:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800b4ce:	4b21      	ldr	r3, [pc, #132]	@ (800b554 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b4d0:	681b      	ldr	r3, [r3, #0]
 800b4d2:	f3bf 8f5b 	dmb	ish
 800b4d6:	f003 0301 	and.w	r3, r3, #1
 800b4da:	2b00      	cmp	r3, #0
 800b4dc:	bf0c      	ite	eq
 800b4de:	2301      	moveq	r3, #1
 800b4e0:	2300      	movne	r3, #0
 800b4e2:	b2db      	uxtb	r3, r3
 800b4e4:	2b00      	cmp	r3, #0
 800b4e6:	d030      	beq.n	800b54a <_Z23getFont_verdana_40_4bppv+0x82>
 800b4e8:	481a      	ldr	r0, [pc, #104]	@ (800b554 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b4ea:	f01c fac6 	bl	8027a7a <__cxa_guard_acquire>
 800b4ee:	4603      	mov	r3, r0
 800b4f0:	2b00      	cmp	r3, #0
 800b4f2:	bf14      	ite	ne
 800b4f4:	2301      	movne	r3, #1
 800b4f6:	2300      	moveq	r3, #0
 800b4f8:	b2db      	uxtb	r3, r3
 800b4fa:	2b00      	cmp	r3, #0
 800b4fc:	d025      	beq.n	800b54a <_Z23getFont_verdana_40_4bppv+0x82>
 800b4fe:	2300      	movs	r3, #0
 800b500:	930c      	str	r3, [sp, #48]	@ 0x30
 800b502:	2300      	movs	r3, #0
 800b504:	930b      	str	r3, [sp, #44]	@ 0x2c
 800b506:	2300      	movs	r3, #0
 800b508:	930a      	str	r3, [sp, #40]	@ 0x28
 800b50a:	233f      	movs	r3, #63	@ 0x3f
 800b50c:	9309      	str	r3, [sp, #36]	@ 0x24
 800b50e:	4b12      	ldr	r3, [pc, #72]	@ (800b558 <_Z23getFont_verdana_40_4bppv+0x90>)
 800b510:	9308      	str	r3, [sp, #32]
 800b512:	4b12      	ldr	r3, [pc, #72]	@ (800b55c <_Z23getFont_verdana_40_4bppv+0x94>)
 800b514:	9307      	str	r3, [sp, #28]
 800b516:	2300      	movs	r3, #0
 800b518:	9306      	str	r3, [sp, #24]
 800b51a:	2300      	movs	r3, #0
 800b51c:	9305      	str	r3, [sp, #20]
 800b51e:	2301      	movs	r3, #1
 800b520:	9304      	str	r3, [sp, #16]
 800b522:	2304      	movs	r3, #4
 800b524:	9303      	str	r3, [sp, #12]
 800b526:	2300      	movs	r3, #0
 800b528:	9302      	str	r3, [sp, #8]
 800b52a:	2300      	movs	r3, #0
 800b52c:	9301      	str	r3, [sp, #4]
 800b52e:	2328      	movs	r3, #40	@ 0x28
 800b530:	9300      	str	r3, [sp, #0]
 800b532:	2328      	movs	r3, #40	@ 0x28
 800b534:	2201      	movs	r2, #1
 800b536:	490a      	ldr	r1, [pc, #40]	@ (800b560 <_Z23getFont_verdana_40_4bppv+0x98>)
 800b538:	480a      	ldr	r0, [pc, #40]	@ (800b564 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800b53a:	f7ff fe67 	bl	800b20c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800b53e:	480a      	ldr	r0, [pc, #40]	@ (800b568 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800b540:	f01c fae6 	bl	8027b10 <atexit>
 800b544:	4803      	ldr	r0, [pc, #12]	@ (800b554 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800b546:	f01c faa4 	bl	8027a92 <__cxa_guard_release>
    return verdana_40_4bpp;
 800b54a:	4b06      	ldr	r3, [pc, #24]	@ (800b564 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800b54c:	4618      	mov	r0, r3
 800b54e:	46bd      	mov	sp, r7
 800b550:	bd80      	pop	{r7, pc}
 800b552:	bf00      	nop
 800b554:	20000ae8 	.word	0x20000ae8
 800b558:	0802b354 	.word	0x0802b354
 800b55c:	0802b360 	.word	0x0802b360
 800b560:	0802b33c 	.word	0x0802b33c
 800b564:	20000abc 	.word	0x20000abc
 800b568:	0800b4b9 	.word	0x0800b4b9

0800b56c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800b56c:	b480      	push	{r7}
 800b56e:	b083      	sub	sp, #12
 800b570:	af00      	add	r7, sp, #0
 800b572:	6078      	str	r0, [r7, #4]
 800b574:	6039      	str	r1, [r7, #0]
 800b576:	683b      	ldr	r3, [r7, #0]
 800b578:	4618      	mov	r0, r3
 800b57a:	370c      	adds	r7, #12
 800b57c:	46bd      	mov	sp, r7
 800b57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b582:	4770      	bx	lr

0800b584 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 800b584:	b480      	push	{r7}
 800b586:	b085      	sub	sp, #20
 800b588:	af00      	add	r7, sp, #0
 800b58a:	60f8      	str	r0, [r7, #12]
 800b58c:	4608      	mov	r0, r1
 800b58e:	4611      	mov	r1, r2
 800b590:	461a      	mov	r2, r3
 800b592:	4603      	mov	r3, r0
 800b594:	817b      	strh	r3, [r7, #10]
 800b596:	460b      	mov	r3, r1
 800b598:	813b      	strh	r3, [r7, #8]
 800b59a:	4613      	mov	r3, r2
 800b59c:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800b59e:	68fb      	ldr	r3, [r7, #12]
 800b5a0:	897a      	ldrh	r2, [r7, #10]
 800b5a2:	801a      	strh	r2, [r3, #0]
 800b5a4:	68fb      	ldr	r3, [r7, #12]
 800b5a6:	893a      	ldrh	r2, [r7, #8]
 800b5a8:	805a      	strh	r2, [r3, #2]
 800b5aa:	68fb      	ldr	r3, [r7, #12]
 800b5ac:	88fa      	ldrh	r2, [r7, #6]
 800b5ae:	809a      	strh	r2, [r3, #4]
 800b5b0:	68fb      	ldr	r3, [r7, #12]
 800b5b2:	8b3a      	ldrh	r2, [r7, #24]
 800b5b4:	80da      	strh	r2, [r3, #6]
    {
    }
 800b5b6:	68fb      	ldr	r3, [r7, #12]
 800b5b8:	4618      	mov	r0, r3
 800b5ba:	3714      	adds	r7, #20
 800b5bc:	46bd      	mov	sp, r7
 800b5be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5c2:	4770      	bx	lr

0800b5c4 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800b5c4:	b480      	push	{r7}
 800b5c6:	b083      	sub	sp, #12
 800b5c8:	af00      	add	r7, sp, #0
 800b5ca:	6078      	str	r0, [r7, #4]
 800b5cc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b5ce:	bf00      	nop
 800b5d0:	370c      	adds	r7, #12
 800b5d2:	46bd      	mov	sp, r7
 800b5d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d8:	4770      	bx	lr

0800b5da <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800b5da:	b480      	push	{r7}
 800b5dc:	b083      	sub	sp, #12
 800b5de:	af00      	add	r7, sp, #0
 800b5e0:	6078      	str	r0, [r7, #4]
 800b5e2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b5e4:	bf00      	nop
 800b5e6:	370c      	adds	r7, #12
 800b5e8:	46bd      	mov	sp, r7
 800b5ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5ee:	4770      	bx	lr

0800b5f0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800b5f0:	b480      	push	{r7}
 800b5f2:	b083      	sub	sp, #12
 800b5f4:	af00      	add	r7, sp, #0
 800b5f6:	6078      	str	r0, [r7, #4]
 800b5f8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800b5fa:	bf00      	nop
 800b5fc:	370c      	adds	r7, #12
 800b5fe:	46bd      	mov	sp, r7
 800b600:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b604:	4770      	bx	lr

0800b606 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800b606:	b480      	push	{r7}
 800b608:	b083      	sub	sp, #12
 800b60a:	af00      	add	r7, sp, #0
 800b60c:	6078      	str	r0, [r7, #4]
 800b60e:	460b      	mov	r3, r1
 800b610:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800b612:	bf00      	nop
 800b614:	370c      	adds	r7, #12
 800b616:	46bd      	mov	sp, r7
 800b618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b61c:	4770      	bx	lr

0800b61e <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800b61e:	b480      	push	{r7}
 800b620:	b083      	sub	sp, #12
 800b622:	af00      	add	r7, sp, #0
 800b624:	6078      	str	r0, [r7, #4]
    {
    }
 800b626:	bf00      	nop
 800b628:	370c      	adds	r7, #12
 800b62a:	46bd      	mov	sp, r7
 800b62c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b630:	4770      	bx	lr

0800b632 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800b632:	b480      	push	{r7}
 800b634:	b083      	sub	sp, #12
 800b636:	af00      	add	r7, sp, #0
 800b638:	6078      	str	r0, [r7, #4]
    {
    }
 800b63a:	bf00      	nop
 800b63c:	370c      	adds	r7, #12
 800b63e:	46bd      	mov	sp, r7
 800b640:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b644:	4770      	bx	lr
	...

0800b648 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800b648:	b480      	push	{r7}
 800b64a:	b083      	sub	sp, #12
 800b64c:	af00      	add	r7, sp, #0
 800b64e:	6078      	str	r0, [r7, #4]
    {
 800b650:	4a04      	ldr	r2, [pc, #16]	@ (800b664 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800b652:	687b      	ldr	r3, [r7, #4]
 800b654:	601a      	str	r2, [r3, #0]
    }
 800b656:	687b      	ldr	r3, [r7, #4]
 800b658:	4618      	mov	r0, r3
 800b65a:	370c      	adds	r7, #12
 800b65c:	46bd      	mov	sp, r7
 800b65e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b662:	4770      	bx	lr
 800b664:	08029838 	.word	0x08029838

0800b668 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800b668:	b580      	push	{r7, lr}
 800b66a:	b082      	sub	sp, #8
 800b66c:	af00      	add	r7, sp, #0
 800b66e:	6078      	str	r0, [r7, #4]
    }
 800b670:	6878      	ldr	r0, [r7, #4]
 800b672:	f7ff ffe9 	bl	800b648 <_ZN8touchgfx15UIEventListenerD1Ev>
 800b676:	2104      	movs	r1, #4
 800b678:	6878      	ldr	r0, [r7, #4]
 800b67a:	f01c f9fc 	bl	8027a76 <_ZdlPvj>
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	4618      	mov	r0, r3
 800b682:	3708      	adds	r7, #8
 800b684:	46bd      	mov	sp, r7
 800b686:	bd80      	pop	{r7, pc}

0800b688 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800b688:	b480      	push	{r7}
 800b68a:	b083      	sub	sp, #12
 800b68c:	af00      	add	r7, sp, #0
 800b68e:	6078      	str	r0, [r7, #4]
    {
    }
 800b690:	bf00      	nop
 800b692:	370c      	adds	r7, #12
 800b694:	46bd      	mov	sp, r7
 800b696:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b69a:	4770      	bx	lr

0800b69c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800b69c:	b480      	push	{r7}
 800b69e:	b083      	sub	sp, #12
 800b6a0:	af00      	add	r7, sp, #0
 800b6a2:	6078      	str	r0, [r7, #4]
 800b6a4:	460b      	mov	r3, r1
 800b6a6:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800b6a8:	bf00      	nop
 800b6aa:	370c      	adds	r7, #12
 800b6ac:	46bd      	mov	sp, r7
 800b6ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6b2:	4770      	bx	lr

0800b6b4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800b6b4:	b480      	push	{r7}
 800b6b6:	b083      	sub	sp, #12
 800b6b8:	af00      	add	r7, sp, #0
 800b6ba:	6078      	str	r0, [r7, #4]
 800b6bc:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	683a      	ldr	r2, [r7, #0]
 800b6c2:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800b6c6:	6810      	ldr	r0, [r2, #0]
 800b6c8:	6851      	ldr	r1, [r2, #4]
 800b6ca:	c303      	stmia	r3!, {r0, r1}
    }
 800b6cc:	bf00      	nop
 800b6ce:	370c      	adds	r7, #12
 800b6d0:	46bd      	mov	sp, r7
 800b6d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6d6:	4770      	bx	lr

0800b6d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800b6d8:	b580      	push	{r7, lr}
 800b6da:	b082      	sub	sp, #8
 800b6dc:	af00      	add	r7, sp, #0
 800b6de:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800b6e0:	687b      	ldr	r3, [r7, #4]
 800b6e2:	3304      	adds	r3, #4
 800b6e4:	4618      	mov	r0, r3
 800b6e6:	f00a fe7f 	bl	80163e8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800b6ea:	bf00      	nop
 800b6ec:	3708      	adds	r7, #8
 800b6ee:	46bd      	mov	sp, r7
 800b6f0:	bd80      	pop	{r7, pc}
	...

0800b6f4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800b6f4:	b480      	push	{r7}
 800b6f6:	b083      	sub	sp, #12
 800b6f8:	af00      	add	r7, sp, #0
 800b6fa:	6078      	str	r0, [r7, #4]
    {
 800b6fc:	4a04      	ldr	r2, [pc, #16]	@ (800b710 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	601a      	str	r2, [r3, #0]
    }
 800b702:	687b      	ldr	r3, [r7, #4]
 800b704:	4618      	mov	r0, r3
 800b706:	370c      	adds	r7, #12
 800b708:	46bd      	mov	sp, r7
 800b70a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b70e:	4770      	bx	lr
 800b710:	08029820 	.word	0x08029820

0800b714 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800b714:	b580      	push	{r7, lr}
 800b716:	b082      	sub	sp, #8
 800b718:	af00      	add	r7, sp, #0
 800b71a:	6078      	str	r0, [r7, #4]
    }
 800b71c:	6878      	ldr	r0, [r7, #4]
 800b71e:	f7ff ffe9 	bl	800b6f4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800b722:	2104      	movs	r1, #4
 800b724:	6878      	ldr	r0, [r7, #4]
 800b726:	f01c f9a6 	bl	8027a76 <_ZdlPvj>
 800b72a:	687b      	ldr	r3, [r7, #4]
 800b72c:	4618      	mov	r0, r3
 800b72e:	3708      	adds	r7, #8
 800b730:	46bd      	mov	sp, r7
 800b732:	bd80      	pop	{r7, pc}

0800b734 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800b734:	b480      	push	{r7}
 800b736:	af00      	add	r7, sp, #0
    {
        return instance;
 800b738:	4b03      	ldr	r3, [pc, #12]	@ (800b748 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800b73a:	681b      	ldr	r3, [r3, #0]
    }
 800b73c:	4618      	mov	r0, r3
 800b73e:	46bd      	mov	sp, r7
 800b740:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b744:	4770      	bx	lr
 800b746:	bf00      	nop
 800b748:	20003984 	.word	0x20003984

0800b74c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800b74c:	b480      	push	{r7}
 800b74e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800b750:	4b0b      	ldr	r3, [pc, #44]	@ (800b780 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b752:	681b      	ldr	r3, [r3, #0]
 800b754:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800b758:	2b00      	cmp	r3, #0
 800b75a:	d008      	beq.n	800b76e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800b75c:	4b08      	ldr	r3, [pc, #32]	@ (800b780 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b75e:	681b      	ldr	r3, [r3, #0]
 800b760:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800b762:	2b00      	cmp	r3, #0
 800b764:	d003      	beq.n	800b76e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800b766:	4b06      	ldr	r3, [pc, #24]	@ (800b780 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b768:	681b      	ldr	r3, [r3, #0]
 800b76a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800b76c:	e002      	b.n	800b774 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800b76e:	4b04      	ldr	r3, [pc, #16]	@ (800b780 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800b770:	681b      	ldr	r3, [r3, #0]
 800b772:	689b      	ldr	r3, [r3, #8]
    }
 800b774:	4618      	mov	r0, r3
 800b776:	46bd      	mov	sp, r7
 800b778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b77c:	4770      	bx	lr
 800b77e:	bf00      	nop
 800b780:	20003984 	.word	0x20003984

0800b784 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800b784:	b480      	push	{r7}
 800b786:	b083      	sub	sp, #12
 800b788:	af00      	add	r7, sp, #0
 800b78a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800b78c:	4a07      	ldr	r2, [pc, #28]	@ (800b7ac <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800b78e:	687b      	ldr	r3, [r7, #4]
 800b790:	601a      	str	r2, [r3, #0]
 800b792:	687b      	ldr	r3, [r7, #4]
 800b794:	2200      	movs	r2, #0
 800b796:	605a      	str	r2, [r3, #4]
 800b798:	687b      	ldr	r3, [r7, #4]
 800b79a:	2200      	movs	r2, #0
 800b79c:	721a      	strb	r2, [r3, #8]
    {
    }
 800b79e:	687b      	ldr	r3, [r7, #4]
 800b7a0:	4618      	mov	r0, r3
 800b7a2:	370c      	adds	r7, #12
 800b7a4:	46bd      	mov	sp, r7
 800b7a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7aa:	4770      	bx	lr
 800b7ac:	080297fc 	.word	0x080297fc

0800b7b0 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800b7b0:	b480      	push	{r7}
 800b7b2:	b083      	sub	sp, #12
 800b7b4:	af00      	add	r7, sp, #0
 800b7b6:	6078      	str	r0, [r7, #4]
    {
 800b7b8:	4a04      	ldr	r2, [pc, #16]	@ (800b7cc <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800b7ba:	687b      	ldr	r3, [r7, #4]
 800b7bc:	601a      	str	r2, [r3, #0]
    }
 800b7be:	687b      	ldr	r3, [r7, #4]
 800b7c0:	4618      	mov	r0, r3
 800b7c2:	370c      	adds	r7, #12
 800b7c4:	46bd      	mov	sp, r7
 800b7c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7ca:	4770      	bx	lr
 800b7cc:	080297fc 	.word	0x080297fc

0800b7d0 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800b7d0:	b580      	push	{r7, lr}
 800b7d2:	b082      	sub	sp, #8
 800b7d4:	af00      	add	r7, sp, #0
 800b7d6:	6078      	str	r0, [r7, #4]
    }
 800b7d8:	6878      	ldr	r0, [r7, #4]
 800b7da:	f7ff ffe9 	bl	800b7b0 <_ZN8touchgfx10TransitionD1Ev>
 800b7de:	210c      	movs	r1, #12
 800b7e0:	6878      	ldr	r0, [r7, #4]
 800b7e2:	f01c f948 	bl	8027a76 <_ZdlPvj>
 800b7e6:	687b      	ldr	r3, [r7, #4]
 800b7e8:	4618      	mov	r0, r3
 800b7ea:	3708      	adds	r7, #8
 800b7ec:	46bd      	mov	sp, r7
 800b7ee:	bd80      	pop	{r7, pc}

0800b7f0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800b7f0:	b480      	push	{r7}
 800b7f2:	b083      	sub	sp, #12
 800b7f4:	af00      	add	r7, sp, #0
 800b7f6:	6078      	str	r0, [r7, #4]
    {
    }
 800b7f8:	bf00      	nop
 800b7fa:	370c      	adds	r7, #12
 800b7fc:	46bd      	mov	sp, r7
 800b7fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b802:	4770      	bx	lr

0800b804 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800b804:	b480      	push	{r7}
 800b806:	b083      	sub	sp, #12
 800b808:	af00      	add	r7, sp, #0
 800b80a:	6078      	str	r0, [r7, #4]
    {
    }
 800b80c:	bf00      	nop
 800b80e:	370c      	adds	r7, #12
 800b810:	46bd      	mov	sp, r7
 800b812:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b816:	4770      	bx	lr

0800b818 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800b818:	b480      	push	{r7}
 800b81a:	b083      	sub	sp, #12
 800b81c:	af00      	add	r7, sp, #0
 800b81e:	6078      	str	r0, [r7, #4]
    {
    }
 800b820:	bf00      	nop
 800b822:	370c      	adds	r7, #12
 800b824:	46bd      	mov	sp, r7
 800b826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b82a:	4770      	bx	lr

0800b82c <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800b82c:	b580      	push	{r7, lr}
 800b82e:	b082      	sub	sp, #8
 800b830:	af00      	add	r7, sp, #0
 800b832:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800b834:	f00a fd72 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800b838:	4603      	mov	r3, r0
 800b83a:	681a      	ldr	r2, [r3, #0]
 800b83c:	323c      	adds	r2, #60	@ 0x3c
 800b83e:	6812      	ldr	r2, [r2, #0]
 800b840:	4618      	mov	r0, r3
 800b842:	4790      	blx	r2
    }
 800b844:	bf00      	nop
 800b846:	3708      	adds	r7, #8
 800b848:	46bd      	mov	sp, r7
 800b84a:	bd80      	pop	{r7, pc}

0800b84c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800b84c:	b480      	push	{r7}
 800b84e:	b083      	sub	sp, #12
 800b850:	af00      	add	r7, sp, #0
 800b852:	6078      	str	r0, [r7, #4]
 800b854:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800b856:	687b      	ldr	r3, [r7, #4]
 800b858:	683a      	ldr	r2, [r7, #0]
 800b85a:	605a      	str	r2, [r3, #4]
    }
 800b85c:	bf00      	nop
 800b85e:	370c      	adds	r7, #12
 800b860:	46bd      	mov	sp, r7
 800b862:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b866:	4770      	bx	lr

0800b868 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800b868:	b580      	push	{r7, lr}
 800b86a:	b082      	sub	sp, #8
 800b86c:	af00      	add	r7, sp, #0
 800b86e:	6078      	str	r0, [r7, #4]
 800b870:	4a05      	ldr	r2, [pc, #20]	@ (800b888 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800b872:	687b      	ldr	r3, [r7, #4]
 800b874:	601a      	str	r2, [r3, #0]
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	4618      	mov	r0, r3
 800b87a:	f7ff fee5 	bl	800b648 <_ZN8touchgfx15UIEventListenerD1Ev>
 800b87e:	687b      	ldr	r3, [r7, #4]
 800b880:	4618      	mov	r0, r3
 800b882:	3708      	adds	r7, #8
 800b884:	46bd      	mov	sp, r7
 800b886:	bd80      	pop	{r7, pc}
 800b888:	0802ac9c 	.word	0x0802ac9c

0800b88c <_ZN8touchgfx11ApplicationD0Ev>:
 800b88c:	b580      	push	{r7, lr}
 800b88e:	b082      	sub	sp, #8
 800b890:	af00      	add	r7, sp, #0
 800b892:	6078      	str	r0, [r7, #4]
 800b894:	6878      	ldr	r0, [r7, #4]
 800b896:	f7ff ffe7 	bl	800b868 <_ZN8touchgfx11ApplicationD1Ev>
 800b89a:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800b89e:	6878      	ldr	r0, [r7, #4]
 800b8a0:	f01c f8e9 	bl	8027a76 <_ZdlPvj>
 800b8a4:	687b      	ldr	r3, [r7, #4]
 800b8a6:	4618      	mov	r0, r3
 800b8a8:	3708      	adds	r7, #8
 800b8aa:	46bd      	mov	sp, r7
 800b8ac:	bd80      	pop	{r7, pc}
	...

0800b8b0 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800b8b0:	b580      	push	{r7, lr}
 800b8b2:	b082      	sub	sp, #8
 800b8b4:	af00      	add	r7, sp, #0
 800b8b6:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800b8b8:	687b      	ldr	r3, [r7, #4]
 800b8ba:	4618      	mov	r0, r3
 800b8bc:	f00a fe66 	bl	801658c <_ZN8touchgfx11ApplicationC1Ev>
 800b8c0:	4a09      	ldr	r2, [pc, #36]	@ (800b8e8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800b8c2:	687b      	ldr	r3, [r7, #4]
 800b8c4:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800b8c6:	687b      	ldr	r3, [r7, #4]
 800b8c8:	2200      	movs	r2, #0
 800b8ca:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	2200      	movs	r2, #0
 800b8d2:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800b8d6:	687b      	ldr	r3, [r7, #4]
 800b8d8:	4a04      	ldr	r2, [pc, #16]	@ (800b8ec <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800b8da:	6013      	str	r3, [r2, #0]
    }
 800b8dc:	687b      	ldr	r3, [r7, #4]
 800b8de:	4618      	mov	r0, r3
 800b8e0:	3708      	adds	r7, #8
 800b8e2:	46bd      	mov	sp, r7
 800b8e4:	bd80      	pop	{r7, pc}
 800b8e6:	bf00      	nop
 800b8e8:	080297a8 	.word	0x080297a8
 800b8ec:	200039d8 	.word	0x200039d8

0800b8f0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800b8f0:	b580      	push	{r7, lr}
 800b8f2:	b082      	sub	sp, #8
 800b8f4:	af00      	add	r7, sp, #0
 800b8f6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800b8f8:	6878      	ldr	r0, [r7, #4]
 800b8fa:	f000 f804 	bl	800b906 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800b8fe:	bf00      	nop
 800b900:	3708      	adds	r7, #8
 800b902:	46bd      	mov	sp, r7
 800b904:	bd80      	pop	{r7, pc}

0800b906 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800b906:	b580      	push	{r7, lr}
 800b908:	b082      	sub	sp, #8
 800b90a:	af00      	add	r7, sp, #0
 800b90c:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800b90e:	687b      	ldr	r3, [r7, #4]
 800b910:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800b914:	2b00      	cmp	r3, #0
 800b916:	d00f      	beq.n	800b938 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b918:	687b      	ldr	r3, [r7, #4]
 800b91a:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800b91e:	687b      	ldr	r3, [r7, #4]
 800b920:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800b924:	681b      	ldr	r3, [r3, #0]
 800b926:	330c      	adds	r3, #12
 800b928:	681b      	ldr	r3, [r3, #0]
 800b92a:	4610      	mov	r0, r2
 800b92c:	4798      	blx	r3
 800b92e:	4603      	mov	r3, r0
 800b930:	2b00      	cmp	r3, #0
 800b932:	d001      	beq.n	800b938 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800b934:	2301      	movs	r3, #1
 800b936:	e000      	b.n	800b93a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800b938:	2300      	movs	r3, #0
 800b93a:	2b00      	cmp	r3, #0
 800b93c:	d00e      	beq.n	800b95c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800b93e:	687b      	ldr	r3, [r7, #4]
 800b940:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800b944:	687b      	ldr	r3, [r7, #4]
 800b946:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800b94a:	681b      	ldr	r3, [r3, #0]
 800b94c:	3308      	adds	r3, #8
 800b94e:	681b      	ldr	r3, [r3, #0]
 800b950:	4610      	mov	r0, r2
 800b952:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800b954:	687b      	ldr	r3, [r7, #4]
 800b956:	2200      	movs	r2, #0
 800b958:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 800b95c:	bf00      	nop
 800b95e:	3708      	adds	r7, #8
 800b960:	46bd      	mov	sp, r7
 800b962:	bd80      	pop	{r7, pc}

0800b964 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800b964:	b480      	push	{r7}
 800b966:	b083      	sub	sp, #12
 800b968:	af00      	add	r7, sp, #0
 800b96a:	6078      	str	r0, [r7, #4]
 800b96c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800b96e:	687b      	ldr	r3, [r7, #4]
 800b970:	683a      	ldr	r2, [r7, #0]
 800b972:	601a      	str	r2, [r3, #0]
    }
 800b974:	bf00      	nop
 800b976:	370c      	adds	r7, #12
 800b978:	46bd      	mov	sp, r7
 800b97a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b97e:	4770      	bx	lr

0800b980 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800b980:	b580      	push	{r7, lr}
 800b982:	b082      	sub	sp, #8
 800b984:	af00      	add	r7, sp, #0
 800b986:	6078      	str	r0, [r7, #4]
 800b988:	4a05      	ldr	r2, [pc, #20]	@ (800b9a0 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800b98a:	687b      	ldr	r3, [r7, #4]
 800b98c:	601a      	str	r2, [r3, #0]
 800b98e:	687b      	ldr	r3, [r7, #4]
 800b990:	4618      	mov	r0, r3
 800b992:	f7ff ff69 	bl	800b868 <_ZN8touchgfx11ApplicationD1Ev>
 800b996:	687b      	ldr	r3, [r7, #4]
 800b998:	4618      	mov	r0, r3
 800b99a:	3708      	adds	r7, #8
 800b99c:	46bd      	mov	sp, r7
 800b99e:	bd80      	pop	{r7, pc}
 800b9a0:	080297a8 	.word	0x080297a8

0800b9a4 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800b9a4:	b580      	push	{r7, lr}
 800b9a6:	b082      	sub	sp, #8
 800b9a8:	af00      	add	r7, sp, #0
 800b9aa:	6078      	str	r0, [r7, #4]
 800b9ac:	6878      	ldr	r0, [r7, #4]
 800b9ae:	f7ff ffe7 	bl	800b980 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b9b2:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 800b9b6:	6878      	ldr	r0, [r7, #4]
 800b9b8:	f01c f85d 	bl	8027a76 <_ZdlPvj>
 800b9bc:	687b      	ldr	r3, [r7, #4]
 800b9be:	4618      	mov	r0, r3
 800b9c0:	3708      	adds	r7, #8
 800b9c2:	46bd      	mov	sp, r7
 800b9c4:	bd80      	pop	{r7, pc}
	...

0800b9c8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800b9c8:	b580      	push	{r7, lr}
 800b9ca:	b082      	sub	sp, #8
 800b9cc:	af00      	add	r7, sp, #0
 800b9ce:	6078      	str	r0, [r7, #4]
 800b9d0:	4a08      	ldr	r2, [pc, #32]	@ (800b9f4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800b9d2:	687b      	ldr	r3, [r7, #4]
 800b9d4:	601a      	str	r2, [r3, #0]
 800b9d6:	687b      	ldr	r3, [r7, #4]
 800b9d8:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800b9dc:	4618      	mov	r0, r3
 800b9de:	f000 fd9b 	bl	800c518 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800b9e2:	687b      	ldr	r3, [r7, #4]
 800b9e4:	4618      	mov	r0, r3
 800b9e6:	f7ff ffcb 	bl	800b980 <_ZN8touchgfx14MVPApplicationD1Ev>
 800b9ea:	687b      	ldr	r3, [r7, #4]
 800b9ec:	4618      	mov	r0, r3
 800b9ee:	3708      	adds	r7, #8
 800b9f0:	46bd      	mov	sp, r7
 800b9f2:	bd80      	pop	{r7, pc}
 800b9f4:	0802973c 	.word	0x0802973c

0800b9f8 <_ZN23FrontendApplicationBaseD0Ev>:
 800b9f8:	b580      	push	{r7, lr}
 800b9fa:	b082      	sub	sp, #8
 800b9fc:	af00      	add	r7, sp, #0
 800b9fe:	6078      	str	r0, [r7, #4]
 800ba00:	6878      	ldr	r0, [r7, #4]
 800ba02:	f7ff ffe1 	bl	800b9c8 <_ZN23FrontendApplicationBaseD1Ev>
 800ba06:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800ba0a:	6878      	ldr	r0, [r7, #4]
 800ba0c:	f01c f833 	bl	8027a76 <_ZdlPvj>
 800ba10:	687b      	ldr	r3, [r7, #4]
 800ba12:	4618      	mov	r0, r3
 800ba14:	3708      	adds	r7, #8
 800ba16:	46bd      	mov	sp, r7
 800ba18:	bd80      	pop	{r7, pc}

0800ba1a <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800ba1a:	b580      	push	{r7, lr}
 800ba1c:	b082      	sub	sp, #8
 800ba1e:	af00      	add	r7, sp, #0
 800ba20:	6078      	str	r0, [r7, #4]
    {
        gotoInitialScreenNoTransition();
 800ba22:	6878      	ldr	r0, [r7, #4]
 800ba24:	f000 f988 	bl	800bd38 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>
    }
 800ba28:	bf00      	nop
 800ba2a:	3708      	adds	r7, #8
 800ba2c:	46bd      	mov	sp, r7
 800ba2e:	bd80      	pop	{r7, pc}

0800ba30 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800ba30:	b480      	push	{r7}
 800ba32:	b083      	sub	sp, #12
 800ba34:	af00      	add	r7, sp, #0
 800ba36:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	2201      	movs	r2, #1
 800ba3c:	721a      	strb	r2, [r3, #8]
    }
 800ba3e:	bf00      	nop
 800ba40:	370c      	adds	r7, #12
 800ba42:	46bd      	mov	sp, r7
 800ba44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba48:	4770      	bx	lr
	...

0800ba4c <_ZN8touchgfx15BlockTransitionC1Ev>:
{
public:
    /**
     * Initializes a new instance of the BlockTransition class.
     */
    BlockTransition()
 800ba4c:	b580      	push	{r7, lr}
 800ba4e:	b082      	sub	sp, #8
 800ba50:	af00      	add	r7, sp, #0
 800ba52:	6078      	str	r0, [r7, #4]
        : Transition(),
          animationCounter(0)
 800ba54:	687b      	ldr	r3, [r7, #4]
 800ba56:	4618      	mov	r0, r3
 800ba58:	f7ff fe94 	bl	800b784 <_ZN8touchgfx10TransitionC1Ev>
 800ba5c:	4a20      	ldr	r2, [pc, #128]	@ (800bae0 <_ZN8touchgfx15BlockTransitionC1Ev+0x94>)
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	601a      	str	r2, [r3, #0]
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	2200      	movs	r2, #0
 800ba66:	741a      	strb	r2, [r3, #16]
    {
        // 8x6 blocks, with 8 blocks on the longest edge
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 800ba68:	4b1e      	ldr	r3, [pc, #120]	@ (800bae4 <_ZN8touchgfx15BlockTransitionC1Ev+0x98>)
 800ba6a:	881a      	ldrh	r2, [r3, #0]
 800ba6c:	4b1e      	ldr	r3, [pc, #120]	@ (800bae8 <_ZN8touchgfx15BlockTransitionC1Ev+0x9c>)
 800ba6e:	881b      	ldrh	r3, [r3, #0]
 800ba70:	429a      	cmp	r2, r3
 800ba72:	d918      	bls.n	800baa6 <_ZN8touchgfx15BlockTransitionC1Ev+0x5a>
        {
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 800ba74:	4b1b      	ldr	r3, [pc, #108]	@ (800bae4 <_ZN8touchgfx15BlockTransitionC1Ev+0x98>)
 800ba76:	881b      	ldrh	r3, [r3, #0]
 800ba78:	3307      	adds	r3, #7
 800ba7a:	2b00      	cmp	r3, #0
 800ba7c:	da00      	bge.n	800ba80 <_ZN8touchgfx15BlockTransitionC1Ev+0x34>
 800ba7e:	3307      	adds	r3, #7
 800ba80:	10db      	asrs	r3, r3, #3
 800ba82:	b29a      	uxth	r2, r3
 800ba84:	687b      	ldr	r3, [r7, #4]
 800ba86:	815a      	strh	r2, [r3, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 800ba88:	4b17      	ldr	r3, [pc, #92]	@ (800bae8 <_ZN8touchgfx15BlockTransitionC1Ev+0x9c>)
 800ba8a:	881b      	ldrh	r3, [r3, #0]
 800ba8c:	3305      	adds	r3, #5
 800ba8e:	4a17      	ldr	r2, [pc, #92]	@ (800baec <_ZN8touchgfx15BlockTransitionC1Ev+0xa0>)
 800ba90:	fb82 1203 	smull	r1, r2, r2, r3
 800ba94:	17db      	asrs	r3, r3, #31
 800ba96:	1ad3      	subs	r3, r2, r3
 800ba98:	b29a      	uxth	r2, r3
 800ba9a:	687b      	ldr	r3, [r7, #4]
 800ba9c:	819a      	strh	r2, [r3, #12]
            blocksHorizontal = 8;
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	2208      	movs	r2, #8
 800baa2:	81da      	strh	r2, [r3, #14]
 800baa4:	e017      	b.n	800bad6 <_ZN8touchgfx15BlockTransitionC1Ev+0x8a>
        }
        else
        {
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 800baa6:	4b0f      	ldr	r3, [pc, #60]	@ (800bae4 <_ZN8touchgfx15BlockTransitionC1Ev+0x98>)
 800baa8:	881b      	ldrh	r3, [r3, #0]
 800baaa:	3305      	adds	r3, #5
 800baac:	4a0f      	ldr	r2, [pc, #60]	@ (800baec <_ZN8touchgfx15BlockTransitionC1Ev+0xa0>)
 800baae:	fb82 1203 	smull	r1, r2, r2, r3
 800bab2:	17db      	asrs	r3, r3, #31
 800bab4:	1ad3      	subs	r3, r2, r3
 800bab6:	b29a      	uxth	r2, r3
 800bab8:	687b      	ldr	r3, [r7, #4]
 800baba:	815a      	strh	r2, [r3, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 800babc:	4b0a      	ldr	r3, [pc, #40]	@ (800bae8 <_ZN8touchgfx15BlockTransitionC1Ev+0x9c>)
 800babe:	881b      	ldrh	r3, [r3, #0]
 800bac0:	3307      	adds	r3, #7
 800bac2:	2b00      	cmp	r3, #0
 800bac4:	da00      	bge.n	800bac8 <_ZN8touchgfx15BlockTransitionC1Ev+0x7c>
 800bac6:	3307      	adds	r3, #7
 800bac8:	10db      	asrs	r3, r3, #3
 800baca:	b29a      	uxth	r2, r3
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	819a      	strh	r2, [r3, #12]
            blocksHorizontal = 6;
 800bad0:	687b      	ldr	r3, [r7, #4]
 800bad2:	2206      	movs	r2, #6
 800bad4:	81da      	strh	r2, [r3, #14]
        }
    }
 800bad6:	687b      	ldr	r3, [r7, #4]
 800bad8:	4618      	mov	r0, r3
 800bada:	3708      	adds	r7, #8
 800badc:	46bd      	mov	sp, r7
 800bade:	bd80      	pop	{r7, pc}
 800bae0:	080296f4 	.word	0x080296f4
 800bae4:	20003978 	.word	0x20003978
 800bae8:	2000397a 	.word	0x2000397a
 800baec:	2aaaaaab 	.word	0x2aaaaaab

0800baf0 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    /**
     * Handles the tick event when transitioning. It uncovers and
     * invalidates two blocks in every frame, for a total of 24
     * frames.
     */
    virtual void handleTickEvent()
 800baf0:	b590      	push	{r4, r7, lr}
 800baf2:	b0bb      	sub	sp, #236	@ 0xec
 800baf4:	af02      	add	r7, sp, #8
 800baf6:	6078      	str	r0, [r7, #4]
    {
        const int animationSteps = 48;
 800baf8:	2330      	movs	r3, #48	@ 0x30
 800bafa:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
        // "Random" sequence of blocks to invalidate
        const int indeces[animationSteps] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 800bafe:	4a42      	ldr	r2, [pc, #264]	@ (800bc08 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x118>)
 800bb00:	f107 0310 	add.w	r3, r7, #16
 800bb04:	4611      	mov	r1, r2
 800bb06:	22c0      	movs	r2, #192	@ 0xc0
 800bb08:	4618      	mov	r0, r3
 800bb0a:	f01c faba 	bl	8028082 <memcpy>
                                              44, 5, 3, 17, 36, 46, 26, 15, 29, 39, 25, 12,
                                              19, 24, 7, 38, 37, 30, 9, 43, 4, 31, 22, 23,
                                              35, 16, 32, 42, 8, 1, 40, 33, 21, 27, 34, 45 };

        Transition::handleTickEvent();
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	4618      	mov	r0, r3
 800bb12:	f7ff fe6d 	bl	800b7f0 <_ZN8touchgfx10Transition15handleTickEventEv>

        if (animationCounter >= animationSteps)
 800bb16:	687b      	ldr	r3, [r7, #4]
 800bb18:	7c1b      	ldrb	r3, [r3, #16]
 800bb1a:	2b2f      	cmp	r3, #47	@ 0x2f
 800bb1c:	d903      	bls.n	800bb26 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x36>
        {
            // Final step: stop the animation
            done = true;
 800bb1e:	687b      	ldr	r3, [r7, #4]
 800bb20:	2201      	movs	r2, #1
 800bb22:	721a      	strb	r2, [r3, #8]
 800bb24:	e06d      	b.n	800bc02 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x112>
            return;
        }

        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 800bb26:	687b      	ldr	r3, [r7, #4]
 800bb28:	7c1b      	ldrb	r3, [r3, #16]
 800bb2a:	2b00      	cmp	r3, #0
 800bb2c:	d109      	bne.n	800bb42 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x52>
 800bb2e:	4b37      	ldr	r3, [pc, #220]	@ (800bc0c <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x11c>)
 800bb30:	781b      	ldrb	r3, [r3, #0]
 800bb32:	2b00      	cmp	r3, #0
 800bb34:	d005      	beq.n	800bb42 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x52>
        {
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800bb36:	f00a fbf1 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800bb3a:	4603      	mov	r3, r0
 800bb3c:	4618      	mov	r0, r3
 800bb3e:	f00a fbf3 	bl	8016328 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
        }

        int blocks_per_tick = 2;
 800bb42:	2302      	movs	r3, #2
 800bb44:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 800bb48:	e04b      	b.n	800bbe2 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0xf2>
        {
            // Invalidate next block in sequence
            const int index = indeces[animationCounter];
 800bb4a:	687b      	ldr	r3, [r7, #4]
 800bb4c:	7c1b      	ldrb	r3, [r3, #16]
 800bb4e:	009b      	lsls	r3, r3, #2
 800bb50:	33e0      	adds	r3, #224	@ 0xe0
 800bb52:	443b      	add	r3, r7
 800bb54:	f853 3cd0 	ldr.w	r3, [r3, #-208]
 800bb58:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

            const int16_t x = (index % blocksHorizontal) * blockWidth;
 800bb5c:	687b      	ldr	r3, [r7, #4]
 800bb5e:	89db      	ldrh	r3, [r3, #14]
 800bb60:	461a      	mov	r2, r3
 800bb62:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800bb66:	fb93 f1f2 	sdiv	r1, r3, r2
 800bb6a:	fb01 f202 	mul.w	r2, r1, r2
 800bb6e:	1a9b      	subs	r3, r3, r2
 800bb70:	b29a      	uxth	r2, r3
 800bb72:	687b      	ldr	r3, [r7, #4]
 800bb74:	895b      	ldrh	r3, [r3, #10]
 800bb76:	fb12 f303 	smulbb	r3, r2, r3
 800bb7a:	b29b      	uxth	r3, r3
 800bb7c:	f8a7 30d2 	strh.w	r3, [r7, #210]	@ 0xd2
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 800bb80:	687b      	ldr	r3, [r7, #4]
 800bb82:	89db      	ldrh	r3, [r3, #14]
 800bb84:	461a      	mov	r2, r3
 800bb86:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 800bb8a:	fb93 f3f2 	sdiv	r3, r3, r2
 800bb8e:	b29a      	uxth	r2, r3
 800bb90:	687b      	ldr	r3, [r7, #4]
 800bb92:	899b      	ldrh	r3, [r3, #12]
 800bb94:	fb12 f303 	smulbb	r3, r2, r3
 800bb98:	b29b      	uxth	r3, r3
 800bb9a:	f8a7 30d0 	strh.w	r3, [r7, #208]	@ 0xd0

            Rect invRect(x, y, blockWidth, blockHeight);
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	895b      	ldrh	r3, [r3, #10]
 800bba2:	b21c      	sxth	r4, r3
 800bba4:	687b      	ldr	r3, [r7, #4]
 800bba6:	899b      	ldrh	r3, [r3, #12]
 800bba8:	b21b      	sxth	r3, r3
 800bbaa:	f9b7 20d0 	ldrsh.w	r2, [r7, #208]	@ 0xd0
 800bbae:	f9b7 10d2 	ldrsh.w	r1, [r7, #210]	@ 0xd2
 800bbb2:	f107 0008 	add.w	r0, r7, #8
 800bbb6:	9300      	str	r3, [sp, #0]
 800bbb8:	4623      	mov	r3, r4
 800bbba:	f7ff fce3 	bl	800b584 <_ZN8touchgfx4RectC1Essss>
            screenContainer->invalidateRect(invRect);
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	685b      	ldr	r3, [r3, #4]
 800bbc2:	4618      	mov	r0, r3
 800bbc4:	687b      	ldr	r3, [r7, #4]
 800bbc6:	685b      	ldr	r3, [r3, #4]
 800bbc8:	681b      	ldr	r3, [r3, #0]
 800bbca:	3310      	adds	r3, #16
 800bbcc:	681b      	ldr	r3, [r3, #0]
 800bbce:	f107 0208 	add.w	r2, r7, #8
 800bbd2:	4611      	mov	r1, r2
 800bbd4:	4798      	blx	r3
            animationCounter++;
 800bbd6:	687b      	ldr	r3, [r7, #4]
 800bbd8:	7c1b      	ldrb	r3, [r3, #16]
 800bbda:	3301      	adds	r3, #1
 800bbdc:	b2da      	uxtb	r2, r3
 800bbde:	687b      	ldr	r3, [r7, #4]
 800bbe0:	741a      	strb	r2, [r3, #16]
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 800bbe2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800bbe6:	1e5a      	subs	r2, r3, #1
 800bbe8:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800bbec:	2b00      	cmp	r3, #0
 800bbee:	dd05      	ble.n	800bbfc <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x10c>
 800bbf0:	687b      	ldr	r3, [r7, #4]
 800bbf2:	7c1b      	ldrb	r3, [r3, #16]
 800bbf4:	2b30      	cmp	r3, #48	@ 0x30
 800bbf6:	d801      	bhi.n	800bbfc <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x10c>
 800bbf8:	2301      	movs	r3, #1
 800bbfa:	e000      	b.n	800bbfe <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x10e>
 800bbfc:	2300      	movs	r3, #0
 800bbfe:	2b00      	cmp	r3, #0
 800bc00:	d1a3      	bne.n	800bb4a <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x5a>
        }
    }
 800bc02:	37e4      	adds	r7, #228	@ 0xe4
 800bc04:	46bd      	mov	sp, r7
 800bc06:	bd90      	pop	{r4, r7, pc}
 800bc08:	08028b2c 	.word	0x08028b2c
 800bc0c:	20003982 	.word	0x20003982

0800bc10 <_ZN8touchgfx15BlockTransition8tearDownEv>:

    virtual void tearDown()
 800bc10:	b480      	push	{r7}
 800bc12:	b083      	sub	sp, #12
 800bc14:	af00      	add	r7, sp, #0
 800bc16:	6078      	str	r0, [r7, #4]
    {
    }
 800bc18:	bf00      	nop
 800bc1a:	370c      	adds	r7, #12
 800bc1c:	46bd      	mov	sp, r7
 800bc1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc22:	4770      	bx	lr

0800bc24 <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
 800bc24:	b580      	push	{r7, lr}
 800bc26:	b082      	sub	sp, #8
 800bc28:	af00      	add	r7, sp, #0
 800bc2a:	6078      	str	r0, [r7, #4]
    {
        Transition::init();
 800bc2c:	687b      	ldr	r3, [r7, #4]
 800bc2e:	4618      	mov	r0, r3
 800bc30:	f7ff fdf2 	bl	800b818 <_ZN8touchgfx10Transition4initEv>
    }
 800bc34:	bf00      	nop
 800bc36:	3708      	adds	r7, #8
 800bc38:	46bd      	mov	sp, r7
 800bc3a:	bd80      	pop	{r7, pc}

0800bc3c <_ZN8touchgfx15BlockTransition10invalidateEv>:

    /**
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
 800bc3c:	b480      	push	{r7}
 800bc3e:	b083      	sub	sp, #12
 800bc40:	af00      	add	r7, sp, #0
 800bc42:	6078      	str	r0, [r7, #4]
    {
    }
 800bc44:	bf00      	nop
 800bc46:	370c      	adds	r7, #12
 800bc48:	46bd      	mov	sp, r7
 800bc4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc4e:	4770      	bx	lr

0800bc50 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800bc50:	b480      	push	{r7}
 800bc52:	b083      	sub	sp, #12
 800bc54:	af00      	add	r7, sp, #0
 800bc56:	6078      	str	r0, [r7, #4]
 800bc58:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800bc5a:	687b      	ldr	r3, [r7, #4]
 800bc5c:	683a      	ldr	r2, [r7, #0]
 800bc5e:	605a      	str	r2, [r3, #4]
    }
 800bc60:	bf00      	nop
 800bc62:	370c      	adds	r7, #12
 800bc64:	46bd      	mov	sp, r7
 800bc66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bc6a:	4770      	bx	lr

0800bc6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800bc6c:	b580      	push	{r7, lr}
 800bc6e:	b084      	sub	sp, #16
 800bc70:	af00      	add	r7, sp, #0
 800bc72:	60f8      	str	r0, [r7, #12]
 800bc74:	60b9      	str	r1, [r7, #8]
 800bc76:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800bc78:	68fb      	ldr	r3, [r7, #12]
 800bc7a:	4618      	mov	r0, r3
 800bc7c:	f7ff fe18 	bl	800b8b0 <_ZN8touchgfx14MVPApplicationC1Ev>
 800bc80:	4a18      	ldr	r2, [pc, #96]	@ (800bce4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x78>)
 800bc82:	68fb      	ldr	r3, [r7, #12]
 800bc84:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800bc86:	68fb      	ldr	r3, [r7, #12]
 800bc88:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800bc8c:	4618      	mov	r0, r3
 800bc8e:	f000 f8ef 	bl	800be70 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800bc92:	68fb      	ldr	r3, [r7, #12]
 800bc94:	687a      	ldr	r2, [r7, #4]
 800bc96:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 800bc9a:	68fb      	ldr	r3, [r7, #12]
 800bc9c:	68ba      	ldr	r2, [r7, #8]
 800bc9e:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800bca2:	f7ff fd47 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 800bca6:	4603      	mov	r3, r0
 800bca8:	681a      	ldr	r2, [r3, #0]
 800bcaa:	3208      	adds	r2, #8
 800bcac:	6812      	ldr	r2, [r2, #0]
 800bcae:	2100      	movs	r1, #0
 800bcb0:	4618      	mov	r0, r3
 800bcb2:	4790      	blx	r2
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800bcb4:	f7ff fd4a 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 800bcb8:	4603      	mov	r3, r0
 800bcba:	4618      	mov	r0, r3
 800bcbc:	f014 f847 	bl	801fd4e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800bcc0:	f7ff fd44 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 800bcc4:	4603      	mov	r3, r0
 800bcc6:	4618      	mov	r0, r3
 800bcc8:	f014 f8bc 	bl	801fe44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800bccc:	f7ff fd3e 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 800bcd0:	4603      	mov	r3, r0
 800bcd2:	4618      	mov	r0, r3
 800bcd4:	f014 f8c2 	bl	801fe5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800bcd8:	68fb      	ldr	r3, [r7, #12]
 800bcda:	4618      	mov	r0, r3
 800bcdc:	3710      	adds	r7, #16
 800bcde:	46bd      	mov	sp, r7
 800bce0:	bd80      	pop	{r7, pc}
 800bce2:	bf00      	nop
 800bce4:	0802973c 	.word	0x0802973c

0800bce8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800bce8:	b480      	push	{r7}
 800bcea:	b083      	sub	sp, #12
 800bcec:	af00      	add	r7, sp, #0
 800bcee:	6078      	str	r0, [r7, #4]
 800bcf0:	6039      	str	r1, [r7, #0]
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	4618      	mov	r0, r3
 800bcf6:	370c      	adds	r7, #12
 800bcf8:	46bd      	mov	sp, r7
 800bcfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcfe:	4770      	bx	lr

0800bd00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800bd00:	b580      	push	{r7, lr}
 800bd02:	b082      	sub	sp, #8
 800bd04:	af00      	add	r7, sp, #0
 800bd06:	6078      	str	r0, [r7, #4]
 800bd08:	6039      	str	r1, [r7, #0]
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	683a      	ldr	r2, [r7, #0]
 800bd0e:	4611      	mov	r1, r2
 800bd10:	4618      	mov	r0, r3
 800bd12:	f7ff ffe9 	bl	800bce8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800bd16:	683b      	ldr	r3, [r7, #0]
 800bd18:	685a      	ldr	r2, [r3, #4]
 800bd1a:	687b      	ldr	r3, [r7, #4]
 800bd1c:	605a      	str	r2, [r3, #4]
 800bd1e:	687b      	ldr	r3, [r7, #4]
 800bd20:	683a      	ldr	r2, [r7, #0]
 800bd22:	3308      	adds	r3, #8
 800bd24:	3208      	adds	r2, #8
 800bd26:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bd2a:	e883 0003 	stmia.w	r3, {r0, r1}
 800bd2e:	687b      	ldr	r3, [r7, #4]
 800bd30:	4618      	mov	r0, r3
 800bd32:	3708      	adds	r7, #8
 800bd34:	46bd      	mov	sp, r7
 800bd36:	bd80      	pop	{r7, pc}

0800bd38 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>:
 */

// Initial

void FrontendApplicationBase::gotoInitialScreenNoTransition()
{
 800bd38:	b590      	push	{r4, r7, lr}
 800bd3a:	b089      	sub	sp, #36	@ 0x24
 800bd3c:	af00      	add	r7, sp, #0
 800bd3e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoInitialScreenNoTransitionImpl);
 800bd40:	687b      	ldr	r3, [r7, #4]
 800bd42:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800bd46:	4b10      	ldr	r3, [pc, #64]	@ (800bd88 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv+0x50>)
 800bd48:	61bb      	str	r3, [r7, #24]
 800bd4a:	2300      	movs	r3, #0
 800bd4c:	61fb      	str	r3, [r7, #28]
 800bd4e:	f107 0008 	add.w	r0, r7, #8
 800bd52:	f107 0318 	add.w	r3, r7, #24
 800bd56:	cb0c      	ldmia	r3, {r2, r3}
 800bd58:	6879      	ldr	r1, [r7, #4]
 800bd5a:	f000 f8a5 	bl	800bea8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800bd5e:	f107 0308 	add.w	r3, r7, #8
 800bd62:	4619      	mov	r1, r3
 800bd64:	4620      	mov	r0, r4
 800bd66:	f7ff ffcb 	bl	800bd00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800bd6a:	f107 0308 	add.w	r3, r7, #8
 800bd6e:	4618      	mov	r0, r3
 800bd70:	f000 fbd2 	bl	800c518 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800bd74:	687b      	ldr	r3, [r7, #4]
 800bd76:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800bd7a:	687b      	ldr	r3, [r7, #4]
 800bd7c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 800bd80:	bf00      	nop
 800bd82:	3724      	adds	r7, #36	@ 0x24
 800bd84:	46bd      	mov	sp, r7
 800bd86:	bd90      	pop	{r4, r7, pc}
 800bd88:	0800bd8d 	.word	0x0800bd8d

0800bd8c <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoInitialScreenNoTransitionImpl()
{
 800bd8c:	b580      	push	{r7, lr}
 800bd8e:	b084      	sub	sp, #16
 800bd90:	af02      	add	r7, sp, #8
 800bd92:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<InitialView, InitialPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800bd94:	687b      	ldr	r3, [r7, #4]
 800bd96:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 800bda0:	461a      	mov	r2, r3
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800bda8:	9300      	str	r3, [sp, #0]
 800bdaa:	4b04      	ldr	r3, [pc, #16]	@ (800bdbc <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x30>)
 800bdac:	4804      	ldr	r0, [pc, #16]	@ (800bdc0 <_ZN23FrontendApplicationBase33gotoInitialScreenNoTransitionImplEv+0x34>)
 800bdae:	f000 f8ad 	bl	800bf0c <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800bdb2:	bf00      	nop
 800bdb4:	3708      	adds	r7, #8
 800bdb6:	46bd      	mov	sp, r7
 800bdb8:	bd80      	pop	{r7, pc}
 800bdba:	bf00      	nop
 800bdbc:	200039cc 	.word	0x200039cc
 800bdc0:	200039c8 	.word	0x200039c8

0800bdc4 <_ZN23FrontendApplicationBase32gotoScreen1ScreenBlockTransitionEv>:

// Screen1

void FrontendApplicationBase::gotoScreen1ScreenBlockTransition()
{
 800bdc4:	b590      	push	{r4, r7, lr}
 800bdc6:	b089      	sub	sp, #36	@ 0x24
 800bdc8:	af00      	add	r7, sp, #0
 800bdca:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoScreen1ScreenBlockTransitionImpl);
 800bdcc:	687b      	ldr	r3, [r7, #4]
 800bdce:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800bdd2:	4b10      	ldr	r3, [pc, #64]	@ (800be14 <_ZN23FrontendApplicationBase32gotoScreen1ScreenBlockTransitionEv+0x50>)
 800bdd4:	61bb      	str	r3, [r7, #24]
 800bdd6:	2300      	movs	r3, #0
 800bdd8:	61fb      	str	r3, [r7, #28]
 800bdda:	f107 0008 	add.w	r0, r7, #8
 800bdde:	f107 0318 	add.w	r3, r7, #24
 800bde2:	cb0c      	ldmia	r3, {r2, r3}
 800bde4:	6879      	ldr	r1, [r7, #4]
 800bde6:	f000 f85f 	bl	800bea8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800bdea:	f107 0308 	add.w	r3, r7, #8
 800bdee:	4619      	mov	r1, r3
 800bdf0:	4620      	mov	r0, r4
 800bdf2:	f7ff ff85 	bl	800bd00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800bdf6:	f107 0308 	add.w	r3, r7, #8
 800bdfa:	4618      	mov	r0, r3
 800bdfc:	f000 fb8c 	bl	800c518 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800be00:	687b      	ldr	r3, [r7, #4]
 800be02:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800be06:	687b      	ldr	r3, [r7, #4]
 800be08:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 800be0c:	bf00      	nop
 800be0e:	3724      	adds	r7, #36	@ 0x24
 800be10:	46bd      	mov	sp, r7
 800be12:	bd90      	pop	{r4, r7, pc}
 800be14:	0800be19 	.word	0x0800be19

0800be18 <_ZN23FrontendApplicationBase36gotoScreen1ScreenBlockTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenBlockTransitionImpl()
{
 800be18:	b580      	push	{r7, lr}
 800be1a:	b084      	sub	sp, #16
 800be1c:	af02      	add	r7, sp, #8
 800be1e:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800be20:	687b      	ldr	r3, [r7, #4]
 800be22:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800be26:	687b      	ldr	r3, [r7, #4]
 800be28:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 800be2c:	461a      	mov	r2, r3
 800be2e:	687b      	ldr	r3, [r7, #4]
 800be30:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800be34:	9300      	str	r3, [sp, #0]
 800be36:	4b04      	ldr	r3, [pc, #16]	@ (800be48 <_ZN23FrontendApplicationBase36gotoScreen1ScreenBlockTransitionImplEv+0x30>)
 800be38:	4804      	ldr	r0, [pc, #16]	@ (800be4c <_ZN23FrontendApplicationBase36gotoScreen1ScreenBlockTransitionImplEv+0x34>)
 800be3a:	f000 f981 	bl	800c140 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800be3e:	bf00      	nop
 800be40:	3708      	adds	r7, #8
 800be42:	46bd      	mov	sp, r7
 800be44:	bd80      	pop	{r7, pc}
 800be46:	bf00      	nop
 800be48:	200039cc 	.word	0x200039cc
 800be4c:	200039c8 	.word	0x200039c8

0800be50 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800be50:	b480      	push	{r7}
 800be52:	b083      	sub	sp, #12
 800be54:	af00      	add	r7, sp, #0
 800be56:	6078      	str	r0, [r7, #4]
 800be58:	4a04      	ldr	r2, [pc, #16]	@ (800be6c <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800be5a:	687b      	ldr	r3, [r7, #4]
 800be5c:	601a      	str	r2, [r3, #0]
 800be5e:	687b      	ldr	r3, [r7, #4]
 800be60:	4618      	mov	r0, r3
 800be62:	370c      	adds	r7, #12
 800be64:	46bd      	mov	sp, r7
 800be66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be6a:	4770      	bx	lr
 800be6c:	08029820 	.word	0x08029820

0800be70 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800be70:	b580      	push	{r7, lr}
 800be72:	b082      	sub	sp, #8
 800be74:	af00      	add	r7, sp, #0
 800be76:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800be78:	687b      	ldr	r3, [r7, #4]
 800be7a:	4618      	mov	r0, r3
 800be7c:	f7ff ffe8 	bl	800be50 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800be80:	4a08      	ldr	r2, [pc, #32]	@ (800bea4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800be82:	687b      	ldr	r3, [r7, #4]
 800be84:	601a      	str	r2, [r3, #0]
 800be86:	687b      	ldr	r3, [r7, #4]
 800be88:	2200      	movs	r2, #0
 800be8a:	605a      	str	r2, [r3, #4]
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	2200      	movs	r2, #0
 800be90:	609a      	str	r2, [r3, #8]
 800be92:	687b      	ldr	r3, [r7, #4]
 800be94:	2200      	movs	r2, #0
 800be96:	60da      	str	r2, [r3, #12]
    {
    }
 800be98:	687b      	ldr	r3, [r7, #4]
 800be9a:	4618      	mov	r0, r3
 800be9c:	3708      	adds	r7, #8
 800be9e:	46bd      	mov	sp, r7
 800bea0:	bd80      	pop	{r7, pc}
 800bea2:	bf00      	nop
 800bea4:	08029790 	.word	0x08029790

0800bea8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800bea8:	b580      	push	{r7, lr}
 800beaa:	b084      	sub	sp, #16
 800beac:	af00      	add	r7, sp, #0
 800beae:	60f8      	str	r0, [r7, #12]
 800beb0:	60b9      	str	r1, [r7, #8]
 800beb2:	4639      	mov	r1, r7
 800beb4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800beb8:	68fb      	ldr	r3, [r7, #12]
 800beba:	4618      	mov	r0, r3
 800bebc:	f7ff ffc8 	bl	800be50 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800bec0:	4a08      	ldr	r2, [pc, #32]	@ (800bee4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800bec2:	68fb      	ldr	r3, [r7, #12]
 800bec4:	601a      	str	r2, [r3, #0]
 800bec6:	68fb      	ldr	r3, [r7, #12]
 800bec8:	68ba      	ldr	r2, [r7, #8]
 800beca:	605a      	str	r2, [r3, #4]
 800becc:	68fb      	ldr	r3, [r7, #12]
 800bece:	3308      	adds	r3, #8
 800bed0:	463a      	mov	r2, r7
 800bed2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bed6:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800beda:	68fb      	ldr	r3, [r7, #12]
 800bedc:	4618      	mov	r0, r3
 800bede:	3710      	adds	r7, #16
 800bee0:	46bd      	mov	sp, r7
 800bee2:	bd80      	pop	{r7, pc}
 800bee4:	08029790 	.word	0x08029790

0800bee8 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800bee8:	b580      	push	{r7, lr}
 800beea:	b082      	sub	sp, #8
 800beec:	af00      	add	r7, sp, #0
 800beee:	6078      	str	r0, [r7, #4]
 800bef0:	687b      	ldr	r3, [r7, #4]
 800bef2:	4618      	mov	r0, r3
 800bef4:	f7ff fc46 	bl	800b784 <_ZN8touchgfx10TransitionC1Ev>
 800bef8:	4a03      	ldr	r2, [pc, #12]	@ (800bf08 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800befa:	687b      	ldr	r3, [r7, #4]
 800befc:	601a      	str	r2, [r3, #0]
 800befe:	687b      	ldr	r3, [r7, #4]
 800bf00:	4618      	mov	r0, r3
 800bf02:	3708      	adds	r7, #8
 800bf04:	46bd      	mov	sp, r7
 800bf06:	bd80      	pop	{r7, pc}
 800bf08:	08029718 	.word	0x08029718

0800bf0c <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800bf0c:	b590      	push	{r4, r7, lr}
 800bf0e:	b08f      	sub	sp, #60	@ 0x3c
 800bf10:	af00      	add	r7, sp, #0
 800bf12:	60f8      	str	r0, [r7, #12]
 800bf14:	60b9      	str	r1, [r7, #8]
 800bf16:	607a      	str	r2, [r7, #4]
 800bf18:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800bf1a:	687b      	ldr	r3, [r7, #4]
 800bf1c:	689a      	ldr	r2, [r3, #8]
 800bf1e:	687b      	ldr	r3, [r7, #4]
 800bf20:	689b      	ldr	r3, [r3, #8]
 800bf22:	681b      	ldr	r3, [r3, #0]
 800bf24:	3320      	adds	r3, #32
 800bf26:	681b      	ldr	r3, [r3, #0]
 800bf28:	4610      	mov	r0, r2
 800bf2a:	4798      	blx	r3
 800bf2c:	4603      	mov	r3, r0
 800bf2e:	f641 52fb 	movw	r2, #7675	@ 0x1dfb
 800bf32:	4293      	cmp	r3, r2
 800bf34:	d805      	bhi.n	800bf42 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x36>
 800bf36:	4b7d      	ldr	r3, [pc, #500]	@ (800c12c <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800bf38:	4a7d      	ldr	r2, [pc, #500]	@ (800c130 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bf3a:	21a3      	movs	r1, #163	@ 0xa3
 800bf3c:	487d      	ldr	r0, [pc, #500]	@ (800c134 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bf3e:	f01b fdc9 	bl	8027ad4 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800bf42:	687b      	ldr	r3, [r7, #4]
 800bf44:	685a      	ldr	r2, [r3, #4]
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	685b      	ldr	r3, [r3, #4]
 800bf4a:	681b      	ldr	r3, [r3, #0]
 800bf4c:	3320      	adds	r3, #32
 800bf4e:	681b      	ldr	r3, [r3, #0]
 800bf50:	4610      	mov	r0, r2
 800bf52:	4798      	blx	r3
 800bf54:	4603      	mov	r3, r0
 800bf56:	2b0f      	cmp	r3, #15
 800bf58:	d805      	bhi.n	800bf66 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 800bf5a:	4b77      	ldr	r3, [pc, #476]	@ (800c138 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800bf5c:	4a74      	ldr	r2, [pc, #464]	@ (800c130 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bf5e:	21a4      	movs	r1, #164	@ 0xa4
 800bf60:	4874      	ldr	r0, [pc, #464]	@ (800c134 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bf62:	f01b fdb7 	bl	8027ad4 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	68da      	ldr	r2, [r3, #12]
 800bf6a:	687b      	ldr	r3, [r7, #4]
 800bf6c:	68db      	ldr	r3, [r3, #12]
 800bf6e:	681b      	ldr	r3, [r3, #0]
 800bf70:	3320      	adds	r3, #32
 800bf72:	681b      	ldr	r3, [r3, #0]
 800bf74:	4610      	mov	r0, r2
 800bf76:	4798      	blx	r3
 800bf78:	4603      	mov	r3, r0
 800bf7a:	2b0b      	cmp	r3, #11
 800bf7c:	d805      	bhi.n	800bf8a <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7e>
 800bf7e:	4b6f      	ldr	r3, [pc, #444]	@ (800c13c <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800bf80:	4a6b      	ldr	r2, [pc, #428]	@ (800c130 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800bf82:	21a5      	movs	r1, #165	@ 0xa5
 800bf84:	486b      	ldr	r0, [pc, #428]	@ (800c134 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800bf86:	f01b fda5 	bl	8027ad4 <__assert_func>
 800bf8a:	68fb      	ldr	r3, [r7, #12]
 800bf8c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800bf8e:	68bb      	ldr	r3, [r7, #8]
 800bf90:	627b      	str	r3, [r7, #36]	@ 0x24
 800bf92:	683b      	ldr	r3, [r7, #0]
 800bf94:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800bf96:	f00a f9c1 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800bf9a:	4603      	mov	r3, r0
 800bf9c:	4618      	mov	r0, r3
 800bf9e:	f7ff fb9b 	bl	800b6d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800bfa2:	6a3b      	ldr	r3, [r7, #32]
 800bfa4:	681b      	ldr	r3, [r3, #0]
 800bfa6:	2b00      	cmp	r3, #0
 800bfa8:	d008      	beq.n	800bfbc <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb0>
        (*currentTrans)->tearDown();
 800bfaa:	6a3b      	ldr	r3, [r7, #32]
 800bfac:	681a      	ldr	r2, [r3, #0]
 800bfae:	6a3b      	ldr	r3, [r7, #32]
 800bfb0:	681b      	ldr	r3, [r3, #0]
 800bfb2:	681b      	ldr	r3, [r3, #0]
 800bfb4:	330c      	adds	r3, #12
 800bfb6:	681b      	ldr	r3, [r3, #0]
 800bfb8:	4610      	mov	r0, r2
 800bfba:	4798      	blx	r3
    if (*currentTrans)
 800bfbc:	6a3b      	ldr	r3, [r7, #32]
 800bfbe:	681b      	ldr	r3, [r3, #0]
 800bfc0:	2b00      	cmp	r3, #0
 800bfc2:	d007      	beq.n	800bfd4 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc8>
        (*currentTrans)->~Transition();
 800bfc4:	6a3b      	ldr	r3, [r7, #32]
 800bfc6:	681a      	ldr	r2, [r3, #0]
 800bfc8:	6a3b      	ldr	r3, [r7, #32]
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	681b      	ldr	r3, [r3, #0]
 800bfce:	681b      	ldr	r3, [r3, #0]
 800bfd0:	4610      	mov	r0, r2
 800bfd2:	4798      	blx	r3
    if (*currentScreen)
 800bfd4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bfd6:	681b      	ldr	r3, [r3, #0]
 800bfd8:	2b00      	cmp	r3, #0
 800bfda:	d008      	beq.n	800bfee <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe2>
        (*currentScreen)->tearDownScreen();
 800bfdc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bfde:	681a      	ldr	r2, [r3, #0]
 800bfe0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bfe2:	681b      	ldr	r3, [r3, #0]
 800bfe4:	681b      	ldr	r3, [r3, #0]
 800bfe6:	3314      	adds	r3, #20
 800bfe8:	681b      	ldr	r3, [r3, #0]
 800bfea:	4610      	mov	r0, r2
 800bfec:	4798      	blx	r3
    if (*currentPresenter)
 800bfee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bff0:	681b      	ldr	r3, [r3, #0]
 800bff2:	2b00      	cmp	r3, #0
 800bff4:	d008      	beq.n	800c008 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfc>
        (*currentPresenter)->deactivate();
 800bff6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bff8:	681a      	ldr	r2, [r3, #0]
 800bffa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bffc:	681b      	ldr	r3, [r3, #0]
 800bffe:	681b      	ldr	r3, [r3, #0]
 800c000:	3304      	adds	r3, #4
 800c002:	681b      	ldr	r3, [r3, #0]
 800c004:	4610      	mov	r0, r2
 800c006:	4798      	blx	r3
    if (*currentScreen)
 800c008:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c00a:	681b      	ldr	r3, [r3, #0]
 800c00c:	2b00      	cmp	r3, #0
 800c00e:	d007      	beq.n	800c020 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x114>
        (*currentScreen)->~Screen();
 800c010:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c012:	681a      	ldr	r2, [r3, #0]
 800c014:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c016:	681b      	ldr	r3, [r3, #0]
 800c018:	681b      	ldr	r3, [r3, #0]
 800c01a:	681b      	ldr	r3, [r3, #0]
 800c01c:	4610      	mov	r0, r2
 800c01e:	4798      	blx	r3
    if (*currentPresenter)
 800c020:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c022:	681b      	ldr	r3, [r3, #0]
 800c024:	2b00      	cmp	r3, #0
 800c026:	d008      	beq.n	800c03a <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
        (*currentPresenter)->~Presenter();
 800c028:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c02a:	681a      	ldr	r2, [r3, #0]
 800c02c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c02e:	681b      	ldr	r3, [r3, #0]
 800c030:	681b      	ldr	r3, [r3, #0]
 800c032:	3308      	adds	r3, #8
 800c034:	681b      	ldr	r3, [r3, #0]
 800c036:	4610      	mov	r0, r2
 800c038:	4798      	blx	r3
}
 800c03a:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c03c:	687b      	ldr	r3, [r7, #4]
 800c03e:	68db      	ldr	r3, [r3, #12]
 800c040:	2100      	movs	r1, #0
 800c042:	4618      	mov	r0, r3
 800c044:	f000 f996 	bl	800c374 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800c048:	4603      	mov	r3, r0
 800c04a:	4619      	mov	r1, r3
 800c04c:	200c      	movs	r0, #12
 800c04e:	f7ff fa8d 	bl	800b56c <_ZnwjPv>
 800c052:	4604      	mov	r4, r0
 800c054:	4620      	mov	r0, r4
 800c056:	f7ff ff47 	bl	800bee8 <_ZN8touchgfx12NoTransitionC1Ev>
 800c05a:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c05c:	687b      	ldr	r3, [r7, #4]
 800c05e:	689b      	ldr	r3, [r3, #8]
 800c060:	2100      	movs	r1, #0
 800c062:	4618      	mov	r0, r3
 800c064:	f000 f999 	bl	800c39a <_ZN8touchgfx17AbstractPartition2atI11InitialViewEERT_t>
 800c068:	4603      	mov	r3, r0
 800c06a:	4619      	mov	r1, r3
 800c06c:	f641 50fc 	movw	r0, #7676	@ 0x1dfc
 800c070:	f7ff fa7c 	bl	800b56c <_ZnwjPv>
 800c074:	4604      	mov	r4, r0
 800c076:	4620      	mov	r0, r4
 800c078:	f003 fbc4 	bl	800f804 <_ZN11InitialViewC1Ev>
 800c07c:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c07e:	687b      	ldr	r3, [r7, #4]
 800c080:	685b      	ldr	r3, [r3, #4]
 800c082:	2100      	movs	r1, #0
 800c084:	4618      	mov	r0, r3
 800c086:	f000 f99b 	bl	800c3c0 <_ZN8touchgfx17AbstractPartition2atI16InitialPresenterEERT_t>
 800c08a:	4603      	mov	r3, r0
 800c08c:	4619      	mov	r1, r3
 800c08e:	2010      	movs	r0, #16
 800c090:	f7ff fa6c 	bl	800b56c <_ZnwjPv>
 800c094:	4604      	mov	r4, r0
 800c096:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800c098:	4620      	mov	r0, r4
 800c09a:	f003 fb5b 	bl	800f754 <_ZN16InitialPresenterC1ER11InitialView>
 800c09e:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800c0a0:	683b      	ldr	r3, [r7, #0]
 800c0a2:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800c0a4:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c0a6:	68bb      	ldr	r3, [r7, #8]
 800c0a8:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c0aa:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c0ac:	68fb      	ldr	r3, [r7, #12]
 800c0ae:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800c0b0:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c0b2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c0b4:	2b00      	cmp	r3, #0
 800c0b6:	d002      	beq.n	800c0be <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c0b8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c0ba:	3304      	adds	r3, #4
 800c0bc:	e000      	b.n	800c0c0 <_ZN8touchgfx14makeTransitionI11InitialView16InitialPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b4>
 800c0be:	2300      	movs	r3, #0
 800c0c0:	4619      	mov	r1, r3
 800c0c2:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800c0c4:	f7ff fc4e 	bl	800b964 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c0c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c0ca:	3304      	adds	r3, #4
 800c0cc:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800c0ce:	4618      	mov	r0, r3
 800c0d0:	f7ff fdbe 	bl	800bc50 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c0d4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c0d6:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800c0d8:	4618      	mov	r0, r3
 800c0da:	f000 f984 	bl	800c3e6 <_ZN8touchgfx4ViewI16InitialPresenterE4bindERS1_>
 800c0de:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c0e0:	61fb      	str	r3, [r7, #28]
 800c0e2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c0e4:	61bb      	str	r3, [r7, #24]
 800c0e6:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c0e8:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c0ea:	69fb      	ldr	r3, [r7, #28]
 800c0ec:	681b      	ldr	r3, [r3, #0]
 800c0ee:	330c      	adds	r3, #12
 800c0f0:	681b      	ldr	r3, [r3, #0]
 800c0f2:	69f8      	ldr	r0, [r7, #28]
 800c0f4:	4798      	blx	r3
    newPresenter->activate();
 800c0f6:	69bb      	ldr	r3, [r7, #24]
 800c0f8:	681b      	ldr	r3, [r3, #0]
 800c0fa:	681b      	ldr	r3, [r3, #0]
 800c0fc:	69b8      	ldr	r0, [r7, #24]
 800c0fe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c100:	6979      	ldr	r1, [r7, #20]
 800c102:	69f8      	ldr	r0, [r7, #28]
 800c104:	f00b fecc 	bl	8017ea0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c108:	697b      	ldr	r3, [r7, #20]
 800c10a:	681b      	ldr	r3, [r3, #0]
 800c10c:	3310      	adds	r3, #16
 800c10e:	681b      	ldr	r3, [r3, #0]
 800c110:	6978      	ldr	r0, [r7, #20]
 800c112:	4798      	blx	r3
    newTransition->invalidate();
 800c114:	697b      	ldr	r3, [r7, #20]
 800c116:	681b      	ldr	r3, [r3, #0]
 800c118:	3314      	adds	r3, #20
 800c11a:	681b      	ldr	r3, [r3, #0]
 800c11c:	6978      	ldr	r0, [r7, #20]
 800c11e:	4798      	blx	r3
}
 800c120:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800c122:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800c124:	4618      	mov	r0, r3
 800c126:	373c      	adds	r7, #60	@ 0x3c
 800c128:	46bd      	mov	sp, r7
 800c12a:	bd90      	pop	{r4, r7, pc}
 800c12c:	08028bec 	.word	0x08028bec
 800c130:	08028c7c 	.word	0x08028c7c
 800c134:	08028d50 	.word	0x08028d50
 800c138:	08028d94 	.word	0x08028d94
 800c13c:	08028e38 	.word	0x08028e38

0800c140 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800c140:	b590      	push	{r4, r7, lr}
 800c142:	b08f      	sub	sp, #60	@ 0x3c
 800c144:	af00      	add	r7, sp, #0
 800c146:	60f8      	str	r0, [r7, #12]
 800c148:	60b9      	str	r1, [r7, #8]
 800c14a:	607a      	str	r2, [r7, #4]
 800c14c:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800c14e:	687b      	ldr	r3, [r7, #4]
 800c150:	689a      	ldr	r2, [r3, #8]
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	689b      	ldr	r3, [r3, #8]
 800c156:	681b      	ldr	r3, [r3, #0]
 800c158:	3320      	adds	r3, #32
 800c15a:	681b      	ldr	r3, [r3, #0]
 800c15c:	4610      	mov	r0, r2
 800c15e:	4798      	blx	r3
 800c160:	4603      	mov	r3, r0
 800c162:	f5b3 7f21 	cmp.w	r3, #644	@ 0x284
 800c166:	d205      	bcs.n	800c174 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800c168:	4b7d      	ldr	r3, [pc, #500]	@ (800c360 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800c16a:	4a7e      	ldr	r2, [pc, #504]	@ (800c364 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c16c:	21a3      	movs	r1, #163	@ 0xa3
 800c16e:	487e      	ldr	r0, [pc, #504]	@ (800c368 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c170:	f01b fcb0 	bl	8027ad4 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800c174:	687b      	ldr	r3, [r7, #4]
 800c176:	685a      	ldr	r2, [r3, #4]
 800c178:	687b      	ldr	r3, [r7, #4]
 800c17a:	685b      	ldr	r3, [r3, #4]
 800c17c:	681b      	ldr	r3, [r3, #0]
 800c17e:	3320      	adds	r3, #32
 800c180:	681b      	ldr	r3, [r3, #0]
 800c182:	4610      	mov	r0, r2
 800c184:	4798      	blx	r3
 800c186:	4603      	mov	r3, r0
 800c188:	2b0f      	cmp	r3, #15
 800c18a:	d805      	bhi.n	800c198 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800c18c:	4b77      	ldr	r3, [pc, #476]	@ (800c36c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800c18e:	4a75      	ldr	r2, [pc, #468]	@ (800c364 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c190:	21a4      	movs	r1, #164	@ 0xa4
 800c192:	4875      	ldr	r0, [pc, #468]	@ (800c368 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c194:	f01b fc9e 	bl	8027ad4 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800c198:	687b      	ldr	r3, [r7, #4]
 800c19a:	68da      	ldr	r2, [r3, #12]
 800c19c:	687b      	ldr	r3, [r7, #4]
 800c19e:	68db      	ldr	r3, [r3, #12]
 800c1a0:	681b      	ldr	r3, [r3, #0]
 800c1a2:	3320      	adds	r3, #32
 800c1a4:	681b      	ldr	r3, [r3, #0]
 800c1a6:	4610      	mov	r0, r2
 800c1a8:	4798      	blx	r3
 800c1aa:	4603      	mov	r3, r0
 800c1ac:	2b13      	cmp	r3, #19
 800c1ae:	d805      	bhi.n	800c1bc <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800c1b0:	4b6f      	ldr	r3, [pc, #444]	@ (800c370 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800c1b2:	4a6c      	ldr	r2, [pc, #432]	@ (800c364 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800c1b4:	21a5      	movs	r1, #165	@ 0xa5
 800c1b6:	486c      	ldr	r0, [pc, #432]	@ (800c368 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800c1b8:	f01b fc8c 	bl	8027ad4 <__assert_func>
 800c1bc:	68fb      	ldr	r3, [r7, #12]
 800c1be:	62bb      	str	r3, [r7, #40]	@ 0x28
 800c1c0:	68bb      	ldr	r3, [r7, #8]
 800c1c2:	627b      	str	r3, [r7, #36]	@ 0x24
 800c1c4:	683b      	ldr	r3, [r7, #0]
 800c1c6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800c1c8:	f00a f8a8 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800c1cc:	4603      	mov	r3, r0
 800c1ce:	4618      	mov	r0, r3
 800c1d0:	f7ff fa82 	bl	800b6d8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800c1d4:	6a3b      	ldr	r3, [r7, #32]
 800c1d6:	681b      	ldr	r3, [r3, #0]
 800c1d8:	2b00      	cmp	r3, #0
 800c1da:	d008      	beq.n	800c1ee <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800c1dc:	6a3b      	ldr	r3, [r7, #32]
 800c1de:	681a      	ldr	r2, [r3, #0]
 800c1e0:	6a3b      	ldr	r3, [r7, #32]
 800c1e2:	681b      	ldr	r3, [r3, #0]
 800c1e4:	681b      	ldr	r3, [r3, #0]
 800c1e6:	330c      	adds	r3, #12
 800c1e8:	681b      	ldr	r3, [r3, #0]
 800c1ea:	4610      	mov	r0, r2
 800c1ec:	4798      	blx	r3
    if (*currentTrans)
 800c1ee:	6a3b      	ldr	r3, [r7, #32]
 800c1f0:	681b      	ldr	r3, [r3, #0]
 800c1f2:	2b00      	cmp	r3, #0
 800c1f4:	d007      	beq.n	800c206 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800c1f6:	6a3b      	ldr	r3, [r7, #32]
 800c1f8:	681a      	ldr	r2, [r3, #0]
 800c1fa:	6a3b      	ldr	r3, [r7, #32]
 800c1fc:	681b      	ldr	r3, [r3, #0]
 800c1fe:	681b      	ldr	r3, [r3, #0]
 800c200:	681b      	ldr	r3, [r3, #0]
 800c202:	4610      	mov	r0, r2
 800c204:	4798      	blx	r3
    if (*currentScreen)
 800c206:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c208:	681b      	ldr	r3, [r3, #0]
 800c20a:	2b00      	cmp	r3, #0
 800c20c:	d008      	beq.n	800c220 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800c20e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c210:	681a      	ldr	r2, [r3, #0]
 800c212:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c214:	681b      	ldr	r3, [r3, #0]
 800c216:	681b      	ldr	r3, [r3, #0]
 800c218:	3314      	adds	r3, #20
 800c21a:	681b      	ldr	r3, [r3, #0]
 800c21c:	4610      	mov	r0, r2
 800c21e:	4798      	blx	r3
    if (*currentPresenter)
 800c220:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c222:	681b      	ldr	r3, [r3, #0]
 800c224:	2b00      	cmp	r3, #0
 800c226:	d008      	beq.n	800c23a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800c228:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c22a:	681a      	ldr	r2, [r3, #0]
 800c22c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c22e:	681b      	ldr	r3, [r3, #0]
 800c230:	681b      	ldr	r3, [r3, #0]
 800c232:	3304      	adds	r3, #4
 800c234:	681b      	ldr	r3, [r3, #0]
 800c236:	4610      	mov	r0, r2
 800c238:	4798      	blx	r3
    if (*currentScreen)
 800c23a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c23c:	681b      	ldr	r3, [r3, #0]
 800c23e:	2b00      	cmp	r3, #0
 800c240:	d007      	beq.n	800c252 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800c242:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c244:	681a      	ldr	r2, [r3, #0]
 800c246:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800c248:	681b      	ldr	r3, [r3, #0]
 800c24a:	681b      	ldr	r3, [r3, #0]
 800c24c:	681b      	ldr	r3, [r3, #0]
 800c24e:	4610      	mov	r0, r2
 800c250:	4798      	blx	r3
    if (*currentPresenter)
 800c252:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c254:	681b      	ldr	r3, [r3, #0]
 800c256:	2b00      	cmp	r3, #0
 800c258:	d008      	beq.n	800c26c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800c25a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c25c:	681a      	ldr	r2, [r3, #0]
 800c25e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800c260:	681b      	ldr	r3, [r3, #0]
 800c262:	681b      	ldr	r3, [r3, #0]
 800c264:	3308      	adds	r3, #8
 800c266:	681b      	ldr	r3, [r3, #0]
 800c268:	4610      	mov	r0, r2
 800c26a:	4798      	blx	r3
}
 800c26c:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800c26e:	687b      	ldr	r3, [r7, #4]
 800c270:	68db      	ldr	r3, [r3, #12]
 800c272:	2100      	movs	r1, #0
 800c274:	4618      	mov	r0, r3
 800c276:	f000 f8c4 	bl	800c402 <_ZN8touchgfx17AbstractPartition2atINS_15BlockTransitionEEERT_t>
 800c27a:	4603      	mov	r3, r0
 800c27c:	4619      	mov	r1, r3
 800c27e:	2014      	movs	r0, #20
 800c280:	f7ff f974 	bl	800b56c <_ZnwjPv>
 800c284:	4604      	mov	r4, r0
 800c286:	4620      	mov	r0, r4
 800c288:	f7ff fbe0 	bl	800ba4c <_ZN8touchgfx15BlockTransitionC1Ev>
 800c28c:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800c28e:	687b      	ldr	r3, [r7, #4]
 800c290:	689b      	ldr	r3, [r3, #8]
 800c292:	2100      	movs	r1, #0
 800c294:	4618      	mov	r0, r3
 800c296:	f000 f8c7 	bl	800c428 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>
 800c29a:	4603      	mov	r3, r0
 800c29c:	4619      	mov	r1, r3
 800c29e:	f44f 7021 	mov.w	r0, #644	@ 0x284
 800c2a2:	f7ff f963 	bl	800b56c <_ZnwjPv>
 800c2a6:	4604      	mov	r4, r0
 800c2a8:	4620      	mov	r0, r4
 800c2aa:	f003 fbc5 	bl	800fa38 <_ZN11Screen1ViewC1Ev>
 800c2ae:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800c2b0:	687b      	ldr	r3, [r7, #4]
 800c2b2:	685b      	ldr	r3, [r3, #4]
 800c2b4:	2100      	movs	r1, #0
 800c2b6:	4618      	mov	r0, r3
 800c2b8:	f000 f8c9 	bl	800c44e <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>
 800c2bc:	4603      	mov	r3, r0
 800c2be:	4619      	mov	r1, r3
 800c2c0:	2010      	movs	r0, #16
 800c2c2:	f7ff f953 	bl	800b56c <_ZnwjPv>
 800c2c6:	4604      	mov	r4, r0
 800c2c8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800c2ca:	4620      	mov	r0, r4
 800c2cc:	f003 fb5c 	bl	800f988 <_ZN16Screen1PresenterC1ER11Screen1View>
 800c2d0:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800c2d2:	683b      	ldr	r3, [r7, #0]
 800c2d4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800c2d6:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800c2d8:	68bb      	ldr	r3, [r7, #8]
 800c2da:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800c2dc:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800c2de:	68fb      	ldr	r3, [r7, #12]
 800c2e0:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800c2e2:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800c2e4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c2e6:	2b00      	cmp	r3, #0
 800c2e8:	d002      	beq.n	800c2f0 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800c2ea:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c2ec:	3304      	adds	r3, #4
 800c2ee:	e000      	b.n	800c2f2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15BlockTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800c2f0:	2300      	movs	r3, #0
 800c2f2:	4619      	mov	r1, r3
 800c2f4:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800c2f6:	f7ff fb35 	bl	800b964 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800c2fa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c2fc:	3304      	adds	r3, #4
 800c2fe:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800c300:	4618      	mov	r0, r3
 800c302:	f7ff fca5 	bl	800bc50 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800c306:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c308:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800c30a:	4618      	mov	r0, r3
 800c30c:	f000 f8b2 	bl	800c474 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>
 800c310:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800c312:	61fb      	str	r3, [r7, #28]
 800c314:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800c316:	61bb      	str	r3, [r7, #24]
 800c318:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800c31a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800c31c:	69fb      	ldr	r3, [r7, #28]
 800c31e:	681b      	ldr	r3, [r3, #0]
 800c320:	330c      	adds	r3, #12
 800c322:	681b      	ldr	r3, [r3, #0]
 800c324:	69f8      	ldr	r0, [r7, #28]
 800c326:	4798      	blx	r3
    newPresenter->activate();
 800c328:	69bb      	ldr	r3, [r7, #24]
 800c32a:	681b      	ldr	r3, [r3, #0]
 800c32c:	681b      	ldr	r3, [r3, #0]
 800c32e:	69b8      	ldr	r0, [r7, #24]
 800c330:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800c332:	6979      	ldr	r1, [r7, #20]
 800c334:	69f8      	ldr	r0, [r7, #28]
 800c336:	f00b fdb3 	bl	8017ea0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800c33a:	697b      	ldr	r3, [r7, #20]
 800c33c:	681b      	ldr	r3, [r3, #0]
 800c33e:	3310      	adds	r3, #16
 800c340:	681b      	ldr	r3, [r3, #0]
 800c342:	6978      	ldr	r0, [r7, #20]
 800c344:	4798      	blx	r3
    newTransition->invalidate();
 800c346:	697b      	ldr	r3, [r7, #20]
 800c348:	681b      	ldr	r3, [r3, #0]
 800c34a:	3314      	adds	r3, #20
 800c34c:	681b      	ldr	r3, [r3, #0]
 800c34e:	6978      	ldr	r0, [r7, #20]
 800c350:	4798      	blx	r3
}
 800c352:	bf00      	nop
    return newPresenter;
 800c354:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800c356:	4618      	mov	r0, r3
 800c358:	373c      	adds	r7, #60	@ 0x3c
 800c35a:	46bd      	mov	sp, r7
 800c35c:	bd90      	pop	{r4, r7, pc}
 800c35e:	bf00      	nop
 800c360:	08028bec 	.word	0x08028bec
 800c364:	08028edc 	.word	0x08028edc
 800c368:	08028d50 	.word	0x08028d50
 800c36c:	08028d94 	.word	0x08028d94
 800c370:	08028e38 	.word	0x08028e38

0800c374 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800c374:	b580      	push	{r7, lr}
 800c376:	b082      	sub	sp, #8
 800c378:	af00      	add	r7, sp, #0
 800c37a:	6078      	str	r0, [r7, #4]
 800c37c:	460b      	mov	r3, r1
 800c37e:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800c380:	687b      	ldr	r3, [r7, #4]
 800c382:	681b      	ldr	r3, [r3, #0]
 800c384:	3324      	adds	r3, #36	@ 0x24
 800c386:	681b      	ldr	r3, [r3, #0]
 800c388:	887a      	ldrh	r2, [r7, #2]
 800c38a:	4611      	mov	r1, r2
 800c38c:	6878      	ldr	r0, [r7, #4]
 800c38e:	4798      	blx	r3
 800c390:	4603      	mov	r3, r0
    }
 800c392:	4618      	mov	r0, r3
 800c394:	3708      	adds	r7, #8
 800c396:	46bd      	mov	sp, r7
 800c398:	bd80      	pop	{r7, pc}

0800c39a <_ZN8touchgfx17AbstractPartition2atI11InitialViewEERT_t>:
    T& at(const uint16_t index)
 800c39a:	b580      	push	{r7, lr}
 800c39c:	b082      	sub	sp, #8
 800c39e:	af00      	add	r7, sp, #0
 800c3a0:	6078      	str	r0, [r7, #4]
 800c3a2:	460b      	mov	r3, r1
 800c3a4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c3a6:	687b      	ldr	r3, [r7, #4]
 800c3a8:	681b      	ldr	r3, [r3, #0]
 800c3aa:	3324      	adds	r3, #36	@ 0x24
 800c3ac:	681b      	ldr	r3, [r3, #0]
 800c3ae:	887a      	ldrh	r2, [r7, #2]
 800c3b0:	4611      	mov	r1, r2
 800c3b2:	6878      	ldr	r0, [r7, #4]
 800c3b4:	4798      	blx	r3
 800c3b6:	4603      	mov	r3, r0
    }
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	3708      	adds	r7, #8
 800c3bc:	46bd      	mov	sp, r7
 800c3be:	bd80      	pop	{r7, pc}

0800c3c0 <_ZN8touchgfx17AbstractPartition2atI16InitialPresenterEERT_t>:
    T& at(const uint16_t index)
 800c3c0:	b580      	push	{r7, lr}
 800c3c2:	b082      	sub	sp, #8
 800c3c4:	af00      	add	r7, sp, #0
 800c3c6:	6078      	str	r0, [r7, #4]
 800c3c8:	460b      	mov	r3, r1
 800c3ca:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c3cc:	687b      	ldr	r3, [r7, #4]
 800c3ce:	681b      	ldr	r3, [r3, #0]
 800c3d0:	3324      	adds	r3, #36	@ 0x24
 800c3d2:	681b      	ldr	r3, [r3, #0]
 800c3d4:	887a      	ldrh	r2, [r7, #2]
 800c3d6:	4611      	mov	r1, r2
 800c3d8:	6878      	ldr	r0, [r7, #4]
 800c3da:	4798      	blx	r3
 800c3dc:	4603      	mov	r3, r0
    }
 800c3de:	4618      	mov	r0, r3
 800c3e0:	3708      	adds	r7, #8
 800c3e2:	46bd      	mov	sp, r7
 800c3e4:	bd80      	pop	{r7, pc}

0800c3e6 <_ZN8touchgfx4ViewI16InitialPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800c3e6:	b480      	push	{r7}
 800c3e8:	b083      	sub	sp, #12
 800c3ea:	af00      	add	r7, sp, #0
 800c3ec:	6078      	str	r0, [r7, #4]
 800c3ee:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800c3f0:	687b      	ldr	r3, [r7, #4]
 800c3f2:	683a      	ldr	r2, [r7, #0]
 800c3f4:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800c3f6:	bf00      	nop
 800c3f8:	370c      	adds	r7, #12
 800c3fa:	46bd      	mov	sp, r7
 800c3fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c400:	4770      	bx	lr

0800c402 <_ZN8touchgfx17AbstractPartition2atINS_15BlockTransitionEEERT_t>:
    T& at(const uint16_t index)
 800c402:	b580      	push	{r7, lr}
 800c404:	b082      	sub	sp, #8
 800c406:	af00      	add	r7, sp, #0
 800c408:	6078      	str	r0, [r7, #4]
 800c40a:	460b      	mov	r3, r1
 800c40c:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c40e:	687b      	ldr	r3, [r7, #4]
 800c410:	681b      	ldr	r3, [r3, #0]
 800c412:	3324      	adds	r3, #36	@ 0x24
 800c414:	681b      	ldr	r3, [r3, #0]
 800c416:	887a      	ldrh	r2, [r7, #2]
 800c418:	4611      	mov	r1, r2
 800c41a:	6878      	ldr	r0, [r7, #4]
 800c41c:	4798      	blx	r3
 800c41e:	4603      	mov	r3, r0
    }
 800c420:	4618      	mov	r0, r3
 800c422:	3708      	adds	r7, #8
 800c424:	46bd      	mov	sp, r7
 800c426:	bd80      	pop	{r7, pc}

0800c428 <_ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t>:
    T& at(const uint16_t index)
 800c428:	b580      	push	{r7, lr}
 800c42a:	b082      	sub	sp, #8
 800c42c:	af00      	add	r7, sp, #0
 800c42e:	6078      	str	r0, [r7, #4]
 800c430:	460b      	mov	r3, r1
 800c432:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c434:	687b      	ldr	r3, [r7, #4]
 800c436:	681b      	ldr	r3, [r3, #0]
 800c438:	3324      	adds	r3, #36	@ 0x24
 800c43a:	681b      	ldr	r3, [r3, #0]
 800c43c:	887a      	ldrh	r2, [r7, #2]
 800c43e:	4611      	mov	r1, r2
 800c440:	6878      	ldr	r0, [r7, #4]
 800c442:	4798      	blx	r3
 800c444:	4603      	mov	r3, r0
    }
 800c446:	4618      	mov	r0, r3
 800c448:	3708      	adds	r7, #8
 800c44a:	46bd      	mov	sp, r7
 800c44c:	bd80      	pop	{r7, pc}

0800c44e <_ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t>:
    T& at(const uint16_t index)
 800c44e:	b580      	push	{r7, lr}
 800c450:	b082      	sub	sp, #8
 800c452:	af00      	add	r7, sp, #0
 800c454:	6078      	str	r0, [r7, #4]
 800c456:	460b      	mov	r3, r1
 800c458:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800c45a:	687b      	ldr	r3, [r7, #4]
 800c45c:	681b      	ldr	r3, [r3, #0]
 800c45e:	3324      	adds	r3, #36	@ 0x24
 800c460:	681b      	ldr	r3, [r3, #0]
 800c462:	887a      	ldrh	r2, [r7, #2]
 800c464:	4611      	mov	r1, r2
 800c466:	6878      	ldr	r0, [r7, #4]
 800c468:	4798      	blx	r3
 800c46a:	4603      	mov	r3, r0
    }
 800c46c:	4618      	mov	r0, r3
 800c46e:	3708      	adds	r7, #8
 800c470:	46bd      	mov	sp, r7
 800c472:	bd80      	pop	{r7, pc}

0800c474 <_ZN8touchgfx4ViewI16Screen1PresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800c474:	b480      	push	{r7}
 800c476:	b083      	sub	sp, #12
 800c478:	af00      	add	r7, sp, #0
 800c47a:	6078      	str	r0, [r7, #4]
 800c47c:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800c47e:	687b      	ldr	r3, [r7, #4]
 800c480:	683a      	ldr	r2, [r7, #0]
 800c482:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800c484:	bf00      	nop
 800c486:	370c      	adds	r7, #12
 800c488:	46bd      	mov	sp, r7
 800c48a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c48e:	4770      	bx	lr

0800c490 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 800c490:	b580      	push	{r7, lr}
 800c492:	b082      	sub	sp, #8
 800c494:	af00      	add	r7, sp, #0
 800c496:	6078      	str	r0, [r7, #4]
 800c498:	4a05      	ldr	r2, [pc, #20]	@ (800c4b0 <_ZN8touchgfx15BlockTransitionD1Ev+0x20>)
 800c49a:	687b      	ldr	r3, [r7, #4]
 800c49c:	601a      	str	r2, [r3, #0]
 800c49e:	687b      	ldr	r3, [r7, #4]
 800c4a0:	4618      	mov	r0, r3
 800c4a2:	f7ff f985 	bl	800b7b0 <_ZN8touchgfx10TransitionD1Ev>
 800c4a6:	687b      	ldr	r3, [r7, #4]
 800c4a8:	4618      	mov	r0, r3
 800c4aa:	3708      	adds	r7, #8
 800c4ac:	46bd      	mov	sp, r7
 800c4ae:	bd80      	pop	{r7, pc}
 800c4b0:	080296f4 	.word	0x080296f4

0800c4b4 <_ZN8touchgfx15BlockTransitionD0Ev>:
 800c4b4:	b580      	push	{r7, lr}
 800c4b6:	b082      	sub	sp, #8
 800c4b8:	af00      	add	r7, sp, #0
 800c4ba:	6078      	str	r0, [r7, #4]
 800c4bc:	6878      	ldr	r0, [r7, #4]
 800c4be:	f7ff ffe7 	bl	800c490 <_ZN8touchgfx15BlockTransitionD1Ev>
 800c4c2:	2114      	movs	r1, #20
 800c4c4:	6878      	ldr	r0, [r7, #4]
 800c4c6:	f01b fad6 	bl	8027a76 <_ZdlPvj>
 800c4ca:	687b      	ldr	r3, [r7, #4]
 800c4cc:	4618      	mov	r0, r3
 800c4ce:	3708      	adds	r7, #8
 800c4d0:	46bd      	mov	sp, r7
 800c4d2:	bd80      	pop	{r7, pc}

0800c4d4 <_ZN8touchgfx12NoTransitionD1Ev>:
 800c4d4:	b580      	push	{r7, lr}
 800c4d6:	b082      	sub	sp, #8
 800c4d8:	af00      	add	r7, sp, #0
 800c4da:	6078      	str	r0, [r7, #4]
 800c4dc:	4a05      	ldr	r2, [pc, #20]	@ (800c4f4 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	601a      	str	r2, [r3, #0]
 800c4e2:	687b      	ldr	r3, [r7, #4]
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	f7ff f963 	bl	800b7b0 <_ZN8touchgfx10TransitionD1Ev>
 800c4ea:	687b      	ldr	r3, [r7, #4]
 800c4ec:	4618      	mov	r0, r3
 800c4ee:	3708      	adds	r7, #8
 800c4f0:	46bd      	mov	sp, r7
 800c4f2:	bd80      	pop	{r7, pc}
 800c4f4:	08029718 	.word	0x08029718

0800c4f8 <_ZN8touchgfx12NoTransitionD0Ev>:
 800c4f8:	b580      	push	{r7, lr}
 800c4fa:	b082      	sub	sp, #8
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	6078      	str	r0, [r7, #4]
 800c500:	6878      	ldr	r0, [r7, #4]
 800c502:	f7ff ffe7 	bl	800c4d4 <_ZN8touchgfx12NoTransitionD1Ev>
 800c506:	210c      	movs	r1, #12
 800c508:	6878      	ldr	r0, [r7, #4]
 800c50a:	f01b fab4 	bl	8027a76 <_ZdlPvj>
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	4618      	mov	r0, r3
 800c512:	3708      	adds	r7, #8
 800c514:	46bd      	mov	sp, r7
 800c516:	bd80      	pop	{r7, pc}

0800c518 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800c518:	b580      	push	{r7, lr}
 800c51a:	b082      	sub	sp, #8
 800c51c:	af00      	add	r7, sp, #0
 800c51e:	6078      	str	r0, [r7, #4]
 800c520:	4a05      	ldr	r2, [pc, #20]	@ (800c538 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	601a      	str	r2, [r3, #0]
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	4618      	mov	r0, r3
 800c52a:	f7ff f8e3 	bl	800b6f4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800c52e:	687b      	ldr	r3, [r7, #4]
 800c530:	4618      	mov	r0, r3
 800c532:	3708      	adds	r7, #8
 800c534:	46bd      	mov	sp, r7
 800c536:	bd80      	pop	{r7, pc}
 800c538:	08029790 	.word	0x08029790

0800c53c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800c53c:	b580      	push	{r7, lr}
 800c53e:	b082      	sub	sp, #8
 800c540:	af00      	add	r7, sp, #0
 800c542:	6078      	str	r0, [r7, #4]
 800c544:	6878      	ldr	r0, [r7, #4]
 800c546:	f7ff ffe7 	bl	800c518 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800c54a:	2110      	movs	r1, #16
 800c54c:	6878      	ldr	r0, [r7, #4]
 800c54e:	f01b fa92 	bl	8027a76 <_ZdlPvj>
 800c552:	687b      	ldr	r3, [r7, #4]
 800c554:	4618      	mov	r0, r3
 800c556:	3708      	adds	r7, #8
 800c558:	46bd      	mov	sp, r7
 800c55a:	bd80      	pop	{r7, pc}

0800c55c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800c55c:	b580      	push	{r7, lr}
 800c55e:	b082      	sub	sp, #8
 800c560:	af00      	add	r7, sp, #0
 800c562:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800c564:	687b      	ldr	r3, [r7, #4]
 800c566:	685b      	ldr	r3, [r3, #4]
 800c568:	687a      	ldr	r2, [r7, #4]
 800c56a:	68d2      	ldr	r2, [r2, #12]
 800c56c:	1052      	asrs	r2, r2, #1
 800c56e:	1899      	adds	r1, r3, r2
 800c570:	687b      	ldr	r3, [r7, #4]
 800c572:	68db      	ldr	r3, [r3, #12]
 800c574:	f003 0301 	and.w	r3, r3, #1
 800c578:	2b00      	cmp	r3, #0
 800c57a:	d102      	bne.n	800c582 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800c57c:	687b      	ldr	r3, [r7, #4]
 800c57e:	689b      	ldr	r3, [r3, #8]
 800c580:	e00a      	b.n	800c598 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800c582:	687b      	ldr	r3, [r7, #4]
 800c584:	685b      	ldr	r3, [r3, #4]
 800c586:	687a      	ldr	r2, [r7, #4]
 800c588:	68d2      	ldr	r2, [r2, #12]
 800c58a:	1052      	asrs	r2, r2, #1
 800c58c:	4413      	add	r3, r2
 800c58e:	681b      	ldr	r3, [r3, #0]
 800c590:	687a      	ldr	r2, [r7, #4]
 800c592:	6892      	ldr	r2, [r2, #8]
 800c594:	4413      	add	r3, r2
 800c596:	681b      	ldr	r3, [r3, #0]
 800c598:	4608      	mov	r0, r1
 800c59a:	4798      	blx	r3
    }
 800c59c:	bf00      	nop
 800c59e:	3708      	adds	r7, #8
 800c5a0:	46bd      	mov	sp, r7
 800c5a2:	bd80      	pop	{r7, pc}

0800c5a4 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800c5a4:	b480      	push	{r7}
 800c5a6:	b083      	sub	sp, #12
 800c5a8:	af00      	add	r7, sp, #0
 800c5aa:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800c5ac:	687b      	ldr	r3, [r7, #4]
 800c5ae:	685b      	ldr	r3, [r3, #4]
 800c5b0:	2b00      	cmp	r3, #0
 800c5b2:	d010      	beq.n	800c5d6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c5b4:	687b      	ldr	r3, [r7, #4]
 800c5b6:	689b      	ldr	r3, [r3, #8]
 800c5b8:	2b00      	cmp	r3, #0
 800c5ba:	d107      	bne.n	800c5cc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c5bc:	687b      	ldr	r3, [r7, #4]
 800c5be:	68db      	ldr	r3, [r3, #12]
 800c5c0:	f003 0301 	and.w	r3, r3, #1
 800c5c4:	2b00      	cmp	r3, #0
 800c5c6:	d101      	bne.n	800c5cc <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800c5c8:	2301      	movs	r3, #1
 800c5ca:	e000      	b.n	800c5ce <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800c5cc:	2300      	movs	r3, #0
 800c5ce:	2b01      	cmp	r3, #1
 800c5d0:	d001      	beq.n	800c5d6 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800c5d2:	2301      	movs	r3, #1
 800c5d4:	e000      	b.n	800c5d8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800c5d6:	2300      	movs	r3, #0
    }
 800c5d8:	4618      	mov	r0, r3
 800c5da:	370c      	adds	r7, #12
 800c5dc:	46bd      	mov	sp, r7
 800c5de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5e2:	4770      	bx	lr

0800c5e4 <_ZN8touchgfx9colortypeC1Ev>:
    colortype()
 800c5e4:	b480      	push	{r7}
 800c5e6:	b083      	sub	sp, #12
 800c5e8:	af00      	add	r7, sp, #0
 800c5ea:	6078      	str	r0, [r7, #4]
        : color(0)
 800c5ec:	687b      	ldr	r3, [r7, #4]
 800c5ee:	2200      	movs	r2, #0
 800c5f0:	601a      	str	r2, [r3, #0]
    }
 800c5f2:	687b      	ldr	r3, [r7, #4]
 800c5f4:	4618      	mov	r0, r3
 800c5f6:	370c      	adds	r7, #12
 800c5f8:	46bd      	mov	sp, r7
 800c5fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c5fe:	4770      	bx	lr

0800c600 <_ZN8touchgfx9colortypeC1Em>:
    colortype(uint32_t col)
 800c600:	b480      	push	{r7}
 800c602:	b083      	sub	sp, #12
 800c604:	af00      	add	r7, sp, #0
 800c606:	6078      	str	r0, [r7, #4]
 800c608:	6039      	str	r1, [r7, #0]
        : color(col)
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	683a      	ldr	r2, [r7, #0]
 800c60e:	601a      	str	r2, [r3, #0]
    }
 800c610:	687b      	ldr	r3, [r7, #4]
 800c612:	4618      	mov	r0, r3
 800c614:	370c      	adds	r7, #12
 800c616:	46bd      	mov	sp, r7
 800c618:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c61c:	4770      	bx	lr

0800c61e <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800c61e:	b480      	push	{r7}
 800c620:	b083      	sub	sp, #12
 800c622:	af00      	add	r7, sp, #0
 800c624:	6078      	str	r0, [r7, #4]
        return color;
 800c626:	687b      	ldr	r3, [r7, #4]
 800c628:	681b      	ldr	r3, [r3, #0]
    }
 800c62a:	4618      	mov	r0, r3
 800c62c:	370c      	adds	r7, #12
 800c62e:	46bd      	mov	sp, r7
 800c630:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c634:	4770      	bx	lr

0800c636 <_ZN8touchgfx4RectC1Ev>:
    Rect()
 800c636:	b480      	push	{r7}
 800c638:	b083      	sub	sp, #12
 800c63a:	af00      	add	r7, sp, #0
 800c63c:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800c63e:	687b      	ldr	r3, [r7, #4]
 800c640:	2200      	movs	r2, #0
 800c642:	801a      	strh	r2, [r3, #0]
 800c644:	687b      	ldr	r3, [r7, #4]
 800c646:	2200      	movs	r2, #0
 800c648:	805a      	strh	r2, [r3, #2]
 800c64a:	687b      	ldr	r3, [r7, #4]
 800c64c:	2200      	movs	r2, #0
 800c64e:	809a      	strh	r2, [r3, #4]
 800c650:	687b      	ldr	r3, [r7, #4]
 800c652:	2200      	movs	r2, #0
 800c654:	80da      	strh	r2, [r3, #6]
    }
 800c656:	687b      	ldr	r3, [r7, #4]
 800c658:	4618      	mov	r0, r3
 800c65a:	370c      	adds	r7, #12
 800c65c:	46bd      	mov	sp, r7
 800c65e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c662:	4770      	bx	lr

0800c664 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800c664:	b480      	push	{r7}
 800c666:	b083      	sub	sp, #12
 800c668:	af00      	add	r7, sp, #0
 800c66a:	6078      	str	r0, [r7, #4]
 800c66c:	460b      	mov	r3, r1
 800c66e:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800c670:	687b      	ldr	r3, [r7, #4]
 800c672:	887a      	ldrh	r2, [r7, #2]
 800c674:	801a      	strh	r2, [r3, #0]
    {
    }
 800c676:	687b      	ldr	r3, [r7, #4]
 800c678:	4618      	mov	r0, r3
 800c67a:	370c      	adds	r7, #12
 800c67c:	46bd      	mov	sp, r7
 800c67e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c682:	4770      	bx	lr

0800c684 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800c684:	b580      	push	{r7, lr}
 800c686:	b082      	sub	sp, #8
 800c688:	af00      	add	r7, sp, #0
 800c68a:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800c68c:	4a14      	ldr	r2, [pc, #80]	@ (800c6e0 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800c68e:	687b      	ldr	r3, [r7, #4]
 800c690:	601a      	str	r2, [r3, #0]
        : rect(),
 800c692:	687b      	ldr	r3, [r7, #4]
 800c694:	3304      	adds	r3, #4
 800c696:	4618      	mov	r0, r3
 800c698:	f7ff ffcd 	bl	800c636 <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800c69c:	687b      	ldr	r3, [r7, #4]
 800c69e:	330c      	adds	r3, #12
 800c6a0:	4618      	mov	r0, r3
 800c6a2:	f7ff ffc8 	bl	800c636 <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800c6a6:	687b      	ldr	r3, [r7, #4]
 800c6a8:	2200      	movs	r2, #0
 800c6aa:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800c6ac:	687b      	ldr	r3, [r7, #4]
 800c6ae:	2200      	movs	r2, #0
 800c6b0:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800c6b2:	687b      	ldr	r3, [r7, #4]
 800c6b4:	2200      	movs	r2, #0
 800c6b6:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800c6b8:	687b      	ldr	r3, [r7, #4]
 800c6ba:	2200      	movs	r2, #0
 800c6bc:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800c6be:	687b      	ldr	r3, [r7, #4]
 800c6c0:	2200      	movs	r2, #0
 800c6c2:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 800c6c4:	687b      	ldr	r3, [r7, #4]
 800c6c6:	2200      	movs	r2, #0
 800c6c8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	2201      	movs	r2, #1
 800c6d0:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 800c6d4:	687b      	ldr	r3, [r7, #4]
 800c6d6:	4618      	mov	r0, r3
 800c6d8:	3708      	adds	r7, #8
 800c6da:	46bd      	mov	sp, r7
 800c6dc:	bd80      	pop	{r7, pc}
 800c6de:	bf00      	nop
 800c6e0:	0802acf0 	.word	0x0802acf0

0800c6e4 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800c6e4:	b480      	push	{r7}
 800c6e6:	b083      	sub	sp, #12
 800c6e8:	af00      	add	r7, sp, #0
 800c6ea:	6078      	str	r0, [r7, #4]
    {
 800c6ec:	4a04      	ldr	r2, [pc, #16]	@ (800c700 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800c6ee:	687b      	ldr	r3, [r7, #4]
 800c6f0:	601a      	str	r2, [r3, #0]
    }
 800c6f2:	687b      	ldr	r3, [r7, #4]
 800c6f4:	4618      	mov	r0, r3
 800c6f6:	370c      	adds	r7, #12
 800c6f8:	46bd      	mov	sp, r7
 800c6fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6fe:	4770      	bx	lr
 800c700:	0802acf0 	.word	0x0802acf0

0800c704 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800c704:	b580      	push	{r7, lr}
 800c706:	b082      	sub	sp, #8
 800c708:	af00      	add	r7, sp, #0
 800c70a:	6078      	str	r0, [r7, #4]
    }
 800c70c:	6878      	ldr	r0, [r7, #4]
 800c70e:	f7ff ffe9 	bl	800c6e4 <_ZN8touchgfx8DrawableD1Ev>
 800c712:	2128      	movs	r1, #40	@ 0x28
 800c714:	6878      	ldr	r0, [r7, #4]
 800c716:	f01b f9ae 	bl	8027a76 <_ZdlPvj>
 800c71a:	687b      	ldr	r3, [r7, #4]
 800c71c:	4618      	mov	r0, r3
 800c71e:	3708      	adds	r7, #8
 800c720:	46bd      	mov	sp, r7
 800c722:	bd80      	pop	{r7, pc}

0800c724 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800c724:	b580      	push	{r7, lr}
 800c726:	b082      	sub	sp, #8
 800c728:	af00      	add	r7, sp, #0
 800c72a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800c72c:	687b      	ldr	r3, [r7, #4]
 800c72e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800c732:	2b00      	cmp	r3, #0
 800c734:	d005      	beq.n	800c742 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800c736:	687b      	ldr	r3, [r7, #4]
 800c738:	681b      	ldr	r3, [r3, #0]
 800c73a:	3314      	adds	r3, #20
 800c73c:	681b      	ldr	r3, [r3, #0]
 800c73e:	6878      	ldr	r0, [r7, #4]
 800c740:	4798      	blx	r3
        }
    }
 800c742:	bf00      	nop
 800c744:	3708      	adds	r7, #8
 800c746:	46bd      	mov	sp, r7
 800c748:	bd80      	pop	{r7, pc}

0800c74a <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800c74a:	b480      	push	{r7}
 800c74c:	b083      	sub	sp, #12
 800c74e:	af00      	add	r7, sp, #0
 800c750:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c752:	2300      	movs	r3, #0
    }
 800c754:	4618      	mov	r0, r3
 800c756:	370c      	adds	r7, #12
 800c758:	46bd      	mov	sp, r7
 800c75a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c75e:	4770      	bx	lr

0800c760 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800c760:	b580      	push	{r7, lr}
 800c762:	b084      	sub	sp, #16
 800c764:	af00      	add	r7, sp, #0
 800c766:	60f8      	str	r0, [r7, #12]
 800c768:	4608      	mov	r0, r1
 800c76a:	4611      	mov	r1, r2
 800c76c:	461a      	mov	r2, r3
 800c76e:	4603      	mov	r3, r0
 800c770:	817b      	strh	r3, [r7, #10]
 800c772:	460b      	mov	r3, r1
 800c774:	813b      	strh	r3, [r7, #8]
 800c776:	4613      	mov	r3, r2
 800c778:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800c77a:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800c77e:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800c782:	4619      	mov	r1, r3
 800c784:	68f8      	ldr	r0, [r7, #12]
 800c786:	f000 f82a 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800c78a:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800c78e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800c792:	4619      	mov	r1, r3
 800c794:	68f8      	ldr	r0, [r7, #12]
 800c796:	f000 f87e 	bl	800c896 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800c79a:	bf00      	nop
 800c79c:	3710      	adds	r7, #16
 800c79e:	46bd      	mov	sp, r7
 800c7a0:	bd80      	pop	{r7, pc}

0800c7a2 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800c7a2:	b480      	push	{r7}
 800c7a4:	b083      	sub	sp, #12
 800c7a6:	af00      	add	r7, sp, #0
 800c7a8:	6078      	str	r0, [r7, #4]
 800c7aa:	460b      	mov	r3, r1
 800c7ac:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800c7ae:	687b      	ldr	r3, [r7, #4]
 800c7b0:	887a      	ldrh	r2, [r7, #2]
 800c7b2:	809a      	strh	r2, [r3, #4]
    }
 800c7b4:	bf00      	nop
 800c7b6:	370c      	adds	r7, #12
 800c7b8:	46bd      	mov	sp, r7
 800c7ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7be:	4770      	bx	lr

0800c7c0 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800c7c0:	b480      	push	{r7}
 800c7c2:	b083      	sub	sp, #12
 800c7c4:	af00      	add	r7, sp, #0
 800c7c6:	6078      	str	r0, [r7, #4]
 800c7c8:	460b      	mov	r3, r1
 800c7ca:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800c7cc:	687b      	ldr	r3, [r7, #4]
 800c7ce:	887a      	ldrh	r2, [r7, #2]
 800c7d0:	80da      	strh	r2, [r3, #6]
    }
 800c7d2:	bf00      	nop
 800c7d4:	370c      	adds	r7, #12
 800c7d6:	46bd      	mov	sp, r7
 800c7d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c7dc:	4770      	bx	lr

0800c7de <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800c7de:	b580      	push	{r7, lr}
 800c7e0:	b082      	sub	sp, #8
 800c7e2:	af00      	add	r7, sp, #0
 800c7e4:	6078      	str	r0, [r7, #4]
 800c7e6:	460b      	mov	r3, r1
 800c7e8:	807b      	strh	r3, [r7, #2]
 800c7ea:	4613      	mov	r3, r2
 800c7ec:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800c7ee:	687b      	ldr	r3, [r7, #4]
 800c7f0:	681b      	ldr	r3, [r3, #0]
 800c7f2:	3330      	adds	r3, #48	@ 0x30
 800c7f4:	681b      	ldr	r3, [r3, #0]
 800c7f6:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c7fa:	4611      	mov	r1, r2
 800c7fc:	6878      	ldr	r0, [r7, #4]
 800c7fe:	4798      	blx	r3
        setY(y);
 800c800:	687b      	ldr	r3, [r7, #4]
 800c802:	681b      	ldr	r3, [r3, #0]
 800c804:	3334      	adds	r3, #52	@ 0x34
 800c806:	681b      	ldr	r3, [r3, #0]
 800c808:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c80c:	4611      	mov	r1, r2
 800c80e:	6878      	ldr	r0, [r7, #4]
 800c810:	4798      	blx	r3
    }
 800c812:	bf00      	nop
 800c814:	3708      	adds	r7, #8
 800c816:	46bd      	mov	sp, r7
 800c818:	bd80      	pop	{r7, pc}

0800c81a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800c81a:	b480      	push	{r7}
 800c81c:	b083      	sub	sp, #12
 800c81e:	af00      	add	r7, sp, #0
 800c820:	6078      	str	r0, [r7, #4]
 800c822:	460b      	mov	r3, r1
 800c824:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800c826:	687b      	ldr	r3, [r7, #4]
 800c828:	887a      	ldrh	r2, [r7, #2]
 800c82a:	811a      	strh	r2, [r3, #8]
    }
 800c82c:	bf00      	nop
 800c82e:	370c      	adds	r7, #12
 800c830:	46bd      	mov	sp, r7
 800c832:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c836:	4770      	bx	lr

0800c838 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800c838:	b480      	push	{r7}
 800c83a:	b083      	sub	sp, #12
 800c83c:	af00      	add	r7, sp, #0
 800c83e:	6078      	str	r0, [r7, #4]
 800c840:	460b      	mov	r3, r1
 800c842:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800c844:	687b      	ldr	r3, [r7, #4]
 800c846:	887a      	ldrh	r2, [r7, #2]
 800c848:	815a      	strh	r2, [r3, #10]
    }
 800c84a:	bf00      	nop
 800c84c:	370c      	adds	r7, #12
 800c84e:	46bd      	mov	sp, r7
 800c850:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c854:	4770      	bx	lr

0800c856 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800c856:	b480      	push	{r7}
 800c858:	b083      	sub	sp, #12
 800c85a:	af00      	add	r7, sp, #0
 800c85c:	6078      	str	r0, [r7, #4]
    {
    }
 800c85e:	bf00      	nop
 800c860:	370c      	adds	r7, #12
 800c862:	46bd      	mov	sp, r7
 800c864:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c868:	4770      	bx	lr

0800c86a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c86a:	b480      	push	{r7}
 800c86c:	b083      	sub	sp, #12
 800c86e:	af00      	add	r7, sp, #0
 800c870:	6078      	str	r0, [r7, #4]
 800c872:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c874:	bf00      	nop
 800c876:	370c      	adds	r7, #12
 800c878:	46bd      	mov	sp, r7
 800c87a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c87e:	4770      	bx	lr

0800c880 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c880:	b480      	push	{r7}
 800c882:	b083      	sub	sp, #12
 800c884:	af00      	add	r7, sp, #0
 800c886:	6078      	str	r0, [r7, #4]
 800c888:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c88a:	bf00      	nop
 800c88c:	370c      	adds	r7, #12
 800c88e:	46bd      	mov	sp, r7
 800c890:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c894:	4770      	bx	lr

0800c896 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800c896:	b580      	push	{r7, lr}
 800c898:	b082      	sub	sp, #8
 800c89a:	af00      	add	r7, sp, #0
 800c89c:	6078      	str	r0, [r7, #4]
 800c89e:	460b      	mov	r3, r1
 800c8a0:	807b      	strh	r3, [r7, #2]
 800c8a2:	4613      	mov	r3, r2
 800c8a4:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800c8a6:	687b      	ldr	r3, [r7, #4]
 800c8a8:	681b      	ldr	r3, [r3, #0]
 800c8aa:	3338      	adds	r3, #56	@ 0x38
 800c8ac:	681b      	ldr	r3, [r3, #0]
 800c8ae:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800c8b2:	4611      	mov	r1, r2
 800c8b4:	6878      	ldr	r0, [r7, #4]
 800c8b6:	4798      	blx	r3
        setHeight(height);
 800c8b8:	687b      	ldr	r3, [r7, #4]
 800c8ba:	681b      	ldr	r3, [r3, #0]
 800c8bc:	333c      	adds	r3, #60	@ 0x3c
 800c8be:	681b      	ldr	r3, [r3, #0]
 800c8c0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c8c4:	4611      	mov	r1, r2
 800c8c6:	6878      	ldr	r0, [r7, #4]
 800c8c8:	4798      	blx	r3
    }
 800c8ca:	bf00      	nop
 800c8cc:	3708      	adds	r7, #8
 800c8ce:	46bd      	mov	sp, r7
 800c8d0:	bd80      	pop	{r7, pc}

0800c8d2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c8d2:	b480      	push	{r7}
 800c8d4:	b083      	sub	sp, #12
 800c8d6:	af00      	add	r7, sp, #0
 800c8d8:	6078      	str	r0, [r7, #4]
 800c8da:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c8dc:	bf00      	nop
 800c8de:	370c      	adds	r7, #12
 800c8e0:	46bd      	mov	sp, r7
 800c8e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8e6:	4770      	bx	lr

0800c8e8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800c8e8:	b480      	push	{r7}
 800c8ea:	b083      	sub	sp, #12
 800c8ec:	af00      	add	r7, sp, #0
 800c8ee:	6078      	str	r0, [r7, #4]
    {
    }
 800c8f0:	bf00      	nop
 800c8f2:	370c      	adds	r7, #12
 800c8f4:	46bd      	mov	sp, r7
 800c8f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c8fa:	4770      	bx	lr

0800c8fc <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800c8fc:	b480      	push	{r7}
 800c8fe:	b083      	sub	sp, #12
 800c900:	af00      	add	r7, sp, #0
 800c902:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800c904:	687b      	ldr	r3, [r7, #4]
 800c906:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800c90a:	4618      	mov	r0, r3
 800c90c:	370c      	adds	r7, #12
 800c90e:	46bd      	mov	sp, r7
 800c910:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c914:	4770      	bx	lr

0800c916 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800c916:	b480      	push	{r7}
 800c918:	b083      	sub	sp, #12
 800c91a:	af00      	add	r7, sp, #0
 800c91c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 800c924:	4618      	mov	r0, r3
 800c926:	370c      	adds	r7, #12
 800c928:	46bd      	mov	sp, r7
 800c92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c92e:	4770      	bx	lr

0800c930 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800c930:	b580      	push	{r7, lr}
 800c932:	b082      	sub	sp, #8
 800c934:	af00      	add	r7, sp, #0
 800c936:	6078      	str	r0, [r7, #4]
 800c938:	460b      	mov	r3, r1
 800c93a:	807b      	strh	r3, [r7, #2]
 800c93c:	4613      	mov	r3, r2
 800c93e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800c940:	687b      	ldr	r3, [r7, #4]
 800c942:	681b      	ldr	r3, [r3, #0]
 800c944:	3354      	adds	r3, #84	@ 0x54
 800c946:	681b      	ldr	r3, [r3, #0]
 800c948:	8879      	ldrh	r1, [r7, #2]
 800c94a:	687a      	ldr	r2, [r7, #4]
 800c94c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800c950:	b292      	uxth	r2, r2
 800c952:	1a8a      	subs	r2, r1, r2
 800c954:	b292      	uxth	r2, r2
 800c956:	b210      	sxth	r0, r2
 800c958:	8839      	ldrh	r1, [r7, #0]
 800c95a:	687a      	ldr	r2, [r7, #4]
 800c95c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800c960:	b292      	uxth	r2, r2
 800c962:	1a8a      	subs	r2, r1, r2
 800c964:	b292      	uxth	r2, r2
 800c966:	b212      	sxth	r2, r2
 800c968:	4601      	mov	r1, r0
 800c96a:	6878      	ldr	r0, [r7, #4]
 800c96c:	4798      	blx	r3
    }
 800c96e:	bf00      	nop
 800c970:	3708      	adds	r7, #8
 800c972:	46bd      	mov	sp, r7
 800c974:	bd80      	pop	{r7, pc}

0800c976 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800c976:	b480      	push	{r7}
 800c978:	b083      	sub	sp, #12
 800c97a:	af00      	add	r7, sp, #0
 800c97c:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800c97e:	687b      	ldr	r3, [r7, #4]
 800c980:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c984:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800c986:	687b      	ldr	r3, [r7, #4]
 800c988:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c98c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800c98e:	687b      	ldr	r3, [r7, #4]
 800c990:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800c994:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 800c996:	bf00      	nop
 800c998:	370c      	adds	r7, #12
 800c99a:	46bd      	mov	sp, r7
 800c99c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9a0:	4770      	bx	lr

0800c9a2 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800c9a2:	b580      	push	{r7, lr}
 800c9a4:	b084      	sub	sp, #16
 800c9a6:	af00      	add	r7, sp, #0
 800c9a8:	60f8      	str	r0, [r7, #12]
 800c9aa:	60b9      	str	r1, [r7, #8]
 800c9ac:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800c9ae:	68f8      	ldr	r0, [r7, #12]
 800c9b0:	f7ff ffe1 	bl	800c976 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800c9b4:	687b      	ldr	r3, [r7, #4]
 800c9b6:	681a      	ldr	r2, [r3, #0]
 800c9b8:	68fb      	ldr	r3, [r7, #12]
 800c9ba:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800c9bc:	687b      	ldr	r3, [r7, #4]
 800c9be:	68fa      	ldr	r2, [r7, #12]
 800c9c0:	601a      	str	r2, [r3, #0]
    }
 800c9c2:	bf00      	nop
 800c9c4:	3710      	adds	r7, #16
 800c9c6:	46bd      	mov	sp, r7
 800c9c8:	bd80      	pop	{r7, pc}

0800c9ca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800c9ca:	b580      	push	{r7, lr}
 800c9cc:	b084      	sub	sp, #16
 800c9ce:	af00      	add	r7, sp, #0
 800c9d0:	60f8      	str	r0, [r7, #12]
 800c9d2:	607b      	str	r3, [r7, #4]
 800c9d4:	460b      	mov	r3, r1
 800c9d6:	817b      	strh	r3, [r7, #10]
 800c9d8:	4613      	mov	r3, r2
 800c9da:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800c9dc:	68fb      	ldr	r3, [r7, #12]
 800c9de:	4618      	mov	r0, r3
 800c9e0:	f7ff ff8c 	bl	800c8fc <_ZNK8touchgfx8Drawable9isVisibleEv>
 800c9e4:	4603      	mov	r3, r0
 800c9e6:	2b00      	cmp	r3, #0
 800c9e8:	d008      	beq.n	800c9fc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c9ea:	68fb      	ldr	r3, [r7, #12]
 800c9ec:	4618      	mov	r0, r3
 800c9ee:	f7ff ff92 	bl	800c916 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800c9f2:	4603      	mov	r3, r0
 800c9f4:	2b00      	cmp	r3, #0
 800c9f6:	d001      	beq.n	800c9fc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800c9f8:	2301      	movs	r3, #1
 800c9fa:	e000      	b.n	800c9fe <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800c9fc:	2300      	movs	r3, #0
 800c9fe:	2b00      	cmp	r3, #0
 800ca00:	d002      	beq.n	800ca08 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800ca02:	68fa      	ldr	r2, [r7, #12]
 800ca04:	687b      	ldr	r3, [r7, #4]
 800ca06:	601a      	str	r2, [r3, #0]
        }
    }
 800ca08:	bf00      	nop
 800ca0a:	3710      	adds	r7, #16
 800ca0c:	46bd      	mov	sp, r7
 800ca0e:	bd80      	pop	{r7, pc}

0800ca10 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
    void registerTimerWidget(Drawable* w)
 800ca10:	b580      	push	{r7, lr}
 800ca12:	b082      	sub	sp, #8
 800ca14:	af00      	add	r7, sp, #0
 800ca16:	6078      	str	r0, [r7, #4]
 800ca18:	6039      	str	r1, [r7, #0]
        timerWidgets.add(w);
 800ca1a:	687b      	ldr	r3, [r7, #4]
 800ca1c:	3304      	adds	r3, #4
 800ca1e:	6839      	ldr	r1, [r7, #0]
 800ca20:	4618      	mov	r0, r3
 800ca22:	f009 fd71 	bl	8016508 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
    }
 800ca26:	bf00      	nop
 800ca28:	3708      	adds	r7, #8
 800ca2a:	46bd      	mov	sp, r7
 800ca2c:	bd80      	pop	{r7, pc}

0800ca2e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
     * @param [in] w The widget to remove.
     *
     * @note If widget has been registered multiple times, an equal number of calls to unregister
     *       are required to stop widget from receiving tick events.
     */
    void unregisterTimerWidget(const Drawable* w)
 800ca2e:	b580      	push	{r7, lr}
 800ca30:	b082      	sub	sp, #8
 800ca32:	af00      	add	r7, sp, #0
 800ca34:	6078      	str	r0, [r7, #4]
 800ca36:	6039      	str	r1, [r7, #0]
    {
        timerWidgets.remove(w);
 800ca38:	687b      	ldr	r3, [r7, #4]
 800ca3a:	3304      	adds	r3, #4
 800ca3c:	6839      	ldr	r1, [r7, #0]
 800ca3e:	4618      	mov	r0, r3
 800ca40:	f009 fcb9 	bl	80163b6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
    }
 800ca44:	bf00      	nop
 800ca46:	3708      	adds	r7, #8
 800ca48:	46bd      	mov	sp, r7
 800ca4a:	bd80      	pop	{r7, pc}

0800ca4c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800ca4c:	b480      	push	{r7}
 800ca4e:	b083      	sub	sp, #12
 800ca50:	af00      	add	r7, sp, #0
 800ca52:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800ca54:	687b      	ldr	r3, [r7, #4]
 800ca56:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800ca58:	4618      	mov	r0, r3
 800ca5a:	370c      	adds	r7, #12
 800ca5c:	46bd      	mov	sp, r7
 800ca5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca62:	4770      	bx	lr

0800ca64 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>:
    /**
     * Get the auxiliary LCD class attached to the HAL instance if any.
     *
     * @return A pointer on the axiliary LCD class attached to the HAL instance.
     */
    LCD* getAuxiliaryLCD()
 800ca64:	b480      	push	{r7}
 800ca66:	b083      	sub	sp, #12
 800ca68:	af00      	add	r7, sp, #0
 800ca6a:	6078      	str	r0, [r7, #4]
    {
        return auxiliaryLCD;
 800ca6c:	687b      	ldr	r3, [r7, #4]
 800ca6e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
    }
 800ca70:	4618      	mov	r0, r3
 800ca72:	370c      	adds	r7, #12
 800ca74:	46bd      	mov	sp, r7
 800ca76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca7a:	4770      	bx	lr

0800ca7c <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800ca7c:	b580      	push	{r7, lr}
 800ca7e:	b082      	sub	sp, #8
 800ca80:	af00      	add	r7, sp, #0
 800ca82:	6078      	str	r0, [r7, #4]
    {
 800ca84:	4a06      	ldr	r2, [pc, #24]	@ (800caa0 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800ca86:	687b      	ldr	r3, [r7, #4]
 800ca88:	601a      	str	r2, [r3, #0]
    }
 800ca8a:	687b      	ldr	r3, [r7, #4]
 800ca8c:	3304      	adds	r3, #4
 800ca8e:	4618      	mov	r0, r3
 800ca90:	f000 fd44 	bl	800d51c <_ZN8touchgfx9ContainerD1Ev>
 800ca94:	687b      	ldr	r3, [r7, #4]
 800ca96:	4618      	mov	r0, r3
 800ca98:	3708      	adds	r7, #8
 800ca9a:	46bd      	mov	sp, r7
 800ca9c:	bd80      	pop	{r7, pc}
 800ca9e:	bf00      	nop
 800caa0:	0802adfc 	.word	0x0802adfc

0800caa4 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800caa4:	b580      	push	{r7, lr}
 800caa6:	b082      	sub	sp, #8
 800caa8:	af00      	add	r7, sp, #0
 800caaa:	6078      	str	r0, [r7, #4]
    }
 800caac:	6878      	ldr	r0, [r7, #4]
 800caae:	f7ff ffe5 	bl	800ca7c <_ZN8touchgfx6ScreenD1Ev>
 800cab2:	213c      	movs	r1, #60	@ 0x3c
 800cab4:	6878      	ldr	r0, [r7, #4]
 800cab6:	f01a ffde 	bl	8027a76 <_ZdlPvj>
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	4618      	mov	r0, r3
 800cabe:	3708      	adds	r7, #8
 800cac0:	46bd      	mov	sp, r7
 800cac2:	bd80      	pop	{r7, pc}

0800cac4 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800cac4:	b480      	push	{r7}
 800cac6:	b083      	sub	sp, #12
 800cac8:	af00      	add	r7, sp, #0
 800caca:	6078      	str	r0, [r7, #4]
    {
    }
 800cacc:	bf00      	nop
 800cace:	370c      	adds	r7, #12
 800cad0:	46bd      	mov	sp, r7
 800cad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cad6:	4770      	bx	lr

0800cad8 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800cad8:	b480      	push	{r7}
 800cada:	b083      	sub	sp, #12
 800cadc:	af00      	add	r7, sp, #0
 800cade:	6078      	str	r0, [r7, #4]
    {
    }
 800cae0:	bf00      	nop
 800cae2:	370c      	adds	r7, #12
 800cae4:	46bd      	mov	sp, r7
 800cae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caea:	4770      	bx	lr

0800caec <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800caec:	b480      	push	{r7}
 800caee:	b083      	sub	sp, #12
 800caf0:	af00      	add	r7, sp, #0
 800caf2:	6078      	str	r0, [r7, #4]
    {
    }
 800caf4:	bf00      	nop
 800caf6:	370c      	adds	r7, #12
 800caf8:	46bd      	mov	sp, r7
 800cafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cafe:	4770      	bx	lr

0800cb00 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800cb00:	b480      	push	{r7}
 800cb02:	b083      	sub	sp, #12
 800cb04:	af00      	add	r7, sp, #0
 800cb06:	6078      	str	r0, [r7, #4]
    {
    }
 800cb08:	bf00      	nop
 800cb0a:	370c      	adds	r7, #12
 800cb0c:	46bd      	mov	sp, r7
 800cb0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb12:	4770      	bx	lr

0800cb14 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800cb14:	b480      	push	{r7}
 800cb16:	b083      	sub	sp, #12
 800cb18:	af00      	add	r7, sp, #0
 800cb1a:	6078      	str	r0, [r7, #4]
 800cb1c:	460b      	mov	r3, r1
 800cb1e:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800cb20:	bf00      	nop
 800cb22:	370c      	adds	r7, #12
 800cb24:	46bd      	mov	sp, r7
 800cb26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb2a:	4770      	bx	lr

0800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800cb2c:	b580      	push	{r7, lr}
 800cb2e:	b082      	sub	sp, #8
 800cb30:	af00      	add	r7, sp, #0
 800cb32:	6078      	str	r0, [r7, #4]
 800cb34:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800cb36:	687b      	ldr	r3, [r7, #4]
 800cb38:	3304      	adds	r3, #4
 800cb3a:	6839      	ldr	r1, [r7, #0]
 800cb3c:	4618      	mov	r0, r3
 800cb3e:	f005 fa81 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800cb42:	bf00      	nop
 800cb44:	3708      	adds	r7, #8
 800cb46:	46bd      	mov	sp, r7
 800cb48:	bd80      	pop	{r7, pc}
	...

0800cb4c <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800cb4c:	b580      	push	{r7, lr}
 800cb4e:	b082      	sub	sp, #8
 800cb50:	af00      	add	r7, sp, #0
 800cb52:	6078      	str	r0, [r7, #4]
 800cb54:	687b      	ldr	r3, [r7, #4]
 800cb56:	4618      	mov	r0, r3
 800cb58:	f7ff fd94 	bl	800c684 <_ZN8touchgfx8DrawableC1Ev>
 800cb5c:	4a03      	ldr	r2, [pc, #12]	@ (800cb6c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800cb5e:	687b      	ldr	r3, [r7, #4]
 800cb60:	601a      	str	r2, [r3, #0]
 800cb62:	687b      	ldr	r3, [r7, #4]
 800cb64:	4618      	mov	r0, r3
 800cb66:	3708      	adds	r7, #8
 800cb68:	46bd      	mov	sp, r7
 800cb6a:	bd80      	pop	{r7, pc}
 800cb6c:	08029ac0 	.word	0x08029ac0

0800cb70 <_ZN8touchgfx6WidgetD1Ev>:
 800cb70:	b580      	push	{r7, lr}
 800cb72:	b082      	sub	sp, #8
 800cb74:	af00      	add	r7, sp, #0
 800cb76:	6078      	str	r0, [r7, #4]
 800cb78:	4a05      	ldr	r2, [pc, #20]	@ (800cb90 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800cb7a:	687b      	ldr	r3, [r7, #4]
 800cb7c:	601a      	str	r2, [r3, #0]
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	4618      	mov	r0, r3
 800cb82:	f7ff fdaf 	bl	800c6e4 <_ZN8touchgfx8DrawableD1Ev>
 800cb86:	687b      	ldr	r3, [r7, #4]
 800cb88:	4618      	mov	r0, r3
 800cb8a:	3708      	adds	r7, #8
 800cb8c:	46bd      	mov	sp, r7
 800cb8e:	bd80      	pop	{r7, pc}
 800cb90:	08029ac0 	.word	0x08029ac0

0800cb94 <_ZN8touchgfx6WidgetD0Ev>:
 800cb94:	b580      	push	{r7, lr}
 800cb96:	b082      	sub	sp, #8
 800cb98:	af00      	add	r7, sp, #0
 800cb9a:	6078      	str	r0, [r7, #4]
 800cb9c:	6878      	ldr	r0, [r7, #4]
 800cb9e:	f7ff ffe7 	bl	800cb70 <_ZN8touchgfx6WidgetD1Ev>
 800cba2:	2128      	movs	r1, #40	@ 0x28
 800cba4:	6878      	ldr	r0, [r7, #4]
 800cba6:	f01a ff66 	bl	8027a76 <_ZdlPvj>
 800cbaa:	687b      	ldr	r3, [r7, #4]
 800cbac:	4618      	mov	r0, r3
 800cbae:	3708      	adds	r7, #8
 800cbb0:	46bd      	mov	sp, r7
 800cbb2:	bd80      	pop	{r7, pc}

0800cbb4 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800cbb4:	b580      	push	{r7, lr}
 800cbb6:	b082      	sub	sp, #8
 800cbb8:	af00      	add	r7, sp, #0
 800cbba:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800cbbc:	687b      	ldr	r3, [r7, #4]
 800cbbe:	4618      	mov	r0, r3
 800cbc0:	2326      	movs	r3, #38	@ 0x26
 800cbc2:	461a      	mov	r2, r3
 800cbc4:	2100      	movs	r1, #0
 800cbc6:	f01b f98c 	bl	8027ee2 <memset>
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	4618      	mov	r0, r3
 800cbce:	f7ff ffbd 	bl	800cb4c <_ZN8touchgfx6WidgetC1Ev>
 800cbd2:	4a09      	ldr	r2, [pc, #36]	@ (800cbf8 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	601a      	str	r2, [r3, #0]
 800cbd8:	687b      	ldr	r3, [r7, #4]
 800cbda:	22ff      	movs	r2, #255	@ 0xff
 800cbdc:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800cbe0:	687b      	ldr	r3, [r7, #4]
 800cbe2:	3328      	adds	r3, #40	@ 0x28
 800cbe4:	2100      	movs	r1, #0
 800cbe6:	4618      	mov	r0, r3
 800cbe8:	f7ff fd0a 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800cbec:	687b      	ldr	r3, [r7, #4]
 800cbee:	4618      	mov	r0, r3
 800cbf0:	3708      	adds	r7, #8
 800cbf2:	46bd      	mov	sp, r7
 800cbf4:	bd80      	pop	{r7, pc}
 800cbf6:	bf00      	nop
 800cbf8:	0802aa74 	.word	0x0802aa74

0800cbfc <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800cbfc:	b480      	push	{r7}
 800cbfe:	b083      	sub	sp, #12
 800cc00:	af00      	add	r7, sp, #0
 800cc02:	6078      	str	r0, [r7, #4]
 800cc04:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800cc06:	687b      	ldr	r3, [r7, #4]
 800cc08:	683a      	ldr	r2, [r7, #0]
 800cc0a:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800cc0c:	bf00      	nop
 800cc0e:	370c      	adds	r7, #12
 800cc10:	46bd      	mov	sp, r7
 800cc12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc16:	4770      	bx	lr

0800cc18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800cc18:	b580      	push	{r7, lr}
 800cc1a:	b082      	sub	sp, #8
 800cc1c:	af00      	add	r7, sp, #0
 800cc1e:	6078      	str	r0, [r7, #4]
 800cc20:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800cc22:	687b      	ldr	r3, [r7, #4]
 800cc24:	4618      	mov	r0, r3
 800cc26:	2326      	movs	r3, #38	@ 0x26
 800cc28:	461a      	mov	r2, r3
 800cc2a:	2100      	movs	r1, #0
 800cc2c:	f01b f959 	bl	8027ee2 <memset>
 800cc30:	687b      	ldr	r3, [r7, #4]
 800cc32:	4618      	mov	r0, r3
 800cc34:	f7ff ff8a 	bl	800cb4c <_ZN8touchgfx6WidgetC1Ev>
 800cc38:	4a09      	ldr	r2, [pc, #36]	@ (800cc60 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800cc3a:	687b      	ldr	r3, [r7, #4]
 800cc3c:	601a      	str	r2, [r3, #0]
 800cc3e:	687b      	ldr	r3, [r7, #4]
 800cc40:	683a      	ldr	r2, [r7, #0]
 800cc42:	8812      	ldrh	r2, [r2, #0]
 800cc44:	84da      	strh	r2, [r3, #38]	@ 0x26
 800cc46:	687b      	ldr	r3, [r7, #4]
 800cc48:	22ff      	movs	r2, #255	@ 0xff
 800cc4a:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 800cc4e:	6839      	ldr	r1, [r7, #0]
 800cc50:	6878      	ldr	r0, [r7, #4]
 800cc52:	f007 fc28 	bl	80144a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800cc56:	687b      	ldr	r3, [r7, #4]
 800cc58:	4618      	mov	r0, r3
 800cc5a:	3708      	adds	r7, #8
 800cc5c:	46bd      	mov	sp, r7
 800cc5e:	bd80      	pop	{r7, pc}
 800cc60:	0802abc8 	.word	0x0802abc8

0800cc64 <_ZN8touchgfx5Image8setAlphaEh>:
     *
     * @see getAlpha
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
 800cc64:	b480      	push	{r7}
 800cc66:	b083      	sub	sp, #12
 800cc68:	af00      	add	r7, sp, #0
 800cc6a:	6078      	str	r0, [r7, #4]
 800cc6c:	460b      	mov	r3, r1
 800cc6e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800cc70:	687b      	ldr	r3, [r7, #4]
 800cc72:	78fa      	ldrb	r2, [r7, #3]
 800cc74:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    }
 800cc78:	bf00      	nop
 800cc7a:	370c      	adds	r7, #12
 800cc7c:	46bd      	mov	sp, r7
 800cc7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc82:	4770      	bx	lr

0800cc84 <_ZNK8touchgfx5Image8getAlphaEv>:
     *
     * @return The current alpha value.
     *
     * @see setAlpha
     */
    uint8_t getAlpha() const
 800cc84:	b480      	push	{r7}
 800cc86:	b083      	sub	sp, #12
 800cc88:	af00      	add	r7, sp, #0
 800cc8a:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800cc8c:	687b      	ldr	r3, [r7, #4]
 800cc8e:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
    }
 800cc92:	4618      	mov	r0, r3
 800cc94:	370c      	adds	r7, #12
 800cc96:	46bd      	mov	sp, r7
 800cc98:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc9c:	4770      	bx	lr

0800cc9e <_ZNK8touchgfx5Image17invalidateContentEv>:

    virtual Rect getSolidRect() const;

    virtual void invalidateContent() const
 800cc9e:	b580      	push	{r7, lr}
 800cca0:	b082      	sub	sp, #8
 800cca2:	af00      	add	r7, sp, #0
 800cca4:	6078      	str	r0, [r7, #4]
    {
        if (alpha > 0)
 800cca6:	687b      	ldr	r3, [r7, #4]
 800cca8:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 800ccac:	2b00      	cmp	r3, #0
 800ccae:	d003      	beq.n	800ccb8 <_ZNK8touchgfx5Image17invalidateContentEv+0x1a>
        {
            Widget::invalidateContent();
 800ccb0:	687b      	ldr	r3, [r7, #4]
 800ccb2:	4618      	mov	r0, r3
 800ccb4:	f7ff fd36 	bl	800c724 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 800ccb8:	bf00      	nop
 800ccba:	3708      	adds	r7, #8
 800ccbc:	46bd      	mov	sp, r7
 800ccbe:	bd80      	pop	{r7, pc}

0800ccc0 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800ccc0:	b580      	push	{r7, lr}
 800ccc2:	b082      	sub	sp, #8
 800ccc4:	af00      	add	r7, sp, #0
 800ccc6:	6078      	str	r0, [r7, #4]
 800ccc8:	4a05      	ldr	r2, [pc, #20]	@ (800cce0 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800ccca:	687b      	ldr	r3, [r7, #4]
 800cccc:	601a      	str	r2, [r3, #0]
 800ccce:	687b      	ldr	r3, [r7, #4]
 800ccd0:	4618      	mov	r0, r3
 800ccd2:	f7ff ff4d 	bl	800cb70 <_ZN8touchgfx6WidgetD1Ev>
 800ccd6:	687b      	ldr	r3, [r7, #4]
 800ccd8:	4618      	mov	r0, r3
 800ccda:	3708      	adds	r7, #8
 800ccdc:	46bd      	mov	sp, r7
 800ccde:	bd80      	pop	{r7, pc}
 800cce0:	0802abc8 	.word	0x0802abc8

0800cce4 <_ZN8touchgfx5ImageD0Ev>:
 800cce4:	b580      	push	{r7, lr}
 800cce6:	b082      	sub	sp, #8
 800cce8:	af00      	add	r7, sp, #0
 800ccea:	6078      	str	r0, [r7, #4]
 800ccec:	6878      	ldr	r0, [r7, #4]
 800ccee:	f7ff ffe7 	bl	800ccc0 <_ZN8touchgfx5ImageD1Ev>
 800ccf2:	212c      	movs	r1, #44	@ 0x2c
 800ccf4:	6878      	ldr	r0, [r7, #4]
 800ccf6:	f01a febe 	bl	8027a76 <_ZdlPvj>
 800ccfa:	687b      	ldr	r3, [r7, #4]
 800ccfc:	4618      	mov	r0, r3
 800ccfe:	3708      	adds	r7, #8
 800cd00:	46bd      	mov	sp, r7
 800cd02:	bd80      	pop	{r7, pc}

0800cd04 <_ZN8touchgfx10TiledImageC1ERKNS_6BitmapE>:
     *
     * @param  bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    TiledImage(const Bitmap& bmp = Bitmap())
 800cd04:	b580      	push	{r7, lr}
 800cd06:	b082      	sub	sp, #8
 800cd08:	af00      	add	r7, sp, #0
 800cd0a:	6078      	str	r0, [r7, #4]
 800cd0c:	6039      	str	r1, [r7, #0]
        : Image(bmp), xOffset(0), yOffset(0)
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	6839      	ldr	r1, [r7, #0]
 800cd12:	4618      	mov	r0, r3
 800cd14:	f7ff ff80 	bl	800cc18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800cd18:	4a06      	ldr	r2, [pc, #24]	@ (800cd34 <_ZN8touchgfx10TiledImageC1ERKNS_6BitmapE+0x30>)
 800cd1a:	687b      	ldr	r3, [r7, #4]
 800cd1c:	601a      	str	r2, [r3, #0]
 800cd1e:	687b      	ldr	r3, [r7, #4]
 800cd20:	2200      	movs	r2, #0
 800cd22:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800cd24:	687b      	ldr	r3, [r7, #4]
 800cd26:	2200      	movs	r2, #0
 800cd28:	859a      	strh	r2, [r3, #44]	@ 0x2c
    {
    }
 800cd2a:	687b      	ldr	r3, [r7, #4]
 800cd2c:	4618      	mov	r0, r3
 800cd2e:	3708      	adds	r7, #8
 800cd30:	46bd      	mov	sp, r7
 800cd32:	bd80      	pop	{r7, pc}
 800cd34:	0802aadc 	.word	0x0802aadc

0800cd38 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
     */
    virtual uint8_t getAlpha() const;

    virtual void handleTickEvent();

    virtual void invalidateContent() const
 800cd38:	b580      	push	{r7, lr}
 800cd3a:	b082      	sub	sp, #8
 800cd3c:	af00      	add	r7, sp, #0
 800cd3e:	6078      	str	r0, [r7, #4]
    {
        if (getAlpha() > 0)
 800cd40:	687b      	ldr	r3, [r7, #4]
 800cd42:	681b      	ldr	r3, [r3, #0]
 800cd44:	33c8      	adds	r3, #200	@ 0xc8
 800cd46:	681b      	ldr	r3, [r3, #0]
 800cd48:	6878      	ldr	r0, [r7, #4]
 800cd4a:	4798      	blx	r3
 800cd4c:	4603      	mov	r3, r0
 800cd4e:	2b00      	cmp	r3, #0
 800cd50:	bf14      	ite	ne
 800cd52:	2301      	movne	r3, #1
 800cd54:	2300      	moveq	r3, #0
 800cd56:	b2db      	uxtb	r3, r3
 800cd58:	2b00      	cmp	r3, #0
 800cd5a:	d003      	beq.n	800cd64 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x2c>
        {
            Container::invalidateContent();
 800cd5c:	687b      	ldr	r3, [r7, #4]
 800cd5e:	4618      	mov	r0, r3
 800cd60:	f7ff fce0 	bl	800c724 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 800cd64:	bf00      	nop
 800cd66:	3708      	adds	r7, #8
 800cd68:	46bd      	mov	sp, r7
 800cd6a:	bd80      	pop	{r7, pc}

0800cd6c <_ZN8touchgfx15AbstractPainterC1Ev>:
 */
class AbstractPainter
{
public:
    /** Initializes a new instance of the AbstractPainter class. */
    AbstractPainter()
 800cd6c:	b480      	push	{r7}
 800cd6e:	b083      	sub	sp, #12
 800cd70:	af00      	add	r7, sp, #0
 800cd72:	6078      	str	r0, [r7, #4]
        : widgetWidth(0)
 800cd74:	4a06      	ldr	r2, [pc, #24]	@ (800cd90 <_ZN8touchgfx15AbstractPainterC1Ev+0x24>)
 800cd76:	687b      	ldr	r3, [r7, #4]
 800cd78:	601a      	str	r2, [r3, #0]
 800cd7a:	687b      	ldr	r3, [r7, #4]
 800cd7c:	2200      	movs	r2, #0
 800cd7e:	809a      	strh	r2, [r3, #4]
    {
    }
 800cd80:	687b      	ldr	r3, [r7, #4]
 800cd82:	4618      	mov	r0, r3
 800cd84:	370c      	adds	r7, #12
 800cd86:	46bd      	mov	sp, r7
 800cd88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd8c:	4770      	bx	lr
 800cd8e:	bf00      	nop
 800cd90:	08029aa0 	.word	0x08029aa0

0800cd94 <_ZN8touchgfx15AbstractPainterD1Ev>:

    /** Finalizes an instance of the AbstractPainter class. */
    virtual ~AbstractPainter()
 800cd94:	b480      	push	{r7}
 800cd96:	b083      	sub	sp, #12
 800cd98:	af00      	add	r7, sp, #0
 800cd9a:	6078      	str	r0, [r7, #4]
    {
 800cd9c:	4a04      	ldr	r2, [pc, #16]	@ (800cdb0 <_ZN8touchgfx15AbstractPainterD1Ev+0x1c>)
 800cd9e:	687b      	ldr	r3, [r7, #4]
 800cda0:	601a      	str	r2, [r3, #0]
    }
 800cda2:	687b      	ldr	r3, [r7, #4]
 800cda4:	4618      	mov	r0, r3
 800cda6:	370c      	adds	r7, #12
 800cda8:	46bd      	mov	sp, r7
 800cdaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdae:	4770      	bx	lr
 800cdb0:	08029aa0 	.word	0x08029aa0

0800cdb4 <_ZN8touchgfx15AbstractPainterD0Ev>:
    virtual ~AbstractPainter()
 800cdb4:	b580      	push	{r7, lr}
 800cdb6:	b082      	sub	sp, #8
 800cdb8:	af00      	add	r7, sp, #0
 800cdba:	6078      	str	r0, [r7, #4]
    }
 800cdbc:	6878      	ldr	r0, [r7, #4]
 800cdbe:	f7ff ffe9 	bl	800cd94 <_ZN8touchgfx15AbstractPainterD1Ev>
 800cdc2:	2108      	movs	r1, #8
 800cdc4:	6878      	ldr	r0, [r7, #4]
 800cdc6:	f01a fe56 	bl	8027a76 <_ZdlPvj>
 800cdca:	687b      	ldr	r3, [r7, #4]
 800cdcc:	4618      	mov	r0, r3
 800cdce:	3708      	adds	r7, #8
 800cdd0:	46bd      	mov	sp, r7
 800cdd2:	bd80      	pop	{r7, pc}

0800cdd4 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * HARDWARE if the painter uses hardware based drawing,
     * SOFTWARE otherwise. Relevant on platforms using DCACHE.
     *
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
 800cdd4:	b480      	push	{r7}
 800cdd6:	b083      	sub	sp, #12
 800cdd8:	af00      	add	r7, sp, #0
 800cdda:	6078      	str	r0, [r7, #4]
    {
        return HAL::SOFTWARE;
 800cddc:	2300      	movs	r3, #0
    }
 800cdde:	4618      	mov	r0, r3
 800cde0:	370c      	adds	r7, #12
 800cde2:	46bd      	mov	sp, r7
 800cde4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cde8:	4770      	bx	lr

0800cdea <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
 800cdea:	b480      	push	{r7}
 800cdec:	b083      	sub	sp, #12
 800cdee:	af00      	add	r7, sp, #0
 800cdf0:	6078      	str	r0, [r7, #4]
 800cdf2:	6039      	str	r1, [r7, #0]
    {
        widgetWidth = widgetRect.width;
 800cdf4:	683b      	ldr	r3, [r7, #0]
 800cdf6:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
 800cdfa:	687b      	ldr	r3, [r7, #4]
 800cdfc:	809a      	strh	r2, [r3, #4]
        return true;
 800cdfe:	2301      	movs	r3, #1
    }
 800ce00:	4618      	mov	r0, r3
 800ce02:	370c      	adds	r7, #12
 800ce04:	46bd      	mov	sp, r7
 800ce06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce0a:	4770      	bx	lr

0800ce0c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * This function is called after all paint operation have finished. This allows the painter to
     * close down dma queues etc. This happens after the last scan line segment has been drawn.
     *
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
 800ce0c:	b480      	push	{r7}
 800ce0e:	b083      	sub	sp, #12
 800ce10:	af00      	add	r7, sp, #0
 800ce12:	6078      	str	r0, [r7, #4]
    {
        return;
 800ce14:	bf00      	nop
    }
 800ce16:	370c      	adds	r7, #12
 800ce18:	46bd      	mov	sp, r7
 800ce1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce1e:	4770      	bx	lr

0800ce20 <_ZNK8touchgfx14CircleProgress15getCapPrecisionEv>:
     *
     * @return The cap precision.
     *
     * @see setCapPrecision
     */
    virtual int getCapPrecision() const
 800ce20:	b580      	push	{r7, lr}
 800ce22:	b082      	sub	sp, #8
 800ce24:	af00      	add	r7, sp, #0
 800ce26:	6078      	str	r0, [r7, #4]
    {
        return circle.getCapPrecision();
 800ce28:	687b      	ldr	r3, [r7, #4]
 800ce2a:	33b4      	adds	r3, #180	@ 0xb4
 800ce2c:	4618      	mov	r0, r3
 800ce2e:	f006 fb3a 	bl	80134a6 <_ZNK8touchgfx6Circle15getCapPrecisionEv>
 800ce32:	4603      	mov	r3, r0
    }
 800ce34:	4618      	mov	r0, r3
 800ce36:	3708      	adds	r7, #8
 800ce38:	46bd      	mov	sp, r7
 800ce3a:	bd80      	pop	{r7, pc}

0800ce3c <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>:
    /**
     * Constructor.
     *
     * @param  color (Optional) The color to use in the painter.
     */
    AbstractPainterColor(colortype color = 0)
 800ce3c:	b580      	push	{r7, lr}
 800ce3e:	b082      	sub	sp, #8
 800ce40:	af00      	add	r7, sp, #0
 800ce42:	6078      	str	r0, [r7, #4]
 800ce44:	6039      	str	r1, [r7, #0]
    {
 800ce46:	4a08      	ldr	r2, [pc, #32]	@ (800ce68 <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE+0x2c>)
 800ce48:	687b      	ldr	r3, [r7, #4]
 800ce4a:	601a      	str	r2, [r3, #0]
 800ce4c:	687b      	ldr	r3, [r7, #4]
 800ce4e:	3304      	adds	r3, #4
 800ce50:	4618      	mov	r0, r3
 800ce52:	f7ff fbc7 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
        setColor(color);
 800ce56:	6839      	ldr	r1, [r7, #0]
 800ce58:	6878      	ldr	r0, [r7, #4]
 800ce5a:	f000 f827 	bl	800ceac <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
    }
 800ce5e:	687b      	ldr	r3, [r7, #4]
 800ce60:	4618      	mov	r0, r3
 800ce62:	3708      	adds	r7, #8
 800ce64:	46bd      	mov	sp, r7
 800ce66:	bd80      	pop	{r7, pc}
 800ce68:	08029a8c 	.word	0x08029a8c

0800ce6c <_ZN8touchgfx20AbstractPainterColorD1Ev>:

    /** Destructor */
    virtual ~AbstractPainterColor()
 800ce6c:	b480      	push	{r7}
 800ce6e:	b083      	sub	sp, #12
 800ce70:	af00      	add	r7, sp, #0
 800ce72:	6078      	str	r0, [r7, #4]
    {
 800ce74:	4a04      	ldr	r2, [pc, #16]	@ (800ce88 <_ZN8touchgfx20AbstractPainterColorD1Ev+0x1c>)
 800ce76:	687b      	ldr	r3, [r7, #4]
 800ce78:	601a      	str	r2, [r3, #0]
    }
 800ce7a:	687b      	ldr	r3, [r7, #4]
 800ce7c:	4618      	mov	r0, r3
 800ce7e:	370c      	adds	r7, #12
 800ce80:	46bd      	mov	sp, r7
 800ce82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce86:	4770      	bx	lr
 800ce88:	08029a8c 	.word	0x08029a8c

0800ce8c <_ZN8touchgfx20AbstractPainterColorD0Ev>:
    virtual ~AbstractPainterColor()
 800ce8c:	b580      	push	{r7, lr}
 800ce8e:	b082      	sub	sp, #8
 800ce90:	af00      	add	r7, sp, #0
 800ce92:	6078      	str	r0, [r7, #4]
    }
 800ce94:	6878      	ldr	r0, [r7, #4]
 800ce96:	f7ff ffe9 	bl	800ce6c <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800ce9a:	2108      	movs	r1, #8
 800ce9c:	6878      	ldr	r0, [r7, #4]
 800ce9e:	f01a fdea 	bl	8027a76 <_ZdlPvj>
 800cea2:	687b      	ldr	r3, [r7, #4]
 800cea4:	4618      	mov	r0, r3
 800cea6:	3708      	adds	r7, #8
 800cea8:	46bd      	mov	sp, r7
 800ceaa:	bd80      	pop	{r7, pc}

0800ceac <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>:
    /**
     * Sets color to use when drawing the CanvasWidget.
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
 800ceac:	b480      	push	{r7}
 800ceae:	b083      	sub	sp, #12
 800ceb0:	af00      	add	r7, sp, #0
 800ceb2:	6078      	str	r0, [r7, #4]
 800ceb4:	6039      	str	r1, [r7, #0]
    {
        painterColor = color;
 800ceb6:	687b      	ldr	r3, [r7, #4]
 800ceb8:	683a      	ldr	r2, [r7, #0]
 800ceba:	605a      	str	r2, [r3, #4]
    }
 800cebc:	bf00      	nop
 800cebe:	370c      	adds	r7, #12
 800cec0:	46bd      	mov	sp, r7
 800cec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cec6:	4770      	bx	lr

0800cec8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 800cec8:	b580      	push	{r7, lr}
 800ceca:	b084      	sub	sp, #16
 800cecc:	af00      	add	r7, sp, #0
 800cece:	6078      	str	r0, [r7, #4]
        : AbstractPainter()
 800ced0:	687b      	ldr	r3, [r7, #4]
 800ced2:	4618      	mov	r0, r3
 800ced4:	f7ff ff4a 	bl	800cd6c <_ZN8touchgfx15AbstractPainterC1Ev>
 800ced8:	4a26      	ldr	r2, [pc, #152]	@ (800cf74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xac>)
 800ceda:	687b      	ldr	r3, [r7, #4]
 800cedc:	601a      	str	r2, [r3, #0]
 800cede:	2300      	movs	r3, #0
 800cee0:	73fb      	strb	r3, [r7, #15]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 800cee2:	f7fe fc33 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 800cee6:	4603      	mov	r3, r0
 800cee8:	681a      	ldr	r2, [r3, #0]
 800ceea:	322c      	adds	r2, #44	@ 0x2c
 800ceec:	6812      	ldr	r2, [r2, #0]
 800ceee:	4618      	mov	r0, r3
 800cef0:	4790      	blx	r2
 800cef2:	4603      	mov	r3, r0
 800cef4:	461a      	mov	r2, r3
 800cef6:	7bfb      	ldrb	r3, [r7, #15]
 800cef8:	4293      	cmp	r3, r2
 800cefa:	bf0c      	ite	eq
 800cefc:	2301      	moveq	r3, #1
 800cefe:	2300      	movne	r3, #0
 800cf00:	73bb      	strb	r3, [r7, #14]
        if (HAL::getInstance()->getAuxiliaryLCD())
 800cf02:	f7fe fc17 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 800cf06:	4603      	mov	r3, r0
 800cf08:	4618      	mov	r0, r3
 800cf0a:	f7ff fdab 	bl	800ca64 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800cf0e:	4603      	mov	r3, r0
 800cf10:	2b00      	cmp	r3, #0
 800cf12:	bf14      	ite	ne
 800cf14:	2301      	movne	r3, #1
 800cf16:	2300      	moveq	r3, #0
 800cf18:	b2db      	uxtb	r3, r3
 800cf1a:	2b00      	cmp	r3, #0
 800cf1c:	d01b      	beq.n	800cf56 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x8e>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 800cf1e:	f7fe fc09 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 800cf22:	4603      	mov	r3, r0
 800cf24:	4618      	mov	r0, r3
 800cf26:	f7ff fd9d 	bl	800ca64 <_ZN8touchgfx3HAL15getAuxiliaryLCDEv>
 800cf2a:	4603      	mov	r3, r0
 800cf2c:	681a      	ldr	r2, [r3, #0]
 800cf2e:	322c      	adds	r2, #44	@ 0x2c
 800cf30:	6812      	ldr	r2, [r2, #0]
 800cf32:	4618      	mov	r0, r3
 800cf34:	4790      	blx	r2
 800cf36:	4603      	mov	r3, r0
 800cf38:	461a      	mov	r2, r3
 800cf3a:	7bfb      	ldrb	r3, [r7, #15]
 800cf3c:	4293      	cmp	r3, r2
 800cf3e:	bf0c      	ite	eq
 800cf40:	2301      	moveq	r3, #1
 800cf42:	2300      	movne	r3, #0
 800cf44:	b2da      	uxtb	r2, r3
 800cf46:	7bbb      	ldrb	r3, [r7, #14]
 800cf48:	4313      	orrs	r3, r2
 800cf4a:	b2db      	uxtb	r3, r3
 800cf4c:	2b00      	cmp	r3, #0
 800cf4e:	bf14      	ite	ne
 800cf50:	2301      	movne	r3, #1
 800cf52:	2300      	moveq	r3, #0
 800cf54:	73bb      	strb	r3, [r7, #14]
        }
        return compat;
 800cf56:	7bbb      	ldrb	r3, [r7, #14]
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 800cf58:	2b00      	cmp	r3, #0
 800cf5a:	d105      	bne.n	800cf68 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xa0>
 800cf5c:	4b06      	ldr	r3, [pc, #24]	@ (800cf78 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb0>)
 800cf5e:	4a07      	ldr	r2, [pc, #28]	@ (800cf7c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb4>)
 800cf60:	212c      	movs	r1, #44	@ 0x2c
 800cf62:	4807      	ldr	r0, [pc, #28]	@ (800cf80 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0xb8>)
 800cf64:	f01a fdb6 	bl	8027ad4 <__assert_func>
    }
 800cf68:	687b      	ldr	r3, [r7, #4]
 800cf6a:	4618      	mov	r0, r3
 800cf6c:	3710      	adds	r7, #16
 800cf6e:	46bd      	mov	sp, r7
 800cf70:	bd80      	pop	{r7, pc}
 800cf72:	bf00      	nop
 800cf74:	08029a6c 	.word	0x08029a6c
 800cf78:	08028fb4 	.word	0x08028fb4
 800cf7c:	08029014 	.word	0x08029014
 800cf80:	08029050 	.word	0x08029050

0800cf84 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>:
class AbstractPainterRGB565 : public AbstractPainter
 800cf84:	b580      	push	{r7, lr}
 800cf86:	b082      	sub	sp, #8
 800cf88:	af00      	add	r7, sp, #0
 800cf8a:	6078      	str	r0, [r7, #4]
 800cf8c:	4a05      	ldr	r2, [pc, #20]	@ (800cfa4 <_ZN8touchgfx21AbstractPainterRGB565D1Ev+0x20>)
 800cf8e:	687b      	ldr	r3, [r7, #4]
 800cf90:	601a      	str	r2, [r3, #0]
 800cf92:	687b      	ldr	r3, [r7, #4]
 800cf94:	4618      	mov	r0, r3
 800cf96:	f7ff fefd 	bl	800cd94 <_ZN8touchgfx15AbstractPainterD1Ev>
 800cf9a:	687b      	ldr	r3, [r7, #4]
 800cf9c:	4618      	mov	r0, r3
 800cf9e:	3708      	adds	r7, #8
 800cfa0:	46bd      	mov	sp, r7
 800cfa2:	bd80      	pop	{r7, pc}
 800cfa4:	08029a6c 	.word	0x08029a6c

0800cfa8 <_ZN8touchgfx21AbstractPainterRGB565D0Ev>:
 800cfa8:	b580      	push	{r7, lr}
 800cfaa:	b082      	sub	sp, #8
 800cfac:	af00      	add	r7, sp, #0
 800cfae:	6078      	str	r0, [r7, #4]
 800cfb0:	6878      	ldr	r0, [r7, #4]
 800cfb2:	f7ff ffe7 	bl	800cf84 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800cfb6:	2108      	movs	r1, #8
 800cfb8:	6878      	ldr	r0, [r7, #4]
 800cfba:	f01a fd5c 	bl	8027a76 <_ZdlPvj>
 800cfbe:	687b      	ldr	r3, [r7, #4]
 800cfc0:	4618      	mov	r0, r3
 800cfc2:	3708      	adds	r7, #8
 800cfc4:	46bd      	mov	sp, r7
 800cfc6:	bd80      	pop	{r7, pc}

0800cfc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>:
    /**
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
 800cfc8:	b580      	push	{r7, lr}
 800cfca:	b082      	sub	sp, #8
 800cfcc:	af00      	add	r7, sp, #0
 800cfce:	6078      	str	r0, [r7, #4]
 800cfd0:	6039      	str	r1, [r7, #0]
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800cfd2:	687b      	ldr	r3, [r7, #4]
 800cfd4:	4618      	mov	r0, r3
 800cfd6:	f7ff ff77 	bl	800cec8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800cfda:	687b      	ldr	r3, [r7, #4]
 800cfdc:	3308      	adds	r3, #8
 800cfde:	6839      	ldr	r1, [r7, #0]
 800cfe0:	4618      	mov	r0, r3
 800cfe2:	f7ff ff2b 	bl	800ce3c <_ZN8touchgfx20AbstractPainterColorC1ENS_9colortypeE>
 800cfe6:	4a05      	ldr	r2, [pc, #20]	@ (800cffc <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x34>)
 800cfe8:	687b      	ldr	r3, [r7, #4]
 800cfea:	601a      	str	r2, [r3, #0]
 800cfec:	4a04      	ldr	r2, [pc, #16]	@ (800d000 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE+0x38>)
 800cfee:	687b      	ldr	r3, [r7, #4]
 800cff0:	609a      	str	r2, [r3, #8]
    {
    }
 800cff2:	687b      	ldr	r3, [r7, #4]
 800cff4:	4618      	mov	r0, r3
 800cff6:	3708      	adds	r7, #8
 800cff8:	46bd      	mov	sp, r7
 800cffa:	bd80      	pop	{r7, pc}
 800cffc:	0802a894 	.word	0x0802a894
 800d000:	0802a8b8 	.word	0x0802a8b8

0800d004 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:

    virtual void setColor(colortype color)
 800d004:	b590      	push	{r4, r7, lr}
 800d006:	b085      	sub	sp, #20
 800d008:	af00      	add	r7, sp, #0
 800d00a:	6078      	str	r0, [r7, #4]
 800d00c:	6039      	str	r1, [r7, #0]
    {
        AbstractPainterColor::setColor(color);
 800d00e:	687b      	ldr	r3, [r7, #4]
 800d010:	3308      	adds	r3, #8
 800d012:	6839      	ldr	r1, [r7, #0]
 800d014:	4618      	mov	r0, r3
 800d016:	f7ff ff49 	bl	800ceac <_ZN8touchgfx20AbstractPainterColor8setColorENS_9colortypeE>
 800d01a:	687b      	ldr	r3, [r7, #4]
 800d01c:	68db      	ldr	r3, [r3, #12]
 800d01e:	60fb      	str	r3, [r7, #12]
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800d020:	f107 030c 	add.w	r3, r7, #12
 800d024:	4618      	mov	r0, r3
 800d026:	f7ff fafa 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 800d02a:	4603      	mov	r3, r0
 800d02c:	0a1b      	lsrs	r3, r3, #8
 800d02e:	b29a      	uxth	r2, r3
 800d030:	4b11      	ldr	r3, [pc, #68]	@ (800d078 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x74>)
 800d032:	4013      	ands	r3, r2
 800d034:	b29c      	uxth	r4, r3
 800d036:	f107 030c 	add.w	r3, r7, #12
 800d03a:	4618      	mov	r0, r3
 800d03c:	f7ff faef 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 800d040:	4603      	mov	r3, r0
 800d042:	095b      	lsrs	r3, r3, #5
 800d044:	b29b      	uxth	r3, r3
 800d046:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800d04a:	b29b      	uxth	r3, r3
 800d04c:	4323      	orrs	r3, r4
 800d04e:	b29c      	uxth	r4, r3
 800d050:	f107 030c 	add.w	r3, r7, #12
 800d054:	4618      	mov	r0, r3
 800d056:	f7ff fae2 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 800d05a:	4603      	mov	r3, r0
 800d05c:	08db      	lsrs	r3, r3, #3
 800d05e:	b29b      	uxth	r3, r3
 800d060:	f003 031f 	and.w	r3, r3, #31
 800d064:	b29b      	uxth	r3, r3
 800d066:	4323      	orrs	r3, r4
 800d068:	b29a      	uxth	r2, r3
        color565 = LCD16bpp::getNativeColor(painterColor);
 800d06a:	687b      	ldr	r3, [r7, #4]
 800d06c:	821a      	strh	r2, [r3, #16]
    }
 800d06e:	bf00      	nop
 800d070:	3714      	adds	r7, #20
 800d072:	46bd      	mov	sp, r7
 800d074:	bd90      	pop	{r4, r7, pc}
 800d076:	bf00      	nop
 800d078:	fffff800 	.word	0xfffff800

0800d07c <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 800d07c:	f1a0 0008 	sub.w	r0, r0, #8
 800d080:	e7c0      	b.n	800d004 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800d082:	bf00      	nop

0800d084 <_ZN15InitialViewBase16handleTickEvent1Ev>:
    virtual void changeToScreen1();

    /*
     * Virtual Action Handlers
     */
    virtual void handleTickEvent1()
 800d084:	b480      	push	{r7}
 800d086:	b083      	sub	sp, #12
 800d088:	af00      	add	r7, sp, #0
 800d08a:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Initial
    }
 800d08c:	bf00      	nop
 800d08e:	370c      	adds	r7, #12
 800d090:	46bd      	mov	sp, r7
 800d092:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d096:	4770      	bx	lr

0800d098 <_ZN15InitialViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800d098:	b580      	push	{r7, lr}
 800d09a:	b082      	sub	sp, #8
 800d09c:	af00      	add	r7, sp, #0
 800d09e:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800d0a0:	f009 f93c 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800d0a4:	4603      	mov	r3, r0
    }
 800d0a6:	4618      	mov	r0, r3
 800d0a8:	3708      	adds	r7, #8
 800d0aa:	46bd      	mov	sp, r7
 800d0ac:	bd80      	pop	{r7, pc}
	...

0800d0b0 <_ZN8touchgfx4ViewI16InitialPresenterED1Ev>:
class View : public Screen
 800d0b0:	b580      	push	{r7, lr}
 800d0b2:	b082      	sub	sp, #8
 800d0b4:	af00      	add	r7, sp, #0
 800d0b6:	6078      	str	r0, [r7, #4]
 800d0b8:	4a05      	ldr	r2, [pc, #20]	@ (800d0d0 <_ZN8touchgfx4ViewI16InitialPresenterED1Ev+0x20>)
 800d0ba:	687b      	ldr	r3, [r7, #4]
 800d0bc:	601a      	str	r2, [r3, #0]
 800d0be:	687b      	ldr	r3, [r7, #4]
 800d0c0:	4618      	mov	r0, r3
 800d0c2:	f7ff fcdb 	bl	800ca7c <_ZN8touchgfx6ScreenD1Ev>
 800d0c6:	687b      	ldr	r3, [r7, #4]
 800d0c8:	4618      	mov	r0, r3
 800d0ca:	3708      	adds	r7, #8
 800d0cc:	46bd      	mov	sp, r7
 800d0ce:	bd80      	pop	{r7, pc}
 800d0d0:	08029a38 	.word	0x08029a38

0800d0d4 <_ZN8touchgfx4ViewI16InitialPresenterED0Ev>:
 800d0d4:	b580      	push	{r7, lr}
 800d0d6:	b082      	sub	sp, #8
 800d0d8:	af00      	add	r7, sp, #0
 800d0da:	6078      	str	r0, [r7, #4]
 800d0dc:	6878      	ldr	r0, [r7, #4]
 800d0de:	f7ff ffe7 	bl	800d0b0 <_ZN8touchgfx4ViewI16InitialPresenterED1Ev>
 800d0e2:	2140      	movs	r1, #64	@ 0x40
 800d0e4:	6878      	ldr	r0, [r7, #4]
 800d0e6:	f01a fcc6 	bl	8027a76 <_ZdlPvj>
 800d0ea:	687b      	ldr	r3, [r7, #4]
 800d0ec:	4618      	mov	r0, r3
 800d0ee:	3708      	adds	r7, #8
 800d0f0:	46bd      	mov	sp, r7
 800d0f2:	bd80      	pop	{r7, pc}

0800d0f4 <_ZN15InitialViewBaseC1Ev>:
#include <gui_generated/initial_screen/InitialViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

InitialViewBase::InitialViewBase()
 800d0f4:	b590      	push	{r4, r7, lr}
 800d0f6:	b08d      	sub	sp, #52	@ 0x34
 800d0f8:	af02      	add	r7, sp, #8
 800d0fa:	6078      	str	r0, [r7, #4]
 800d0fc:	687b      	ldr	r3, [r7, #4]
 800d0fe:	4618      	mov	r0, r3
 800d100:	f000 f9aa 	bl	800d458 <_ZN8touchgfx4ViewI16InitialPresenterEC1Ev>
 800d104:	4a8e      	ldr	r2, [pc, #568]	@ (800d340 <_ZN15InitialViewBaseC1Ev+0x24c>)
 800d106:	687b      	ldr	r3, [r7, #4]
 800d108:	601a      	str	r2, [r3, #0]
 800d10a:	687b      	ldr	r3, [r7, #4]
 800d10c:	3340      	adds	r3, #64	@ 0x40
 800d10e:	4618      	mov	r0, r3
 800d110:	f7ff fd50 	bl	800cbb4 <_ZN8touchgfx3BoxC1Ev>
 800d114:	687b      	ldr	r3, [r7, #4]
 800d116:	336c      	adds	r3, #108	@ 0x6c
 800d118:	4618      	mov	r0, r3
 800d11a:	f000 f9d5 	bl	800d4c8 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEEC1Ev>
 800d11e:	687b      	ldr	r3, [r7, #4]
 800d120:	33b0      	adds	r3, #176	@ 0xb0
 800d122:	4618      	mov	r0, r3
 800d124:	f000 fab6 	bl	800d694 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEEC1Ev>
 800d128:	687b      	ldr	r3, [r7, #4]
 800d12a:	f503 74e2 	add.w	r4, r3, #452	@ 0x1c4
 800d12e:	f107 030c 	add.w	r3, r7, #12
 800d132:	2100      	movs	r1, #0
 800d134:	4618      	mov	r0, r3
 800d136:	f7ff fa63 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800d13a:	68f9      	ldr	r1, [r7, #12]
 800d13c:	4620      	mov	r0, r4
 800d13e:	f7ff ff43 	bl	800cfc8 <_ZN8touchgfx13PainterRGB565C1ENS_9colortypeE>
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800d142:	687b      	ldr	r3, [r7, #4]
 800d144:	f503 73ec 	add.w	r3, r3, #472	@ 0x1d8
 800d148:	f44f 51e1 	mov.w	r1, #7200	@ 0x1c20
 800d14c:	4618      	mov	r0, r3
 800d14e:	f008 f895 	bl	801527c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    
    __background.setPosition(0, 0, 480, 272);
 800d152:	687b      	ldr	r3, [r7, #4]
 800d154:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800d158:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800d15c:	9300      	str	r3, [sp, #0]
 800d15e:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800d162:	2200      	movs	r2, #0
 800d164:	2100      	movs	r1, #0
 800d166:	f7ff fafb 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800d16a:	687b      	ldr	r3, [r7, #4]
 800d16c:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800d170:	2300      	movs	r3, #0
 800d172:	f887 3024 	strb.w	r3, [r7, #36]	@ 0x24
 800d176:	2300      	movs	r3, #0
 800d178:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800d17c:	2300      	movs	r3, #0
 800d17e:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800d182:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800d186:	041a      	lsls	r2, r3, #16
 800d188:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800d18c:	021b      	lsls	r3, r3, #8
 800d18e:	431a      	orrs	r2, r3
 800d190:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 800d194:	4313      	orrs	r3, r2
 800d196:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d19a:	f107 031c 	add.w	r3, r7, #28
 800d19e:	4611      	mov	r1, r2
 800d1a0:	4618      	mov	r0, r3
 800d1a2:	f7ff fa2d 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800d1a6:	69fb      	ldr	r3, [r7, #28]
 800d1a8:	4619      	mov	r1, r3
 800d1aa:	4620      	mov	r0, r4
 800d1ac:	f7ff fd26 	bl	800cbfc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800d1b0:	687a      	ldr	r2, [r7, #4]
 800d1b2:	687b      	ldr	r3, [r7, #4]
 800d1b4:	3340      	adds	r3, #64	@ 0x40
 800d1b6:	4619      	mov	r1, r3
 800d1b8:	4610      	mov	r0, r2
 800d1ba:	f7ff fcb7 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_PUZZLE_ID));
 800d1be:	687b      	ldr	r3, [r7, #4]
 800d1c0:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800d1c4:	f107 0310 	add.w	r3, r7, #16
 800d1c8:	2100      	movs	r1, #0
 800d1ca:	4618      	mov	r0, r3
 800d1cc:	f7ff fa4a 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800d1d0:	f107 0310 	add.w	r3, r7, #16
 800d1d4:	4619      	mov	r1, r3
 800d1d6:	4620      	mov	r0, r4
 800d1d8:	f006 ff33 	bl	8014042 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
    tiledImage1.setPosition(0, 0, 480, 272);
 800d1dc:	687b      	ldr	r3, [r7, #4]
 800d1de:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800d1e2:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800d1e6:	9300      	str	r3, [sp, #0]
 800d1e8:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800d1ec:	2200      	movs	r2, #0
 800d1ee:	2100      	movs	r1, #0
 800d1f0:	f7ff fab6 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    tiledImage1.setOffset(0, 0);
 800d1f4:	687b      	ldr	r3, [r7, #4]
 800d1f6:	336c      	adds	r3, #108	@ 0x6c
 800d1f8:	2200      	movs	r2, #0
 800d1fa:	2100      	movs	r1, #0
 800d1fc:	4618      	mov	r0, r3
 800d1fe:	f006 feff 	bl	8014000 <_ZN8touchgfx10TiledImage9setOffsetEss>
    tiledImage1.setAlpha(0);
 800d202:	687b      	ldr	r3, [r7, #4]
 800d204:	336c      	adds	r3, #108	@ 0x6c
 800d206:	2100      	movs	r1, #0
 800d208:	4618      	mov	r0, r3
 800d20a:	f7ff fd2b 	bl	800cc64 <_ZN8touchgfx5Image8setAlphaEh>
    add(tiledImage1);
 800d20e:	687a      	ldr	r2, [r7, #4]
 800d210:	687b      	ldr	r3, [r7, #4]
 800d212:	336c      	adds	r3, #108	@ 0x6c
 800d214:	4619      	mov	r1, r3
 800d216:	4610      	mov	r0, r2
 800d218:	f7ff fc88 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    circleProgress1.setXY(185, 156);
 800d21c:	687b      	ldr	r3, [r7, #4]
 800d21e:	33b0      	adds	r3, #176	@ 0xb0
 800d220:	229c      	movs	r2, #156	@ 0x9c
 800d222:	21b9      	movs	r1, #185	@ 0xb9
 800d224:	4618      	mov	r0, r3
 800d226:	f7ff fada 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
    circleProgress1.setProgressIndicatorPosition(0, 0, 110, 110);
 800d22a:	687b      	ldr	r3, [r7, #4]
 800d22c:	f103 00b0 	add.w	r0, r3, #176	@ 0xb0
 800d230:	236e      	movs	r3, #110	@ 0x6e
 800d232:	9300      	str	r3, [sp, #0]
 800d234:	236e      	movs	r3, #110	@ 0x6e
 800d236:	2200      	movs	r2, #0
 800d238:	2100      	movs	r1, #0
 800d23a:	f004 fce1 	bl	8011c00 <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>
    circleProgress1.setRange(0, 100, 50, 0);
 800d23e:	687b      	ldr	r3, [r7, #4]
 800d240:	f103 00b0 	add.w	r0, r3, #176	@ 0xb0
 800d244:	2300      	movs	r3, #0
 800d246:	9300      	str	r3, [sp, #0]
 800d248:	2332      	movs	r3, #50	@ 0x32
 800d24a:	2264      	movs	r2, #100	@ 0x64
 800d24c:	2100      	movs	r1, #0
 800d24e:	f004 fd65 	bl	8011d1c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    circleProgress1.setCenter(55, 55);
 800d252:	687b      	ldr	r3, [r7, #4]
 800d254:	33b0      	adds	r3, #176	@ 0xb0
 800d256:	2237      	movs	r2, #55	@ 0x37
 800d258:	2137      	movs	r1, #55	@ 0x37
 800d25a:	4618      	mov	r0, r3
 800d25c:	f004 fc8f 	bl	8011b7e <_ZN8touchgfx14CircleProgress9setCenterEii>
    circleProgress1.setRadius(50);
 800d260:	687b      	ldr	r3, [r7, #4]
 800d262:	33b0      	adds	r3, #176	@ 0xb0
 800d264:	2132      	movs	r1, #50	@ 0x32
 800d266:	4618      	mov	r0, r3
 800d268:	f004 fcb3 	bl	8011bd2 <_ZN8touchgfx14CircleProgress9setRadiusEi>
    circleProgress1.setLineWidth(10);
 800d26c:	687b      	ldr	r3, [r7, #4]
 800d26e:	33b0      	adds	r3, #176	@ 0xb0
 800d270:	210a      	movs	r1, #10
 800d272:	4618      	mov	r0, r3
 800d274:	f004 fcb3 	bl	8011bde <_ZN8touchgfx14CircleProgress12setLineWidthEi>
    circleProgress1.setStartEndAngle(-90, 270);
 800d278:	687b      	ldr	r3, [r7, #4]
 800d27a:	33b0      	adds	r3, #176	@ 0xb0
 800d27c:	f44f 7287 	mov.w	r2, #270	@ 0x10e
 800d280:	f06f 0159 	mvn.w	r1, #89	@ 0x59
 800d284:	4618      	mov	r0, r3
 800d286:	f004 fd03 	bl	8011c90 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
    circleProgress1.setCapPrecision(10);
 800d28a:	687b      	ldr	r3, [r7, #4]
 800d28c:	33b0      	adds	r3, #176	@ 0xb0
 800d28e:	210a      	movs	r1, #10
 800d290:	4618      	mov	r0, r3
 800d292:	f004 fcaa 	bl	8011bea <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_SMALL_ID));
 800d296:	687b      	ldr	r3, [r7, #4]
 800d298:	f103 04b0 	add.w	r4, r3, #176	@ 0xb0
 800d29c:	f107 0314 	add.w	r3, r7, #20
 800d2a0:	2101      	movs	r1, #1
 800d2a2:	4618      	mov	r0, r3
 800d2a4:	f7ff f9de 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800d2a8:	f107 0314 	add.w	r3, r7, #20
 800d2ac:	4619      	mov	r1, r3
 800d2ae:	4620      	mov	r0, r4
 800d2b0:	f004 fe5a 	bl	8011f68 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    circleProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(8, 9, 9));
 800d2b4:	687b      	ldr	r3, [r7, #4]
 800d2b6:	f503 74e2 	add.w	r4, r3, #452	@ 0x1c4
 800d2ba:	2308      	movs	r3, #8
 800d2bc:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800d2c0:	2309      	movs	r3, #9
 800d2c2:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800d2c6:	2309      	movs	r3, #9
 800d2c8:	f887 3025 	strb.w	r3, [r7, #37]	@ 0x25
 800d2cc:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800d2d0:	041a      	lsls	r2, r3, #16
 800d2d2:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800d2d6:	021b      	lsls	r3, r3, #8
 800d2d8:	431a      	orrs	r2, r3
 800d2da:	f897 3025 	ldrb.w	r3, [r7, #37]	@ 0x25
 800d2de:	4313      	orrs	r3, r2
 800d2e0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d2e4:	f107 0318 	add.w	r3, r7, #24
 800d2e8:	4611      	mov	r1, r2
 800d2ea:	4618      	mov	r0, r3
 800d2ec:	f7ff f988 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800d2f0:	69bb      	ldr	r3, [r7, #24]
 800d2f2:	4619      	mov	r1, r3
 800d2f4:	4620      	mov	r0, r4
 800d2f6:	f7ff fe85 	bl	800d004 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
    circleProgress1.setPainter(circleProgress1Painter);
 800d2fa:	687b      	ldr	r3, [r7, #4]
 800d2fc:	f103 02b0 	add.w	r2, r3, #176	@ 0xb0
 800d300:	687b      	ldr	r3, [r7, #4]
 800d302:	f503 73e2 	add.w	r3, r3, #452	@ 0x1c4
 800d306:	4619      	mov	r1, r3
 800d308:	4610      	mov	r0, r2
 800d30a:	f004 fc35 	bl	8011b78 <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>
    circleProgress1.setValue(0);
 800d30e:	687b      	ldr	r3, [r7, #4]
 800d310:	33b0      	adds	r3, #176	@ 0xb0
 800d312:	2100      	movs	r1, #0
 800d314:	4618      	mov	r0, r3
 800d316:	f004 fca0 	bl	8011c5a <_ZN8touchgfx14CircleProgress8setValueEi>
    circleProgress1.setAlpha(0);
 800d31a:	687b      	ldr	r3, [r7, #4]
 800d31c:	33b0      	adds	r3, #176	@ 0xb0
 800d31e:	2100      	movs	r1, #0
 800d320:	4618      	mov	r0, r3
 800d322:	f004 fc65 	bl	8011bf0 <_ZN8touchgfx14CircleProgress8setAlphaEh>
    add(circleProgress1);
 800d326:	687a      	ldr	r2, [r7, #4]
 800d328:	687b      	ldr	r3, [r7, #4]
 800d32a:	33b0      	adds	r3, #176	@ 0xb0
 800d32c:	4619      	mov	r1, r3
 800d32e:	4610      	mov	r0, r2
 800d330:	f7ff fbfc 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d334:	687b      	ldr	r3, [r7, #4]
 800d336:	4618      	mov	r0, r3
 800d338:	372c      	adds	r7, #44	@ 0x2c
 800d33a:	46bd      	mov	sp, r7
 800d33c:	bd90      	pop	{r4, r7, pc}
 800d33e:	bf00      	nop
 800d340:	08029860 	.word	0x08029860

0800d344 <_ZN15InitialViewBaseD1Ev>:

InitialViewBase::~InitialViewBase()
 800d344:	b580      	push	{r7, lr}
 800d346:	b082      	sub	sp, #8
 800d348:	af00      	add	r7, sp, #0
 800d34a:	6078      	str	r0, [r7, #4]
 800d34c:	4a11      	ldr	r2, [pc, #68]	@ (800d394 <_ZN15InitialViewBaseD1Ev+0x50>)
 800d34e:	687b      	ldr	r3, [r7, #4]
 800d350:	601a      	str	r2, [r3, #0]
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 800d352:	f007 ff9d 	bl	8015290 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800d356:	687b      	ldr	r3, [r7, #4]
 800d358:	f503 73e2 	add.w	r3, r3, #452	@ 0x1c4
 800d35c:	4618      	mov	r0, r3
 800d35e:	f000 fc1b 	bl	800db98 <_ZN8touchgfx13PainterRGB565D1Ev>
 800d362:	687b      	ldr	r3, [r7, #4]
 800d364:	33b0      	adds	r3, #176	@ 0xb0
 800d366:	4618      	mov	r0, r3
 800d368:	f000 fbae 	bl	800dac8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEED1Ev>
 800d36c:	687b      	ldr	r3, [r7, #4]
 800d36e:	336c      	adds	r3, #108	@ 0x6c
 800d370:	4618      	mov	r0, r3
 800d372:	f000 fbcd 	bl	800db10 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEED1Ev>
 800d376:	687b      	ldr	r3, [r7, #4]
 800d378:	3340      	adds	r3, #64	@ 0x40
 800d37a:	4618      	mov	r0, r3
 800d37c:	f000 fbea 	bl	800db54 <_ZN8touchgfx3BoxD1Ev>
 800d380:	687b      	ldr	r3, [r7, #4]
 800d382:	4618      	mov	r0, r3
 800d384:	f7ff fe94 	bl	800d0b0 <_ZN8touchgfx4ViewI16InitialPresenterED1Ev>
 800d388:	687b      	ldr	r3, [r7, #4]
 800d38a:	4618      	mov	r0, r3
 800d38c:	3708      	adds	r7, #8
 800d38e:	46bd      	mov	sp, r7
 800d390:	bd80      	pop	{r7, pc}
 800d392:	bf00      	nop
 800d394:	08029860 	.word	0x08029860

0800d398 <_ZN15InitialViewBaseD0Ev>:
InitialViewBase::~InitialViewBase()
 800d398:	b580      	push	{r7, lr}
 800d39a:	b082      	sub	sp, #8
 800d39c:	af00      	add	r7, sp, #0
 800d39e:	6078      	str	r0, [r7, #4]
}
 800d3a0:	6878      	ldr	r0, [r7, #4]
 800d3a2:	f7ff ffcf 	bl	800d344 <_ZN15InitialViewBaseD1Ev>
 800d3a6:	f641 51f8 	movw	r1, #7672	@ 0x1df8
 800d3aa:	6878      	ldr	r0, [r7, #4]
 800d3ac:	f01a fb63 	bl	8027a76 <_ZdlPvj>
 800d3b0:	687b      	ldr	r3, [r7, #4]
 800d3b2:	4618      	mov	r0, r3
 800d3b4:	3708      	adds	r7, #8
 800d3b6:	46bd      	mov	sp, r7
 800d3b8:	bd80      	pop	{r7, pc}

0800d3ba <_ZN15InitialViewBase11setupScreenEv>:

void InitialViewBase::setupScreen()
{
 800d3ba:	b580      	push	{r7, lr}
 800d3bc:	b082      	sub	sp, #8
 800d3be:	af00      	add	r7, sp, #0
 800d3c0:	6078      	str	r0, [r7, #4]
    transitionBegins();
 800d3c2:	687b      	ldr	r3, [r7, #4]
 800d3c4:	681b      	ldr	r3, [r3, #0]
 800d3c6:	332c      	adds	r3, #44	@ 0x2c
 800d3c8:	681b      	ldr	r3, [r3, #0]
 800d3ca:	6878      	ldr	r0, [r7, #4]
 800d3cc:	4798      	blx	r3
}
 800d3ce:	bf00      	nop
 800d3d0:	3708      	adds	r7, #8
 800d3d2:	46bd      	mov	sp, r7
 800d3d4:	bd80      	pop	{r7, pc}

0800d3d6 <_ZN15InitialViewBase15handleTickEventEv>:

void InitialViewBase::handleTickEvent()
{
 800d3d6:	b580      	push	{r7, lr}
 800d3d8:	b082      	sub	sp, #8
 800d3da:	af00      	add	r7, sp, #0
 800d3dc:	6078      	str	r0, [r7, #4]
    //handleTickEvent1
    //When every N tick call virtual function
    //Call handleTickEvent1
    handleTickEvent1();
 800d3de:	687b      	ldr	r3, [r7, #4]
 800d3e0:	681b      	ldr	r3, [r3, #0]
 800d3e2:	3334      	adds	r3, #52	@ 0x34
 800d3e4:	681b      	ldr	r3, [r3, #0]
 800d3e6:	6878      	ldr	r0, [r7, #4]
 800d3e8:	4798      	blx	r3
}
 800d3ea:	bf00      	nop
 800d3ec:	3708      	adds	r7, #8
 800d3ee:	46bd      	mov	sp, r7
 800d3f0:	bd80      	pop	{r7, pc}

0800d3f2 <_ZN15InitialViewBase15changeToScreen1Ev>:

void InitialViewBase::changeToScreen1()
{
 800d3f2:	b580      	push	{r7, lr}
 800d3f4:	b082      	sub	sp, #8
 800d3f6:	af00      	add	r7, sp, #0
 800d3f8:	6078      	str	r0, [r7, #4]
    //Interaction1
    //When changeToScreen1 is called change screen to Screen1
    //Go to Screen1 with block transition
    application().gotoScreen1ScreenBlockTransition();
 800d3fa:	6878      	ldr	r0, [r7, #4]
 800d3fc:	f7ff fe4c 	bl	800d098 <_ZN15InitialViewBase11applicationEv>
 800d400:	4603      	mov	r3, r0
 800d402:	4618      	mov	r0, r3
 800d404:	f7fe fcde 	bl	800bdc4 <_ZN23FrontendApplicationBase32gotoScreen1ScreenBlockTransitionEv>
}
 800d408:	bf00      	nop
 800d40a:	3708      	adds	r7, #8
 800d40c:	46bd      	mov	sp, r7
 800d40e:	bd80      	pop	{r7, pc}

0800d410 <_ZN15InitialViewBase16transitionBeginsEv>:

void InitialViewBase::transitionBegins()
{
 800d410:	b580      	push	{r7, lr}
 800d412:	b082      	sub	sp, #8
 800d414:	af00      	add	r7, sp, #0
 800d416:	6078      	str	r0, [r7, #4]
    //Interaction2
    //When screen transition begins fade circleProgress1
    //Fade circleProgress1 to alpha:255 with LinearIn easing in 500 ms (30 Ticks)
    circleProgress1.clearFadeAnimationEndedAction();
 800d418:	687b      	ldr	r3, [r7, #4]
 800d41a:	33b0      	adds	r3, #176	@ 0xb0
 800d41c:	4618      	mov	r0, r3
 800d41e:	f000 f95b 	bl	800d6d8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE29clearFadeAnimationEndedActionEv>
    circleProgress1.startFadeAnimation(255, 30, touchgfx::EasingEquations::linearEaseIn);
 800d422:	687b      	ldr	r3, [r7, #4]
 800d424:	f103 00b0 	add.w	r0, r3, #176	@ 0xb0
 800d428:	4b0a      	ldr	r3, [pc, #40]	@ (800d454 <_ZN15InitialViewBase16transitionBeginsEv+0x44>)
 800d42a:	221e      	movs	r2, #30
 800d42c:	21ff      	movs	r1, #255	@ 0xff
 800d42e:	f000 f961 	bl	800d6f4 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE18startFadeAnimationEhtPFstsstE>

    //Interaction3
    //When screen transition begins fade tiledImage1
    //Fade tiledImage1 to alpha:255 with LinearIn easing in 500 ms (30 Ticks)
    tiledImage1.clearFadeAnimationEndedAction();
 800d432:	687b      	ldr	r3, [r7, #4]
 800d434:	336c      	adds	r3, #108	@ 0x6c
 800d436:	4618      	mov	r0, r3
 800d438:	f000 f9a4 	bl	800d784 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE29clearFadeAnimationEndedActionEv>
    tiledImage1.startFadeAnimation(255, 30, touchgfx::EasingEquations::linearEaseIn);
 800d43c:	687b      	ldr	r3, [r7, #4]
 800d43e:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800d442:	4b04      	ldr	r3, [pc, #16]	@ (800d454 <_ZN15InitialViewBase16transitionBeginsEv+0x44>)
 800d444:	221e      	movs	r2, #30
 800d446:	21ff      	movs	r1, #255	@ 0xff
 800d448:	f000 f9a9 	bl	800d79e <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE18startFadeAnimationEhtPFstsstE>
}
 800d44c:	bf00      	nop
 800d44e:	3708      	adds	r7, #8
 800d450:	46bd      	mov	sp, r7
 800d452:	bd80      	pop	{r7, pc}
 800d454:	08017f07 	.word	0x08017f07

0800d458 <_ZN8touchgfx4ViewI16InitialPresenterEC1Ev>:
    View()
 800d458:	b580      	push	{r7, lr}
 800d45a:	b082      	sub	sp, #8
 800d45c:	af00      	add	r7, sp, #0
 800d45e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d460:	687b      	ldr	r3, [r7, #4]
 800d462:	4618      	mov	r0, r3
 800d464:	f00a fb70 	bl	8017b48 <_ZN8touchgfx6ScreenC1Ev>
 800d468:	4a05      	ldr	r2, [pc, #20]	@ (800d480 <_ZN8touchgfx4ViewI16InitialPresenterEC1Ev+0x28>)
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	601a      	str	r2, [r3, #0]
 800d46e:	687b      	ldr	r3, [r7, #4]
 800d470:	2200      	movs	r2, #0
 800d472:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800d474:	687b      	ldr	r3, [r7, #4]
 800d476:	4618      	mov	r0, r3
 800d478:	3708      	adds	r7, #8
 800d47a:	46bd      	mov	sp, r7
 800d47c:	bd80      	pop	{r7, pc}
 800d47e:	bf00      	nop
 800d480:	08029a38 	.word	0x08029a38

0800d484 <_ZN8touchgfx10TiledImageD1Ev>:
class TiledImage : public Image
 800d484:	b580      	push	{r7, lr}
 800d486:	b082      	sub	sp, #8
 800d488:	af00      	add	r7, sp, #0
 800d48a:	6078      	str	r0, [r7, #4]
 800d48c:	4a05      	ldr	r2, [pc, #20]	@ (800d4a4 <_ZN8touchgfx10TiledImageD1Ev+0x20>)
 800d48e:	687b      	ldr	r3, [r7, #4]
 800d490:	601a      	str	r2, [r3, #0]
 800d492:	687b      	ldr	r3, [r7, #4]
 800d494:	4618      	mov	r0, r3
 800d496:	f7ff fc13 	bl	800ccc0 <_ZN8touchgfx5ImageD1Ev>
 800d49a:	687b      	ldr	r3, [r7, #4]
 800d49c:	4618      	mov	r0, r3
 800d49e:	3708      	adds	r7, #8
 800d4a0:	46bd      	mov	sp, r7
 800d4a2:	bd80      	pop	{r7, pc}
 800d4a4:	0802aadc 	.word	0x0802aadc

0800d4a8 <_ZN8touchgfx10TiledImageD0Ev>:
 800d4a8:	b580      	push	{r7, lr}
 800d4aa:	b082      	sub	sp, #8
 800d4ac:	af00      	add	r7, sp, #0
 800d4ae:	6078      	str	r0, [r7, #4]
 800d4b0:	6878      	ldr	r0, [r7, #4]
 800d4b2:	f7ff ffe7 	bl	800d484 <_ZN8touchgfx10TiledImageD1Ev>
 800d4b6:	2130      	movs	r1, #48	@ 0x30
 800d4b8:	6878      	ldr	r0, [r7, #4]
 800d4ba:	f01a fadc 	bl	8027a76 <_ZdlPvj>
 800d4be:	687b      	ldr	r3, [r7, #4]
 800d4c0:	4618      	mov	r0, r3
 800d4c2:	3708      	adds	r7, #8
 800d4c4:	46bd      	mov	sp, r7
 800d4c6:	bd80      	pop	{r7, pc}

0800d4c8 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEEC1Ev>:
 */
template <class T>
class FadeAnimator : public T
{
public:
    FadeAnimator()
 800d4c8:	b590      	push	{r4, r7, lr}
 800d4ca:	b085      	sub	sp, #20
 800d4cc:	af00      	add	r7, sp, #0
 800d4ce:	6078      	str	r0, [r7, #4]
        : T(),
          fadeAnimationRunning(false),
          fadeAnimationCounter(0),
          fadeAnimationDelay(0),
          fadeAnimationEndedCallback(0)
 800d4d0:	687c      	ldr	r4, [r7, #4]
 800d4d2:	f107 030c 	add.w	r3, r7, #12
 800d4d6:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800d4da:	4618      	mov	r0, r3
 800d4dc:	f7ff f8c2 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800d4e0:	f107 030c 	add.w	r3, r7, #12
 800d4e4:	4619      	mov	r1, r3
 800d4e6:	4620      	mov	r0, r4
 800d4e8:	f7ff fc0c 	bl	800cd04 <_ZN8touchgfx10TiledImageC1ERKNS_6BitmapE>
 800d4ec:	4a0a      	ldr	r2, [pc, #40]	@ (800d518 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEEC1Ev+0x50>)
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	601a      	str	r2, [r3, #0]
          fadeAnimationRunning(false),
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	2200      	movs	r2, #0
 800d4f6:	f883 202e 	strb.w	r2, [r3, #46]	@ 0x2e
          fadeAnimationCounter(0),
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	2200      	movs	r2, #0
 800d4fe:	861a      	strh	r2, [r3, #48]	@ 0x30
          fadeAnimationDelay(0),
 800d500:	687b      	ldr	r3, [r7, #4]
 800d502:	2200      	movs	r2, #0
 800d504:	865a      	strh	r2, [r3, #50]	@ 0x32
          fadeAnimationEndedCallback(0)
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	2200      	movs	r2, #0
 800d50a:	641a      	str	r2, [r3, #64]	@ 0x40
    {
    }
 800d50c:	687b      	ldr	r3, [r7, #4]
 800d50e:	4618      	mov	r0, r3
 800d510:	3714      	adds	r7, #20
 800d512:	46bd      	mov	sp, r7
 800d514:	bd90      	pop	{r4, r7, pc}
 800d516:	bf00      	nop
 800d518:	080299ac 	.word	0x080299ac

0800d51c <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800d51c:	b580      	push	{r7, lr}
 800d51e:	b082      	sub	sp, #8
 800d520:	af00      	add	r7, sp, #0
 800d522:	6078      	str	r0, [r7, #4]
 800d524:	4a05      	ldr	r2, [pc, #20]	@ (800d53c <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800d526:	687b      	ldr	r3, [r7, #4]
 800d528:	601a      	str	r2, [r3, #0]
 800d52a:	687b      	ldr	r3, [r7, #4]
 800d52c:	4618      	mov	r0, r3
 800d52e:	f7ff f8d9 	bl	800c6e4 <_ZN8touchgfx8DrawableD1Ev>
 800d532:	687b      	ldr	r3, [r7, #4]
 800d534:	4618      	mov	r0, r3
 800d536:	3708      	adds	r7, #8
 800d538:	46bd      	mov	sp, r7
 800d53a:	bd80      	pop	{r7, pc}
 800d53c:	0802a6ac 	.word	0x0802a6ac

0800d540 <_ZN8touchgfx9ContainerD0Ev>:
 800d540:	b580      	push	{r7, lr}
 800d542:	b082      	sub	sp, #8
 800d544:	af00      	add	r7, sp, #0
 800d546:	6078      	str	r0, [r7, #4]
 800d548:	6878      	ldr	r0, [r7, #4]
 800d54a:	f7ff ffe7 	bl	800d51c <_ZN8touchgfx9ContainerD1Ev>
 800d54e:	212c      	movs	r1, #44	@ 0x2c
 800d550:	6878      	ldr	r0, [r7, #4]
 800d552:	f01a fa90 	bl	8027a76 <_ZdlPvj>
 800d556:	687b      	ldr	r3, [r7, #4]
 800d558:	4618      	mov	r0, r3
 800d55a:	3708      	adds	r7, #8
 800d55c:	46bd      	mov	sp, r7
 800d55e:	bd80      	pop	{r7, pc}

0800d560 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
class AbstractProgressIndicator : public Container
 800d560:	b580      	push	{r7, lr}
 800d562:	b082      	sub	sp, #8
 800d564:	af00      	add	r7, sp, #0
 800d566:	6078      	str	r0, [r7, #4]
 800d568:	4a0a      	ldr	r2, [pc, #40]	@ (800d594 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev+0x34>)
 800d56a:	687b      	ldr	r3, [r7, #4]
 800d56c:	601a      	str	r2, [r3, #0]
 800d56e:	687b      	ldr	r3, [r7, #4]
 800d570:	3358      	adds	r3, #88	@ 0x58
 800d572:	4618      	mov	r0, r3
 800d574:	f7ff ffd2 	bl	800d51c <_ZN8touchgfx9ContainerD1Ev>
 800d578:	687b      	ldr	r3, [r7, #4]
 800d57a:	332c      	adds	r3, #44	@ 0x2c
 800d57c:	4618      	mov	r0, r3
 800d57e:	f7ff fb9f 	bl	800ccc0 <_ZN8touchgfx5ImageD1Ev>
 800d582:	687b      	ldr	r3, [r7, #4]
 800d584:	4618      	mov	r0, r3
 800d586:	f7ff ffc9 	bl	800d51c <_ZN8touchgfx9ContainerD1Ev>
 800d58a:	687b      	ldr	r3, [r7, #4]
 800d58c:	4618      	mov	r0, r3
 800d58e:	3708      	adds	r7, #8
 800d590:	46bd      	mov	sp, r7
 800d592:	bd80      	pop	{r7, pc}
 800d594:	0802a5d8 	.word	0x0802a5d8

0800d598 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800d598:	b580      	push	{r7, lr}
 800d59a:	b082      	sub	sp, #8
 800d59c:	af00      	add	r7, sp, #0
 800d59e:	6078      	str	r0, [r7, #4]
 800d5a0:	6878      	ldr	r0, [r7, #4]
 800d5a2:	f7ff ffdd 	bl	800d560 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d5a6:	21b4      	movs	r1, #180	@ 0xb4
 800d5a8:	6878      	ldr	r0, [r7, #4]
 800d5aa:	f01a fa64 	bl	8027a76 <_ZdlPvj>
 800d5ae:	687b      	ldr	r3, [r7, #4]
 800d5b0:	4618      	mov	r0, r3
 800d5b2:	3708      	adds	r7, #8
 800d5b4:	46bd      	mov	sp, r7
 800d5b6:	bd80      	pop	{r7, pc}

0800d5b8 <_ZN8touchgfx12CanvasWidgetD1Ev>:
 * Class for drawing complex polygons on the display using CanvasWidgetRenderer. The
 * CanvasWidget is used by passing it to a Canvas object, drawing the outline of the
 * object and then having CanvasWidget render the outline on the display using the
 * assigned painter.
 */
class CanvasWidget : public Widget
 800d5b8:	b580      	push	{r7, lr}
 800d5ba:	b082      	sub	sp, #8
 800d5bc:	af00      	add	r7, sp, #0
 800d5be:	6078      	str	r0, [r7, #4]
 800d5c0:	4a05      	ldr	r2, [pc, #20]	@ (800d5d8 <_ZN8touchgfx12CanvasWidgetD1Ev+0x20>)
 800d5c2:	687b      	ldr	r3, [r7, #4]
 800d5c4:	601a      	str	r2, [r3, #0]
 800d5c6:	687b      	ldr	r3, [r7, #4]
 800d5c8:	4618      	mov	r0, r3
 800d5ca:	f7ff fad1 	bl	800cb70 <_ZN8touchgfx6WidgetD1Ev>
 800d5ce:	687b      	ldr	r3, [r7, #4]
 800d5d0:	4618      	mov	r0, r3
 800d5d2:	3708      	adds	r7, #8
 800d5d4:	46bd      	mov	sp, r7
 800d5d6:	bd80      	pop	{r7, pc}
 800d5d8:	0802a9fc 	.word	0x0802a9fc

0800d5dc <_ZN8touchgfx12CanvasWidgetD0Ev>:
 800d5dc:	b580      	push	{r7, lr}
 800d5de:	b082      	sub	sp, #8
 800d5e0:	af00      	add	r7, sp, #0
 800d5e2:	6078      	str	r0, [r7, #4]
 800d5e4:	6878      	ldr	r0, [r7, #4]
 800d5e6:	f7ff ffe7 	bl	800d5b8 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d5ea:	212c      	movs	r1, #44	@ 0x2c
 800d5ec:	6878      	ldr	r0, [r7, #4]
 800d5ee:	f01a fa42 	bl	8027a76 <_ZdlPvj>
 800d5f2:	687b      	ldr	r3, [r7, #4]
 800d5f4:	4618      	mov	r0, r3
 800d5f6:	3708      	adds	r7, #8
 800d5f8:	46bd      	mov	sp, r7
 800d5fa:	bd80      	pop	{r7, pc}

0800d5fc <_ZN8touchgfx6CircleD1Ev>:
 *            int x, y, r;
 *            circle.getCenter(&x, &y); // Will return (1, 1)
 *            circle.getRadius(&r); // Will return 0
 *       @endcode.
 */
class Circle : public CanvasWidget
 800d5fc:	b580      	push	{r7, lr}
 800d5fe:	b082      	sub	sp, #8
 800d600:	af00      	add	r7, sp, #0
 800d602:	6078      	str	r0, [r7, #4]
 800d604:	4a05      	ldr	r2, [pc, #20]	@ (800d61c <_ZN8touchgfx6CircleD1Ev+0x20>)
 800d606:	687b      	ldr	r3, [r7, #4]
 800d608:	601a      	str	r2, [r3, #0]
 800d60a:	687b      	ldr	r3, [r7, #4]
 800d60c:	4618      	mov	r0, r3
 800d60e:	f7ff ffd3 	bl	800d5b8 <_ZN8touchgfx12CanvasWidgetD1Ev>
 800d612:	687b      	ldr	r3, [r7, #4]
 800d614:	4618      	mov	r0, r3
 800d616:	3708      	adds	r7, #8
 800d618:	46bd      	mov	sp, r7
 800d61a:	bd80      	pop	{r7, pc}
 800d61c:	0802a984 	.word	0x0802a984

0800d620 <_ZN8touchgfx6CircleD0Ev>:
 800d620:	b580      	push	{r7, lr}
 800d622:	b082      	sub	sp, #8
 800d624:	af00      	add	r7, sp, #0
 800d626:	6078      	str	r0, [r7, #4]
 800d628:	6878      	ldr	r0, [r7, #4]
 800d62a:	f7ff ffe7 	bl	800d5fc <_ZN8touchgfx6CircleD1Ev>
 800d62e:	2148      	movs	r1, #72	@ 0x48
 800d630:	6878      	ldr	r0, [r7, #4]
 800d632:	f01a fa20 	bl	8027a76 <_ZdlPvj>
 800d636:	687b      	ldr	r3, [r7, #4]
 800d638:	4618      	mov	r0, r3
 800d63a:	3708      	adds	r7, #8
 800d63c:	46bd      	mov	sp, r7
 800d63e:	bd80      	pop	{r7, pc}

0800d640 <_ZN8touchgfx14CircleProgressD1Ev>:
class CircleProgress : public AbstractProgressIndicator
 800d640:	b580      	push	{r7, lr}
 800d642:	b082      	sub	sp, #8
 800d644:	af00      	add	r7, sp, #0
 800d646:	6078      	str	r0, [r7, #4]
 800d648:	4a08      	ldr	r2, [pc, #32]	@ (800d66c <_ZN8touchgfx14CircleProgressD1Ev+0x2c>)
 800d64a:	687b      	ldr	r3, [r7, #4]
 800d64c:	601a      	str	r2, [r3, #0]
 800d64e:	687b      	ldr	r3, [r7, #4]
 800d650:	33b4      	adds	r3, #180	@ 0xb4
 800d652:	4618      	mov	r0, r3
 800d654:	f7ff ffd2 	bl	800d5fc <_ZN8touchgfx6CircleD1Ev>
 800d658:	687b      	ldr	r3, [r7, #4]
 800d65a:	4618      	mov	r0, r3
 800d65c:	f7ff ff80 	bl	800d560 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>
 800d660:	687b      	ldr	r3, [r7, #4]
 800d662:	4618      	mov	r0, r3
 800d664:	3708      	adds	r7, #8
 800d666:	46bd      	mov	sp, r7
 800d668:	bd80      	pop	{r7, pc}
 800d66a:	bf00      	nop
 800d66c:	0802a4d4 	.word	0x0802a4d4

0800d670 <_ZN8touchgfx14CircleProgressD0Ev>:
 800d670:	b580      	push	{r7, lr}
 800d672:	b082      	sub	sp, #8
 800d674:	af00      	add	r7, sp, #0
 800d676:	6078      	str	r0, [r7, #4]
 800d678:	6878      	ldr	r0, [r7, #4]
 800d67a:	f7ff ffe1 	bl	800d640 <_ZN8touchgfx14CircleProgressD1Ev>
 800d67e:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800d682:	6878      	ldr	r0, [r7, #4]
 800d684:	f01a f9f7 	bl	8027a76 <_ZdlPvj>
 800d688:	687b      	ldr	r3, [r7, #4]
 800d68a:	4618      	mov	r0, r3
 800d68c:	3708      	adds	r7, #8
 800d68e:	46bd      	mov	sp, r7
 800d690:	bd80      	pop	{r7, pc}
	...

0800d694 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEEC1Ev>:
    FadeAnimator()
 800d694:	b580      	push	{r7, lr}
 800d696:	b082      	sub	sp, #8
 800d698:	af00      	add	r7, sp, #0
 800d69a:	6078      	str	r0, [r7, #4]
          fadeAnimationEndedCallback(0)
 800d69c:	687b      	ldr	r3, [r7, #4]
 800d69e:	4618      	mov	r0, r3
 800d6a0:	f004 fb08 	bl	8011cb4 <_ZN8touchgfx14CircleProgressC1Ev>
 800d6a4:	4a0b      	ldr	r2, [pc, #44]	@ (800d6d4 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEEC1Ev+0x40>)
 800d6a6:	687b      	ldr	r3, [r7, #4]
 800d6a8:	601a      	str	r2, [r3, #0]
          fadeAnimationRunning(false),
 800d6aa:	687b      	ldr	r3, [r7, #4]
 800d6ac:	2200      	movs	r2, #0
 800d6ae:	f883 2100 	strb.w	r2, [r3, #256]	@ 0x100
          fadeAnimationCounter(0),
 800d6b2:	687b      	ldr	r3, [r7, #4]
 800d6b4:	2200      	movs	r2, #0
 800d6b6:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
          fadeAnimationDelay(0),
 800d6ba:	687b      	ldr	r3, [r7, #4]
 800d6bc:	2200      	movs	r2, #0
 800d6be:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
          fadeAnimationEndedCallback(0)
 800d6c2:	687b      	ldr	r3, [r7, #4]
 800d6c4:	2200      	movs	r2, #0
 800d6c6:	f8c3 2110 	str.w	r2, [r3, #272]	@ 0x110
    }
 800d6ca:	687b      	ldr	r3, [r7, #4]
 800d6cc:	4618      	mov	r0, r3
 800d6ce:	3708      	adds	r7, #8
 800d6d0:	46bd      	mov	sp, r7
 800d6d2:	bd80      	pop	{r7, pc}
 800d6d4:	080298a0 	.word	0x080298a0

0800d6d8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE29clearFadeAnimationEndedActionEv>:
     *
     * Clears the fade animation ended action previously set by setFadeAnimationEndedAction.
     *
     * @see setFadeAnimationEndedAction
     */
    void clearFadeAnimationEndedAction()
 800d6d8:	b480      	push	{r7}
 800d6da:	b083      	sub	sp, #12
 800d6dc:	af00      	add	r7, sp, #0
 800d6de:	6078      	str	r0, [r7, #4]
    {
        fadeAnimationEndedCallback = 0;
 800d6e0:	687b      	ldr	r3, [r7, #4]
 800d6e2:	2200      	movs	r2, #0
 800d6e4:	f8c3 2110 	str.w	r2, [r3, #272]	@ 0x110
    }
 800d6e8:	bf00      	nop
 800d6ea:	370c      	adds	r7, #12
 800d6ec:	46bd      	mov	sp, r7
 800d6ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6f2:	4770      	bx	lr

0800d6f4 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE18startFadeAnimationEhtPFstsstE>:
     * @param  duration                 The duration of the animation measured in ticks.
     * @param  alphaProgressionEquation (Optional) The equation that describes the
     *                                  development of the alpha value during the animation.
     *                                  Default is EasingEquations::linearEaseNone.
     */
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 800d6f4:	b580      	push	{r7, lr}
 800d6f6:	b084      	sub	sp, #16
 800d6f8:	af00      	add	r7, sp, #0
 800d6fa:	60f8      	str	r0, [r7, #12]
 800d6fc:	607b      	str	r3, [r7, #4]
 800d6fe:	460b      	mov	r3, r1
 800d700:	72fb      	strb	r3, [r7, #11]
 800d702:	4613      	mov	r3, r2
 800d704:	813b      	strh	r3, [r7, #8]
    {
        if (!fadeAnimationRunning)
 800d706:	68fb      	ldr	r3, [r7, #12]
 800d708:	f893 3100 	ldrb.w	r3, [r3, #256]	@ 0x100
 800d70c:	f083 0301 	eor.w	r3, r3, #1
 800d710:	b2db      	uxtb	r3, r3
 800d712:	2b00      	cmp	r3, #0
 800d714:	d007      	beq.n	800d726 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE18startFadeAnimationEhtPFstsstE+0x32>
        {
            Application::getInstance()->registerTimerWidget(this);
 800d716:	f008 fe01 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800d71a:	4602      	mov	r2, r0
 800d71c:	68fb      	ldr	r3, [r7, #12]
 800d71e:	4619      	mov	r1, r3
 800d720:	4610      	mov	r0, r2
 800d722:	f7ff f975 	bl	800ca10 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        }

        fadeAnimationCounter = 0;
 800d726:	68fb      	ldr	r3, [r7, #12]
 800d728:	2200      	movs	r2, #0
 800d72a:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
        fadeAnimationStartAlpha = T::getAlpha();
 800d72e:	68fb      	ldr	r3, [r7, #12]
 800d730:	4618      	mov	r0, r3
 800d732:	f004 fb36 	bl	8011da2 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>
 800d736:	4603      	mov	r3, r0
 800d738:	b21a      	sxth	r2, r3
 800d73a:	68fb      	ldr	r3, [r7, #12]
 800d73c:	f8a3 2108 	strh.w	r2, [r3, #264]	@ 0x108
        fadeAnimationEndAlpha = endAlpha;
 800d740:	7afb      	ldrb	r3, [r7, #11]
 800d742:	b21a      	sxth	r2, r3
 800d744:	68fb      	ldr	r3, [r7, #12]
 800d746:	f8a3 210a 	strh.w	r2, [r3, #266]	@ 0x10a
        fadeAnimationDuration = duration;
 800d74a:	68fb      	ldr	r3, [r7, #12]
 800d74c:	893a      	ldrh	r2, [r7, #8]
 800d74e:	f8a3 2106 	strh.w	r2, [r3, #262]	@ 0x106
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 800d752:	68fb      	ldr	r3, [r7, #12]
 800d754:	687a      	ldr	r2, [r7, #4]
 800d756:	f8c3 210c 	str.w	r2, [r3, #268]	@ 0x10c

        fadeAnimationRunning = true;
 800d75a:	68fb      	ldr	r3, [r7, #12]
 800d75c:	2201      	movs	r2, #1
 800d75e:	f883 2100 	strb.w	r2, [r3, #256]	@ 0x100

        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 800d762:	68fb      	ldr	r3, [r7, #12]
 800d764:	f8b3 3104 	ldrh.w	r3, [r3, #260]	@ 0x104
 800d768:	2b00      	cmp	r3, #0
 800d76a:	d107      	bne.n	800d77c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE18startFadeAnimationEhtPFstsstE+0x88>
 800d76c:	68fb      	ldr	r3, [r7, #12]
 800d76e:	f8b3 3106 	ldrh.w	r3, [r3, #262]	@ 0x106
 800d772:	2b00      	cmp	r3, #0
 800d774:	d102      	bne.n	800d77c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE18startFadeAnimationEhtPFstsstE+0x88>
        {
            nextFadeAnimationStep(); // Set end alpha and shut down
 800d776:	68f8      	ldr	r0, [r7, #12]
 800d778:	f000 f852 	bl	800d820 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv>
        }
    }
 800d77c:	bf00      	nop
 800d77e:	3710      	adds	r7, #16
 800d780:	46bd      	mov	sp, r7
 800d782:	bd80      	pop	{r7, pc}

0800d784 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE29clearFadeAnimationEndedActionEv>:
    void clearFadeAnimationEndedAction()
 800d784:	b480      	push	{r7}
 800d786:	b083      	sub	sp, #12
 800d788:	af00      	add	r7, sp, #0
 800d78a:	6078      	str	r0, [r7, #4]
        fadeAnimationEndedCallback = 0;
 800d78c:	687b      	ldr	r3, [r7, #4]
 800d78e:	2200      	movs	r2, #0
 800d790:	641a      	str	r2, [r3, #64]	@ 0x40
    }
 800d792:	bf00      	nop
 800d794:	370c      	adds	r7, #12
 800d796:	46bd      	mov	sp, r7
 800d798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d79c:	4770      	bx	lr

0800d79e <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE18startFadeAnimationEhtPFstsstE>:
    void startFadeAnimation(uint8_t endAlpha, uint16_t duration, EasingEquation alphaProgressionEquation = &EasingEquations::linearEaseNone)
 800d79e:	b580      	push	{r7, lr}
 800d7a0:	b084      	sub	sp, #16
 800d7a2:	af00      	add	r7, sp, #0
 800d7a4:	60f8      	str	r0, [r7, #12]
 800d7a6:	607b      	str	r3, [r7, #4]
 800d7a8:	460b      	mov	r3, r1
 800d7aa:	72fb      	strb	r3, [r7, #11]
 800d7ac:	4613      	mov	r3, r2
 800d7ae:	813b      	strh	r3, [r7, #8]
        if (!fadeAnimationRunning)
 800d7b0:	68fb      	ldr	r3, [r7, #12]
 800d7b2:	f893 302e 	ldrb.w	r3, [r3, #46]	@ 0x2e
 800d7b6:	f083 0301 	eor.w	r3, r3, #1
 800d7ba:	b2db      	uxtb	r3, r3
 800d7bc:	2b00      	cmp	r3, #0
 800d7be:	d007      	beq.n	800d7d0 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE18startFadeAnimationEhtPFstsstE+0x32>
            Application::getInstance()->registerTimerWidget(this);
 800d7c0:	f008 fdac 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800d7c4:	4602      	mov	r2, r0
 800d7c6:	68fb      	ldr	r3, [r7, #12]
 800d7c8:	4619      	mov	r1, r3
 800d7ca:	4610      	mov	r0, r2
 800d7cc:	f7ff f920 	bl	800ca10 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        fadeAnimationCounter = 0;
 800d7d0:	68fb      	ldr	r3, [r7, #12]
 800d7d2:	2200      	movs	r2, #0
 800d7d4:	861a      	strh	r2, [r3, #48]	@ 0x30
        fadeAnimationStartAlpha = T::getAlpha();
 800d7d6:	68fb      	ldr	r3, [r7, #12]
 800d7d8:	4618      	mov	r0, r3
 800d7da:	f7ff fa53 	bl	800cc84 <_ZNK8touchgfx5Image8getAlphaEv>
 800d7de:	4603      	mov	r3, r0
 800d7e0:	b21a      	sxth	r2, r3
 800d7e2:	68fb      	ldr	r3, [r7, #12]
 800d7e4:	86da      	strh	r2, [r3, #54]	@ 0x36
        fadeAnimationEndAlpha = endAlpha;
 800d7e6:	7afb      	ldrb	r3, [r7, #11]
 800d7e8:	b21a      	sxth	r2, r3
 800d7ea:	68fb      	ldr	r3, [r7, #12]
 800d7ec:	871a      	strh	r2, [r3, #56]	@ 0x38
        fadeAnimationDuration = duration;
 800d7ee:	68fb      	ldr	r3, [r7, #12]
 800d7f0:	893a      	ldrh	r2, [r7, #8]
 800d7f2:	869a      	strh	r2, [r3, #52]	@ 0x34
        fadeAnimationAlphaEquation = alphaProgressionEquation;
 800d7f4:	68fb      	ldr	r3, [r7, #12]
 800d7f6:	687a      	ldr	r2, [r7, #4]
 800d7f8:	63da      	str	r2, [r3, #60]	@ 0x3c
        fadeAnimationRunning = true;
 800d7fa:	68fb      	ldr	r3, [r7, #12]
 800d7fc:	2201      	movs	r2, #1
 800d7fe:	f883 202e 	strb.w	r2, [r3, #46]	@ 0x2e
        if (fadeAnimationDelay == 0 && fadeAnimationDuration == 0)
 800d802:	68fb      	ldr	r3, [r7, #12]
 800d804:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 800d806:	2b00      	cmp	r3, #0
 800d808:	d106      	bne.n	800d818 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE18startFadeAnimationEhtPFstsstE+0x7a>
 800d80a:	68fb      	ldr	r3, [r7, #12]
 800d80c:	8e9b      	ldrh	r3, [r3, #52]	@ 0x34
 800d80e:	2b00      	cmp	r3, #0
 800d810:	d102      	bne.n	800d818 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE18startFadeAnimationEhtPFstsstE+0x7a>
            nextFadeAnimationStep(); // Set end alpha and shut down
 800d812:	68f8      	ldr	r0, [r7, #12]
 800d814:	f000 f8b6 	bl	800d984 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv>
    }
 800d818:	bf00      	nop
 800d81a:	3710      	adds	r7, #16
 800d81c:	46bd      	mov	sp, r7
 800d81e:	bd80      	pop	{r7, pc}

0800d820 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv>:
        nextFadeAnimationStep();
    }

protected:
    /** Execute next step in fade animation and stop the timer if necessary. */
    void nextFadeAnimationStep()
 800d820:	b5b0      	push	{r4, r5, r7, lr}
 800d822:	b084      	sub	sp, #16
 800d824:	af00      	add	r7, sp, #0
 800d826:	6078      	str	r0, [r7, #4]
    {
        if (fadeAnimationRunning)
 800d828:	687b      	ldr	r3, [r7, #4]
 800d82a:	f893 3100 	ldrb.w	r3, [r3, #256]	@ 0x100
 800d82e:	2b00      	cmp	r3, #0
 800d830:	f000 80a4 	beq.w	800d97c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x15c>
        {
            fadeAnimationCounter++;
 800d834:	687b      	ldr	r3, [r7, #4]
 800d836:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800d83a:	3301      	adds	r3, #1
 800d83c:	b29a      	uxth	r2, r3
 800d83e:	687b      	ldr	r3, [r7, #4]
 800d840:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800d844:	687b      	ldr	r3, [r7, #4]
 800d846:	f8b3 2102 	ldrh.w	r2, [r3, #258]	@ 0x102
 800d84a:	687b      	ldr	r3, [r7, #4]
 800d84c:	f8b3 3104 	ldrh.w	r3, [r3, #260]	@ 0x104
 800d850:	429a      	cmp	r2, r3
 800d852:	f0c0 8093 	bcc.w	800d97c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x15c>
            {
                // Adjust the used animationCounter for the startup delay
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;
 800d856:	687b      	ldr	r3, [r7, #4]
 800d858:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800d85c:	461a      	mov	r2, r3
 800d85e:	687b      	ldr	r3, [r7, #4]
 800d860:	f8b3 3104 	ldrh.w	r3, [r3, #260]	@ 0x104
 800d864:	1ad3      	subs	r3, r2, r3
 800d866:	60fb      	str	r3, [r7, #12]

                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 800d868:	687b      	ldr	r3, [r7, #4]
 800d86a:	f9b3 3108 	ldrsh.w	r3, [r3, #264]	@ 0x108
 800d86e:	b29c      	uxth	r4, r3
 800d870:	687b      	ldr	r3, [r7, #4]
 800d872:	f8d3 510c 	ldr.w	r5, [r3, #268]	@ 0x10c
 800d876:	68fb      	ldr	r3, [r7, #12]
 800d878:	b298      	uxth	r0, r3
 800d87a:	687b      	ldr	r3, [r7, #4]
 800d87c:	f9b3 310a 	ldrsh.w	r3, [r3, #266]	@ 0x10a
 800d880:	b29a      	uxth	r2, r3
 800d882:	687b      	ldr	r3, [r7, #4]
 800d884:	f9b3 3108 	ldrsh.w	r3, [r3, #264]	@ 0x108
 800d888:	b29b      	uxth	r3, r3
 800d88a:	1ad3      	subs	r3, r2, r3
 800d88c:	b29b      	uxth	r3, r3
 800d88e:	b21a      	sxth	r2, r3
 800d890:	687b      	ldr	r3, [r7, #4]
 800d892:	f8b3 3106 	ldrh.w	r3, [r3, #262]	@ 0x106
 800d896:	2100      	movs	r1, #0
 800d898:	47a8      	blx	r5
 800d89a:	4603      	mov	r3, r0
 800d89c:	b29b      	uxth	r3, r3
 800d89e:	4423      	add	r3, r4
 800d8a0:	b29b      	uxth	r3, r3
 800d8a2:	817b      	strh	r3, [r7, #10]

                if (T::getAlpha() != newAlpha)
 800d8a4:	687b      	ldr	r3, [r7, #4]
 800d8a6:	4618      	mov	r0, r3
 800d8a8:	f004 fa7b 	bl	8011da2 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>
 800d8ac:	4603      	mov	r3, r0
 800d8ae:	461a      	mov	r2, r3
 800d8b0:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800d8b4:	429a      	cmp	r2, r3
 800d8b6:	bf14      	ite	ne
 800d8b8:	2301      	movne	r3, #1
 800d8ba:	2300      	moveq	r3, #0
 800d8bc:	b2db      	uxtb	r3, r3
 800d8be:	2b00      	cmp	r3, #0
 800d8c0:	d01a      	beq.n	800d8f8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0xd8>
                {
                    if (newAlpha == 0)
 800d8c2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800d8c6:	2b00      	cmp	r3, #0
 800d8c8:	d10b      	bne.n	800d8e2 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0xc2>
                    {
                        // InvalidateContent before it becomes invisible
                        T::invalidateContent();
 800d8ca:	687b      	ldr	r3, [r7, #4]
 800d8cc:	4618      	mov	r0, r3
 800d8ce:	f7ff fa33 	bl	800cd38 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>
                        T::setAlpha((uint8_t)newAlpha);
 800d8d2:	687b      	ldr	r3, [r7, #4]
 800d8d4:	897a      	ldrh	r2, [r7, #10]
 800d8d6:	b2d2      	uxtb	r2, r2
 800d8d8:	4611      	mov	r1, r2
 800d8da:	4618      	mov	r0, r3
 800d8dc:	f004 f988 	bl	8011bf0 <_ZN8touchgfx14CircleProgress8setAlphaEh>
 800d8e0:	e00a      	b.n	800d8f8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0xd8>
                    }
                    else
                    {
                        // InvalidateContent after we are sure that it is visible
                        T::setAlpha((uint8_t)newAlpha);
 800d8e2:	687b      	ldr	r3, [r7, #4]
 800d8e4:	897a      	ldrh	r2, [r7, #10]
 800d8e6:	b2d2      	uxtb	r2, r2
 800d8e8:	4611      	mov	r1, r2
 800d8ea:	4618      	mov	r0, r3
 800d8ec:	f004 f980 	bl	8011bf0 <_ZN8touchgfx14CircleProgress8setAlphaEh>
                        T::invalidateContent();
 800d8f0:	687b      	ldr	r3, [r7, #4]
 800d8f2:	4618      	mov	r0, r3
 800d8f4:	f7ff fa20 	bl	800cd38 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>
                    }
                }

                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 800d8f8:	687b      	ldr	r3, [r7, #4]
 800d8fa:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 800d8fe:	461a      	mov	r2, r3
 800d900:	687b      	ldr	r3, [r7, #4]
 800d902:	f8b3 3104 	ldrh.w	r3, [r3, #260]	@ 0x104
 800d906:	4619      	mov	r1, r3
 800d908:	687b      	ldr	r3, [r7, #4]
 800d90a:	f8b3 3106 	ldrh.w	r3, [r3, #262]	@ 0x106
 800d90e:	440b      	add	r3, r1
 800d910:	429a      	cmp	r2, r3
 800d912:	d333      	bcc.n	800d97c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x15c>
                {
                    // End of animation
                    fadeAnimationRunning = false;
 800d914:	687b      	ldr	r3, [r7, #4]
 800d916:	2200      	movs	r2, #0
 800d918:	f883 2100 	strb.w	r2, [r3, #256]	@ 0x100
                    fadeAnimationDuration = 0;
 800d91c:	687b      	ldr	r3, [r7, #4]
 800d91e:	2200      	movs	r2, #0
 800d920:	f8a3 2106 	strh.w	r2, [r3, #262]	@ 0x106
                    Application::getInstance()->unregisterTimerWidget(this);
 800d924:	f008 fcfa 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800d928:	4602      	mov	r2, r0
 800d92a:	687b      	ldr	r3, [r7, #4]
 800d92c:	4619      	mov	r1, r3
 800d92e:	4610      	mov	r0, r2
 800d930:	f7ff f87d 	bl	800ca2e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>

                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 800d934:	687b      	ldr	r3, [r7, #4]
 800d936:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800d93a:	2b00      	cmp	r3, #0
 800d93c:	d00f      	beq.n	800d95e <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x13e>
 800d93e:	687b      	ldr	r3, [r7, #4]
 800d940:	f8d3 2110 	ldr.w	r2, [r3, #272]	@ 0x110
 800d944:	687b      	ldr	r3, [r7, #4]
 800d946:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800d94a:	681b      	ldr	r3, [r3, #0]
 800d94c:	330c      	adds	r3, #12
 800d94e:	681b      	ldr	r3, [r3, #0]
 800d950:	4610      	mov	r0, r2
 800d952:	4798      	blx	r3
 800d954:	4603      	mov	r3, r0
 800d956:	2b00      	cmp	r3, #0
 800d958:	d001      	beq.n	800d95e <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x13e>
 800d95a:	2301      	movs	r3, #1
 800d95c:	e000      	b.n	800d960 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x140>
 800d95e:	2300      	movs	r3, #0
 800d960:	2b00      	cmp	r3, #0
 800d962:	d00b      	beq.n	800d97c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv+0x15c>
                    {
                        fadeAnimationEndedCallback->execute(*this);
 800d964:	687b      	ldr	r3, [r7, #4]
 800d966:	f8d3 2110 	ldr.w	r2, [r3, #272]	@ 0x110
 800d96a:	687b      	ldr	r3, [r7, #4]
 800d96c:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 800d970:	681b      	ldr	r3, [r3, #0]
 800d972:	3308      	adds	r3, #8
 800d974:	681b      	ldr	r3, [r3, #0]
 800d976:	6879      	ldr	r1, [r7, #4]
 800d978:	4610      	mov	r0, r2
 800d97a:	4798      	blx	r3
                    }
                }
            }
        }
    }
 800d97c:	bf00      	nop
 800d97e:	3710      	adds	r7, #16
 800d980:	46bd      	mov	sp, r7
 800d982:	bdb0      	pop	{r4, r5, r7, pc}

0800d984 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv>:
    void nextFadeAnimationStep()
 800d984:	b5b0      	push	{r4, r5, r7, lr}
 800d986:	b084      	sub	sp, #16
 800d988:	af00      	add	r7, sp, #0
 800d98a:	6078      	str	r0, [r7, #4]
        if (fadeAnimationRunning)
 800d98c:	687b      	ldr	r3, [r7, #4]
 800d98e:	f893 302e 	ldrb.w	r3, [r3, #46]	@ 0x2e
 800d992:	2b00      	cmp	r3, #0
 800d994:	f000 8093 	beq.w	800dabe <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x13a>
            fadeAnimationCounter++;
 800d998:	687b      	ldr	r3, [r7, #4]
 800d99a:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800d99c:	3301      	adds	r3, #1
 800d99e:	b29a      	uxth	r2, r3
 800d9a0:	687b      	ldr	r3, [r7, #4]
 800d9a2:	861a      	strh	r2, [r3, #48]	@ 0x30
            if (fadeAnimationCounter >= fadeAnimationDelay)
 800d9a4:	687b      	ldr	r3, [r7, #4]
 800d9a6:	8e1a      	ldrh	r2, [r3, #48]	@ 0x30
 800d9a8:	687b      	ldr	r3, [r7, #4]
 800d9aa:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 800d9ac:	429a      	cmp	r2, r3
 800d9ae:	f0c0 8086 	bcc.w	800dabe <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x13a>
                uint32_t actualAnimationCounter = fadeAnimationCounter - fadeAnimationDelay;
 800d9b2:	687b      	ldr	r3, [r7, #4]
 800d9b4:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800d9b6:	461a      	mov	r2, r3
 800d9b8:	687b      	ldr	r3, [r7, #4]
 800d9ba:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 800d9bc:	1ad3      	subs	r3, r2, r3
 800d9be:	60fb      	str	r3, [r7, #12]
                int16_t newAlpha = fadeAnimationStartAlpha + (int16_t)fadeAnimationAlphaEquation(actualAnimationCounter, 0, fadeAnimationEndAlpha - fadeAnimationStartAlpha, fadeAnimationDuration);
 800d9c0:	687b      	ldr	r3, [r7, #4]
 800d9c2:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	@ 0x36
 800d9c6:	b29c      	uxth	r4, r3
 800d9c8:	687b      	ldr	r3, [r7, #4]
 800d9ca:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 800d9cc:	68fb      	ldr	r3, [r7, #12]
 800d9ce:	b298      	uxth	r0, r3
 800d9d0:	687b      	ldr	r3, [r7, #4]
 800d9d2:	f9b3 3038 	ldrsh.w	r3, [r3, #56]	@ 0x38
 800d9d6:	b29a      	uxth	r2, r3
 800d9d8:	687b      	ldr	r3, [r7, #4]
 800d9da:	f9b3 3036 	ldrsh.w	r3, [r3, #54]	@ 0x36
 800d9de:	b29b      	uxth	r3, r3
 800d9e0:	1ad3      	subs	r3, r2, r3
 800d9e2:	b29b      	uxth	r3, r3
 800d9e4:	b21a      	sxth	r2, r3
 800d9e6:	687b      	ldr	r3, [r7, #4]
 800d9e8:	8e9b      	ldrh	r3, [r3, #52]	@ 0x34
 800d9ea:	2100      	movs	r1, #0
 800d9ec:	47a8      	blx	r5
 800d9ee:	4603      	mov	r3, r0
 800d9f0:	b29b      	uxth	r3, r3
 800d9f2:	4423      	add	r3, r4
 800d9f4:	b29b      	uxth	r3, r3
 800d9f6:	817b      	strh	r3, [r7, #10]
                if (T::getAlpha() != newAlpha)
 800d9f8:	687b      	ldr	r3, [r7, #4]
 800d9fa:	4618      	mov	r0, r3
 800d9fc:	f7ff f942 	bl	800cc84 <_ZNK8touchgfx5Image8getAlphaEv>
 800da00:	4603      	mov	r3, r0
 800da02:	461a      	mov	r2, r3
 800da04:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800da08:	429a      	cmp	r2, r3
 800da0a:	bf14      	ite	ne
 800da0c:	2301      	movne	r3, #1
 800da0e:	2300      	moveq	r3, #0
 800da10:	b2db      	uxtb	r3, r3
 800da12:	2b00      	cmp	r3, #0
 800da14:	d01a      	beq.n	800da4c <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0xc8>
                    if (newAlpha == 0)
 800da16:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800da1a:	2b00      	cmp	r3, #0
 800da1c:	d10b      	bne.n	800da36 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0xb2>
                        T::invalidateContent();
 800da1e:	687b      	ldr	r3, [r7, #4]
 800da20:	4618      	mov	r0, r3
 800da22:	f7ff f93c 	bl	800cc9e <_ZNK8touchgfx5Image17invalidateContentEv>
                        T::setAlpha((uint8_t)newAlpha);
 800da26:	687b      	ldr	r3, [r7, #4]
 800da28:	897a      	ldrh	r2, [r7, #10]
 800da2a:	b2d2      	uxtb	r2, r2
 800da2c:	4611      	mov	r1, r2
 800da2e:	4618      	mov	r0, r3
 800da30:	f7ff f918 	bl	800cc64 <_ZN8touchgfx5Image8setAlphaEh>
 800da34:	e00a      	b.n	800da4c <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0xc8>
                        T::setAlpha((uint8_t)newAlpha);
 800da36:	687b      	ldr	r3, [r7, #4]
 800da38:	897a      	ldrh	r2, [r7, #10]
 800da3a:	b2d2      	uxtb	r2, r2
 800da3c:	4611      	mov	r1, r2
 800da3e:	4618      	mov	r0, r3
 800da40:	f7ff f910 	bl	800cc64 <_ZN8touchgfx5Image8setAlphaEh>
                        T::invalidateContent();
 800da44:	687b      	ldr	r3, [r7, #4]
 800da46:	4618      	mov	r0, r3
 800da48:	f7ff f929 	bl	800cc9e <_ZNK8touchgfx5Image17invalidateContentEv>
                if (fadeAnimationCounter >= (uint32_t)(fadeAnimationDelay + fadeAnimationDuration))
 800da4c:	687b      	ldr	r3, [r7, #4]
 800da4e:	8e1b      	ldrh	r3, [r3, #48]	@ 0x30
 800da50:	461a      	mov	r2, r3
 800da52:	687b      	ldr	r3, [r7, #4]
 800da54:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
 800da56:	4619      	mov	r1, r3
 800da58:	687b      	ldr	r3, [r7, #4]
 800da5a:	8e9b      	ldrh	r3, [r3, #52]	@ 0x34
 800da5c:	440b      	add	r3, r1
 800da5e:	429a      	cmp	r2, r3
 800da60:	d32d      	bcc.n	800dabe <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x13a>
                    fadeAnimationRunning = false;
 800da62:	687b      	ldr	r3, [r7, #4]
 800da64:	2200      	movs	r2, #0
 800da66:	f883 202e 	strb.w	r2, [r3, #46]	@ 0x2e
                    fadeAnimationDuration = 0;
 800da6a:	687b      	ldr	r3, [r7, #4]
 800da6c:	2200      	movs	r2, #0
 800da6e:	869a      	strh	r2, [r3, #52]	@ 0x34
                    Application::getInstance()->unregisterTimerWidget(this);
 800da70:	f008 fc54 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800da74:	4602      	mov	r2, r0
 800da76:	687b      	ldr	r3, [r7, #4]
 800da78:	4619      	mov	r1, r3
 800da7a:	4610      	mov	r0, r2
 800da7c:	f7fe ffd7 	bl	800ca2e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
                    if (fadeAnimationEndedCallback && fadeAnimationEndedCallback->isValid())
 800da80:	687b      	ldr	r3, [r7, #4]
 800da82:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800da84:	2b00      	cmp	r3, #0
 800da86:	d00d      	beq.n	800daa4 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x120>
 800da88:	687b      	ldr	r3, [r7, #4]
 800da8a:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800da8c:	687b      	ldr	r3, [r7, #4]
 800da8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800da90:	681b      	ldr	r3, [r3, #0]
 800da92:	330c      	adds	r3, #12
 800da94:	681b      	ldr	r3, [r3, #0]
 800da96:	4610      	mov	r0, r2
 800da98:	4798      	blx	r3
 800da9a:	4603      	mov	r3, r0
 800da9c:	2b00      	cmp	r3, #0
 800da9e:	d001      	beq.n	800daa4 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x120>
 800daa0:	2301      	movs	r3, #1
 800daa2:	e000      	b.n	800daa6 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x122>
 800daa4:	2300      	movs	r3, #0
 800daa6:	2b00      	cmp	r3, #0
 800daa8:	d009      	beq.n	800dabe <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv+0x13a>
                        fadeAnimationEndedCallback->execute(*this);
 800daaa:	687b      	ldr	r3, [r7, #4]
 800daac:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800daae:	687b      	ldr	r3, [r7, #4]
 800dab0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800dab2:	681b      	ldr	r3, [r3, #0]
 800dab4:	3308      	adds	r3, #8
 800dab6:	681b      	ldr	r3, [r3, #0]
 800dab8:	6879      	ldr	r1, [r7, #4]
 800daba:	4610      	mov	r0, r2
 800dabc:	4798      	blx	r3
    }
 800dabe:	bf00      	nop
 800dac0:	3710      	adds	r7, #16
 800dac2:	46bd      	mov	sp, r7
 800dac4:	bdb0      	pop	{r4, r5, r7, pc}
	...

0800dac8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEED1Ev>:
class FadeAnimator : public T
 800dac8:	b580      	push	{r7, lr}
 800daca:	b082      	sub	sp, #8
 800dacc:	af00      	add	r7, sp, #0
 800dace:	6078      	str	r0, [r7, #4]
 800dad0:	4a05      	ldr	r2, [pc, #20]	@ (800dae8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEED1Ev+0x20>)
 800dad2:	687b      	ldr	r3, [r7, #4]
 800dad4:	601a      	str	r2, [r3, #0]
 800dad6:	687b      	ldr	r3, [r7, #4]
 800dad8:	4618      	mov	r0, r3
 800dada:	f7ff fdb1 	bl	800d640 <_ZN8touchgfx14CircleProgressD1Ev>
 800dade:	687b      	ldr	r3, [r7, #4]
 800dae0:	4618      	mov	r0, r3
 800dae2:	3708      	adds	r7, #8
 800dae4:	46bd      	mov	sp, r7
 800dae6:	bd80      	pop	{r7, pc}
 800dae8:	080298a0 	.word	0x080298a0

0800daec <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEED0Ev>:
 800daec:	b580      	push	{r7, lr}
 800daee:	b082      	sub	sp, #8
 800daf0:	af00      	add	r7, sp, #0
 800daf2:	6078      	str	r0, [r7, #4]
 800daf4:	6878      	ldr	r0, [r7, #4]
 800daf6:	f7ff ffe7 	bl	800dac8 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEED1Ev>
 800dafa:	f44f 718a 	mov.w	r1, #276	@ 0x114
 800dafe:	6878      	ldr	r0, [r7, #4]
 800db00:	f019 ffb9 	bl	8027a76 <_ZdlPvj>
 800db04:	687b      	ldr	r3, [r7, #4]
 800db06:	4618      	mov	r0, r3
 800db08:	3708      	adds	r7, #8
 800db0a:	46bd      	mov	sp, r7
 800db0c:	bd80      	pop	{r7, pc}
	...

0800db10 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEED1Ev>:
 800db10:	b580      	push	{r7, lr}
 800db12:	b082      	sub	sp, #8
 800db14:	af00      	add	r7, sp, #0
 800db16:	6078      	str	r0, [r7, #4]
 800db18:	4a05      	ldr	r2, [pc, #20]	@ (800db30 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEED1Ev+0x20>)
 800db1a:	687b      	ldr	r3, [r7, #4]
 800db1c:	601a      	str	r2, [r3, #0]
 800db1e:	687b      	ldr	r3, [r7, #4]
 800db20:	4618      	mov	r0, r3
 800db22:	f7ff fcaf 	bl	800d484 <_ZN8touchgfx10TiledImageD1Ev>
 800db26:	687b      	ldr	r3, [r7, #4]
 800db28:	4618      	mov	r0, r3
 800db2a:	3708      	adds	r7, #8
 800db2c:	46bd      	mov	sp, r7
 800db2e:	bd80      	pop	{r7, pc}
 800db30:	080299ac 	.word	0x080299ac

0800db34 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEED0Ev>:
 800db34:	b580      	push	{r7, lr}
 800db36:	b082      	sub	sp, #8
 800db38:	af00      	add	r7, sp, #0
 800db3a:	6078      	str	r0, [r7, #4]
 800db3c:	6878      	ldr	r0, [r7, #4]
 800db3e:	f7ff ffe7 	bl	800db10 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEED1Ev>
 800db42:	2144      	movs	r1, #68	@ 0x44
 800db44:	6878      	ldr	r0, [r7, #4]
 800db46:	f019 ff96 	bl	8027a76 <_ZdlPvj>
 800db4a:	687b      	ldr	r3, [r7, #4]
 800db4c:	4618      	mov	r0, r3
 800db4e:	3708      	adds	r7, #8
 800db50:	46bd      	mov	sp, r7
 800db52:	bd80      	pop	{r7, pc}

0800db54 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800db54:	b580      	push	{r7, lr}
 800db56:	b082      	sub	sp, #8
 800db58:	af00      	add	r7, sp, #0
 800db5a:	6078      	str	r0, [r7, #4]
 800db5c:	4a05      	ldr	r2, [pc, #20]	@ (800db74 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800db5e:	687b      	ldr	r3, [r7, #4]
 800db60:	601a      	str	r2, [r3, #0]
 800db62:	687b      	ldr	r3, [r7, #4]
 800db64:	4618      	mov	r0, r3
 800db66:	f7ff f803 	bl	800cb70 <_ZN8touchgfx6WidgetD1Ev>
 800db6a:	687b      	ldr	r3, [r7, #4]
 800db6c:	4618      	mov	r0, r3
 800db6e:	3708      	adds	r7, #8
 800db70:	46bd      	mov	sp, r7
 800db72:	bd80      	pop	{r7, pc}
 800db74:	0802aa74 	.word	0x0802aa74

0800db78 <_ZN8touchgfx3BoxD0Ev>:
 800db78:	b580      	push	{r7, lr}
 800db7a:	b082      	sub	sp, #8
 800db7c:	af00      	add	r7, sp, #0
 800db7e:	6078      	str	r0, [r7, #4]
 800db80:	6878      	ldr	r0, [r7, #4]
 800db82:	f7ff ffe7 	bl	800db54 <_ZN8touchgfx3BoxD1Ev>
 800db86:	212c      	movs	r1, #44	@ 0x2c
 800db88:	6878      	ldr	r0, [r7, #4]
 800db8a:	f019 ff74 	bl	8027a76 <_ZdlPvj>
 800db8e:	687b      	ldr	r3, [r7, #4]
 800db90:	4618      	mov	r0, r3
 800db92:	3708      	adds	r7, #8
 800db94:	46bd      	mov	sp, r7
 800db96:	bd80      	pop	{r7, pc}

0800db98 <_ZN8touchgfx13PainterRGB565D1Ev>:
class PainterRGB565 : public AbstractPainterRGB565, public AbstractPainterColor
 800db98:	b580      	push	{r7, lr}
 800db9a:	b082      	sub	sp, #8
 800db9c:	af00      	add	r7, sp, #0
 800db9e:	6078      	str	r0, [r7, #4]
 800dba0:	4a09      	ldr	r2, [pc, #36]	@ (800dbc8 <_ZN8touchgfx13PainterRGB565D1Ev+0x30>)
 800dba2:	687b      	ldr	r3, [r7, #4]
 800dba4:	601a      	str	r2, [r3, #0]
 800dba6:	4a09      	ldr	r2, [pc, #36]	@ (800dbcc <_ZN8touchgfx13PainterRGB565D1Ev+0x34>)
 800dba8:	687b      	ldr	r3, [r7, #4]
 800dbaa:	609a      	str	r2, [r3, #8]
 800dbac:	687b      	ldr	r3, [r7, #4]
 800dbae:	3308      	adds	r3, #8
 800dbb0:	4618      	mov	r0, r3
 800dbb2:	f7ff f95b 	bl	800ce6c <_ZN8touchgfx20AbstractPainterColorD1Ev>
 800dbb6:	687b      	ldr	r3, [r7, #4]
 800dbb8:	4618      	mov	r0, r3
 800dbba:	f7ff f9e3 	bl	800cf84 <_ZN8touchgfx21AbstractPainterRGB565D1Ev>
 800dbbe:	687b      	ldr	r3, [r7, #4]
 800dbc0:	4618      	mov	r0, r3
 800dbc2:	3708      	adds	r7, #8
 800dbc4:	46bd      	mov	sp, r7
 800dbc6:	bd80      	pop	{r7, pc}
 800dbc8:	0802a894 	.word	0x0802a894
 800dbcc:	0802a8b8 	.word	0x0802a8b8

0800dbd0 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800dbd0:	f1a0 0008 	sub.w	r0, r0, #8
 800dbd4:	e7e0      	b.n	800db98 <_ZN8touchgfx13PainterRGB565D1Ev>
 800dbd6:	bf00      	nop

0800dbd8 <_ZN8touchgfx13PainterRGB565D0Ev>:
 800dbd8:	b580      	push	{r7, lr}
 800dbda:	b082      	sub	sp, #8
 800dbdc:	af00      	add	r7, sp, #0
 800dbde:	6078      	str	r0, [r7, #4]
 800dbe0:	6878      	ldr	r0, [r7, #4]
 800dbe2:	f7ff ffd9 	bl	800db98 <_ZN8touchgfx13PainterRGB565D1Ev>
 800dbe6:	2114      	movs	r1, #20
 800dbe8:	6878      	ldr	r0, [r7, #4]
 800dbea:	f019 ff44 	bl	8027a76 <_ZdlPvj>
 800dbee:	687b      	ldr	r3, [r7, #4]
 800dbf0:	4618      	mov	r0, r3
 800dbf2:	3708      	adds	r7, #8
 800dbf4:	46bd      	mov	sp, r7
 800dbf6:	bd80      	pop	{r7, pc}

0800dbf8 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800dbf8:	f1a0 0008 	sub.w	r0, r0, #8
 800dbfc:	e7ec      	b.n	800dbd8 <_ZN8touchgfx13PainterRGB565D0Ev>

0800dbfe <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE15handleTickEventEv>:
    virtual void handleTickEvent()
 800dbfe:	b580      	push	{r7, lr}
 800dc00:	b082      	sub	sp, #8
 800dc02:	af00      	add	r7, sp, #0
 800dc04:	6078      	str	r0, [r7, #4]
        T::handleTickEvent();
 800dc06:	687b      	ldr	r3, [r7, #4]
 800dc08:	4618      	mov	r0, r3
 800dc0a:	f004 f951 	bl	8011eb0 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>
        nextFadeAnimationStep();
 800dc0e:	6878      	ldr	r0, [r7, #4]
 800dc10:	f7ff fe06 	bl	800d820 <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21nextFadeAnimationStepEv>
    }
 800dc14:	bf00      	nop
 800dc16:	3708      	adds	r7, #8
 800dc18:	46bd      	mov	sp, r7
 800dc1a:	bd80      	pop	{r7, pc}

0800dc1c <_ZN8touchgfx12FadeAnimatorINS_14CircleProgressEE21setFadeAnimationDelayEt>:
    virtual void setFadeAnimationDelay(uint16_t delay)
 800dc1c:	b480      	push	{r7}
 800dc1e:	b083      	sub	sp, #12
 800dc20:	af00      	add	r7, sp, #0
 800dc22:	6078      	str	r0, [r7, #4]
 800dc24:	460b      	mov	r3, r1
 800dc26:	807b      	strh	r3, [r7, #2]
        fadeAnimationDelay = delay;
 800dc28:	687b      	ldr	r3, [r7, #4]
 800dc2a:	887a      	ldrh	r2, [r7, #2]
 800dc2c:	f8a3 2104 	strh.w	r2, [r3, #260]	@ 0x104
    }
 800dc30:	bf00      	nop
 800dc32:	370c      	adds	r7, #12
 800dc34:	46bd      	mov	sp, r7
 800dc36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc3a:	4770      	bx	lr

0800dc3c <_ZNK8touchgfx12FadeAnimatorINS_14CircleProgressEE21getFadeAnimationDelayEv>:
    virtual uint16_t getFadeAnimationDelay() const
 800dc3c:	b480      	push	{r7}
 800dc3e:	b083      	sub	sp, #12
 800dc40:	af00      	add	r7, sp, #0
 800dc42:	6078      	str	r0, [r7, #4]
        return fadeAnimationDelay;
 800dc44:	687b      	ldr	r3, [r7, #4]
 800dc46:	f8b3 3104 	ldrh.w	r3, [r3, #260]	@ 0x104
    }
 800dc4a:	4618      	mov	r0, r3
 800dc4c:	370c      	adds	r7, #12
 800dc4e:	46bd      	mov	sp, r7
 800dc50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc54:	4770      	bx	lr

0800dc56 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE15handleTickEventEv>:
    virtual void handleTickEvent()
 800dc56:	b580      	push	{r7, lr}
 800dc58:	b082      	sub	sp, #8
 800dc5a:	af00      	add	r7, sp, #0
 800dc5c:	6078      	str	r0, [r7, #4]
        T::handleTickEvent();
 800dc5e:	687b      	ldr	r3, [r7, #4]
 800dc60:	4618      	mov	r0, r3
 800dc62:	f7fe fe41 	bl	800c8e8 <_ZN8touchgfx8Drawable15handleTickEventEv>
        nextFadeAnimationStep();
 800dc66:	6878      	ldr	r0, [r7, #4]
 800dc68:	f7ff fe8c 	bl	800d984 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21nextFadeAnimationStepEv>
    }
 800dc6c:	bf00      	nop
 800dc6e:	3708      	adds	r7, #8
 800dc70:	46bd      	mov	sp, r7
 800dc72:	bd80      	pop	{r7, pc}

0800dc74 <_ZN8touchgfx12FadeAnimatorINS_10TiledImageEE21setFadeAnimationDelayEt>:
    virtual void setFadeAnimationDelay(uint16_t delay)
 800dc74:	b480      	push	{r7}
 800dc76:	b083      	sub	sp, #12
 800dc78:	af00      	add	r7, sp, #0
 800dc7a:	6078      	str	r0, [r7, #4]
 800dc7c:	460b      	mov	r3, r1
 800dc7e:	807b      	strh	r3, [r7, #2]
        fadeAnimationDelay = delay;
 800dc80:	687b      	ldr	r3, [r7, #4]
 800dc82:	887a      	ldrh	r2, [r7, #2]
 800dc84:	865a      	strh	r2, [r3, #50]	@ 0x32
    }
 800dc86:	bf00      	nop
 800dc88:	370c      	adds	r7, #12
 800dc8a:	46bd      	mov	sp, r7
 800dc8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc90:	4770      	bx	lr

0800dc92 <_ZNK8touchgfx12FadeAnimatorINS_10TiledImageEE21getFadeAnimationDelayEv>:
    virtual uint16_t getFadeAnimationDelay() const
 800dc92:	b480      	push	{r7}
 800dc94:	b083      	sub	sp, #12
 800dc96:	af00      	add	r7, sp, #0
 800dc98:	6078      	str	r0, [r7, #4]
        return fadeAnimationDelay;
 800dc9a:	687b      	ldr	r3, [r7, #4]
 800dc9c:	8e5b      	ldrh	r3, [r3, #50]	@ 0x32
    }
 800dc9e:	4618      	mov	r0, r3
 800dca0:	370c      	adds	r7, #12
 800dca2:	46bd      	mov	sp, r7
 800dca4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dca8:	4770      	bx	lr

0800dcaa <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800dcaa:	b480      	push	{r7}
 800dcac:	b083      	sub	sp, #12
 800dcae:	af00      	add	r7, sp, #0
 800dcb0:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800dcb2:	687b      	ldr	r3, [r7, #4]
 800dcb4:	791b      	ldrb	r3, [r3, #4]
    }
 800dcb6:	4618      	mov	r0, r3
 800dcb8:	370c      	adds	r7, #12
 800dcba:	46bd      	mov	sp, r7
 800dcbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcc0:	4770      	bx	lr

0800dcc2 <_ZNK8touchgfx8Drawable8getWidthEv>:
    int16_t getWidth() const
 800dcc2:	b480      	push	{r7}
 800dcc4:	b083      	sub	sp, #12
 800dcc6:	af00      	add	r7, sp, #0
 800dcc8:	6078      	str	r0, [r7, #4]
        return rect.width;
 800dcca:	687b      	ldr	r3, [r7, #4]
 800dccc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
    }
 800dcd0:	4618      	mov	r0, r3
 800dcd2:	370c      	adds	r7, #12
 800dcd4:	46bd      	mov	sp, r7
 800dcd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcda:	4770      	bx	lr

0800dcdc <_ZNK8touchgfx8Drawable9getHeightEv>:
    int16_t getHeight() const
 800dcdc:	b480      	push	{r7}
 800dcde:	b083      	sub	sp, #12
 800dce0:	af00      	add	r7, sp, #0
 800dce2:	6078      	str	r0, [r7, #4]
        return rect.height;
 800dce4:	687b      	ldr	r3, [r7, #4]
 800dce6:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
    }
 800dcea:	4618      	mov	r0, r3
 800dcec:	370c      	adds	r7, #12
 800dcee:	46bd      	mov	sp, r7
 800dcf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcf4:	4770      	bx	lr

0800dcf6 <_ZN8touchgfx8Drawable12setTouchableEb>:
    void setTouchable(bool touch)
 800dcf6:	b480      	push	{r7}
 800dcf8:	b083      	sub	sp, #12
 800dcfa:	af00      	add	r7, sp, #0
 800dcfc:	6078      	str	r0, [r7, #4]
 800dcfe:	460b      	mov	r3, r1
 800dd00:	70fb      	strb	r3, [r7, #3]
        touchable = touch;
 800dd02:	687b      	ldr	r3, [r7, #4]
 800dd04:	78fa      	ldrb	r2, [r7, #3]
 800dd06:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 800dd0a:	bf00      	nop
 800dd0c:	370c      	adds	r7, #12
 800dd0e:	46bd      	mov	sp, r7
 800dd10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd14:	4770      	bx	lr
	...

0800dd18 <_ZN8touchgfx9ContainerC1Ev>:
    Container()
 800dd18:	b580      	push	{r7, lr}
 800dd1a:	b082      	sub	sp, #8
 800dd1c:	af00      	add	r7, sp, #0
 800dd1e:	6078      	str	r0, [r7, #4]
          firstChild(0)
 800dd20:	687b      	ldr	r3, [r7, #4]
 800dd22:	4618      	mov	r0, r3
 800dd24:	f7fe fcae 	bl	800c684 <_ZN8touchgfx8DrawableC1Ev>
 800dd28:	4a05      	ldr	r2, [pc, #20]	@ (800dd40 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800dd2a:	687b      	ldr	r3, [r7, #4]
 800dd2c:	601a      	str	r2, [r3, #0]
 800dd2e:	687b      	ldr	r3, [r7, #4]
 800dd30:	2200      	movs	r2, #0
 800dd32:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800dd34:	687b      	ldr	r3, [r7, #4]
 800dd36:	4618      	mov	r0, r3
 800dd38:	3708      	adds	r7, #8
 800dd3a:	46bd      	mov	sp, r7
 800dd3c:	bd80      	pop	{r7, pc}
 800dd3e:	bf00      	nop
 800dd40:	0802a6ac 	.word	0x0802a6ac

0800dd44 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800dd44:	b480      	push	{r7}
 800dd46:	b083      	sub	sp, #12
 800dd48:	af00      	add	r7, sp, #0
 800dd4a:	6078      	str	r0, [r7, #4]
 800dd4c:	460b      	mov	r3, r1
 800dd4e:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800dd50:	687b      	ldr	r3, [r7, #4]
 800dd52:	78fa      	ldrb	r2, [r7, #3]
 800dd54:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 800dd58:	bf00      	nop
 800dd5a:	370c      	adds	r7, #12
 800dd5c:	46bd      	mov	sp, r7
 800dd5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd62:	4770      	bx	lr

0800dd64 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800dd64:	b580      	push	{r7, lr}
 800dd66:	b082      	sub	sp, #8
 800dd68:	af00      	add	r7, sp, #0
 800dd6a:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800dd6c:	687b      	ldr	r3, [r7, #4]
 800dd6e:	4618      	mov	r0, r3
 800dd70:	f7ff ffd2 	bl	800dd18 <_ZN8touchgfx9ContainerC1Ev>
 800dd74:	4a0b      	ldr	r2, [pc, #44]	@ (800dda4 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800dd76:	687b      	ldr	r3, [r7, #4]
 800dd78:	601a      	str	r2, [r3, #0]
 800dd7a:	687b      	ldr	r3, [r7, #4]
 800dd7c:	2200      	movs	r2, #0
 800dd7e:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 800dd82:	687b      	ldr	r3, [r7, #4]
 800dd84:	22ff      	movs	r2, #255	@ 0xff
 800dd86:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 800dd8a:	687b      	ldr	r3, [r7, #4]
 800dd8c:	2200      	movs	r2, #0
 800dd8e:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 800dd90:	687b      	ldr	r3, [r7, #4]
 800dd92:	2101      	movs	r1, #1
 800dd94:	4618      	mov	r0, r3
 800dd96:	f7ff ffae 	bl	800dcf6 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	4618      	mov	r0, r3
 800dd9e:	3708      	adds	r7, #8
 800dda0:	46bd      	mov	sp, r7
 800dda2:	bd80      	pop	{r7, pc}
 800dda4:	08029edc 	.word	0x08029edc

0800dda8 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800dda8:	b580      	push	{r7, lr}
 800ddaa:	b082      	sub	sp, #8
 800ddac:	af00      	add	r7, sp, #0
 800ddae:	6078      	str	r0, [r7, #4]
 800ddb0:	460b      	mov	r3, r1
 800ddb2:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800ddb4:	687b      	ldr	r3, [r7, #4]
 800ddb6:	78fa      	ldrb	r2, [r7, #3]
 800ddb8:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 800ddbc:	687b      	ldr	r3, [r7, #4]
 800ddbe:	681b      	ldr	r3, [r3, #0]
 800ddc0:	338c      	adds	r3, #140	@ 0x8c
 800ddc2:	681b      	ldr	r3, [r3, #0]
 800ddc4:	6878      	ldr	r0, [r7, #4]
 800ddc6:	4798      	blx	r3
    }
 800ddc8:	bf00      	nop
 800ddca:	3708      	adds	r7, #8
 800ddcc:	46bd      	mov	sp, r7
 800ddce:	bd80      	pop	{r7, pc}

0800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 800ddd0:	b480      	push	{r7}
 800ddd2:	b083      	sub	sp, #12
 800ddd4:	af00      	add	r7, sp, #0
 800ddd6:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800ddd8:	687b      	ldr	r3, [r7, #4]
 800ddda:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 800ddde:	4618      	mov	r0, r3
 800dde0:	370c      	adds	r7, #12
 800dde2:	46bd      	mov	sp, r7
 800dde4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dde8:	4770      	bx	lr

0800ddea <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800ddea:	b480      	push	{r7}
 800ddec:	b083      	sub	sp, #12
 800ddee:	af00      	add	r7, sp, #0
 800ddf0:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800ddf2:	687b      	ldr	r3, [r7, #4]
 800ddf4:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 800ddf8:	4618      	mov	r0, r3
 800ddfa:	370c      	adds	r7, #12
 800ddfc:	46bd      	mov	sp, r7
 800ddfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de02:	4770      	bx	lr

0800de04 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800de04:	b480      	push	{r7}
 800de06:	b083      	sub	sp, #12
 800de08:	af00      	add	r7, sp, #0
 800de0a:	6078      	str	r0, [r7, #4]
 800de0c:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800de0e:	687b      	ldr	r3, [r7, #4]
 800de10:	683a      	ldr	r2, [r7, #0]
 800de12:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800de14:	bf00      	nop
 800de16:	370c      	adds	r7, #12
 800de18:	46bd      	mov	sp, r7
 800de1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de1e:	4770      	bx	lr

0800de20 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800de20:	b580      	push	{r7, lr}
 800de22:	b082      	sub	sp, #8
 800de24:	af00      	add	r7, sp, #0
 800de26:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800de28:	687b      	ldr	r3, [r7, #4]
 800de2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de2c:	2b00      	cmp	r3, #0
 800de2e:	d00d      	beq.n	800de4c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800de30:	687b      	ldr	r3, [r7, #4]
 800de32:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800de34:	687b      	ldr	r3, [r7, #4]
 800de36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de38:	681b      	ldr	r3, [r3, #0]
 800de3a:	330c      	adds	r3, #12
 800de3c:	681b      	ldr	r3, [r3, #0]
 800de3e:	4610      	mov	r0, r2
 800de40:	4798      	blx	r3
 800de42:	4603      	mov	r3, r0
 800de44:	2b00      	cmp	r3, #0
 800de46:	d001      	beq.n	800de4c <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800de48:	2301      	movs	r3, #1
 800de4a:	e000      	b.n	800de4e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800de4c:	2300      	movs	r3, #0
 800de4e:	2b00      	cmp	r3, #0
 800de50:	d009      	beq.n	800de66 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800de52:	687b      	ldr	r3, [r7, #4]
 800de54:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800de56:	687b      	ldr	r3, [r7, #4]
 800de58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de5a:	681b      	ldr	r3, [r3, #0]
 800de5c:	3308      	adds	r3, #8
 800de5e:	681b      	ldr	r3, [r3, #0]
 800de60:	6879      	ldr	r1, [r7, #4]
 800de62:	4610      	mov	r0, r2
 800de64:	4798      	blx	r3
        }
    }
 800de66:	bf00      	nop
 800de68:	3708      	adds	r7, #8
 800de6a:	46bd      	mov	sp, r7
 800de6c:	bd80      	pop	{r7, pc}

0800de6e <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800de6e:	b480      	push	{r7}
 800de70:	b083      	sub	sp, #12
 800de72:	af00      	add	r7, sp, #0
 800de74:	6078      	str	r0, [r7, #4]
    {
    }
 800de76:	bf00      	nop
 800de78:	370c      	adds	r7, #12
 800de7a:	46bd      	mov	sp, r7
 800de7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de80:	4770      	bx	lr

0800de82 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800de82:	b480      	push	{r7}
 800de84:	b083      	sub	sp, #12
 800de86:	af00      	add	r7, sp, #0
 800de88:	6078      	str	r0, [r7, #4]
    {
    }
 800de8a:	bf00      	nop
 800de8c:	370c      	adds	r7, #12
 800de8e:	46bd      	mov	sp, r7
 800de90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de94:	4770      	bx	lr
	...

0800de98 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800de98:	b580      	push	{r7, lr}
 800de9a:	b082      	sub	sp, #8
 800de9c:	af00      	add	r7, sp, #0
 800de9e:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800dea0:	687b      	ldr	r3, [r7, #4]
 800dea2:	4618      	mov	r0, r3
 800dea4:	f7fe fe86 	bl	800cbb4 <_ZN8touchgfx3BoxC1Ev>
 800dea8:	4a08      	ldr	r2, [pc, #32]	@ (800decc <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800deaa:	687b      	ldr	r3, [r7, #4]
 800deac:	601a      	str	r2, [r3, #0]
 800deae:	687b      	ldr	r3, [r7, #4]
 800deb0:	332c      	adds	r3, #44	@ 0x2c
 800deb2:	2100      	movs	r1, #0
 800deb4:	4618      	mov	r0, r3
 800deb6:	f7fe fba3 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800deba:	687b      	ldr	r3, [r7, #4]
 800debc:	2200      	movs	r2, #0
 800debe:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 800dec0:	687b      	ldr	r3, [r7, #4]
 800dec2:	4618      	mov	r0, r3
 800dec4:	3708      	adds	r7, #8
 800dec6:	46bd      	mov	sp, r7
 800dec8:	bd80      	pop	{r7, pc}
 800deca:	bf00      	nop
 800decc:	0802ab60 	.word	0x0802ab60

0800ded0 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800ded0:	b480      	push	{r7}
 800ded2:	b083      	sub	sp, #12
 800ded4:	af00      	add	r7, sp, #0
 800ded6:	6078      	str	r0, [r7, #4]
 800ded8:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800deda:	687b      	ldr	r3, [r7, #4]
 800dedc:	683a      	ldr	r2, [r7, #0]
 800dede:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 800dee0:	bf00      	nop
 800dee2:	370c      	adds	r7, #12
 800dee4:	46bd      	mov	sp, r7
 800dee6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800deea:	4770      	bx	lr

0800deec <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800deec:	b480      	push	{r7}
 800deee:	b083      	sub	sp, #12
 800def0:	af00      	add	r7, sp, #0
 800def2:	6078      	str	r0, [r7, #4]
 800def4:	460b      	mov	r3, r1
 800def6:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800def8:	687b      	ldr	r3, [r7, #4]
 800defa:	887a      	ldrh	r2, [r7, #2]
 800defc:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 800defe:	bf00      	nop
 800df00:	370c      	adds	r7, #12
 800df02:	46bd      	mov	sp, r7
 800df04:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df08:	4770      	bx	lr

0800df0a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800df0a:	b580      	push	{r7, lr}
 800df0c:	b084      	sub	sp, #16
 800df0e:	af00      	add	r7, sp, #0
 800df10:	6078      	str	r0, [r7, #4]
 800df12:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800df14:	687b      	ldr	r3, [r7, #4]
 800df16:	4618      	mov	r0, r3
 800df18:	f7ff ff5a 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800df1c:	4603      	mov	r3, r0
 800df1e:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800df20:	6838      	ldr	r0, [r7, #0]
 800df22:	f7ff fec2 	bl	800dcaa <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800df26:	4603      	mov	r3, r0
 800df28:	2b00      	cmp	r3, #0
 800df2a:	bf0c      	ite	eq
 800df2c:	2301      	moveq	r3, #1
 800df2e:	2300      	movne	r3, #0
 800df30:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800df32:	7bbb      	ldrb	r3, [r7, #14]
 800df34:	2b00      	cmp	r3, #0
 800df36:	d005      	beq.n	800df44 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800df38:	7bfb      	ldrb	r3, [r7, #15]
 800df3a:	f083 0301 	eor.w	r3, r3, #1
 800df3e:	b2db      	uxtb	r3, r3
 800df40:	2b00      	cmp	r3, #0
 800df42:	d108      	bne.n	800df56 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800df44:	7bbb      	ldrb	r3, [r7, #14]
 800df46:	f083 0301 	eor.w	r3, r3, #1
 800df4a:	b2db      	uxtb	r3, r3
 800df4c:	2b00      	cmp	r3, #0
 800df4e:	d00f      	beq.n	800df70 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800df50:	7bfb      	ldrb	r3, [r7, #15]
 800df52:	2b00      	cmp	r3, #0
 800df54:	d00c      	beq.n	800df70 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800df56:	687b      	ldr	r3, [r7, #4]
 800df58:	7bba      	ldrb	r2, [r7, #14]
 800df5a:	4611      	mov	r1, r2
 800df5c:	4618      	mov	r0, r3
 800df5e:	f7ff ff23 	bl	800dda8 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800df62:	687a      	ldr	r2, [r7, #4]
 800df64:	687b      	ldr	r3, [r7, #4]
 800df66:	681b      	ldr	r3, [r3, #0]
 800df68:	3314      	adds	r3, #20
 800df6a:	681b      	ldr	r3, [r3, #0]
 800df6c:	4610      	mov	r0, r2
 800df6e:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800df70:	7bfb      	ldrb	r3, [r7, #15]
 800df72:	2b00      	cmp	r3, #0
 800df74:	d007      	beq.n	800df86 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800df76:	6838      	ldr	r0, [r7, #0]
 800df78:	f7ff fe97 	bl	800dcaa <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800df7c:	4603      	mov	r3, r0
 800df7e:	2b01      	cmp	r3, #1
 800df80:	d101      	bne.n	800df86 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800df82:	2301      	movs	r3, #1
 800df84:	e000      	b.n	800df88 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800df86:	2300      	movs	r3, #0
 800df88:	2b00      	cmp	r3, #0
 800df8a:	d006      	beq.n	800df9a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800df8c:	687a      	ldr	r2, [r7, #4]
 800df8e:	687b      	ldr	r3, [r7, #4]
 800df90:	681b      	ldr	r3, [r3, #0]
 800df92:	3388      	adds	r3, #136	@ 0x88
 800df94:	681b      	ldr	r3, [r3, #0]
 800df96:	4610      	mov	r0, r2
 800df98:	4798      	blx	r3
        }
    }
 800df9a:	bf00      	nop
 800df9c:	3710      	adds	r7, #16
 800df9e:	46bd      	mov	sp, r7
 800dfa0:	bd80      	pop	{r7, pc}
	...

0800dfa4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800dfa4:	b580      	push	{r7, lr}
 800dfa6:	b082      	sub	sp, #8
 800dfa8:	af00      	add	r7, sp, #0
 800dfaa:	6078      	str	r0, [r7, #4]
 800dfac:	4a05      	ldr	r2, [pc, #20]	@ (800dfc4 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800dfae:	687b      	ldr	r3, [r7, #4]
 800dfb0:	601a      	str	r2, [r3, #0]
 800dfb2:	687b      	ldr	r3, [r7, #4]
 800dfb4:	4618      	mov	r0, r3
 800dfb6:	f7ff fab1 	bl	800d51c <_ZN8touchgfx9ContainerD1Ev>
 800dfba:	687b      	ldr	r3, [r7, #4]
 800dfbc:	4618      	mov	r0, r3
 800dfbe:	3708      	adds	r7, #8
 800dfc0:	46bd      	mov	sp, r7
 800dfc2:	bd80      	pop	{r7, pc}
 800dfc4:	08029edc 	.word	0x08029edc

0800dfc8 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800dfc8:	b580      	push	{r7, lr}
 800dfca:	b082      	sub	sp, #8
 800dfcc:	af00      	add	r7, sp, #0
 800dfce:	6078      	str	r0, [r7, #4]
 800dfd0:	6878      	ldr	r0, [r7, #4]
 800dfd2:	f7ff ffe7 	bl	800dfa4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800dfd6:	2134      	movs	r1, #52	@ 0x34
 800dfd8:	6878      	ldr	r0, [r7, #4]
 800dfda:	f019 fd4c 	bl	8027a76 <_ZdlPvj>
 800dfde:	687b      	ldr	r3, [r7, #4]
 800dfe0:	4618      	mov	r0, r3
 800dfe2:	3708      	adds	r7, #8
 800dfe4:	46bd      	mov	sp, r7
 800dfe6:	bd80      	pop	{r7, pc}

0800dfe8 <_ZN8touchgfx19RepeatButtonTriggerC1Ev>:
 * create a fully functional button.
 */
class RepeatButtonTrigger : public AbstractButtonContainer
{
public:
    RepeatButtonTrigger()
 800dfe8:	b580      	push	{r7, lr}
 800dfea:	b082      	sub	sp, #8
 800dfec:	af00      	add	r7, sp, #0
 800dfee:	6078      	str	r0, [r7, #4]
        : AbstractButtonContainer(), ticksDelay(30), ticksInterval(15), ticks(0), ticksBeforeContinuous(0)
 800dff0:	687b      	ldr	r3, [r7, #4]
 800dff2:	4618      	mov	r0, r3
 800dff4:	f7ff feb6 	bl	800dd64 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800dff8:	4a09      	ldr	r2, [pc, #36]	@ (800e020 <_ZN8touchgfx19RepeatButtonTriggerC1Ev+0x38>)
 800dffa:	687b      	ldr	r3, [r7, #4]
 800dffc:	601a      	str	r2, [r3, #0]
 800dffe:	687b      	ldr	r3, [r7, #4]
 800e000:	221e      	movs	r2, #30
 800e002:	869a      	strh	r2, [r3, #52]	@ 0x34
 800e004:	687b      	ldr	r3, [r7, #4]
 800e006:	220f      	movs	r2, #15
 800e008:	86da      	strh	r2, [r3, #54]	@ 0x36
 800e00a:	687b      	ldr	r3, [r7, #4]
 800e00c:	2200      	movs	r2, #0
 800e00e:	871a      	strh	r2, [r3, #56]	@ 0x38
 800e010:	687b      	ldr	r3, [r7, #4]
 800e012:	2200      	movs	r2, #0
 800e014:	875a      	strh	r2, [r3, #58]	@ 0x3a
    {
    }
 800e016:	687b      	ldr	r3, [r7, #4]
 800e018:	4618      	mov	r0, r3
 800e01a:	3708      	adds	r7, #8
 800e01c:	46bd      	mov	sp, r7
 800e01e:	bd80      	pop	{r7, pc}
 800e020:	08029d8c 	.word	0x08029d8c

0800e024 <_ZN8touchgfx19RepeatButtonTrigger8setDelayEi>:
     *
     * @param  delay The delay, measured in ticks, between first activation and second activation.
     *
     * @see setInterval, getDelay
     */
    void setDelay(int delay)
 800e024:	b480      	push	{r7}
 800e026:	b083      	sub	sp, #12
 800e028:	af00      	add	r7, sp, #0
 800e02a:	6078      	str	r0, [r7, #4]
 800e02c:	6039      	str	r1, [r7, #0]
    {
        ticksDelay = delay;
 800e02e:	683b      	ldr	r3, [r7, #0]
 800e030:	b21a      	sxth	r2, r3
 800e032:	687b      	ldr	r3, [r7, #4]
 800e034:	869a      	strh	r2, [r3, #52]	@ 0x34
    }
 800e036:	bf00      	nop
 800e038:	370c      	adds	r7, #12
 800e03a:	46bd      	mov	sp, r7
 800e03c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e040:	4770      	bx	lr

0800e042 <_ZN8touchgfx19RepeatButtonTrigger11setIntervalEi>:
     *
     * @param  interval The interval between repeated activations, measured in ticks.
     *
     * @see setDelay, getInterval
     */
    void setInterval(int interval)
 800e042:	b480      	push	{r7}
 800e044:	b083      	sub	sp, #12
 800e046:	af00      	add	r7, sp, #0
 800e048:	6078      	str	r0, [r7, #4]
 800e04a:	6039      	str	r1, [r7, #0]
    {
        ticksInterval = interval;
 800e04c:	683b      	ldr	r3, [r7, #0]
 800e04e:	b21a      	sxth	r2, r3
 800e050:	687b      	ldr	r3, [r7, #4]
 800e052:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
 800e054:	bf00      	nop
 800e056:	370c      	adds	r7, #12
 800e058:	46bd      	mov	sp, r7
 800e05a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e05e:	4770      	bx	lr

0800e060 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE>:
    int getInterval()
    {
        return ticksInterval;
    }

    virtual void handleClickEvent(const ClickEvent& event)
 800e060:	b580      	push	{r7, lr}
 800e062:	b084      	sub	sp, #16
 800e064:	af00      	add	r7, sp, #0
 800e066:	6078      	str	r0, [r7, #4]
 800e068:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800e06a:	687b      	ldr	r3, [r7, #4]
 800e06c:	4618      	mov	r0, r3
 800e06e:	f7ff feaf 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800e072:	4603      	mov	r3, r0
 800e074:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800e076:	6838      	ldr	r0, [r7, #0]
 800e078:	f7ff fe17 	bl	800dcaa <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800e07c:	4603      	mov	r3, r0
 800e07e:	2b00      	cmp	r3, #0
 800e080:	bf0c      	ite	eq
 800e082:	2301      	moveq	r3, #1
 800e084:	2300      	movne	r3, #0
 800e086:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800e088:	7bbb      	ldrb	r3, [r7, #14]
 800e08a:	2b00      	cmp	r3, #0
 800e08c:	d005      	beq.n	800e09a <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800e08e:	7bfb      	ldrb	r3, [r7, #15]
 800e090:	f083 0301 	eor.w	r3, r3, #1
 800e094:	b2db      	uxtb	r3, r3
 800e096:	2b00      	cmp	r3, #0
 800e098:	d108      	bne.n	800e0ac <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800e09a:	7bbb      	ldrb	r3, [r7, #14]
 800e09c:	f083 0301 	eor.w	r3, r3, #1
 800e0a0:	b2db      	uxtb	r3, r3
 800e0a2:	2b00      	cmp	r3, #0
 800e0a4:	d00f      	beq.n	800e0c6 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800e0a6:	7bfb      	ldrb	r3, [r7, #15]
 800e0a8:	2b00      	cmp	r3, #0
 800e0aa:	d00c      	beq.n	800e0c6 <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800e0ac:	687b      	ldr	r3, [r7, #4]
 800e0ae:	7bba      	ldrb	r2, [r7, #14]
 800e0b0:	4611      	mov	r1, r2
 800e0b2:	4618      	mov	r0, r3
 800e0b4:	f7ff fe78 	bl	800dda8 <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800e0b8:	687a      	ldr	r2, [r7, #4]
 800e0ba:	687b      	ldr	r3, [r7, #4]
 800e0bc:	681b      	ldr	r3, [r3, #0]
 800e0be:	3314      	adds	r3, #20
 800e0c0:	681b      	ldr	r3, [r3, #0]
 800e0c2:	4610      	mov	r0, r2
 800e0c4:	4798      	blx	r3
        }

        if (event.getType() == ClickEvent::PRESSED)
 800e0c6:	6838      	ldr	r0, [r7, #0]
 800e0c8:	f7ff fdef 	bl	800dcaa <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800e0cc:	4603      	mov	r3, r0
 800e0ce:	2b00      	cmp	r3, #0
 800e0d0:	bf0c      	ite	eq
 800e0d2:	2301      	moveq	r3, #1
 800e0d4:	2300      	movne	r3, #0
 800e0d6:	b2db      	uxtb	r3, r3
 800e0d8:	2b00      	cmp	r3, #0
 800e0da:	d017      	beq.n	800e10c <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0xac>
        {
            executeAction();
 800e0dc:	687a      	ldr	r2, [r7, #4]
 800e0de:	687b      	ldr	r3, [r7, #4]
 800e0e0:	681b      	ldr	r3, [r3, #0]
 800e0e2:	3388      	adds	r3, #136	@ 0x88
 800e0e4:	681b      	ldr	r3, [r3, #0]
 800e0e6:	4610      	mov	r0, r2
 800e0e8:	4798      	blx	r3

            ticks = 0;
 800e0ea:	687b      	ldr	r3, [r7, #4]
 800e0ec:	2200      	movs	r2, #0
 800e0ee:	871a      	strh	r2, [r3, #56]	@ 0x38
            ticksBeforeContinuous = ticksDelay;
 800e0f0:	687b      	ldr	r3, [r7, #4]
 800e0f2:	f9b3 2034 	ldrsh.w	r2, [r3, #52]	@ 0x34
 800e0f6:	687b      	ldr	r3, [r7, #4]
 800e0f8:	875a      	strh	r2, [r3, #58]	@ 0x3a
            Application::getInstance()->registerTimerWidget(this);
 800e0fa:	f008 f90f 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800e0fe:	4602      	mov	r2, r0
 800e100:	687b      	ldr	r3, [r7, #4]
 800e102:	4619      	mov	r1, r3
 800e104:	4610      	mov	r0, r2
 800e106:	f7fe fc83 	bl	800ca10 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
        }
        else
        {
            Application::getInstance()->unregisterTimerWidget(this);
        }
    }
 800e10a:	e007      	b.n	800e11c <_ZN8touchgfx19RepeatButtonTrigger16handleClickEventERKNS_10ClickEventE+0xbc>
            Application::getInstance()->unregisterTimerWidget(this);
 800e10c:	f008 f906 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 800e110:	4602      	mov	r2, r0
 800e112:	687b      	ldr	r3, [r7, #4]
 800e114:	4619      	mov	r1, r3
 800e116:	4610      	mov	r0, r2
 800e118:	f7fe fc89 	bl	800ca2e <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
    }
 800e11c:	bf00      	nop
 800e11e:	3710      	adds	r7, #16
 800e120:	46bd      	mov	sp, r7
 800e122:	bd80      	pop	{r7, pc}

0800e124 <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv>:

    virtual void handleTickEvent()
 800e124:	b580      	push	{r7, lr}
 800e126:	b082      	sub	sp, #8
 800e128:	af00      	add	r7, sp, #0
 800e12a:	6078      	str	r0, [r7, #4]
    {
        AbstractButtonContainer::handleTickEvent();
 800e12c:	687b      	ldr	r3, [r7, #4]
 800e12e:	4618      	mov	r0, r3
 800e130:	f7fe fbda 	bl	800c8e8 <_ZN8touchgfx8Drawable15handleTickEventEv>

        if (!pressed)
 800e134:	687b      	ldr	r3, [r7, #4]
 800e136:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 800e13a:	f083 0301 	eor.w	r3, r3, #1
 800e13e:	b2db      	uxtb	r3, r3
 800e140:	2b00      	cmp	r3, #0
 800e142:	d121      	bne.n	800e188 <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x64>
        {
            return;
        }
        if (ticks == ticksBeforeContinuous)
 800e144:	687b      	ldr	r3, [r7, #4]
 800e146:	f9b3 2038 	ldrsh.w	r2, [r3, #56]	@ 0x38
 800e14a:	687b      	ldr	r3, [r7, #4]
 800e14c:	f9b3 303a 	ldrsh.w	r3, [r3, #58]	@ 0x3a
 800e150:	429a      	cmp	r2, r3
 800e152:	d10f      	bne.n	800e174 <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x50>
        {
            executeAction();
 800e154:	687a      	ldr	r2, [r7, #4]
 800e156:	687b      	ldr	r3, [r7, #4]
 800e158:	681b      	ldr	r3, [r3, #0]
 800e15a:	3388      	adds	r3, #136	@ 0x88
 800e15c:	681b      	ldr	r3, [r3, #0]
 800e15e:	4610      	mov	r0, r2
 800e160:	4798      	blx	r3

            ticks = 0;
 800e162:	687b      	ldr	r3, [r7, #4]
 800e164:	2200      	movs	r2, #0
 800e166:	871a      	strh	r2, [r3, #56]	@ 0x38
            ticksBeforeContinuous = ticksInterval;
 800e168:	687b      	ldr	r3, [r7, #4]
 800e16a:	f9b3 2036 	ldrsh.w	r2, [r3, #54]	@ 0x36
 800e16e:	687b      	ldr	r3, [r7, #4]
 800e170:	875a      	strh	r2, [r3, #58]	@ 0x3a
 800e172:	e00a      	b.n	800e18a <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x66>
        }
        else
        {
            ticks++;
 800e174:	687b      	ldr	r3, [r7, #4]
 800e176:	f9b3 3038 	ldrsh.w	r3, [r3, #56]	@ 0x38
 800e17a:	b29b      	uxth	r3, r3
 800e17c:	3301      	adds	r3, #1
 800e17e:	b29b      	uxth	r3, r3
 800e180:	b21a      	sxth	r2, r3
 800e182:	687b      	ldr	r3, [r7, #4]
 800e184:	871a      	strh	r2, [r3, #56]	@ 0x38
 800e186:	e000      	b.n	800e18a <_ZN8touchgfx19RepeatButtonTrigger15handleTickEventEv+0x66>
            return;
 800e188:	bf00      	nop
        }
    }
 800e18a:	3708      	adds	r7, #8
 800e18c:	46bd      	mov	sp, r7
 800e18e:	bd80      	pop	{r7, pc}

0800e190 <_ZN15Screen1ViewBase9leftArrowEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void leftArrow()
 800e190:	b480      	push	{r7}
 800e192:	b083      	sub	sp, #12
 800e194:	af00      	add	r7, sp, #0
 800e196:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Screen1
    }
 800e198:	bf00      	nop
 800e19a:	370c      	adds	r7, #12
 800e19c:	46bd      	mov	sp, r7
 800e19e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1a2:	4770      	bx	lr

0800e1a4 <_ZN15Screen1ViewBase10rightArrowEv>:
    virtual void rightArrow()
 800e1a4:	b480      	push	{r7}
 800e1a6:	b083      	sub	sp, #12
 800e1a8:	af00      	add	r7, sp, #0
 800e1aa:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Screen1
    }
 800e1ac:	bf00      	nop
 800e1ae:	370c      	adds	r7, #12
 800e1b0:	46bd      	mov	sp, r7
 800e1b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1b6:	4770      	bx	lr

0800e1b8 <_ZN15Screen1ViewBase4stopEv>:
    virtual void stop()
 800e1b8:	b480      	push	{r7}
 800e1ba:	b083      	sub	sp, #12
 800e1bc:	af00      	add	r7, sp, #0
 800e1be:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Screen1
    }
 800e1c0:	bf00      	nop
 800e1c2:	370c      	adds	r7, #12
 800e1c4:	46bd      	mov	sp, r7
 800e1c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1ca:	4770      	bx	lr

0800e1cc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>:
class View : public Screen
 800e1cc:	b580      	push	{r7, lr}
 800e1ce:	b082      	sub	sp, #8
 800e1d0:	af00      	add	r7, sp, #0
 800e1d2:	6078      	str	r0, [r7, #4]
 800e1d4:	4a05      	ldr	r2, [pc, #20]	@ (800e1ec <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev+0x20>)
 800e1d6:	687b      	ldr	r3, [r7, #4]
 800e1d8:	601a      	str	r2, [r3, #0]
 800e1da:	687b      	ldr	r3, [r7, #4]
 800e1dc:	4618      	mov	r0, r3
 800e1de:	f7fe fc4d 	bl	800ca7c <_ZN8touchgfx6ScreenD1Ev>
 800e1e2:	687b      	ldr	r3, [r7, #4]
 800e1e4:	4618      	mov	r0, r3
 800e1e6:	3708      	adds	r7, #8
 800e1e8:	46bd      	mov	sp, r7
 800e1ea:	bd80      	pop	{r7, pc}
 800e1ec:	08029d58 	.word	0x08029d58

0800e1f0 <_ZN8touchgfx4ViewI16Screen1PresenterED0Ev>:
 800e1f0:	b580      	push	{r7, lr}
 800e1f2:	b082      	sub	sp, #8
 800e1f4:	af00      	add	r7, sp, #0
 800e1f6:	6078      	str	r0, [r7, #4]
 800e1f8:	6878      	ldr	r0, [r7, #4]
 800e1fa:	f7ff ffe7 	bl	800e1cc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800e1fe:	2140      	movs	r1, #64	@ 0x40
 800e200:	6878      	ldr	r0, [r7, #4]
 800e202:	f019 fc38 	bl	8027a76 <_ZdlPvj>
 800e206:	687b      	ldr	r3, [r7, #4]
 800e208:	4618      	mov	r0, r3
 800e20a:	3708      	adds	r7, #8
 800e20c:	46bd      	mov	sp, r7
 800e20e:	bd80      	pop	{r7, pc}

0800e210 <_ZN15Screen1ViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

Screen1ViewBase::Screen1ViewBase() :
 800e210:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e214:	b0a4      	sub	sp, #144	@ 0x90
 800e216:	af02      	add	r7, sp, #8
 800e218:	6078      	str	r0, [r7, #4]
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 800e21a:	687b      	ldr	r3, [r7, #4]
 800e21c:	4618      	mov	r0, r3
 800e21e:	f000 fb71 	bl	800e904 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>
 800e222:	4ae4      	ldr	r2, [pc, #912]	@ (800e5b4 <_ZN15Screen1ViewBaseC1Ev+0x3a4>)
 800e224:	687b      	ldr	r3, [r7, #4]
 800e226:	601a      	str	r2, [r3, #0]
 800e228:	687b      	ldr	r3, [r7, #4]
 800e22a:	3340      	adds	r3, #64	@ 0x40
 800e22c:	4618      	mov	r0, r3
 800e22e:	f7fe fcc1 	bl	800cbb4 <_ZN8touchgfx3BoxC1Ev>
 800e232:	687b      	ldr	r3, [r7, #4]
 800e234:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800e238:	f107 030c 	add.w	r3, r7, #12
 800e23c:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800e240:	4618      	mov	r0, r3
 800e242:	f7fe fa0f 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800e246:	f107 030c 	add.w	r3, r7, #12
 800e24a:	4619      	mov	r1, r3
 800e24c:	4620      	mov	r0, r4
 800e24e:	f7fe fd59 	bl	800cd04 <_ZN8touchgfx10TiledImageC1ERKNS_6BitmapE>
 800e252:	687b      	ldr	r3, [r7, #4]
 800e254:	339c      	adds	r3, #156	@ 0x9c
 800e256:	4618      	mov	r0, r3
 800e258:	f000 fbd6 	bl	800ea08 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEEC1Ev>
 800e25c:	687b      	ldr	r3, [r7, #4]
 800e25e:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e262:	4618      	mov	r0, r3
 800e264:	f000 fbd0 	bl	800ea08 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEEC1Ev>
 800e268:	687b      	ldr	r3, [r7, #4]
 800e26a:	f503 73fe 	add.w	r3, r3, #508	@ 0x1fc
 800e26e:	4618      	mov	r0, r3
 800e270:	f000 fc36 	bl	800eae0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800e274:	687b      	ldr	r3, [r7, #4]
 800e276:	f503 701d 	add.w	r0, r3, #628	@ 0x274
 800e27a:	4bcf      	ldr	r3, [pc, #828]	@ (800e5b8 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 800e27c:	613b      	str	r3, [r7, #16]
 800e27e:	2300      	movs	r3, #0
 800e280:	617b      	str	r3, [r7, #20]
 800e282:	f107 0310 	add.w	r3, r7, #16
 800e286:	cb0c      	ldmia	r3, {r2, r3}
 800e288:	6879      	ldr	r1, [r7, #4]
 800e28a:	f000 fc79 	bl	800eb80 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 272);
 800e28e:	687b      	ldr	r3, [r7, #4]
 800e290:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800e294:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800e298:	9300      	str	r3, [sp, #0]
 800e29a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800e29e:	2200      	movs	r2, #0
 800e2a0:	2100      	movs	r1, #0
 800e2a2:	f7fe fa5d 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e2a6:	687b      	ldr	r3, [r7, #4]
 800e2a8:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800e2ac:	2300      	movs	r3, #0
 800e2ae:	f887 3063 	strb.w	r3, [r7, #99]	@ 0x63
 800e2b2:	2300      	movs	r3, #0
 800e2b4:	f887 3062 	strb.w	r3, [r7, #98]	@ 0x62
 800e2b8:	2300      	movs	r3, #0
 800e2ba:	f887 3061 	strb.w	r3, [r7, #97]	@ 0x61
 800e2be:	f897 3063 	ldrb.w	r3, [r7, #99]	@ 0x63
 800e2c2:	041a      	lsls	r2, r3, #16
 800e2c4:	f897 3062 	ldrb.w	r3, [r7, #98]	@ 0x62
 800e2c8:	021b      	lsls	r3, r3, #8
 800e2ca:	431a      	orrs	r2, r3
 800e2cc:	f897 3061 	ldrb.w	r3, [r7, #97]	@ 0x61
 800e2d0:	4313      	orrs	r3, r2
 800e2d2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e2d6:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800e2da:	4611      	mov	r1, r2
 800e2dc:	4618      	mov	r0, r3
 800e2de:	f7fe f98f 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e2e2:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800e2e4:	4619      	mov	r1, r3
 800e2e6:	4620      	mov	r0, r4
 800e2e8:	f7fe fc88 	bl	800cbfc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800e2ec:	687a      	ldr	r2, [r7, #4]
 800e2ee:	687b      	ldr	r3, [r7, #4]
 800e2f0:	3340      	adds	r3, #64	@ 0x40
 800e2f2:	4619      	mov	r1, r3
 800e2f4:	4610      	mov	r0, r2
 800e2f6:	f7fe fc19 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_PUZZLE_ID));
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800e300:	f107 0318 	add.w	r3, r7, #24
 800e304:	2100      	movs	r1, #0
 800e306:	4618      	mov	r0, r3
 800e308:	f7fe f9ac 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800e30c:	f107 0318 	add.w	r3, r7, #24
 800e310:	4619      	mov	r1, r3
 800e312:	4620      	mov	r0, r4
 800e314:	f005 fe95 	bl	8014042 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>
    tiledImage1.setPosition(0, 0, 480, 272);
 800e318:	687b      	ldr	r3, [r7, #4]
 800e31a:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800e31e:	f44f 7388 	mov.w	r3, #272	@ 0x110
 800e322:	9300      	str	r3, [sp, #0]
 800e324:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800e328:	2200      	movs	r2, #0
 800e32a:	2100      	movs	r1, #0
 800e32c:	f7fe fa18 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    tiledImage1.setOffset(0, 0);
 800e330:	687b      	ldr	r3, [r7, #4]
 800e332:	336c      	adds	r3, #108	@ 0x6c
 800e334:	2200      	movs	r2, #0
 800e336:	2100      	movs	r1, #0
 800e338:	4618      	mov	r0, r3
 800e33a:	f005 fe61 	bl	8014000 <_ZN8touchgfx10TiledImage9setOffsetEss>
    add(tiledImage1);
 800e33e:	687a      	ldr	r2, [r7, #4]
 800e340:	687b      	ldr	r3, [r7, #4]
 800e342:	336c      	adds	r3, #108	@ 0x6c
 800e344:	4619      	mov	r1, r3
 800e346:	4610      	mov	r0, r2
 800e348:	f7fe fbf0 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setDelay(12);
 800e34c:	687b      	ldr	r3, [r7, #4]
 800e34e:	339c      	adds	r3, #156	@ 0x9c
 800e350:	210c      	movs	r1, #12
 800e352:	4618      	mov	r0, r3
 800e354:	f7ff fe66 	bl	800e024 <_ZN8touchgfx19RepeatButtonTrigger8setDelayEi>
    flexButton1.setInterval(3);
 800e358:	687b      	ldr	r3, [r7, #4]
 800e35a:	339c      	adds	r3, #156	@ 0x9c
 800e35c:	2103      	movs	r1, #3
 800e35e:	4618      	mov	r0, r3
 800e360:	f7ff fe6f 	bl	800e042 <_ZN8touchgfx19RepeatButtonTrigger11setIntervalEi>
    flexButton1.setBoxWithBorderPosition(0, 0, 48, 49);
 800e364:	687b      	ldr	r3, [r7, #4]
 800e366:	f103 009c 	add.w	r0, r3, #156	@ 0x9c
 800e36a:	2331      	movs	r3, #49	@ 0x31
 800e36c:	9300      	str	r3, [sp, #0]
 800e36e:	2330      	movs	r3, #48	@ 0x30
 800e370:	2200      	movs	r2, #0
 800e372:	2100      	movs	r1, #0
 800e374:	f000 fc24 	bl	800ebc0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800e378:	687b      	ldr	r3, [r7, #4]
 800e37a:	339c      	adds	r3, #156	@ 0x9c
 800e37c:	2105      	movs	r1, #5
 800e37e:	4618      	mov	r0, r3
 800e380:	f000 fc3e 	bl	800ec00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e384:	687b      	ldr	r3, [r7, #4]
 800e386:	f103 049c 	add.w	r4, r3, #156	@ 0x9c
 800e38a:	2300      	movs	r3, #0
 800e38c:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
 800e390:	2366      	movs	r3, #102	@ 0x66
 800e392:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
 800e396:	2399      	movs	r3, #153	@ 0x99
 800e398:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
 800e39c:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 800e3a0:	041a      	lsls	r2, r3, #16
 800e3a2:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 800e3a6:	021b      	lsls	r3, r3, #8
 800e3a8:	431a      	orrs	r2, r3
 800e3aa:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 800e3ae:	4313      	orrs	r3, r2
 800e3b0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e3b4:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800e3b8:	4611      	mov	r1, r2
 800e3ba:	4618      	mov	r0, r3
 800e3bc:	f7fe f920 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e3c0:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800e3c2:	461d      	mov	r5, r3
 800e3c4:	2300      	movs	r3, #0
 800e3c6:	f887 3069 	strb.w	r3, [r7, #105]	@ 0x69
 800e3ca:	2399      	movs	r3, #153	@ 0x99
 800e3cc:	f887 3068 	strb.w	r3, [r7, #104]	@ 0x68
 800e3d0:	23cc      	movs	r3, #204	@ 0xcc
 800e3d2:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800e3d6:	f897 3069 	ldrb.w	r3, [r7, #105]	@ 0x69
 800e3da:	041a      	lsls	r2, r3, #16
 800e3dc:	f897 3068 	ldrb.w	r3, [r7, #104]	@ 0x68
 800e3e0:	021b      	lsls	r3, r3, #8
 800e3e2:	431a      	orrs	r2, r3
 800e3e4:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800e3e8:	4313      	orrs	r3, r2
 800e3ea:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e3ee:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800e3f2:	4611      	mov	r1, r2
 800e3f4:	4618      	mov	r0, r3
 800e3f6:	f7fe f903 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e3fa:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800e3fc:	461e      	mov	r6, r3
 800e3fe:	2300      	movs	r3, #0
 800e400:	f887 306c 	strb.w	r3, [r7, #108]	@ 0x6c
 800e404:	2333      	movs	r3, #51	@ 0x33
 800e406:	f887 306b 	strb.w	r3, [r7, #107]	@ 0x6b
 800e40a:	2366      	movs	r3, #102	@ 0x66
 800e40c:	f887 306a 	strb.w	r3, [r7, #106]	@ 0x6a
 800e410:	f897 306c 	ldrb.w	r3, [r7, #108]	@ 0x6c
 800e414:	041a      	lsls	r2, r3, #16
 800e416:	f897 306b 	ldrb.w	r3, [r7, #107]	@ 0x6b
 800e41a:	021b      	lsls	r3, r3, #8
 800e41c:	431a      	orrs	r2, r3
 800e41e:	f897 306a 	ldrb.w	r3, [r7, #106]	@ 0x6a
 800e422:	4313      	orrs	r3, r2
 800e424:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e428:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800e42c:	4611      	mov	r1, r2
 800e42e:	4618      	mov	r0, r3
 800e430:	f7fe f8e6 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e434:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800e436:	4698      	mov	r8, r3
 800e438:	2333      	movs	r3, #51	@ 0x33
 800e43a:	f887 306f 	strb.w	r3, [r7, #111]	@ 0x6f
 800e43e:	2366      	movs	r3, #102	@ 0x66
 800e440:	f887 306e 	strb.w	r3, [r7, #110]	@ 0x6e
 800e444:	2399      	movs	r3, #153	@ 0x99
 800e446:	f887 306d 	strb.w	r3, [r7, #109]	@ 0x6d
 800e44a:	f897 306f 	ldrb.w	r3, [r7, #111]	@ 0x6f
 800e44e:	041a      	lsls	r2, r3, #16
 800e450:	f897 306e 	ldrb.w	r3, [r7, #110]	@ 0x6e
 800e454:	021b      	lsls	r3, r3, #8
 800e456:	431a      	orrs	r2, r3
 800e458:	f897 306d 	ldrb.w	r3, [r7, #109]	@ 0x6d
 800e45c:	4313      	orrs	r3, r2
 800e45e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e462:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800e466:	4611      	mov	r1, r2
 800e468:	4618      	mov	r0, r3
 800e46a:	f7fe f8c9 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e46e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800e470:	9300      	str	r3, [sp, #0]
 800e472:	4643      	mov	r3, r8
 800e474:	4632      	mov	r2, r6
 800e476:	4629      	mov	r1, r5
 800e478:	4620      	mov	r0, r4
 800e47a:	f000 fbd3 	bl	800ec24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID));
 800e47e:	687b      	ldr	r3, [r7, #4]
 800e480:	f103 049c 	add.w	r4, r3, #156	@ 0x9c
 800e484:	f107 031c 	add.w	r3, r7, #28
 800e488:	2103      	movs	r1, #3
 800e48a:	4618      	mov	r0, r3
 800e48c:	f7fe f8ea 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800e490:	f107 0320 	add.w	r3, r7, #32
 800e494:	2103      	movs	r1, #3
 800e496:	4618      	mov	r0, r3
 800e498:	f7fe f8e4 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800e49c:	f107 0220 	add.w	r2, r7, #32
 800e4a0:	f107 031c 	add.w	r3, r7, #28
 800e4a4:	4619      	mov	r1, r3
 800e4a6:	4620      	mov	r0, r4
 800e4a8:	f000 fbd9 	bl	800ec5e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    flexButton1.setIconXY(0, 0);
 800e4ac:	687b      	ldr	r3, [r7, #4]
 800e4ae:	339c      	adds	r3, #156	@ 0x9c
 800e4b0:	2200      	movs	r2, #0
 800e4b2:	2100      	movs	r1, #0
 800e4b4:	4618      	mov	r0, r3
 800e4b6:	f000 fc24 	bl	800ed02 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE9setIconXYEss>
    flexButton1.setAction(flexButtonCallback);
 800e4ba:	687b      	ldr	r3, [r7, #4]
 800e4bc:	f103 029c 	add.w	r2, r3, #156	@ 0x9c
 800e4c0:	687b      	ldr	r3, [r7, #4]
 800e4c2:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800e4c6:	4619      	mov	r1, r3
 800e4c8:	4610      	mov	r0, r2
 800e4ca:	f7ff fc9b 	bl	800de04 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(356, 112, 48, 49);
 800e4ce:	687b      	ldr	r3, [r7, #4]
 800e4d0:	f103 009c 	add.w	r0, r3, #156	@ 0x9c
 800e4d4:	2331      	movs	r3, #49	@ 0x31
 800e4d6:	9300      	str	r3, [sp, #0]
 800e4d8:	2330      	movs	r3, #48	@ 0x30
 800e4da:	2270      	movs	r2, #112	@ 0x70
 800e4dc:	f44f 71b2 	mov.w	r1, #356	@ 0x164
 800e4e0:	f7fe f93e 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800e4e4:	687a      	ldr	r2, [r7, #4]
 800e4e6:	687b      	ldr	r3, [r7, #4]
 800e4e8:	339c      	adds	r3, #156	@ 0x9c
 800e4ea:	4619      	mov	r1, r3
 800e4ec:	4610      	mov	r0, r2
 800e4ee:	f7fe fb1d 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_1.setDelay(12);
 800e4f2:	687b      	ldr	r3, [r7, #4]
 800e4f4:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e4f8:	210c      	movs	r1, #12
 800e4fa:	4618      	mov	r0, r3
 800e4fc:	f7ff fd92 	bl	800e024 <_ZN8touchgfx19RepeatButtonTrigger8setDelayEi>
    flexButton1_1.setInterval(3);
 800e500:	687b      	ldr	r3, [r7, #4]
 800e502:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e506:	2103      	movs	r1, #3
 800e508:	4618      	mov	r0, r3
 800e50a:	f7ff fd9a 	bl	800e042 <_ZN8touchgfx19RepeatButtonTrigger11setIntervalEi>
    flexButton1_1.setBoxWithBorderPosition(0, 0, 48, 49);
 800e50e:	687b      	ldr	r3, [r7, #4]
 800e510:	f503 70a6 	add.w	r0, r3, #332	@ 0x14c
 800e514:	2331      	movs	r3, #49	@ 0x31
 800e516:	9300      	str	r3, [sp, #0]
 800e518:	2330      	movs	r3, #48	@ 0x30
 800e51a:	2200      	movs	r2, #0
 800e51c:	2100      	movs	r1, #0
 800e51e:	f000 fb4f 	bl	800ebc0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_1.setBorderSize(2);
 800e522:	687b      	ldr	r3, [r7, #4]
 800e524:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e528:	2102      	movs	r1, #2
 800e52a:	4618      	mov	r0, r3
 800e52c:	f000 fb68 	bl	800ec00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE13setBorderSizeEh>
    flexButton1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e530:	687b      	ldr	r3, [r7, #4]
 800e532:	f503 74a6 	add.w	r4, r3, #332	@ 0x14c
 800e536:	2300      	movs	r3, #0
 800e538:	f887 3072 	strb.w	r3, [r7, #114]	@ 0x72
 800e53c:	2366      	movs	r3, #102	@ 0x66
 800e53e:	f887 3071 	strb.w	r3, [r7, #113]	@ 0x71
 800e542:	2399      	movs	r3, #153	@ 0x99
 800e544:	f887 3070 	strb.w	r3, [r7, #112]	@ 0x70
 800e548:	f897 3072 	ldrb.w	r3, [r7, #114]	@ 0x72
 800e54c:	041a      	lsls	r2, r3, #16
 800e54e:	f897 3071 	ldrb.w	r3, [r7, #113]	@ 0x71
 800e552:	021b      	lsls	r3, r3, #8
 800e554:	431a      	orrs	r2, r3
 800e556:	f897 3070 	ldrb.w	r3, [r7, #112]	@ 0x70
 800e55a:	4313      	orrs	r3, r2
 800e55c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e560:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800e564:	4611      	mov	r1, r2
 800e566:	4618      	mov	r0, r3
 800e568:	f7fe f84a 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e56c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800e56e:	461d      	mov	r5, r3
 800e570:	2300      	movs	r3, #0
 800e572:	f887 3075 	strb.w	r3, [r7, #117]	@ 0x75
 800e576:	2399      	movs	r3, #153	@ 0x99
 800e578:	f887 3074 	strb.w	r3, [r7, #116]	@ 0x74
 800e57c:	23cc      	movs	r3, #204	@ 0xcc
 800e57e:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
 800e582:	f897 3075 	ldrb.w	r3, [r7, #117]	@ 0x75
 800e586:	041a      	lsls	r2, r3, #16
 800e588:	f897 3074 	ldrb.w	r3, [r7, #116]	@ 0x74
 800e58c:	021b      	lsls	r3, r3, #8
 800e58e:	431a      	orrs	r2, r3
 800e590:	f897 3073 	ldrb.w	r3, [r7, #115]	@ 0x73
 800e594:	4313      	orrs	r3, r2
 800e596:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e59a:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800e59e:	4611      	mov	r1, r2
 800e5a0:	4618      	mov	r0, r3
 800e5a2:	f7fe f82d 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e5a6:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800e5a8:	461e      	mov	r6, r3
 800e5aa:	2300      	movs	r3, #0
 800e5ac:	f887 3078 	strb.w	r3, [r7, #120]	@ 0x78
 800e5b0:	e004      	b.n	800e5bc <_ZN15Screen1ViewBaseC1Ev+0x3ac>
 800e5b2:	bf00      	nop
 800e5b4:	08029b28 	.word	0x08029b28
 800e5b8:	0800e8ab 	.word	0x0800e8ab
 800e5bc:	2333      	movs	r3, #51	@ 0x33
 800e5be:	f887 3077 	strb.w	r3, [r7, #119]	@ 0x77
 800e5c2:	2366      	movs	r3, #102	@ 0x66
 800e5c4:	f887 3076 	strb.w	r3, [r7, #118]	@ 0x76
 800e5c8:	f897 3078 	ldrb.w	r3, [r7, #120]	@ 0x78
 800e5cc:	041a      	lsls	r2, r3, #16
 800e5ce:	f897 3077 	ldrb.w	r3, [r7, #119]	@ 0x77
 800e5d2:	021b      	lsls	r3, r3, #8
 800e5d4:	431a      	orrs	r2, r3
 800e5d6:	f897 3076 	ldrb.w	r3, [r7, #118]	@ 0x76
 800e5da:	4313      	orrs	r3, r2
 800e5dc:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e5e0:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800e5e4:	4611      	mov	r1, r2
 800e5e6:	4618      	mov	r0, r3
 800e5e8:	f7fe f80a 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e5ec:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800e5ee:	4698      	mov	r8, r3
 800e5f0:	2333      	movs	r3, #51	@ 0x33
 800e5f2:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
 800e5f6:	2366      	movs	r3, #102	@ 0x66
 800e5f8:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a
 800e5fc:	2399      	movs	r3, #153	@ 0x99
 800e5fe:	f887 3079 	strb.w	r3, [r7, #121]	@ 0x79
 800e602:	f897 307b 	ldrb.w	r3, [r7, #123]	@ 0x7b
 800e606:	041a      	lsls	r2, r3, #16
 800e608:	f897 307a 	ldrb.w	r3, [r7, #122]	@ 0x7a
 800e60c:	021b      	lsls	r3, r3, #8
 800e60e:	431a      	orrs	r2, r3
 800e610:	f897 3079 	ldrb.w	r3, [r7, #121]	@ 0x79
 800e614:	4313      	orrs	r3, r2
 800e616:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e61a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800e61e:	4611      	mov	r1, r2
 800e620:	4618      	mov	r0, r3
 800e622:	f7fd ffed 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e626:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800e628:	9300      	str	r3, [sp, #0]
 800e62a:	4643      	mov	r3, r8
 800e62c:	4632      	mov	r2, r6
 800e62e:	4629      	mov	r1, r5
 800e630:	4620      	mov	r0, r4
 800e632:	f000 faf7 	bl	800ec24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID));
 800e636:	687b      	ldr	r3, [r7, #4]
 800e638:	f503 74a6 	add.w	r4, r3, #332	@ 0x14c
 800e63c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800e640:	2102      	movs	r1, #2
 800e642:	4618      	mov	r0, r3
 800e644:	f7fe f80e 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800e648:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800e64c:	2102      	movs	r1, #2
 800e64e:	4618      	mov	r0, r3
 800e650:	f7fe f808 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800e654:	f107 0228 	add.w	r2, r7, #40	@ 0x28
 800e658:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800e65c:	4619      	mov	r1, r3
 800e65e:	4620      	mov	r0, r4
 800e660:	f000 fafd 	bl	800ec5e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    flexButton1_1.setIconXY(0, 0);
 800e664:	687b      	ldr	r3, [r7, #4]
 800e666:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e66a:	2200      	movs	r2, #0
 800e66c:	2100      	movs	r1, #0
 800e66e:	4618      	mov	r0, r3
 800e670:	f000 fb47 	bl	800ed02 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE9setIconXYEss>
    flexButton1_1.setAction(flexButtonCallback);
 800e674:	687b      	ldr	r3, [r7, #4]
 800e676:	f503 72a6 	add.w	r2, r3, #332	@ 0x14c
 800e67a:	687b      	ldr	r3, [r7, #4]
 800e67c:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800e680:	4619      	mov	r1, r3
 800e682:	4610      	mov	r0, r2
 800e684:	f7ff fbbe 	bl	800de04 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_1.setPosition(75, 112, 48, 49);
 800e688:	687b      	ldr	r3, [r7, #4]
 800e68a:	f503 70a6 	add.w	r0, r3, #332	@ 0x14c
 800e68e:	2331      	movs	r3, #49	@ 0x31
 800e690:	9300      	str	r3, [sp, #0]
 800e692:	2330      	movs	r3, #48	@ 0x30
 800e694:	2270      	movs	r2, #112	@ 0x70
 800e696:	214b      	movs	r1, #75	@ 0x4b
 800e698:	f7fe f862 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_1);
 800e69c:	687a      	ldr	r2, [r7, #4]
 800e69e:	687b      	ldr	r3, [r7, #4]
 800e6a0:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e6a4:	4619      	mov	r1, r3
 800e6a6:	4610      	mov	r0, r2
 800e6a8:	f7fe fa40 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton2.setBoxWithBorderPosition(0, 0, 98, 50);
 800e6ac:	687b      	ldr	r3, [r7, #4]
 800e6ae:	f503 70fe 	add.w	r0, r3, #508	@ 0x1fc
 800e6b2:	2332      	movs	r3, #50	@ 0x32
 800e6b4:	9300      	str	r3, [sp, #0]
 800e6b6:	2362      	movs	r3, #98	@ 0x62
 800e6b8:	2200      	movs	r2, #0
 800e6ba:	2100      	movs	r1, #0
 800e6bc:	f000 fb39 	bl	800ed32 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton2.setBorderSize(5);
 800e6c0:	687b      	ldr	r3, [r7, #4]
 800e6c2:	f503 73fe 	add.w	r3, r3, #508	@ 0x1fc
 800e6c6:	2105      	movs	r1, #5
 800e6c8:	4618      	mov	r0, r3
 800e6ca:	f000 fb52 	bl	800ed72 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(153, 0, 0), touchgfx::Color::getColorFromRGB(255, 0, 4), touchgfx::Color::getColorFromRGB(102, 0, 0), touchgfx::Color::getColorFromRGB(250, 12, 12));
 800e6ce:	687b      	ldr	r3, [r7, #4]
 800e6d0:	f503 74fe 	add.w	r4, r3, #508	@ 0x1fc
 800e6d4:	2399      	movs	r3, #153	@ 0x99
 800e6d6:	f887 307e 	strb.w	r3, [r7, #126]	@ 0x7e
 800e6da:	2300      	movs	r3, #0
 800e6dc:	f887 307d 	strb.w	r3, [r7, #125]	@ 0x7d
 800e6e0:	2300      	movs	r3, #0
 800e6e2:	f887 307c 	strb.w	r3, [r7, #124]	@ 0x7c
 800e6e6:	f897 307e 	ldrb.w	r3, [r7, #126]	@ 0x7e
 800e6ea:	041a      	lsls	r2, r3, #16
 800e6ec:	f897 307d 	ldrb.w	r3, [r7, #125]	@ 0x7d
 800e6f0:	021b      	lsls	r3, r3, #8
 800e6f2:	431a      	orrs	r2, r3
 800e6f4:	f897 307c 	ldrb.w	r3, [r7, #124]	@ 0x7c
 800e6f8:	4313      	orrs	r3, r2
 800e6fa:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e6fe:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 800e702:	4611      	mov	r1, r2
 800e704:	4618      	mov	r0, r3
 800e706:	f7fd ff7b 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e70a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800e70c:	461d      	mov	r5, r3
 800e70e:	23ff      	movs	r3, #255	@ 0xff
 800e710:	f887 3081 	strb.w	r3, [r7, #129]	@ 0x81
 800e714:	2300      	movs	r3, #0
 800e716:	f887 3080 	strb.w	r3, [r7, #128]	@ 0x80
 800e71a:	2304      	movs	r3, #4
 800e71c:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
 800e720:	f897 3081 	ldrb.w	r3, [r7, #129]	@ 0x81
 800e724:	041a      	lsls	r2, r3, #16
 800e726:	f897 3080 	ldrb.w	r3, [r7, #128]	@ 0x80
 800e72a:	021b      	lsls	r3, r3, #8
 800e72c:	431a      	orrs	r2, r3
 800e72e:	f897 307f 	ldrb.w	r3, [r7, #127]	@ 0x7f
 800e732:	4313      	orrs	r3, r2
 800e734:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e738:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800e73c:	4611      	mov	r1, r2
 800e73e:	4618      	mov	r0, r3
 800e740:	f7fd ff5e 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e744:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e746:	461e      	mov	r6, r3
 800e748:	2366      	movs	r3, #102	@ 0x66
 800e74a:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800e74e:	2300      	movs	r3, #0
 800e750:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800e754:	2300      	movs	r3, #0
 800e756:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800e75a:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800e75e:	041a      	lsls	r2, r3, #16
 800e760:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800e764:	021b      	lsls	r3, r3, #8
 800e766:	431a      	orrs	r2, r3
 800e768:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800e76c:	4313      	orrs	r3, r2
 800e76e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e772:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800e776:	4611      	mov	r1, r2
 800e778:	4618      	mov	r0, r3
 800e77a:	f7fd ff41 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e77e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800e780:	4698      	mov	r8, r3
 800e782:	23fa      	movs	r3, #250	@ 0xfa
 800e784:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800e788:	230c      	movs	r3, #12
 800e78a:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800e78e:	230c      	movs	r3, #12
 800e790:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800e794:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800e798:	041a      	lsls	r2, r3, #16
 800e79a:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800e79e:	021b      	lsls	r3, r3, #8
 800e7a0:	431a      	orrs	r2, r3
 800e7a2:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800e7a6:	4313      	orrs	r3, r2
 800e7a8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e7ac:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800e7b0:	4611      	mov	r1, r2
 800e7b2:	4618      	mov	r0, r3
 800e7b4:	f7fd ff24 	bl	800c600 <_ZN8touchgfx9colortypeC1Em>
 800e7b8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800e7ba:	9300      	str	r3, [sp, #0]
 800e7bc:	4643      	mov	r3, r8
 800e7be:	4632      	mov	r2, r6
 800e7c0:	4629      	mov	r1, r5
 800e7c2:	4620      	mov	r0, r4
 800e7c4:	f000 fae7 	bl	800ed96 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton2.setAction(flexButtonCallback);
 800e7c8:	687b      	ldr	r3, [r7, #4]
 800e7ca:	f503 72fe 	add.w	r2, r3, #508	@ 0x1fc
 800e7ce:	687b      	ldr	r3, [r7, #4]
 800e7d0:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800e7d4:	4619      	mov	r1, r3
 800e7d6:	4610      	mov	r0, r2
 800e7d8:	f7ff fb14 	bl	800de04 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton2.setPosition(191, 111, 98, 50);
 800e7dc:	687b      	ldr	r3, [r7, #4]
 800e7de:	f503 70fe 	add.w	r0, r3, #508	@ 0x1fc
 800e7e2:	2332      	movs	r3, #50	@ 0x32
 800e7e4:	9300      	str	r3, [sp, #0]
 800e7e6:	2362      	movs	r3, #98	@ 0x62
 800e7e8:	226f      	movs	r2, #111	@ 0x6f
 800e7ea:	21bf      	movs	r1, #191	@ 0xbf
 800e7ec:	f7fd ffb8 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton2);
 800e7f0:	687a      	ldr	r2, [r7, #4]
 800e7f2:	687b      	ldr	r3, [r7, #4]
 800e7f4:	f503 73fe 	add.w	r3, r3, #508	@ 0x1fc
 800e7f8:	4619      	mov	r1, r3
 800e7fa:	4610      	mov	r0, r2
 800e7fc:	f7fe f996 	bl	800cb2c <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e800:	687b      	ldr	r3, [r7, #4]
 800e802:	4618      	mov	r0, r3
 800e804:	3788      	adds	r7, #136	@ 0x88
 800e806:	46bd      	mov	sp, r7
 800e808:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e80c <_ZN15Screen1ViewBaseD1Ev>:

Screen1ViewBase::~Screen1ViewBase()
 800e80c:	b580      	push	{r7, lr}
 800e80e:	b082      	sub	sp, #8
 800e810:	af00      	add	r7, sp, #0
 800e812:	6078      	str	r0, [r7, #4]
 800e814:	4a16      	ldr	r2, [pc, #88]	@ (800e870 <_ZN15Screen1ViewBaseD1Ev+0x64>)
 800e816:	687b      	ldr	r3, [r7, #4]
 800e818:	601a      	str	r2, [r3, #0]
{

}
 800e81a:	687b      	ldr	r3, [r7, #4]
 800e81c:	f503 731d 	add.w	r3, r3, #628	@ 0x274
 800e820:	4618      	mov	r0, r3
 800e822:	f000 fbd7 	bl	800efd4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800e826:	687b      	ldr	r3, [r7, #4]
 800e828:	f503 73fe 	add.w	r3, r3, #508	@ 0x1fc
 800e82c:	4618      	mov	r0, r3
 800e82e:	f000 fbf3 	bl	800f018 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e832:	687b      	ldr	r3, [r7, #4]
 800e834:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e838:	4618      	mov	r0, r3
 800e83a:	f000 fc15 	bl	800f068 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEED1Ev>
 800e83e:	687b      	ldr	r3, [r7, #4]
 800e840:	339c      	adds	r3, #156	@ 0x9c
 800e842:	4618      	mov	r0, r3
 800e844:	f000 fc10 	bl	800f068 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEED1Ev>
 800e848:	687b      	ldr	r3, [r7, #4]
 800e84a:	336c      	adds	r3, #108	@ 0x6c
 800e84c:	4618      	mov	r0, r3
 800e84e:	f7fe fe19 	bl	800d484 <_ZN8touchgfx10TiledImageD1Ev>
 800e852:	687b      	ldr	r3, [r7, #4]
 800e854:	3340      	adds	r3, #64	@ 0x40
 800e856:	4618      	mov	r0, r3
 800e858:	f7ff f97c 	bl	800db54 <_ZN8touchgfx3BoxD1Ev>
 800e85c:	687b      	ldr	r3, [r7, #4]
 800e85e:	4618      	mov	r0, r3
 800e860:	f7ff fcb4 	bl	800e1cc <_ZN8touchgfx4ViewI16Screen1PresenterED1Ev>
 800e864:	687b      	ldr	r3, [r7, #4]
 800e866:	4618      	mov	r0, r3
 800e868:	3708      	adds	r7, #8
 800e86a:	46bd      	mov	sp, r7
 800e86c:	bd80      	pop	{r7, pc}
 800e86e:	bf00      	nop
 800e870:	08029b28 	.word	0x08029b28

0800e874 <_ZN15Screen1ViewBaseD0Ev>:
Screen1ViewBase::~Screen1ViewBase()
 800e874:	b580      	push	{r7, lr}
 800e876:	b082      	sub	sp, #8
 800e878:	af00      	add	r7, sp, #0
 800e87a:	6078      	str	r0, [r7, #4]
}
 800e87c:	6878      	ldr	r0, [r7, #4]
 800e87e:	f7ff ffc5 	bl	800e80c <_ZN15Screen1ViewBaseD1Ev>
 800e882:	f44f 7121 	mov.w	r1, #644	@ 0x284
 800e886:	6878      	ldr	r0, [r7, #4]
 800e888:	f019 f8f5 	bl	8027a76 <_ZdlPvj>
 800e88c:	687b      	ldr	r3, [r7, #4]
 800e88e:	4618      	mov	r0, r3
 800e890:	3708      	adds	r7, #8
 800e892:	46bd      	mov	sp, r7
 800e894:	bd80      	pop	{r7, pc}

0800e896 <_ZN15Screen1ViewBase11setupScreenEv>:

void Screen1ViewBase::setupScreen()
{
 800e896:	b480      	push	{r7}
 800e898:	b083      	sub	sp, #12
 800e89a:	af00      	add	r7, sp, #0
 800e89c:	6078      	str	r0, [r7, #4]

}
 800e89e:	bf00      	nop
 800e8a0:	370c      	adds	r7, #12
 800e8a2:	46bd      	mov	sp, r7
 800e8a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8a8:	4770      	bx	lr

0800e8aa <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800e8aa:	b580      	push	{r7, lr}
 800e8ac:	b082      	sub	sp, #8
 800e8ae:	af00      	add	r7, sp, #0
 800e8b0:	6078      	str	r0, [r7, #4]
 800e8b2:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800e8b4:	687b      	ldr	r3, [r7, #4]
 800e8b6:	339c      	adds	r3, #156	@ 0x9c
 800e8b8:	683a      	ldr	r2, [r7, #0]
 800e8ba:	429a      	cmp	r2, r3
 800e8bc:	d105      	bne.n	800e8ca <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x20>
    {
        //leftArrow
        //When flexButton1 clicked call virtual function
        //Call leftArrow
        leftArrow();
 800e8be:	687b      	ldr	r3, [r7, #4]
 800e8c0:	681b      	ldr	r3, [r3, #0]
 800e8c2:	332c      	adds	r3, #44	@ 0x2c
 800e8c4:	681b      	ldr	r3, [r3, #0]
 800e8c6:	6878      	ldr	r0, [r7, #4]
 800e8c8:	4798      	blx	r3
    }
    if (&src == &flexButton1_1)
 800e8ca:	687b      	ldr	r3, [r7, #4]
 800e8cc:	f503 73a6 	add.w	r3, r3, #332	@ 0x14c
 800e8d0:	683a      	ldr	r2, [r7, #0]
 800e8d2:	429a      	cmp	r2, r3
 800e8d4:	d105      	bne.n	800e8e2 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
    {
        //rightArrow
        //When flexButton1_1 clicked call virtual function
        //Call rightArrow
        rightArrow();
 800e8d6:	687b      	ldr	r3, [r7, #4]
 800e8d8:	681b      	ldr	r3, [r3, #0]
 800e8da:	3330      	adds	r3, #48	@ 0x30
 800e8dc:	681b      	ldr	r3, [r3, #0]
 800e8de:	6878      	ldr	r0, [r7, #4]
 800e8e0:	4798      	blx	r3
    }
    if (&src == &flexButton2)
 800e8e2:	687b      	ldr	r3, [r7, #4]
 800e8e4:	f503 73fe 	add.w	r3, r3, #508	@ 0x1fc
 800e8e8:	683a      	ldr	r2, [r7, #0]
 800e8ea:	429a      	cmp	r2, r3
 800e8ec:	d105      	bne.n	800e8fa <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x50>
    {
        //stop
        //When flexButton2 clicked call virtual function
        //Call stop
        stop();
 800e8ee:	687b      	ldr	r3, [r7, #4]
 800e8f0:	681b      	ldr	r3, [r3, #0]
 800e8f2:	3334      	adds	r3, #52	@ 0x34
 800e8f4:	681b      	ldr	r3, [r3, #0]
 800e8f6:	6878      	ldr	r0, [r7, #4]
 800e8f8:	4798      	blx	r3
    }
}
 800e8fa:	bf00      	nop
 800e8fc:	3708      	adds	r7, #8
 800e8fe:	46bd      	mov	sp, r7
 800e900:	bd80      	pop	{r7, pc}
	...

0800e904 <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev>:
    View()
 800e904:	b580      	push	{r7, lr}
 800e906:	b082      	sub	sp, #8
 800e908:	af00      	add	r7, sp, #0
 800e90a:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800e90c:	687b      	ldr	r3, [r7, #4]
 800e90e:	4618      	mov	r0, r3
 800e910:	f009 f91a 	bl	8017b48 <_ZN8touchgfx6ScreenC1Ev>
 800e914:	4a05      	ldr	r2, [pc, #20]	@ (800e92c <_ZN8touchgfx4ViewI16Screen1PresenterEC1Ev+0x28>)
 800e916:	687b      	ldr	r3, [r7, #4]
 800e918:	601a      	str	r2, [r3, #0]
 800e91a:	687b      	ldr	r3, [r7, #4]
 800e91c:	2200      	movs	r2, #0
 800e91e:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800e920:	687b      	ldr	r3, [r7, #4]
 800e922:	4618      	mov	r0, r3
 800e924:	3708      	adds	r7, #8
 800e926:	46bd      	mov	sp, r7
 800e928:	bd80      	pop	{r7, pc}
 800e92a:	bf00      	nop
 800e92c:	08029d58 	.word	0x08029d58

0800e930 <_ZN8touchgfx19RepeatButtonTriggerD1Ev>:
class RepeatButtonTrigger : public AbstractButtonContainer
 800e930:	b580      	push	{r7, lr}
 800e932:	b082      	sub	sp, #8
 800e934:	af00      	add	r7, sp, #0
 800e936:	6078      	str	r0, [r7, #4]
 800e938:	4a05      	ldr	r2, [pc, #20]	@ (800e950 <_ZN8touchgfx19RepeatButtonTriggerD1Ev+0x20>)
 800e93a:	687b      	ldr	r3, [r7, #4]
 800e93c:	601a      	str	r2, [r3, #0]
 800e93e:	687b      	ldr	r3, [r7, #4]
 800e940:	4618      	mov	r0, r3
 800e942:	f7ff fb2f 	bl	800dfa4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800e946:	687b      	ldr	r3, [r7, #4]
 800e948:	4618      	mov	r0, r3
 800e94a:	3708      	adds	r7, #8
 800e94c:	46bd      	mov	sp, r7
 800e94e:	bd80      	pop	{r7, pc}
 800e950:	08029d8c 	.word	0x08029d8c

0800e954 <_ZN8touchgfx19RepeatButtonTriggerD0Ev>:
 800e954:	b580      	push	{r7, lr}
 800e956:	b082      	sub	sp, #8
 800e958:	af00      	add	r7, sp, #0
 800e95a:	6078      	str	r0, [r7, #4]
 800e95c:	6878      	ldr	r0, [r7, #4]
 800e95e:	f7ff ffe7 	bl	800e930 <_ZN8touchgfx19RepeatButtonTriggerD1Ev>
 800e962:	213c      	movs	r1, #60	@ 0x3c
 800e964:	6878      	ldr	r0, [r7, #4]
 800e966:	f019 f886 	bl	8027a76 <_ZdlPvj>
 800e96a:	687b      	ldr	r3, [r7, #4]
 800e96c:	4618      	mov	r0, r3
 800e96e:	3708      	adds	r7, #8
 800e970:	46bd      	mov	sp, r7
 800e972:	bd80      	pop	{r7, pc}

0800e974 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800e974:	b580      	push	{r7, lr}
 800e976:	b082      	sub	sp, #8
 800e978:	af00      	add	r7, sp, #0
 800e97a:	6078      	str	r0, [r7, #4]
 800e97c:	4a05      	ldr	r2, [pc, #20]	@ (800e994 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	601a      	str	r2, [r3, #0]
 800e982:	687b      	ldr	r3, [r7, #4]
 800e984:	4618      	mov	r0, r3
 800e986:	f7ff f8e5 	bl	800db54 <_ZN8touchgfx3BoxD1Ev>
 800e98a:	687b      	ldr	r3, [r7, #4]
 800e98c:	4618      	mov	r0, r3
 800e98e:	3708      	adds	r7, #8
 800e990:	46bd      	mov	sp, r7
 800e992:	bd80      	pop	{r7, pc}
 800e994:	0802ab60 	.word	0x0802ab60

0800e998 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e998:	b580      	push	{r7, lr}
 800e99a:	b082      	sub	sp, #8
 800e99c:	af00      	add	r7, sp, #0
 800e99e:	6078      	str	r0, [r7, #4]
 800e9a0:	6878      	ldr	r0, [r7, #4]
 800e9a2:	f7ff ffe7 	bl	800e974 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800e9a6:	2134      	movs	r1, #52	@ 0x34
 800e9a8:	6878      	ldr	r0, [r7, #4]
 800e9aa:	f019 f864 	bl	8027a76 <_ZdlPvj>
 800e9ae:	687b      	ldr	r3, [r7, #4]
 800e9b0:	4618      	mov	r0, r3
 800e9b2:	3708      	adds	r7, #8
 800e9b4:	46bd      	mov	sp, r7
 800e9b6:	bd80      	pop	{r7, pc}

0800e9b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 800e9b8:	b580      	push	{r7, lr}
 800e9ba:	b082      	sub	sp, #8
 800e9bc:	af00      	add	r7, sp, #0
 800e9be:	6078      	str	r0, [r7, #4]
 800e9c0:	4a08      	ldr	r2, [pc, #32]	@ (800e9e4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED1Ev+0x2c>)
 800e9c2:	687b      	ldr	r3, [r7, #4]
 800e9c4:	601a      	str	r2, [r3, #0]
 800e9c6:	687b      	ldr	r3, [r7, #4]
 800e9c8:	333c      	adds	r3, #60	@ 0x3c
 800e9ca:	4618      	mov	r0, r3
 800e9cc:	f7ff ffd2 	bl	800e974 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800e9d0:	687b      	ldr	r3, [r7, #4]
 800e9d2:	4618      	mov	r0, r3
 800e9d4:	f7ff ffac 	bl	800e930 <_ZN8touchgfx19RepeatButtonTriggerD1Ev>
 800e9d8:	687b      	ldr	r3, [r7, #4]
 800e9da:	4618      	mov	r0, r3
 800e9dc:	3708      	adds	r7, #8
 800e9de:	46bd      	mov	sp, r7
 800e9e0:	bd80      	pop	{r7, pc}
 800e9e2:	bf00      	nop
 800e9e4:	08029cbc 	.word	0x08029cbc

0800e9e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED0Ev>:
 800e9e8:	b580      	push	{r7, lr}
 800e9ea:	b082      	sub	sp, #8
 800e9ec:	af00      	add	r7, sp, #0
 800e9ee:	6078      	str	r0, [r7, #4]
 800e9f0:	6878      	ldr	r0, [r7, #4]
 800e9f2:	f7ff ffe1 	bl	800e9b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED1Ev>
 800e9f6:	2180      	movs	r1, #128	@ 0x80
 800e9f8:	6878      	ldr	r0, [r7, #4]
 800e9fa:	f019 f83c 	bl	8027a76 <_ZdlPvj>
 800e9fe:	687b      	ldr	r3, [r7, #4]
 800ea00:	4618      	mov	r0, r3
 800ea02:	3708      	adds	r7, #8
 800ea04:	46bd      	mov	sp, r7
 800ea06:	bd80      	pop	{r7, pc}

0800ea08 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEEC1Ev>:
 */
template <class T>
class IconButtonStyle : public T
{
public:
    IconButtonStyle()
 800ea08:	b590      	push	{r4, r7, lr}
 800ea0a:	b085      	sub	sp, #20
 800ea0c:	af00      	add	r7, sp, #0
 800ea0e:	6078      	str	r0, [r7, #4]
        : T()
 800ea10:	687b      	ldr	r3, [r7, #4]
 800ea12:	4618      	mov	r0, r3
 800ea14:	f000 f9dc 	bl	800edd0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>
 800ea18:	4a16      	ldr	r2, [pc, #88]	@ (800ea74 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEEC1Ev+0x6c>)
 800ea1a:	687b      	ldr	r3, [r7, #4]
 800ea1c:	601a      	str	r2, [r3, #0]
 800ea1e:	687b      	ldr	r3, [r7, #4]
 800ea20:	3380      	adds	r3, #128	@ 0x80
 800ea22:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ea26:	4618      	mov	r0, r3
 800ea28:	f7fd fe1c 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800ea2c:	687b      	ldr	r3, [r7, #4]
 800ea2e:	3382      	adds	r3, #130	@ 0x82
 800ea30:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ea34:	4618      	mov	r0, r3
 800ea36:	f7fd fe15 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800ea3a:	687b      	ldr	r3, [r7, #4]
 800ea3c:	f103 0484 	add.w	r4, r3, #132	@ 0x84
 800ea40:	f107 030c 	add.w	r3, r7, #12
 800ea44:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ea48:	4618      	mov	r0, r3
 800ea4a:	f7fd fe0b 	bl	800c664 <_ZN8touchgfx6BitmapC1Et>
 800ea4e:	f107 030c 	add.w	r3, r7, #12
 800ea52:	4619      	mov	r1, r3
 800ea54:	4620      	mov	r0, r4
 800ea56:	f7fe f8df 	bl	800cc18 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
    {
        T::add(iconImage);
 800ea5a:	687a      	ldr	r2, [r7, #4]
 800ea5c:	687b      	ldr	r3, [r7, #4]
 800ea5e:	3384      	adds	r3, #132	@ 0x84
 800ea60:	4619      	mov	r1, r3
 800ea62:	4610      	mov	r0, r2
 800ea64:	f003 faee 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ea68:	687b      	ldr	r3, [r7, #4]
 800ea6a:	4618      	mov	r0, r3
 800ea6c:	3714      	adds	r7, #20
 800ea6e:	46bd      	mov	sp, r7
 800ea70:	bd90      	pop	{r4, r7, pc}
 800ea72:	bf00      	nop
 800ea74:	08029c1c 	.word	0x08029c1c

0800ea78 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800ea78:	b580      	push	{r7, lr}
 800ea7a:	b082      	sub	sp, #8
 800ea7c:	af00      	add	r7, sp, #0
 800ea7e:	6078      	str	r0, [r7, #4]
 800ea80:	687b      	ldr	r3, [r7, #4]
 800ea82:	4618      	mov	r0, r3
 800ea84:	f7ff f96e 	bl	800dd64 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800ea88:	4a03      	ldr	r2, [pc, #12]	@ (800ea98 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800ea8a:	687b      	ldr	r3, [r7, #4]
 800ea8c:	601a      	str	r2, [r3, #0]
 800ea8e:	687b      	ldr	r3, [r7, #4]
 800ea90:	4618      	mov	r0, r3
 800ea92:	3708      	adds	r7, #8
 800ea94:	46bd      	mov	sp, r7
 800ea96:	bd80      	pop	{r7, pc}
 800ea98:	08029e28 	.word	0x08029e28

0800ea9c <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800ea9c:	b580      	push	{r7, lr}
 800ea9e:	b082      	sub	sp, #8
 800eaa0:	af00      	add	r7, sp, #0
 800eaa2:	6078      	str	r0, [r7, #4]
 800eaa4:	4a05      	ldr	r2, [pc, #20]	@ (800eabc <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800eaa6:	687b      	ldr	r3, [r7, #4]
 800eaa8:	601a      	str	r2, [r3, #0]
 800eaaa:	687b      	ldr	r3, [r7, #4]
 800eaac:	4618      	mov	r0, r3
 800eaae:	f7ff fa79 	bl	800dfa4 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800eab2:	687b      	ldr	r3, [r7, #4]
 800eab4:	4618      	mov	r0, r3
 800eab6:	3708      	adds	r7, #8
 800eab8:	46bd      	mov	sp, r7
 800eaba:	bd80      	pop	{r7, pc}
 800eabc:	08029e28 	.word	0x08029e28

0800eac0 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800eac0:	b580      	push	{r7, lr}
 800eac2:	b082      	sub	sp, #8
 800eac4:	af00      	add	r7, sp, #0
 800eac6:	6078      	str	r0, [r7, #4]
 800eac8:	6878      	ldr	r0, [r7, #4]
 800eaca:	f7ff ffe7 	bl	800ea9c <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800eace:	2134      	movs	r1, #52	@ 0x34
 800ead0:	6878      	ldr	r0, [r7, #4]
 800ead2:	f018 ffd0 	bl	8027a76 <_ZdlPvj>
 800ead6:	687b      	ldr	r3, [r7, #4]
 800ead8:	4618      	mov	r0, r3
 800eada:	3708      	adds	r7, #8
 800eadc:	46bd      	mov	sp, r7
 800eade:	bd80      	pop	{r7, pc}

0800eae0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
{
public:
    BoxWithBorderButtonStyle()
 800eae0:	b580      	push	{r7, lr}
 800eae2:	b082      	sub	sp, #8
 800eae4:	af00      	add	r7, sp, #0
 800eae6:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800eae8:	687b      	ldr	r3, [r7, #4]
 800eaea:	4618      	mov	r0, r3
 800eaec:	2334      	movs	r3, #52	@ 0x34
 800eaee:	461a      	mov	r2, r3
 800eaf0:	2100      	movs	r1, #0
 800eaf2:	f019 f9f6 	bl	8027ee2 <memset>
 800eaf6:	687b      	ldr	r3, [r7, #4]
 800eaf8:	4618      	mov	r0, r3
 800eafa:	f7ff ffbd 	bl	800ea78 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800eafe:	4a17      	ldr	r2, [pc, #92]	@ (800eb5c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800eb00:	687b      	ldr	r3, [r7, #4]
 800eb02:	601a      	str	r2, [r3, #0]
 800eb04:	687b      	ldr	r3, [r7, #4]
 800eb06:	3334      	adds	r3, #52	@ 0x34
 800eb08:	4618      	mov	r0, r3
 800eb0a:	f7ff f9c5 	bl	800de98 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800eb0e:	687b      	ldr	r3, [r7, #4]
 800eb10:	3368      	adds	r3, #104	@ 0x68
 800eb12:	4618      	mov	r0, r3
 800eb14:	f7fd fd66 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 800eb18:	687b      	ldr	r3, [r7, #4]
 800eb1a:	336c      	adds	r3, #108	@ 0x6c
 800eb1c:	4618      	mov	r0, r3
 800eb1e:	f7fd fd61 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 800eb22:	687b      	ldr	r3, [r7, #4]
 800eb24:	3370      	adds	r3, #112	@ 0x70
 800eb26:	4618      	mov	r0, r3
 800eb28:	f7fd fd5c 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 800eb2c:	687b      	ldr	r3, [r7, #4]
 800eb2e:	3374      	adds	r3, #116	@ 0x74
 800eb30:	4618      	mov	r0, r3
 800eb32:	f7fd fd57 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800eb36:	687b      	ldr	r3, [r7, #4]
 800eb38:	3334      	adds	r3, #52	@ 0x34
 800eb3a:	2200      	movs	r2, #0
 800eb3c:	2100      	movs	r1, #0
 800eb3e:	4618      	mov	r0, r3
 800eb40:	f7fd fe4d 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800eb44:	687a      	ldr	r2, [r7, #4]
 800eb46:	687b      	ldr	r3, [r7, #4]
 800eb48:	3334      	adds	r3, #52	@ 0x34
 800eb4a:	4619      	mov	r1, r3
 800eb4c:	4610      	mov	r0, r2
 800eb4e:	f003 fa79 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800eb52:	687b      	ldr	r3, [r7, #4]
 800eb54:	4618      	mov	r0, r3
 800eb56:	3708      	adds	r7, #8
 800eb58:	46bd      	mov	sp, r7
 800eb5a:	bd80      	pop	{r7, pc}
 800eb5c:	08029b80 	.word	0x08029b80

0800eb60 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800eb60:	b480      	push	{r7}
 800eb62:	b083      	sub	sp, #12
 800eb64:	af00      	add	r7, sp, #0
 800eb66:	6078      	str	r0, [r7, #4]
 800eb68:	4a04      	ldr	r2, [pc, #16]	@ (800eb7c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800eb6a:	687b      	ldr	r3, [r7, #4]
 800eb6c:	601a      	str	r2, [r3, #0]
 800eb6e:	687b      	ldr	r3, [r7, #4]
 800eb70:	4618      	mov	r0, r3
 800eb72:	370c      	adds	r7, #12
 800eb74:	46bd      	mov	sp, r7
 800eb76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb7a:	4770      	bx	lr
 800eb7c:	08029ec4 	.word	0x08029ec4

0800eb80 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800eb80:	b580      	push	{r7, lr}
 800eb82:	b084      	sub	sp, #16
 800eb84:	af00      	add	r7, sp, #0
 800eb86:	60f8      	str	r0, [r7, #12]
 800eb88:	60b9      	str	r1, [r7, #8]
 800eb8a:	4639      	mov	r1, r7
 800eb8c:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800eb90:	68fb      	ldr	r3, [r7, #12]
 800eb92:	4618      	mov	r0, r3
 800eb94:	f7ff ffe4 	bl	800eb60 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800eb98:	4a08      	ldr	r2, [pc, #32]	@ (800ebbc <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800eb9a:	68fb      	ldr	r3, [r7, #12]
 800eb9c:	601a      	str	r2, [r3, #0]
 800eb9e:	68fb      	ldr	r3, [r7, #12]
 800eba0:	68ba      	ldr	r2, [r7, #8]
 800eba2:	605a      	str	r2, [r3, #4]
 800eba4:	68fb      	ldr	r3, [r7, #12]
 800eba6:	3308      	adds	r3, #8
 800eba8:	463a      	mov	r2, r7
 800ebaa:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ebae:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800ebb2:	68fb      	ldr	r3, [r7, #12]
 800ebb4:	4618      	mov	r0, r3
 800ebb6:	3710      	adds	r7, #16
 800ebb8:	46bd      	mov	sp, r7
 800ebba:	bd80      	pop	{r7, pc}
 800ebbc:	08029b68 	.word	0x08029b68

0800ebc0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800ebc0:	b590      	push	{r4, r7, lr}
 800ebc2:	b087      	sub	sp, #28
 800ebc4:	af02      	add	r7, sp, #8
 800ebc6:	60f8      	str	r0, [r7, #12]
 800ebc8:	4608      	mov	r0, r1
 800ebca:	4611      	mov	r1, r2
 800ebcc:	461a      	mov	r2, r3
 800ebce:	4603      	mov	r3, r0
 800ebd0:	817b      	strh	r3, [r7, #10]
 800ebd2:	460b      	mov	r3, r1
 800ebd4:	813b      	strh	r3, [r7, #8]
 800ebd6:	4613      	mov	r3, r2
 800ebd8:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800ebda:	68fb      	ldr	r3, [r7, #12]
 800ebdc:	f103 003c 	add.w	r0, r3, #60	@ 0x3c
 800ebe0:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800ebe4:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800ebe8:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800ebec:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800ebf0:	9300      	str	r3, [sp, #0]
 800ebf2:	4623      	mov	r3, r4
 800ebf4:	f7fd fdb4 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800ebf8:	bf00      	nop
 800ebfa:	3714      	adds	r7, #20
 800ebfc:	46bd      	mov	sp, r7
 800ebfe:	bd90      	pop	{r4, r7, pc}

0800ec00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800ec00:	b580      	push	{r7, lr}
 800ec02:	b082      	sub	sp, #8
 800ec04:	af00      	add	r7, sp, #0
 800ec06:	6078      	str	r0, [r7, #4]
 800ec08:	460b      	mov	r3, r1
 800ec0a:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800ec0c:	687b      	ldr	r3, [r7, #4]
 800ec0e:	333c      	adds	r3, #60	@ 0x3c
 800ec10:	78fa      	ldrb	r2, [r7, #3]
 800ec12:	b292      	uxth	r2, r2
 800ec14:	4611      	mov	r1, r2
 800ec16:	4618      	mov	r0, r3
 800ec18:	f7ff f968 	bl	800deec <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800ec1c:	bf00      	nop
 800ec1e:	3708      	adds	r7, #8
 800ec20:	46bd      	mov	sp, r7
 800ec22:	bd80      	pop	{r7, pc}

0800ec24 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800ec24:	b580      	push	{r7, lr}
 800ec26:	b084      	sub	sp, #16
 800ec28:	af00      	add	r7, sp, #0
 800ec2a:	60f8      	str	r0, [r7, #12]
 800ec2c:	60b9      	str	r1, [r7, #8]
 800ec2e:	607a      	str	r2, [r7, #4]
 800ec30:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800ec32:	68fb      	ldr	r3, [r7, #12]
 800ec34:	68ba      	ldr	r2, [r7, #8]
 800ec36:	671a      	str	r2, [r3, #112]	@ 0x70
        down = colorPressed;
 800ec38:	68fb      	ldr	r3, [r7, #12]
 800ec3a:	687a      	ldr	r2, [r7, #4]
 800ec3c:	675a      	str	r2, [r3, #116]	@ 0x74
        borderUp = borderColorReleased;
 800ec3e:	68fb      	ldr	r3, [r7, #12]
 800ec40:	683a      	ldr	r2, [r7, #0]
 800ec42:	679a      	str	r2, [r3, #120]	@ 0x78
        borderDown = borderColorPressed;
 800ec44:	68fb      	ldr	r3, [r7, #12]
 800ec46:	69ba      	ldr	r2, [r7, #24]
 800ec48:	67da      	str	r2, [r3, #124]	@ 0x7c
        handlePressedUpdated();
 800ec4a:	68fb      	ldr	r3, [r7, #12]
 800ec4c:	681b      	ldr	r3, [r3, #0]
 800ec4e:	338c      	adds	r3, #140	@ 0x8c
 800ec50:	681b      	ldr	r3, [r3, #0]
 800ec52:	68f8      	ldr	r0, [r7, #12]
 800ec54:	4798      	blx	r3
    }
 800ec56:	bf00      	nop
 800ec58:	3710      	adds	r7, #16
 800ec5a:	46bd      	mov	sp, r7
 800ec5c:	bd80      	pop	{r7, pc}

0800ec5e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
     * Sets icon bitmaps.
     *
     * @param  newIconReleased The new icon released.
     * @param  newIconPressed  The new icon pressed.
     */
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 800ec5e:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ec60:	b085      	sub	sp, #20
 800ec62:	af00      	add	r7, sp, #0
 800ec64:	60f8      	str	r0, [r7, #12]
 800ec66:	60b9      	str	r1, [r7, #8]
 800ec68:	607a      	str	r2, [r7, #4]
    {
        iconReleased = newIconReleased;
 800ec6a:	68fb      	ldr	r3, [r7, #12]
 800ec6c:	68ba      	ldr	r2, [r7, #8]
 800ec6e:	8812      	ldrh	r2, [r2, #0]
 800ec70:	f8a3 2080 	strh.w	r2, [r3, #128]	@ 0x80
        iconPressed = newIconPressed;
 800ec74:	68fb      	ldr	r3, [r7, #12]
 800ec76:	687a      	ldr	r2, [r7, #4]
 800ec78:	8812      	ldrh	r2, [r2, #0]
 800ec7a:	f8a3 2082 	strh.w	r2, [r3, #130]	@ 0x82

        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 800ec7e:	68fb      	ldr	r3, [r7, #12]
 800ec80:	f103 0584 	add.w	r5, r3, #132	@ 0x84
 800ec84:	68fb      	ldr	r3, [r7, #12]
 800ec86:	4618      	mov	r0, r3
 800ec88:	f7ff f81b 	bl	800dcc2 <_ZNK8touchgfx8Drawable8getWidthEv>
 800ec8c:	4603      	mov	r3, r0
 800ec8e:	2b00      	cmp	r3, #0
 800ec90:	da00      	bge.n	800ec94 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0x36>
 800ec92:	3301      	adds	r3, #1
 800ec94:	105b      	asrs	r3, r3, #1
 800ec96:	b21b      	sxth	r3, r3
 800ec98:	b29c      	uxth	r4, r3
 800ec9a:	6878      	ldr	r0, [r7, #4]
 800ec9c:	f00a f910 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800eca0:	4603      	mov	r3, r0
 800eca2:	2b00      	cmp	r3, #0
 800eca4:	da00      	bge.n	800eca8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0x4a>
 800eca6:	3301      	adds	r3, #1
 800eca8:	105b      	asrs	r3, r3, #1
 800ecaa:	b21b      	sxth	r3, r3
 800ecac:	b29b      	uxth	r3, r3
 800ecae:	1ae3      	subs	r3, r4, r3
 800ecb0:	b29b      	uxth	r3, r3
 800ecb2:	b21e      	sxth	r6, r3
 800ecb4:	68fb      	ldr	r3, [r7, #12]
 800ecb6:	4618      	mov	r0, r3
 800ecb8:	f7ff f810 	bl	800dcdc <_ZNK8touchgfx8Drawable9getHeightEv>
 800ecbc:	4603      	mov	r3, r0
 800ecbe:	2b00      	cmp	r3, #0
 800ecc0:	da00      	bge.n	800ecc4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0x66>
 800ecc2:	3301      	adds	r3, #1
 800ecc4:	105b      	asrs	r3, r3, #1
 800ecc6:	b21b      	sxth	r3, r3
 800ecc8:	b29c      	uxth	r4, r3
 800ecca:	6878      	ldr	r0, [r7, #4]
 800eccc:	f00a f92c 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ecd0:	4603      	mov	r3, r0
 800ecd2:	2b00      	cmp	r3, #0
 800ecd4:	da00      	bge.n	800ecd8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_+0x7a>
 800ecd6:	3301      	adds	r3, #1
 800ecd8:	105b      	asrs	r3, r3, #1
 800ecda:	b21b      	sxth	r3, r3
 800ecdc:	b29b      	uxth	r3, r3
 800ecde:	1ae3      	subs	r3, r4, r3
 800ece0:	b29b      	uxth	r3, r3
 800ece2:	b21b      	sxth	r3, r3
 800ece4:	461a      	mov	r2, r3
 800ece6:	4631      	mov	r1, r6
 800ece8:	4628      	mov	r0, r5
 800ecea:	f7fd fd78 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>

        handlePressedUpdated();
 800ecee:	68fb      	ldr	r3, [r7, #12]
 800ecf0:	681b      	ldr	r3, [r3, #0]
 800ecf2:	338c      	adds	r3, #140	@ 0x8c
 800ecf4:	681b      	ldr	r3, [r3, #0]
 800ecf6:	68f8      	ldr	r0, [r7, #12]
 800ecf8:	4798      	blx	r3
    }
 800ecfa:	bf00      	nop
 800ecfc:	3714      	adds	r7, #20
 800ecfe:	46bd      	mov	sp, r7
 800ed00:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ed02 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE9setIconXYEss>:
     * Sets the position of the icon.
     *
     * @param  x The x coordinate.
     * @param  y The y coordinate.
     */
    void setIconXY(int16_t x, int16_t y)
 800ed02:	b580      	push	{r7, lr}
 800ed04:	b082      	sub	sp, #8
 800ed06:	af00      	add	r7, sp, #0
 800ed08:	6078      	str	r0, [r7, #4]
 800ed0a:	460b      	mov	r3, r1
 800ed0c:	807b      	strh	r3, [r7, #2]
 800ed0e:	4613      	mov	r3, r2
 800ed10:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800ed12:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ed16:	4619      	mov	r1, r3
 800ed18:	6878      	ldr	r0, [r7, #4]
 800ed1a:	f000 f904 	bl	800ef26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE8setIconXEs>
        setIconY(y);
 800ed1e:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ed22:	4619      	mov	r1, r3
 800ed24:	6878      	ldr	r0, [r7, #4]
 800ed26:	f000 f910 	bl	800ef4a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE8setIconYEs>
    }
 800ed2a:	bf00      	nop
 800ed2c:	3708      	adds	r7, #8
 800ed2e:	46bd      	mov	sp, r7
 800ed30:	bd80      	pop	{r7, pc}

0800ed32 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800ed32:	b590      	push	{r4, r7, lr}
 800ed34:	b087      	sub	sp, #28
 800ed36:	af02      	add	r7, sp, #8
 800ed38:	60f8      	str	r0, [r7, #12]
 800ed3a:	4608      	mov	r0, r1
 800ed3c:	4611      	mov	r1, r2
 800ed3e:	461a      	mov	r2, r3
 800ed40:	4603      	mov	r3, r0
 800ed42:	817b      	strh	r3, [r7, #10]
 800ed44:	460b      	mov	r3, r1
 800ed46:	813b      	strh	r3, [r7, #8]
 800ed48:	4613      	mov	r3, r2
 800ed4a:	80fb      	strh	r3, [r7, #6]
        borderBox.setPosition(x, y, width, height);
 800ed4c:	68fb      	ldr	r3, [r7, #12]
 800ed4e:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800ed52:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800ed56:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800ed5a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800ed5e:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800ed62:	9300      	str	r3, [sp, #0]
 800ed64:	4623      	mov	r3, r4
 800ed66:	f7fd fcfb 	bl	800c760 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800ed6a:	bf00      	nop
 800ed6c:	3714      	adds	r7, #20
 800ed6e:	46bd      	mov	sp, r7
 800ed70:	bd90      	pop	{r4, r7, pc}

0800ed72 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    void setBorderSize(uint8_t size)
 800ed72:	b580      	push	{r7, lr}
 800ed74:	b082      	sub	sp, #8
 800ed76:	af00      	add	r7, sp, #0
 800ed78:	6078      	str	r0, [r7, #4]
 800ed7a:	460b      	mov	r3, r1
 800ed7c:	70fb      	strb	r3, [r7, #3]
        borderBox.setBorderSize(size);
 800ed7e:	687b      	ldr	r3, [r7, #4]
 800ed80:	3334      	adds	r3, #52	@ 0x34
 800ed82:	78fa      	ldrb	r2, [r7, #3]
 800ed84:	b292      	uxth	r2, r2
 800ed86:	4611      	mov	r1, r2
 800ed88:	4618      	mov	r0, r3
 800ed8a:	f7ff f8af 	bl	800deec <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800ed8e:	bf00      	nop
 800ed90:	3708      	adds	r7, #8
 800ed92:	46bd      	mov	sp, r7
 800ed94:	bd80      	pop	{r7, pc}

0800ed96 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800ed96:	b580      	push	{r7, lr}
 800ed98:	b084      	sub	sp, #16
 800ed9a:	af00      	add	r7, sp, #0
 800ed9c:	60f8      	str	r0, [r7, #12]
 800ed9e:	60b9      	str	r1, [r7, #8]
 800eda0:	607a      	str	r2, [r7, #4]
 800eda2:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800eda4:	68fb      	ldr	r3, [r7, #12]
 800eda6:	68ba      	ldr	r2, [r7, #8]
 800eda8:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800edaa:	68fb      	ldr	r3, [r7, #12]
 800edac:	687a      	ldr	r2, [r7, #4]
 800edae:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800edb0:	68fb      	ldr	r3, [r7, #12]
 800edb2:	683a      	ldr	r2, [r7, #0]
 800edb4:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800edb6:	68fb      	ldr	r3, [r7, #12]
 800edb8:	69ba      	ldr	r2, [r7, #24]
 800edba:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800edbc:	68fb      	ldr	r3, [r7, #12]
 800edbe:	681b      	ldr	r3, [r3, #0]
 800edc0:	338c      	adds	r3, #140	@ 0x8c
 800edc2:	681b      	ldr	r3, [r3, #0]
 800edc4:	68f8      	ldr	r0, [r7, #12]
 800edc6:	4798      	blx	r3
    }
 800edc8:	bf00      	nop
 800edca:	3710      	adds	r7, #16
 800edcc:	46bd      	mov	sp, r7
 800edce:	bd80      	pop	{r7, pc}

0800edd0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev>:
    BoxWithBorderButtonStyle()
 800edd0:	b580      	push	{r7, lr}
 800edd2:	b082      	sub	sp, #8
 800edd4:	af00      	add	r7, sp, #0
 800edd6:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800edd8:	687b      	ldr	r3, [r7, #4]
 800edda:	4618      	mov	r0, r3
 800eddc:	f7ff f904 	bl	800dfe8 <_ZN8touchgfx19RepeatButtonTriggerC1Ev>
 800ede0:	4a17      	ldr	r2, [pc, #92]	@ (800ee40 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEC1Ev+0x70>)
 800ede2:	687b      	ldr	r3, [r7, #4]
 800ede4:	601a      	str	r2, [r3, #0]
 800ede6:	687b      	ldr	r3, [r7, #4]
 800ede8:	333c      	adds	r3, #60	@ 0x3c
 800edea:	4618      	mov	r0, r3
 800edec:	f7ff f854 	bl	800de98 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800edf0:	687b      	ldr	r3, [r7, #4]
 800edf2:	3370      	adds	r3, #112	@ 0x70
 800edf4:	4618      	mov	r0, r3
 800edf6:	f7fd fbf5 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 800edfa:	687b      	ldr	r3, [r7, #4]
 800edfc:	3374      	adds	r3, #116	@ 0x74
 800edfe:	4618      	mov	r0, r3
 800ee00:	f7fd fbf0 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 800ee04:	687b      	ldr	r3, [r7, #4]
 800ee06:	3378      	adds	r3, #120	@ 0x78
 800ee08:	4618      	mov	r0, r3
 800ee0a:	f7fd fbeb 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 800ee0e:	687b      	ldr	r3, [r7, #4]
 800ee10:	337c      	adds	r3, #124	@ 0x7c
 800ee12:	4618      	mov	r0, r3
 800ee14:	f7fd fbe6 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
        borderBox.setXY(0, 0);
 800ee18:	687b      	ldr	r3, [r7, #4]
 800ee1a:	333c      	adds	r3, #60	@ 0x3c
 800ee1c:	2200      	movs	r2, #0
 800ee1e:	2100      	movs	r1, #0
 800ee20:	4618      	mov	r0, r3
 800ee22:	f7fd fcdc 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800ee26:	687a      	ldr	r2, [r7, #4]
 800ee28:	687b      	ldr	r3, [r7, #4]
 800ee2a:	333c      	adds	r3, #60	@ 0x3c
 800ee2c:	4619      	mov	r1, r3
 800ee2e:	4610      	mov	r0, r2
 800ee30:	f003 f908 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800ee34:	687b      	ldr	r3, [r7, #4]
 800ee36:	4618      	mov	r0, r3
 800ee38:	3708      	adds	r7, #8
 800ee3a:	46bd      	mov	sp, r7
 800ee3c:	bd80      	pop	{r7, pc}
 800ee3e:	bf00      	nop
 800ee40:	08029cbc 	.word	0x08029cbc

0800ee44 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800ee44:	b480      	push	{r7}
 800ee46:	b083      	sub	sp, #12
 800ee48:	af00      	add	r7, sp, #0
 800ee4a:	6078      	str	r0, [r7, #4]
    }
 800ee4c:	4a04      	ldr	r2, [pc, #16]	@ (800ee60 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800ee4e:	687b      	ldr	r3, [r7, #4]
 800ee50:	601a      	str	r2, [r3, #0]
 800ee52:	687b      	ldr	r3, [r7, #4]
 800ee54:	4618      	mov	r0, r3
 800ee56:	370c      	adds	r7, #12
 800ee58:	46bd      	mov	sp, r7
 800ee5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ee5e:	4770      	bx	lr
 800ee60:	08029ec4 	.word	0x08029ec4

0800ee64 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800ee64:	b580      	push	{r7, lr}
 800ee66:	b082      	sub	sp, #8
 800ee68:	af00      	add	r7, sp, #0
 800ee6a:	6078      	str	r0, [r7, #4]
    }
 800ee6c:	6878      	ldr	r0, [r7, #4]
 800ee6e:	f7ff ffe9 	bl	800ee44 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800ee72:	2104      	movs	r1, #4
 800ee74:	6878      	ldr	r0, [r7, #4]
 800ee76:	f018 fdfe 	bl	8027a76 <_ZdlPvj>
 800ee7a:	687b      	ldr	r3, [r7, #4]
 800ee7c:	4618      	mov	r0, r3
 800ee7e:	3708      	adds	r7, #8
 800ee80:	46bd      	mov	sp, r7
 800ee82:	bd80      	pop	{r7, pc}

0800ee84 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800ee84:	b590      	push	{r4, r7, lr}
 800ee86:	b083      	sub	sp, #12
 800ee88:	af00      	add	r7, sp, #0
 800ee8a:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800ee8c:	687b      	ldr	r3, [r7, #4]
 800ee8e:	f103 043c 	add.w	r4, r3, #60	@ 0x3c
 800ee92:	687b      	ldr	r3, [r7, #4]
 800ee94:	4618      	mov	r0, r3
 800ee96:	f7fe ff9b 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800ee9a:	4603      	mov	r3, r0
 800ee9c:	2b00      	cmp	r3, #0
 800ee9e:	d002      	beq.n	800eea6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800eea0:	687b      	ldr	r3, [r7, #4]
 800eea2:	3374      	adds	r3, #116	@ 0x74
 800eea4:	e001      	b.n	800eeaa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800eea6:	687b      	ldr	r3, [r7, #4]
 800eea8:	3370      	adds	r3, #112	@ 0x70
 800eeaa:	6819      	ldr	r1, [r3, #0]
 800eeac:	4620      	mov	r0, r4
 800eeae:	f7fd fea5 	bl	800cbfc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800eeb2:	687b      	ldr	r3, [r7, #4]
 800eeb4:	f103 043c 	add.w	r4, r3, #60	@ 0x3c
 800eeb8:	687b      	ldr	r3, [r7, #4]
 800eeba:	4618      	mov	r0, r3
 800eebc:	f7fe ff88 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800eec0:	4603      	mov	r3, r0
 800eec2:	2b00      	cmp	r3, #0
 800eec4:	d002      	beq.n	800eecc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800eec6:	687b      	ldr	r3, [r7, #4]
 800eec8:	337c      	adds	r3, #124	@ 0x7c
 800eeca:	e001      	b.n	800eed0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800eecc:	687b      	ldr	r3, [r7, #4]
 800eece:	3378      	adds	r3, #120	@ 0x78
 800eed0:	6819      	ldr	r1, [r3, #0]
 800eed2:	4620      	mov	r0, r4
 800eed4:	f7fe fffc 	bl	800ded0 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800eed8:	687b      	ldr	r3, [r7, #4]
 800eeda:	4618      	mov	r0, r3
 800eedc:	f7fe ffc7 	bl	800de6e <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800eee0:	bf00      	nop
 800eee2:	370c      	adds	r7, #12
 800eee4:	46bd      	mov	sp, r7
 800eee6:	bd90      	pop	{r4, r7, pc}

0800eee8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE20handlePressedUpdatedEv>:
    Bitmap iconReleased; ///< Icon to display when button is not pressed.
    Bitmap iconPressed;  ///< Icon to display when button is pressed.
    Image iconImage;     ///< The icon image

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800eee8:	b590      	push	{r4, r7, lr}
 800eeea:	b083      	sub	sp, #12
 800eeec:	af00      	add	r7, sp, #0
 800eeee:	6078      	str	r0, [r7, #4]
    {
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 800eef0:	687b      	ldr	r3, [r7, #4]
 800eef2:	f103 0484 	add.w	r4, r3, #132	@ 0x84
 800eef6:	687b      	ldr	r3, [r7, #4]
 800eef8:	4618      	mov	r0, r3
 800eefa:	f7fe ff69 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800eefe:	4603      	mov	r3, r0
 800ef00:	2b00      	cmp	r3, #0
 800ef02:	d002      	beq.n	800ef0a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE20handlePressedUpdatedEv+0x22>
 800ef04:	687b      	ldr	r3, [r7, #4]
 800ef06:	3382      	adds	r3, #130	@ 0x82
 800ef08:	e001      	b.n	800ef0e <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE20handlePressedUpdatedEv+0x26>
 800ef0a:	687b      	ldr	r3, [r7, #4]
 800ef0c:	3380      	adds	r3, #128	@ 0x80
 800ef0e:	4619      	mov	r1, r3
 800ef10:	4620      	mov	r0, r4
 800ef12:	f005 fac8 	bl	80144a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 800ef16:	687b      	ldr	r3, [r7, #4]
 800ef18:	4618      	mov	r0, r3
 800ef1a:	f7ff ffb3 	bl	800ee84 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE20handlePressedUpdatedEv>
    }
 800ef1e:	bf00      	nop
 800ef20:	370c      	adds	r7, #12
 800ef22:	46bd      	mov	sp, r7
 800ef24:	bd90      	pop	{r4, r7, pc}

0800ef26 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE8setIconXEs>:
    void setIconX(int16_t x)
 800ef26:	b580      	push	{r7, lr}
 800ef28:	b082      	sub	sp, #8
 800ef2a:	af00      	add	r7, sp, #0
 800ef2c:	6078      	str	r0, [r7, #4]
 800ef2e:	460b      	mov	r3, r1
 800ef30:	807b      	strh	r3, [r7, #2]
        iconImage.setX(x);
 800ef32:	687b      	ldr	r3, [r7, #4]
 800ef34:	3384      	adds	r3, #132	@ 0x84
 800ef36:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ef3a:	4611      	mov	r1, r2
 800ef3c:	4618      	mov	r0, r3
 800ef3e:	f7fd fc30 	bl	800c7a2 <_ZN8touchgfx8Drawable4setXEs>
    }
 800ef42:	bf00      	nop
 800ef44:	3708      	adds	r7, #8
 800ef46:	46bd      	mov	sp, r7
 800ef48:	bd80      	pop	{r7, pc}

0800ef4a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE8setIconYEs>:
    void setIconY(int16_t y)
 800ef4a:	b580      	push	{r7, lr}
 800ef4c:	b082      	sub	sp, #8
 800ef4e:	af00      	add	r7, sp, #0
 800ef50:	6078      	str	r0, [r7, #4]
 800ef52:	460b      	mov	r3, r1
 800ef54:	807b      	strh	r3, [r7, #2]
        iconImage.setY(y);
 800ef56:	687b      	ldr	r3, [r7, #4]
 800ef58:	3384      	adds	r3, #132	@ 0x84
 800ef5a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800ef5e:	4611      	mov	r1, r2
 800ef60:	4618      	mov	r0, r3
 800ef62:	f7fd fc2d 	bl	800c7c0 <_ZN8touchgfx8Drawable4setYEs>
    }
 800ef66:	bf00      	nop
 800ef68:	3708      	adds	r7, #8
 800ef6a:	46bd      	mov	sp, r7
 800ef6c:	bd80      	pop	{r7, pc}

0800ef6e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 800ef6e:	b590      	push	{r4, r7, lr}
 800ef70:	b083      	sub	sp, #12
 800ef72:	af00      	add	r7, sp, #0
 800ef74:	6078      	str	r0, [r7, #4]
        borderBox.setColor(T::getPressed() ? down : up);
 800ef76:	687b      	ldr	r3, [r7, #4]
 800ef78:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800ef7c:	687b      	ldr	r3, [r7, #4]
 800ef7e:	4618      	mov	r0, r3
 800ef80:	f7fe ff26 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800ef84:	4603      	mov	r3, r0
 800ef86:	2b00      	cmp	r3, #0
 800ef88:	d002      	beq.n	800ef90 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800ef8a:	687b      	ldr	r3, [r7, #4]
 800ef8c:	336c      	adds	r3, #108	@ 0x6c
 800ef8e:	e001      	b.n	800ef94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800ef90:	687b      	ldr	r3, [r7, #4]
 800ef92:	3368      	adds	r3, #104	@ 0x68
 800ef94:	6819      	ldr	r1, [r3, #0]
 800ef96:	4620      	mov	r0, r4
 800ef98:	f7fd fe30 	bl	800cbfc <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800ef9c:	687b      	ldr	r3, [r7, #4]
 800ef9e:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800efa2:	687b      	ldr	r3, [r7, #4]
 800efa4:	4618      	mov	r0, r3
 800efa6:	f7fe ff13 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800efaa:	4603      	mov	r3, r0
 800efac:	2b00      	cmp	r3, #0
 800efae:	d002      	beq.n	800efb6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800efb0:	687b      	ldr	r3, [r7, #4]
 800efb2:	3374      	adds	r3, #116	@ 0x74
 800efb4:	e001      	b.n	800efba <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800efb6:	687b      	ldr	r3, [r7, #4]
 800efb8:	3370      	adds	r3, #112	@ 0x70
 800efba:	6819      	ldr	r1, [r3, #0]
 800efbc:	4620      	mov	r0, r4
 800efbe:	f7fe ff87 	bl	800ded0 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800efc2:	687b      	ldr	r3, [r7, #4]
 800efc4:	4618      	mov	r0, r3
 800efc6:	f7fe ff52 	bl	800de6e <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800efca:	bf00      	nop
 800efcc:	370c      	adds	r7, #12
 800efce:	46bd      	mov	sp, r7
 800efd0:	bd90      	pop	{r4, r7, pc}
	...

0800efd4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800efd4:	b580      	push	{r7, lr}
 800efd6:	b082      	sub	sp, #8
 800efd8:	af00      	add	r7, sp, #0
 800efda:	6078      	str	r0, [r7, #4]
 800efdc:	4a05      	ldr	r2, [pc, #20]	@ (800eff4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800efde:	687b      	ldr	r3, [r7, #4]
 800efe0:	601a      	str	r2, [r3, #0]
 800efe2:	687b      	ldr	r3, [r7, #4]
 800efe4:	4618      	mov	r0, r3
 800efe6:	f7ff ff2d 	bl	800ee44 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800efea:	687b      	ldr	r3, [r7, #4]
 800efec:	4618      	mov	r0, r3
 800efee:	3708      	adds	r7, #8
 800eff0:	46bd      	mov	sp, r7
 800eff2:	bd80      	pop	{r7, pc}
 800eff4:	08029b68 	.word	0x08029b68

0800eff8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800eff8:	b580      	push	{r7, lr}
 800effa:	b082      	sub	sp, #8
 800effc:	af00      	add	r7, sp, #0
 800effe:	6078      	str	r0, [r7, #4]
 800f000:	6878      	ldr	r0, [r7, #4]
 800f002:	f7ff ffe7 	bl	800efd4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800f006:	2110      	movs	r1, #16
 800f008:	6878      	ldr	r0, [r7, #4]
 800f00a:	f018 fd34 	bl	8027a76 <_ZdlPvj>
 800f00e:	687b      	ldr	r3, [r7, #4]
 800f010:	4618      	mov	r0, r3
 800f012:	3708      	adds	r7, #8
 800f014:	46bd      	mov	sp, r7
 800f016:	bd80      	pop	{r7, pc}

0800f018 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800f018:	b580      	push	{r7, lr}
 800f01a:	b082      	sub	sp, #8
 800f01c:	af00      	add	r7, sp, #0
 800f01e:	6078      	str	r0, [r7, #4]
 800f020:	4a08      	ldr	r2, [pc, #32]	@ (800f044 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800f022:	687b      	ldr	r3, [r7, #4]
 800f024:	601a      	str	r2, [r3, #0]
 800f026:	687b      	ldr	r3, [r7, #4]
 800f028:	3334      	adds	r3, #52	@ 0x34
 800f02a:	4618      	mov	r0, r3
 800f02c:	f7ff fca2 	bl	800e974 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800f030:	687b      	ldr	r3, [r7, #4]
 800f032:	4618      	mov	r0, r3
 800f034:	f7ff fd32 	bl	800ea9c <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800f038:	687b      	ldr	r3, [r7, #4]
 800f03a:	4618      	mov	r0, r3
 800f03c:	3708      	adds	r7, #8
 800f03e:	46bd      	mov	sp, r7
 800f040:	bd80      	pop	{r7, pc}
 800f042:	bf00      	nop
 800f044:	08029b80 	.word	0x08029b80

0800f048 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800f048:	b580      	push	{r7, lr}
 800f04a:	b082      	sub	sp, #8
 800f04c:	af00      	add	r7, sp, #0
 800f04e:	6078      	str	r0, [r7, #4]
 800f050:	6878      	ldr	r0, [r7, #4]
 800f052:	f7ff ffe1 	bl	800f018 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800f056:	2178      	movs	r1, #120	@ 0x78
 800f058:	6878      	ldr	r0, [r7, #4]
 800f05a:	f018 fd0c 	bl	8027a76 <_ZdlPvj>
 800f05e:	687b      	ldr	r3, [r7, #4]
 800f060:	4618      	mov	r0, r3
 800f062:	3708      	adds	r7, #8
 800f064:	46bd      	mov	sp, r7
 800f066:	bd80      	pop	{r7, pc}

0800f068 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEED1Ev>:
class IconButtonStyle : public T
 800f068:	b580      	push	{r7, lr}
 800f06a:	b082      	sub	sp, #8
 800f06c:	af00      	add	r7, sp, #0
 800f06e:	6078      	str	r0, [r7, #4]
 800f070:	4a08      	ldr	r2, [pc, #32]	@ (800f094 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEED1Ev+0x2c>)
 800f072:	687b      	ldr	r3, [r7, #4]
 800f074:	601a      	str	r2, [r3, #0]
 800f076:	687b      	ldr	r3, [r7, #4]
 800f078:	3384      	adds	r3, #132	@ 0x84
 800f07a:	4618      	mov	r0, r3
 800f07c:	f7fd fe20 	bl	800ccc0 <_ZN8touchgfx5ImageD1Ev>
 800f080:	687b      	ldr	r3, [r7, #4]
 800f082:	4618      	mov	r0, r3
 800f084:	f7ff fc98 	bl	800e9b8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEED1Ev>
 800f088:	687b      	ldr	r3, [r7, #4]
 800f08a:	4618      	mov	r0, r3
 800f08c:	3708      	adds	r7, #8
 800f08e:	46bd      	mov	sp, r7
 800f090:	bd80      	pop	{r7, pc}
 800f092:	bf00      	nop
 800f094:	08029c1c 	.word	0x08029c1c

0800f098 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEED0Ev>:
 800f098:	b580      	push	{r7, lr}
 800f09a:	b082      	sub	sp, #8
 800f09c:	af00      	add	r7, sp, #0
 800f09e:	6078      	str	r0, [r7, #4]
 800f0a0:	6878      	ldr	r0, [r7, #4]
 800f0a2:	f7ff ffe1 	bl	800f068 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEED1Ev>
 800f0a6:	21b0      	movs	r1, #176	@ 0xb0
 800f0a8:	6878      	ldr	r0, [r7, #4]
 800f0aa:	f018 fce4 	bl	8027a76 <_ZdlPvj>
 800f0ae:	687b      	ldr	r3, [r7, #4]
 800f0b0:	4618      	mov	r0, r3
 800f0b2:	3708      	adds	r7, #8
 800f0b4:	46bd      	mov	sp, r7
 800f0b6:	bd80      	pop	{r7, pc}

0800f0b8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800f0b8:	b580      	push	{r7, lr}
 800f0ba:	b082      	sub	sp, #8
 800f0bc:	af00      	add	r7, sp, #0
 800f0be:	6078      	str	r0, [r7, #4]
 800f0c0:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800f0c2:	687b      	ldr	r3, [r7, #4]
 800f0c4:	685b      	ldr	r3, [r3, #4]
 800f0c6:	687a      	ldr	r2, [r7, #4]
 800f0c8:	68d2      	ldr	r2, [r2, #12]
 800f0ca:	1052      	asrs	r2, r2, #1
 800f0cc:	1898      	adds	r0, r3, r2
 800f0ce:	687b      	ldr	r3, [r7, #4]
 800f0d0:	68db      	ldr	r3, [r3, #12]
 800f0d2:	f003 0301 	and.w	r3, r3, #1
 800f0d6:	2b00      	cmp	r3, #0
 800f0d8:	d102      	bne.n	800f0e0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800f0da:	687b      	ldr	r3, [r7, #4]
 800f0dc:	689b      	ldr	r3, [r3, #8]
 800f0de:	e00a      	b.n	800f0f6 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800f0e0:	687b      	ldr	r3, [r7, #4]
 800f0e2:	685b      	ldr	r3, [r3, #4]
 800f0e4:	687a      	ldr	r2, [r7, #4]
 800f0e6:	68d2      	ldr	r2, [r2, #12]
 800f0e8:	1052      	asrs	r2, r2, #1
 800f0ea:	4413      	add	r3, r2
 800f0ec:	681b      	ldr	r3, [r3, #0]
 800f0ee:	687a      	ldr	r2, [r7, #4]
 800f0f0:	6892      	ldr	r2, [r2, #8]
 800f0f2:	4413      	add	r3, r2
 800f0f4:	681b      	ldr	r3, [r3, #0]
 800f0f6:	6839      	ldr	r1, [r7, #0]
 800f0f8:	4798      	blx	r3
    }
 800f0fa:	bf00      	nop
 800f0fc:	3708      	adds	r7, #8
 800f0fe:	46bd      	mov	sp, r7
 800f100:	bd80      	pop	{r7, pc}

0800f102 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800f102:	b480      	push	{r7}
 800f104:	b083      	sub	sp, #12
 800f106:	af00      	add	r7, sp, #0
 800f108:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800f10a:	687b      	ldr	r3, [r7, #4]
 800f10c:	685b      	ldr	r3, [r3, #4]
 800f10e:	2b00      	cmp	r3, #0
 800f110:	d010      	beq.n	800f134 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800f112:	687b      	ldr	r3, [r7, #4]
 800f114:	689b      	ldr	r3, [r3, #8]
 800f116:	2b00      	cmp	r3, #0
 800f118:	d107      	bne.n	800f12a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800f11a:	687b      	ldr	r3, [r7, #4]
 800f11c:	68db      	ldr	r3, [r3, #12]
 800f11e:	f003 0301 	and.w	r3, r3, #1
 800f122:	2b00      	cmp	r3, #0
 800f124:	d101      	bne.n	800f12a <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800f126:	2301      	movs	r3, #1
 800f128:	e000      	b.n	800f12c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800f12a:	2300      	movs	r3, #0
 800f12c:	2b01      	cmp	r3, #1
 800f12e:	d001      	beq.n	800f134 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800f130:	2301      	movs	r3, #1
 800f132:	e000      	b.n	800f136 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800f134:	2300      	movs	r3, #0
    }
 800f136:	4618      	mov	r0, r3
 800f138:	370c      	adds	r7, #12
 800f13a:	46bd      	mov	sp, r7
 800f13c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f140:	4770      	bx	lr

0800f142 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800f142:	b590      	push	{r4, r7, lr}
 800f144:	b083      	sub	sp, #12
 800f146:	af00      	add	r7, sp, #0
 800f148:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800f14a:	687b      	ldr	r3, [r7, #4]
 800f14c:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800f150:	687b      	ldr	r3, [r7, #4]
 800f152:	4618      	mov	r0, r3
 800f154:	f7fe fe49 	bl	800ddea <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f158:	4603      	mov	r3, r0
 800f15a:	4619      	mov	r1, r3
 800f15c:	4620      	mov	r0, r4
 800f15e:	f7fe fdf1 	bl	800dd44 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800f162:	687b      	ldr	r3, [r7, #4]
 800f164:	4618      	mov	r0, r3
 800f166:	f7fe fe8c 	bl	800de82 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800f16a:	bf00      	nop
 800f16c:	370c      	adds	r7, #12
 800f16e:	46bd      	mov	sp, r7
 800f170:	bd90      	pop	{r4, r7, pc}

0800f172 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEEEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800f172:	b590      	push	{r4, r7, lr}
 800f174:	b083      	sub	sp, #12
 800f176:	af00      	add	r7, sp, #0
 800f178:	6078      	str	r0, [r7, #4]
    {
        iconImage.setAlpha(T::getAlpha());
 800f17a:	687b      	ldr	r3, [r7, #4]
 800f17c:	f103 0484 	add.w	r4, r3, #132	@ 0x84
 800f180:	687b      	ldr	r3, [r7, #4]
 800f182:	4618      	mov	r0, r3
 800f184:	f7fe fe31 	bl	800ddea <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f188:	4603      	mov	r3, r0
 800f18a:	4619      	mov	r1, r3
 800f18c:	4620      	mov	r0, r4
 800f18e:	f7fd fd69 	bl	800cc64 <_ZN8touchgfx5Image8setAlphaEh>
        T::handleAlphaUpdated();
 800f192:	687b      	ldr	r3, [r7, #4]
 800f194:	4618      	mov	r0, r3
 800f196:	f000 f804 	bl	800f1a2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE18handleAlphaUpdatedEv>
    }
 800f19a:	bf00      	nop
 800f19c:	370c      	adds	r7, #12
 800f19e:	46bd      	mov	sp, r7
 800f1a0:	bd90      	pop	{r4, r7, pc}

0800f1a2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_19RepeatButtonTriggerEE18handleAlphaUpdatedEv>:
    virtual void handleAlphaUpdated()
 800f1a2:	b590      	push	{r4, r7, lr}
 800f1a4:	b083      	sub	sp, #12
 800f1a6:	af00      	add	r7, sp, #0
 800f1a8:	6078      	str	r0, [r7, #4]
        borderBox.setAlpha(T::getAlpha());
 800f1aa:	687b      	ldr	r3, [r7, #4]
 800f1ac:	f103 043c 	add.w	r4, r3, #60	@ 0x3c
 800f1b0:	687b      	ldr	r3, [r7, #4]
 800f1b2:	4618      	mov	r0, r3
 800f1b4:	f7fe fe19 	bl	800ddea <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800f1b8:	4603      	mov	r3, r0
 800f1ba:	4619      	mov	r1, r3
 800f1bc:	4620      	mov	r0, r4
 800f1be:	f7fe fdc1 	bl	800dd44 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	f7fe fe5c 	bl	800de82 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800f1ca:	bf00      	nop
 800f1cc:	370c      	adds	r7, #12
 800f1ce:	46bd      	mov	sp, r7
 800f1d0:	bd90      	pop	{r4, r7, pc}
	...

0800f1d4 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800f1d4:	b480      	push	{r7}
 800f1d6:	af00      	add	r7, sp, #0
    return bitmap_database;
 800f1d8:	4b02      	ldr	r3, [pc, #8]	@ (800f1e4 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800f1da:	4618      	mov	r0, r3
 800f1dc:	46bd      	mov	sp, r7
 800f1de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1e2:	4770      	bx	lr
 800f1e4:	08029f70 	.word	0x08029f70

0800f1e8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800f1e8:	b480      	push	{r7}
 800f1ea:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800f1ec:	2304      	movs	r3, #4
}
 800f1ee:	4618      	mov	r0, r3
 800f1f0:	46bd      	mov	sp, r7
 800f1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1f6:	4770      	bx	lr

0800f1f8 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800f1f8:	b480      	push	{r7}
 800f1fa:	b085      	sub	sp, #20
 800f1fc:	af00      	add	r7, sp, #0
 800f1fe:	60f8      	str	r0, [r7, #12]
 800f200:	460b      	mov	r3, r1
 800f202:	607a      	str	r2, [r7, #4]
 800f204:	817b      	strh	r3, [r7, #10]
        return 0;
 800f206:	2300      	movs	r3, #0
    }
 800f208:	4618      	mov	r0, r3
 800f20a:	3714      	adds	r7, #20
 800f20c:	46bd      	mov	sp, r7
 800f20e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f212:	4770      	bx	lr

0800f214 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800f214:	b480      	push	{r7}
 800f216:	b083      	sub	sp, #12
 800f218:	af00      	add	r7, sp, #0
 800f21a:	6078      	str	r0, [r7, #4]
        return 0;
 800f21c:	2300      	movs	r3, #0
    }
 800f21e:	4618      	mov	r0, r3
 800f220:	370c      	adds	r7, #12
 800f222:	46bd      	mov	sp, r7
 800f224:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f228:	4770      	bx	lr

0800f22a <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800f22a:	b480      	push	{r7}
 800f22c:	b083      	sub	sp, #12
 800f22e:	af00      	add	r7, sp, #0
 800f230:	6078      	str	r0, [r7, #4]
        return 0;
 800f232:	2300      	movs	r3, #0
    }
 800f234:	4618      	mov	r0, r3
 800f236:	370c      	adds	r7, #12
 800f238:	46bd      	mov	sp, r7
 800f23a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f23e:	4770      	bx	lr

0800f240 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800f240:	b480      	push	{r7}
 800f242:	b085      	sub	sp, #20
 800f244:	af00      	add	r7, sp, #0
 800f246:	60f8      	str	r0, [r7, #12]
 800f248:	60b9      	str	r1, [r7, #8]
 800f24a:	4613      	mov	r3, r2
 800f24c:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800f24e:	4a07      	ldr	r2, [pc, #28]	@ (800f26c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800f250:	68fb      	ldr	r3, [r7, #12]
 800f252:	6013      	str	r3, [r2, #0]
        fonts = f;
 800f254:	4a06      	ldr	r2, [pc, #24]	@ (800f270 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800f256:	68bb      	ldr	r3, [r7, #8]
 800f258:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800f25a:	4a06      	ldr	r2, [pc, #24]	@ (800f274 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800f25c:	88fb      	ldrh	r3, [r7, #6]
 800f25e:	8013      	strh	r3, [r2, #0]
    }
 800f260:	bf00      	nop
 800f262:	3714      	adds	r7, #20
 800f264:	46bd      	mov	sp, r7
 800f266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f26a:	4770      	bx	lr
 800f26c:	200039dc 	.word	0x200039dc
 800f270:	200039e4 	.word	0x200039e4
 800f274:	200039e0 	.word	0x200039e0

0800f278 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f278:	b40e      	push	{r1, r2, r3}
 800f27a:	b580      	push	{r7, lr}
 800f27c:	b085      	sub	sp, #20
 800f27e:	af00      	add	r7, sp, #0
 800f280:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800f282:	f107 0320 	add.w	r3, r7, #32
 800f286:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800f288:	68bb      	ldr	r3, [r7, #8]
 800f28a:	69fa      	ldr	r2, [r7, #28]
 800f28c:	2100      	movs	r1, #0
 800f28e:	6878      	ldr	r0, [r7, #4]
 800f290:	f008 f804 	bl	801729c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f294:	4603      	mov	r3, r0
 800f296:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f298:	89fb      	ldrh	r3, [r7, #14]
}
 800f29a:	4618      	mov	r0, r3
 800f29c:	3714      	adds	r7, #20
 800f29e:	46bd      	mov	sp, r7
 800f2a0:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f2a4:	b003      	add	sp, #12
 800f2a6:	4770      	bx	lr

0800f2a8 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800f2a8:	b40c      	push	{r2, r3}
 800f2aa:	b580      	push	{r7, lr}
 800f2ac:	b084      	sub	sp, #16
 800f2ae:	af00      	add	r7, sp, #0
 800f2b0:	6078      	str	r0, [r7, #4]
 800f2b2:	460b      	mov	r3, r1
 800f2b4:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800f2b6:	f107 031c 	add.w	r3, r7, #28
 800f2ba:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800f2bc:	78f9      	ldrb	r1, [r7, #3]
 800f2be:	68bb      	ldr	r3, [r7, #8]
 800f2c0:	69ba      	ldr	r2, [r7, #24]
 800f2c2:	6878      	ldr	r0, [r7, #4]
 800f2c4:	f007 ffea 	bl	801729c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800f2c8:	4603      	mov	r3, r0
 800f2ca:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800f2cc:	89fb      	ldrh	r3, [r7, #14]
}
 800f2ce:	4618      	mov	r0, r3
 800f2d0:	3710      	adds	r7, #16
 800f2d2:	46bd      	mov	sp, r7
 800f2d4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800f2d8:	b002      	add	sp, #8
 800f2da:	4770      	bx	lr

0800f2dc <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800f2dc:	b580      	push	{r7, lr}
 800f2de:	b08a      	sub	sp, #40	@ 0x28
 800f2e0:	af00      	add	r7, sp, #0
 800f2e2:	6078      	str	r0, [r7, #4]
 800f2e4:	460b      	mov	r3, r1
 800f2e6:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800f2e8:	687b      	ldr	r3, [r7, #4]
 800f2ea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800f2ec:	2b00      	cmp	r3, #0
 800f2ee:	d016      	beq.n	800f31e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f2f0:	687b      	ldr	r3, [r7, #4]
 800f2f2:	3322      	adds	r3, #34	@ 0x22
 800f2f4:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800f2f6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f2f8:	8adb      	ldrh	r3, [r3, #22]
 800f2fa:	2b00      	cmp	r3, #0
 800f2fc:	d105      	bne.n	800f30a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800f2fe:	4b43      	ldr	r3, [pc, #268]	@ (800f40c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f300:	4a43      	ldr	r2, [pc, #268]	@ (800f410 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f302:	21c5      	movs	r1, #197	@ 0xc5
 800f304:	4843      	ldr	r0, [pc, #268]	@ (800f414 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f306:	f018 fbe5 	bl	8027ad4 <__assert_func>
            return buffer[pos];
 800f30a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f30c:	8a9b      	ldrh	r3, [r3, #20]
 800f30e:	461a      	mov	r2, r3
 800f310:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800f312:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800f316:	2b00      	cmp	r3, #0
 800f318:	d001      	beq.n	800f31e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800f31a:	2301      	movs	r3, #1
 800f31c:	e000      	b.n	800f320 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800f31e:	2300      	movs	r3, #0
 800f320:	2b00      	cmp	r3, #0
 800f322:	d06a      	beq.n	800f3fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800f324:	6878      	ldr	r0, [r7, #4]
 800f326:	f009 fae3 	bl	80188f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800f32a:	687b      	ldr	r3, [r7, #4]
 800f32c:	3322      	adds	r3, #34	@ 0x22
 800f32e:	623b      	str	r3, [r7, #32]
 800f330:	2301      	movs	r3, #1
 800f332:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800f334:	6a3b      	ldr	r3, [r7, #32]
 800f336:	8adb      	ldrh	r3, [r3, #22]
 800f338:	8bfa      	ldrh	r2, [r7, #30]
 800f33a:	429a      	cmp	r2, r3
 800f33c:	d305      	bcc.n	800f34a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800f33e:	4b36      	ldr	r3, [pc, #216]	@ (800f418 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800f340:	4a36      	ldr	r2, [pc, #216]	@ (800f41c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800f342:	21cb      	movs	r1, #203	@ 0xcb
 800f344:	4833      	ldr	r0, [pc, #204]	@ (800f414 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f346:	f018 fbc5 	bl	8027ad4 <__assert_func>
            const uint16_t index = pos + offset;
 800f34a:	6a3b      	ldr	r3, [r7, #32]
 800f34c:	8a9a      	ldrh	r2, [r3, #20]
 800f34e:	8bfb      	ldrh	r3, [r7, #30]
 800f350:	4413      	add	r3, r2
 800f352:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800f354:	8bbb      	ldrh	r3, [r7, #28]
 800f356:	2b09      	cmp	r3, #9
 800f358:	d801      	bhi.n	800f35e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800f35a:	8bbb      	ldrh	r3, [r7, #28]
 800f35c:	e001      	b.n	800f362 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800f35e:	8bbb      	ldrh	r3, [r7, #28]
 800f360:	3b0a      	subs	r3, #10
 800f362:	6a3a      	ldr	r2, [r7, #32]
 800f364:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800f368:	f640 123f 	movw	r2, #2367	@ 0x93f
 800f36c:	4293      	cmp	r3, r2
 800f36e:	bf0c      	ite	eq
 800f370:	2301      	moveq	r3, #1
 800f372:	2300      	movne	r3, #0
 800f374:	b2db      	uxtb	r3, r3
 800f376:	2b00      	cmp	r3, #0
 800f378:	d03f      	beq.n	800f3fa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800f37a:	687b      	ldr	r3, [r7, #4]
 800f37c:	3322      	adds	r3, #34	@ 0x22
 800f37e:	687a      	ldr	r2, [r7, #4]
 800f380:	3222      	adds	r2, #34	@ 0x22
 800f382:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800f384:	68ba      	ldr	r2, [r7, #8]
 800f386:	8ad2      	ldrh	r2, [r2, #22]
 800f388:	2a00      	cmp	r2, #0
 800f38a:	d105      	bne.n	800f398 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800f38c:	4b1f      	ldr	r3, [pc, #124]	@ (800f40c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800f38e:	4a20      	ldr	r2, [pc, #128]	@ (800f410 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800f390:	21c5      	movs	r1, #197	@ 0xc5
 800f392:	4820      	ldr	r0, [pc, #128]	@ (800f414 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f394:	f018 fb9e 	bl	8027ad4 <__assert_func>
            return buffer[pos];
 800f398:	68ba      	ldr	r2, [r7, #8]
 800f39a:	8a92      	ldrh	r2, [r2, #20]
 800f39c:	4611      	mov	r1, r2
 800f39e:	68ba      	ldr	r2, [r7, #8]
 800f3a0:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800f3a4:	613b      	str	r3, [r7, #16]
 800f3a6:	4613      	mov	r3, r2
 800f3a8:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800f3aa:	693b      	ldr	r3, [r7, #16]
 800f3ac:	8adb      	ldrh	r3, [r3, #22]
 800f3ae:	2b01      	cmp	r3, #1
 800f3b0:	d806      	bhi.n	800f3c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800f3b2:	4b1b      	ldr	r3, [pc, #108]	@ (800f420 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800f3b4:	4a1b      	ldr	r2, [pc, #108]	@ (800f424 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800f3b6:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800f3ba:	4816      	ldr	r0, [pc, #88]	@ (800f414 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800f3bc:	f018 fb8a 	bl	8027ad4 <__assert_func>
            const uint16_t index = pos + 1;
 800f3c0:	693b      	ldr	r3, [r7, #16]
 800f3c2:	8a9b      	ldrh	r3, [r3, #20]
 800f3c4:	3301      	adds	r3, #1
 800f3c6:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800f3c8:	89bb      	ldrh	r3, [r7, #12]
 800f3ca:	2b09      	cmp	r3, #9
 800f3cc:	d801      	bhi.n	800f3d2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800f3ce:	89bb      	ldrh	r3, [r7, #12]
 800f3d0:	e000      	b.n	800f3d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800f3d2:	2300      	movs	r3, #0
 800f3d4:	693a      	ldr	r2, [r7, #16]
 800f3d6:	89f9      	ldrh	r1, [r7, #14]
 800f3d8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800f3dc:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800f3de:	687b      	ldr	r3, [r7, #4]
 800f3e0:	3322      	adds	r3, #34	@ 0x22
 800f3e2:	61bb      	str	r3, [r7, #24]
 800f3e4:	f640 133f 	movw	r3, #2367	@ 0x93f
 800f3e8:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800f3ea:	69bb      	ldr	r3, [r7, #24]
 800f3ec:	8a9b      	ldrh	r3, [r3, #20]
 800f3ee:	4619      	mov	r1, r3
 800f3f0:	69bb      	ldr	r3, [r7, #24]
 800f3f2:	8afa      	ldrh	r2, [r7, #22]
 800f3f4:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800f3f8:	bf00      	nop
        }
    }
    return getNextChar();
 800f3fa:	6878      	ldr	r0, [r7, #4]
 800f3fc:	f009 f97a 	bl	80186f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800f400:	4603      	mov	r3, r0
}
 800f402:	4618      	mov	r0, r3
 800f404:	3728      	adds	r7, #40	@ 0x28
 800f406:	46bd      	mov	sp, r7
 800f408:	bd80      	pop	{r7, pc}
 800f40a:	bf00      	nop
 800f40c:	080290b0 	.word	0x080290b0
 800f410:	080290bc 	.word	0x080290bc
 800f414:	08029168 	.word	0x08029168
 800f418:	080291b0 	.word	0x080291b0
 800f41c:	080291c0 	.word	0x080291c0
 800f420:	08029294 	.word	0x08029294
 800f424:	080292a0 	.word	0x080292a0

0800f428 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800f428:	b580      	push	{r7, lr}
 800f42a:	b082      	sub	sp, #8
 800f42c:	af00      	add	r7, sp, #0
 800f42e:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800f430:	6878      	ldr	r0, [r7, #4]
 800f432:	f009 f928 	bl	8018686 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800f436:	bf00      	nop
 800f438:	3708      	adds	r7, #8
 800f43a:	46bd      	mov	sp, r7
 800f43c:	bd80      	pop	{r7, pc}
	...

0800f440 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800f440:	b590      	push	{r4, r7, lr}
 800f442:	b085      	sub	sp, #20
 800f444:	af00      	add	r7, sp, #0
 800f446:	4603      	mov	r3, r0
 800f448:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800f44a:	2300      	movs	r3, #0
 800f44c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800f44e:	88fb      	ldrh	r3, [r7, #6]
 800f450:	2b00      	cmp	r3, #0
 800f452:	d127      	bne.n	800f4a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800f454:	88fb      	ldrh	r3, [r7, #6]
 800f456:	4a1e      	ldr	r2, [pc, #120]	@ (800f4d0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800f458:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f45c:	2b00      	cmp	r3, #0
 800f45e:	d016      	beq.n	800f48e <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800f460:	88fb      	ldrh	r3, [r7, #6]
 800f462:	4a1b      	ldr	r2, [pc, #108]	@ (800f4d0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800f464:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f468:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800f46a:	68bb      	ldr	r3, [r7, #8]
 800f46c:	681b      	ldr	r3, [r3, #0]
 800f46e:	68ba      	ldr	r2, [r7, #8]
 800f470:	4413      	add	r3, r2
 800f472:	4a18      	ldr	r2, [pc, #96]	@ (800f4d4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800f474:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800f476:	68bb      	ldr	r3, [r7, #8]
 800f478:	685b      	ldr	r3, [r3, #4]
 800f47a:	68ba      	ldr	r2, [r7, #8]
 800f47c:	4413      	add	r3, r2
 800f47e:	4a16      	ldr	r2, [pc, #88]	@ (800f4d8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800f480:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800f482:	68bb      	ldr	r3, [r7, #8]
 800f484:	689b      	ldr	r3, [r3, #8]
 800f486:	68ba      	ldr	r2, [r7, #8]
 800f488:	4413      	add	r3, r2
 800f48a:	60fb      	str	r3, [r7, #12]
 800f48c:	e00a      	b.n	800f4a4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800f48e:	4b11      	ldr	r3, [pc, #68]	@ (800f4d4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800f490:	4a12      	ldr	r2, [pc, #72]	@ (800f4dc <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800f492:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800f494:	4a12      	ldr	r2, [pc, #72]	@ (800f4e0 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800f496:	4b10      	ldr	r3, [pc, #64]	@ (800f4d8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800f498:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800f49a:	88fb      	ldrh	r3, [r7, #6]
 800f49c:	4a11      	ldr	r2, [pc, #68]	@ (800f4e4 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800f49e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800f4a2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800f4a4:	68fb      	ldr	r3, [r7, #12]
 800f4a6:	2b00      	cmp	r3, #0
 800f4a8:	d00d      	beq.n	800f4c6 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800f4aa:	4a0f      	ldr	r2, [pc, #60]	@ (800f4e8 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800f4ac:	88fb      	ldrh	r3, [r7, #6]
 800f4ae:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800f4b0:	f000 f824 	bl	800f4fc <_ZN17TypedTextDatabase8getFontsEv>
 800f4b4:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800f4b6:	f000 f819 	bl	800f4ec <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800f4ba:	4603      	mov	r3, r0
 800f4bc:	461a      	mov	r2, r3
 800f4be:	4621      	mov	r1, r4
 800f4c0:	68f8      	ldr	r0, [r7, #12]
 800f4c2:	f7ff febd 	bl	800f240 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800f4c6:	bf00      	nop
 800f4c8:	3714      	adds	r7, #20
 800f4ca:	46bd      	mov	sp, r7
 800f4cc:	bd90      	pop	{r4, r7, pc}
 800f4ce:	bf00      	nop
 800f4d0:	20000aec 	.word	0x20000aec
 800f4d4:	20000af4 	.word	0x20000af4
 800f4d8:	20000af8 	.word	0x20000af8
 800f4dc:	0802b368 	.word	0x0802b368
 800f4e0:	0802b364 	.word	0x0802b364
 800f4e4:	0802b370 	.word	0x0802b370
 800f4e8:	20000af0 	.word	0x20000af0

0800f4ec <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800f4ec:	b480      	push	{r7}
 800f4ee:	af00      	add	r7, sp, #0
    return 0;
 800f4f0:	2300      	movs	r3, #0
}
 800f4f2:	4618      	mov	r0, r3
 800f4f4:	46bd      	mov	sp, r7
 800f4f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4fa:	4770      	bx	lr

0800f4fc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800f4fc:	b480      	push	{r7}
 800f4fe:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800f500:	4b02      	ldr	r3, [pc, #8]	@ (800f50c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800f502:	4618      	mov	r0, r3
 800f504:	46bd      	mov	sp, r7
 800f506:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f50a:	4770      	bx	lr
 800f50c:	20000afc 	.word	0x20000afc

0800f510 <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800f510:	b580      	push	{r7, lr}
 800f512:	b082      	sub	sp, #8
 800f514:	af00      	add	r7, sp, #0
 800f516:	6078      	str	r0, [r7, #4]
 800f518:	6039      	str	r1, [r7, #0]
 800f51a:	687b      	ldr	r3, [r7, #4]
 800f51c:	2b01      	cmp	r3, #1
 800f51e:	d113      	bne.n	800f548 <_Z41__static_initialization_and_destruction_0ii+0x38>
 800f520:	683b      	ldr	r3, [r7, #0]
 800f522:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f526:	4293      	cmp	r3, r2
 800f528:	d10e      	bne.n	800f548 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 800f52a:	f7fb ff73 	bl	800b414 <_Z23getFont_verdana_20_4bppv>
 800f52e:	4603      	mov	r3, r0
};
 800f530:	4a07      	ldr	r2, [pc, #28]	@ (800f550 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f532:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800f534:	f7fb ffc8 	bl	800b4c8 <_Z23getFont_verdana_40_4bppv>
 800f538:	4603      	mov	r3, r0
};
 800f53a:	4a05      	ldr	r2, [pc, #20]	@ (800f550 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f53c:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp())
 800f53e:	f7fb ff0f 	bl	800b360 <_Z23getFont_verdana_10_4bppv>
 800f542:	4603      	mov	r3, r0
};
 800f544:	4a02      	ldr	r2, [pc, #8]	@ (800f550 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 800f546:	6093      	str	r3, [r2, #8]
} // namespace TypedTextDatabase
 800f548:	bf00      	nop
 800f54a:	3708      	adds	r7, #8
 800f54c:	46bd      	mov	sp, r7
 800f54e:	bd80      	pop	{r7, pc}
 800f550:	20000afc 	.word	0x20000afc

0800f554 <_GLOBAL__sub_I_touchgfx_fonts>:
 800f554:	b580      	push	{r7, lr}
 800f556:	af00      	add	r7, sp, #0
 800f558:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800f55c:	2001      	movs	r0, #1
 800f55e:	f7ff ffd7 	bl	800f510 <_Z41__static_initialization_and_destruction_0ii>
 800f562:	bd80      	pop	{r7, pc}

0800f564 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800f564:	b580      	push	{r7, lr}
 800f566:	b082      	sub	sp, #8
 800f568:	af00      	add	r7, sp, #0
 800f56a:	6078      	str	r0, [r7, #4]
 800f56c:	4a05      	ldr	r2, [pc, #20]	@ (800f584 <_ZN19FrontendApplicationD1Ev+0x20>)
 800f56e:	687b      	ldr	r3, [r7, #4]
 800f570:	601a      	str	r2, [r3, #0]
 800f572:	687b      	ldr	r3, [r7, #4]
 800f574:	4618      	mov	r0, r3
 800f576:	f7fc fa27 	bl	800b9c8 <_ZN23FrontendApplicationBaseD1Ev>
 800f57a:	687b      	ldr	r3, [r7, #4]
 800f57c:	4618      	mov	r0, r3
 800f57e:	3708      	adds	r7, #8
 800f580:	46bd      	mov	sp, r7
 800f582:	bd80      	pop	{r7, pc}
 800f584:	0802a02c 	.word	0x0802a02c

0800f588 <_ZN19FrontendApplicationD0Ev>:
 800f588:	b580      	push	{r7, lr}
 800f58a:	b082      	sub	sp, #8
 800f58c:	af00      	add	r7, sp, #0
 800f58e:	6078      	str	r0, [r7, #4]
 800f590:	6878      	ldr	r0, [r7, #4]
 800f592:	f7ff ffe7 	bl	800f564 <_ZN19FrontendApplicationD1Ev>
 800f596:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800f59a:	6878      	ldr	r0, [r7, #4]
 800f59c:	f018 fa6b 	bl	8027a76 <_ZdlPvj>
 800f5a0:	687b      	ldr	r3, [r7, #4]
 800f5a2:	4618      	mov	r0, r3
 800f5a4:	3708      	adds	r7, #8
 800f5a6:	46bd      	mov	sp, r7
 800f5a8:	bd80      	pop	{r7, pc}

0800f5aa <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800f5aa:	b580      	push	{r7, lr}
 800f5ac:	b082      	sub	sp, #8
 800f5ae:	af00      	add	r7, sp, #0
 800f5b0:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800f5b2:	687b      	ldr	r3, [r7, #4]
 800f5b4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800f5b8:	4618      	mov	r0, r3
 800f5ba:	f000 f9a6 	bl	800f90a <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	4618      	mov	r0, r3
 800f5c2:	f006 ff6f 	bl	80164a4 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800f5c6:	bf00      	nop
 800f5c8:	3708      	adds	r7, #8
 800f5ca:	46bd      	mov	sp, r7
 800f5cc:	bd80      	pop	{r7, pc}
	...

0800f5d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800f5d0:	b580      	push	{r7, lr}
 800f5d2:	b084      	sub	sp, #16
 800f5d4:	af00      	add	r7, sp, #0
 800f5d6:	60f8      	str	r0, [r7, #12]
 800f5d8:	60b9      	str	r1, [r7, #8]
 800f5da:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800f5dc:	68fb      	ldr	r3, [r7, #12]
 800f5de:	687a      	ldr	r2, [r7, #4]
 800f5e0:	68b9      	ldr	r1, [r7, #8]
 800f5e2:	4618      	mov	r0, r3
 800f5e4:	f7fc fb42 	bl	800bc6c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800f5e8:	4a03      	ldr	r2, [pc, #12]	@ (800f5f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800f5ea:	68fb      	ldr	r3, [r7, #12]
 800f5ec:	601a      	str	r2, [r3, #0]
{

}
 800f5ee:	68fb      	ldr	r3, [r7, #12]
 800f5f0:	4618      	mov	r0, r3
 800f5f2:	3710      	adds	r7, #16
 800f5f4:	46bd      	mov	sp, r7
 800f5f6:	bd80      	pop	{r7, pc}
 800f5f8:	0802a02c 	.word	0x0802a02c

0800f5fc <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800f5fc:	b480      	push	{r7}
 800f5fe:	b083      	sub	sp, #12
 800f600:	af00      	add	r7, sp, #0
 800f602:	6078      	str	r0, [r7, #4]
    {
    }
 800f604:	bf00      	nop
 800f606:	370c      	adds	r7, #12
 800f608:	46bd      	mov	sp, r7
 800f60a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f60e:	4770      	bx	lr

0800f610 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800f610:	b480      	push	{r7}
 800f612:	b083      	sub	sp, #12
 800f614:	af00      	add	r7, sp, #0
 800f616:	6078      	str	r0, [r7, #4]
    {
    }
 800f618:	bf00      	nop
 800f61a:	370c      	adds	r7, #12
 800f61c:	46bd      	mov	sp, r7
 800f61e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f622:	4770      	bx	lr

0800f624 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800f624:	b480      	push	{r7}
 800f626:	b083      	sub	sp, #12
 800f628:	af00      	add	r7, sp, #0
 800f62a:	6078      	str	r0, [r7, #4]
    {
 800f62c:	4a04      	ldr	r2, [pc, #16]	@ (800f640 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800f62e:	687b      	ldr	r3, [r7, #4]
 800f630:	601a      	str	r2, [r3, #0]
    }
 800f632:	687b      	ldr	r3, [r7, #4]
 800f634:	4618      	mov	r0, r3
 800f636:	370c      	adds	r7, #12
 800f638:	46bd      	mov	sp, r7
 800f63a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f63e:	4770      	bx	lr
 800f640:	0802a0b8 	.word	0x0802a0b8

0800f644 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800f644:	b580      	push	{r7, lr}
 800f646:	b082      	sub	sp, #8
 800f648:	af00      	add	r7, sp, #0
 800f64a:	6078      	str	r0, [r7, #4]
    }
 800f64c:	6878      	ldr	r0, [r7, #4]
 800f64e:	f7ff ffe9 	bl	800f624 <_ZN8touchgfx9PresenterD1Ev>
 800f652:	2104      	movs	r1, #4
 800f654:	6878      	ldr	r0, [r7, #4]
 800f656:	f018 fa0e 	bl	8027a76 <_ZdlPvj>
 800f65a:	687b      	ldr	r3, [r7, #4]
 800f65c:	4618      	mov	r0, r3
 800f65e:	3708      	adds	r7, #8
 800f660:	46bd      	mov	sp, r7
 800f662:	bd80      	pop	{r7, pc}

0800f664 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800f664:	b480      	push	{r7}
 800f666:	b083      	sub	sp, #12
 800f668:	af00      	add	r7, sp, #0
 800f66a:	6078      	str	r0, [r7, #4]
    {
 800f66c:	4a04      	ldr	r2, [pc, #16]	@ (800f680 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800f66e:	687b      	ldr	r3, [r7, #4]
 800f670:	601a      	str	r2, [r3, #0]
    }
 800f672:	687b      	ldr	r3, [r7, #4]
 800f674:	4618      	mov	r0, r3
 800f676:	370c      	adds	r7, #12
 800f678:	46bd      	mov	sp, r7
 800f67a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f67e:	4770      	bx	lr
 800f680:	0802a0b8 	.word	0x0802a0b8

0800f684 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800f684:	b480      	push	{r7}
 800f686:	b083      	sub	sp, #12
 800f688:	af00      	add	r7, sp, #0
 800f68a:	6078      	str	r0, [r7, #4]
 800f68c:	4a06      	ldr	r2, [pc, #24]	@ (800f6a8 <_ZN13ModelListenerC1Ev+0x24>)
 800f68e:	687b      	ldr	r3, [r7, #4]
 800f690:	601a      	str	r2, [r3, #0]
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	2200      	movs	r2, #0
 800f696:	605a      	str	r2, [r3, #4]
 800f698:	687b      	ldr	r3, [r7, #4]
 800f69a:	4618      	mov	r0, r3
 800f69c:	370c      	adds	r7, #12
 800f69e:	46bd      	mov	sp, r7
 800f6a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6a4:	4770      	bx	lr
 800f6a6:	bf00      	nop
 800f6a8:	0802a0a8 	.word	0x0802a0a8

0800f6ac <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800f6ac:	b480      	push	{r7}
 800f6ae:	b083      	sub	sp, #12
 800f6b0:	af00      	add	r7, sp, #0
 800f6b2:	6078      	str	r0, [r7, #4]
 800f6b4:	4a04      	ldr	r2, [pc, #16]	@ (800f6c8 <_ZN13ModelListenerD1Ev+0x1c>)
 800f6b6:	687b      	ldr	r3, [r7, #4]
 800f6b8:	601a      	str	r2, [r3, #0]
 800f6ba:	687b      	ldr	r3, [r7, #4]
 800f6bc:	4618      	mov	r0, r3
 800f6be:	370c      	adds	r7, #12
 800f6c0:	46bd      	mov	sp, r7
 800f6c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f6c6:	4770      	bx	lr
 800f6c8:	0802a0a8 	.word	0x0802a0a8

0800f6cc <_ZN13ModelListenerD0Ev>:
 800f6cc:	b580      	push	{r7, lr}
 800f6ce:	b082      	sub	sp, #8
 800f6d0:	af00      	add	r7, sp, #0
 800f6d2:	6078      	str	r0, [r7, #4]
 800f6d4:	6878      	ldr	r0, [r7, #4]
 800f6d6:	f7ff ffe9 	bl	800f6ac <_ZN13ModelListenerD1Ev>
 800f6da:	2108      	movs	r1, #8
 800f6dc:	6878      	ldr	r0, [r7, #4]
 800f6de:	f018 f9ca 	bl	8027a76 <_ZdlPvj>
 800f6e2:	687b      	ldr	r3, [r7, #4]
 800f6e4:	4618      	mov	r0, r3
 800f6e6:	3708      	adds	r7, #8
 800f6e8:	46bd      	mov	sp, r7
 800f6ea:	bd80      	pop	{r7, pc}

0800f6ec <_ZN16InitialPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~InitialPresenter() {}
 800f6ec:	b580      	push	{r7, lr}
 800f6ee:	b082      	sub	sp, #8
 800f6f0:	af00      	add	r7, sp, #0
 800f6f2:	6078      	str	r0, [r7, #4]
 800f6f4:	4a09      	ldr	r2, [pc, #36]	@ (800f71c <_ZN16InitialPresenterD1Ev+0x30>)
 800f6f6:	687b      	ldr	r3, [r7, #4]
 800f6f8:	601a      	str	r2, [r3, #0]
 800f6fa:	4a09      	ldr	r2, [pc, #36]	@ (800f720 <_ZN16InitialPresenterD1Ev+0x34>)
 800f6fc:	687b      	ldr	r3, [r7, #4]
 800f6fe:	605a      	str	r2, [r3, #4]
 800f700:	687b      	ldr	r3, [r7, #4]
 800f702:	3304      	adds	r3, #4
 800f704:	4618      	mov	r0, r3
 800f706:	f7ff ffd1 	bl	800f6ac <_ZN13ModelListenerD1Ev>
 800f70a:	687b      	ldr	r3, [r7, #4]
 800f70c:	4618      	mov	r0, r3
 800f70e:	f7ff ff89 	bl	800f624 <_ZN8touchgfx9PresenterD1Ev>
 800f712:	687b      	ldr	r3, [r7, #4]
 800f714:	4618      	mov	r0, r3
 800f716:	3708      	adds	r7, #8
 800f718:	46bd      	mov	sp, r7
 800f71a:	bd80      	pop	{r7, pc}
 800f71c:	0802a080 	.word	0x0802a080
 800f720:	0802a098 	.word	0x0802a098

0800f724 <_ZThn4_N16InitialPresenterD1Ev>:
 800f724:	f1a0 0004 	sub.w	r0, r0, #4
 800f728:	e7e0      	b.n	800f6ec <_ZN16InitialPresenterD1Ev>
 800f72a:	bf00      	nop

0800f72c <_ZN16InitialPresenterD0Ev>:
 800f72c:	b580      	push	{r7, lr}
 800f72e:	b082      	sub	sp, #8
 800f730:	af00      	add	r7, sp, #0
 800f732:	6078      	str	r0, [r7, #4]
 800f734:	6878      	ldr	r0, [r7, #4]
 800f736:	f7ff ffd9 	bl	800f6ec <_ZN16InitialPresenterD1Ev>
 800f73a:	2110      	movs	r1, #16
 800f73c:	6878      	ldr	r0, [r7, #4]
 800f73e:	f018 f99a 	bl	8027a76 <_ZdlPvj>
 800f742:	687b      	ldr	r3, [r7, #4]
 800f744:	4618      	mov	r0, r3
 800f746:	3708      	adds	r7, #8
 800f748:	46bd      	mov	sp, r7
 800f74a:	bd80      	pop	{r7, pc}

0800f74c <_ZThn4_N16InitialPresenterD0Ev>:
 800f74c:	f1a0 0004 	sub.w	r0, r0, #4
 800f750:	e7ec      	b.n	800f72c <_ZN16InitialPresenterD0Ev>
	...

0800f754 <_ZN16InitialPresenterC1ER11InitialView>:
#include <gui/initial_screen/InitialView.hpp>
#include <gui/initial_screen/InitialPresenter.hpp>

InitialPresenter::InitialPresenter(InitialView& v)
 800f754:	b580      	push	{r7, lr}
 800f756:	b082      	sub	sp, #8
 800f758:	af00      	add	r7, sp, #0
 800f75a:	6078      	str	r0, [r7, #4]
 800f75c:	6039      	str	r1, [r7, #0]
    : view(v)
 800f75e:	687b      	ldr	r3, [r7, #4]
 800f760:	4618      	mov	r0, r3
 800f762:	f7ff ff7f 	bl	800f664 <_ZN8touchgfx9PresenterC1Ev>
 800f766:	687b      	ldr	r3, [r7, #4]
 800f768:	3304      	adds	r3, #4
 800f76a:	4618      	mov	r0, r3
 800f76c:	f7ff ff8a 	bl	800f684 <_ZN13ModelListenerC1Ev>
 800f770:	4a06      	ldr	r2, [pc, #24]	@ (800f78c <_ZN16InitialPresenterC1ER11InitialView+0x38>)
 800f772:	687b      	ldr	r3, [r7, #4]
 800f774:	601a      	str	r2, [r3, #0]
 800f776:	4a06      	ldr	r2, [pc, #24]	@ (800f790 <_ZN16InitialPresenterC1ER11InitialView+0x3c>)
 800f778:	687b      	ldr	r3, [r7, #4]
 800f77a:	605a      	str	r2, [r3, #4]
 800f77c:	687b      	ldr	r3, [r7, #4]
 800f77e:	683a      	ldr	r2, [r7, #0]
 800f780:	60da      	str	r2, [r3, #12]
{

}
 800f782:	687b      	ldr	r3, [r7, #4]
 800f784:	4618      	mov	r0, r3
 800f786:	3708      	adds	r7, #8
 800f788:	46bd      	mov	sp, r7
 800f78a:	bd80      	pop	{r7, pc}
 800f78c:	0802a080 	.word	0x0802a080
 800f790:	0802a098 	.word	0x0802a098

0800f794 <_ZN16InitialPresenter8activateEv>:

void InitialPresenter::activate()
{
 800f794:	b480      	push	{r7}
 800f796:	b083      	sub	sp, #12
 800f798:	af00      	add	r7, sp, #0
 800f79a:	6078      	str	r0, [r7, #4]

}
 800f79c:	bf00      	nop
 800f79e:	370c      	adds	r7, #12
 800f7a0:	46bd      	mov	sp, r7
 800f7a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7a6:	4770      	bx	lr

0800f7a8 <_ZN16InitialPresenter10deactivateEv>:

void InitialPresenter::deactivate()
{
 800f7a8:	b480      	push	{r7}
 800f7aa:	b083      	sub	sp, #12
 800f7ac:	af00      	add	r7, sp, #0
 800f7ae:	6078      	str	r0, [r7, #4]

}
 800f7b0:	bf00      	nop
 800f7b2:	370c      	adds	r7, #12
 800f7b4:	46bd      	mov	sp, r7
 800f7b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7ba:	4770      	bx	lr

0800f7bc <_ZN11InitialViewD1Ev>:

class InitialView : public InitialViewBase
{
public:
    InitialView();
    virtual ~InitialView() {}
 800f7bc:	b580      	push	{r7, lr}
 800f7be:	b082      	sub	sp, #8
 800f7c0:	af00      	add	r7, sp, #0
 800f7c2:	6078      	str	r0, [r7, #4]
 800f7c4:	4a05      	ldr	r2, [pc, #20]	@ (800f7dc <_ZN11InitialViewD1Ev+0x20>)
 800f7c6:	687b      	ldr	r3, [r7, #4]
 800f7c8:	601a      	str	r2, [r3, #0]
 800f7ca:	687b      	ldr	r3, [r7, #4]
 800f7cc:	4618      	mov	r0, r3
 800f7ce:	f7fd fdb9 	bl	800d344 <_ZN15InitialViewBaseD1Ev>
 800f7d2:	687b      	ldr	r3, [r7, #4]
 800f7d4:	4618      	mov	r0, r3
 800f7d6:	3708      	adds	r7, #8
 800f7d8:	46bd      	mov	sp, r7
 800f7da:	bd80      	pop	{r7, pc}
 800f7dc:	0802a0d0 	.word	0x0802a0d0

0800f7e0 <_ZN11InitialViewD0Ev>:
 800f7e0:	b580      	push	{r7, lr}
 800f7e2:	b082      	sub	sp, #8
 800f7e4:	af00      	add	r7, sp, #0
 800f7e6:	6078      	str	r0, [r7, #4]
 800f7e8:	6878      	ldr	r0, [r7, #4]
 800f7ea:	f7ff ffe7 	bl	800f7bc <_ZN11InitialViewD1Ev>
 800f7ee:	f641 51fc 	movw	r1, #7676	@ 0x1dfc
 800f7f2:	6878      	ldr	r0, [r7, #4]
 800f7f4:	f018 f93f 	bl	8027a76 <_ZdlPvj>
 800f7f8:	687b      	ldr	r3, [r7, #4]
 800f7fa:	4618      	mov	r0, r3
 800f7fc:	3708      	adds	r7, #8
 800f7fe:	46bd      	mov	sp, r7
 800f800:	bd80      	pop	{r7, pc}
	...

0800f804 <_ZN11InitialViewC1Ev>:
#include <gui/initial_screen/InitialView.hpp>

InitialView::InitialView()
 800f804:	b580      	push	{r7, lr}
 800f806:	b082      	sub	sp, #8
 800f808:	af00      	add	r7, sp, #0
 800f80a:	6078      	str	r0, [r7, #4]
 800f80c:	687b      	ldr	r3, [r7, #4]
 800f80e:	4618      	mov	r0, r3
 800f810:	f7fd fc70 	bl	800d0f4 <_ZN15InitialViewBaseC1Ev>
 800f814:	4a09      	ldr	r2, [pc, #36]	@ (800f83c <_ZN11InitialViewC1Ev+0x38>)
 800f816:	687b      	ldr	r3, [r7, #4]
 800f818:	601a      	str	r2, [r3, #0]
 800f81a:	687b      	ldr	r3, [r7, #4]
 800f81c:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f820:	2201      	movs	r2, #1
 800f822:	f883 2df8 	strb.w	r2, [r3, #3576]	@ 0xdf8
 800f826:	687b      	ldr	r3, [r7, #4]
 800f828:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f82c:	2200      	movs	r2, #0
 800f82e:	f8a3 2dfa 	strh.w	r2, [r3, #3578]	@ 0xdfa
{

}
 800f832:	687b      	ldr	r3, [r7, #4]
 800f834:	4618      	mov	r0, r3
 800f836:	3708      	adds	r7, #8
 800f838:	46bd      	mov	sp, r7
 800f83a:	bd80      	pop	{r7, pc}
 800f83c:	0802a0d0 	.word	0x0802a0d0

0800f840 <_ZN11InitialView11setupScreenEv>:

void InitialView::setupScreen()
{
 800f840:	b580      	push	{r7, lr}
 800f842:	b082      	sub	sp, #8
 800f844:	af00      	add	r7, sp, #0
 800f846:	6078      	str	r0, [r7, #4]
    InitialViewBase::setupScreen();
 800f848:	687b      	ldr	r3, [r7, #4]
 800f84a:	4618      	mov	r0, r3
 800f84c:	f7fd fdb5 	bl	800d3ba <_ZN15InitialViewBase11setupScreenEv>
}
 800f850:	bf00      	nop
 800f852:	3708      	adds	r7, #8
 800f854:	46bd      	mov	sp, r7
 800f856:	bd80      	pop	{r7, pc}

0800f858 <_ZN11InitialView14tearDownScreenEv>:

void InitialView::tearDownScreen()
{
 800f858:	b580      	push	{r7, lr}
 800f85a:	b082      	sub	sp, #8
 800f85c:	af00      	add	r7, sp, #0
 800f85e:	6078      	str	r0, [r7, #4]
    InitialViewBase::tearDownScreen();
 800f860:	687b      	ldr	r3, [r7, #4]
 800f862:	4618      	mov	r0, r3
 800f864:	f7fd f942 	bl	800caec <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800f868:	bf00      	nop
 800f86a:	3708      	adds	r7, #8
 800f86c:	46bd      	mov	sp, r7
 800f86e:	bd80      	pop	{r7, pc}

0800f870 <_ZN11InitialView15handleTickEventEv>:

void InitialView::handleTickEvent()
{
 800f870:	b590      	push	{r4, r7, lr}
 800f872:	b083      	sub	sp, #12
 800f874:	af00      	add	r7, sp, #0
 800f876:	6078      	str	r0, [r7, #4]
	if(tick>500)
 800f878:	687b      	ldr	r3, [r7, #4]
 800f87a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f87e:	f8b3 3dfa 	ldrh.w	r3, [r3, #3578]	@ 0xdfa
 800f882:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 800f886:	d922      	bls.n	800f8ce <_ZN11InitialView15handleTickEventEv+0x5e>
	{
		circleProgress1.setValue(circleProgress1.getValue() + 1);
 800f888:	687b      	ldr	r3, [r7, #4]
 800f88a:	f103 04b0 	add.w	r4, r3, #176	@ 0xb0
 800f88e:	687b      	ldr	r3, [r7, #4]
 800f890:	33b0      	adds	r3, #176	@ 0xb0
 800f892:	4618      	mov	r0, r3
 800f894:	f002 fa7f 	bl	8011d96 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800f898:	4603      	mov	r3, r0
 800f89a:	3301      	adds	r3, #1
 800f89c:	4619      	mov	r1, r3
 800f89e:	4620      	mov	r0, r4
 800f8a0:	f002 f9db 	bl	8011c5a <_ZN8touchgfx14CircleProgress8setValueEi>

		if(circleProgress1.getValue() == 100)
 800f8a4:	687b      	ldr	r3, [r7, #4]
 800f8a6:	33b0      	adds	r3, #176	@ 0xb0
 800f8a8:	4618      	mov	r0, r3
 800f8aa:	f002 fa74 	bl	8011d96 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800f8ae:	4603      	mov	r3, r0
 800f8b0:	2b64      	cmp	r3, #100	@ 0x64
 800f8b2:	bf0c      	ite	eq
 800f8b4:	2301      	moveq	r3, #1
 800f8b6:	2300      	movne	r3, #0
 800f8b8:	b2db      	uxtb	r3, r3
 800f8ba:	2b00      	cmp	r3, #0
 800f8bc:	d013      	beq.n	800f8e6 <_ZN11InitialView15handleTickEventEv+0x76>
		{
			changeToScreen1();
 800f8be:	687a      	ldr	r2, [r7, #4]
 800f8c0:	687b      	ldr	r3, [r7, #4]
 800f8c2:	681b      	ldr	r3, [r3, #0]
 800f8c4:	3330      	adds	r3, #48	@ 0x30
 800f8c6:	681b      	ldr	r3, [r3, #0]
 800f8c8:	4610      	mov	r0, r2
 800f8ca:	4798      	blx	r3
	}
	else
	{
		tick++;
	}
}
 800f8cc:	e00b      	b.n	800f8e6 <_ZN11InitialView15handleTickEventEv+0x76>
		tick++;
 800f8ce:	687b      	ldr	r3, [r7, #4]
 800f8d0:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f8d4:	f8b3 3dfa 	ldrh.w	r3, [r3, #3578]	@ 0xdfa
 800f8d8:	3301      	adds	r3, #1
 800f8da:	b29a      	uxth	r2, r3
 800f8dc:	687b      	ldr	r3, [r7, #4]
 800f8de:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
 800f8e2:	f8a3 2dfa 	strh.w	r2, [r3, #3578]	@ 0xdfa
}
 800f8e6:	bf00      	nop
 800f8e8:	370c      	adds	r7, #12
 800f8ea:	46bd      	mov	sp, r7
 800f8ec:	bd90      	pop	{r4, r7, pc}

0800f8ee <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800f8ee:	b480      	push	{r7}
 800f8f0:	b083      	sub	sp, #12
 800f8f2:	af00      	add	r7, sp, #0
 800f8f4:	6078      	str	r0, [r7, #4]
 800f8f6:	687b      	ldr	r3, [r7, #4]
 800f8f8:	2200      	movs	r2, #0
 800f8fa:	601a      	str	r2, [r3, #0]
{

}
 800f8fc:	687b      	ldr	r3, [r7, #4]
 800f8fe:	4618      	mov	r0, r3
 800f900:	370c      	adds	r7, #12
 800f902:	46bd      	mov	sp, r7
 800f904:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f908:	4770      	bx	lr

0800f90a <_ZN5Model4tickEv>:

void Model::tick()
{
 800f90a:	b480      	push	{r7}
 800f90c:	b083      	sub	sp, #12
 800f90e:	af00      	add	r7, sp, #0
 800f910:	6078      	str	r0, [r7, #4]

}
 800f912:	bf00      	nop
 800f914:	370c      	adds	r7, #12
 800f916:	46bd      	mov	sp, r7
 800f918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f91c:	4770      	bx	lr
	...

0800f920 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {}
 800f920:	b580      	push	{r7, lr}
 800f922:	b082      	sub	sp, #8
 800f924:	af00      	add	r7, sp, #0
 800f926:	6078      	str	r0, [r7, #4]
 800f928:	4a09      	ldr	r2, [pc, #36]	@ (800f950 <_ZN16Screen1PresenterD1Ev+0x30>)
 800f92a:	687b      	ldr	r3, [r7, #4]
 800f92c:	601a      	str	r2, [r3, #0]
 800f92e:	4a09      	ldr	r2, [pc, #36]	@ (800f954 <_ZN16Screen1PresenterD1Ev+0x34>)
 800f930:	687b      	ldr	r3, [r7, #4]
 800f932:	605a      	str	r2, [r3, #4]
 800f934:	687b      	ldr	r3, [r7, #4]
 800f936:	3304      	adds	r3, #4
 800f938:	4618      	mov	r0, r3
 800f93a:	f7ff feb7 	bl	800f6ac <_ZN13ModelListenerD1Ev>
 800f93e:	687b      	ldr	r3, [r7, #4]
 800f940:	4618      	mov	r0, r3
 800f942:	f7ff fe6f 	bl	800f624 <_ZN8touchgfx9PresenterD1Ev>
 800f946:	687b      	ldr	r3, [r7, #4]
 800f948:	4618      	mov	r0, r3
 800f94a:	3708      	adds	r7, #8
 800f94c:	46bd      	mov	sp, r7
 800f94e:	bd80      	pop	{r7, pc}
 800f950:	0802a110 	.word	0x0802a110
 800f954:	0802a128 	.word	0x0802a128

0800f958 <_ZThn4_N16Screen1PresenterD1Ev>:
 800f958:	f1a0 0004 	sub.w	r0, r0, #4
 800f95c:	e7e0      	b.n	800f920 <_ZN16Screen1PresenterD1Ev>
 800f95e:	bf00      	nop

0800f960 <_ZN16Screen1PresenterD0Ev>:
 800f960:	b580      	push	{r7, lr}
 800f962:	b082      	sub	sp, #8
 800f964:	af00      	add	r7, sp, #0
 800f966:	6078      	str	r0, [r7, #4]
 800f968:	6878      	ldr	r0, [r7, #4]
 800f96a:	f7ff ffd9 	bl	800f920 <_ZN16Screen1PresenterD1Ev>
 800f96e:	2110      	movs	r1, #16
 800f970:	6878      	ldr	r0, [r7, #4]
 800f972:	f018 f880 	bl	8027a76 <_ZdlPvj>
 800f976:	687b      	ldr	r3, [r7, #4]
 800f978:	4618      	mov	r0, r3
 800f97a:	3708      	adds	r7, #8
 800f97c:	46bd      	mov	sp, r7
 800f97e:	bd80      	pop	{r7, pc}

0800f980 <_ZThn4_N16Screen1PresenterD0Ev>:
 800f980:	f1a0 0004 	sub.w	r0, r0, #4
 800f984:	e7ec      	b.n	800f960 <_ZN16Screen1PresenterD0Ev>
	...

0800f988 <_ZN16Screen1PresenterC1ER11Screen1View>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

Screen1Presenter::Screen1Presenter(Screen1View& v)
 800f988:	b580      	push	{r7, lr}
 800f98a:	b082      	sub	sp, #8
 800f98c:	af00      	add	r7, sp, #0
 800f98e:	6078      	str	r0, [r7, #4]
 800f990:	6039      	str	r1, [r7, #0]
    : view(v)
 800f992:	687b      	ldr	r3, [r7, #4]
 800f994:	4618      	mov	r0, r3
 800f996:	f7ff fe65 	bl	800f664 <_ZN8touchgfx9PresenterC1Ev>
 800f99a:	687b      	ldr	r3, [r7, #4]
 800f99c:	3304      	adds	r3, #4
 800f99e:	4618      	mov	r0, r3
 800f9a0:	f7ff fe70 	bl	800f684 <_ZN13ModelListenerC1Ev>
 800f9a4:	4a06      	ldr	r2, [pc, #24]	@ (800f9c0 <_ZN16Screen1PresenterC1ER11Screen1View+0x38>)
 800f9a6:	687b      	ldr	r3, [r7, #4]
 800f9a8:	601a      	str	r2, [r3, #0]
 800f9aa:	4a06      	ldr	r2, [pc, #24]	@ (800f9c4 <_ZN16Screen1PresenterC1ER11Screen1View+0x3c>)
 800f9ac:	687b      	ldr	r3, [r7, #4]
 800f9ae:	605a      	str	r2, [r3, #4]
 800f9b0:	687b      	ldr	r3, [r7, #4]
 800f9b2:	683a      	ldr	r2, [r7, #0]
 800f9b4:	60da      	str	r2, [r3, #12]
{

}
 800f9b6:	687b      	ldr	r3, [r7, #4]
 800f9b8:	4618      	mov	r0, r3
 800f9ba:	3708      	adds	r7, #8
 800f9bc:	46bd      	mov	sp, r7
 800f9be:	bd80      	pop	{r7, pc}
 800f9c0:	0802a110 	.word	0x0802a110
 800f9c4:	0802a128 	.word	0x0802a128

0800f9c8 <_ZN16Screen1Presenter8activateEv>:

void Screen1Presenter::activate()
{
 800f9c8:	b480      	push	{r7}
 800f9ca:	b083      	sub	sp, #12
 800f9cc:	af00      	add	r7, sp, #0
 800f9ce:	6078      	str	r0, [r7, #4]

}
 800f9d0:	bf00      	nop
 800f9d2:	370c      	adds	r7, #12
 800f9d4:	46bd      	mov	sp, r7
 800f9d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9da:	4770      	bx	lr

0800f9dc <_ZN16Screen1Presenter10deactivateEv>:

void Screen1Presenter::deactivate()
{
 800f9dc:	b480      	push	{r7}
 800f9de:	b083      	sub	sp, #12
 800f9e0:	af00      	add	r7, sp, #0
 800f9e2:	6078      	str	r0, [r7, #4]

}
 800f9e4:	bf00      	nop
 800f9e6:	370c      	adds	r7, #12
 800f9e8:	46bd      	mov	sp, r7
 800f9ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9ee:	4770      	bx	lr

0800f9f0 <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800f9f0:	b580      	push	{r7, lr}
 800f9f2:	b082      	sub	sp, #8
 800f9f4:	af00      	add	r7, sp, #0
 800f9f6:	6078      	str	r0, [r7, #4]
 800f9f8:	4a05      	ldr	r2, [pc, #20]	@ (800fa10 <_ZN11Screen1ViewD1Ev+0x20>)
 800f9fa:	687b      	ldr	r3, [r7, #4]
 800f9fc:	601a      	str	r2, [r3, #0]
 800f9fe:	687b      	ldr	r3, [r7, #4]
 800fa00:	4618      	mov	r0, r3
 800fa02:	f7fe ff03 	bl	800e80c <_ZN15Screen1ViewBaseD1Ev>
 800fa06:	687b      	ldr	r3, [r7, #4]
 800fa08:	4618      	mov	r0, r3
 800fa0a:	3708      	adds	r7, #8
 800fa0c:	46bd      	mov	sp, r7
 800fa0e:	bd80      	pop	{r7, pc}
 800fa10:	0802a138 	.word	0x0802a138

0800fa14 <_ZN11Screen1ViewD0Ev>:
 800fa14:	b580      	push	{r7, lr}
 800fa16:	b082      	sub	sp, #8
 800fa18:	af00      	add	r7, sp, #0
 800fa1a:	6078      	str	r0, [r7, #4]
 800fa1c:	6878      	ldr	r0, [r7, #4]
 800fa1e:	f7ff ffe7 	bl	800f9f0 <_ZN11Screen1ViewD1Ev>
 800fa22:	f44f 7121 	mov.w	r1, #644	@ 0x284
 800fa26:	6878      	ldr	r0, [r7, #4]
 800fa28:	f018 f825 	bl	8027a76 <_ZdlPvj>
 800fa2c:	687b      	ldr	r3, [r7, #4]
 800fa2e:	4618      	mov	r0, r3
 800fa30:	3708      	adds	r7, #8
 800fa32:	46bd      	mov	sp, r7
 800fa34:	bd80      	pop	{r7, pc}
	...

0800fa38 <_ZN11Screen1ViewC1Ev>:
#define bool LIBRARY_bool
#include "x_nucleo_ihmxx.h"
#undef bool
#endif

Screen1View::Screen1View()
 800fa38:	b580      	push	{r7, lr}
 800fa3a:	b082      	sub	sp, #8
 800fa3c:	af00      	add	r7, sp, #0
 800fa3e:	6078      	str	r0, [r7, #4]
 800fa40:	687b      	ldr	r3, [r7, #4]
 800fa42:	4618      	mov	r0, r3
 800fa44:	f7fe fbe4 	bl	800e210 <_ZN15Screen1ViewBaseC1Ev>
 800fa48:	4a03      	ldr	r2, [pc, #12]	@ (800fa58 <_ZN11Screen1ViewC1Ev+0x20>)
 800fa4a:	687b      	ldr	r3, [r7, #4]
 800fa4c:	601a      	str	r2, [r3, #0]
{

}
 800fa4e:	687b      	ldr	r3, [r7, #4]
 800fa50:	4618      	mov	r0, r3
 800fa52:	3708      	adds	r7, #8
 800fa54:	46bd      	mov	sp, r7
 800fa56:	bd80      	pop	{r7, pc}
 800fa58:	0802a138 	.word	0x0802a138

0800fa5c <_ZN11Screen1View11setupScreenEv>:

void Screen1View::setupScreen()
{
 800fa5c:	b580      	push	{r7, lr}
 800fa5e:	b082      	sub	sp, #8
 800fa60:	af00      	add	r7, sp, #0
 800fa62:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::setupScreen();
 800fa64:	687b      	ldr	r3, [r7, #4]
 800fa66:	4618      	mov	r0, r3
 800fa68:	f7fe ff15 	bl	800e896 <_ZN15Screen1ViewBase11setupScreenEv>
}
 800fa6c:	bf00      	nop
 800fa6e:	3708      	adds	r7, #8
 800fa70:	46bd      	mov	sp, r7
 800fa72:	bd80      	pop	{r7, pc}

0800fa74 <_ZN11Screen1View14tearDownScreenEv>:

void Screen1View::tearDownScreen()
{
 800fa74:	b580      	push	{r7, lr}
 800fa76:	b082      	sub	sp, #8
 800fa78:	af00      	add	r7, sp, #0
 800fa7a:	6078      	str	r0, [r7, #4]
    Screen1ViewBase::tearDownScreen();
 800fa7c:	687b      	ldr	r3, [r7, #4]
 800fa7e:	4618      	mov	r0, r3
 800fa80:	f7fd f834 	bl	800caec <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800fa84:	bf00      	nop
 800fa86:	3708      	adds	r7, #8
 800fa88:	46bd      	mov	sp, r7
 800fa8a:	bd80      	pop	{r7, pc}

0800fa8c <_ZN11Screen1View9leftArrowEv>:

void Screen1View::leftArrow()
{
 800fa8c:	b580      	push	{r7, lr}
 800fa8e:	b082      	sub	sp, #8
 800fa90:	af00      	add	r7, sp, #0
 800fa92:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	if(flexButton1.getPressed() == true) BSP_MotorControl_Move(0, BACKWARD, 200);
 800fa94:	687b      	ldr	r3, [r7, #4]
 800fa96:	339c      	adds	r3, #156	@ 0x9c
 800fa98:	4618      	mov	r0, r3
 800fa9a:	f7fe f999 	bl	800ddd0 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800fa9e:	4603      	mov	r3, r0
 800faa0:	2b01      	cmp	r3, #1
 800faa2:	bf0c      	ite	eq
 800faa4:	2301      	moveq	r3, #1
 800faa6:	2300      	movne	r3, #0
 800faa8:	b2db      	uxtb	r3, r3
 800faaa:	2b00      	cmp	r3, #0
 800faac:	d004      	beq.n	800fab8 <_ZN11Screen1View9leftArrowEv+0x2c>
 800faae:	22c8      	movs	r2, #200	@ 0xc8
 800fab0:	2100      	movs	r1, #0
 800fab2:	2000      	movs	r0, #0
 800fab4:	f7f4 fea0 	bl	80047f8 <BSP_MotorControl_Move>
#endif
}
 800fab8:	bf00      	nop
 800faba:	3708      	adds	r7, #8
 800fabc:	46bd      	mov	sp, r7
 800fabe:	bd80      	pop	{r7, pc}

0800fac0 <_ZN11Screen1View10rightArrowEv>:
void Screen1View::rightArrow()
{
 800fac0:	b580      	push	{r7, lr}
 800fac2:	b082      	sub	sp, #8
 800fac4:	af00      	add	r7, sp, #0
 800fac6:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	BSP_MotorControl_Move(0, FORWARD, 200);
 800fac8:	22c8      	movs	r2, #200	@ 0xc8
 800faca:	2101      	movs	r1, #1
 800facc:	2000      	movs	r0, #0
 800face:	f7f4 fe93 	bl	80047f8 <BSP_MotorControl_Move>
#endif
}
 800fad2:	bf00      	nop
 800fad4:	3708      	adds	r7, #8
 800fad6:	46bd      	mov	sp, r7
 800fad8:	bd80      	pop	{r7, pc}

0800fada <_ZN11Screen1View4stopEv>:
void Screen1View::stop()
{
 800fada:	b580      	push	{r7, lr}
 800fadc:	b082      	sub	sp, #8
 800fade:	af00      	add	r7, sp, #0
 800fae0:	6078      	str	r0, [r7, #4]
#ifndef SIMULATOR
	BSP_MotorControl_CmdSoftHiZ(0);
 800fae2:	2000      	movs	r0, #0
 800fae4:	f7f4 fef4 	bl	80048d0 <BSP_MotorControl_CmdSoftHiZ>
#endif
}
 800fae8:	bf00      	nop
 800faea:	3708      	adds	r7, #8
 800faec:	46bd      	mov	sp, r7
 800faee:	bd80      	pop	{r7, pc}

0800faf0 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800faf0:	b480      	push	{r7}
 800faf2:	b083      	sub	sp, #12
 800faf4:	af00      	add	r7, sp, #0
 800faf6:	6078      	str	r0, [r7, #4]
    {
 800faf8:	4a04      	ldr	r2, [pc, #16]	@ (800fb0c <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800fafa:	687b      	ldr	r3, [r7, #4]
 800fafc:	601a      	str	r2, [r3, #0]
    }
 800fafe:	687b      	ldr	r3, [r7, #4]
 800fb00:	4618      	mov	r0, r3
 800fb02:	370c      	adds	r7, #12
 800fb04:	46bd      	mov	sp, r7
 800fb06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb0a:	4770      	bx	lr
 800fb0c:	0802a190 	.word	0x0802a190

0800fb10 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800fb10:	b580      	push	{r7, lr}
 800fb12:	b082      	sub	sp, #8
 800fb14:	af00      	add	r7, sp, #0
 800fb16:	6078      	str	r0, [r7, #4]
    }
 800fb18:	6878      	ldr	r0, [r7, #4]
 800fb1a:	f7ff ffe9 	bl	800faf0 <_ZN8touchgfx15TouchControllerD1Ev>
 800fb1e:	2104      	movs	r1, #4
 800fb20:	6878      	ldr	r0, [r7, #4]
 800fb22:	f017 ffa8 	bl	8027a76 <_ZdlPvj>
 800fb26:	687b      	ldr	r3, [r7, #4]
 800fb28:	4618      	mov	r0, r3
 800fb2a:	3708      	adds	r7, #8
 800fb2c:	46bd      	mov	sp, r7
 800fb2e:	bd80      	pop	{r7, pc}

0800fb30 <_ZN20STM32TouchController4initEv>:

static TS_DrvTypeDef* tsDriver;
extern I2C_HandleTypeDef hi2c3;

void STM32TouchController::init()
{
 800fb30:	b580      	push	{r7, lr}
 800fb32:	b082      	sub	sp, #8
 800fb34:	af00      	add	r7, sp, #0
 800fb36:	6078      	str	r0, [r7, #4]
    /* Initialize the TS driver structure */
    tsDriver = &ft5336_ts_drv;
 800fb38:	4b05      	ldr	r3, [pc, #20]	@ (800fb50 <_ZN20STM32TouchController4initEv+0x20>)
 800fb3a:	4a06      	ldr	r2, [pc, #24]	@ (800fb54 <_ZN20STM32TouchController4initEv+0x24>)
 800fb3c:	601a      	str	r2, [r3, #0]

    /* Initialize the TS driver */
    tsDriver->Start(FT5336_I2C_SLAVE_ADDRESS);
 800fb3e:	4b04      	ldr	r3, [pc, #16]	@ (800fb50 <_ZN20STM32TouchController4initEv+0x20>)
 800fb40:	681b      	ldr	r3, [r3, #0]
 800fb42:	68db      	ldr	r3, [r3, #12]
 800fb44:	2070      	movs	r0, #112	@ 0x70
 800fb46:	4798      	blx	r3
}
 800fb48:	bf00      	nop
 800fb4a:	3708      	adds	r7, #8
 800fb4c:	46bd      	mov	sp, r7
 800fb4e:	bd80      	pop	{r7, pc}
 800fb50:	20000b08 	.word	0x20000b08
 800fb54:	20000008 	.word	0x20000008

0800fb58 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800fb58:	b580      	push	{r7, lr}
 800fb5a:	b086      	sub	sp, #24
 800fb5c:	af00      	add	r7, sp, #0
 800fb5e:	60f8      	str	r0, [r7, #12]
 800fb60:	60b9      	str	r1, [r7, #8]
 800fb62:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
	if (tsDriver)
 800fb64:	4b14      	ldr	r3, [pc, #80]	@ (800fbb8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 800fb66:	681b      	ldr	r3, [r3, #0]
 800fb68:	2b00      	cmp	r3, #0
 800fb6a:	d01f      	beq.n	800fbac <_ZN20STM32TouchController11sampleTouchERlS0_+0x54>
	{
		if (tsDriver->DetectTouch(FT5336_I2C_SLAVE_ADDRESS))
 800fb6c:	4b12      	ldr	r3, [pc, #72]	@ (800fbb8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 800fb6e:	681b      	ldr	r3, [r3, #0]
 800fb70:	691b      	ldr	r3, [r3, #16]
 800fb72:	2070      	movs	r0, #112	@ 0x70
 800fb74:	4798      	blx	r3
 800fb76:	4603      	mov	r3, r0
 800fb78:	2b00      	cmp	r3, #0
 800fb7a:	bf14      	ite	ne
 800fb7c:	2301      	movne	r3, #1
 800fb7e:	2300      	moveq	r3, #0
 800fb80:	b2db      	uxtb	r3, r3
 800fb82:	2b00      	cmp	r3, #0
 800fb84:	d012      	beq.n	800fbac <_ZN20STM32TouchController11sampleTouchERlS0_+0x54>
		{
			/* Get each touch coordinates */
			uint16_t _x, _y;
			tsDriver->GetXY(FT5336_I2C_SLAVE_ADDRESS, &_y, &_x);
 800fb86:	4b0c      	ldr	r3, [pc, #48]	@ (800fbb8 <_ZN20STM32TouchController11sampleTouchERlS0_+0x60>)
 800fb88:	681b      	ldr	r3, [r3, #0]
 800fb8a:	695b      	ldr	r3, [r3, #20]
 800fb8c:	f107 0216 	add.w	r2, r7, #22
 800fb90:	f107 0114 	add.w	r1, r7, #20
 800fb94:	2070      	movs	r0, #112	@ 0x70
 800fb96:	4798      	blx	r3
			x = (int32_t)_x;
 800fb98:	8afb      	ldrh	r3, [r7, #22]
 800fb9a:	461a      	mov	r2, r3
 800fb9c:	68bb      	ldr	r3, [r7, #8]
 800fb9e:	601a      	str	r2, [r3, #0]
			y = (int32_t)_y;
 800fba0:	8abb      	ldrh	r3, [r7, #20]
 800fba2:	461a      	mov	r2, r3
 800fba4:	687b      	ldr	r3, [r7, #4]
 800fba6:	601a      	str	r2, [r3, #0]
			return true;
 800fba8:	2301      	movs	r3, #1
 800fbaa:	e000      	b.n	800fbae <_ZN20STM32TouchController11sampleTouchERlS0_+0x56>
		}
	}
	return false;
 800fbac:	2300      	movs	r3, #0
}
 800fbae:	4618      	mov	r0, r3
 800fbb0:	3718      	adds	r7, #24
 800fbb2:	46bd      	mov	sp, r7
 800fbb4:	bd80      	pop	{r7, pc}
 800fbb6:	bf00      	nop
 800fbb8:	20000b08 	.word	0x20000b08

0800fbbc <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800fbbc:	b580      	push	{r7, lr}
 800fbbe:	b082      	sub	sp, #8
 800fbc0:	af00      	add	r7, sp, #0
 800fbc2:	6078      	str	r0, [r7, #4]
 800fbc4:	4a05      	ldr	r2, [pc, #20]	@ (800fbdc <_ZN20STM32TouchControllerD1Ev+0x20>)
 800fbc6:	687b      	ldr	r3, [r7, #4]
 800fbc8:	601a      	str	r2, [r3, #0]
 800fbca:	687b      	ldr	r3, [r7, #4]
 800fbcc:	4618      	mov	r0, r3
 800fbce:	f7ff ff8f 	bl	800faf0 <_ZN8touchgfx15TouchControllerD1Ev>
 800fbd2:	687b      	ldr	r3, [r7, #4]
 800fbd4:	4618      	mov	r0, r3
 800fbd6:	3708      	adds	r7, #8
 800fbd8:	46bd      	mov	sp, r7
 800fbda:	bd80      	pop	{r7, pc}
 800fbdc:	0802a178 	.word	0x0802a178

0800fbe0 <_ZN20STM32TouchControllerD0Ev>:
 800fbe0:	b580      	push	{r7, lr}
 800fbe2:	b082      	sub	sp, #8
 800fbe4:	af00      	add	r7, sp, #0
 800fbe6:	6078      	str	r0, [r7, #4]
 800fbe8:	6878      	ldr	r0, [r7, #4]
 800fbea:	f7ff ffe7 	bl	800fbbc <_ZN20STM32TouchControllerD1Ev>
 800fbee:	2104      	movs	r1, #4
 800fbf0:	6878      	ldr	r0, [r7, #4]
 800fbf2:	f017 ff40 	bl	8027a76 <_ZdlPvj>
 800fbf6:	687b      	ldr	r3, [r7, #4]
 800fbf8:	4618      	mov	r0, r3
 800fbfa:	3708      	adds	r7, #8
 800fbfc:	46bd      	mov	sp, r7
 800fbfe:	bd80      	pop	{r7, pc}

0800fc00 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800fc00:	b480      	push	{r7}
 800fc02:	af00      	add	r7, sp, #0

}
 800fc04:	bf00      	nop
 800fc06:	46bd      	mov	sp, r7
 800fc08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc0c:	4770      	bx	lr
	...

0800fc10 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800fc10:	b480      	push	{r7}
 800fc12:	b083      	sub	sp, #12
 800fc14:	af00      	add	r7, sp, #0
 800fc16:	4603      	mov	r3, r0
 800fc18:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800fc1a:	79fb      	ldrb	r3, [r7, #7]
 800fc1c:	2b03      	cmp	r3, #3
 800fc1e:	d80c      	bhi.n	800fc3a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800fc20:	a201      	add	r2, pc, #4	@ (adr r2, 800fc28 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800fc22:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fc26:	bf00      	nop
 800fc28:	0800fc39 	.word	0x0800fc39
 800fc2c:	0800fc39 	.word	0x0800fc39
 800fc30:	0800fc39 	.word	0x0800fc39
 800fc34:	0800fc39 	.word	0x0800fc39
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800fc38:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800fc3a:	bf00      	nop
 800fc3c:	370c      	adds	r7, #12
 800fc3e:	46bd      	mov	sp, r7
 800fc40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc44:	4770      	bx	lr
 800fc46:	bf00      	nop

0800fc48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800fc48:	b480      	push	{r7}
 800fc4a:	b083      	sub	sp, #12
 800fc4c:	af00      	add	r7, sp, #0
 800fc4e:	4603      	mov	r3, r0
 800fc50:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800fc52:	79fb      	ldrb	r3, [r7, #7]
 800fc54:	2b03      	cmp	r3, #3
 800fc56:	d80c      	bhi.n	800fc72 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800fc58:	a201      	add	r2, pc, #4	@ (adr r2, 800fc60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800fc5a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fc5e:	bf00      	nop
 800fc60:	0800fc71 	.word	0x0800fc71
 800fc64:	0800fc71 	.word	0x0800fc71
 800fc68:	0800fc71 	.word	0x0800fc71
 800fc6c:	0800fc71 	.word	0x0800fc71
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800fc70:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800fc72:	bf00      	nop
 800fc74:	370c      	adds	r7, #12
 800fc76:	46bd      	mov	sp, r7
 800fc78:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc7c:	4770      	bx	lr
 800fc7e:	bf00      	nop

0800fc80 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800fc80:	b480      	push	{r7}
 800fc82:	b083      	sub	sp, #12
 800fc84:	af00      	add	r7, sp, #0
 800fc86:	4603      	mov	r3, r0
 800fc88:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800fc8a:	79fb      	ldrb	r3, [r7, #7]
 800fc8c:	2b03      	cmp	r3, #3
 800fc8e:	d80c      	bhi.n	800fcaa <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800fc90:	a201      	add	r2, pc, #4	@ (adr r2, 800fc98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800fc92:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fc96:	bf00      	nop
 800fc98:	0800fca9 	.word	0x0800fca9
 800fc9c:	0800fca9 	.word	0x0800fca9
 800fca0:	0800fca9 	.word	0x0800fca9
 800fca4:	0800fca9 	.word	0x0800fca9
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800fca8:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800fcaa:	bf00      	nop
 800fcac:	370c      	adds	r7, #12
 800fcae:	46bd      	mov	sp, r7
 800fcb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcb4:	4770      	bx	lr
 800fcb6:	bf00      	nop

0800fcb8 <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800fcb8:	b480      	push	{r7}
 800fcba:	b083      	sub	sp, #12
 800fcbc:	af00      	add	r7, sp, #0
 800fcbe:	6078      	str	r0, [r7, #4]
    {
 800fcc0:	4a04      	ldr	r2, [pc, #16]	@ (800fcd4 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800fcc2:	687b      	ldr	r3, [r7, #4]
 800fcc4:	601a      	str	r2, [r3, #0]
    }
 800fcc6:	687b      	ldr	r3, [r7, #4]
 800fcc8:	4618      	mov	r0, r3
 800fcca:	370c      	adds	r7, #12
 800fccc:	46bd      	mov	sp, r7
 800fcce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcd2:	4770      	bx	lr
 800fcd4:	0802a748 	.word	0x0802a748

0800fcd8 <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800fcd8:	b580      	push	{r7, lr}
 800fcda:	b082      	sub	sp, #8
 800fcdc:	af00      	add	r7, sp, #0
 800fcde:	6078      	str	r0, [r7, #4]
    }
 800fce0:	6878      	ldr	r0, [r7, #4]
 800fce2:	f7ff ffe9 	bl	800fcb8 <_ZN8touchgfx3HALD1Ev>
 800fce6:	217c      	movs	r1, #124	@ 0x7c
 800fce8:	6878      	ldr	r0, [r7, #4]
 800fcea:	f017 fec4 	bl	8027a76 <_ZdlPvj>
 800fcee:	687b      	ldr	r3, [r7, #4]
 800fcf0:	4618      	mov	r0, r3
 800fcf2:	3708      	adds	r7, #8
 800fcf4:	46bd      	mov	sp, r7
 800fcf6:	bd80      	pop	{r7, pc}

0800fcf8 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800fcf8:	b480      	push	{r7}
 800fcfa:	b083      	sub	sp, #12
 800fcfc:	af00      	add	r7, sp, #0
 800fcfe:	6078      	str	r0, [r7, #4]
 800fd00:	460b      	mov	r3, r1
 800fd02:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800fd04:	687b      	ldr	r3, [r7, #4]
 800fd06:	78fa      	ldrb	r2, [r7, #3]
 800fd08:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800fd0c:	687b      	ldr	r3, [r7, #4]
 800fd0e:	2201      	movs	r2, #1
 800fd10:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800fd14:	bf00      	nop
 800fd16:	370c      	adds	r7, #12
 800fd18:	46bd      	mov	sp, r7
 800fd1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd1e:	4770      	bx	lr

0800fd20 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800fd20:	b580      	push	{r7, lr}
 800fd22:	b082      	sub	sp, #8
 800fd24:	af00      	add	r7, sp, #0
 800fd26:	6078      	str	r0, [r7, #4]
 800fd28:	460b      	mov	r3, r1
 800fd2a:	807b      	strh	r3, [r7, #2]
 800fd2c:	4613      	mov	r3, r2
 800fd2e:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800fd30:	4b0c      	ldr	r3, [pc, #48]	@ (800fd64 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800fd32:	881b      	ldrh	r3, [r3, #0]
 800fd34:	887a      	ldrh	r2, [r7, #2]
 800fd36:	429a      	cmp	r2, r3
 800fd38:	d304      	bcc.n	800fd44 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800fd3a:	4b0b      	ldr	r3, [pc, #44]	@ (800fd68 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800fd3c:	881b      	ldrh	r3, [r3, #0]
 800fd3e:	883a      	ldrh	r2, [r7, #0]
 800fd40:	429a      	cmp	r2, r3
 800fd42:	d205      	bcs.n	800fd50 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800fd44:	4b09      	ldr	r3, [pc, #36]	@ (800fd6c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800fd46:	4a0a      	ldr	r2, [pc, #40]	@ (800fd70 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800fd48:	219e      	movs	r1, #158	@ 0x9e
 800fd4a:	480a      	ldr	r0, [pc, #40]	@ (800fd74 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800fd4c:	f017 fec2 	bl	8027ad4 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800fd50:	4a09      	ldr	r2, [pc, #36]	@ (800fd78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800fd52:	887b      	ldrh	r3, [r7, #2]
 800fd54:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800fd56:	4a09      	ldr	r2, [pc, #36]	@ (800fd7c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800fd58:	883b      	ldrh	r3, [r7, #0]
 800fd5a:	8013      	strh	r3, [r2, #0]
    }
 800fd5c:	bf00      	nop
 800fd5e:	3708      	adds	r7, #8
 800fd60:	46bd      	mov	sp, r7
 800fd62:	bd80      	pop	{r7, pc}
 800fd64:	20003978 	.word	0x20003978
 800fd68:	2000397a 	.word	0x2000397a
 800fd6c:	08029354 	.word	0x08029354
 800fd70:	080293b8 	.word	0x080293b8
 800fd74:	080293fc 	.word	0x080293fc
 800fd78:	2000397e 	.word	0x2000397e
 800fd7c:	20003980 	.word	0x20003980

0800fd80 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
 800fd80:	b580      	push	{r7, lr}
 800fd82:	b082      	sub	sp, #8
 800fd84:	af00      	add	r7, sp, #0
 800fd86:	6078      	str	r0, [r7, #4]
        if (useDMAAcceleration)
 800fd88:	687b      	ldr	r3, [r7, #4]
 800fd8a:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800fd8e:	2b00      	cmp	r3, #0
 800fd90:	d009      	beq.n	800fda6 <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
            return dma.getBlitCaps();
 800fd92:	687b      	ldr	r3, [r7, #4]
 800fd94:	685a      	ldr	r2, [r3, #4]
 800fd96:	687b      	ldr	r3, [r7, #4]
 800fd98:	685b      	ldr	r3, [r3, #4]
 800fd9a:	681b      	ldr	r3, [r3, #0]
 800fd9c:	681b      	ldr	r3, [r3, #0]
 800fd9e:	4610      	mov	r0, r2
 800fda0:	4798      	blx	r3
 800fda2:	4603      	mov	r3, r0
 800fda4:	e000      	b.n	800fda8 <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        return static_cast<BlitOperations>(0);
 800fda6:	2300      	movs	r3, #0
    }
 800fda8:	4618      	mov	r0, r3
 800fdaa:	3708      	adds	r7, #8
 800fdac:	46bd      	mov	sp, r7
 800fdae:	bd80      	pop	{r7, pc}

0800fdb0 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800fdb0:	b580      	push	{r7, lr}
 800fdb2:	b082      	sub	sp, #8
 800fdb4:	af00      	add	r7, sp, #0
 800fdb6:	6078      	str	r0, [r7, #4]
        swapFrameBuffers();
 800fdb8:	6878      	ldr	r0, [r7, #4]
 800fdba:	f003 f973 	bl	80130a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800fdbe:	687b      	ldr	r3, [r7, #4]
 800fdc0:	681b      	ldr	r3, [r3, #0]
 800fdc2:	33ac      	adds	r3, #172	@ 0xac
 800fdc4:	681b      	ldr	r3, [r3, #0]
 800fdc6:	6878      	ldr	r0, [r7, #4]
 800fdc8:	4798      	blx	r3
    }
 800fdca:	bf00      	nop
 800fdcc:	3708      	adds	r7, #8
 800fdce:	46bd      	mov	sp, r7
 800fdd0:	bd80      	pop	{r7, pc}

0800fdd2 <_ZN8touchgfx3HAL9sampleKeyERh>:
    virtual bool sampleKey(uint8_t& key)
 800fdd2:	b480      	push	{r7}
 800fdd4:	b083      	sub	sp, #12
 800fdd6:	af00      	add	r7, sp, #0
 800fdd8:	6078      	str	r0, [r7, #4]
 800fdda:	6039      	str	r1, [r7, #0]
        return false;
 800fddc:	2300      	movs	r3, #0
    }
 800fdde:	4618      	mov	r0, r3
 800fde0:	370c      	adds	r7, #12
 800fde2:	46bd      	mov	sp, r7
 800fde4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fde8:	4770      	bx	lr
	...

0800fdec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800fdec:	b580      	push	{r7, lr}
 800fdee:	b084      	sub	sp, #16
 800fdf0:	af00      	add	r7, sp, #0
 800fdf2:	60f8      	str	r0, [r7, #12]
 800fdf4:	60b9      	str	r1, [r7, #8]
 800fdf6:	607a      	str	r2, [r7, #4]
 800fdf8:	603b      	str	r3, [r7, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800fdfa:	68bb      	ldr	r3, [r7, #8]
 800fdfc:	2b00      	cmp	r3, #0
 800fdfe:	d106      	bne.n	800fe0e <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800fe00:	4b0f      	ldr	r3, [pc, #60]	@ (800fe40 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800fe02:	4a10      	ldr	r2, [pc, #64]	@ (800fe44 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800fe04:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800fe08:	480f      	ldr	r0, [pc, #60]	@ (800fe48 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800fe0a:	f017 fe63 	bl	8027ad4 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800fe0e:	68fb      	ldr	r3, [r7, #12]
 800fe10:	68ba      	ldr	r2, [r7, #8]
 800fe12:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800fe14:	68fb      	ldr	r3, [r7, #12]
 800fe16:	687a      	ldr	r2, [r7, #4]
 800fe18:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800fe1a:	687b      	ldr	r3, [r7, #4]
 800fe1c:	2b00      	cmp	r3, #0
 800fe1e:	bf14      	ite	ne
 800fe20:	2301      	movne	r3, #1
 800fe22:	2300      	moveq	r3, #0
 800fe24:	b2da      	uxtb	r2, r3
 800fe26:	4b09      	ldr	r3, [pc, #36]	@ (800fe4c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800fe28:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800fe2a:	68fb      	ldr	r3, [r7, #12]
 800fe2c:	681b      	ldr	r3, [r3, #0]
 800fe2e:	338c      	adds	r3, #140	@ 0x8c
 800fe30:	681b      	ldr	r3, [r3, #0]
 800fe32:	6839      	ldr	r1, [r7, #0]
 800fe34:	68f8      	ldr	r0, [r7, #12]
 800fe36:	4798      	blx	r3
    }
 800fe38:	bf00      	nop
 800fe3a:	3710      	adds	r7, #16
 800fe3c:	46bd      	mov	sp, r7
 800fe3e:	bd80      	pop	{r7, pc}
 800fe40:	08029440 	.word	0x08029440
 800fe44:	08029478 	.word	0x08029478
 800fe48:	080293fc 	.word	0x080293fc
 800fe4c:	20003982 	.word	0x20003982

0800fe50 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
    virtual void setAnimationStorage(void* animationStorage)
 800fe50:	b480      	push	{r7}
 800fe52:	b083      	sub	sp, #12
 800fe54:	af00      	add	r7, sp, #0
 800fe56:	6078      	str	r0, [r7, #4]
 800fe58:	6039      	str	r1, [r7, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800fe5a:	687b      	ldr	r3, [r7, #4]
 800fe5c:	683a      	ldr	r2, [r7, #0]
 800fe5e:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800fe60:	683b      	ldr	r3, [r7, #0]
 800fe62:	2b00      	cmp	r3, #0
 800fe64:	bf14      	ite	ne
 800fe66:	2301      	movne	r3, #1
 800fe68:	2300      	moveq	r3, #0
 800fe6a:	b2da      	uxtb	r2, r3
 800fe6c:	4b03      	ldr	r3, [pc, #12]	@ (800fe7c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800fe6e:	701a      	strb	r2, [r3, #0]
    }
 800fe70:	bf00      	nop
 800fe72:	370c      	adds	r7, #12
 800fe74:	46bd      	mov	sp, r7
 800fe76:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe7a:	4770      	bx	lr
 800fe7c:	20003983 	.word	0x20003983

0800fe80 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
    virtual FlashDataReader* getFlashDataReader() const
 800fe80:	b480      	push	{r7}
 800fe82:	b083      	sub	sp, #12
 800fe84:	af00      	add	r7, sp, #0
 800fe86:	6078      	str	r0, [r7, #4]
        return 0;
 800fe88:	2300      	movs	r3, #0
    }
 800fe8a:	4618      	mov	r0, r3
 800fe8c:	370c      	adds	r7, #12
 800fe8e:	46bd      	mov	sp, r7
 800fe90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe94:	4770      	bx	lr

0800fe96 <_ZN8touchgfx3HAL9taskDelayEt>:
    virtual void taskDelay(uint16_t ms)
 800fe96:	b580      	push	{r7, lr}
 800fe98:	b082      	sub	sp, #8
 800fe9a:	af00      	add	r7, sp, #0
 800fe9c:	6078      	str	r0, [r7, #4]
 800fe9e:	460b      	mov	r3, r1
 800fea0:	807b      	strh	r3, [r7, #2]
        if (taskDelayFunc)
 800fea2:	687b      	ldr	r3, [r7, #4]
 800fea4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fea6:	2b00      	cmp	r3, #0
 800fea8:	d004      	beq.n	800feb4 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
            taskDelayFunc(ms);
 800feaa:	687b      	ldr	r3, [r7, #4]
 800feac:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800feae:	887a      	ldrh	r2, [r7, #2]
 800feb0:	4610      	mov	r0, r2
 800feb2:	4798      	blx	r3
    }
 800feb4:	bf00      	nop
 800feb6:	3708      	adds	r7, #8
 800feb8:	46bd      	mov	sp, r7
 800feba:	bd80      	pop	{r7, pc}

0800febc <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
    virtual uint16_t getTFTCurrentLine()
 800febc:	b480      	push	{r7}
 800febe:	b083      	sub	sp, #12
 800fec0:	af00      	add	r7, sp, #0
 800fec2:	6078      	str	r0, [r7, #4]
        return 0xFFFFu;
 800fec4:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    }
 800fec8:	4618      	mov	r0, r3
 800feca:	370c      	adds	r7, #12
 800fecc:	46bd      	mov	sp, r7
 800fece:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fed2:	4770      	bx	lr

0800fed4 <_ZN8touchgfx3HAL10getDMATypeEv>:
    virtual DMAType getDMAType()
 800fed4:	b580      	push	{r7, lr}
 800fed6:	b082      	sub	sp, #8
 800fed8:	af00      	add	r7, sp, #0
 800feda:	6078      	str	r0, [r7, #4]
        return dma.getDMAType();
 800fedc:	687b      	ldr	r3, [r7, #4]
 800fede:	685a      	ldr	r2, [r3, #4]
 800fee0:	687b      	ldr	r3, [r7, #4]
 800fee2:	685b      	ldr	r3, [r3, #4]
 800fee4:	681b      	ldr	r3, [r3, #0]
 800fee6:	3318      	adds	r3, #24
 800fee8:	681b      	ldr	r3, [r3, #0]
 800feea:	4610      	mov	r0, r2
 800feec:	4798      	blx	r3
 800feee:	4603      	mov	r3, r0
    }
 800fef0:	4618      	mov	r0, r3
 800fef2:	3708      	adds	r7, #8
 800fef4:	46bd      	mov	sp, r7
 800fef6:	bd80      	pop	{r7, pc}

0800fef8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800fef8:	b480      	push	{r7}
 800fefa:	b085      	sub	sp, #20
 800fefc:	af00      	add	r7, sp, #0
 800fefe:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800ff00:	687b      	ldr	r3, [r7, #4]
 800ff02:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800ff06:	687b      	ldr	r3, [r7, #4]
 800ff08:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800ff0c:	429a      	cmp	r2, r3
 800ff0e:	d011      	beq.n	800ff34 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800ff10:	4b14      	ldr	r3, [pc, #80]	@ (800ff64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ff12:	781b      	ldrb	r3, [r3, #0]
 800ff14:	2b00      	cmp	r3, #0
 800ff16:	d11e      	bne.n	800ff56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800ff18:	4b13      	ldr	r3, [pc, #76]	@ (800ff68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ff1a:	881b      	ldrh	r3, [r3, #0]
 800ff1c:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800ff1e:	4b13      	ldr	r3, [pc, #76]	@ (800ff6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ff20:	881a      	ldrh	r2, [r3, #0]
 800ff22:	4b11      	ldr	r3, [pc, #68]	@ (800ff68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ff24:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800ff26:	4a11      	ldr	r2, [pc, #68]	@ (800ff6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ff28:	89bb      	ldrh	r3, [r7, #12]
 800ff2a:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800ff2c:	4b0d      	ldr	r3, [pc, #52]	@ (800ff64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ff2e:	2201      	movs	r2, #1
 800ff30:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800ff32:	e010      	b.n	800ff56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800ff34:	4b0b      	ldr	r3, [pc, #44]	@ (800ff64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ff36:	781b      	ldrb	r3, [r3, #0]
 800ff38:	2b00      	cmp	r3, #0
 800ff3a:	d00c      	beq.n	800ff56 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800ff3c:	4b0a      	ldr	r3, [pc, #40]	@ (800ff68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ff3e:	881b      	ldrh	r3, [r3, #0]
 800ff40:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800ff42:	4b0a      	ldr	r3, [pc, #40]	@ (800ff6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ff44:	881a      	ldrh	r2, [r3, #0]
 800ff46:	4b08      	ldr	r3, [pc, #32]	@ (800ff68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ff48:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800ff4a:	4a08      	ldr	r2, [pc, #32]	@ (800ff6c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ff4c:	89fb      	ldrh	r3, [r7, #14]
 800ff4e:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800ff50:	4b04      	ldr	r3, [pc, #16]	@ (800ff64 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ff52:	2200      	movs	r2, #0
 800ff54:	701a      	strb	r2, [r3, #0]
    }
 800ff56:	bf00      	nop
 800ff58:	3714      	adds	r7, #20
 800ff5a:	46bd      	mov	sp, r7
 800ff5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff60:	4770      	bx	lr
 800ff62:	bf00      	nop
 800ff64:	2000397c 	.word	0x2000397c
 800ff68:	2000397a 	.word	0x2000397a
 800ff6c:	20003978 	.word	0x20003978

0800ff70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800ff70:	b580      	push	{r7, lr}
 800ff72:	b082      	sub	sp, #8
 800ff74:	af00      	add	r7, sp, #0
 800ff76:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800ff78:	687b      	ldr	r3, [r7, #4]
 800ff7a:	4618      	mov	r0, r3
 800ff7c:	f002 faf0 	bl	8012560 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800ff80:	bf00      	nop
 800ff82:	3708      	adds	r7, #8
 800ff84:	46bd      	mov	sp, r7
 800ff86:	bd80      	pop	{r7, pc}

0800ff88 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800ff88:	b580      	push	{r7, lr}
 800ff8a:	b082      	sub	sp, #8
 800ff8c:	af00      	add	r7, sp, #0
 800ff8e:	6078      	str	r0, [r7, #4]
 800ff90:	4a05      	ldr	r2, [pc, #20]	@ (800ffa8 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800ff92:	687b      	ldr	r3, [r7, #4]
 800ff94:	601a      	str	r2, [r3, #0]
 800ff96:	687b      	ldr	r3, [r7, #4]
 800ff98:	4618      	mov	r0, r3
 800ff9a:	f7ff fe8d 	bl	800fcb8 <_ZN8touchgfx3HALD1Ev>
 800ff9e:	687b      	ldr	r3, [r7, #4]
 800ffa0:	4618      	mov	r0, r3
 800ffa2:	3708      	adds	r7, #8
 800ffa4:	46bd      	mov	sp, r7
 800ffa6:	bd80      	pop	{r7, pc}
 800ffa8:	0802a3c8 	.word	0x0802a3c8

0800ffac <_ZN20TouchGFXGeneratedHALD0Ev>:
 800ffac:	b580      	push	{r7, lr}
 800ffae:	b082      	sub	sp, #8
 800ffb0:	af00      	add	r7, sp, #0
 800ffb2:	6078      	str	r0, [r7, #4]
 800ffb4:	6878      	ldr	r0, [r7, #4]
 800ffb6:	f7ff ffe7 	bl	800ff88 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ffba:	217c      	movs	r1, #124	@ 0x7c
 800ffbc:	6878      	ldr	r0, [r7, #4]
 800ffbe:	f017 fd5a 	bl	8027a76 <_ZdlPvj>
 800ffc2:	687b      	ldr	r3, [r7, #4]
 800ffc4:	4618      	mov	r0, r3
 800ffc6:	3708      	adds	r7, #8
 800ffc8:	46bd      	mov	sp, r7
 800ffca:	bd80      	pop	{r7, pc}

0800ffcc <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800ffcc:	b580      	push	{r7, lr}
 800ffce:	b082      	sub	sp, #8
 800ffd0:	af00      	add	r7, sp, #0
 800ffd2:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800ffd4:	687b      	ldr	r3, [r7, #4]
 800ffd6:	4618      	mov	r0, r3
 800ffd8:	f7ff ffca 	bl	800ff70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800ffdc:	bf00      	nop
 800ffde:	3708      	adds	r7, #8
 800ffe0:	46bd      	mov	sp, r7
 800ffe2:	bd80      	pop	{r7, pc}

0800ffe4 <_ZN11TouchGFXHAL10initializeEv>:
/* USER CODE BEGIN TouchGFXHAL.cpp */

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800ffe4:	b580      	push	{r7, lr}
 800ffe6:	b082      	sub	sp, #8
 800ffe8:	af00      	add	r7, sp, #0
 800ffea:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800ffec:	687b      	ldr	r3, [r7, #4]
 800ffee:	4618      	mov	r0, r3
 800fff0:	f001 fc30 	bl	8011854 <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800fff4:	bf00      	nop
 800fff6:	3708      	adds	r7, #8
 800fff8:	46bd      	mov	sp, r7
 800fffa:	bd80      	pop	{r7, pc}

0800fffc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800fffc:	b580      	push	{r7, lr}
 800fffe:	b082      	sub	sp, #8
 8010000:	af00      	add	r7, sp, #0
 8010002:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 8010004:	687b      	ldr	r3, [r7, #4]
 8010006:	4618      	mov	r0, r3
 8010008:	f001 fcca 	bl	80119a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 801000c:	4603      	mov	r3, r0
}
 801000e:	4618      	mov	r0, r3
 8010010:	3708      	adds	r7, #8
 8010012:	46bd      	mov	sp, r7
 8010014:	bd80      	pop	{r7, pc}

08010016 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 8010016:	b580      	push	{r7, lr}
 8010018:	b082      	sub	sp, #8
 801001a:	af00      	add	r7, sp, #0
 801001c:	6078      	str	r0, [r7, #4]
 801001e:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8010020:	687b      	ldr	r3, [r7, #4]
 8010022:	6839      	ldr	r1, [r7, #0]
 8010024:	4618      	mov	r0, r3
 8010026:	f001 fcc9 	bl	80119bc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 801002a:	bf00      	nop
 801002c:	3708      	adds	r7, #8
 801002e:	46bd      	mov	sp, r7
 8010030:	bd80      	pop	{r7, pc}

08010032 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8010032:	b580      	push	{r7, lr}
 8010034:	b082      	sub	sp, #8
 8010036:	af00      	add	r7, sp, #0
 8010038:	6078      	str	r0, [r7, #4]
 801003a:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate the start address of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 801003c:	687b      	ldr	r3, [r7, #4]
 801003e:	6839      	ldr	r1, [r7, #0]
 8010040:	4618      	mov	r0, r3
 8010042:	f001 fcd1 	bl	80119e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 8010046:	bf00      	nop
 8010048:	3708      	adds	r7, #8
 801004a:	46bd      	mov	sp, r7
 801004c:	bd80      	pop	{r7, pc}

0801004e <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 801004e:	b580      	push	{r7, lr}
 8010050:	b084      	sub	sp, #16
 8010052:	af00      	add	r7, sp, #0
 8010054:	60f8      	str	r0, [r7, #12]
 8010056:	60b9      	str	r1, [r7, #8]
 8010058:	607a      	str	r2, [r7, #4]
 801005a:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 801005c:	68f8      	ldr	r0, [r7, #12]
 801005e:	683b      	ldr	r3, [r7, #0]
 8010060:	687a      	ldr	r2, [r7, #4]
 8010062:	68b9      	ldr	r1, [r7, #8]
 8010064:	f001 fcce 	bl	8011a04 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 8010068:	4603      	mov	r3, r0
}
 801006a:	4618      	mov	r0, r3
 801006c:	3710      	adds	r7, #16
 801006e:	46bd      	mov	sp, r7
 8010070:	bd80      	pop	{r7, pc}

08010072 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 8010072:	b580      	push	{r7, lr}
 8010074:	b082      	sub	sp, #8
 8010076:	af00      	add	r7, sp, #0
 8010078:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 801007a:	687b      	ldr	r3, [r7, #4]
 801007c:	4618      	mov	r0, r3
 801007e:	f001 fc19 	bl	80118b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8010082:	bf00      	nop
 8010084:	3708      	adds	r7, #8
 8010086:	46bd      	mov	sp, r7
 8010088:	bd80      	pop	{r7, pc}

0801008a <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 801008a:	b580      	push	{r7, lr}
 801008c:	b082      	sub	sp, #8
 801008e:	af00      	add	r7, sp, #0
 8010090:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8010092:	687b      	ldr	r3, [r7, #4]
 8010094:	4618      	mov	r0, r3
 8010096:	f001 fc1d 	bl	80118d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 801009a:	bf00      	nop
 801009c:	3708      	adds	r7, #8
 801009e:	46bd      	mov	sp, r7
 80100a0:	bd80      	pop	{r7, pc}

080100a2 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 80100a2:	b580      	push	{r7, lr}
 80100a4:	b082      	sub	sp, #8
 80100a6:	af00      	add	r7, sp, #0
 80100a8:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80100aa:	687b      	ldr	r3, [r7, #4]
 80100ac:	4618      	mov	r0, r3
 80100ae:	f001 fc1f 	bl	80118f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 80100b2:	bf00      	nop
 80100b4:	3708      	adds	r7, #8
 80100b6:	46bd      	mov	sp, r7
 80100b8:	bd80      	pop	{r7, pc}

080100ba <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 80100ba:	b580      	push	{r7, lr}
 80100bc:	b082      	sub	sp, #8
 80100be:	af00      	add	r7, sp, #0
 80100c0:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit the call to the parent function
    // and implement the needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80100c2:	687b      	ldr	r3, [r7, #4]
 80100c4:	4618      	mov	r0, r3
 80100c6:	f001 fc21 	bl	801190c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 80100ca:	bf00      	nop
 80100cc:	3708      	adds	r7, #8
 80100ce:	46bd      	mov	sp, r7
 80100d0:	bd80      	pop	{r7, pc}

080100d2 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 80100d2:	b580      	push	{r7, lr}
 80100d4:	b082      	sub	sp, #8
 80100d6:	af00      	add	r7, sp, #0
 80100d8:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 80100da:	687b      	ldr	r3, [r7, #4]
 80100dc:	4618      	mov	r0, r3
 80100de:	f001 fc43 	bl	8011968 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 80100e2:	4603      	mov	r3, r0
}
 80100e4:	4618      	mov	r0, r3
 80100e6:	3708      	adds	r7, #8
 80100e8:	46bd      	mov	sp, r7
 80100ea:	bd80      	pop	{r7, pc}

080100ec <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 80100ec:	b580      	push	{r7, lr}
 80100ee:	b082      	sub	sp, #8
 80100f0:	af00      	add	r7, sp, #0
 80100f2:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 80100f4:	687b      	ldr	r3, [r7, #4]
 80100f6:	4618      	mov	r0, r3
 80100f8:	f001 fc43 	bl	8011982 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 80100fc:	bf00      	nop
 80100fe:	3708      	adds	r7, #8
 8010100:	46bd      	mov	sp, r7
 8010102:	bd80      	pop	{r7, pc}

08010104 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8010104:	b580      	push	{r7, lr}
 8010106:	b082      	sub	sp, #8
 8010108:	af00      	add	r7, sp, #0
 801010a:	6078      	str	r0, [r7, #4]
 801010c:	4a05      	ldr	r2, [pc, #20]	@ (8010124 <_ZN11TouchGFXHALD1Ev+0x20>)
 801010e:	687b      	ldr	r3, [r7, #4]
 8010110:	601a      	str	r2, [r3, #0]
 8010112:	687b      	ldr	r3, [r7, #4]
 8010114:	4618      	mov	r0, r3
 8010116:	f7ff ff37 	bl	800ff88 <_ZN20TouchGFXGeneratedHALD1Ev>
 801011a:	687b      	ldr	r3, [r7, #4]
 801011c:	4618      	mov	r0, r3
 801011e:	3708      	adds	r7, #8
 8010120:	46bd      	mov	sp, r7
 8010122:	bd80      	pop	{r7, pc}
 8010124:	0802a1a8 	.word	0x0802a1a8

08010128 <_ZN11TouchGFXHALD0Ev>:
 8010128:	b580      	push	{r7, lr}
 801012a:	b082      	sub	sp, #8
 801012c:	af00      	add	r7, sp, #0
 801012e:	6078      	str	r0, [r7, #4]
 8010130:	6878      	ldr	r0, [r7, #4]
 8010132:	f7ff ffe7 	bl	8010104 <_ZN11TouchGFXHALD1Ev>
 8010136:	217c      	movs	r1, #124	@ 0x7c
 8010138:	6878      	ldr	r0, [r7, #4]
 801013a:	f017 fc9c 	bl	8027a76 <_ZdlPvj>
 801013e:	687b      	ldr	r3, [r7, #4]
 8010140:	4618      	mov	r0, r3
 8010142:	3708      	adds	r7, #8
 8010144:	46bd      	mov	sp, r7
 8010146:	bd80      	pop	{r7, pc}

08010148 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 8010148:	b480      	push	{r7}
 801014a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 801014c:	4b05      	ldr	r3, [pc, #20]	@ (8010164 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 801014e:	2200      	movs	r2, #0
 8010150:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 8010152:	4b05      	ldr	r3, [pc, #20]	@ (8010168 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 8010154:	2200      	movs	r2, #0
 8010156:	601a      	str	r2, [r3, #0]
}
 8010158:	bf00      	nop
 801015a:	46bd      	mov	sp, r7
 801015c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010160:	4770      	bx	lr
 8010162:	bf00      	nop
 8010164:	20000b0c 	.word	0x20000b0c
 8010168:	20000b10 	.word	0x20000b10

0801016c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 801016c:	b480      	push	{r7}
 801016e:	af00      	add	r7, sp, #0
    while (fb_sem);
 8010170:	bf00      	nop
 8010172:	4b08      	ldr	r3, [pc, #32]	@ (8010194 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010174:	681b      	ldr	r3, [r3, #0]
 8010176:	2b00      	cmp	r3, #0
 8010178:	bf14      	ite	ne
 801017a:	2301      	movne	r3, #1
 801017c:	2300      	moveq	r3, #0
 801017e:	b2db      	uxtb	r3, r3
 8010180:	2b00      	cmp	r3, #0
 8010182:	d1f6      	bne.n	8010172 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 8010184:	4b03      	ldr	r3, [pc, #12]	@ (8010194 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 8010186:	2201      	movs	r2, #1
 8010188:	601a      	str	r2, [r3, #0]
}
 801018a:	bf00      	nop
 801018c:	46bd      	mov	sp, r7
 801018e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010192:	4770      	bx	lr
 8010194:	20000b0c 	.word	0x20000b0c

08010198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 8010198:	b480      	push	{r7}
 801019a:	af00      	add	r7, sp, #0
    fb_sem = 0;
 801019c:	4b03      	ldr	r3, [pc, #12]	@ (80101ac <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 801019e:	2200      	movs	r2, #0
 80101a0:	601a      	str	r2, [r3, #0]
}
 80101a2:	bf00      	nop
 80101a4:	46bd      	mov	sp, r7
 80101a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101aa:	4770      	bx	lr
 80101ac:	20000b0c 	.word	0x20000b0c

080101b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 80101b0:	b480      	push	{r7}
 80101b2:	af00      	add	r7, sp, #0
    fb_sem = 1;
 80101b4:	4b03      	ldr	r3, [pc, #12]	@ (80101c4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 80101b6:	2201      	movs	r2, #1
 80101b8:	601a      	str	r2, [r3, #0]
}
 80101ba:	bf00      	nop
 80101bc:	46bd      	mov	sp, r7
 80101be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101c2:	4770      	bx	lr
 80101c4:	20000b0c 	.word	0x20000b0c

080101c8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 80101c8:	b480      	push	{r7}
 80101ca:	af00      	add	r7, sp, #0
    fb_sem = 0;
 80101cc:	4b03      	ldr	r3, [pc, #12]	@ (80101dc <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 80101ce:	2200      	movs	r2, #0
 80101d0:	601a      	str	r2, [r3, #0]
}
 80101d2:	bf00      	nop
 80101d4:	46bd      	mov	sp, r7
 80101d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101da:	4770      	bx	lr
 80101dc:	20000b0c 	.word	0x20000b0c

080101e0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 80101e0:	b480      	push	{r7}
 80101e2:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 80101e4:	4b03      	ldr	r3, [pc, #12]	@ (80101f4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80101e6:	2201      	movs	r2, #1
 80101e8:	601a      	str	r2, [r3, #0]
}
 80101ea:	bf00      	nop
 80101ec:	46bd      	mov	sp, r7
 80101ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101f2:	4770      	bx	lr
 80101f4:	20000b10 	.word	0x20000b10

080101f8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 80101f8:	b480      	push	{r7}
 80101fa:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 80101fc:	4b03      	ldr	r3, [pc, #12]	@ (801020c <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 80101fe:	2200      	movs	r2, #0
 8010200:	601a      	str	r2, [r3, #0]
}
 8010202:	bf00      	nop
 8010204:	46bd      	mov	sp, r7
 8010206:	f85d 7b04 	ldr.w	r7, [sp], #4
 801020a:	4770      	bx	lr
 801020c:	20000b10 	.word	0x20000b10

08010210 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 8010210:	b480      	push	{r7}
 8010212:	af00      	add	r7, sp, #0
    return vsync_sem;
 8010214:	4b05      	ldr	r3, [pc, #20]	@ (801022c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 8010216:	681b      	ldr	r3, [r3, #0]
 8010218:	2b00      	cmp	r3, #0
 801021a:	bf14      	ite	ne
 801021c:	2301      	movne	r3, #1
 801021e:	2300      	moveq	r3, #0
 8010220:	b2db      	uxtb	r3, r3
}
 8010222:	4618      	mov	r0, r3
 8010224:	46bd      	mov	sp, r7
 8010226:	f85d 7b04 	ldr.w	r7, [sp], #4
 801022a:	4770      	bx	lr
 801022c:	20000b10 	.word	0x20000b10

08010230 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 8010230:	b580      	push	{r7, lr}
 8010232:	af00      	add	r7, sp, #0
    if (vsync_sem)
 8010234:	4b0a      	ldr	r3, [pc, #40]	@ (8010260 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010236:	681b      	ldr	r3, [r3, #0]
 8010238:	2b00      	cmp	r3, #0
 801023a:	bf14      	ite	ne
 801023c:	2301      	movne	r3, #1
 801023e:	2300      	moveq	r3, #0
 8010240:	b2db      	uxtb	r3, r3
 8010242:	2b00      	cmp	r3, #0
 8010244:	d00a      	beq.n	801025c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 8010246:	4b06      	ldr	r3, [pc, #24]	@ (8010260 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8010248:	2200      	movs	r2, #0
 801024a:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 801024c:	f7fb fa72 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 8010250:	4603      	mov	r3, r0
 8010252:	681a      	ldr	r2, [r3, #0]
 8010254:	3270      	adds	r2, #112	@ 0x70
 8010256:	6812      	ldr	r2, [r2, #0]
 8010258:	4618      	mov	r0, r3
 801025a:	4790      	blx	r2
    }
}
 801025c:	bf00      	nop
 801025e:	bd80      	pop	{r7, pc}
 8010260:	20000b10 	.word	0x20000b10

08010264 <__NVIC_EnableIRQ>:
{
 8010264:	b480      	push	{r7}
 8010266:	b083      	sub	sp, #12
 8010268:	af00      	add	r7, sp, #0
 801026a:	4603      	mov	r3, r0
 801026c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801026e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010272:	2b00      	cmp	r3, #0
 8010274:	db0b      	blt.n	801028e <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8010276:	79fb      	ldrb	r3, [r7, #7]
 8010278:	f003 021f 	and.w	r2, r3, #31
 801027c:	4907      	ldr	r1, [pc, #28]	@ (801029c <__NVIC_EnableIRQ+0x38>)
 801027e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8010282:	095b      	lsrs	r3, r3, #5
 8010284:	2001      	movs	r0, #1
 8010286:	fa00 f202 	lsl.w	r2, r0, r2
 801028a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 801028e:	bf00      	nop
 8010290:	370c      	adds	r7, #12
 8010292:	46bd      	mov	sp, r7
 8010294:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010298:	4770      	bx	lr
 801029a:	bf00      	nop
 801029c:	e000e100 	.word	0xe000e100

080102a0 <__NVIC_DisableIRQ>:
{
 80102a0:	b480      	push	{r7}
 80102a2:	b083      	sub	sp, #12
 80102a4:	af00      	add	r7, sp, #0
 80102a6:	4603      	mov	r3, r0
 80102a8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80102aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80102ae:	2b00      	cmp	r3, #0
 80102b0:	db12      	blt.n	80102d8 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80102b2:	79fb      	ldrb	r3, [r7, #7]
 80102b4:	f003 021f 	and.w	r2, r3, #31
 80102b8:	490a      	ldr	r1, [pc, #40]	@ (80102e4 <__NVIC_DisableIRQ+0x44>)
 80102ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80102be:	095b      	lsrs	r3, r3, #5
 80102c0:	2001      	movs	r0, #1
 80102c2:	fa00 f202 	lsl.w	r2, r0, r2
 80102c6:	3320      	adds	r3, #32
 80102c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80102cc:	f3bf 8f4f 	dsb	sy
}
 80102d0:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80102d2:	f3bf 8f6f 	isb	sy
}
 80102d6:	bf00      	nop
}
 80102d8:	bf00      	nop
 80102da:	370c      	adds	r7, #12
 80102dc:	46bd      	mov	sp, r7
 80102de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80102e2:	4770      	bx	lr
 80102e4:	e000e100 	.word	0xe000e100

080102e8 <SCB_CleanDCache_by_Addr>:
{
 80102e8:	b480      	push	{r7}
 80102ea:	b087      	sub	sp, #28
 80102ec:	af00      	add	r7, sp, #0
 80102ee:	6078      	str	r0, [r7, #4]
 80102f0:	6039      	str	r1, [r7, #0]
     int32_t op_size = dsize;
 80102f2:	683b      	ldr	r3, [r7, #0]
 80102f4:	617b      	str	r3, [r7, #20]
    uint32_t op_addr = (uint32_t) addr;
 80102f6:	687b      	ldr	r3, [r7, #4]
 80102f8:	613b      	str	r3, [r7, #16]
     int32_t linesize = 32;                /* in Cortex-M7 size of cache line is fixed to 8 words (32 bytes) */
 80102fa:	2320      	movs	r3, #32
 80102fc:	60fb      	str	r3, [r7, #12]
  __ASM volatile ("dsb 0xF":::"memory");
 80102fe:	f3bf 8f4f 	dsb	sy
}
 8010302:	bf00      	nop
    while (op_size > 0) {
 8010304:	e00b      	b.n	801031e <SCB_CleanDCache_by_Addr+0x36>
      SCB->DCCMVAC = op_addr;
 8010306:	4a0d      	ldr	r2, [pc, #52]	@ (801033c <SCB_CleanDCache_by_Addr+0x54>)
 8010308:	693b      	ldr	r3, [r7, #16]
 801030a:	f8c2 3268 	str.w	r3, [r2, #616]	@ 0x268
      op_addr += (uint32_t)linesize;
 801030e:	68fb      	ldr	r3, [r7, #12]
 8010310:	693a      	ldr	r2, [r7, #16]
 8010312:	4413      	add	r3, r2
 8010314:	613b      	str	r3, [r7, #16]
      op_size -=           linesize;
 8010316:	697a      	ldr	r2, [r7, #20]
 8010318:	68fb      	ldr	r3, [r7, #12]
 801031a:	1ad3      	subs	r3, r2, r3
 801031c:	617b      	str	r3, [r7, #20]
    while (op_size > 0) {
 801031e:	697b      	ldr	r3, [r7, #20]
 8010320:	2b00      	cmp	r3, #0
 8010322:	dcf0      	bgt.n	8010306 <SCB_CleanDCache_by_Addr+0x1e>
  __ASM volatile ("dsb 0xF":::"memory");
 8010324:	f3bf 8f4f 	dsb	sy
}
 8010328:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 801032a:	f3bf 8f6f 	isb	sy
}
 801032e:	bf00      	nop
}
 8010330:	bf00      	nop
 8010332:	371c      	adds	r7, #28
 8010334:	46bd      	mov	sp, r7
 8010336:	f85d 7b04 	ldr.w	r7, [sp], #4
 801033a:	4770      	bx	lr
 801033c:	e000ed00 	.word	0xe000ed00

08010340 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 8010340:	b480      	push	{r7}
 8010342:	b083      	sub	sp, #12
 8010344:	af00      	add	r7, sp, #0
 8010346:	6078      	str	r0, [r7, #4]
    {
 8010348:	4a04      	ldr	r2, [pc, #16]	@ (801035c <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 801034a:	687b      	ldr	r3, [r7, #4]
 801034c:	601a      	str	r2, [r3, #0]
    }
 801034e:	687b      	ldr	r3, [r7, #4]
 8010350:	4618      	mov	r0, r3
 8010352:	370c      	adds	r7, #12
 8010354:	46bd      	mov	sp, r7
 8010356:	f85d 7b04 	ldr.w	r7, [sp], #4
 801035a:	4770      	bx	lr
 801035c:	0802a2d0 	.word	0x0802a2d0

08010360 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8010360:	b580      	push	{r7, lr}
 8010362:	b082      	sub	sp, #8
 8010364:	af00      	add	r7, sp, #0
 8010366:	6078      	str	r0, [r7, #4]
    }
 8010368:	6878      	ldr	r0, [r7, #4]
 801036a:	f7ff ffe9 	bl	8010340 <_ZN8touchgfx9DMA_QueueD1Ev>
 801036e:	2104      	movs	r1, #4
 8010370:	6878      	ldr	r0, [r7, #4]
 8010372:	f017 fb80 	bl	8027a76 <_ZdlPvj>
 8010376:	687b      	ldr	r3, [r7, #4]
 8010378:	4618      	mov	r0, r3
 801037a:	3708      	adds	r7, #8
 801037c:	46bd      	mov	sp, r7
 801037e:	bd80      	pop	{r7, pc}

08010380 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 8010380:	b580      	push	{r7, lr}
 8010382:	b082      	sub	sp, #8
 8010384:	af00      	add	r7, sp, #0
 8010386:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 8010388:	687b      	ldr	r3, [r7, #4]
 801038a:	681b      	ldr	r3, [r3, #0]
 801038c:	3344      	adds	r3, #68	@ 0x44
 801038e:	681b      	ldr	r3, [r3, #0]
 8010390:	6878      	ldr	r0, [r7, #4]
 8010392:	4798      	blx	r3
    }
 8010394:	bf00      	nop
 8010396:	3708      	adds	r7, #8
 8010398:	46bd      	mov	sp, r7
 801039a:	bd80      	pop	{r7, pc}

0801039c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 801039c:	b480      	push	{r7}
 801039e:	b083      	sub	sp, #12
 80103a0:	af00      	add	r7, sp, #0
 80103a2:	6078      	str	r0, [r7, #4]
    {
 80103a4:	4a04      	ldr	r2, [pc, #16]	@ (80103b8 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 80103a6:	687b      	ldr	r3, [r7, #4]
 80103a8:	601a      	str	r2, [r3, #0]
    }
 80103aa:	687b      	ldr	r3, [r7, #4]
 80103ac:	4618      	mov	r0, r3
 80103ae:	370c      	adds	r7, #12
 80103b0:	46bd      	mov	sp, r7
 80103b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103b6:	4770      	bx	lr
 80103b8:	0802a820 	.word	0x0802a820

080103bc <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 80103bc:	b580      	push	{r7, lr}
 80103be:	b082      	sub	sp, #8
 80103c0:	af00      	add	r7, sp, #0
 80103c2:	6078      	str	r0, [r7, #4]
    }
 80103c4:	6878      	ldr	r0, [r7, #4]
 80103c6:	f7ff ffe9 	bl	801039c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 80103ca:	210c      	movs	r1, #12
 80103cc:	6878      	ldr	r0, [r7, #4]
 80103ce:	f017 fb52 	bl	8027a76 <_ZdlPvj>
 80103d2:	687b      	ldr	r3, [r7, #4]
 80103d4:	4618      	mov	r0, r3
 80103d6:	3708      	adds	r7, #8
 80103d8:	46bd      	mov	sp, r7
 80103da:	bd80      	pop	{r7, pc}

080103dc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 80103dc:	b480      	push	{r7}
 80103de:	b083      	sub	sp, #12
 80103e0:	af00      	add	r7, sp, #0
 80103e2:	6078      	str	r0, [r7, #4]
 80103e4:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80103e6:	4a09      	ldr	r2, [pc, #36]	@ (801040c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 80103e8:	687b      	ldr	r3, [r7, #4]
 80103ea:	601a      	str	r2, [r3, #0]
 80103ec:	687b      	ldr	r3, [r7, #4]
 80103ee:	683a      	ldr	r2, [r7, #0]
 80103f0:	605a      	str	r2, [r3, #4]
 80103f2:	687b      	ldr	r3, [r7, #4]
 80103f4:	2200      	movs	r2, #0
 80103f6:	721a      	strb	r2, [r3, #8]
 80103f8:	687b      	ldr	r3, [r7, #4]
 80103fa:	2200      	movs	r2, #0
 80103fc:	725a      	strb	r2, [r3, #9]
    {
    }
 80103fe:	687b      	ldr	r3, [r7, #4]
 8010400:	4618      	mov	r0, r3
 8010402:	370c      	adds	r7, #12
 8010404:	46bd      	mov	sp, r7
 8010406:	f85d 7b04 	ldr.w	r7, [sp], #4
 801040a:	4770      	bx	lr
 801040c:	0802a820 	.word	0x0802a820

08010410 <_ZN8STM32DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 8010410:	b480      	push	{r7}
 8010412:	b083      	sub	sp, #12
 8010414:	af00      	add	r7, sp, #0
 8010416:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 8010418:	2301      	movs	r3, #1
    }
 801041a:	4618      	mov	r0, r3
 801041c:	370c      	adds	r7, #12
 801041e:	46bd      	mov	sp, r7
 8010420:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010424:	4770      	bx	lr

08010426 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 8010426:	b580      	push	{r7, lr}
 8010428:	b082      	sub	sp, #8
 801042a:	af00      	add	r7, sp, #0
 801042c:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 801042e:	687a      	ldr	r2, [r7, #4]
 8010430:	687b      	ldr	r3, [r7, #4]
 8010432:	681b      	ldr	r3, [r3, #0]
 8010434:	3328      	adds	r3, #40	@ 0x28
 8010436:	681b      	ldr	r3, [r3, #0]
 8010438:	4610      	mov	r0, r2
 801043a:	4798      	blx	r3
    }
 801043c:	bf00      	nop
 801043e:	3708      	adds	r7, #8
 8010440:	46bd      	mov	sp, r7
 8010442:	bd80      	pop	{r7, pc}

08010444 <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 8010444:	b580      	push	{r7, lr}
 8010446:	b082      	sub	sp, #8
 8010448:	af00      	add	r7, sp, #0
 801044a:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 801044c:	687b      	ldr	r3, [r7, #4]
 801044e:	685a      	ldr	r2, [r3, #4]
 8010450:	687b      	ldr	r3, [r7, #4]
 8010452:	685b      	ldr	r3, [r3, #4]
 8010454:	681b      	ldr	r3, [r3, #0]
 8010456:	3314      	adds	r3, #20
 8010458:	681b      	ldr	r3, [r3, #0]
 801045a:	4610      	mov	r0, r2
 801045c:	4798      	blx	r3
    }
 801045e:	bf00      	nop
 8010460:	3708      	adds	r7, #8
 8010462:	46bd      	mov	sp, r7
 8010464:	bd80      	pop	{r7, pc}

08010466 <DMA2D_XferCpltCallback>:

extern "C" DMA2D_HandleTypeDef hdma2d;

extern "C" {
    static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
    {
 8010466:	b580      	push	{r7, lr}
 8010468:	b082      	sub	sp, #8
 801046a:	af00      	add	r7, sp, #0
 801046c:	6078      	str	r0, [r7, #4]
        (void)handle; // Unused argument
        HAL::getInstance()->signalDMAInterrupt();
 801046e:	f7fb f961 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 8010472:	4603      	mov	r3, r0
 8010474:	4618      	mov	r0, r3
 8010476:	f7ff ffe5 	bl	8010444 <_ZN8touchgfx3HAL18signalDMAInterruptEv>
    }
 801047a:	bf00      	nop
 801047c:	3708      	adds	r7, #8
 801047e:	46bd      	mov	sp, r7
 8010480:	bd80      	pop	{r7, pc}

08010482 <DMA2D_XferErrorCallback>:

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
 8010482:	b480      	push	{r7}
 8010484:	b083      	sub	sp, #12
 8010486:	af00      	add	r7, sp, #0
 8010488:	6078      	str	r0, [r7, #4]
        (void)handle; // Unused argument
        while (1)
 801048a:	bf00      	nop
 801048c:	e7fd      	b.n	801048a <DMA2D_XferErrorCallback+0x8>

0801048e <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 801048e:	b580      	push	{r7, lr}
 8010490:	b082      	sub	sp, #8
 8010492:	af00      	add	r7, sp, #0
 8010494:	6078      	str	r0, [r7, #4]
 8010496:	687b      	ldr	r3, [r7, #4]
 8010498:	330c      	adds	r3, #12
 801049a:	4618      	mov	r0, r3
 801049c:	f7fc f8a2 	bl	800c5e4 <_ZN8touchgfx9colortypeC1Ev>
 80104a0:	687b      	ldr	r3, [r7, #4]
 80104a2:	4618      	mov	r0, r3
 80104a4:	3708      	adds	r7, #8
 80104a6:	46bd      	mov	sp, r7
 80104a8:	bd80      	pop	{r7, pc}
	...

080104ac <_ZN8STM32DMAC1Ev>:

        }
    }
}

STM32DMA::STM32DMA()
 80104ac:	b5b0      	push	{r4, r5, r7, lr}
 80104ae:	b082      	sub	sp, #8
 80104b0:	af00      	add	r7, sp, #0
 80104b2:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80104b4:	687a      	ldr	r2, [r7, #4]
 80104b6:	687b      	ldr	r3, [r7, #4]
 80104b8:	330c      	adds	r3, #12
 80104ba:	4619      	mov	r1, r3
 80104bc:	4610      	mov	r0, r2
 80104be:	f7ff ff8d 	bl	80103dc <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 80104c2:	4a0e      	ldr	r2, [pc, #56]	@ (80104fc <_ZN8STM32DMAC1Ev+0x50>)
 80104c4:	687b      	ldr	r3, [r7, #4]
 80104c6:	601a      	str	r2, [r3, #0]
 80104c8:	687b      	ldr	r3, [r7, #4]
 80104ca:	f103 000c 	add.w	r0, r3, #12
 80104ce:	687b      	ldr	r3, [r7, #4]
 80104d0:	3320      	adds	r3, #32
 80104d2:	2260      	movs	r2, #96	@ 0x60
 80104d4:	4619      	mov	r1, r3
 80104d6:	f002 ff39 	bl	801334c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80104da:	687b      	ldr	r3, [r7, #4]
 80104dc:	3320      	adds	r3, #32
 80104de:	245f      	movs	r4, #95	@ 0x5f
 80104e0:	461d      	mov	r5, r3
 80104e2:	e004      	b.n	80104ee <_ZN8STM32DMAC1Ev+0x42>
 80104e4:	4628      	mov	r0, r5
 80104e6:	f7ff ffd2 	bl	801048e <_ZN8touchgfx6BlitOpC1Ev>
 80104ea:	3c01      	subs	r4, #1
 80104ec:	3524      	adds	r5, #36	@ 0x24
 80104ee:	2c00      	cmp	r4, #0
 80104f0:	daf8      	bge.n	80104e4 <_ZN8STM32DMAC1Ev+0x38>
{
}
 80104f2:	687b      	ldr	r3, [r7, #4]
 80104f4:	4618      	mov	r0, r3
 80104f6:	3708      	adds	r7, #8
 80104f8:	46bd      	mov	sp, r7
 80104fa:	bdb0      	pop	{r4, r5, r7, pc}
 80104fc:	0802a280 	.word	0x0802a280

08010500 <_ZN8STM32DMAD1Ev>:

STM32DMA::~STM32DMA()
 8010500:	b580      	push	{r7, lr}
 8010502:	b082      	sub	sp, #8
 8010504:	af00      	add	r7, sp, #0
 8010506:	6078      	str	r0, [r7, #4]
 8010508:	4a09      	ldr	r2, [pc, #36]	@ (8010530 <_ZN8STM32DMAD1Ev+0x30>)
 801050a:	687b      	ldr	r3, [r7, #4]
 801050c:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 801050e:	205a      	movs	r0, #90	@ 0x5a
 8010510:	f7ff fec6 	bl	80102a0 <__NVIC_DisableIRQ>
}
 8010514:	687b      	ldr	r3, [r7, #4]
 8010516:	330c      	adds	r3, #12
 8010518:	4618      	mov	r0, r3
 801051a:	f000 fbcf 	bl	8010cbc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 801051e:	687b      	ldr	r3, [r7, #4]
 8010520:	4618      	mov	r0, r3
 8010522:	f7ff ff3b 	bl	801039c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8010526:	687b      	ldr	r3, [r7, #4]
 8010528:	4618      	mov	r0, r3
 801052a:	3708      	adds	r7, #8
 801052c:	46bd      	mov	sp, r7
 801052e:	bd80      	pop	{r7, pc}
 8010530:	0802a280 	.word	0x0802a280

08010534 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8010534:	b580      	push	{r7, lr}
 8010536:	b082      	sub	sp, #8
 8010538:	af00      	add	r7, sp, #0
 801053a:	6078      	str	r0, [r7, #4]
}
 801053c:	6878      	ldr	r0, [r7, #4]
 801053e:	f7ff ffdf 	bl	8010500 <_ZN8STM32DMAD1Ev>
 8010542:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 8010546:	6878      	ldr	r0, [r7, #4]
 8010548:	f017 fa95 	bl	8027a76 <_ZdlPvj>
 801054c:	687b      	ldr	r3, [r7, #4]
 801054e:	4618      	mov	r0, r3
 8010550:	3708      	adds	r7, #8
 8010552:	46bd      	mov	sp, r7
 8010554:	bd80      	pop	{r7, pc}
	...

08010558 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 8010558:	b580      	push	{r7, lr}
 801055a:	b084      	sub	sp, #16
 801055c:	af00      	add	r7, sp, #0
 801055e:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8010560:	4b12      	ldr	r3, [pc, #72]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 8010562:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010564:	4a11      	ldr	r2, [pc, #68]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 8010566:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 801056a:	6313      	str	r3, [r2, #48]	@ 0x30
 801056c:	4b0f      	ldr	r3, [pc, #60]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 801056e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8010570:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8010574:	60fb      	str	r3, [r7, #12]
 8010576:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8010578:	4b0c      	ldr	r3, [pc, #48]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 801057a:	691b      	ldr	r3, [r3, #16]
 801057c:	4a0b      	ldr	r2, [pc, #44]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 801057e:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8010582:	6113      	str	r3, [r2, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8010584:	4b09      	ldr	r3, [pc, #36]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 8010586:	691b      	ldr	r3, [r3, #16]
 8010588:	4a08      	ldr	r2, [pc, #32]	@ (80105ac <_ZN8STM32DMA10initializeEv+0x54>)
 801058a:	f423 0300 	bic.w	r3, r3, #8388608	@ 0x800000
 801058e:	6113      	str	r3, [r2, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8010590:	4b07      	ldr	r3, [pc, #28]	@ (80105b0 <_ZN8STM32DMA10initializeEv+0x58>)
 8010592:	4a08      	ldr	r2, [pc, #32]	@ (80105b4 <_ZN8STM32DMA10initializeEv+0x5c>)
 8010594:	611a      	str	r2, [r3, #16]

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8010596:	4b06      	ldr	r3, [pc, #24]	@ (80105b0 <_ZN8STM32DMA10initializeEv+0x58>)
 8010598:	4a07      	ldr	r2, [pc, #28]	@ (80105b8 <_ZN8STM32DMA10initializeEv+0x60>)
 801059a:	615a      	str	r2, [r3, #20]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
 801059c:	205a      	movs	r0, #90	@ 0x5a
 801059e:	f7ff fe61 	bl	8010264 <__NVIC_EnableIRQ>
}
 80105a2:	bf00      	nop
 80105a4:	3710      	adds	r7, #16
 80105a6:	46bd      	mov	sp, r7
 80105a8:	bd80      	pop	{r7, pc}
 80105aa:	bf00      	nop
 80105ac:	40023800 	.word	0x40023800
 80105b0:	200004c0 	.word	0x200004c0
 80105b4:	08010467 	.word	0x08010467
 80105b8:	08010483 	.word	0x08010483

080105bc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 80105bc:	b580      	push	{r7, lr}
 80105be:	b084      	sub	sp, #16
 80105c0:	af00      	add	r7, sp, #0
 80105c2:	6078      	str	r0, [r7, #4]
 80105c4:	460b      	mov	r3, r1
 80105c6:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80105c8:	2300      	movs	r3, #0
 80105ca:	60fb      	str	r3, [r7, #12]

    switch (format)
 80105cc:	78fb      	ldrb	r3, [r7, #3]
 80105ce:	2b0b      	cmp	r3, #11
 80105d0:	d826      	bhi.n	8010620 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 80105d2:	a201      	add	r2, pc, #4	@ (adr r2, 80105d8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 80105d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80105d8:	08010615 	.word	0x08010615
 80105dc:	0801060f 	.word	0x0801060f
 80105e0:	08010609 	.word	0x08010609
 80105e4:	08010621 	.word	0x08010621
 80105e8:	08010621 	.word	0x08010621
 80105ec:	08010621 	.word	0x08010621
 80105f0:	08010621 	.word	0x08010621
 80105f4:	0801061b 	.word	0x0801061b
 80105f8:	0801061b 	.word	0x0801061b
 80105fc:	0801061b 	.word	0x0801061b
 8010600:	0801061b 	.word	0x0801061b
 8010604:	0801061b 	.word	0x0801061b
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8010608:	2300      	movs	r3, #0
 801060a:	60fb      	str	r3, [r7, #12]
        break;
 801060c:	e00e      	b.n	801062c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 801060e:	2301      	movs	r3, #1
 8010610:	60fb      	str	r3, [r7, #12]
        break;
 8010612:	e00b      	b.n	801062c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8010614:	2302      	movs	r3, #2
 8010616:	60fb      	str	r3, [r7, #12]
        break;
 8010618:	e008      	b.n	801062c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 801061a:	2305      	movs	r3, #5
 801061c:	60fb      	str	r3, [r7, #12]
        break;
 801061e:	e005      	b.n	801062c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 8010620:	4b05      	ldr	r3, [pc, #20]	@ (8010638 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 8010622:	4a06      	ldr	r2, [pc, #24]	@ (801063c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 8010624:	216f      	movs	r1, #111	@ 0x6f
 8010626:	4806      	ldr	r0, [pc, #24]	@ (8010640 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 8010628:	f017 fa54 	bl	8027ad4 <__assert_func>
        break;
    }

    return dma2dColorMode;
 801062c:	68fb      	ldr	r3, [r7, #12]
}
 801062e:	4618      	mov	r0, r3
 8010630:	3710      	adds	r7, #16
 8010632:	46bd      	mov	sp, r7
 8010634:	bd80      	pop	{r7, pc}
 8010636:	bf00      	nop
 8010638:	080294c8 	.word	0x080294c8
 801063c:	080294e4 	.word	0x080294e4
 8010640:	08029530 	.word	0x08029530

08010644 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 8010644:	b580      	push	{r7, lr}
 8010646:	b084      	sub	sp, #16
 8010648:	af00      	add	r7, sp, #0
 801064a:	6078      	str	r0, [r7, #4]
 801064c:	460b      	mov	r3, r1
 801064e:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8010650:	2300      	movs	r3, #0
 8010652:	60fb      	str	r3, [r7, #12]

    switch (format)
 8010654:	78fb      	ldrb	r3, [r7, #3]
 8010656:	2b0a      	cmp	r3, #10
 8010658:	d821      	bhi.n	801069e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 801065a:	a201      	add	r2, pc, #4	@ (adr r2, 8010660 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 801065c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8010660:	08010699 	.word	0x08010699
 8010664:	08010693 	.word	0x08010693
 8010668:	0801068d 	.word	0x0801068d
 801066c:	0801069f 	.word	0x0801069f
 8010670:	0801069f 	.word	0x0801069f
 8010674:	0801069f 	.word	0x0801069f
 8010678:	0801069f 	.word	0x0801069f
 801067c:	08010693 	.word	0x08010693
 8010680:	08010693 	.word	0x08010693
 8010684:	08010693 	.word	0x08010693
 8010688:	08010693 	.word	0x08010693
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 801068c:	2300      	movs	r3, #0
 801068e:	60fb      	str	r3, [r7, #12]
        break;
 8010690:	e00b      	b.n	80106aa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 8010692:	2301      	movs	r3, #1
 8010694:	60fb      	str	r3, [r7, #12]
        break;
 8010696:	e008      	b.n	80106aa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8010698:	2302      	movs	r3, #2
 801069a:	60fb      	str	r3, [r7, #12]
        break;
 801069c:	e005      	b.n	80106aa <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 801069e:	4b05      	ldr	r3, [pc, #20]	@ (80106b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 80106a0:	4a05      	ldr	r2, [pc, #20]	@ (80106b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 80106a2:	2190      	movs	r1, #144	@ 0x90
 80106a4:	4805      	ldr	r0, [pc, #20]	@ (80106bc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 80106a6:	f017 fa15 	bl	8027ad4 <__assert_func>
        break;
    }

    return dma2dColorMode;
 80106aa:	68fb      	ldr	r3, [r7, #12]
}
 80106ac:	4618      	mov	r0, r3
 80106ae:	3710      	adds	r7, #16
 80106b0:	46bd      	mov	sp, r7
 80106b2:	bd80      	pop	{r7, pc}
 80106b4:	080294c8 	.word	0x080294c8
 80106b8:	0802955c 	.word	0x0802955c
 80106bc:	08029530 	.word	0x08029530

080106c0 <_ZN8STM32DMA11getBlitCapsEv>:

BlitOperations STM32DMA::getBlitCaps()
{
 80106c0:	b480      	push	{r7}
 80106c2:	b083      	sub	sp, #12
 80106c4:	af00      	add	r7, sp, #0
 80106c6:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY_L8
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 80106c8:	f240 33ef 	movw	r3, #1007	@ 0x3ef
}
 80106cc:	4618      	mov	r0, r3
 80106ce:	370c      	adds	r7, #12
 80106d0:	46bd      	mov	sp, r7
 80106d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80106d6:	4770      	bx	lr

080106d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 80106d8:	b590      	push	{r4, r7, lr}
 80106da:	b089      	sub	sp, #36	@ 0x24
 80106dc:	af00      	add	r7, sp, #0
 80106de:	6078      	str	r0, [r7, #4]
 80106e0:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80106e2:	683b      	ldr	r3, [r7, #0]
 80106e4:	7f5b      	ldrb	r3, [r3, #29]
 80106e6:	4619      	mov	r1, r3
 80106e8:	6878      	ldr	r0, [r7, #4]
 80106ea:	f7ff ff67 	bl	80105bc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 80106ee:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80106f0:	683b      	ldr	r3, [r7, #0]
 80106f2:	7f9b      	ldrb	r3, [r3, #30]
 80106f4:	4619      	mov	r1, r3
 80106f6:	6878      	ldr	r0, [r7, #4]
 80106f8:	f7ff ff60 	bl	80105bc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 80106fc:	6178      	str	r0, [r7, #20]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80106fe:	683b      	ldr	r3, [r7, #0]
 8010700:	7f9b      	ldrb	r3, [r3, #30]
 8010702:	4619      	mov	r1, r3
 8010704:	6878      	ldr	r0, [r7, #4]
 8010706:	f7ff ff9d 	bl	8010644 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 801070a:	6138      	str	r0, [r7, #16]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 801070c:	683b      	ldr	r3, [r7, #0]
 801070e:	8b5b      	ldrh	r3, [r3, #26]
 8010710:	461a      	mov	r2, r3
 8010712:	683b      	ldr	r3, [r7, #0]
 8010714:	8a9b      	ldrh	r3, [r3, #20]
 8010716:	1ad2      	subs	r2, r2, r3
 8010718:	4b93      	ldr	r3, [pc, #588]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801071a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 801071c:	683b      	ldr	r3, [r7, #0]
 801071e:	8b5b      	ldrh	r3, [r3, #26]
 8010720:	461a      	mov	r2, r3
 8010722:	683b      	ldr	r3, [r7, #0]
 8010724:	8a9b      	ldrh	r3, [r3, #20]
 8010726:	1ad2      	subs	r2, r2, r3
 8010728:	4b8f      	ldr	r3, [pc, #572]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801072a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 801072c:	683b      	ldr	r3, [r7, #0]
 801072e:	8b1b      	ldrh	r3, [r3, #24]
 8010730:	461a      	mov	r2, r3
 8010732:	683b      	ldr	r3, [r7, #0]
 8010734:	8a9b      	ldrh	r3, [r3, #20]
 8010736:	1ad2      	subs	r2, r2, r3
 8010738:	4b8b      	ldr	r3, [pc, #556]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801073a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 801073c:	4a8a      	ldr	r2, [pc, #552]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801073e:	693b      	ldr	r3, [r7, #16]
 8010740:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8010742:	683b      	ldr	r3, [r7, #0]
 8010744:	8adb      	ldrh	r3, [r3, #22]
 8010746:	461a      	mov	r2, r3
 8010748:	683b      	ldr	r3, [r7, #0]
 801074a:	8a9b      	ldrh	r3, [r3, #20]
 801074c:	041b      	lsls	r3, r3, #16
 801074e:	431a      	orrs	r2, r3
 8010750:	4b85      	ldr	r3, [pc, #532]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010752:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010754:	683b      	ldr	r3, [r7, #0]
 8010756:	691a      	ldr	r2, [r3, #16]
 8010758:	4b83      	ldr	r3, [pc, #524]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801075a:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 801075c:	683b      	ldr	r3, [r7, #0]
 801075e:	685a      	ldr	r2, [r3, #4]
 8010760:	4b81      	ldr	r3, [pc, #516]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010762:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8010764:	683b      	ldr	r3, [r7, #0]
 8010766:	681b      	ldr	r3, [r3, #0]
 8010768:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 801076c:	d035      	beq.n	80107da <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 801076e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8010772:	f200 80dd 	bhi.w	8010930 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 8010776:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 801077a:	d014      	beq.n	80107a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xce>
 801077c:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8010780:	f200 80d6 	bhi.w	8010930 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 8010784:	2b80      	cmp	r3, #128	@ 0x80
 8010786:	d056      	beq.n	8010836 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15e>
 8010788:	2b80      	cmp	r3, #128	@ 0x80
 801078a:	f200 80d1 	bhi.w	8010930 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 801078e:	2b40      	cmp	r3, #64	@ 0x40
 8010790:	f000 80ba 	beq.w	8010908 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 8010794:	2b40      	cmp	r3, #64	@ 0x40
 8010796:	f200 80cb 	bhi.w	8010930 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 801079a:	2b04      	cmp	r3, #4
 801079c:	d037      	beq.n	801080e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 801079e:	2b20      	cmp	r3, #32
 80107a0:	f000 80b2 	beq.w	8010908 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 80107a4:	e0c4      	b.n	8010930 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80107a6:	683b      	ldr	r3, [r7, #0]
 80107a8:	7f1b      	ldrb	r3, [r3, #28]
 80107aa:	061a      	lsls	r2, r3, #24
 80107ac:	496e      	ldr	r1, [pc, #440]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107ae:	4b6f      	ldr	r3, [pc, #444]	@ (801096c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 80107b0:	4313      	orrs	r3, r2
 80107b2:	61cb      	str	r3, [r1, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80107b4:	683b      	ldr	r3, [r7, #0]
 80107b6:	330c      	adds	r3, #12
 80107b8:	4c6b      	ldr	r4, [pc, #428]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107ba:	4618      	mov	r0, r3
 80107bc:	f7fb ff2f 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 80107c0:	4603      	mov	r3, r0
 80107c2:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80107c4:	4a68      	ldr	r2, [pc, #416]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107c6:	697b      	ldr	r3, [r7, #20]
 80107c8:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80107ca:	683b      	ldr	r3, [r7, #0]
 80107cc:	691a      	ldr	r2, [r3, #16]
 80107ce:	4b66      	ldr	r3, [pc, #408]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107d0:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80107d2:	4b65      	ldr	r3, [pc, #404]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107d4:	4a66      	ldr	r2, [pc, #408]	@ (8010970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 80107d6:	601a      	str	r2, [r3, #0]
        break;
 80107d8:	e0c2      	b.n	8010960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80107da:	683b      	ldr	r3, [r7, #0]
 80107dc:	7f1b      	ldrb	r3, [r3, #28]
 80107de:	061a      	lsls	r2, r3, #24
 80107e0:	4961      	ldr	r1, [pc, #388]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107e2:	4b64      	ldr	r3, [pc, #400]	@ (8010974 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 80107e4:	4313      	orrs	r3, r2
 80107e6:	61cb      	str	r3, [r1, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80107e8:	683b      	ldr	r3, [r7, #0]
 80107ea:	330c      	adds	r3, #12
 80107ec:	4c5e      	ldr	r4, [pc, #376]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107ee:	4618      	mov	r0, r3
 80107f0:	f7fb ff15 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 80107f4:	4603      	mov	r3, r0
 80107f6:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80107f8:	4a5b      	ldr	r2, [pc, #364]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80107fa:	697b      	ldr	r3, [r7, #20]
 80107fc:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80107fe:	683b      	ldr	r3, [r7, #0]
 8010800:	691a      	ldr	r2, [r3, #16]
 8010802:	4b59      	ldr	r3, [pc, #356]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010804:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010806:	4b58      	ldr	r3, [pc, #352]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010808:	4a59      	ldr	r2, [pc, #356]	@ (8010970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 801080a:	601a      	str	r2, [r3, #0]
        break;
 801080c:	e0a8      	b.n	8010960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 801080e:	683b      	ldr	r3, [r7, #0]
 8010810:	7f1b      	ldrb	r3, [r3, #28]
 8010812:	061a      	lsls	r2, r3, #24
 8010814:	69bb      	ldr	r3, [r7, #24]
 8010816:	4313      	orrs	r3, r2
 8010818:	4a53      	ldr	r2, [pc, #332]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801081a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 801081e:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010820:	4a51      	ldr	r2, [pc, #324]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010822:	697b      	ldr	r3, [r7, #20]
 8010824:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010826:	683b      	ldr	r3, [r7, #0]
 8010828:	691a      	ldr	r2, [r3, #16]
 801082a:	4b4f      	ldr	r3, [pc, #316]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801082c:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 801082e:	4b4e      	ldr	r3, [pc, #312]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010830:	4a4f      	ldr	r2, [pc, #316]	@ (8010970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 8010832:	601a      	str	r2, [r3, #0]
        break;
 8010834:	e094      	b.n	8010960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_L8:
        {
            bool blend = true;
 8010836:	2301      	movs	r3, #1
 8010838:	77fb      	strb	r3, [r7, #31]
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 801083a:	683b      	ldr	r3, [r7, #0]
 801083c:	689b      	ldr	r3, [r3, #8]
 801083e:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8010840:	68fb      	ldr	r3, [r7, #12]
 8010842:	1d1a      	adds	r2, r3, #4
 8010844:	4b48      	ldr	r3, [pc, #288]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010846:	62da      	str	r2, [r3, #44]	@ 0x2c

            /* Set DMA2D color mode and alpha mode */
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010848:	683b      	ldr	r3, [r7, #0]
 801084a:	7f1b      	ldrb	r3, [r3, #28]
 801084c:	061a      	lsls	r2, r3, #24
 801084e:	69bb      	ldr	r3, [r7, #24]
 8010850:	4313      	orrs	r3, r2
 8010852:	4a45      	ldr	r2, [pc, #276]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010854:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8010858:	61d3      	str	r3, [r2, #28]

            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 801085a:	4a43      	ldr	r2, [pc, #268]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801085c:	697b      	ldr	r3, [r7, #20]
 801085e:	6253      	str	r3, [r2, #36]	@ 0x24

            /* Configure DMA2D Stream source2 address */
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010860:	683b      	ldr	r3, [r7, #0]
 8010862:	691a      	ldr	r2, [r3, #16]
 8010864:	4b40      	ldr	r3, [pc, #256]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010866:	615a      	str	r2, [r3, #20]

            /* Configure CLUT */
            switch ((Bitmap::ClutFormat)palette->format)
 8010868:	68fb      	ldr	r3, [r7, #12]
 801086a:	881b      	ldrh	r3, [r3, #0]
 801086c:	b2db      	uxtb	r3, r3
 801086e:	2b00      	cmp	r3, #0
 8010870:	d002      	beq.n	8010878 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>
 8010872:	2b01      	cmp	r3, #1
 8010874:	d00d      	beq.n	8010892 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ba>
 8010876:	e020      	b.n	80108ba <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e2>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8010878:	4b3b      	ldr	r3, [pc, #236]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801087a:	69da      	ldr	r2, [r3, #28]
 801087c:	4b3e      	ldr	r3, [pc, #248]	@ (8010978 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 801087e:	4013      	ands	r3, r2
 8010880:	68fa      	ldr	r2, [r7, #12]
 8010882:	8852      	ldrh	r2, [r2, #2]
 8010884:	3a01      	subs	r2, #1
 8010886:	0212      	lsls	r2, r2, #8
 8010888:	4611      	mov	r1, r2
 801088a:	4a37      	ldr	r2, [pc, #220]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801088c:	430b      	orrs	r3, r1
 801088e:	61d3      	str	r3, [r2, #28]
                break;
 8010890:	e01a      	b.n	80108c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                if (blitOp.alpha == 255)
 8010892:	683b      	ldr	r3, [r7, #0]
 8010894:	7f1b      	ldrb	r3, [r3, #28]
 8010896:	2bff      	cmp	r3, #255	@ 0xff
 8010898:	d101      	bne.n	801089e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c6>
                {
                    blend = false;
 801089a:	2300      	movs	r3, #0
 801089c:	77fb      	strb	r3, [r7, #31]
                }
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 801089e:	4b32      	ldr	r3, [pc, #200]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108a0:	69da      	ldr	r2, [r3, #28]
 80108a2:	4b35      	ldr	r3, [pc, #212]	@ (8010978 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 80108a4:	4013      	ands	r3, r2
 80108a6:	68fa      	ldr	r2, [r7, #12]
 80108a8:	8852      	ldrh	r2, [r2, #2]
 80108aa:	3a01      	subs	r2, #1
 80108ac:	0212      	lsls	r2, r2, #8
 80108ae:	4313      	orrs	r3, r2
 80108b0:	4a2d      	ldr	r2, [pc, #180]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108b2:	f043 0310 	orr.w	r3, r3, #16
 80108b6:	61d3      	str	r3, [r2, #28]
                break;
 80108b8:	e006      	b.n	80108c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 80108ba:	4b30      	ldr	r3, [pc, #192]	@ (801097c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 80108bc:	4a30      	ldr	r2, [pc, #192]	@ (8010980 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 80108be:	f44f 718d 	mov.w	r1, #282	@ 0x11a
 80108c2:	4830      	ldr	r0, [pc, #192]	@ (8010984 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 80108c4:	f017 f906 	bl	8027ad4 <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80108c8:	4b27      	ldr	r3, [pc, #156]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108ca:	69db      	ldr	r3, [r3, #28]
 80108cc:	4a26      	ldr	r2, [pc, #152]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108ce:	f043 0320 	orr.w	r3, r3, #32
 80108d2:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80108d4:	bf00      	nop
 80108d6:	4b24      	ldr	r3, [pc, #144]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108d8:	69db      	ldr	r3, [r3, #28]
 80108da:	f003 0320 	and.w	r3, r3, #32
 80108de:	2b00      	cmp	r3, #0
 80108e0:	bf14      	ite	ne
 80108e2:	2301      	movne	r3, #1
 80108e4:	2300      	moveq	r3, #0
 80108e6:	b2db      	uxtb	r3, r3
 80108e8:	2b00      	cmp	r3, #0
 80108ea:	d1f4      	bne.n	80108d6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1fe>
            {
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80108ec:	4b1e      	ldr	r3, [pc, #120]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108ee:	2210      	movs	r2, #16
 80108f0:	609a      	str	r2, [r3, #8]

            /* Set DMA2D mode */
            if (blend)
 80108f2:	7ffb      	ldrb	r3, [r7, #31]
 80108f4:	2b00      	cmp	r3, #0
 80108f6:	d003      	beq.n	8010900 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x228>
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80108f8:	4b1b      	ldr	r3, [pc, #108]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80108fa:	4a1d      	ldr	r2, [pc, #116]	@ (8010970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 80108fc:	601a      	str	r2, [r3, #0]
            else
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
            }
        }
        break;
 80108fe:	e02f      	b.n	8010960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010900:	4b19      	ldr	r3, [pc, #100]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010902:	4a21      	ldr	r2, [pc, #132]	@ (8010988 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 8010904:	601a      	str	r2, [r3, #0]
        break;
 8010906:	e02b      	b.n	8010960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010908:	683b      	ldr	r3, [r7, #0]
 801090a:	7f1b      	ldrb	r3, [r3, #28]
 801090c:	061a      	lsls	r2, r3, #24
 801090e:	69bb      	ldr	r3, [r7, #24]
 8010910:	4313      	orrs	r3, r2
 8010912:	4a15      	ldr	r2, [pc, #84]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010914:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8010918:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 801091a:	4a13      	ldr	r2, [pc, #76]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801091c:	697b      	ldr	r3, [r7, #20]
 801091e:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010920:	683b      	ldr	r3, [r7, #0]
 8010922:	691a      	ldr	r2, [r3, #16]
 8010924:	4b10      	ldr	r3, [pc, #64]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010926:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010928:	4b0f      	ldr	r3, [pc, #60]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801092a:	4a11      	ldr	r2, [pc, #68]	@ (8010970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 801092c:	601a      	str	r2, [r3, #0]
        break;
 801092e:	e017      	b.n	8010960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010930:	683b      	ldr	r3, [r7, #0]
 8010932:	7f1b      	ldrb	r3, [r3, #28]
 8010934:	061a      	lsls	r2, r3, #24
 8010936:	69bb      	ldr	r3, [r7, #24]
 8010938:	4313      	orrs	r3, r2
 801093a:	4a0b      	ldr	r2, [pc, #44]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801093c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8010940:	61d3      	str	r3, [r2, #28]

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8010942:	683b      	ldr	r3, [r7, #0]
 8010944:	7f5a      	ldrb	r2, [r3, #29]
 8010946:	683b      	ldr	r3, [r7, #0]
 8010948:	7f9b      	ldrb	r3, [r3, #30]
 801094a:	429a      	cmp	r2, r3
 801094c:	d003      	beq.n	8010956 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27e>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 801094e:	4b06      	ldr	r3, [pc, #24]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010950:	4a0d      	ldr	r2, [pc, #52]	@ (8010988 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 8010952:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
        }
        break;
 8010954:	e003      	b.n	801095e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x286>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010956:	4b04      	ldr	r3, [pc, #16]	@ (8010968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010958:	f242 3201 	movw	r2, #8961	@ 0x2301
 801095c:	601a      	str	r2, [r3, #0]
        break;
 801095e:	bf00      	nop
    }
}
 8010960:	bf00      	nop
 8010962:	3724      	adds	r7, #36	@ 0x24
 8010964:	46bd      	mov	sp, r7
 8010966:	bd90      	pop	{r4, r7, pc}
 8010968:	4002b000 	.word	0x4002b000
 801096c:	0002000a 	.word	0x0002000a
 8010970:	00022301 	.word	0x00022301
 8010974:	00020009 	.word	0x00020009
 8010978:	ffff00ef 	.word	0xffff00ef
 801097c:	080295a8 	.word	0x080295a8
 8010980:	080295c4 	.word	0x080295c4
 8010984:	08029530 	.word	0x08029530
 8010988:	00012301 	.word	0x00012301

0801098c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 801098c:	b590      	push	{r4, r7, lr}
 801098e:	b085      	sub	sp, #20
 8010990:	af00      	add	r7, sp, #0
 8010992:	6078      	str	r0, [r7, #4]
 8010994:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8010996:	683b      	ldr	r3, [r7, #0]
 8010998:	7f9b      	ldrb	r3, [r3, #30]
 801099a:	4619      	mov	r1, r3
 801099c:	6878      	ldr	r0, [r7, #4]
 801099e:	f7ff fe51 	bl	8010644 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 80109a2:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80109a4:	4a3a      	ldr	r2, [pc, #232]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109a6:	68fb      	ldr	r3, [r7, #12]
 80109a8:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80109aa:	683b      	ldr	r3, [r7, #0]
 80109ac:	8adb      	ldrh	r3, [r3, #22]
 80109ae:	461a      	mov	r2, r3
 80109b0:	683b      	ldr	r3, [r7, #0]
 80109b2:	8a9b      	ldrh	r3, [r3, #20]
 80109b4:	041b      	lsls	r3, r3, #16
 80109b6:	431a      	orrs	r2, r3
 80109b8:	4b35      	ldr	r3, [pc, #212]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109ba:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80109bc:	683b      	ldr	r3, [r7, #0]
 80109be:	691a      	ldr	r2, [r3, #16]
 80109c0:	4b33      	ldr	r3, [pc, #204]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109c2:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80109c4:	683b      	ldr	r3, [r7, #0]
 80109c6:	8b5b      	ldrh	r3, [r3, #26]
 80109c8:	461a      	mov	r2, r3
 80109ca:	683b      	ldr	r3, [r7, #0]
 80109cc:	8a9b      	ldrh	r3, [r3, #20]
 80109ce:	1ad2      	subs	r2, r2, r3
 80109d0:	4b2f      	ldr	r3, [pc, #188]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109d2:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80109d4:	683b      	ldr	r3, [r7, #0]
 80109d6:	681b      	ldr	r3, [r3, #0]
 80109d8:	2b08      	cmp	r3, #8
 80109da:	d12d      	bne.n	8010a38 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80109dc:	683b      	ldr	r3, [r7, #0]
 80109de:	8b5b      	ldrh	r3, [r3, #26]
 80109e0:	461a      	mov	r2, r3
 80109e2:	683b      	ldr	r3, [r7, #0]
 80109e4:	8a9b      	ldrh	r3, [r3, #20]
 80109e6:	1ad2      	subs	r2, r2, r3
 80109e8:	4b29      	ldr	r3, [pc, #164]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109ea:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80109ec:	683b      	ldr	r3, [r7, #0]
 80109ee:	8b5b      	ldrh	r3, [r3, #26]
 80109f0:	461a      	mov	r2, r3
 80109f2:	683b      	ldr	r3, [r7, #0]
 80109f4:	8a9b      	ldrh	r3, [r3, #20]
 80109f6:	1ad2      	subs	r2, r2, r3
 80109f8:	4b25      	ldr	r3, [pc, #148]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109fa:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80109fc:	4a24      	ldr	r2, [pc, #144]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80109fe:	68fb      	ldr	r3, [r7, #12]
 8010a00:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8010a02:	683b      	ldr	r3, [r7, #0]
 8010a04:	7f1b      	ldrb	r3, [r3, #28]
 8010a06:	061a      	lsls	r2, r3, #24
 8010a08:	4921      	ldr	r1, [pc, #132]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a0a:	4b22      	ldr	r3, [pc, #136]	@ (8010a94 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 8010a0c:	4313      	orrs	r3, r2
 8010a0e:	61cb      	str	r3, [r1, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8010a10:	683b      	ldr	r3, [r7, #0]
 8010a12:	330c      	adds	r3, #12
 8010a14:	4c1e      	ldr	r4, [pc, #120]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a16:	4618      	mov	r0, r3
 8010a18:	f7fb fe01 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 8010a1c:	4603      	mov	r3, r0
 8010a1e:	6223      	str	r3, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010a20:	683b      	ldr	r3, [r7, #0]
 8010a22:	691a      	ldr	r2, [r3, #16]
 8010a24:	4b1a      	ldr	r3, [pc, #104]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a26:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010a28:	683b      	ldr	r3, [r7, #0]
 8010a2a:	691a      	ldr	r2, [r3, #16]
 8010a2c:	4b18      	ldr	r3, [pc, #96]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a2e:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8010a30:	4b17      	ldr	r3, [pc, #92]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a32:	4a19      	ldr	r2, [pc, #100]	@ (8010a98 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>)
 8010a34:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
    }
}
 8010a36:	e027      	b.n	8010a88 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfc>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8010a38:	4a15      	ldr	r2, [pc, #84]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a3a:	68fb      	ldr	r3, [r7, #12]
 8010a3c:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8010a3e:	4b14      	ldr	r3, [pc, #80]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a40:	2200      	movs	r2, #0
 8010a42:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8010a44:	683b      	ldr	r3, [r7, #0]
 8010a46:	330c      	adds	r3, #12
 8010a48:	4618      	mov	r0, r3
 8010a4a:	f7fb fde8 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 8010a4e:	4603      	mov	r3, r0
 8010a50:	0a1b      	lsrs	r3, r3, #8
 8010a52:	f403 4478 	and.w	r4, r3, #63488	@ 0xf800
 8010a56:	683b      	ldr	r3, [r7, #0]
 8010a58:	330c      	adds	r3, #12
 8010a5a:	4618      	mov	r0, r3
 8010a5c:	f7fb fddf 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 8010a60:	4603      	mov	r3, r0
 8010a62:	095b      	lsrs	r3, r3, #5
 8010a64:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8010a68:	431c      	orrs	r4, r3
 8010a6a:	683b      	ldr	r3, [r7, #0]
 8010a6c:	330c      	adds	r3, #12
 8010a6e:	4618      	mov	r0, r3
 8010a70:	f7fb fdd5 	bl	800c61e <_ZNK8touchgfx9colortypecvmEv>
 8010a74:	4603      	mov	r3, r0
 8010a76:	08db      	lsrs	r3, r3, #3
 8010a78:	f003 031f 	and.w	r3, r3, #31
 8010a7c:	4a04      	ldr	r2, [pc, #16]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a7e:	4323      	orrs	r3, r4
 8010a80:	6393      	str	r3, [r2, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 8010a82:	4b03      	ldr	r3, [pc, #12]	@ (8010a90 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010a84:	4a05      	ldr	r2, [pc, #20]	@ (8010a9c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>)
 8010a86:	601a      	str	r2, [r3, #0]
}
 8010a88:	bf00      	nop
 8010a8a:	3714      	adds	r7, #20
 8010a8c:	46bd      	mov	sp, r7
 8010a8e:	bd90      	pop	{r4, r7, pc}
 8010a90:	4002b000 	.word	0x4002b000
 8010a94:	00010009 	.word	0x00010009
 8010a98:	00022301 	.word	0x00022301
 8010a9c:	00032301 	.word	0x00032301

08010aa0 <_ZN8touchgfx5paint8tearDownEv>:
 * @fn void tearDown();
 *
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
 8010aa0:	b480      	push	{r7}
 8010aa2:	af00      	add	r7, sp, #0
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8010aa4:	bf00      	nop
 8010aa6:	4b09      	ldr	r3, [pc, #36]	@ (8010acc <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 8010aa8:	681b      	ldr	r3, [r3, #0]
 8010aaa:	f003 0301 	and.w	r3, r3, #1
 8010aae:	2b00      	cmp	r3, #0
 8010ab0:	bf14      	ite	ne
 8010ab2:	2301      	movne	r3, #1
 8010ab4:	2300      	moveq	r3, #0
 8010ab6:	b2db      	uxtb	r3, r3
 8010ab8:	2b00      	cmp	r3, #0
 8010aba:	d1f4      	bne.n	8010aa6 <_ZN8touchgfx5paint8tearDownEv+0x6>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8010abc:	4b03      	ldr	r3, [pc, #12]	@ (8010acc <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 8010abe:	2223      	movs	r2, #35	@ 0x23
 8010ac0:	609a      	str	r2, [r3, #8]
}
 8010ac2:	bf00      	nop
 8010ac4:	46bd      	mov	sp, r7
 8010ac6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010aca:	4770      	bx	lr
 8010acc:	4002b000 	.word	0x4002b000

08010ad0 <_ZN8touchgfx5paint9flushLineEPmi>:
/** Flushes a line of pixels in the data cache if used.
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
 8010ad0:	b580      	push	{r7, lr}
 8010ad2:	b082      	sub	sp, #8
 8010ad4:	af00      	add	r7, sp, #0
 8010ad6:	6078      	str	r0, [r7, #4]
 8010ad8:	6039      	str	r1, [r7, #0]
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8010ada:	4b09      	ldr	r3, [pc, #36]	@ (8010b00 <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
 8010adc:	695b      	ldr	r3, [r3, #20]
 8010ade:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8010ae2:	2b00      	cmp	r3, #0
 8010ae4:	bf14      	ite	ne
 8010ae6:	2301      	movne	r3, #1
 8010ae8:	2300      	moveq	r3, #0
 8010aea:	b2db      	uxtb	r3, r3
 8010aec:	2b00      	cmp	r3, #0
 8010aee:	d003      	beq.n	8010af8 <_ZN8touchgfx5paint9flushLineEPmi+0x28>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
 8010af0:	6839      	ldr	r1, [r7, #0]
 8010af2:	6878      	ldr	r0, [r7, #4]
 8010af4:	f7ff fbf8 	bl	80102e8 <SCB_CleanDCache_by_Addr>
    }
}
 8010af8:	bf00      	nop
 8010afa:	3708      	adds	r7, #8
 8010afc:	46bd      	mov	sp, r7
 8010afe:	bd80      	pop	{r7, pc}
 8010b00:	e000ed00 	.word	0xe000ed00

08010b04 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8010b04:	b480      	push	{r7}
 8010b06:	b085      	sub	sp, #20
 8010b08:	af00      	add	r7, sp, #0
 8010b0a:	60f8      	str	r0, [r7, #12]
 8010b0c:	60b9      	str	r1, [r7, #8]
 8010b0e:	607a      	str	r2, [r7, #4]
 8010b10:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8010b12:	bf00      	nop
 8010b14:	4b20      	ldr	r3, [pc, #128]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b16:	681b      	ldr	r3, [r3, #0]
 8010b18:	f003 0301 	and.w	r3, r3, #1
 8010b1c:	2b00      	cmp	r3, #0
 8010b1e:	bf14      	ite	ne
 8010b20:	2301      	movne	r3, #1
 8010b22:	2300      	moveq	r3, #0
 8010b24:	b2db      	uxtb	r3, r3
 8010b26:	2b00      	cmp	r3, #0
 8010b28:	d1f4      	bne.n	8010b14 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8010b2a:	4b1b      	ldr	r3, [pc, #108]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b2c:	2223      	movs	r2, #35	@ 0x23
 8010b2e:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8010b30:	4b19      	ldr	r3, [pc, #100]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b32:	2202      	movs	r2, #2
 8010b34:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8010b36:	68bb      	ldr	r3, [r7, #8]
 8010b38:	041b      	lsls	r3, r3, #16
 8010b3a:	4a17      	ldr	r2, [pc, #92]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b3c:	f043 0301 	orr.w	r3, r3, #1
 8010b40:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8010b42:	4a15      	ldr	r2, [pc, #84]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b44:	68fb      	ldr	r3, [r7, #12]
 8010b46:	63d3      	str	r3, [r2, #60]	@ 0x3c

    if (alpha < 0xFF)
 8010b48:	78fb      	ldrb	r3, [r7, #3]
 8010b4a:	2bff      	cmp	r3, #255	@ 0xff
 8010b4c:	d015      	beq.n	8010b7a <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x76>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010b4e:	4b12      	ldr	r3, [pc, #72]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b50:	2202      	movs	r2, #2
 8010b52:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8010b54:	78fb      	ldrb	r3, [r7, #3]
 8010b56:	061a      	lsls	r2, r3, #24
 8010b58:	490f      	ldr	r1, [pc, #60]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b5a:	4b10      	ldr	r3, [pc, #64]	@ (8010b9c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x98>)
 8010b5c:	4313      	orrs	r3, r2
 8010b5e:	61cb      	str	r3, [r1, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, color);
 8010b60:	4a0d      	ldr	r2, [pc, #52]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b62:	687b      	ldr	r3, [r7, #4]
 8010b64:	6213      	str	r3, [r2, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8010b66:	4a0c      	ldr	r2, [pc, #48]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b68:	68fb      	ldr	r3, [r7, #12]
 8010b6a:	6153      	str	r3, [r2, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8010b6c:	4a0a      	ldr	r2, [pc, #40]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b6e:	68fb      	ldr	r3, [r7, #12]
 8010b70:	60d3      	str	r3, [r2, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8010b72:	4b09      	ldr	r3, [pc, #36]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b74:	4a0a      	ldr	r2, [pc, #40]	@ (8010ba0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x9c>)
 8010b76:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
 8010b78:	e008      	b.n	8010b8c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x88>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8010b7a:	4b07      	ldr	r3, [pc, #28]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b7c:	2202      	movs	r2, #2
 8010b7e:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8010b80:	4a05      	ldr	r2, [pc, #20]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b82:	69bb      	ldr	r3, [r7, #24]
 8010b84:	6393      	str	r3, [r2, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8010b86:	4b04      	ldr	r3, [pc, #16]	@ (8010b98 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x94>)
 8010b88:	4a06      	ldr	r2, [pc, #24]	@ (8010ba4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0xa0>)
 8010b8a:	601a      	str	r2, [r3, #0]
}
 8010b8c:	bf00      	nop
 8010b8e:	3714      	adds	r7, #20
 8010b90:	46bd      	mov	sp, r7
 8010b92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010b96:	4770      	bx	lr
 8010b98:	4002b000 	.word	0x4002b000
 8010b9c:	00010009 	.word	0x00010009
 8010ba0:	00020001 	.word	0x00020001
 8010ba4:	00030001 	.word	0x00030001

08010ba8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 8010ba8:	b480      	push	{r7}
 8010baa:	b085      	sub	sp, #20
 8010bac:	af00      	add	r7, sp, #0
 8010bae:	60f8      	str	r0, [r7, #12]
 8010bb0:	60b9      	str	r1, [r7, #8]
 8010bb2:	607a      	str	r2, [r7, #4]
 8010bb4:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8010bb6:	bf00      	nop
 8010bb8:	4b1f      	ldr	r3, [pc, #124]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010bba:	681b      	ldr	r3, [r3, #0]
 8010bbc:	f003 0301 	and.w	r3, r3, #1
 8010bc0:	2b00      	cmp	r3, #0
 8010bc2:	bf14      	ite	ne
 8010bc4:	2301      	movne	r3, #1
 8010bc6:	2300      	moveq	r3, #0
 8010bc8:	b2db      	uxtb	r3, r3
 8010bca:	2b00      	cmp	r3, #0
 8010bcc:	d1f4      	bne.n	8010bb8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8010bce:	4b1a      	ldr	r3, [pc, #104]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010bd0:	2223      	movs	r2, #35	@ 0x23
 8010bd2:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8010bd4:	4b18      	ldr	r3, [pc, #96]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010bd6:	2202      	movs	r2, #2
 8010bd8:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8010bda:	687b      	ldr	r3, [r7, #4]
 8010bdc:	041b      	lsls	r3, r3, #16
 8010bde:	4a16      	ldr	r2, [pc, #88]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010be0:	f043 0301 	orr.w	r3, r3, #1
 8010be4:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8010be6:	4a14      	ldr	r2, [pc, #80]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010be8:	68fb      	ldr	r3, [r7, #12]
 8010bea:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8010bec:	4a12      	ldr	r2, [pc, #72]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010bee:	68bb      	ldr	r3, [r7, #8]
 8010bf0:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 8010bf2:	78fb      	ldrb	r3, [r7, #3]
 8010bf4:	2bff      	cmp	r3, #255	@ 0xff
 8010bf6:	d00f      	beq.n	8010c18 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x70>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8010bf8:	78fb      	ldrb	r3, [r7, #3]
 8010bfa:	061b      	lsls	r3, r3, #24
 8010bfc:	4a0e      	ldr	r2, [pc, #56]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010bfe:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8010c02:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010c04:	4b0c      	ldr	r3, [pc, #48]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010c06:	2202      	movs	r2, #2
 8010c08:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8010c0a:	4a0b      	ldr	r2, [pc, #44]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010c0c:	68fb      	ldr	r3, [r7, #12]
 8010c0e:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8010c10:	4b09      	ldr	r3, [pc, #36]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010c12:	4a0a      	ldr	r2, [pc, #40]	@ (8010c3c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x94>)
 8010c14:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 8010c16:	e008      	b.n	8010c2a <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8010c18:	78fb      	ldrb	r3, [r7, #3]
 8010c1a:	061b      	lsls	r3, r3, #24
 8010c1c:	4a06      	ldr	r2, [pc, #24]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010c1e:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8010c22:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8010c24:	4b04      	ldr	r3, [pc, #16]	@ (8010c38 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010c26:	2201      	movs	r2, #1
 8010c28:	601a      	str	r2, [r3, #0]
}
 8010c2a:	bf00      	nop
 8010c2c:	3714      	adds	r7, #20
 8010c2e:	46bd      	mov	sp, r7
 8010c30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010c34:	4770      	bx	lr
 8010c36:	bf00      	nop
 8010c38:	4002b000 	.word	0x4002b000
 8010c3c:	00020001 	.word	0x00020001

08010c40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8010c40:	b480      	push	{r7}
 8010c42:	b085      	sub	sp, #20
 8010c44:	af00      	add	r7, sp, #0
 8010c46:	60f8      	str	r0, [r7, #12]
 8010c48:	60b9      	str	r1, [r7, #8]
 8010c4a:	607a      	str	r2, [r7, #4]
 8010c4c:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8010c4e:	bf00      	nop
 8010c50:	4b18      	ldr	r3, [pc, #96]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c52:	681b      	ldr	r3, [r3, #0]
 8010c54:	f003 0301 	and.w	r3, r3, #1
 8010c58:	2b00      	cmp	r3, #0
 8010c5a:	bf14      	ite	ne
 8010c5c:	2301      	movne	r3, #1
 8010c5e:	2300      	moveq	r3, #0
 8010c60:	b2db      	uxtb	r3, r3
 8010c62:	2b00      	cmp	r3, #0
 8010c64:	d1f4      	bne.n	8010c50 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8010c66:	4b13      	ldr	r3, [pc, #76]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c68:	2223      	movs	r2, #35	@ 0x23
 8010c6a:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8010c6c:	4b11      	ldr	r3, [pc, #68]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c6e:	2202      	movs	r2, #2
 8010c70:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8010c72:	687b      	ldr	r3, [r7, #4]
 8010c74:	041b      	lsls	r3, r3, #16
 8010c76:	4a0f      	ldr	r2, [pc, #60]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c78:	f043 0301 	orr.w	r3, r3, #1
 8010c7c:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8010c7e:	4a0d      	ldr	r2, [pc, #52]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c80:	68fb      	ldr	r3, [r7, #12]
 8010c82:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8010c84:	4a0b      	ldr	r2, [pc, #44]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c86:	68bb      	ldr	r3, [r7, #8]
 8010c88:	60d3      	str	r3, [r2, #12]

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 8010c8a:	78fb      	ldrb	r3, [r7, #3]
 8010c8c:	061b      	lsls	r3, r3, #24
 8010c8e:	4a09      	ldr	r2, [pc, #36]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c90:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8010c94:	61d3      	str	r3, [r2, #28]

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010c96:	4b07      	ldr	r3, [pc, #28]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c98:	2202      	movs	r2, #2
 8010c9a:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 8010c9c:	4a05      	ldr	r2, [pc, #20]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010c9e:	68fb      	ldr	r3, [r7, #12]
 8010ca0:	6153      	str	r3, [r2, #20]

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8010ca2:	4b04      	ldr	r3, [pc, #16]	@ (8010cb4 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010ca4:	4a04      	ldr	r2, [pc, #16]	@ (8010cb8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x78>)
 8010ca6:	601a      	str	r2, [r3, #0]
}
 8010ca8:	bf00      	nop
 8010caa:	3714      	adds	r7, #20
 8010cac:	46bd      	mov	sp, r7
 8010cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010cb2:	4770      	bx	lr
 8010cb4:	4002b000 	.word	0x4002b000
 8010cb8:	00020001 	.word	0x00020001

08010cbc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8010cbc:	b580      	push	{r7, lr}
 8010cbe:	b082      	sub	sp, #8
 8010cc0:	af00      	add	r7, sp, #0
 8010cc2:	6078      	str	r0, [r7, #4]
 8010cc4:	4a05      	ldr	r2, [pc, #20]	@ (8010cdc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8010cc6:	687b      	ldr	r3, [r7, #4]
 8010cc8:	601a      	str	r2, [r3, #0]
 8010cca:	687b      	ldr	r3, [r7, #4]
 8010ccc:	4618      	mov	r0, r3
 8010cce:	f7ff fb37 	bl	8010340 <_ZN8touchgfx9DMA_QueueD1Ev>
 8010cd2:	687b      	ldr	r3, [r7, #4]
 8010cd4:	4618      	mov	r0, r3
 8010cd6:	3708      	adds	r7, #8
 8010cd8:	46bd      	mov	sp, r7
 8010cda:	bd80      	pop	{r7, pc}
 8010cdc:	0802a870 	.word	0x0802a870

08010ce0 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010ce0:	b580      	push	{r7, lr}
 8010ce2:	b082      	sub	sp, #8
 8010ce4:	af00      	add	r7, sp, #0
 8010ce6:	6078      	str	r0, [r7, #4]
 8010ce8:	6878      	ldr	r0, [r7, #4]
 8010cea:	f7ff ffe7 	bl	8010cbc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8010cee:	2114      	movs	r1, #20
 8010cf0:	6878      	ldr	r0, [r7, #4]
 8010cf2:	f016 fec0 	bl	8027a76 <_ZdlPvj>
 8010cf6:	687b      	ldr	r3, [r7, #4]
 8010cf8:	4618      	mov	r0, r3
 8010cfa:	3708      	adds	r7, #8
 8010cfc:	46bd      	mov	sp, r7
 8010cfe:	bd80      	pop	{r7, pc}

08010d00 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8010d00:	b480      	push	{r7}
 8010d02:	b083      	sub	sp, #12
 8010d04:	af00      	add	r7, sp, #0
 8010d06:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8010d08:	4a04      	ldr	r2, [pc, #16]	@ (8010d1c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8010d0a:	687b      	ldr	r3, [r7, #4]
 8010d0c:	6013      	str	r3, [r2, #0]
    }
 8010d0e:	bf00      	nop
 8010d10:	370c      	adds	r7, #12
 8010d12:	46bd      	mov	sp, r7
 8010d14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d18:	4770      	bx	lr
 8010d1a:	bf00      	nop
 8010d1c:	200039e8 	.word	0x200039e8

08010d20 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8010d20:	b480      	push	{r7}
 8010d22:	b085      	sub	sp, #20
 8010d24:	af00      	add	r7, sp, #0
 8010d26:	60f8      	str	r0, [r7, #12]
 8010d28:	60b9      	str	r1, [r7, #8]
 8010d2a:	607a      	str	r2, [r7, #4]
 8010d2c:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8010d2e:	4a0b      	ldr	r2, [pc, #44]	@ (8010d5c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010d30:	68fb      	ldr	r3, [r7, #12]
 8010d32:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8010d34:	68fb      	ldr	r3, [r7, #12]
 8010d36:	68ba      	ldr	r2, [r7, #8]
 8010d38:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 8010d3a:	68fb      	ldr	r3, [r7, #12]
 8010d3c:	687a      	ldr	r2, [r7, #4]
 8010d3e:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8010d40:	68fb      	ldr	r3, [r7, #12]
 8010d42:	683a      	ldr	r2, [r7, #0]
 8010d44:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 8010d46:	68fb      	ldr	r3, [r7, #12]
 8010d48:	69ba      	ldr	r2, [r7, #24]
 8010d4a:	611a      	str	r2, [r3, #16]
    {
    }
 8010d4c:	68fb      	ldr	r3, [r7, #12]
 8010d4e:	4618      	mov	r0, r3
 8010d50:	3714      	adds	r7, #20
 8010d52:	46bd      	mov	sp, r7
 8010d54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d58:	4770      	bx	lr
 8010d5a:	bf00      	nop
 8010d5c:	0802a3b8 	.word	0x0802a3b8

08010d60 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010d60:	b480      	push	{r7}
 8010d62:	b083      	sub	sp, #12
 8010d64:	af00      	add	r7, sp, #0
 8010d66:	6078      	str	r0, [r7, #4]
    {
 8010d68:	4a04      	ldr	r2, [pc, #16]	@ (8010d7c <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8010d6a:	687b      	ldr	r3, [r7, #4]
 8010d6c:	601a      	str	r2, [r3, #0]
    }
 8010d6e:	687b      	ldr	r3, [r7, #4]
 8010d70:	4618      	mov	r0, r3
 8010d72:	370c      	adds	r7, #12
 8010d74:	46bd      	mov	sp, r7
 8010d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d7a:	4770      	bx	lr
 8010d7c:	0802a3b8 	.word	0x0802a3b8

08010d80 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8010d80:	b580      	push	{r7, lr}
 8010d82:	b082      	sub	sp, #8
 8010d84:	af00      	add	r7, sp, #0
 8010d86:	6078      	str	r0, [r7, #4]
    }
 8010d88:	6878      	ldr	r0, [r7, #4]
 8010d8a:	f7ff ffe9 	bl	8010d60 <_ZN8touchgfx7MVPHeapD1Ev>
 8010d8e:	2114      	movs	r1, #20
 8010d90:	6878      	ldr	r0, [r7, #4]
 8010d92:	f016 fe70 	bl	8027a76 <_ZdlPvj>
 8010d96:	687b      	ldr	r3, [r7, #4]
 8010d98:	4618      	mov	r0, r3
 8010d9a:	3708      	adds	r7, #8
 8010d9c:	46bd      	mov	sp, r7
 8010d9e:	bd80      	pop	{r7, pc}

08010da0 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 8010da0:	b480      	push	{r7}
 8010da2:	b083      	sub	sp, #12
 8010da4:	af00      	add	r7, sp, #0
 8010da6:	6078      	str	r0, [r7, #4]
    {
 8010da8:	4a04      	ldr	r2, [pc, #16]	@ (8010dbc <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8010daa:	687b      	ldr	r3, [r7, #4]
 8010dac:	601a      	str	r2, [r3, #0]
    }
 8010dae:	687b      	ldr	r3, [r7, #4]
 8010db0:	4618      	mov	r0, r3
 8010db2:	370c      	adds	r7, #12
 8010db4:	46bd      	mov	sp, r7
 8010db6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dba:	4770      	bx	lr
 8010dbc:	0802ac44 	.word	0x0802ac44

08010dc0 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8010dc0:	b580      	push	{r7, lr}
 8010dc2:	b082      	sub	sp, #8
 8010dc4:	af00      	add	r7, sp, #0
 8010dc6:	6078      	str	r0, [r7, #4]
    }
 8010dc8:	6878      	ldr	r0, [r7, #4]
 8010dca:	f7ff ffe9 	bl	8010da0 <_ZN8touchgfx3LCDD1Ev>
 8010dce:	210c      	movs	r1, #12
 8010dd0:	6878      	ldr	r0, [r7, #4]
 8010dd2:	f016 fe50 	bl	8027a76 <_ZdlPvj>
 8010dd6:	687b      	ldr	r3, [r7, #4]
 8010dd8:	4618      	mov	r0, r3
 8010dda:	3708      	adds	r7, #8
 8010ddc:	46bd      	mov	sp, r7
 8010dde:	bd80      	pop	{r7, pc}

08010de0 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 8010de0:	b480      	push	{r7}
 8010de2:	b083      	sub	sp, #12
 8010de4:	af00      	add	r7, sp, #0
 8010de6:	6078      	str	r0, [r7, #4]
            : startX(0),
 8010de8:	687b      	ldr	r3, [r7, #4]
 8010dea:	2200      	movs	r2, #0
 8010dec:	801a      	strh	r2, [r3, #0]
              startY(0),
 8010dee:	687b      	ldr	r3, [r7, #4]
 8010df0:	2200      	movs	r2, #0
 8010df2:	805a      	strh	r2, [r3, #2]
              downX(0),
 8010df4:	687b      	ldr	r3, [r7, #4]
 8010df6:	2200      	movs	r2, #0
 8010df8:	809a      	strh	r2, [r3, #4]
              downY(0),
 8010dfa:	687b      	ldr	r3, [r7, #4]
 8010dfc:	2200      	movs	r2, #0
 8010dfe:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8010e00:	687b      	ldr	r3, [r7, #4]
 8010e02:	2200      	movs	r2, #0
 8010e04:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 8010e06:	687b      	ldr	r3, [r7, #4]
 8010e08:	2200      	movs	r2, #0
 8010e0a:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8010e0c:	687b      	ldr	r3, [r7, #4]
 8010e0e:	2200      	movs	r2, #0
 8010e10:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 8010e12:	687b      	ldr	r3, [r7, #4]
 8010e14:	2200      	movs	r2, #0
 8010e16:	739a      	strb	r2, [r3, #14]
        {
        }
 8010e18:	687b      	ldr	r3, [r7, #4]
 8010e1a:	4618      	mov	r0, r3
 8010e1c:	370c      	adds	r7, #12
 8010e1e:	46bd      	mov	sp, r7
 8010e20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e24:	4770      	bx	lr

08010e26 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 8010e26:	b580      	push	{r7, lr}
 8010e28:	b082      	sub	sp, #8
 8010e2a:	af00      	add	r7, sp, #0
 8010e2c:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8010e2e:	687b      	ldr	r3, [r7, #4]
 8010e30:	4618      	mov	r0, r3
 8010e32:	f7ff ffd5 	bl	8010de0 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8010e36:	687b      	ldr	r3, [r7, #4]
 8010e38:	2200      	movs	r2, #0
 8010e3a:	611a      	str	r2, [r3, #16]
 8010e3c:	687b      	ldr	r3, [r7, #4]
 8010e3e:	2200      	movs	r2, #0
 8010e40:	829a      	strh	r2, [r3, #20]
    {
    }
 8010e42:	687b      	ldr	r3, [r7, #4]
 8010e44:	4618      	mov	r0, r3
 8010e46:	3708      	adds	r7, #8
 8010e48:	46bd      	mov	sp, r7
 8010e4a:	bd80      	pop	{r7, pc}

08010e4c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8010e4c:	b580      	push	{r7, lr}
 8010e4e:	b084      	sub	sp, #16
 8010e50:	af00      	add	r7, sp, #0
 8010e52:	60f8      	str	r0, [r7, #12]
 8010e54:	60b9      	str	r1, [r7, #8]
 8010e56:	607a      	str	r2, [r7, #4]
 8010e58:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 8010e5a:	4a55      	ldr	r2, [pc, #340]	@ (8010fb0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8010e5c:	68fb      	ldr	r3, [r7, #12]
 8010e5e:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8010e60:	68fb      	ldr	r3, [r7, #12]
 8010e62:	68ba      	ldr	r2, [r7, #8]
 8010e64:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 8010e66:	68fb      	ldr	r3, [r7, #12]
 8010e68:	687a      	ldr	r2, [r7, #4]
 8010e6a:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8010e6c:	68fb      	ldr	r3, [r7, #12]
 8010e6e:	683a      	ldr	r2, [r7, #0]
 8010e70:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 8010e72:	68fb      	ldr	r3, [r7, #12]
 8010e74:	2200      	movs	r2, #0
 8010e76:	611a      	str	r2, [r3, #16]
          buttonController(0),
 8010e78:	68fb      	ldr	r3, [r7, #12]
 8010e7a:	2200      	movs	r2, #0
 8010e7c:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8010e7e:	68fb      	ldr	r3, [r7, #12]
 8010e80:	2200      	movs	r2, #0
 8010e82:	619a      	str	r2, [r3, #24]
          gestures(),
 8010e84:	68fb      	ldr	r3, [r7, #12]
 8010e86:	331c      	adds	r3, #28
 8010e88:	4618      	mov	r0, r3
 8010e8a:	f7ff ffcc 	bl	8010e26 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8010e8e:	68fb      	ldr	r3, [r7, #12]
 8010e90:	2200      	movs	r2, #0
 8010e92:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 8010e96:	68fb      	ldr	r3, [r7, #12]
 8010e98:	2200      	movs	r2, #0
 8010e9a:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 8010e9c:	68fb      	ldr	r3, [r7, #12]
 8010e9e:	2200      	movs	r2, #0
 8010ea0:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 8010ea2:	68fb      	ldr	r3, [r7, #12]
 8010ea4:	2200      	movs	r2, #0
 8010ea6:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 8010ea8:	68fb      	ldr	r3, [r7, #12]
 8010eaa:	2200      	movs	r2, #0
 8010eac:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 8010eae:	68fb      	ldr	r3, [r7, #12]
 8010eb0:	2200      	movs	r2, #0
 8010eb2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 8010eb6:	68fb      	ldr	r3, [r7, #12]
 8010eb8:	2201      	movs	r2, #1
 8010eba:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 8010ebe:	68fb      	ldr	r3, [r7, #12]
 8010ec0:	2200      	movs	r2, #0
 8010ec2:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 8010ec6:	68fb      	ldr	r3, [r7, #12]
 8010ec8:	2200      	movs	r2, #0
 8010eca:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 8010ece:	68fb      	ldr	r3, [r7, #12]
 8010ed0:	2200      	movs	r2, #0
 8010ed2:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 8010ed4:	68fb      	ldr	r3, [r7, #12]
 8010ed6:	3350      	adds	r3, #80	@ 0x50
 8010ed8:	4618      	mov	r0, r3
 8010eda:	f7fb fbac 	bl	800c636 <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 8010ede:	68fb      	ldr	r3, [r7, #12]
 8010ee0:	2200      	movs	r2, #0
 8010ee2:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 8010ee6:	68fb      	ldr	r3, [r7, #12]
 8010ee8:	2200      	movs	r2, #0
 8010eea:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 8010eec:	68fb      	ldr	r3, [r7, #12]
 8010eee:	2200      	movs	r2, #0
 8010ef0:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 8010ef2:	68fb      	ldr	r3, [r7, #12]
 8010ef4:	2200      	movs	r2, #0
 8010ef6:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 8010ef8:	68fb      	ldr	r3, [r7, #12]
 8010efa:	2201      	movs	r2, #1
 8010efc:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 8010f00:	68fb      	ldr	r3, [r7, #12]
 8010f02:	2200      	movs	r2, #0
 8010f04:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 8010f08:	68fb      	ldr	r3, [r7, #12]
 8010f0a:	2200      	movs	r2, #0
 8010f0c:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 8010f10:	68fb      	ldr	r3, [r7, #12]
 8010f12:	2201      	movs	r2, #1
 8010f14:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 8010f18:	68fb      	ldr	r3, [r7, #12]
 8010f1a:	2200      	movs	r2, #0
 8010f1c:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 8010f20:	68fb      	ldr	r3, [r7, #12]
 8010f22:	2200      	movs	r2, #0
 8010f24:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 8010f28:	68fb      	ldr	r3, [r7, #12]
 8010f2a:	2200      	movs	r2, #0
 8010f2c:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 8010f30:	68fb      	ldr	r3, [r7, #12]
 8010f32:	2200      	movs	r2, #0
 8010f34:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 8010f38:	68fb      	ldr	r3, [r7, #12]
 8010f3a:	2200      	movs	r2, #0
 8010f3c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8010f40:	68fb      	ldr	r3, [r7, #12]
 8010f42:	2200      	movs	r2, #0
 8010f44:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 8010f46:	68fb      	ldr	r3, [r7, #12]
 8010f48:	2200      	movs	r2, #0
 8010f4a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 8010f4e:	68fb      	ldr	r3, [r7, #12]
 8010f50:	2200      	movs	r2, #0
 8010f52:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 8010f56:	68fb      	ldr	r3, [r7, #12]
 8010f58:	2201      	movs	r2, #1
 8010f5a:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 8010f5e:	68fb      	ldr	r3, [r7, #12]
 8010f60:	2201      	movs	r2, #1
 8010f62:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 8010f66:	4a13      	ldr	r2, [pc, #76]	@ (8010fb4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 8010f68:	68fb      	ldr	r3, [r7, #12]
 8010f6a:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8010f6c:	4a12      	ldr	r2, [pc, #72]	@ (8010fb8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010f6e:	8b3b      	ldrh	r3, [r7, #24]
 8010f70:	8013      	strh	r3, [r2, #0]
 8010f72:	4b11      	ldr	r3, [pc, #68]	@ (8010fb8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010f74:	881a      	ldrh	r2, [r3, #0]
 8010f76:	4b11      	ldr	r3, [pc, #68]	@ (8010fbc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 8010f78:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8010f7a:	4a11      	ldr	r2, [pc, #68]	@ (8010fc0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010f7c:	8bbb      	ldrh	r3, [r7, #28]
 8010f7e:	8013      	strh	r3, [r2, #0]
 8010f80:	4b0f      	ldr	r3, [pc, #60]	@ (8010fc0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010f82:	881a      	ldrh	r2, [r3, #0]
 8010f84:	4b0f      	ldr	r3, [pc, #60]	@ (8010fc4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 8010f86:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 8010f88:	4b0f      	ldr	r3, [pc, #60]	@ (8010fc8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 8010f8a:	2200      	movs	r2, #0
 8010f8c:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8010f8e:	8b3a      	ldrh	r2, [r7, #24]
 8010f90:	8bbb      	ldrh	r3, [r7, #28]
 8010f92:	429a      	cmp	r2, r3
 8010f94:	bf34      	ite	cc
 8010f96:	2301      	movcc	r3, #1
 8010f98:	2300      	movcs	r3, #0
 8010f9a:	b2db      	uxtb	r3, r3
 8010f9c:	461a      	mov	r2, r3
 8010f9e:	68fb      	ldr	r3, [r7, #12]
 8010fa0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 8010fa4:	68fb      	ldr	r3, [r7, #12]
 8010fa6:	4618      	mov	r0, r3
 8010fa8:	3710      	adds	r7, #16
 8010faa:	46bd      	mov	sp, r7
 8010fac:	bd80      	pop	{r7, pc}
 8010fae:	bf00      	nop
 8010fb0:	0802a748 	.word	0x0802a748
 8010fb4:	20003984 	.word	0x20003984
 8010fb8:	20003978 	.word	0x20003978
 8010fbc:	2000397e 	.word	0x2000397e
 8010fc0:	2000397a 	.word	0x2000397a
 8010fc4:	20003980 	.word	0x20003980
 8010fc8:	2000397c 	.word	0x2000397c

08010fcc <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 8010fcc:	b580      	push	{r7, lr}
 8010fce:	b082      	sub	sp, #8
 8010fd0:	af00      	add	r7, sp, #0
 8010fd2:	6078      	str	r0, [r7, #4]
 8010fd4:	6039      	str	r1, [r7, #0]
    {
        app.gotoInitialScreenNoTransition();
 8010fd6:	683b      	ldr	r3, [r7, #0]
 8010fd8:	4618      	mov	r0, r3
 8010fda:	f7fa fead 	bl	800bd38 <_ZN23FrontendApplicationBase29gotoInitialScreenNoTransitionEv>
    }
 8010fde:	bf00      	nop
 8010fe0:	3708      	adds	r7, #8
 8010fe2:	46bd      	mov	sp, r7
 8010fe4:	bd80      	pop	{r7, pc}
	...

08010fe8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 8010fe8:	b580      	push	{r7, lr}
 8010fea:	b086      	sub	sp, #24
 8010fec:	af02      	add	r7, sp, #8
 8010fee:	60f8      	str	r0, [r7, #12]
 8010ff0:	60b9      	str	r1, [r7, #8]
 8010ff2:	607a      	str	r2, [r7, #4]
 8010ff4:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 8010ff6:	68f8      	ldr	r0, [r7, #12]
 8010ff8:	69bb      	ldr	r3, [r7, #24]
 8010ffa:	9300      	str	r3, [sp, #0]
 8010ffc:	683b      	ldr	r3, [r7, #0]
 8010ffe:	687a      	ldr	r2, [r7, #4]
 8011000:	68b9      	ldr	r1, [r7, #8]
 8011002:	f7ff fe8d 	bl	8010d20 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 8011006:	4a04      	ldr	r2, [pc, #16]	@ (8011018 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8011008:	68fb      	ldr	r3, [r7, #12]
 801100a:	601a      	str	r2, [r3, #0]
    {

    }
 801100c:	68fb      	ldr	r3, [r7, #12]
 801100e:	4618      	mov	r0, r3
 8011010:	3710      	adds	r7, #16
 8011012:	46bd      	mov	sp, r7
 8011014:	bd80      	pop	{r7, pc}
 8011016:	bf00      	nop
 8011018:	0802a3a4 	.word	0x0802a3a4

0801101c <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 801101c:	b580      	push	{r7, lr}
 801101e:	af00      	add	r7, sp, #0
 8011020:	4801      	ldr	r0, [pc, #4]	@ (8011028 <__tcf_0+0xc>)
 8011022:	f000 f971 	bl	8011308 <_ZN12FrontendHeapD1Ev>
 8011026:	bd80      	pop	{r7, pc}
 8011028:	20000b14 	.word	0x20000b14

0801102c <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 801102c:	b580      	push	{r7, lr}
 801102e:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8011030:	4b11      	ldr	r3, [pc, #68]	@ (8011078 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8011032:	681b      	ldr	r3, [r3, #0]
 8011034:	f3bf 8f5b 	dmb	ish
 8011038:	f003 0301 	and.w	r3, r3, #1
 801103c:	2b00      	cmp	r3, #0
 801103e:	bf0c      	ite	eq
 8011040:	2301      	moveq	r3, #1
 8011042:	2300      	movne	r3, #0
 8011044:	b2db      	uxtb	r3, r3
 8011046:	2b00      	cmp	r3, #0
 8011048:	d013      	beq.n	8011072 <_ZN12FrontendHeap11getInstanceEv+0x46>
 801104a:	480b      	ldr	r0, [pc, #44]	@ (8011078 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801104c:	f016 fd15 	bl	8027a7a <__cxa_guard_acquire>
 8011050:	4603      	mov	r3, r0
 8011052:	2b00      	cmp	r3, #0
 8011054:	bf14      	ite	ne
 8011056:	2301      	movne	r3, #1
 8011058:	2300      	moveq	r3, #0
 801105a:	b2db      	uxtb	r3, r3
 801105c:	2b00      	cmp	r3, #0
 801105e:	d008      	beq.n	8011072 <_ZN12FrontendHeap11getInstanceEv+0x46>
 8011060:	4806      	ldr	r0, [pc, #24]	@ (801107c <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8011062:	f000 f867 	bl	8011134 <_ZN12FrontendHeapC1Ev>
 8011066:	4806      	ldr	r0, [pc, #24]	@ (8011080 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 8011068:	f016 fd52 	bl	8027b10 <atexit>
 801106c:	4802      	ldr	r0, [pc, #8]	@ (8011078 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 801106e:	f016 fd10 	bl	8027a92 <__cxa_guard_release>
        return instance;
 8011072:	4b02      	ldr	r3, [pc, #8]	@ (801107c <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8011074:	4618      	mov	r0, r3
 8011076:	bd80      	pop	{r7, pc}
 8011078:	20002ac0 	.word	0x20002ac0
 801107c:	20000b14 	.word	0x20000b14
 8011080:	0801101d 	.word	0x0801101d

08011084 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8011084:	b580      	push	{r7, lr}
 8011086:	b082      	sub	sp, #8
 8011088:	af00      	add	r7, sp, #0
 801108a:	6078      	str	r0, [r7, #4]
 801108c:	4a05      	ldr	r2, [pc, #20]	@ (80110a4 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 801108e:	687b      	ldr	r3, [r7, #4]
 8011090:	601a      	str	r2, [r3, #0]
 8011092:	687b      	ldr	r3, [r7, #4]
 8011094:	4618      	mov	r0, r3
 8011096:	f7ff fe63 	bl	8010d60 <_ZN8touchgfx7MVPHeapD1Ev>
 801109a:	687b      	ldr	r3, [r7, #4]
 801109c:	4618      	mov	r0, r3
 801109e:	3708      	adds	r7, #8
 80110a0:	46bd      	mov	sp, r7
 80110a2:	bd80      	pop	{r7, pc}
 80110a4:	0802a3a4 	.word	0x0802a3a4

080110a8 <_ZN16FrontendHeapBaseD0Ev>:
 80110a8:	b580      	push	{r7, lr}
 80110aa:	b082      	sub	sp, #8
 80110ac:	af00      	add	r7, sp, #0
 80110ae:	6078      	str	r0, [r7, #4]
 80110b0:	6878      	ldr	r0, [r7, #4]
 80110b2:	f7ff ffe7 	bl	8011084 <_ZN16FrontendHeapBaseD1Ev>
 80110b6:	2114      	movs	r1, #20
 80110b8:	6878      	ldr	r0, [r7, #4]
 80110ba:	f016 fcdc 	bl	8027a76 <_ZdlPvj>
 80110be:	687b      	ldr	r3, [r7, #4]
 80110c0:	4618      	mov	r0, r3
 80110c2:	3708      	adds	r7, #8
 80110c4:	46bd      	mov	sp, r7
 80110c6:	bd80      	pop	{r7, pc}

080110c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 80110c8:	b580      	push	{r7, lr}
 80110ca:	b082      	sub	sp, #8
 80110cc:	af00      	add	r7, sp, #0
 80110ce:	6078      	str	r0, [r7, #4]
 80110d0:	687b      	ldr	r3, [r7, #4]
 80110d2:	4618      	mov	r0, r3
 80110d4:	f000 fd48 	bl	8011b68 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80110d8:	4a03      	ldr	r2, [pc, #12]	@ (80110e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80110da:	687b      	ldr	r3, [r7, #4]
 80110dc:	601a      	str	r2, [r3, #0]
 80110de:	687b      	ldr	r3, [r7, #4]
 80110e0:	4618      	mov	r0, r3
 80110e2:	3708      	adds	r7, #8
 80110e4:	46bd      	mov	sp, r7
 80110e6:	bd80      	pop	{r7, pc}
 80110e8:	0802a370 	.word	0x0802a370

080110ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80110ec:	b580      	push	{r7, lr}
 80110ee:	b082      	sub	sp, #8
 80110f0:	af00      	add	r7, sp, #0
 80110f2:	6078      	str	r0, [r7, #4]
 80110f4:	687b      	ldr	r3, [r7, #4]
 80110f6:	4618      	mov	r0, r3
 80110f8:	f000 fd36 	bl	8011b68 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80110fc:	4a03      	ldr	r2, [pc, #12]	@ (801110c <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80110fe:	687b      	ldr	r3, [r7, #4]
 8011100:	601a      	str	r2, [r3, #0]
 8011102:	687b      	ldr	r3, [r7, #4]
 8011104:	4618      	mov	r0, r3
 8011106:	3708      	adds	r7, #8
 8011108:	46bd      	mov	sp, r7
 801110a:	bd80      	pop	{r7, pc}
 801110c:	0802a33c 	.word	0x0802a33c

08011110 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8011110:	b580      	push	{r7, lr}
 8011112:	b082      	sub	sp, #8
 8011114:	af00      	add	r7, sp, #0
 8011116:	6078      	str	r0, [r7, #4]
 8011118:	687b      	ldr	r3, [r7, #4]
 801111a:	4618      	mov	r0, r3
 801111c:	f000 fd24 	bl	8011b68 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8011120:	4a03      	ldr	r2, [pc, #12]	@ (8011130 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8011122:	687b      	ldr	r3, [r7, #4]
 8011124:	601a      	str	r2, [r3, #0]
 8011126:	687b      	ldr	r3, [r7, #4]
 8011128:	4618      	mov	r0, r3
 801112a:	3708      	adds	r7, #8
 801112c:	46bd      	mov	sp, r7
 801112e:	bd80      	pop	{r7, pc}
 8011130:	0802a308 	.word	0x0802a308

08011134 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011134:	b5b0      	push	{r4, r5, r7, lr}
 8011136:	b084      	sub	sp, #16
 8011138:	af02      	add	r7, sp, #8
 801113a:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 801113c:	6878      	ldr	r0, [r7, #4]
 801113e:	687b      	ldr	r3, [r7, #4]
 8011140:	f103 0414 	add.w	r4, r3, #20
 8011144:	687b      	ldr	r3, [r7, #4]
 8011146:	f103 052c 	add.w	r5, r3, #44	@ 0x2c
 801114a:	687b      	ldr	r3, [r7, #4]
 801114c:	f641 6230 	movw	r2, #7728	@ 0x1e30
 8011150:	441a      	add	r2, r3
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8011152:	6879      	ldr	r1, [r7, #4]
 8011154:	f641 6350 	movw	r3, #7760	@ 0x1e50
 8011158:	440b      	add	r3, r1
                     app(model, *this)
 801115a:	9300      	str	r3, [sp, #0]
 801115c:	4613      	mov	r3, r2
 801115e:	462a      	mov	r2, r5
 8011160:	4621      	mov	r1, r4
 8011162:	f7ff ff41 	bl	8010fe8 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8011166:	4a1a      	ldr	r2, [pc, #104]	@ (80111d0 <_ZN12FrontendHeapC1Ev+0x9c>)
 8011168:	687b      	ldr	r3, [r7, #4]
 801116a:	601a      	str	r2, [r3, #0]
 801116c:	687b      	ldr	r3, [r7, #4]
 801116e:	3314      	adds	r3, #20
 8011170:	4618      	mov	r0, r3
 8011172:	f7ff ffa9 	bl	80110c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011176:	687b      	ldr	r3, [r7, #4]
 8011178:	332c      	adds	r3, #44	@ 0x2c
 801117a:	4618      	mov	r0, r3
 801117c:	f7ff ffb6 	bl	80110ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8011180:	687a      	ldr	r2, [r7, #4]
 8011182:	f641 6330 	movw	r3, #7728	@ 0x1e30
 8011186:	4413      	add	r3, r2
 8011188:	4618      	mov	r0, r3
 801118a:	f7ff ffc1 	bl	8011110 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 801118e:	687a      	ldr	r2, [r7, #4]
 8011190:	f641 634c 	movw	r3, #7756	@ 0x1e4c
 8011194:	4413      	add	r3, r2
 8011196:	4618      	mov	r0, r3
 8011198:	f7fe fba9 	bl	800f8ee <_ZN5ModelC1Ev>
 801119c:	687a      	ldr	r2, [r7, #4]
 801119e:	f641 6350 	movw	r3, #7760	@ 0x1e50
 80111a2:	4413      	add	r3, r2
 80111a4:	687a      	ldr	r2, [r7, #4]
 80111a6:	f641 614c 	movw	r1, #7756	@ 0x1e4c
 80111aa:	4411      	add	r1, r2
 80111ac:	687a      	ldr	r2, [r7, #4]
 80111ae:	4618      	mov	r0, r3
 80111b0:	f7fe fa0e 	bl	800f5d0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 80111b4:	6878      	ldr	r0, [r7, #4]
 80111b6:	687a      	ldr	r2, [r7, #4]
 80111b8:	f641 6350 	movw	r3, #7760	@ 0x1e50
 80111bc:	4413      	add	r3, r2
 80111be:	4619      	mov	r1, r3
 80111c0:	f7ff ff04 	bl	8010fcc <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 80111c4:	687b      	ldr	r3, [r7, #4]
 80111c6:	4618      	mov	r0, r3
 80111c8:	3708      	adds	r7, #8
 80111ca:	46bd      	mov	sp, r7
 80111cc:	bdb0      	pop	{r4, r5, r7, pc}
 80111ce:	bf00      	nop
 80111d0:	0802a2f4 	.word	0x0802a2f4

080111d4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 80111d4:	b580      	push	{r7, lr}
 80111d6:	b086      	sub	sp, #24
 80111d8:	af02      	add	r7, sp, #8
 80111da:	60f8      	str	r0, [r7, #12]
 80111dc:	60b9      	str	r1, [r7, #8]
 80111de:	607a      	str	r2, [r7, #4]
 80111e0:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 80111e2:	68f8      	ldr	r0, [r7, #12]
 80111e4:	8bbb      	ldrh	r3, [r7, #28]
 80111e6:	9301      	str	r3, [sp, #4]
 80111e8:	8b3b      	ldrh	r3, [r7, #24]
 80111ea:	9300      	str	r3, [sp, #0]
 80111ec:	683b      	ldr	r3, [r7, #0]
 80111ee:	687a      	ldr	r2, [r7, #4]
 80111f0:	68b9      	ldr	r1, [r7, #8]
 80111f2:	f7ff fe2b 	bl	8010e4c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 80111f6:	4a04      	ldr	r2, [pc, #16]	@ (8011208 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80111f8:	68fb      	ldr	r3, [r7, #12]
 80111fa:	601a      	str	r2, [r3, #0]
    }
 80111fc:	68fb      	ldr	r3, [r7, #12]
 80111fe:	4618      	mov	r0, r3
 8011200:	3710      	adds	r7, #16
 8011202:	46bd      	mov	sp, r7
 8011204:	bd80      	pop	{r7, pc}
 8011206:	bf00      	nop
 8011208:	0802a3c8 	.word	0x0802a3c8

0801120c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 801120c:	b580      	push	{r7, lr}
 801120e:	b086      	sub	sp, #24
 8011210:	af02      	add	r7, sp, #8
 8011212:	60f8      	str	r0, [r7, #12]
 8011214:	60b9      	str	r1, [r7, #8]
 8011216:	607a      	str	r2, [r7, #4]
 8011218:	603b      	str	r3, [r7, #0]
 801121a:	68f8      	ldr	r0, [r7, #12]
 801121c:	8bbb      	ldrh	r3, [r7, #28]
 801121e:	9301      	str	r3, [sp, #4]
 8011220:	8b3b      	ldrh	r3, [r7, #24]
 8011222:	9300      	str	r3, [sp, #0]
 8011224:	683b      	ldr	r3, [r7, #0]
 8011226:	687a      	ldr	r2, [r7, #4]
 8011228:	68b9      	ldr	r1, [r7, #8]
 801122a:	f7ff ffd3 	bl	80111d4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 801122e:	4a04      	ldr	r2, [pc, #16]	@ (8011240 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8011230:	68fb      	ldr	r3, [r7, #12]
 8011232:	601a      	str	r2, [r3, #0]
    }
 8011234:	68fb      	ldr	r3, [r7, #12]
 8011236:	4618      	mov	r0, r3
 8011238:	3710      	adds	r7, #16
 801123a:	46bd      	mov	sp, r7
 801123c:	bd80      	pop	{r7, pc}
 801123e:	bf00      	nop
 8011240:	0802a1a8 	.word	0x0802a1a8

08011244 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8011244:	b480      	push	{r7}
 8011246:	b083      	sub	sp, #12
 8011248:	af00      	add	r7, sp, #0
 801124a:	6078      	str	r0, [r7, #4]
 801124c:	4a04      	ldr	r2, [pc, #16]	@ (8011260 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 801124e:	687b      	ldr	r3, [r7, #4]
 8011250:	601a      	str	r2, [r3, #0]
 8011252:	687b      	ldr	r3, [r7, #4]
 8011254:	4618      	mov	r0, r3
 8011256:	370c      	adds	r7, #12
 8011258:	46bd      	mov	sp, r7
 801125a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801125e:	4770      	bx	lr
 8011260:	0802a190 	.word	0x0802a190

08011264 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8011264:	b580      	push	{r7, lr}
 8011266:	b082      	sub	sp, #8
 8011268:	af00      	add	r7, sp, #0
 801126a:	6078      	str	r0, [r7, #4]
 801126c:	687b      	ldr	r3, [r7, #4]
 801126e:	4618      	mov	r0, r3
 8011270:	f7ff ffe8 	bl	8011244 <_ZN8touchgfx15TouchControllerC1Ev>
 8011274:	4a03      	ldr	r2, [pc, #12]	@ (8011284 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8011276:	687b      	ldr	r3, [r7, #4]
 8011278:	601a      	str	r2, [r3, #0]
 801127a:	687b      	ldr	r3, [r7, #4]
 801127c:	4618      	mov	r0, r3
 801127e:	3708      	adds	r7, #8
 8011280:	46bd      	mov	sp, r7
 8011282:	bd80      	pop	{r7, pc}
 8011284:	0802a178 	.word	0x0802a178

08011288 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
 8011288:	b590      	push	{r4, r7, lr}
 801128a:	b085      	sub	sp, #20
 801128c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 801128e:	f7fd ffa1 	bl	800f1d4 <_ZN14BitmapDatabase11getInstanceEv>
 8011292:	4604      	mov	r4, r0
 8011294:	f7fd ffa8 	bl	800f1e8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8011298:	4603      	mov	r3, r0
 801129a:	4619      	mov	r1, r3
 801129c:	2300      	movs	r3, #0
 801129e:	9300      	str	r3, [sp, #0]
 80112a0:	2300      	movs	r3, #0
 80112a2:	2200      	movs	r2, #0
 80112a4:	4620      	mov	r0, r4
 80112a6:	f007 fdf7 	bl	8018e98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 80112aa:	4809      	ldr	r0, [pc, #36]	@ (80112d0 <touchgfx_init+0x48>)
 80112ac:	f7ff fd28 	bl	8010d00 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 80112b0:	2000      	movs	r0, #0
 80112b2:	f7fe f8c5 	bl	800f440 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80112b6:	4807      	ldr	r0, [pc, #28]	@ (80112d4 <touchgfx_init+0x4c>)
 80112b8:	f007 fd56 	bl	8018d68 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 80112bc:	f7ff feb6 	bl	801102c <_ZN12FrontendHeap11getInstanceEv>
 80112c0:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80112c2:	4805      	ldr	r0, [pc, #20]	@ (80112d8 <touchgfx_init+0x50>)
 80112c4:	f7fe fe8e 	bl	800ffe4 <_ZN11TouchGFXHAL10initializeEv>
}
 80112c8:	bf00      	nop
 80112ca:	370c      	adds	r7, #12
 80112cc:	46bd      	mov	sp, r7
 80112ce:	bd90      	pop	{r4, r7, pc}
 80112d0:	200038f4 	.word	0x200038f4
 80112d4:	2000019c 	.word	0x2000019c
 80112d8:	200038f8 	.word	0x200038f8

080112dc <touchgfx_components_init>:

void touchgfx_components_init()
{
 80112dc:	b480      	push	{r7}
 80112de:	af00      	add	r7, sp, #0
}
 80112e0:	bf00      	nop
 80112e2:	46bd      	mov	sp, r7
 80112e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112e8:	4770      	bx	lr
	...

080112ec <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 80112ec:	b580      	push	{r7, lr}
 80112ee:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 80112f0:	f7fe ff8e 	bl	8010210 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 80112f4:	4603      	mov	r3, r0
 80112f6:	2b00      	cmp	r3, #0
 80112f8:	d002      	beq.n	8011300 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 80112fa:	4802      	ldr	r0, [pc, #8]	@ (8011304 <touchgfx_taskEntry+0x18>)
 80112fc:	f7fe fd58 	bl	800fdb0 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 8011300:	bf00      	nop
 8011302:	bd80      	pop	{r7, pc}
 8011304:	200038f8 	.word	0x200038f8

08011308 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8011308:	b580      	push	{r7, lr}
 801130a:	b082      	sub	sp, #8
 801130c:	af00      	add	r7, sp, #0
 801130e:	6078      	str	r0, [r7, #4]
 8011310:	4a11      	ldr	r2, [pc, #68]	@ (8011358 <_ZN12FrontendHeapD1Ev+0x50>)
 8011312:	687b      	ldr	r3, [r7, #4]
 8011314:	601a      	str	r2, [r3, #0]
 8011316:	687a      	ldr	r2, [r7, #4]
 8011318:	f641 6350 	movw	r3, #7760	@ 0x1e50
 801131c:	4413      	add	r3, r2
 801131e:	4618      	mov	r0, r3
 8011320:	f7fe f920 	bl	800f564 <_ZN19FrontendApplicationD1Ev>
 8011324:	687a      	ldr	r2, [r7, #4]
 8011326:	f641 6330 	movw	r3, #7728	@ 0x1e30
 801132a:	4413      	add	r3, r2
 801132c:	4618      	mov	r0, r3
 801132e:	f000 f827 	bl	8011380 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011332:	687b      	ldr	r3, [r7, #4]
 8011334:	332c      	adds	r3, #44	@ 0x2c
 8011336:	4618      	mov	r0, r3
 8011338:	f000 f844 	bl	80113c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801133c:	687b      	ldr	r3, [r7, #4]
 801133e:	3314      	adds	r3, #20
 8011340:	4618      	mov	r0, r3
 8011342:	f000 f863 	bl	801140c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8011346:	687b      	ldr	r3, [r7, #4]
 8011348:	4618      	mov	r0, r3
 801134a:	f7ff fe9b 	bl	8011084 <_ZN16FrontendHeapBaseD1Ev>
 801134e:	687b      	ldr	r3, [r7, #4]
 8011350:	4618      	mov	r0, r3
 8011352:	3708      	adds	r7, #8
 8011354:	46bd      	mov	sp, r7
 8011356:	bd80      	pop	{r7, pc}
 8011358:	0802a2f4 	.word	0x0802a2f4

0801135c <_ZN12FrontendHeapD0Ev>:
 801135c:	b580      	push	{r7, lr}
 801135e:	b082      	sub	sp, #8
 8011360:	af00      	add	r7, sp, #0
 8011362:	6078      	str	r0, [r7, #4]
 8011364:	6878      	ldr	r0, [r7, #4]
 8011366:	f7ff ffcf 	bl	8011308 <_ZN12FrontendHeapD1Ev>
 801136a:	f641 71ac 	movw	r1, #8108	@ 0x1fac
 801136e:	6878      	ldr	r0, [r7, #4]
 8011370:	f016 fb81 	bl	8027a76 <_ZdlPvj>
 8011374:	687b      	ldr	r3, [r7, #4]
 8011376:	4618      	mov	r0, r3
 8011378:	3708      	adds	r7, #8
 801137a:	46bd      	mov	sp, r7
 801137c:	bd80      	pop	{r7, pc}
	...

08011380 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8011380:	b580      	push	{r7, lr}
 8011382:	b082      	sub	sp, #8
 8011384:	af00      	add	r7, sp, #0
 8011386:	6078      	str	r0, [r7, #4]
 8011388:	4a05      	ldr	r2, [pc, #20]	@ (80113a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 801138a:	687b      	ldr	r3, [r7, #4]
 801138c:	601a      	str	r2, [r3, #0]
 801138e:	687b      	ldr	r3, [r7, #4]
 8011390:	4618      	mov	r0, r3
 8011392:	f000 fbe8 	bl	8011b66 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011396:	687b      	ldr	r3, [r7, #4]
 8011398:	4618      	mov	r0, r3
 801139a:	3708      	adds	r7, #8
 801139c:	46bd      	mov	sp, r7
 801139e:	bd80      	pop	{r7, pc}
 80113a0:	0802a308 	.word	0x0802a308

080113a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80113a4:	b580      	push	{r7, lr}
 80113a6:	b082      	sub	sp, #8
 80113a8:	af00      	add	r7, sp, #0
 80113aa:	6078      	str	r0, [r7, #4]
 80113ac:	6878      	ldr	r0, [r7, #4]
 80113ae:	f7ff ffe7 	bl	8011380 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80113b2:	211c      	movs	r1, #28
 80113b4:	6878      	ldr	r0, [r7, #4]
 80113b6:	f016 fb5e 	bl	8027a76 <_ZdlPvj>
 80113ba:	687b      	ldr	r3, [r7, #4]
 80113bc:	4618      	mov	r0, r3
 80113be:	3708      	adds	r7, #8
 80113c0:	46bd      	mov	sp, r7
 80113c2:	bd80      	pop	{r7, pc}

080113c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80113c4:	b580      	push	{r7, lr}
 80113c6:	b082      	sub	sp, #8
 80113c8:	af00      	add	r7, sp, #0
 80113ca:	6078      	str	r0, [r7, #4]
 80113cc:	4a05      	ldr	r2, [pc, #20]	@ (80113e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80113ce:	687b      	ldr	r3, [r7, #4]
 80113d0:	601a      	str	r2, [r3, #0]
 80113d2:	687b      	ldr	r3, [r7, #4]
 80113d4:	4618      	mov	r0, r3
 80113d6:	f000 fbc6 	bl	8011b66 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80113da:	687b      	ldr	r3, [r7, #4]
 80113dc:	4618      	mov	r0, r3
 80113de:	3708      	adds	r7, #8
 80113e0:	46bd      	mov	sp, r7
 80113e2:	bd80      	pop	{r7, pc}
 80113e4:	0802a33c 	.word	0x0802a33c

080113e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80113e8:	b580      	push	{r7, lr}
 80113ea:	b082      	sub	sp, #8
 80113ec:	af00      	add	r7, sp, #0
 80113ee:	6078      	str	r0, [r7, #4]
 80113f0:	6878      	ldr	r0, [r7, #4]
 80113f2:	f7ff ffe7 	bl	80113c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80113f6:	f641 6104 	movw	r1, #7684	@ 0x1e04
 80113fa:	6878      	ldr	r0, [r7, #4]
 80113fc:	f016 fb3b 	bl	8027a76 <_ZdlPvj>
 8011400:	687b      	ldr	r3, [r7, #4]
 8011402:	4618      	mov	r0, r3
 8011404:	3708      	adds	r7, #8
 8011406:	46bd      	mov	sp, r7
 8011408:	bd80      	pop	{r7, pc}
	...

0801140c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 801140c:	b580      	push	{r7, lr}
 801140e:	b082      	sub	sp, #8
 8011410:	af00      	add	r7, sp, #0
 8011412:	6078      	str	r0, [r7, #4]
 8011414:	4a05      	ldr	r2, [pc, #20]	@ (801142c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8011416:	687b      	ldr	r3, [r7, #4]
 8011418:	601a      	str	r2, [r3, #0]
 801141a:	687b      	ldr	r3, [r7, #4]
 801141c:	4618      	mov	r0, r3
 801141e:	f000 fba2 	bl	8011b66 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8011422:	687b      	ldr	r3, [r7, #4]
 8011424:	4618      	mov	r0, r3
 8011426:	3708      	adds	r7, #8
 8011428:	46bd      	mov	sp, r7
 801142a:	bd80      	pop	{r7, pc}
 801142c:	0802a370 	.word	0x0802a370

08011430 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8011430:	b580      	push	{r7, lr}
 8011432:	b082      	sub	sp, #8
 8011434:	af00      	add	r7, sp, #0
 8011436:	6078      	str	r0, [r7, #4]
 8011438:	6878      	ldr	r0, [r7, #4]
 801143a:	f7ff ffe7 	bl	801140c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 801143e:	2118      	movs	r1, #24
 8011440:	6878      	ldr	r0, [r7, #4]
 8011442:	f016 fb18 	bl	8027a76 <_ZdlPvj>
 8011446:	687b      	ldr	r3, [r7, #4]
 8011448:	4618      	mov	r0, r3
 801144a:	3708      	adds	r7, #8
 801144c:	46bd      	mov	sp, r7
 801144e:	bd80      	pop	{r7, pc}

08011450 <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
 8011450:	b580      	push	{r7, lr}
 8011452:	b082      	sub	sp, #8
 8011454:	af00      	add	r7, sp, #0
 8011456:	6078      	str	r0, [r7, #4]
 8011458:	4a05      	ldr	r2, [pc, #20]	@ (8011470 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 801145a:	687b      	ldr	r3, [r7, #4]
 801145c:	601a      	str	r2, [r3, #0]
 801145e:	687b      	ldr	r3, [r7, #4]
 8011460:	4618      	mov	r0, r3
 8011462:	f7ff fc9d 	bl	8010da0 <_ZN8touchgfx3LCDD1Ev>
 8011466:	687b      	ldr	r3, [r7, #4]
 8011468:	4618      	mov	r0, r3
 801146a:	3708      	adds	r7, #8
 801146c:	46bd      	mov	sp, r7
 801146e:	bd80      	pop	{r7, pc}
 8011470:	0802b0cc 	.word	0x0802b0cc

08011474 <_ZN8touchgfx8LCD16bppD0Ev>:
 8011474:	b580      	push	{r7, lr}
 8011476:	b082      	sub	sp, #8
 8011478:	af00      	add	r7, sp, #0
 801147a:	6078      	str	r0, [r7, #4]
 801147c:	6878      	ldr	r0, [r7, #4]
 801147e:	f7ff ffe7 	bl	8011450 <_ZN8touchgfx8LCD16bppD1Ev>
 8011482:	218c      	movs	r1, #140	@ 0x8c
 8011484:	6878      	ldr	r0, [r7, #4]
 8011486:	f016 faf6 	bl	8027a76 <_ZdlPvj>
 801148a:	687b      	ldr	r3, [r7, #4]
 801148c:	4618      	mov	r0, r3
 801148e:	3708      	adds	r7, #8
 8011490:	46bd      	mov	sp, r7
 8011492:	bd80      	pop	{r7, pc}

08011494 <_Z41__static_initialization_and_destruction_0ii>:
 8011494:	b580      	push	{r7, lr}
 8011496:	b084      	sub	sp, #16
 8011498:	af02      	add	r7, sp, #8
 801149a:	6078      	str	r0, [r7, #4]
 801149c:	6039      	str	r1, [r7, #0]
 801149e:	687b      	ldr	r3, [r7, #4]
 80114a0:	2b01      	cmp	r3, #1
 80114a2:	d119      	bne.n	80114d8 <_Z41__static_initialization_and_destruction_0ii+0x44>
 80114a4:	683b      	ldr	r3, [r7, #0]
 80114a6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80114aa:	4293      	cmp	r3, r2
 80114ac:	d114      	bne.n	80114d8 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 80114ae:	4818      	ldr	r0, [pc, #96]	@ (8011510 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80114b0:	f7ff fed8 	bl	8011264 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 80114b4:	4817      	ldr	r0, [pc, #92]	@ (8011514 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80114b6:	f7fe fff9 	bl	80104ac <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 80114ba:	4817      	ldr	r0, [pc, #92]	@ (8011518 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80114bc:	f00c fdf4 	bl	801e0a8 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 480, 272);
 80114c0:	f44f 7388 	mov.w	r3, #272	@ 0x110
 80114c4:	9301      	str	r3, [sp, #4]
 80114c6:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 80114ca:	9300      	str	r3, [sp, #0]
 80114cc:	4b10      	ldr	r3, [pc, #64]	@ (8011510 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80114ce:	4a12      	ldr	r2, [pc, #72]	@ (8011518 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80114d0:	4910      	ldr	r1, [pc, #64]	@ (8011514 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80114d2:	4812      	ldr	r0, [pc, #72]	@ (801151c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 80114d4:	f7ff fe9a 	bl	801120c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 80114d8:	687b      	ldr	r3, [r7, #4]
 80114da:	2b00      	cmp	r3, #0
 80114dc:	d113      	bne.n	8011506 <_Z41__static_initialization_and_destruction_0ii+0x72>
 80114de:	683b      	ldr	r3, [r7, #0]
 80114e0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80114e4:	4293      	cmp	r3, r2
 80114e6:	d10e      	bne.n	8011506 <_Z41__static_initialization_and_destruction_0ii+0x72>
 80114e8:	480c      	ldr	r0, [pc, #48]	@ (801151c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 80114ea:	f7fe fe0b 	bl	8010104 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 80114ee:	480c      	ldr	r0, [pc, #48]	@ (8011520 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 80114f0:	f7f9 fd66 	bl	800afc0 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 80114f4:	4808      	ldr	r0, [pc, #32]	@ (8011518 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80114f6:	f7ff ffab 	bl	8011450 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 80114fa:	4806      	ldr	r0, [pc, #24]	@ (8011514 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80114fc:	f7ff f800 	bl	8010500 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8011500:	4803      	ldr	r0, [pc, #12]	@ (8011510 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8011502:	f7fe fb5b 	bl	800fbbc <_ZN20STM32TouchControllerD1Ev>
}
 8011506:	bf00      	nop
 8011508:	3708      	adds	r7, #8
 801150a:	46bd      	mov	sp, r7
 801150c:	bd80      	pop	{r7, pc}
 801150e:	bf00      	nop
 8011510:	20002ac4 	.word	0x20002ac4
 8011514:	20002ac8 	.word	0x20002ac8
 8011518:	20003868 	.word	0x20003868
 801151c:	200038f8 	.word	0x200038f8
 8011520:	2000019c 	.word	0x2000019c

08011524 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8011524:	b480      	push	{r7}
 8011526:	b083      	sub	sp, #12
 8011528:	af00      	add	r7, sp, #0
 801152a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 801152c:	2301      	movs	r3, #1
    }
 801152e:	4618      	mov	r0, r3
 8011530:	370c      	adds	r7, #12
 8011532:	46bd      	mov	sp, r7
 8011534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011538:	4770      	bx	lr

0801153a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 801153a:	b480      	push	{r7}
 801153c:	b083      	sub	sp, #12
 801153e:	af00      	add	r7, sp, #0
 8011540:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8011542:	2314      	movs	r3, #20
    }
 8011544:	4618      	mov	r0, r3
 8011546:	370c      	adds	r7, #12
 8011548:	46bd      	mov	sp, r7
 801154a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801154e:	4770      	bx	lr

08011550 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8011550:	b480      	push	{r7}
 8011552:	b083      	sub	sp, #12
 8011554:	af00      	add	r7, sp, #0
 8011556:	6078      	str	r0, [r7, #4]
 8011558:	460b      	mov	r3, r1
 801155a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 801155c:	887a      	ldrh	r2, [r7, #2]
 801155e:	4613      	mov	r3, r2
 8011560:	009b      	lsls	r3, r3, #2
 8011562:	4413      	add	r3, r2
 8011564:	009b      	lsls	r3, r3, #2
 8011566:	3308      	adds	r3, #8
 8011568:	687a      	ldr	r2, [r7, #4]
 801156a:	4413      	add	r3, r2
    }
 801156c:	4618      	mov	r0, r3
 801156e:	370c      	adds	r7, #12
 8011570:	46bd      	mov	sp, r7
 8011572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011576:	4770      	bx	lr

08011578 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8011578:	b480      	push	{r7}
 801157a:	b083      	sub	sp, #12
 801157c:	af00      	add	r7, sp, #0
 801157e:	6078      	str	r0, [r7, #4]
 8011580:	460b      	mov	r3, r1
 8011582:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8011584:	887a      	ldrh	r2, [r7, #2]
 8011586:	4613      	mov	r3, r2
 8011588:	009b      	lsls	r3, r3, #2
 801158a:	4413      	add	r3, r2
 801158c:	009b      	lsls	r3, r3, #2
 801158e:	3308      	adds	r3, #8
 8011590:	687a      	ldr	r2, [r7, #4]
 8011592:	4413      	add	r3, r2
    }
 8011594:	4618      	mov	r0, r3
 8011596:	370c      	adds	r7, #12
 8011598:	46bd      	mov	sp, r7
 801159a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801159e:	4770      	bx	lr

080115a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80115a0:	b480      	push	{r7}
 80115a2:	b083      	sub	sp, #12
 80115a4:	af00      	add	r7, sp, #0
 80115a6:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80115a8:	2301      	movs	r3, #1
    }
 80115aa:	4618      	mov	r0, r3
 80115ac:	370c      	adds	r7, #12
 80115ae:	46bd      	mov	sp, r7
 80115b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115b4:	4770      	bx	lr

080115b6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 80115b6:	b480      	push	{r7}
 80115b8:	b083      	sub	sp, #12
 80115ba:	af00      	add	r7, sp, #0
 80115bc:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 80115be:	f641 53fc 	movw	r3, #7676	@ 0x1dfc
    }
 80115c2:	4618      	mov	r0, r3
 80115c4:	370c      	adds	r7, #12
 80115c6:	46bd      	mov	sp, r7
 80115c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115cc:	4770      	bx	lr

080115ce <_ZN8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 80115ce:	b480      	push	{r7}
 80115d0:	b083      	sub	sp, #12
 80115d2:	af00      	add	r7, sp, #0
 80115d4:	6078      	str	r0, [r7, #4]
 80115d6:	460b      	mov	r3, r1
 80115d8:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80115da:	887b      	ldrh	r3, [r7, #2]
 80115dc:	f641 52fc 	movw	r2, #7676	@ 0x1dfc
 80115e0:	fb02 f303 	mul.w	r3, r2, r3
 80115e4:	3308      	adds	r3, #8
 80115e6:	687a      	ldr	r2, [r7, #4]
 80115e8:	4413      	add	r3, r2
    }
 80115ea:	4618      	mov	r0, r3
 80115ec:	370c      	adds	r7, #12
 80115ee:	46bd      	mov	sp, r7
 80115f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80115f4:	4770      	bx	lr

080115f6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11InitialViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 80115f6:	b480      	push	{r7}
 80115f8:	b083      	sub	sp, #12
 80115fa:	af00      	add	r7, sp, #0
 80115fc:	6078      	str	r0, [r7, #4]
 80115fe:	460b      	mov	r3, r1
 8011600:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011602:	887b      	ldrh	r3, [r7, #2]
 8011604:	f641 52fc 	movw	r2, #7676	@ 0x1dfc
 8011608:	fb02 f303 	mul.w	r3, r2, r3
 801160c:	3308      	adds	r3, #8
 801160e:	687a      	ldr	r2, [r7, #4]
 8011610:	4413      	add	r3, r2
    }
 8011612:	4618      	mov	r0, r3
 8011614:	370c      	adds	r7, #12
 8011616:	46bd      	mov	sp, r7
 8011618:	f85d 7b04 	ldr.w	r7, [sp], #4
 801161c:	4770      	bx	lr

0801161e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 801161e:	b480      	push	{r7}
 8011620:	b083      	sub	sp, #12
 8011622:	af00      	add	r7, sp, #0
 8011624:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8011626:	2301      	movs	r3, #1
    }
 8011628:	4618      	mov	r0, r3
 801162a:	370c      	adds	r7, #12
 801162c:	46bd      	mov	sp, r7
 801162e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011632:	4770      	bx	lr

08011634 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8011634:	b480      	push	{r7}
 8011636:	b083      	sub	sp, #12
 8011638:	af00      	add	r7, sp, #0
 801163a:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 801163c:	2310      	movs	r3, #16
    }
 801163e:	4618      	mov	r0, r3
 8011640:	370c      	adds	r7, #12
 8011642:	46bd      	mov	sp, r7
 8011644:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011648:	4770      	bx	lr

0801164a <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 801164a:	b480      	push	{r7}
 801164c:	b083      	sub	sp, #12
 801164e:	af00      	add	r7, sp, #0
 8011650:	6078      	str	r0, [r7, #4]
 8011652:	460b      	mov	r3, r1
 8011654:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011656:	887b      	ldrh	r3, [r7, #2]
 8011658:	011b      	lsls	r3, r3, #4
 801165a:	3308      	adds	r3, #8
 801165c:	687a      	ldr	r2, [r7, #4]
 801165e:	4413      	add	r3, r2
    }
 8011660:	4618      	mov	r0, r3
 8011662:	370c      	adds	r7, #12
 8011664:	46bd      	mov	sp, r7
 8011666:	f85d 7b04 	ldr.w	r7, [sp], #4
 801166a:	4770      	bx	lr

0801166c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 801166c:	b480      	push	{r7}
 801166e:	b083      	sub	sp, #12
 8011670:	af00      	add	r7, sp, #0
 8011672:	6078      	str	r0, [r7, #4]
 8011674:	460b      	mov	r3, r1
 8011676:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8011678:	887b      	ldrh	r3, [r7, #2]
 801167a:	011b      	lsls	r3, r3, #4
 801167c:	3308      	adds	r3, #8
 801167e:	687a      	ldr	r2, [r7, #4]
 8011680:	4413      	add	r3, r2
    }
 8011682:	4618      	mov	r0, r3
 8011684:	370c      	adds	r7, #12
 8011686:	46bd      	mov	sp, r7
 8011688:	f85d 7b04 	ldr.w	r7, [sp], #4
 801168c:	4770      	bx	lr

0801168e <_GLOBAL__sub_I_touchgfx_init>:
 801168e:	b580      	push	{r7, lr}
 8011690:	af00      	add	r7, sp, #0
 8011692:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8011696:	2001      	movs	r0, #1
 8011698:	f7ff fefc 	bl	8011494 <_Z41__static_initialization_and_destruction_0ii>
 801169c:	bd80      	pop	{r7, pc}

0801169e <_GLOBAL__sub_D_touchgfx_init>:
 801169e:	b580      	push	{r7, lr}
 80116a0:	af00      	add	r7, sp, #0
 80116a2:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 80116a6:	2000      	movs	r0, #0
 80116a8:	f7ff fef4 	bl	8011494 <_Z41__static_initialization_and_destruction_0ii>
 80116ac:	bd80      	pop	{r7, pc}

080116ae <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 80116ae:	b580      	push	{r7, lr}
 80116b0:	b082      	sub	sp, #8
 80116b2:	af00      	add	r7, sp, #0
 80116b4:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 80116b6:	687b      	ldr	r3, [r7, #4]
 80116b8:	681b      	ldr	r3, [r3, #0]
 80116ba:	3320      	adds	r3, #32
 80116bc:	681b      	ldr	r3, [r3, #0]
 80116be:	6878      	ldr	r0, [r7, #4]
 80116c0:	4798      	blx	r3
    }
 80116c2:	bf00      	nop
 80116c4:	3708      	adds	r7, #8
 80116c6:	46bd      	mov	sp, r7
 80116c8:	bd80      	pop	{r7, pc}

080116ca <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 80116ca:	b480      	push	{r7}
 80116cc:	b083      	sub	sp, #12
 80116ce:	af00      	add	r7, sp, #0
 80116d0:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 80116d2:	687b      	ldr	r3, [r7, #4]
 80116d4:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 80116d8:	3301      	adds	r3, #1
 80116da:	b2da      	uxtb	r2, r3
 80116dc:	687b      	ldr	r3, [r7, #4]
 80116de:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 80116e2:	bf00      	nop
 80116e4:	370c      	adds	r7, #12
 80116e6:	46bd      	mov	sp, r7
 80116e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80116ec:	4770      	bx	lr
	...

080116f0 <__NVIC_EnableIRQ>:
{
 80116f0:	b480      	push	{r7}
 80116f2:	b083      	sub	sp, #12
 80116f4:	af00      	add	r7, sp, #0
 80116f6:	4603      	mov	r3, r0
 80116f8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80116fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80116fe:	2b00      	cmp	r3, #0
 8011700:	db0b      	blt.n	801171a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8011702:	79fb      	ldrb	r3, [r7, #7]
 8011704:	f003 021f 	and.w	r2, r3, #31
 8011708:	4907      	ldr	r1, [pc, #28]	@ (8011728 <__NVIC_EnableIRQ+0x38>)
 801170a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801170e:	095b      	lsrs	r3, r3, #5
 8011710:	2001      	movs	r0, #1
 8011712:	fa00 f202 	lsl.w	r2, r0, r2
 8011716:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 801171a:	bf00      	nop
 801171c:	370c      	adds	r7, #12
 801171e:	46bd      	mov	sp, r7
 8011720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011724:	4770      	bx	lr
 8011726:	bf00      	nop
 8011728:	e000e100 	.word	0xe000e100

0801172c <__NVIC_DisableIRQ>:
{
 801172c:	b480      	push	{r7}
 801172e:	b083      	sub	sp, #12
 8011730:	af00      	add	r7, sp, #0
 8011732:	4603      	mov	r3, r0
 8011734:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8011736:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801173a:	2b00      	cmp	r3, #0
 801173c:	db12      	blt.n	8011764 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 801173e:	79fb      	ldrb	r3, [r7, #7]
 8011740:	f003 021f 	and.w	r2, r3, #31
 8011744:	490a      	ldr	r1, [pc, #40]	@ (8011770 <__NVIC_DisableIRQ+0x44>)
 8011746:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801174a:	095b      	lsrs	r3, r3, #5
 801174c:	2001      	movs	r0, #1
 801174e:	fa00 f202 	lsl.w	r2, r0, r2
 8011752:	3320      	adds	r3, #32
 8011754:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8011758:	f3bf 8f4f 	dsb	sy
}
 801175c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 801175e:	f3bf 8f6f 	isb	sy
}
 8011762:	bf00      	nop
}
 8011764:	bf00      	nop
 8011766:	370c      	adds	r7, #12
 8011768:	46bd      	mov	sp, r7
 801176a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801176e:	4770      	bx	lr
 8011770:	e000e100 	.word	0xe000e100

08011774 <__NVIC_SetPriority>:
{
 8011774:	b480      	push	{r7}
 8011776:	b083      	sub	sp, #12
 8011778:	af00      	add	r7, sp, #0
 801177a:	4603      	mov	r3, r0
 801177c:	6039      	str	r1, [r7, #0]
 801177e:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8011780:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011784:	2b00      	cmp	r3, #0
 8011786:	db0a      	blt.n	801179e <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8011788:	683b      	ldr	r3, [r7, #0]
 801178a:	b2da      	uxtb	r2, r3
 801178c:	490c      	ldr	r1, [pc, #48]	@ (80117c0 <__NVIC_SetPriority+0x4c>)
 801178e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8011792:	0112      	lsls	r2, r2, #4
 8011794:	b2d2      	uxtb	r2, r2
 8011796:	440b      	add	r3, r1
 8011798:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 801179c:	e00a      	b.n	80117b4 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801179e:	683b      	ldr	r3, [r7, #0]
 80117a0:	b2da      	uxtb	r2, r3
 80117a2:	4908      	ldr	r1, [pc, #32]	@ (80117c4 <__NVIC_SetPriority+0x50>)
 80117a4:	79fb      	ldrb	r3, [r7, #7]
 80117a6:	f003 030f 	and.w	r3, r3, #15
 80117aa:	3b04      	subs	r3, #4
 80117ac:	0112      	lsls	r2, r2, #4
 80117ae:	b2d2      	uxtb	r2, r2
 80117b0:	440b      	add	r3, r1
 80117b2:	761a      	strb	r2, [r3, #24]
}
 80117b4:	bf00      	nop
 80117b6:	370c      	adds	r7, #12
 80117b8:	46bd      	mov	sp, r7
 80117ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80117be:	4770      	bx	lr
 80117c0:	e000e100 	.word	0xe000e100
 80117c4:	e000ed00 	.word	0xe000ed00

080117c8 <SCB_CleanInvalidateDCache>:
{
 80117c8:	b480      	push	{r7}
 80117ca:	b085      	sub	sp, #20
 80117cc:	af00      	add	r7, sp, #0
    SCB->CSSELR = 0U; /*(0U << 1U) | 0U;*/  /* Level 1 data cache */
 80117ce:	4b20      	ldr	r3, [pc, #128]	@ (8011850 <SCB_CleanInvalidateDCache+0x88>)
 80117d0:	2200      	movs	r2, #0
 80117d2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80117d6:	f3bf 8f4f 	dsb	sy
}
 80117da:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 80117dc:	4b1c      	ldr	r3, [pc, #112]	@ (8011850 <SCB_CleanInvalidateDCache+0x88>)
 80117de:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80117e2:	607b      	str	r3, [r7, #4]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80117e4:	687b      	ldr	r3, [r7, #4]
 80117e6:	0b5b      	lsrs	r3, r3, #13
 80117e8:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80117ec:	60fb      	str	r3, [r7, #12]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80117ee:	687b      	ldr	r3, [r7, #4]
 80117f0:	08db      	lsrs	r3, r3, #3
 80117f2:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80117f6:	60bb      	str	r3, [r7, #8]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80117f8:	68fb      	ldr	r3, [r7, #12]
 80117fa:	015a      	lsls	r2, r3, #5
 80117fc:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 8011800:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 8011802:	68ba      	ldr	r2, [r7, #8]
 8011804:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8011806:	4912      	ldr	r1, [pc, #72]	@ (8011850 <SCB_CleanInvalidateDCache+0x88>)
 8011808:	4313      	orrs	r3, r2
 801180a:	f8c1 3274 	str.w	r3, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 801180e:	68bb      	ldr	r3, [r7, #8]
 8011810:	1e5a      	subs	r2, r3, #1
 8011812:	60ba      	str	r2, [r7, #8]
 8011814:	2b00      	cmp	r3, #0
 8011816:	bf14      	ite	ne
 8011818:	2301      	movne	r3, #1
 801181a:	2300      	moveq	r3, #0
 801181c:	b2db      	uxtb	r3, r3
 801181e:	2b00      	cmp	r3, #0
 8011820:	d1ea      	bne.n	80117f8 <SCB_CleanInvalidateDCache+0x30>
    } while(sets-- != 0U);
 8011822:	68fb      	ldr	r3, [r7, #12]
 8011824:	1e5a      	subs	r2, r3, #1
 8011826:	60fa      	str	r2, [r7, #12]
 8011828:	2b00      	cmp	r3, #0
 801182a:	bf14      	ite	ne
 801182c:	2301      	movne	r3, #1
 801182e:	2300      	moveq	r3, #0
 8011830:	b2db      	uxtb	r3, r3
 8011832:	2b00      	cmp	r3, #0
 8011834:	d1db      	bne.n	80117ee <SCB_CleanInvalidateDCache+0x26>
  __ASM volatile ("dsb 0xF":::"memory");
 8011836:	f3bf 8f4f 	dsb	sy
}
 801183a:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 801183c:	f3bf 8f6f 	isb	sy
}
 8011840:	bf00      	nop
}
 8011842:	bf00      	nop
 8011844:	3714      	adds	r7, #20
 8011846:	46bd      	mov	sp, r7
 8011848:	f85d 7b04 	ldr.w	r7, [sp], #4
 801184c:	4770      	bx	lr
 801184e:	bf00      	nop
 8011850:	e000ed00 	.word	0xe000ed00

08011854 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
static uint16_t lcd_int_active_line;
static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 8011854:	b5b0      	push	{r4, r5, r7, lr}
 8011856:	b082      	sub	sp, #8
 8011858:	af00      	add	r7, sp, #0
 801185a:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 801185c:	687b      	ldr	r3, [r7, #4]
 801185e:	4618      	mov	r0, r3
 8011860:	f000 fed3 	bl	801260a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8011864:	687d      	ldr	r5, [r7, #4]
 8011866:	687b      	ldr	r3, [r7, #4]
 8011868:	681b      	ldr	r3, [r3, #0]
 801186a:	3364      	adds	r3, #100	@ 0x64
 801186c:	681c      	ldr	r4, [r3, #0]
 801186e:	f004 fd55 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 8011872:	4603      	mov	r3, r0
 8011874:	4619      	mov	r1, r3
 8011876:	4628      	mov	r0, r5
 8011878:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 801187a:	687b      	ldr	r3, [r7, #4]
 801187c:	681b      	ldr	r3, [r3, #0]
 801187e:	3380      	adds	r3, #128	@ 0x80
 8011880:	681b      	ldr	r3, [r3, #0]
 8011882:	6878      	ldr	r0, [r7, #4]
 8011884:	4798      	blx	r3
    enableInterrupts();
 8011886:	687b      	ldr	r3, [r7, #4]
 8011888:	681b      	ldr	r3, [r3, #0]
 801188a:	3378      	adds	r3, #120	@ 0x78
 801188c:	681b      	ldr	r3, [r3, #0]
 801188e:	6878      	ldr	r0, [r7, #4]
 8011890:	4798      	blx	r3
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8011892:	6878      	ldr	r0, [r7, #4]
 8011894:	687b      	ldr	r3, [r7, #4]
 8011896:	681b      	ldr	r3, [r3, #0]
 8011898:	3388      	adds	r3, #136	@ 0x88
 801189a:	681c      	ldr	r4, [r3, #0]
 801189c:	4a03      	ldr	r2, [pc, #12]	@ (80118ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x58>)
 801189e:	2300      	movs	r3, #0
 80118a0:	4903      	ldr	r1, [pc, #12]	@ (80118b0 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 80118a2:	47a0      	blx	r4
}
 80118a4:	bf00      	nop
 80118a6:	3708      	adds	r7, #8
 80118a8:	46bd      	mov	sp, r7
 80118aa:	bdb0      	pop	{r4, r5, r7, pc}
 80118ac:	c003fc00 	.word	0xc003fc00
 80118b0:	c0000000 	.word	0xc0000000

080118b4 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 80118b4:	b580      	push	{r7, lr}
 80118b6:	b082      	sub	sp, #8
 80118b8:	af00      	add	r7, sp, #0
 80118ba:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 80118bc:	2109      	movs	r1, #9
 80118be:	205a      	movs	r0, #90	@ 0x5a
 80118c0:	f7ff ff58 	bl	8011774 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 80118c4:	2109      	movs	r1, #9
 80118c6:	2058      	movs	r0, #88	@ 0x58
 80118c8:	f7ff ff54 	bl	8011774 <__NVIC_SetPriority>
}
 80118cc:	bf00      	nop
 80118ce:	3708      	adds	r7, #8
 80118d0:	46bd      	mov	sp, r7
 80118d2:	bd80      	pop	{r7, pc}

080118d4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 80118d4:	b580      	push	{r7, lr}
 80118d6:	b082      	sub	sp, #8
 80118d8:	af00      	add	r7, sp, #0
 80118da:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 80118dc:	205a      	movs	r0, #90	@ 0x5a
 80118de:	f7ff ff07 	bl	80116f0 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 80118e2:	2058      	movs	r0, #88	@ 0x58
 80118e4:	f7ff ff04 	bl	80116f0 <__NVIC_EnableIRQ>
}
 80118e8:	bf00      	nop
 80118ea:	3708      	adds	r7, #8
 80118ec:	46bd      	mov	sp, r7
 80118ee:	bd80      	pop	{r7, pc}

080118f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 80118f0:	b580      	push	{r7, lr}
 80118f2:	b082      	sub	sp, #8
 80118f4:	af00      	add	r7, sp, #0
 80118f6:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 80118f8:	205a      	movs	r0, #90	@ 0x5a
 80118fa:	f7ff ff17 	bl	801172c <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 80118fe:	2058      	movs	r0, #88	@ 0x58
 8011900:	f7ff ff14 	bl	801172c <__NVIC_DisableIRQ>
}
 8011904:	bf00      	nop
 8011906:	3708      	adds	r7, #8
 8011908:	46bd      	mov	sp, r7
 801190a:	bd80      	pop	{r7, pc}

0801190c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 801190c:	b480      	push	{r7}
 801190e:	b083      	sub	sp, #12
 8011910:	af00      	add	r7, sp, #0
 8011912:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8011914:	4b11      	ldr	r3, [pc, #68]	@ (801195c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8011916:	68db      	ldr	r3, [r3, #12]
 8011918:	b29b      	uxth	r3, r3
 801191a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 801191e:	b29b      	uxth	r3, r3
 8011920:	3b01      	subs	r3, #1
 8011922:	b29a      	uxth	r2, r3
 8011924:	4b0e      	ldr	r3, [pc, #56]	@ (8011960 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 8011926:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8011928:	4b0c      	ldr	r3, [pc, #48]	@ (801195c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 801192a:	691b      	ldr	r3, [r3, #16]
 801192c:	b29b      	uxth	r3, r3
 801192e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011932:	b29b      	uxth	r3, r3
 8011934:	3b01      	subs	r3, #1
 8011936:	b29a      	uxth	r2, r3
 8011938:	4b0a      	ldr	r3, [pc, #40]	@ (8011964 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 801193a:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 801193c:	4b08      	ldr	r3, [pc, #32]	@ (8011960 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 801193e:	881a      	ldrh	r2, [r3, #0]
 8011940:	4b06      	ldr	r3, [pc, #24]	@ (801195c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8011942:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8011944:	4b05      	ldr	r3, [pc, #20]	@ (801195c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8011946:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011948:	4a04      	ldr	r2, [pc, #16]	@ (801195c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 801194a:	f043 0301 	orr.w	r3, r3, #1
 801194e:	6353      	str	r3, [r2, #52]	@ 0x34
}
 8011950:	bf00      	nop
 8011952:	370c      	adds	r7, #12
 8011954:	46bd      	mov	sp, r7
 8011956:	f85d 7b04 	ldr.w	r7, [sp], #4
 801195a:	4770      	bx	lr
 801195c:	40016800 	.word	0x40016800
 8011960:	20003974 	.word	0x20003974
 8011964:	20003976 	.word	0x20003976

08011968 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8011968:	b580      	push	{r7, lr}
 801196a:	b082      	sub	sp, #8
 801196c:	af00      	add	r7, sp, #0
 801196e:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 8011970:	687b      	ldr	r3, [r7, #4]
 8011972:	4618      	mov	r0, r3
 8011974:	f000 fe30 	bl	80125d8 <_ZN8touchgfx3HAL10beginFrameEv>
 8011978:	4603      	mov	r3, r0
}
 801197a:	4618      	mov	r0, r3
 801197c:	3708      	adds	r7, #8
 801197e:	46bd      	mov	sp, r7
 8011980:	bd80      	pop	{r7, pc}

08011982 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 8011982:	b580      	push	{r7, lr}
 8011984:	b082      	sub	sp, #8
 8011986:	af00      	add	r7, sp, #0
 8011988:	6078      	str	r0, [r7, #4]
    HAL::endFrame();
 801198a:	687b      	ldr	r3, [r7, #4]
 801198c:	4618      	mov	r0, r3
 801198e:	f000 fe2f 	bl	80125f0 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8011992:	f7fe fc31 	bl	80101f8 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8011996:	bf00      	nop
 8011998:	3708      	adds	r7, #8
 801199a:	46bd      	mov	sp, r7
 801199c:	bd80      	pop	{r7, pc}
	...

080119a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 80119a0:	b480      	push	{r7}
 80119a2:	b083      	sub	sp, #12
 80119a4:	af00      	add	r7, sp, #0
 80119a6:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 80119a8:	4b03      	ldr	r3, [pc, #12]	@ (80119b8 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 80119aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
}
 80119ac:	4618      	mov	r0, r3
 80119ae:	370c      	adds	r7, #12
 80119b0:	46bd      	mov	sp, r7
 80119b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80119b6:	4770      	bx	lr
 80119b8:	40016884 	.word	0x40016884

080119bc <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 80119bc:	b480      	push	{r7}
 80119be:	b083      	sub	sp, #12
 80119c0:	af00      	add	r7, sp, #0
 80119c2:	6078      	str	r0, [r7, #4]
 80119c4:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 80119c6:	4a06      	ldr	r2, [pc, #24]	@ (80119e0 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 80119c8:	683b      	ldr	r3, [r7, #0]
 80119ca:	6293      	str	r3, [r2, #40]	@ 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80119cc:	4b05      	ldr	r3, [pc, #20]	@ (80119e4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 80119ce:	2201      	movs	r2, #1
 80119d0:	625a      	str	r2, [r3, #36]	@ 0x24
}
 80119d2:	bf00      	nop
 80119d4:	370c      	adds	r7, #12
 80119d6:	46bd      	mov	sp, r7
 80119d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80119dc:	4770      	bx	lr
 80119de:	bf00      	nop
 80119e0:	40016884 	.word	0x40016884
 80119e4:	40016800 	.word	0x40016800

080119e8 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80119e8:	b580      	push	{r7, lr}
 80119ea:	b082      	sub	sp, #8
 80119ec:	af00      	add	r7, sp, #0
 80119ee:	6078      	str	r0, [r7, #4]
 80119f0:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 80119f2:	687b      	ldr	r3, [r7, #4]
 80119f4:	6839      	ldr	r1, [r7, #0]
 80119f6:	4618      	mov	r0, r3
 80119f8:	f000 fdb8 	bl	801256c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 80119fc:	bf00      	nop
 80119fe:	3708      	adds	r7, #8
 8011a00:	46bd      	mov	sp, r7
 8011a02:	bd80      	pop	{r7, pc}

08011a04 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8011a04:	b580      	push	{r7, lr}
 8011a06:	b084      	sub	sp, #16
 8011a08:	af00      	add	r7, sp, #0
 8011a0a:	60f8      	str	r0, [r7, #12]
 8011a0c:	60b9      	str	r1, [r7, #8]
 8011a0e:	607a      	str	r2, [r7, #4]
 8011a10:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8011a12:	68f8      	ldr	r0, [r7, #12]
 8011a14:	683b      	ldr	r3, [r7, #0]
 8011a16:	687a      	ldr	r2, [r7, #4]
 8011a18:	68b9      	ldr	r1, [r7, #8]
 8011a1a:	f000 ff18 	bl	801284e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8011a1e:	4603      	mov	r3, r0
}
 8011a20:	4618      	mov	r0, r3
 8011a22:	3710      	adds	r7, #16
 8011a24:	46bd      	mov	sp, r7
 8011a26:	bd80      	pop	{r7, pc}

08011a28 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 8011a28:	b580      	push	{r7, lr}
 8011a2a:	b082      	sub	sp, #8
 8011a2c:	af00      	add	r7, sp, #0
 8011a2e:	6078      	str	r0, [r7, #4]
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8011a30:	4b08      	ldr	r3, [pc, #32]	@ (8011a54 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x2c>)
 8011a32:	695b      	ldr	r3, [r3, #20]
 8011a34:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8011a38:	2b00      	cmp	r3, #0
 8011a3a:	bf14      	ite	ne
 8011a3c:	2301      	movne	r3, #1
 8011a3e:	2300      	moveq	r3, #0
 8011a40:	b2db      	uxtb	r3, r3
 8011a42:	2b00      	cmp	r3, #0
 8011a44:	d001      	beq.n	8011a4a <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 8011a46:	f7ff febf 	bl	80117c8 <SCB_CleanInvalidateDCache>
    }
}
 8011a4a:	bf00      	nop
 8011a4c:	3708      	adds	r7, #8
 8011a4e:	46bd      	mov	sp, r7
 8011a50:	bd80      	pop	{r7, pc}
 8011a52:	bf00      	nop
 8011a54:	e000ed00 	.word	0xe000ed00

08011a58 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 8011a58:	b580      	push	{r7, lr}
 8011a5a:	b082      	sub	sp, #8
 8011a5c:	af00      	add	r7, sp, #0
 8011a5e:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write-Back cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX in
    // order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8011a60:	4b08      	ldr	r3, [pc, #32]	@ (8011a84 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2c>)
 8011a62:	695b      	ldr	r3, [r3, #20]
 8011a64:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8011a68:	2b00      	cmp	r3, #0
 8011a6a:	bf14      	ite	ne
 8011a6c:	2301      	movne	r3, #1
 8011a6e:	2300      	moveq	r3, #0
 8011a70:	b2db      	uxtb	r3, r3
 8011a72:	2b00      	cmp	r3, #0
 8011a74:	d001      	beq.n	8011a7a <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x22>
    {
        SCB_CleanInvalidateDCache();
 8011a76:	f7ff fea7 	bl	80117c8 <SCB_CleanInvalidateDCache>
    }
}
 8011a7a:	bf00      	nop
 8011a7c:	3708      	adds	r7, #8
 8011a7e:	46bd      	mov	sp, r7
 8011a80:	bd80      	pop	{r7, pc}
 8011a82:	bf00      	nop
 8011a84:	e000ed00 	.word	0xe000ed00

08011a88 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8011a88:	b580      	push	{r7, lr}
 8011a8a:	b082      	sub	sp, #8
 8011a8c:	af00      	add	r7, sp, #0
 8011a8e:	6078      	str	r0, [r7, #4]
        if (!HAL::getInstance())
 8011a90:	f7f9 fe50 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 8011a94:	4603      	mov	r3, r0
 8011a96:	2b00      	cmp	r3, #0
 8011a98:	bf0c      	ite	eq
 8011a9a:	2301      	moveq	r3, #1
 8011a9c:	2300      	movne	r3, #0
 8011a9e:	b2db      	uxtb	r3, r3
 8011aa0:	2b00      	cmp	r3, #0
 8011aa2:	d132      	bne.n	8011b0a <HAL_LTDC_LineEventCallback+0x82>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8011aa4:	4b1b      	ldr	r3, [pc, #108]	@ (8011b14 <HAL_LTDC_LineEventCallback+0x8c>)
 8011aa6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8011aa8:	4a1b      	ldr	r2, [pc, #108]	@ (8011b18 <HAL_LTDC_LineEventCallback+0x90>)
 8011aaa:	8812      	ldrh	r2, [r2, #0]
 8011aac:	4293      	cmp	r3, r2
 8011aae:	bf0c      	ite	eq
 8011ab0:	2301      	moveq	r3, #1
 8011ab2:	2300      	movne	r3, #0
 8011ab4:	b2db      	uxtb	r3, r3
 8011ab6:	2b00      	cmp	r3, #0
 8011ab8:	d017      	beq.n	8011aea <HAL_LTDC_LineEventCallback+0x62>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8011aba:	4b18      	ldr	r3, [pc, #96]	@ (8011b1c <HAL_LTDC_LineEventCallback+0x94>)
 8011abc:	881b      	ldrh	r3, [r3, #0]
 8011abe:	4619      	mov	r1, r3
 8011ac0:	6878      	ldr	r0, [r7, #4]
 8011ac2:	f7f5 f803 	bl	8006acc <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 8011ac6:	f7f9 fe35 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 8011aca:	4603      	mov	r3, r0
 8011acc:	4618      	mov	r0, r3
 8011ace:	f7ff fdfc 	bl	80116ca <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 8011ad2:	f7fe fb85 	bl	80101e0 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8011ad6:	f7f9 fe2d 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 8011ada:	4603      	mov	r3, r0
 8011adc:	4618      	mov	r0, r3
 8011ade:	f001 fae1 	bl	80130a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8011ae2:	2000      	movs	r0, #0
 8011ae4:	f7fe f894 	bl	800fc10 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011ae8:	e010      	b.n	8011b0c <HAL_LTDC_LineEventCallback+0x84>
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8011aea:	4b0b      	ldr	r3, [pc, #44]	@ (8011b18 <HAL_LTDC_LineEventCallback+0x90>)
 8011aec:	881b      	ldrh	r3, [r3, #0]
 8011aee:	4619      	mov	r1, r3
 8011af0:	6878      	ldr	r0, [r7, #4]
 8011af2:	f7f4 ffeb 	bl	8006acc <HAL_LTDC_ProgramLineEvent>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
 8011af6:	f7f9 fe1d 	bl	800b734 <_ZN8touchgfx3HAL11getInstanceEv>
 8011afa:	4603      	mov	r3, r0
 8011afc:	4618      	mov	r0, r3
 8011afe:	f7ff fdd6 	bl	80116ae <_ZN8touchgfx3HAL17frontPorchEnteredEv>
            GPIO::clear(GPIO::VSYNC_FREQ);
 8011b02:	2000      	movs	r0, #0
 8011b04:	f7fe f8a0 	bl	800fc48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011b08:	e000      	b.n	8011b0c <HAL_LTDC_LineEventCallback+0x84>
            return;
 8011b0a:	bf00      	nop
        }
    }
 8011b0c:	3708      	adds	r7, #8
 8011b0e:	46bd      	mov	sp, r7
 8011b10:	bd80      	pop	{r7, pc}
 8011b12:	bf00      	nop
 8011b14:	40016800 	.word	0x40016800
 8011b18:	20003974 	.word	0x20003974
 8011b1c:	20003976 	.word	0x20003976

08011b20 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8011b20:	8880      	ldrh	r0, [r0, #4]
 8011b22:	4770      	bx	lr

08011b24 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8011b24:	b570      	push	{r4, r5, r6, lr}
 8011b26:	6803      	ldr	r3, [r0, #0]
 8011b28:	460c      	mov	r4, r1
 8011b2a:	2100      	movs	r1, #0
 8011b2c:	4605      	mov	r5, r0
 8011b2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011b30:	4798      	blx	r3
 8011b32:	4606      	mov	r6, r0
 8011b34:	682b      	ldr	r3, [r5, #0]
 8011b36:	4628      	mov	r0, r5
 8011b38:	1ba4      	subs	r4, r4, r6
 8011b3a:	6a1b      	ldr	r3, [r3, #32]
 8011b3c:	b2a4      	uxth	r4, r4
 8011b3e:	4798      	blx	r3
 8011b40:	fbb4 f0f0 	udiv	r0, r4, r0
 8011b44:	bd70      	pop	{r4, r5, r6, pc}

08011b46 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8011b46:	2300      	movs	r3, #0
 8011b48:	8083      	strh	r3, [r0, #4]
 8011b4a:	4770      	bx	lr

08011b4c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011b4c:	b510      	push	{r4, lr}
 8011b4e:	6803      	ldr	r3, [r0, #0]
 8011b50:	4604      	mov	r4, r0
 8011b52:	8881      	ldrh	r1, [r0, #4]
 8011b54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011b56:	4798      	blx	r3
 8011b58:	88a3      	ldrh	r3, [r4, #4]
 8011b5a:	3301      	adds	r3, #1
 8011b5c:	80a3      	strh	r3, [r4, #4]
 8011b5e:	bd10      	pop	{r4, pc}

08011b60 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8011b60:	6803      	ldr	r3, [r0, #0]
 8011b62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011b64:	4718      	bx	r3

08011b66 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8011b66:	4770      	bx	lr

08011b68 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8011b68:	4a02      	ldr	r2, [pc, #8]	@ (8011b74 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8011b6a:	6002      	str	r2, [r0, #0]
 8011b6c:	2200      	movs	r2, #0
 8011b6e:	8082      	strh	r2, [r0, #4]
 8011b70:	4770      	bx	lr
 8011b72:	bf00      	nop
 8011b74:	0802a4a0 	.word	0x0802a4a0

08011b78 <_ZN8touchgfx14CircleProgress10setPainterERNS_15AbstractPainterE>:
 8011b78:	f8c0 10dc 	str.w	r1, [r0, #220]	@ 0xdc
 8011b7c:	4770      	bx	lr

08011b7e <_ZN8touchgfx14CircleProgress9setCenterEii>:
 8011b7e:	0149      	lsls	r1, r1, #5
 8011b80:	0152      	lsls	r2, r2, #5
 8011b82:	f8c0 10e0 	str.w	r1, [r0, #224]	@ 0xe0
 8011b86:	f8c0 20e4 	str.w	r2, [r0, #228]	@ 0xe4
 8011b8a:	4770      	bx	lr

08011b8c <_ZNK8touchgfx14CircleProgress9getCenterERiS1_>:
 8011b8c:	b530      	push	{r4, r5, lr}
 8011b8e:	f8d0 40e0 	ldr.w	r4, [r0, #224]	@ 0xe0
 8011b92:	2520      	movs	r5, #32
 8011b94:	fb94 f4f5 	sdiv	r4, r4, r5
 8011b98:	600c      	str	r4, [r1, #0]
 8011b9a:	f8d0 30e4 	ldr.w	r3, [r0, #228]	@ 0xe4
 8011b9e:	fb93 f3f5 	sdiv	r3, r3, r5
 8011ba2:	6013      	str	r3, [r2, #0]
 8011ba4:	bd30      	pop	{r4, r5, pc}

08011ba6 <_ZNK8touchgfx14CircleProgress9getRadiusEv>:
 8011ba6:	f8d0 00e8 	ldr.w	r0, [r0, #232]	@ 0xe8
 8011baa:	2320      	movs	r3, #32
 8011bac:	fb90 f0f3 	sdiv	r0, r0, r3
 8011bb0:	4770      	bx	lr

08011bb2 <_ZNK8touchgfx14CircleProgress12getLineWidthEv>:
 8011bb2:	f8d0 00f4 	ldr.w	r0, [r0, #244]	@ 0xf4
 8011bb6:	2320      	movs	r3, #32
 8011bb8:	fb90 f0f3 	sdiv	r0, r0, r3
 8011bbc:	4770      	bx	lr

08011bbe <_ZNK8touchgfx14CircleProgress13getStartAngleEv>:
 8011bbe:	f8d0 00ec 	ldr.w	r0, [r0, #236]	@ 0xec
 8011bc2:	2320      	movs	r3, #32
 8011bc4:	fb90 f0f3 	sdiv	r0, r0, r3
 8011bc8:	b200      	sxth	r0, r0
 8011bca:	4770      	bx	lr

08011bcc <_ZNK8touchgfx14CircleProgress11getEndAngleEv>:
 8011bcc:	f8d0 00fc 	ldr.w	r0, [r0, #252]	@ 0xfc
 8011bd0:	4770      	bx	lr

08011bd2 <_ZN8touchgfx14CircleProgress9setRadiusEi>:
 8011bd2:	0149      	lsls	r1, r1, #5
 8011bd4:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8011bd8:	f8c0 10e8 	str.w	r1, [r0, #232]	@ 0xe8
 8011bdc:	4770      	bx	lr

08011bde <_ZN8touchgfx14CircleProgress12setLineWidthEi>:
 8011bde:	0149      	lsls	r1, r1, #5
 8011be0:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8011be4:	f8c0 10f4 	str.w	r1, [r0, #244]	@ 0xf4
 8011be8:	4770      	bx	lr

08011bea <_ZN8touchgfx14CircleProgress15setCapPrecisionEi>:
 8011bea:	30b4      	adds	r0, #180	@ 0xb4
 8011bec:	f001 bc52 	b.w	8013494 <_ZN8touchgfx6Circle15setCapPrecisionEi>

08011bf0 <_ZN8touchgfx14CircleProgress8setAlphaEh>:
 8011bf0:	b538      	push	{r3, r4, r5, lr}
 8011bf2:	4604      	mov	r4, r0
 8011bf4:	460d      	mov	r5, r1
 8011bf6:	f000 f8d1 	bl	8011d9c <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 8011bfa:	f884 50da 	strb.w	r5, [r4, #218]	@ 0xda
 8011bfe:	bd38      	pop	{r3, r4, r5, pc}

08011c00 <_ZN8touchgfx14CircleProgress28setProgressIndicatorPositionEssss>:
 8011c00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c04:	461d      	mov	r5, r3
 8011c06:	f9bd 6018 	ldrsh.w	r6, [sp, #24]
 8011c0a:	2300      	movs	r3, #0
 8011c0c:	4604      	mov	r4, r0
 8011c0e:	460f      	mov	r7, r1
 8011c10:	4690      	mov	r8, r2
 8011c12:	f8c0 30b8 	str.w	r3, [r0, #184]	@ 0xb8
 8011c16:	4632      	mov	r2, r6
 8011c18:	4629      	mov	r1, r5
 8011c1a:	30b4      	adds	r0, #180	@ 0xb4
 8011c1c:	f7fa fe3b 	bl	800c896 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011c20:	9606      	str	r6, [sp, #24]
 8011c22:	462b      	mov	r3, r5
 8011c24:	4642      	mov	r2, r8
 8011c26:	4639      	mov	r1, r7
 8011c28:	4620      	mov	r0, r4
 8011c2a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011c2e:	f000 b97c 	b.w	8011f2a <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

08011c32 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>:
 8011c32:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8011c34:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8011c36:	4604      	mov	r4, r0
 8011c38:	9101      	str	r1, [sp, #4]
 8011c3a:	4299      	cmp	r1, r3
 8011c3c:	d00b      	beq.n	8011c56 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_+0x24>
 8011c3e:	4601      	mov	r1, r0
 8011c40:	aa01      	add	r2, sp, #4
 8011c42:	a802      	add	r0, sp, #8
 8011c44:	f001 fe16 	bl	8013874 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 8011c48:	9b01      	ldr	r3, [sp, #4]
 8011c4a:	a902      	add	r1, sp, #8
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8011c50:	6823      	ldr	r3, [r4, #0]
 8011c52:	691b      	ldr	r3, [r3, #16]
 8011c54:	4798      	blx	r3
 8011c56:	b004      	add	sp, #16
 8011c58:	bd10      	pop	{r4, pc}

08011c5a <_ZN8touchgfx14CircleProgress8setValueEi>:
 8011c5a:	b570      	push	{r4, r5, r6, lr}
 8011c5c:	4604      	mov	r4, r0
 8011c5e:	f000 f8e8 	bl	8011e32 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 8011c62:	f8d4 60fc 	ldr.w	r6, [r4, #252]	@ 0xfc
 8011c66:	4620      	mov	r0, r4
 8011c68:	f8d4 50ec 	ldr.w	r5, [r4, #236]	@ 0xec
 8011c6c:	0176      	lsls	r6, r6, #5
 8011c6e:	42b5      	cmp	r5, r6
 8011c70:	bfcc      	ite	gt
 8011c72:	1ba9      	subgt	r1, r5, r6
 8011c74:	1b71      	suble	r1, r6, r5
 8011c76:	b289      	uxth	r1, r1
 8011c78:	f000 f8fd 	bl	8011e76 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 8011c7c:	42b5      	cmp	r5, r6
 8011c7e:	4601      	mov	r1, r0
 8011c80:	f104 00b4 	add.w	r0, r4, #180	@ 0xb4
 8011c84:	bfcc      	ite	gt
 8011c86:	1a69      	subgt	r1, r5, r1
 8011c88:	1949      	addle	r1, r1, r5
 8011c8a:	f7ff ffd2 	bl	8011c32 <_ZN8touchgfx6Circle12updateArcEndINS_7CWRUtil2Q5EEEvT_>
 8011c8e:	bd70      	pop	{r4, r5, r6, pc}

08011c90 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>:
 8011c90:	0149      	lsls	r1, r1, #5
 8011c92:	0153      	lsls	r3, r2, #5
 8011c94:	b510      	push	{r4, lr}
 8011c96:	4604      	mov	r4, r0
 8011c98:	f8c0 10ec 	str.w	r1, [r0, #236]	@ 0xec
 8011c9c:	f8c0 30f0 	str.w	r3, [r0, #240]	@ 0xf0
 8011ca0:	f8c0 20fc 	str.w	r2, [r0, #252]	@ 0xfc
 8011ca4:	f000 f877 	bl	8011d96 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8011ca8:	4601      	mov	r1, r0
 8011caa:	4620      	mov	r0, r4
 8011cac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011cb0:	f7ff bfd3 	b.w	8011c5a <_ZN8touchgfx14CircleProgress8setValueEi>

08011cb4 <_ZN8touchgfx14CircleProgressC1Ev>:
 8011cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011cb6:	4604      	mov	r4, r0
 8011cb8:	f000 f964 	bl	8011f84 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 8011cbc:	4b10      	ldr	r3, [pc, #64]	@ (8011d00 <_ZN8touchgfx14CircleProgressC1Ev+0x4c>)
 8011cbe:	f44f 77b4 	mov.w	r7, #360	@ 0x168
 8011cc2:	4625      	mov	r5, r4
 8011cc4:	2600      	movs	r6, #0
 8011cc6:	f845 3bb4 	str.w	r3, [r5], #180
 8011cca:	4628      	mov	r0, r5
 8011ccc:	f001 fbca 	bl	8013464 <_ZN8touchgfx6CircleC1Ev>
 8011cd0:	4629      	mov	r1, r5
 8011cd2:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8011cd6:	f8c4 70fc 	str.w	r7, [r4, #252]	@ 0xfc
 8011cda:	f000 f9b3 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8011cde:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8011ce2:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8011ce6:	4628      	mov	r0, r5
 8011ce8:	f8c4 60b8 	str.w	r6, [r4, #184]	@ 0xb8
 8011cec:	f7fa fdd3 	bl	800c896 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011cf0:	4620      	mov	r0, r4
 8011cf2:	463a      	mov	r2, r7
 8011cf4:	4631      	mov	r1, r6
 8011cf6:	f7ff ffcb 	bl	8011c90 <_ZN8touchgfx14CircleProgress16setStartEndAngleEii>
 8011cfa:	4620      	mov	r0, r4
 8011cfc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011cfe:	bf00      	nop
 8011d00:	0802a4d4 	.word	0x0802a4d4

08011d04 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 8011d04:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	@ 0x5c
 8011d08:	4770      	bx	lr

08011d0a <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 8011d0a:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	@ 0x5e
 8011d0e:	4770      	bx	lr

08011d10 <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 8011d10:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	@ 0x60
 8011d14:	4770      	bx	lr

08011d16 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 8011d16:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	@ 0x62
 8011d1a:	4770      	bx	lr

08011d1c <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 8011d1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011d1e:	461e      	mov	r6, r3
 8011d20:	6803      	ldr	r3, [r0, #0]
 8011d22:	460f      	mov	r7, r1
 8011d24:	4604      	mov	r4, r0
 8011d26:	4615      	mov	r5, r2
 8011d28:	e9c0 1221 	strd	r1, r2, [r0, #132]	@ 0x84
 8011d2c:	f8d0 108c 	ldr.w	r1, [r0, #140]	@ 0x8c
 8011d30:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8011d34:	4798      	blx	r3
 8011d36:	b93e      	cbnz	r6, 8011d48 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 8011d38:	1bed      	subs	r5, r5, r7
 8011d3a:	f8a4 5090 	strh.w	r5, [r4, #144]	@ 0x90
 8011d3e:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011d42:	f8a4 3092 	strh.w	r3, [r4, #146]	@ 0x92
 8011d46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011d48:	f8a4 6090 	strh.w	r6, [r4, #144]	@ 0x90
 8011d4c:	e7f7      	b.n	8011d3e <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

08011d4e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 8011d4e:	b510      	push	{r4, lr}
 8011d50:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
 8011d54:	600c      	str	r4, [r1, #0]
 8011d56:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 8011d5a:	6011      	str	r1, [r2, #0]
 8011d5c:	f8b0 2090 	ldrh.w	r2, [r0, #144]	@ 0x90
 8011d60:	801a      	strh	r2, [r3, #0]
 8011d62:	9b02      	ldr	r3, [sp, #8]
 8011d64:	f8b0 2092 	ldrh.w	r2, [r0, #146]	@ 0x92
 8011d68:	801a      	strh	r2, [r3, #0]
 8011d6a:	bd10      	pop	{r4, pc}

08011d6c <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 8011d6c:	b510      	push	{r4, lr}
 8011d6e:	f8d0 4084 	ldr.w	r4, [r0, #132]	@ 0x84
 8011d72:	600c      	str	r4, [r1, #0]
 8011d74:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 8011d78:	6011      	str	r1, [r2, #0]
 8011d7a:	f8b0 2090 	ldrh.w	r2, [r0, #144]	@ 0x90
 8011d7e:	801a      	strh	r2, [r3, #0]
 8011d80:	bd10      	pop	{r4, pc}

08011d82 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 8011d82:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 8011d86:	600b      	str	r3, [r1, #0]
 8011d88:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8011d8c:	6013      	str	r3, [r2, #0]
 8011d8e:	4770      	bx	lr

08011d90 <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 8011d90:	f8c0 1094 	str.w	r1, [r0, #148]	@ 0x94
 8011d94:	4770      	bx	lr

08011d96 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 8011d96:	f8d0 008c 	ldr.w	r0, [r0, #140]	@ 0x8c
 8011d9a:	4770      	bx	lr

08011d9c <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 8011d9c:	f880 1054 	strb.w	r1, [r0, #84]	@ 0x54
 8011da0:	4770      	bx	lr

08011da2 <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 8011da2:	f890 0054 	ldrb.w	r0, [r0, #84]	@ 0x54
 8011da6:	4770      	bx	lr

08011da8 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 8011da8:	b570      	push	{r4, r5, r6, lr}
 8011daa:	f8d0 5084 	ldr.w	r5, [r0, #132]	@ 0x84
 8011dae:	4604      	mov	r4, r0
 8011db0:	4616      	mov	r6, r2
 8011db2:	428d      	cmp	r5, r1
 8011db4:	bfb8      	it	lt
 8011db6:	460d      	movlt	r5, r1
 8011db8:	f8d0 1088 	ldr.w	r1, [r0, #136]	@ 0x88
 8011dbc:	428d      	cmp	r5, r1
 8011dbe:	bfa8      	it	ge
 8011dc0:	460d      	movge	r5, r1
 8011dc2:	b99a      	cbnz	r2, 8011dec <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 8011dc4:	6803      	ldr	r3, [r0, #0]
 8011dc6:	4629      	mov	r1, r5
 8011dc8:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8011dcc:	4798      	blx	r3
 8011dce:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 8011dd2:	b368      	cbz	r0, 8011e30 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8011dd4:	6803      	ldr	r3, [r0, #0]
 8011dd6:	68db      	ldr	r3, [r3, #12]
 8011dd8:	4798      	blx	r3
 8011dda:	b348      	cbz	r0, 8011e30 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 8011ddc:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 8011de0:	4621      	mov	r1, r4
 8011de2:	6803      	ldr	r3, [r0, #0]
 8011de4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011de8:	689b      	ldr	r3, [r3, #8]
 8011dea:	4718      	bx	r3
 8011dec:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
 8011df0:	2b00      	cmp	r3, #0
 8011df2:	dd08      	ble.n	8011e06 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 8011df4:	f004 fa92 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 8011df8:	4621      	mov	r1, r4
 8011dfa:	3004      	adds	r0, #4
 8011dfc:	f004 fadb 	bl	80163b6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011e00:	2300      	movs	r3, #0
 8011e02:	f884 3098 	strb.w	r3, [r4, #152]	@ 0x98
 8011e06:	6823      	ldr	r3, [r4, #0]
 8011e08:	4620      	mov	r0, r4
 8011e0a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8011e0e:	4798      	blx	r3
 8011e10:	2300      	movs	r3, #0
 8011e12:	f8c4 60a4 	str.w	r6, [r4, #164]	@ 0xa4
 8011e16:	f8c4 30a8 	str.w	r3, [r4, #168]	@ 0xa8
 8011e1a:	e9c4 0527 	strd	r0, r5, [r4, #156]	@ 0x9c
 8011e1e:	f004 fa7d 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 8011e22:	4621      	mov	r1, r4
 8011e24:	3004      	adds	r0, #4
 8011e26:	f004 fb6f 	bl	8016508 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 8011e2a:	2301      	movs	r3, #1
 8011e2c:	f884 3098 	strb.w	r3, [r4, #152]	@ 0x98
 8011e30:	bd70      	pop	{r4, r5, r6, pc}

08011e32 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 8011e32:	b510      	push	{r4, lr}
 8011e34:	f8d0 3084 	ldr.w	r3, [r0, #132]	@ 0x84
 8011e38:	4604      	mov	r4, r0
 8011e3a:	4299      	cmp	r1, r3
 8011e3c:	bfb8      	it	lt
 8011e3e:	4619      	movlt	r1, r3
 8011e40:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
 8011e44:	4299      	cmp	r1, r3
 8011e46:	bfa8      	it	ge
 8011e48:	4619      	movge	r1, r3
 8011e4a:	f8d0 308c 	ldr.w	r3, [r0, #140]	@ 0x8c
 8011e4e:	428b      	cmp	r3, r1
 8011e50:	d010      	beq.n	8011e74 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011e52:	f8c0 108c 	str.w	r1, [r0, #140]	@ 0x8c
 8011e56:	f8d0 00ac 	ldr.w	r0, [r0, #172]	@ 0xac
 8011e5a:	b158      	cbz	r0, 8011e74 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011e5c:	6803      	ldr	r3, [r0, #0]
 8011e5e:	68db      	ldr	r3, [r3, #12]
 8011e60:	4798      	blx	r3
 8011e62:	b138      	cbz	r0, 8011e74 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 8011e64:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
 8011e68:	4621      	mov	r1, r4
 8011e6a:	6803      	ldr	r3, [r0, #0]
 8011e6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011e70:	689b      	ldr	r3, [r3, #8]
 8011e72:	4718      	bx	r3
 8011e74:	bd10      	pop	{r4, pc}

08011e76 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 8011e76:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011e78:	4604      	mov	r4, r0
 8011e7a:	460d      	mov	r5, r1
 8011e7c:	b1a9      	cbz	r1, 8011eaa <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 8011e7e:	f8b0 6092 	ldrh.w	r6, [r0, #146]	@ 0x92
 8011e82:	ab01      	add	r3, sp, #4
 8011e84:	f8b4 1090 	ldrh.w	r1, [r4, #144]	@ 0x90
 8011e88:	f8d4 708c 	ldr.w	r7, [r4, #140]	@ 0x8c
 8011e8c:	1b89      	subs	r1, r1, r6
 8011e8e:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	@ 0x84
 8011e92:	1a12      	subs	r2, r2, r0
 8011e94:	1a38      	subs	r0, r7, r0
 8011e96:	f005 fcd7 	bl	8017848 <_ZN8touchgfx6muldivElllRl>
 8011e9a:	4629      	mov	r1, r5
 8011e9c:	ab01      	add	r3, sp, #4
 8011e9e:	f8b4 2090 	ldrh.w	r2, [r4, #144]	@ 0x90
 8011ea2:	4430      	add	r0, r6
 8011ea4:	f005 fcd0 	bl	8017848 <_ZN8touchgfx6muldivElllRl>
 8011ea8:	b285      	uxth	r5, r0
 8011eaa:	4628      	mov	r0, r5
 8011eac:	b003      	add	sp, #12
 8011eae:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011eb0 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 8011eb0:	b570      	push	{r4, r5, r6, lr}
 8011eb2:	f890 3098 	ldrb.w	r3, [r0, #152]	@ 0x98
 8011eb6:	4604      	mov	r4, r0
 8011eb8:	2b00      	cmp	r3, #0
 8011eba:	d035      	beq.n	8011f28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8011ebc:	f8d0 00a8 	ldr.w	r0, [r0, #168]	@ 0xa8
 8011ec0:	2100      	movs	r1, #0
 8011ec2:	f8d4 5094 	ldr.w	r5, [r4, #148]	@ 0x94
 8011ec6:	3001      	adds	r0, #1
 8011ec8:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	@ 0x9c
 8011ecc:	f8c4 00a8 	str.w	r0, [r4, #168]	@ 0xa8
 8011ed0:	b280      	uxth	r0, r0
 8011ed2:	1ad2      	subs	r2, r2, r3
 8011ed4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8011ed8:	b212      	sxth	r2, r2
 8011eda:	47a8      	blx	r5
 8011edc:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
 8011ee0:	6823      	ldr	r3, [r4, #0]
 8011ee2:	4401      	add	r1, r0
 8011ee4:	4620      	mov	r0, r4
 8011ee6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8011eea:	4798      	blx	r3
 8011eec:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	@ 0xa4
 8011ef0:	429a      	cmp	r2, r3
 8011ef2:	db19      	blt.n	8011f28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8011ef4:	2500      	movs	r5, #0
 8011ef6:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
 8011efa:	f004 fa0f 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 8011efe:	4621      	mov	r1, r4
 8011f00:	3004      	adds	r0, #4
 8011f02:	f004 fa58 	bl	80163b6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8011f06:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 8011f0a:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
 8011f0e:	b158      	cbz	r0, 8011f28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8011f10:	6803      	ldr	r3, [r0, #0]
 8011f12:	68db      	ldr	r3, [r3, #12]
 8011f14:	4798      	blx	r3
 8011f16:	b138      	cbz	r0, 8011f28 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 8011f18:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
 8011f1c:	4621      	mov	r1, r4
 8011f1e:	6803      	ldr	r3, [r0, #0]
 8011f20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011f24:	689b      	ldr	r3, [r3, #8]
 8011f26:	4718      	bx	r3
 8011f28:	bd70      	pop	{r4, r5, r6, pc}

08011f2a <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 8011f2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011f2e:	4604      	mov	r4, r0
 8011f30:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 8011f34:	4698      	mov	r8, r3
 8011f36:	460e      	mov	r6, r1
 8011f38:	4615      	mov	r5, r2
 8011f3a:	f8a4 105c 	strh.w	r1, [r4, #92]	@ 0x5c
 8011f3e:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 8011f42:	4619      	mov	r1, r3
 8011f44:	463a      	mov	r2, r7
 8011f46:	3058      	adds	r0, #88	@ 0x58
 8011f48:	f7fa fca5 	bl	800c896 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011f4c:	4446      	add	r6, r8
 8011f4e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8011f52:	443d      	add	r5, r7
 8011f54:	42b3      	cmp	r3, r6
 8011f56:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011f5a:	bfb8      	it	lt
 8011f5c:	8126      	strhlt	r6, [r4, #8]
 8011f5e:	42ab      	cmp	r3, r5
 8011f60:	bfb8      	it	lt
 8011f62:	8165      	strhlt	r5, [r4, #10]
 8011f64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011f68 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 8011f68:	b510      	push	{r4, lr}
 8011f6a:	4604      	mov	r4, r0
 8011f6c:	302c      	adds	r0, #44	@ 0x2c
 8011f6e:	f002 fa9a 	bl	80144a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011f72:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	@ 0x36
 8011f76:	4620      	mov	r0, r4
 8011f78:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	@ 0x34
 8011f7c:	f7fa fc8b 	bl	800c896 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011f80:	bd10      	pop	{r4, pc}
	...

08011f84 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 8011f84:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8011f86:	4604      	mov	r4, r0
 8011f88:	2500      	movs	r5, #0
 8011f8a:	f7fa fb7b 	bl	800c684 <_ZN8touchgfx8DrawableC1Ev>
 8011f8e:	4b24      	ldr	r3, [pc, #144]	@ (8012020 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 8011f90:	4626      	mov	r6, r4
 8011f92:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8011f96:	2226      	movs	r2, #38	@ 0x26
 8011f98:	4629      	mov	r1, r5
 8011f9a:	62a5      	str	r5, [r4, #40]	@ 0x28
 8011f9c:	f846 3b2c 	str.w	r3, [r6], #44
 8011fa0:	4630      	mov	r0, r6
 8011fa2:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011fa6:	f015 ff9c 	bl	8027ee2 <memset>
 8011faa:	4630      	mov	r0, r6
 8011fac:	f7fa fb6a 	bl	800c684 <_ZN8touchgfx8DrawableC1Ev>
 8011fb0:	a902      	add	r1, sp, #8
 8011fb2:	4b1c      	ldr	r3, [pc, #112]	@ (8012024 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 8011fb4:	4630      	mov	r0, r6
 8011fb6:	f884 7054 	strb.w	r7, [r4, #84]	@ 0x54
 8011fba:	f104 0758 	add.w	r7, r4, #88	@ 0x58
 8011fbe:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8011fc0:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 8011fc4:	f8a4 3052 	strh.w	r3, [r4, #82]	@ 0x52
 8011fc8:	f002 fa6d 	bl	80144a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011fcc:	4638      	mov	r0, r7
 8011fce:	f7fa fb59 	bl	800c684 <_ZN8touchgfx8DrawableC1Ev>
 8011fd2:	4b15      	ldr	r3, [pc, #84]	@ (8012028 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 8011fd4:	4629      	mov	r1, r5
 8011fd6:	4630      	mov	r0, r6
 8011fd8:	65a3      	str	r3, [r4, #88]	@ 0x58
 8011fda:	2364      	movs	r3, #100	@ 0x64
 8011fdc:	f884 5098 	strb.w	r5, [r4, #152]	@ 0x98
 8011fe0:	f8c4 3090 	str.w	r3, [r4, #144]	@ 0x90
 8011fe4:	e9c4 3522 	strd	r3, r5, [r4, #136]	@ 0x88
 8011fe8:	4b10      	ldr	r3, [pc, #64]	@ (801202c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 8011fea:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
 8011fee:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
 8011ff2:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
 8011ff6:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
 8011ffa:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
 8011ffe:	f7fa fbd0 	bl	800c7a2 <_ZN8touchgfx8Drawable4setXEs>
 8012002:	4629      	mov	r1, r5
 8012004:	4630      	mov	r0, r6
 8012006:	f7fa fbdb 	bl	800c7c0 <_ZN8touchgfx8Drawable4setYEs>
 801200a:	4631      	mov	r1, r6
 801200c:	4620      	mov	r0, r4
 801200e:	f000 f819 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012012:	4620      	mov	r0, r4
 8012014:	4639      	mov	r1, r7
 8012016:	f000 f815 	bl	8012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801201a:	4620      	mov	r0, r4
 801201c:	b003      	add	sp, #12
 801201e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012020:	0802a5d8 	.word	0x0802a5d8
 8012024:	0802abc8 	.word	0x0802abc8
 8012028:	0802a6ac 	.word	0x0802a6ac
 801202c:	08017ead 	.word	0x08017ead

08012030 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 8012030:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012032:	2000      	movs	r0, #0
 8012034:	b12b      	cbz	r3, 8012042 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012036:	b920      	cbnz	r0, 8012042 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8012038:	1a5a      	subs	r2, r3, r1
 801203a:	699b      	ldr	r3, [r3, #24]
 801203c:	4250      	negs	r0, r2
 801203e:	4150      	adcs	r0, r2
 8012040:	e7f8      	b.n	8012034 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 8012042:	4770      	bx	lr

08012044 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8012044:	2300      	movs	r3, #0
 8012046:	6148      	str	r0, [r1, #20]
 8012048:	618b      	str	r3, [r1, #24]
 801204a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801204c:	b913      	cbnz	r3, 8012054 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 801204e:	6281      	str	r1, [r0, #40]	@ 0x28
 8012050:	4770      	bx	lr
 8012052:	4613      	mov	r3, r2
 8012054:	699a      	ldr	r2, [r3, #24]
 8012056:	2a00      	cmp	r2, #0
 8012058:	d1fb      	bne.n	8012052 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 801205a:	6199      	str	r1, [r3, #24]
 801205c:	4770      	bx	lr

0801205e <_ZN8touchgfx9Container9removeAllEv>:
 801205e:	2200      	movs	r2, #0
 8012060:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8012062:	b123      	cbz	r3, 801206e <_ZN8touchgfx9Container9removeAllEv+0x10>
 8012064:	6999      	ldr	r1, [r3, #24]
 8012066:	6281      	str	r1, [r0, #40]	@ 0x28
 8012068:	e9c3 2205 	strd	r2, r2, [r3, #20]
 801206c:	e7f8      	b.n	8012060 <_ZN8touchgfx9Container9removeAllEv+0x2>
 801206e:	4770      	bx	lr

08012070 <_ZN8touchgfx9Container6unlinkEv>:
 8012070:	2300      	movs	r3, #0
 8012072:	6283      	str	r3, [r0, #40]	@ 0x28
 8012074:	4770      	bx	lr

08012076 <_ZNK8touchgfx9Container12getSolidRectEv>:
 8012076:	2200      	movs	r2, #0
 8012078:	8002      	strh	r2, [r0, #0]
 801207a:	8042      	strh	r2, [r0, #2]
 801207c:	8082      	strh	r2, [r0, #4]
 801207e:	80c2      	strh	r2, [r0, #6]
 8012080:	4770      	bx	lr

08012082 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8012082:	b570      	push	{r4, r5, r6, lr}
 8012084:	460d      	mov	r5, r1
 8012086:	4616      	mov	r6, r2
 8012088:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801208a:	b13c      	cbz	r4, 801209c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 801208c:	6823      	ldr	r3, [r4, #0]
 801208e:	4620      	mov	r0, r4
 8012090:	4632      	mov	r2, r6
 8012092:	4629      	mov	r1, r5
 8012094:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8012096:	4798      	blx	r3
 8012098:	69a4      	ldr	r4, [r4, #24]
 801209a:	e7f6      	b.n	801208a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 801209c:	bd70      	pop	{r4, r5, r6, pc}

0801209e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 801209e:	b538      	push	{r3, r4, r5, lr}
 80120a0:	460d      	mov	r5, r1
 80120a2:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80120a4:	b134      	cbz	r4, 80120b4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 80120a6:	682b      	ldr	r3, [r5, #0]
 80120a8:	4621      	mov	r1, r4
 80120aa:	4628      	mov	r0, r5
 80120ac:	689b      	ldr	r3, [r3, #8]
 80120ae:	4798      	blx	r3
 80120b0:	69a4      	ldr	r4, [r4, #24]
 80120b2:	e7f7      	b.n	80120a4 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 80120b4:	bd38      	pop	{r3, r4, r5, pc}

080120b6 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 80120b6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80120b8:	b19b      	cbz	r3, 80120e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80120ba:	428b      	cmp	r3, r1
 80120bc:	d109      	bne.n	80120d2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 80120be:	699a      	ldr	r2, [r3, #24]
 80120c0:	2100      	movs	r1, #0
 80120c2:	6159      	str	r1, [r3, #20]
 80120c4:	6282      	str	r2, [r0, #40]	@ 0x28
 80120c6:	b902      	cbnz	r2, 80120ca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 80120c8:	4770      	bx	lr
 80120ca:	6199      	str	r1, [r3, #24]
 80120cc:	4770      	bx	lr
 80120ce:	4613      	mov	r3, r2
 80120d0:	b13a      	cbz	r2, 80120e2 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 80120d2:	699a      	ldr	r2, [r3, #24]
 80120d4:	428a      	cmp	r2, r1
 80120d6:	d1fa      	bne.n	80120ce <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 80120d8:	698a      	ldr	r2, [r1, #24]
 80120da:	619a      	str	r2, [r3, #24]
 80120dc:	2300      	movs	r3, #0
 80120de:	e9c1 3305 	strd	r3, r3, [r1, #20]
 80120e2:	4770      	bx	lr

080120e4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 80120e4:	b410      	push	{r4}
 80120e6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80120e8:	4604      	mov	r4, r0
 80120ea:	b92b      	cbnz	r3, 80120f8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 80120ec:	6803      	ldr	r3, [r0, #0]
 80120ee:	4611      	mov	r1, r2
 80120f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80120f4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80120f6:	4718      	bx	r3
 80120f8:	b941      	cbnz	r1, 801210c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 80120fa:	6193      	str	r3, [r2, #24]
 80120fc:	6282      	str	r2, [r0, #40]	@ 0x28
 80120fe:	6154      	str	r4, [r2, #20]
 8012100:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012104:	4770      	bx	lr
 8012106:	4603      	mov	r3, r0
 8012108:	2800      	cmp	r0, #0
 801210a:	d0f9      	beq.n	8012100 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 801210c:	4299      	cmp	r1, r3
 801210e:	6998      	ldr	r0, [r3, #24]
 8012110:	d1f9      	bne.n	8012106 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8012112:	6190      	str	r0, [r2, #24]
 8012114:	618a      	str	r2, [r1, #24]
 8012116:	e7f2      	b.n	80120fe <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08012118 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8012118:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801211c:	461f      	mov	r7, r3
 801211e:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 8012122:	460d      	mov	r5, r1
 8012124:	4616      	mov	r6, r2
 8012126:	b103      	cbz	r3, 801212a <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8012128:	6038      	str	r0, [r7, #0]
 801212a:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801212c:	b314      	cbz	r4, 8012174 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801212e:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8012132:	b1eb      	cbz	r3, 8012170 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012134:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012138:	428d      	cmp	r5, r1
 801213a:	db19      	blt.n	8012170 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801213c:	b289      	uxth	r1, r1
 801213e:	8923      	ldrh	r3, [r4, #8]
 8012140:	440b      	add	r3, r1
 8012142:	b21b      	sxth	r3, r3
 8012144:	429d      	cmp	r5, r3
 8012146:	da13      	bge.n	8012170 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012148:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801214c:	4296      	cmp	r6, r2
 801214e:	db0f      	blt.n	8012170 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8012150:	b292      	uxth	r2, r2
 8012152:	8963      	ldrh	r3, [r4, #10]
 8012154:	4413      	add	r3, r2
 8012156:	b21b      	sxth	r3, r3
 8012158:	429e      	cmp	r6, r3
 801215a:	da09      	bge.n	8012170 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 801215c:	6823      	ldr	r3, [r4, #0]
 801215e:	1ab2      	subs	r2, r6, r2
 8012160:	1a69      	subs	r1, r5, r1
 8012162:	4620      	mov	r0, r4
 8012164:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 8012168:	b212      	sxth	r2, r2
 801216a:	463b      	mov	r3, r7
 801216c:	b209      	sxth	r1, r1
 801216e:	47c0      	blx	r8
 8012170:	69a4      	ldr	r4, [r4, #24]
 8012172:	e7db      	b.n	801212c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8012174:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012178 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8012178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801217c:	4c6d      	ldr	r4, [pc, #436]	@ (8012334 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 801217e:	b0a1      	sub	sp, #132	@ 0x84
 8012180:	4606      	mov	r6, r0
 8012182:	6824      	ldr	r4, [r4, #0]
 8012184:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8012186:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 801218a:	2400      	movs	r4, #0
 801218c:	9303      	str	r3, [sp, #12]
 801218e:	802c      	strh	r4, [r5, #0]
 8012190:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8012192:	802c      	strh	r4, [r5, #0]
 8012194:	601c      	str	r4, [r3, #0]
 8012196:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801219a:	f7ff ffbd 	bl	8012118 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801219e:	f1b9 0f03 	cmp.w	r9, #3
 80121a2:	f340 80c1 	ble.w	8012328 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 80121a6:	4631      	mov	r1, r6
 80121a8:	a80c      	add	r0, sp, #48	@ 0x30
 80121aa:	f005 fa3d 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80121ae:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 80121b2:	9306      	str	r3, [sp, #24]
 80121b4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80121b8:	9307      	str	r3, [sp, #28]
 80121ba:	9b03      	ldr	r3, [sp, #12]
 80121bc:	f8d3 a000 	ldr.w	sl, [r3]
 80121c0:	f1ba 0f00 	cmp.w	sl, #0
 80121c4:	f000 80b3 	beq.w	801232e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 80121c8:	4651      	mov	r1, sl
 80121ca:	a810      	add	r0, sp, #64	@ 0x40
 80121cc:	f005 fa2c 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80121d0:	2002      	movs	r0, #2
 80121d2:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 80121d6:	9b01      	ldr	r3, [sp, #4]
 80121d8:	9a06      	ldr	r2, [sp, #24]
 80121da:	fb91 f1f0 	sdiv	r1, r1, r0
 80121de:	189d      	adds	r5, r3, r2
 80121e0:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 80121e4:	9a07      	ldr	r2, [sp, #28]
 80121e6:	4419      	add	r1, r3
 80121e8:	9b02      	ldr	r3, [sp, #8]
 80121ea:	4413      	add	r3, r2
 80121ec:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 80121f0:	1a6d      	subs	r5, r5, r1
 80121f2:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 80121f6:	fb92 f2f0 	sdiv	r2, r2, r0
 80121fa:	440a      	add	r2, r1
 80121fc:	1a9b      	subs	r3, r3, r2
 80121fe:	435b      	muls	r3, r3
 8012200:	fb05 3505 	mla	r5, r5, r5, r3
 8012204:	4f4c      	ldr	r7, [pc, #304]	@ (8012338 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 8012206:	ac10      	add	r4, sp, #64	@ 0x40
 8012208:	f1b9 0f0c 	cmp.w	r9, #12
 801220c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 801220e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012210:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012212:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012214:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8012216:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8012218:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 801221c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8012220:	f04f 0303 	mov.w	r3, #3
 8012224:	bfd8      	it	le
 8012226:	f109 32ff 	addle.w	r2, r9, #4294967295
 801222a:	f04f 0400 	mov.w	r4, #0
 801222e:	f8cd 9000 	str.w	r9, [sp]
 8012232:	bfcc      	ite	gt
 8012234:	4698      	movgt	r8, r3
 8012236:	fb92 f8f3 	sdivle	r8, r2, r3
 801223a:	1c63      	adds	r3, r4, #1
 801223c:	aa10      	add	r2, sp, #64	@ 0x40
 801223e:	f004 0401 	and.w	r4, r4, #1
 8012242:	f04f 0b00 	mov.w	fp, #0
 8012246:	9308      	str	r3, [sp, #32]
 8012248:	9b00      	ldr	r3, [sp, #0]
 801224a:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 801224e:	fb93 f3f8 	sdiv	r3, r3, r8
 8012252:	3404      	adds	r4, #4
 8012254:	b29b      	uxth	r3, r3
 8012256:	9304      	str	r3, [sp, #16]
 8012258:	9a04      	ldr	r2, [sp, #16]
 801225a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 801225e:	fb13 f302 	smulbb	r3, r3, r2
 8012262:	9a01      	ldr	r2, [sp, #4]
 8012264:	b29b      	uxth	r3, r3
 8012266:	1899      	adds	r1, r3, r2
 8012268:	9305      	str	r3, [sp, #20]
 801226a:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801226e:	b209      	sxth	r1, r1
 8012270:	4299      	cmp	r1, r3
 8012272:	db4d      	blt.n	8012310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012274:	8932      	ldrh	r2, [r6, #8]
 8012276:	4413      	add	r3, r2
 8012278:	b21b      	sxth	r3, r3
 801227a:	4299      	cmp	r1, r3
 801227c:	da48      	bge.n	8012310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801227e:	9b04      	ldr	r3, [sp, #16]
 8012280:	6827      	ldr	r7, [r4, #0]
 8012282:	fb17 f703 	smulbb	r7, r7, r3
 8012286:	9b02      	ldr	r3, [sp, #8]
 8012288:	b2bf      	uxth	r7, r7
 801228a:	18fa      	adds	r2, r7, r3
 801228c:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012290:	b212      	sxth	r2, r2
 8012292:	429a      	cmp	r2, r3
 8012294:	db3c      	blt.n	8012310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8012296:	8970      	ldrh	r0, [r6, #10]
 8012298:	4403      	add	r3, r0
 801229a:	b21b      	sxth	r3, r3
 801229c:	429a      	cmp	r2, r3
 801229e:	da37      	bge.n	8012310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80122a0:	2300      	movs	r3, #0
 80122a2:	4630      	mov	r0, r6
 80122a4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80122a6:	ab0b      	add	r3, sp, #44	@ 0x2c
 80122a8:	f7ff ff36 	bl	8012118 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80122ac:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80122ae:	b37a      	cbz	r2, 8012310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80122b0:	4552      	cmp	r2, sl
 80122b2:	d02d      	beq.n	8012310 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 80122b4:	4611      	mov	r1, r2
 80122b6:	a80e      	add	r0, sp, #56	@ 0x38
 80122b8:	9209      	str	r2, [sp, #36]	@ 0x24
 80122ba:	f005 f9b5 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80122be:	f04f 0e02 	mov.w	lr, #2
 80122c2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 80122c6:	9a06      	ldr	r2, [sp, #24]
 80122c8:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 80122cc:	9b01      	ldr	r3, [sp, #4]
 80122ce:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 80122d2:	4413      	add	r3, r2
 80122d4:	9a07      	ldr	r2, [sp, #28]
 80122d6:	fb91 f1fe 	sdiv	r1, r1, lr
 80122da:	fb9c fcfe 	sdiv	ip, ip, lr
 80122de:	4401      	add	r1, r0
 80122e0:	1a58      	subs	r0, r3, r1
 80122e2:	9b02      	ldr	r3, [sp, #8]
 80122e4:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 80122e8:	4413      	add	r3, r2
 80122ea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80122ec:	448c      	add	ip, r1
 80122ee:	eba3 030c 	sub.w	r3, r3, ip
 80122f2:	435b      	muls	r3, r3
 80122f4:	fb00 3300 	mla	r3, r0, r0, r3
 80122f8:	42ab      	cmp	r3, r5
 80122fa:	d208      	bcs.n	801230e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 80122fc:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80122fe:	461d      	mov	r5, r3
 8012300:	9803      	ldr	r0, [sp, #12]
 8012302:	6001      	str	r1, [r0, #0]
 8012304:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8012306:	9805      	ldr	r0, [sp, #20]
 8012308:	8008      	strh	r0, [r1, #0]
 801230a:	992b      	ldr	r1, [sp, #172]	@ 0xac
 801230c:	800f      	strh	r7, [r1, #0]
 801230e:	4692      	mov	sl, r2
 8012310:	f10b 0b01 	add.w	fp, fp, #1
 8012314:	3408      	adds	r4, #8
 8012316:	f1bb 0f04 	cmp.w	fp, #4
 801231a:	d19d      	bne.n	8012258 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 801231c:	9b00      	ldr	r3, [sp, #0]
 801231e:	9c08      	ldr	r4, [sp, #32]
 8012320:	444b      	add	r3, r9
 8012322:	4544      	cmp	r4, r8
 8012324:	9300      	str	r3, [sp, #0]
 8012326:	d188      	bne.n	801223a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8012328:	b021      	add	sp, #132	@ 0x84
 801232a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801232e:	f04f 35ff 	mov.w	r5, #4294967295
 8012332:	e767      	b.n	8012204 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8012334:	20003984 	.word	0x20003984
 8012338:	08029604 	.word	0x08029604

0801233c <_ZN8touchgfx4RectaNERKS0_>:
 801233c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012340:	f9b1 7000 	ldrsh.w	r7, [r1]
 8012344:	888c      	ldrh	r4, [r1, #4]
 8012346:	f9b0 9000 	ldrsh.w	r9, [r0]
 801234a:	443c      	add	r4, r7
 801234c:	b2a4      	uxth	r4, r4
 801234e:	fa0f f884 	sxth.w	r8, r4
 8012352:	45c1      	cmp	r9, r8
 8012354:	da2f      	bge.n	80123b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012356:	8882      	ldrh	r2, [r0, #4]
 8012358:	444a      	add	r2, r9
 801235a:	b292      	uxth	r2, r2
 801235c:	fa0f fe82 	sxth.w	lr, r2
 8012360:	4577      	cmp	r7, lr
 8012362:	da28      	bge.n	80123b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012364:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8012368:	88cb      	ldrh	r3, [r1, #6]
 801236a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801236e:	442b      	add	r3, r5
 8012370:	b21b      	sxth	r3, r3
 8012372:	429e      	cmp	r6, r3
 8012374:	da1f      	bge.n	80123b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012376:	88c3      	ldrh	r3, [r0, #6]
 8012378:	4433      	add	r3, r6
 801237a:	b29b      	uxth	r3, r3
 801237c:	fa0f fc83 	sxth.w	ip, r3
 8012380:	4565      	cmp	r5, ip
 8012382:	da18      	bge.n	80123b6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8012384:	454f      	cmp	r7, r9
 8012386:	bfb8      	it	lt
 8012388:	464f      	movlt	r7, r9
 801238a:	42b5      	cmp	r5, r6
 801238c:	bfb8      	it	lt
 801238e:	4635      	movlt	r5, r6
 8012390:	45f0      	cmp	r8, lr
 8012392:	bfd8      	it	le
 8012394:	4622      	movle	r2, r4
 8012396:	1bd2      	subs	r2, r2, r7
 8012398:	8082      	strh	r2, [r0, #4]
 801239a:	884a      	ldrh	r2, [r1, #2]
 801239c:	88c9      	ldrh	r1, [r1, #6]
 801239e:	8007      	strh	r7, [r0, #0]
 80123a0:	440a      	add	r2, r1
 80123a2:	8045      	strh	r5, [r0, #2]
 80123a4:	b292      	uxth	r2, r2
 80123a6:	b211      	sxth	r1, r2
 80123a8:	458c      	cmp	ip, r1
 80123aa:	bfa8      	it	ge
 80123ac:	4613      	movge	r3, r2
 80123ae:	1b5b      	subs	r3, r3, r5
 80123b0:	80c3      	strh	r3, [r0, #6]
 80123b2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80123b6:	2300      	movs	r3, #0
 80123b8:	8003      	strh	r3, [r0, #0]
 80123ba:	8043      	strh	r3, [r0, #2]
 80123bc:	8083      	strh	r3, [r0, #4]
 80123be:	80c3      	strh	r3, [r0, #6]
 80123c0:	e7f7      	b.n	80123b2 <_ZN8touchgfx4RectaNERKS0_+0x76>

080123c2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 80123c2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80123c6:	2b00      	cmp	r3, #0
 80123c8:	dd06      	ble.n	80123d8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 80123ca:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 80123ce:	2800      	cmp	r0, #0
 80123d0:	bfcc      	ite	gt
 80123d2:	2000      	movgt	r0, #0
 80123d4:	2001      	movle	r0, #1
 80123d6:	4770      	bx	lr
 80123d8:	2001      	movs	r0, #1
 80123da:	4770      	bx	lr

080123dc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 80123dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80123e0:	2300      	movs	r3, #0
 80123e2:	4604      	mov	r4, r0
 80123e4:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80123e6:	8003      	strh	r3, [r0, #0]
 80123e8:	8043      	strh	r3, [r0, #2]
 80123ea:	8083      	strh	r3, [r0, #4]
 80123ec:	80c3      	strh	r3, [r0, #6]
 80123ee:	2d00      	cmp	r5, #0
 80123f0:	d040      	beq.n	8012474 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 80123f2:	1d28      	adds	r0, r5, #4
 80123f4:	f7ff ffe5 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80123f8:	b988      	cbnz	r0, 801241e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 80123fa:	4620      	mov	r0, r4
 80123fc:	f7ff ffe1 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012400:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8012404:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8012408:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 801240c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8012410:	b138      	cbz	r0, 8012422 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8012412:	8022      	strh	r2, [r4, #0]
 8012414:	8063      	strh	r3, [r4, #2]
 8012416:	f8a4 e004 	strh.w	lr, [r4, #4]
 801241a:	f8a4 c006 	strh.w	ip, [r4, #6]
 801241e:	69ad      	ldr	r5, [r5, #24]
 8012420:	e7e5      	b.n	80123ee <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8012422:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012426:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801242a:	4290      	cmp	r0, r2
 801242c:	4607      	mov	r7, r0
 801242e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8012432:	460e      	mov	r6, r1
 8012434:	bfa8      	it	ge
 8012436:	4617      	movge	r7, r2
 8012438:	4299      	cmp	r1, r3
 801243a:	4472      	add	r2, lr
 801243c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8012440:	bfa8      	it	ge
 8012442:	461e      	movge	r6, r3
 8012444:	4440      	add	r0, r8
 8012446:	4471      	add	r1, lr
 8012448:	4463      	add	r3, ip
 801244a:	b200      	sxth	r0, r0
 801244c:	8027      	strh	r7, [r4, #0]
 801244e:	b212      	sxth	r2, r2
 8012450:	8066      	strh	r6, [r4, #2]
 8012452:	b209      	sxth	r1, r1
 8012454:	b21b      	sxth	r3, r3
 8012456:	4290      	cmp	r0, r2
 8012458:	bfac      	ite	ge
 801245a:	ebc7 0200 	rsbge	r2, r7, r0
 801245e:	ebc7 0202 	rsblt	r2, r7, r2
 8012462:	4299      	cmp	r1, r3
 8012464:	bfac      	ite	ge
 8012466:	ebc6 0301 	rsbge	r3, r6, r1
 801246a:	ebc6 0303 	rsblt	r3, r6, r3
 801246e:	80a2      	strh	r2, [r4, #4]
 8012470:	80e3      	strh	r3, [r4, #6]
 8012472:	e7d4      	b.n	801241e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8012474:	4620      	mov	r0, r4
 8012476:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801247a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801247a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801247e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8012482:	b383      	cbz	r3, 80124e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012484:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8012486:	b374      	cbz	r4, 80124e6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8012488:	f9b1 5000 	ldrsh.w	r5, [r1]
 801248c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8012490:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8012494:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8012498:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801249c:	b303      	cbz	r3, 80124e0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801249e:	4668      	mov	r0, sp
 80124a0:	1d21      	adds	r1, r4, #4
 80124a2:	f8ad 5000 	strh.w	r5, [sp]
 80124a6:	f8ad 6002 	strh.w	r6, [sp, #2]
 80124aa:	f8ad 7004 	strh.w	r7, [sp, #4]
 80124ae:	f8ad 8006 	strh.w	r8, [sp, #6]
 80124b2:	f7ff ff43 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 80124b6:	4668      	mov	r0, sp
 80124b8:	f7ff ff83 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80124bc:	b980      	cbnz	r0, 80124e0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 80124be:	f8bd 3000 	ldrh.w	r3, [sp]
 80124c2:	4669      	mov	r1, sp
 80124c4:	88a2      	ldrh	r2, [r4, #4]
 80124c6:	4620      	mov	r0, r4
 80124c8:	1a9b      	subs	r3, r3, r2
 80124ca:	88e2      	ldrh	r2, [r4, #6]
 80124cc:	f8ad 3000 	strh.w	r3, [sp]
 80124d0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80124d4:	1a9b      	subs	r3, r3, r2
 80124d6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80124da:	6823      	ldr	r3, [r4, #0]
 80124dc:	689b      	ldr	r3, [r3, #8]
 80124de:	4798      	blx	r3
 80124e0:	69a4      	ldr	r4, [r4, #24]
 80124e2:	2c00      	cmp	r4, #0
 80124e4:	d1d8      	bne.n	8012498 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 80124e6:	b002      	add	sp, #8
 80124e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080124ec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 80124ec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80124ee:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 80124f2:	460d      	mov	r5, r1
 80124f4:	4616      	mov	r6, r2
 80124f6:	b323      	cbz	r3, 8012542 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80124f8:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80124fa:	b314      	cbz	r4, 8012542 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 80124fc:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8012500:	b1eb      	cbz	r3, 801253e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8012502:	6828      	ldr	r0, [r5, #0]
 8012504:	466b      	mov	r3, sp
 8012506:	6869      	ldr	r1, [r5, #4]
 8012508:	c303      	stmia	r3!, {r0, r1}
 801250a:	4668      	mov	r0, sp
 801250c:	1d21      	adds	r1, r4, #4
 801250e:	f7ff ff15 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8012512:	4668      	mov	r0, sp
 8012514:	f7ff ff55 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012518:	b988      	cbnz	r0, 801253e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 801251a:	f8bd 3000 	ldrh.w	r3, [sp]
 801251e:	4669      	mov	r1, sp
 8012520:	88a2      	ldrh	r2, [r4, #4]
 8012522:	4620      	mov	r0, r4
 8012524:	1a9b      	subs	r3, r3, r2
 8012526:	88e2      	ldrh	r2, [r4, #6]
 8012528:	f8ad 3000 	strh.w	r3, [sp]
 801252c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012530:	1a9b      	subs	r3, r3, r2
 8012532:	4632      	mov	r2, r6
 8012534:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012538:	6823      	ldr	r3, [r4, #0]
 801253a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801253c:	4798      	blx	r3
 801253e:	69a4      	ldr	r4, [r4, #24]
 8012540:	e7db      	b.n	80124fa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8012542:	b002      	add	sp, #8
 8012544:	bd70      	pop	{r4, r5, r6, pc}

08012546 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 8012546:	4770      	bx	lr

08012548 <_ZN8touchgfx3HAL10FlushCacheEv>:
 8012548:	4770      	bx	lr

0801254a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 801254a:	6803      	ldr	r3, [r0, #0]
 801254c:	b513      	push	{r0, r1, r4, lr}
 801254e:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8012552:	2300      	movs	r3, #0
 8012554:	e9cd 3300 	strd	r3, r3, [sp]
 8012558:	466b      	mov	r3, sp
 801255a:	47a0      	blx	r4
 801255c:	b002      	add	sp, #8
 801255e:	bd10      	pop	{r4, pc}

08012560 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8012560:	2301      	movs	r3, #1
 8012562:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8012566:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 801256a:	4770      	bx	lr

0801256c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 801256c:	2301      	movs	r3, #1
 801256e:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8012572:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8012576:	4770      	bx	lr

08012578 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8012578:	6843      	ldr	r3, [r0, #4]
 801257a:	2201      	movs	r2, #1
 801257c:	725a      	strb	r2, [r3, #9]
 801257e:	6840      	ldr	r0, [r0, #4]
 8012580:	6803      	ldr	r3, [r0, #0]
 8012582:	691b      	ldr	r3, [r3, #16]
 8012584:	4718      	bx	r3

08012586 <_ZN8touchgfx3HAL8flushDMAEv>:
 8012586:	6840      	ldr	r0, [r0, #4]
 8012588:	6803      	ldr	r3, [r0, #0]
 801258a:	689b      	ldr	r3, [r3, #8]
 801258c:	4718      	bx	r3

0801258e <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801258e:	b530      	push	{r4, r5, lr}
 8012590:	b08b      	sub	sp, #44	@ 0x2c
 8012592:	6804      	ldr	r4, [r0, #0]
 8012594:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8012598:	9509      	str	r5, [sp, #36]	@ 0x24
 801259a:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 801259e:	9508      	str	r5, [sp, #32]
 80125a0:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 80125a4:	9507      	str	r5, [sp, #28]
 80125a6:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 80125aa:	9506      	str	r5, [sp, #24]
 80125ac:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 80125b0:	9505      	str	r5, [sp, #20]
 80125b2:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 80125b6:	9504      	str	r5, [sp, #16]
 80125b8:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 80125bc:	9503      	str	r5, [sp, #12]
 80125be:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 80125c2:	9502      	str	r5, [sp, #8]
 80125c4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 80125c8:	e9cd 3500 	strd	r3, r5, [sp]
 80125cc:	4613      	mov	r3, r2
 80125ce:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 80125d0:	2200      	movs	r2, #0
 80125d2:	47a0      	blx	r4
 80125d4:	b00b      	add	sp, #44	@ 0x2c
 80125d6:	bd30      	pop	{r4, r5, pc}

080125d8 <_ZN8touchgfx3HAL10beginFrameEv>:
 80125d8:	4b04      	ldr	r3, [pc, #16]	@ (80125ec <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 80125da:	781b      	ldrb	r3, [r3, #0]
 80125dc:	b123      	cbz	r3, 80125e8 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 80125de:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 80125e2:	f080 0001 	eor.w	r0, r0, #1
 80125e6:	4770      	bx	lr
 80125e8:	2001      	movs	r0, #1
 80125ea:	4770      	bx	lr
 80125ec:	20003982 	.word	0x20003982

080125f0 <_ZN8touchgfx3HAL8endFrameEv>:
 80125f0:	b510      	push	{r4, lr}
 80125f2:	4604      	mov	r4, r0
 80125f4:	6840      	ldr	r0, [r0, #4]
 80125f6:	6803      	ldr	r3, [r0, #0]
 80125f8:	689b      	ldr	r3, [r3, #8]
 80125fa:	4798      	blx	r3
 80125fc:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8012600:	b113      	cbz	r3, 8012608 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8012602:	2301      	movs	r3, #1
 8012604:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8012608:	bd10      	pop	{r4, pc}

0801260a <_ZN8touchgfx3HAL10initializeEv>:
 801260a:	b510      	push	{r4, lr}
 801260c:	4604      	mov	r4, r0
 801260e:	f7fd fd9b 	bl	8010148 <_ZN8touchgfx10OSWrappers10initializeEv>
 8012612:	f7fd faf5 	bl	800fc00 <_ZN8touchgfx4GPIO4initEv>
 8012616:	6860      	ldr	r0, [r4, #4]
 8012618:	6803      	ldr	r3, [r0, #0]
 801261a:	68db      	ldr	r3, [r3, #12]
 801261c:	4798      	blx	r3
 801261e:	68e0      	ldr	r0, [r4, #12]
 8012620:	6803      	ldr	r3, [r0, #0]
 8012622:	689b      	ldr	r3, [r3, #8]
 8012624:	4798      	blx	r3
 8012626:	6823      	ldr	r3, [r4, #0]
 8012628:	4620      	mov	r0, r4
 801262a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 801262c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012630:	4718      	bx	r3

08012632 <_ZN8touchgfx3HAL9taskEntryEv>:
 8012632:	b508      	push	{r3, lr}
 8012634:	6803      	ldr	r3, [r0, #0]
 8012636:	4604      	mov	r4, r0
 8012638:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 801263c:	4798      	blx	r3
 801263e:	6823      	ldr	r3, [r4, #0]
 8012640:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8012642:	4620      	mov	r0, r4
 8012644:	4798      	blx	r3
 8012646:	f7fd fdf3 	bl	8010230 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 801264a:	6823      	ldr	r3, [r4, #0]
 801264c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 801264e:	e7f8      	b.n	8012642 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08012650 <_ZN8touchgfx3HAL4tickEv>:
 8012650:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8012652:	6803      	ldr	r3, [r0, #0]
 8012654:	4604      	mov	r4, r0
 8012656:	4d5b      	ldr	r5, [pc, #364]	@ (80127c4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8012658:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 801265c:	4798      	blx	r3
 801265e:	2800      	cmp	r0, #0
 8012660:	f000 8095 	beq.w	801278e <_ZN8touchgfx3HAL4tickEv+0x13e>
 8012664:	2001      	movs	r0, #1
 8012666:	2600      	movs	r6, #0
 8012668:	f7fd fad2 	bl	800fc10 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 801266c:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8012670:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8012674:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8012678:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 801267c:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8012680:	b133      	cbz	r3, 8012690 <_ZN8touchgfx3HAL4tickEv+0x40>
 8012682:	6823      	ldr	r3, [r4, #0]
 8012684:	4620      	mov	r0, r4
 8012686:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 801268a:	4798      	blx	r3
 801268c:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8012690:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8012694:	2601      	movs	r6, #1
 8012696:	6862      	ldr	r2, [r4, #4]
 8012698:	f083 0301 	eor.w	r3, r3, #1
 801269c:	702e      	strb	r6, [r5, #0]
 801269e:	7253      	strb	r3, [r2, #9]
 80126a0:	f003 fe3c 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 80126a4:	6803      	ldr	r3, [r0, #0]
 80126a6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80126a8:	4798      	blx	r3
 80126aa:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 80126ae:	b90b      	cbnz	r3, 80126b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80126b0:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 80126b4:	f003 fe32 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 80126b8:	6803      	ldr	r3, [r0, #0]
 80126ba:	695b      	ldr	r3, [r3, #20]
 80126bc:	4798      	blx	r3
 80126be:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 80126c0:	6803      	ldr	r3, [r0, #0]
 80126c2:	691b      	ldr	r3, [r3, #16]
 80126c4:	4798      	blx	r3
 80126c6:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 80126ca:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 80126ce:	3b01      	subs	r3, #1
 80126d0:	b2db      	uxtb	r3, r3
 80126d2:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 80126d6:	b10a      	cbz	r2, 80126dc <_ZN8touchgfx3HAL4tickEv+0x8c>
 80126d8:	2b00      	cmp	r3, #0
 80126da:	d1eb      	bne.n	80126b4 <_ZN8touchgfx3HAL4tickEv+0x64>
 80126dc:	4a3a      	ldr	r2, [pc, #232]	@ (80127c8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 80126de:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 80126e2:	7813      	ldrb	r3, [r2, #0]
 80126e4:	3301      	adds	r3, #1
 80126e6:	b25b      	sxtb	r3, r3
 80126e8:	4299      	cmp	r1, r3
 80126ea:	7013      	strb	r3, [r2, #0]
 80126ec:	dc10      	bgt.n	8012710 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80126ee:	2300      	movs	r3, #0
 80126f0:	68e0      	ldr	r0, [r4, #12]
 80126f2:	a902      	add	r1, sp, #8
 80126f4:	7013      	strb	r3, [r2, #0]
 80126f6:	aa03      	add	r2, sp, #12
 80126f8:	6803      	ldr	r3, [r0, #0]
 80126fa:	68db      	ldr	r3, [r3, #12]
 80126fc:	4798      	blx	r3
 80126fe:	6823      	ldr	r3, [r4, #0]
 8012700:	2800      	cmp	r0, #0
 8012702:	d050      	beq.n	80127a6 <_ZN8touchgfx3HAL4tickEv+0x156>
 8012704:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8012708:	4620      	mov	r0, r4
 801270a:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 801270e:	4798      	blx	r3
 8012710:	2300      	movs	r3, #0
 8012712:	6960      	ldr	r0, [r4, #20]
 8012714:	f88d 3007 	strb.w	r3, [sp, #7]
 8012718:	b158      	cbz	r0, 8012732 <_ZN8touchgfx3HAL4tickEv+0xe2>
 801271a:	6803      	ldr	r3, [r0, #0]
 801271c:	f10d 0107 	add.w	r1, sp, #7
 8012720:	68db      	ldr	r3, [r3, #12]
 8012722:	4798      	blx	r3
 8012724:	b128      	cbz	r0, 8012732 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8012726:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8012728:	f89d 1007 	ldrb.w	r1, [sp, #7]
 801272c:	6803      	ldr	r3, [r0, #0]
 801272e:	68db      	ldr	r3, [r3, #12]
 8012730:	4798      	blx	r3
 8012732:	f104 001c 	add.w	r0, r4, #28
 8012736:	f014 fdf5 	bl	8027324 <_ZN8touchgfx8Gestures4tickEv>
 801273a:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 801273e:	b30b      	cbz	r3, 8012784 <_ZN8touchgfx3HAL4tickEv+0x134>
 8012740:	6920      	ldr	r0, [r4, #16]
 8012742:	6803      	ldr	r3, [r0, #0]
 8012744:	691b      	ldr	r3, [r3, #16]
 8012746:	4798      	blx	r3
 8012748:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 801274a:	4606      	mov	r6, r0
 801274c:	b903      	cbnz	r3, 8012750 <_ZN8touchgfx3HAL4tickEv+0x100>
 801274e:	6760      	str	r0, [r4, #116]	@ 0x74
 8012750:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8012752:	4a1e      	ldr	r2, [pc, #120]	@ (80127cc <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8012754:	1af3      	subs	r3, r6, r3
 8012756:	4293      	cmp	r3, r2
 8012758:	d914      	bls.n	8012784 <_ZN8touchgfx3HAL4tickEv+0x134>
 801275a:	6920      	ldr	r0, [r4, #16]
 801275c:	6803      	ldr	r3, [r0, #0]
 801275e:	699b      	ldr	r3, [r3, #24]
 8012760:	4798      	blx	r3
 8012762:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8012764:	2264      	movs	r2, #100	@ 0x64
 8012766:	1af3      	subs	r3, r6, r3
 8012768:	fbb3 f3f2 	udiv	r3, r3, r2
 801276c:	fbb0 f0f3 	udiv	r0, r0, r3
 8012770:	2800      	cmp	r0, #0
 8012772:	dc1d      	bgt.n	80127b0 <_ZN8touchgfx3HAL4tickEv+0x160>
 8012774:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8012778:	6920      	ldr	r0, [r4, #16]
 801277a:	2100      	movs	r1, #0
 801277c:	6803      	ldr	r3, [r0, #0]
 801277e:	69db      	ldr	r3, [r3, #28]
 8012780:	4798      	blx	r3
 8012782:	6766      	str	r6, [r4, #116]	@ 0x74
 8012784:	f003 fdca 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 8012788:	6803      	ldr	r3, [r0, #0]
 801278a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801278c:	4798      	blx	r3
 801278e:	6823      	ldr	r3, [r4, #0]
 8012790:	4620      	mov	r0, r4
 8012792:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8012796:	4798      	blx	r3
 8012798:	2001      	movs	r0, #1
 801279a:	f7fd fa55 	bl	800fc48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801279e:	2300      	movs	r3, #0
 80127a0:	702b      	strb	r3, [r5, #0]
 80127a2:	b004      	add	sp, #16
 80127a4:	bd70      	pop	{r4, r5, r6, pc}
 80127a6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 80127aa:	4620      	mov	r0, r4
 80127ac:	4798      	blx	r3
 80127ae:	e7af      	b.n	8012710 <_ZN8touchgfx3HAL4tickEv+0xc0>
 80127b0:	2863      	cmp	r0, #99	@ 0x63
 80127b2:	bfcb      	itete	gt
 80127b4:	2300      	movgt	r3, #0
 80127b6:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 80127ba:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 80127be:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 80127c2:	e7d9      	b.n	8012778 <_ZN8touchgfx3HAL4tickEv+0x128>
 80127c4:	20003988 	.word	0x20003988
 80127c8:	20003989 	.word	0x20003989
 80127cc:	05f5e100 	.word	0x05f5e100

080127d0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 80127d0:	b510      	push	{r4, lr}
 80127d2:	4604      	mov	r4, r0
 80127d4:	f7fd fce0 	bl	8010198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 80127d8:	2200      	movs	r2, #0
 80127da:	6863      	ldr	r3, [r4, #4]
 80127dc:	729a      	strb	r2, [r3, #10]
 80127de:	bd10      	pop	{r4, pc}

080127e0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 80127e0:	65c1      	str	r1, [r0, #92]	@ 0x5c
 80127e2:	301c      	adds	r0, #28
 80127e4:	f014 bd9c 	b.w	8027320 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

080127e8 <_ZN8touchgfx3HAL5touchEll>:
 80127e8:	b530      	push	{r4, r5, lr}
 80127ea:	b087      	sub	sp, #28
 80127ec:	4604      	mov	r4, r0
 80127ee:	a804      	add	r0, sp, #16
 80127f0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 80127f4:	f003 fb84 	bl	8015f00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 80127f8:	9b04      	ldr	r3, [sp, #16]
 80127fa:	a906      	add	r1, sp, #24
 80127fc:	a803      	add	r0, sp, #12
 80127fe:	f8ad 300c 	strh.w	r3, [sp, #12]
 8012802:	9b05      	ldr	r3, [sp, #20]
 8012804:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8012808:	f003 fbcc 	bl	8015fa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801280c:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8012810:	f104 001c 	add.w	r0, r4, #28
 8012814:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012818:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 801281c:	b189      	cbz	r1, 8012842 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801281e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8012822:	9300      	str	r3, [sp, #0]
 8012824:	4613      	mov	r3, r2
 8012826:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 801282a:	462a      	mov	r2, r5
 801282c:	f014 fd88 	bl	8027340 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8012830:	b128      	cbz	r0, 801283e <_ZN8touchgfx3HAL5touchEll+0x56>
 8012832:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8012836:	6623      	str	r3, [r4, #96]	@ 0x60
 8012838:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801283c:	6663      	str	r3, [r4, #100]	@ 0x64
 801283e:	b007      	add	sp, #28
 8012840:	bd30      	pop	{r4, r5, pc}
 8012842:	f014 fdbd 	bl	80273c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012846:	2301      	movs	r3, #1
 8012848:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 801284c:	e7f1      	b.n	8012832 <_ZN8touchgfx3HAL5touchEll+0x4a>

0801284e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 801284e:	b510      	push	{r4, lr}
 8012850:	2b00      	cmp	r3, #0
 8012852:	d046      	beq.n	80128e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012854:	ea81 0002 	eor.w	r0, r1, r2
 8012858:	07c4      	lsls	r4, r0, #31
 801285a:	d508      	bpl.n	801286e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 801285c:	440b      	add	r3, r1
 801285e:	3a01      	subs	r2, #1
 8012860:	428b      	cmp	r3, r1
 8012862:	d93e      	bls.n	80128e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8012864:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8012868:	f801 0b01 	strb.w	r0, [r1], #1
 801286c:	e7f8      	b.n	8012860 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 801286e:	07d0      	lsls	r0, r2, #31
 8012870:	bf42      	ittt	mi
 8012872:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8012876:	f103 33ff 	addmi.w	r3, r3, #4294967295
 801287a:	f801 0b01 	strbmi.w	r0, [r1], #1
 801287e:	2b01      	cmp	r3, #1
 8012880:	d911      	bls.n	80128a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8012882:	ea81 0402 	eor.w	r4, r1, r2
 8012886:	4610      	mov	r0, r2
 8012888:	07a4      	lsls	r4, r4, #30
 801288a:	d022      	beq.n	80128d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 801288c:	f023 0401 	bic.w	r4, r3, #1
 8012890:	440c      	add	r4, r1
 8012892:	428c      	cmp	r4, r1
 8012894:	4602      	mov	r2, r0
 8012896:	d904      	bls.n	80128a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8012898:	8812      	ldrh	r2, [r2, #0]
 801289a:	3002      	adds	r0, #2
 801289c:	f821 2b02 	strh.w	r2, [r1], #2
 80128a0:	e7f7      	b.n	8012892 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80128a2:	f003 0301 	and.w	r3, r3, #1
 80128a6:	f023 0003 	bic.w	r0, r3, #3
 80128aa:	4408      	add	r0, r1
 80128ac:	4288      	cmp	r0, r1
 80128ae:	4614      	mov	r4, r2
 80128b0:	d904      	bls.n	80128bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 80128b2:	6824      	ldr	r4, [r4, #0]
 80128b4:	3204      	adds	r2, #4
 80128b6:	f841 4b04 	str.w	r4, [r1], #4
 80128ba:	e7f7      	b.n	80128ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 80128bc:	f003 0303 	and.w	r3, r3, #3
 80128c0:	3a01      	subs	r2, #1
 80128c2:	440b      	add	r3, r1
 80128c4:	428b      	cmp	r3, r1
 80128c6:	d90c      	bls.n	80128e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80128c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80128cc:	f801 0b01 	strb.w	r0, [r1], #1
 80128d0:	e7f8      	b.n	80128c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 80128d2:	0790      	lsls	r0, r2, #30
 80128d4:	d0e7      	beq.n	80128a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80128d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 80128da:	3b02      	subs	r3, #2
 80128dc:	f821 0b02 	strh.w	r0, [r1], #2
 80128e0:	e7e1      	b.n	80128a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80128e2:	2001      	movs	r0, #1
 80128e4:	bd10      	pop	{r4, pc}

080128e6 <_ZN8touchgfx3HAL7noTouchEv>:
 80128e6:	b510      	push	{r4, lr}
 80128e8:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 80128ec:	4604      	mov	r4, r0
 80128ee:	b153      	cbz	r3, 8012906 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 80128f0:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 80128f4:	2101      	movs	r1, #1
 80128f6:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 80128fa:	301c      	adds	r0, #28
 80128fc:	f014 fd60 	bl	80273c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8012900:	2300      	movs	r3, #0
 8012902:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8012906:	bd10      	pop	{r4, pc}

08012908 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8012908:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801290c:	b085      	sub	sp, #20
 801290e:	4604      	mov	r4, r0
 8012910:	2000      	movs	r0, #0
 8012912:	4699      	mov	r9, r3
 8012914:	ad04      	add	r5, sp, #16
 8012916:	460f      	mov	r7, r1
 8012918:	4690      	mov	r8, r2
 801291a:	f845 0d04 	str.w	r0, [r5, #-4]!
 801291e:	69a0      	ldr	r0, [r4, #24]
 8012920:	6806      	ldr	r6, [r0, #0]
 8012922:	9501      	str	r5, [sp, #4]
 8012924:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8012928:	9500      	str	r5, [sp, #0]
 801292a:	6835      	ldr	r5, [r6, #0]
 801292c:	47a8      	blx	r5
 801292e:	4d10      	ldr	r5, [pc, #64]	@ (8012970 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8012930:	4606      	mov	r6, r0
 8012932:	f8a5 9000 	strh.w	r9, [r5]
 8012936:	f7f8 ff09 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 801293a:	6803      	ldr	r3, [r0, #0]
 801293c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801293e:	4798      	blx	r3
 8012940:	b128      	cbz	r0, 801294e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8012942:	2801      	cmp	r0, #1
 8012944:	d00b      	beq.n	801295e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8012946:	4630      	mov	r0, r6
 8012948:	b005      	add	sp, #20
 801294a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801294e:	882b      	ldrh	r3, [r5, #0]
 8012950:	fb08 7203 	mla	r2, r8, r3, r7
 8012954:	9b03      	ldr	r3, [sp, #12]
 8012956:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801295a:	63e3      	str	r3, [r4, #60]	@ 0x3c
 801295c:	e7f3      	b.n	8012946 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801295e:	882a      	ldrh	r2, [r5, #0]
 8012960:	9b03      	ldr	r3, [sp, #12]
 8012962:	fb08 7202 	mla	r2, r8, r2, r7
 8012966:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801296a:	1a9a      	subs	r2, r3, r2
 801296c:	63e2      	str	r2, [r4, #60]	@ 0x3c
 801296e:	e7ea      	b.n	8012946 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8012970:	2000397e 	.word	0x2000397e

08012974 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8012974:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012976:	b08b      	sub	sp, #44	@ 0x2c
 8012978:	4617      	mov	r7, r2
 801297a:	4604      	mov	r4, r0
 801297c:	460e      	mov	r6, r1
 801297e:	461d      	mov	r5, r3
 8012980:	f7f8 fee4 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8012984:	6803      	ldr	r3, [r0, #0]
 8012986:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012988:	4798      	blx	r3
 801298a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 801298e:	9007      	str	r0, [sp, #28]
 8012990:	4631      	mov	r1, r6
 8012992:	6822      	ldr	r2, [r4, #0]
 8012994:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8012998:	4b0c      	ldr	r3, [pc, #48]	@ (80129cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 801299a:	4620      	mov	r0, r4
 801299c:	881b      	ldrh	r3, [r3, #0]
 801299e:	9306      	str	r3, [sp, #24]
 80129a0:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80129a4:	9305      	str	r3, [sp, #20]
 80129a6:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 80129aa:	9304      	str	r3, [sp, #16]
 80129ac:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80129b0:	9303      	str	r3, [sp, #12]
 80129b2:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80129b6:	9302      	str	r3, [sp, #8]
 80129b8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80129bc:	e9cd 5300 	strd	r5, r3, [sp]
 80129c0:	463b      	mov	r3, r7
 80129c2:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 80129c4:	2200      	movs	r2, #0
 80129c6:	47a8      	blx	r5
 80129c8:	b00b      	add	sp, #44	@ 0x2c
 80129ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80129cc:	2000397e 	.word	0x2000397e

080129d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80129d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80129d4:	4698      	mov	r8, r3
 80129d6:	6803      	ldr	r3, [r0, #0]
 80129d8:	b08b      	sub	sp, #44	@ 0x2c
 80129da:	4617      	mov	r7, r2
 80129dc:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 80129de:	460e      	mov	r6, r1
 80129e0:	4b13      	ldr	r3, [pc, #76]	@ (8012a30 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80129e2:	4604      	mov	r4, r0
 80129e4:	f8b3 9000 	ldrh.w	r9, [r3]
 80129e8:	f7f8 feb0 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 80129ec:	6803      	ldr	r3, [r0, #0]
 80129ee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80129f0:	4798      	blx	r3
 80129f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80129f6:	2200      	movs	r2, #0
 80129f8:	4631      	mov	r1, r6
 80129fa:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80129fe:	2302      	movs	r3, #2
 8012a00:	4620      	mov	r0, r4
 8012a02:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8012a06:	2301      	movs	r3, #1
 8012a08:	9305      	str	r3, [sp, #20]
 8012a0a:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8012a0e:	9304      	str	r3, [sp, #16]
 8012a10:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8012a14:	9303      	str	r3, [sp, #12]
 8012a16:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8012a1a:	9302      	str	r3, [sp, #8]
 8012a1c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012a20:	e9cd 8300 	strd	r8, r3, [sp]
 8012a24:	463b      	mov	r3, r7
 8012a26:	47a8      	blx	r5
 8012a28:	b00b      	add	sp, #44	@ 0x2c
 8012a2a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a2e:	bf00      	nop
 8012a30:	2000397e 	.word	0x2000397e

08012a34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8012a34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012a38:	4698      	mov	r8, r3
 8012a3a:	6803      	ldr	r3, [r0, #0]
 8012a3c:	b087      	sub	sp, #28
 8012a3e:	460e      	mov	r6, r1
 8012a40:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8012a42:	4617      	mov	r7, r2
 8012a44:	4b0f      	ldr	r3, [pc, #60]	@ (8012a84 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8012a46:	4604      	mov	r4, r0
 8012a48:	f8b3 9000 	ldrh.w	r9, [r3]
 8012a4c:	f7f8 fe7e 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8012a50:	6803      	ldr	r3, [r0, #0]
 8012a52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012a54:	4798      	blx	r3
 8012a56:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8012a5a:	463a      	mov	r2, r7
 8012a5c:	4631      	mov	r1, r6
 8012a5e:	f8cd 900c 	str.w	r9, [sp, #12]
 8012a62:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8012a66:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8012a6a:	4620      	mov	r0, r4
 8012a6c:	9302      	str	r3, [sp, #8]
 8012a6e:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8012a72:	9301      	str	r3, [sp, #4]
 8012a74:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8012a78:	9300      	str	r3, [sp, #0]
 8012a7a:	4643      	mov	r3, r8
 8012a7c:	47a8      	blx	r5
 8012a7e:	b007      	add	sp, #28
 8012a80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012a84:	2000397e 	.word	0x2000397e

08012a88 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8012a88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a8c:	4604      	mov	r4, r0
 8012a8e:	b08f      	sub	sp, #60	@ 0x3c
 8012a90:	4610      	mov	r0, r2
 8012a92:	460d      	mov	r5, r1
 8012a94:	4691      	mov	r9, r2
 8012a96:	461e      	mov	r6, r3
 8012a98:	f006 f97e 	bl	8018d98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012a9c:	2800      	cmp	r0, #0
 8012a9e:	f000 809d 	beq.w	8012bdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8012aa2:	6823      	ldr	r3, [r4, #0]
 8012aa4:	4620      	mov	r0, r4
 8012aa6:	f8df b198 	ldr.w	fp, [pc, #408]	@ 8012c40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8012aaa:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8012aae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012ab0:	4798      	blx	r3
 8012ab2:	6823      	ldr	r3, [r4, #0]
 8012ab4:	4620      	mov	r0, r4
 8012ab6:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 8012c44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8012aba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012abc:	4798      	blx	r3
 8012abe:	f8bb 3000 	ldrh.w	r3, [fp]
 8012ac2:	4f5c      	ldr	r7, [pc, #368]	@ (8012c34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012ac4:	9301      	str	r3, [sp, #4]
 8012ac6:	f8ba 3000 	ldrh.w	r3, [sl]
 8012aca:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8012ace:	4640      	mov	r0, r8
 8012ad0:	9302      	str	r3, [sp, #8]
 8012ad2:	883b      	ldrh	r3, [r7, #0]
 8012ad4:	9303      	str	r3, [sp, #12]
 8012ad6:	4b58      	ldr	r3, [pc, #352]	@ (8012c38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012ad8:	881a      	ldrh	r2, [r3, #0]
 8012ada:	9305      	str	r3, [sp, #20]
 8012adc:	9204      	str	r2, [sp, #16]
 8012ade:	f006 f9ef 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ae2:	8038      	strh	r0, [r7, #0]
 8012ae4:	4640      	mov	r0, r8
 8012ae6:	f006 fa1f 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012aea:	9b05      	ldr	r3, [sp, #20]
 8012aec:	b280      	uxth	r0, r0
 8012aee:	8018      	strh	r0, [r3, #0]
 8012af0:	4b52      	ldr	r3, [pc, #328]	@ (8012c3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8012af2:	781b      	ldrb	r3, [r3, #0]
 8012af4:	2b00      	cmp	r3, #0
 8012af6:	d174      	bne.n	8012be2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8012af8:	883b      	ldrh	r3, [r7, #0]
 8012afa:	f8aa 0000 	strh.w	r0, [sl]
 8012afe:	f8ab 3000 	strh.w	r3, [fp]
 8012b02:	4648      	mov	r0, r9
 8012b04:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8012b08:	f006 f946 	bl	8018d98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8012b0c:	2200      	movs	r2, #0
 8012b0e:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8012b12:	4611      	mov	r1, r2
 8012b14:	4628      	mov	r0, r5
 8012b16:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8012b1a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8012b1e:	f7f9 fe5e 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
 8012b22:	2301      	movs	r3, #1
 8012b24:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8012b28:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8012b2c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8012b30:	2b00      	cmp	r3, #0
 8012b32:	dd5c      	ble.n	8012bee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012b34:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8012b38:	2b00      	cmp	r3, #0
 8012b3a:	dd58      	ble.n	8012bee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8012b3c:	462a      	mov	r2, r5
 8012b3e:	ab0a      	add	r3, sp, #40	@ 0x28
 8012b40:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012b44:	6851      	ldr	r1, [r2, #4]
 8012b46:	c303      	stmia	r3!, {r0, r1}
 8012b48:	4631      	mov	r1, r6
 8012b4a:	a80a      	add	r0, sp, #40	@ 0x28
 8012b4c:	f7ff fbf6 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8012b50:	4b38      	ldr	r3, [pc, #224]	@ (8012c34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012b52:	2100      	movs	r1, #0
 8012b54:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012b58:	4b37      	ldr	r3, [pc, #220]	@ (8012c38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012b5a:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8012b5e:	aa0a      	add	r2, sp, #40	@ 0x28
 8012b60:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012b64:	910c      	str	r1, [sp, #48]	@ 0x30
 8012b66:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012b6a:	ab08      	add	r3, sp, #32
 8012b6c:	e892 0003 	ldmia.w	r2, {r0, r1}
 8012b70:	e883 0003 	stmia.w	r3, {r0, r1}
 8012b74:	4618      	mov	r0, r3
 8012b76:	a90c      	add	r1, sp, #48	@ 0x30
 8012b78:	f7ff fbe0 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8012b7c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8012b7e:	2b00      	cmp	r3, #0
 8012b80:	d13c      	bne.n	8012bfc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8012b82:	2000      	movs	r0, #0
 8012b84:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8012b88:	2600      	movs	r6, #0
 8012b8a:	696b      	ldr	r3, [r5, #20]
 8012b8c:	a908      	add	r1, sp, #32
 8012b8e:	682a      	ldr	r2, [r5, #0]
 8012b90:	4628      	mov	r0, r5
 8012b92:	9305      	str	r3, [sp, #20]
 8012b94:	616e      	str	r6, [r5, #20]
 8012b96:	6892      	ldr	r2, [r2, #8]
 8012b98:	4790      	blx	r2
 8012b9a:	9b05      	ldr	r3, [sp, #20]
 8012b9c:	4652      	mov	r2, sl
 8012b9e:	4649      	mov	r1, r9
 8012ba0:	616b      	str	r3, [r5, #20]
 8012ba2:	4628      	mov	r0, r5
 8012ba4:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8012ba8:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8012bac:	f7f9 fe17 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
 8012bb0:	9a01      	ldr	r2, [sp, #4]
 8012bb2:	4b23      	ldr	r3, [pc, #140]	@ (8012c40 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8012bb4:	4620      	mov	r0, r4
 8012bb6:	801a      	strh	r2, [r3, #0]
 8012bb8:	9a02      	ldr	r2, [sp, #8]
 8012bba:	4b22      	ldr	r3, [pc, #136]	@ (8012c44 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8012bbc:	801a      	strh	r2, [r3, #0]
 8012bbe:	9a03      	ldr	r2, [sp, #12]
 8012bc0:	4b1c      	ldr	r3, [pc, #112]	@ (8012c34 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8012bc2:	801a      	strh	r2, [r3, #0]
 8012bc4:	4b1c      	ldr	r3, [pc, #112]	@ (8012c38 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8012bc6:	9a04      	ldr	r2, [sp, #16]
 8012bc8:	801a      	strh	r2, [r3, #0]
 8012bca:	6823      	ldr	r3, [r4, #0]
 8012bcc:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8012bd0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012bd2:	4798      	blx	r3
 8012bd4:	6823      	ldr	r3, [r4, #0]
 8012bd6:	4620      	mov	r0, r4
 8012bd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012bda:	4798      	blx	r3
 8012bdc:	b00f      	add	sp, #60	@ 0x3c
 8012bde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012be2:	883b      	ldrh	r3, [r7, #0]
 8012be4:	f8ab 0000 	strh.w	r0, [fp]
 8012be8:	f8aa 3000 	strh.w	r3, [sl]
 8012bec:	e789      	b.n	8012b02 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8012bee:	462a      	mov	r2, r5
 8012bf0:	ab0a      	add	r3, sp, #40	@ 0x28
 8012bf2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8012bf6:	6851      	ldr	r1, [r2, #4]
 8012bf8:	c303      	stmia	r3!, {r0, r1}
 8012bfa:	e7a9      	b.n	8012b50 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8012bfc:	a807      	add	r0, sp, #28
 8012bfe:	f006 fad5 	bl	80191ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012c02:	4606      	mov	r6, r0
 8012c04:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8012c06:	6803      	ldr	r3, [r0, #0]
 8012c08:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012c0a:	4798      	blx	r3
 8012c0c:	4286      	cmp	r6, r0
 8012c0e:	d1b8      	bne.n	8012b82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8012c10:	f7f8 fd9c 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8012c14:	6803      	ldr	r3, [r0, #0]
 8012c16:	4606      	mov	r6, r0
 8012c18:	a807      	add	r0, sp, #28
 8012c1a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012c1c:	9305      	str	r3, [sp, #20]
 8012c1e:	f006 fac5 	bl	80191ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012c22:	9b05      	ldr	r3, [sp, #20]
 8012c24:	4601      	mov	r1, r0
 8012c26:	4630      	mov	r0, r6
 8012c28:	4798      	blx	r3
 8012c2a:	f080 0001 	eor.w	r0, r0, #1
 8012c2e:	b2c0      	uxtb	r0, r0
 8012c30:	e7a8      	b.n	8012b84 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8012c32:	bf00      	nop
 8012c34:	20003978 	.word	0x20003978
 8012c38:	2000397a 	.word	0x2000397a
 8012c3c:	2000397c 	.word	0x2000397c
 8012c40:	2000397e 	.word	0x2000397e
 8012c44:	20003980 	.word	0x20003980

08012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8012c48:	4b07      	ldr	r3, [pc, #28]	@ (8012c68 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8012c4a:	b510      	push	{r4, lr}
 8012c4c:	781b      	ldrb	r3, [r3, #0]
 8012c4e:	4604      	mov	r4, r0
 8012c50:	b13b      	cbz	r3, 8012c62 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012c52:	6803      	ldr	r3, [r0, #0]
 8012c54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012c56:	4798      	blx	r3
 8012c58:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8012c5a:	4283      	cmp	r3, r0
 8012c5c:	d101      	bne.n	8012c62 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8012c5e:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8012c60:	bd10      	pop	{r4, pc}
 8012c62:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8012c64:	e7fc      	b.n	8012c60 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8012c66:	bf00      	nop
 8012c68:	20003982 	.word	0x20003982

08012c6c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c70:	461d      	mov	r5, r3
 8012c72:	b08a      	sub	sp, #40	@ 0x28
 8012c74:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8012c78:	4690      	mov	r8, r2
 8012c7a:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8012c7e:	2400      	movs	r4, #0
 8012c80:	4607      	mov	r7, r0
 8012c82:	fb06 8505 	mla	r5, r6, r5, r8
 8012c86:	9404      	str	r4, [sp, #16]
 8012c88:	f88d 4020 	strb.w	r4, [sp, #32]
 8012c8c:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012c90:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8012c94:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012c98:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012c9c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012ca0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012ca4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012ca8:	f7ff ffce 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012cac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012cb0:	6878      	ldr	r0, [r7, #4]
 8012cb2:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012cb6:	a901      	add	r1, sp, #4
 8012cb8:	9505      	str	r5, [sp, #20]
 8012cba:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8012cbe:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8012cc2:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8012cc6:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8012cca:	6803      	ldr	r3, [r0, #0]
 8012ccc:	685b      	ldr	r3, [r3, #4]
 8012cce:	4798      	blx	r3
 8012cd0:	b00a      	add	sp, #40	@ 0x28
 8012cd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012cd6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8012cd6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cda:	b08b      	sub	sp, #44	@ 0x2c
 8012cdc:	2400      	movs	r4, #0
 8012cde:	4691      	mov	r9, r2
 8012ce0:	461d      	mov	r5, r3
 8012ce2:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8012ce6:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8012cea:	4688      	mov	r8, r1
 8012cec:	4607      	mov	r7, r0
 8012cee:	9404      	str	r4, [sp, #16]
 8012cf0:	fb06 9505 	mla	r5, r6, r5, r9
 8012cf4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012cf8:	f7ff ffa6 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012cfc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012d00:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012d04:	6878      	ldr	r0, [r7, #4]
 8012d06:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012d0a:	a901      	add	r1, sp, #4
 8012d0c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8012d10:	9505      	str	r5, [sp, #20]
 8012d12:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012d16:	f8ad 401c 	strh.w	r4, [sp, #28]
 8012d1a:	f8ad 601e 	strh.w	r6, [sp, #30]
 8012d1e:	f8cd 8010 	str.w	r8, [sp, #16]
 8012d22:	f8ad 4020 	strh.w	r4, [sp, #32]
 8012d26:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8012d2a:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8012d2e:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8012d32:	6803      	ldr	r3, [r0, #0]
 8012d34:	685b      	ldr	r3, [r3, #4]
 8012d36:	4798      	blx	r3
 8012d38:	b00b      	add	sp, #44	@ 0x2c
 8012d3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08012d40 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8012d40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012d44:	b08a      	sub	sp, #40	@ 0x28
 8012d46:	4698      	mov	r8, r3
 8012d48:	2300      	movs	r3, #0
 8012d4a:	4606      	mov	r6, r0
 8012d4c:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 8012d50:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8012d54:	2d0b      	cmp	r5, #11
 8012d56:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 8012d5a:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 8012d5e:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 8012d62:	9304      	str	r3, [sp, #16]
 8012d64:	d137      	bne.n	8012dd6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 8012d66:	2380      	movs	r3, #128	@ 0x80
 8012d68:	f88d 0020 	strb.w	r0, [sp, #32]
 8012d6c:	4630      	mov	r0, r6
 8012d6e:	9203      	str	r2, [sp, #12]
 8012d70:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012d74:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012d78:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012d7c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012d80:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012d84:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8012d88:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012d8c:	f7ff ff5c 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012d90:	2c0b      	cmp	r4, #11
 8012d92:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 8012d96:	f8ad 701e 	strh.w	r7, [sp, #30]
 8012d9a:	bf94      	ite	ls
 8012d9c:	4b19      	ldrls	r3, [pc, #100]	@ (8012e04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8012d9e:	2100      	movhi	r1, #0
 8012da0:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8012da4:	bf98      	it	ls
 8012da6:	5d19      	ldrbls	r1, [r3, r4]
 8012da8:	fb02 8307 	mla	r3, r2, r7, r8
 8012dac:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8012db0:	10c9      	asrs	r1, r1, #3
 8012db2:	fb01 0003 	mla	r0, r1, r3, r0
 8012db6:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8012dba:	a901      	add	r1, sp, #4
 8012dbc:	9005      	str	r0, [sp, #20]
 8012dbe:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8012dc2:	2300      	movs	r3, #0
 8012dc4:	6870      	ldr	r0, [r6, #4]
 8012dc6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8012dca:	6803      	ldr	r3, [r0, #0]
 8012dcc:	685b      	ldr	r3, [r3, #4]
 8012dce:	4798      	blx	r3
 8012dd0:	b00a      	add	sp, #40	@ 0x28
 8012dd2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012dd6:	2d02      	cmp	r5, #2
 8012dd8:	d109      	bne.n	8012dee <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 8012dda:	28ff      	cmp	r0, #255	@ 0xff
 8012ddc:	d105      	bne.n	8012dea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8012dde:	f1bc 0f00 	cmp.w	ip, #0
 8012de2:	bf14      	ite	ne
 8012de4:	2340      	movne	r3, #64	@ 0x40
 8012de6:	2320      	moveq	r3, #32
 8012de8:	e7be      	b.n	8012d68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012dea:	2340      	movs	r3, #64	@ 0x40
 8012dec:	e7bc      	b.n	8012d68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012dee:	28ff      	cmp	r0, #255	@ 0xff
 8012df0:	d105      	bne.n	8012dfe <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 8012df2:	f1bc 0f00 	cmp.w	ip, #0
 8012df6:	bf14      	ite	ne
 8012df8:	2304      	movne	r3, #4
 8012dfa:	2301      	moveq	r3, #1
 8012dfc:	e7b4      	b.n	8012d68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012dfe:	2304      	movs	r3, #4
 8012e00:	e7b2      	b.n	8012d68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012e02:	bf00      	nop
 8012e04:	0802a734 	.word	0x0802a734

08012e08 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8012e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012e0c:	b08b      	sub	sp, #44	@ 0x2c
 8012e0e:	461d      	mov	r5, r3
 8012e10:	2400      	movs	r4, #0
 8012e12:	4688      	mov	r8, r1
 8012e14:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8012e18:	4693      	mov	fp, r2
 8012e1a:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8012e1e:	4607      	mov	r7, r0
 8012e20:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8012e24:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8012e28:	9404      	str	r4, [sp, #16]
 8012e2a:	bf14      	ite	ne
 8012e2c:	2308      	movne	r3, #8
 8012e2e:	2302      	moveq	r3, #2
 8012e30:	fb05 b50a 	mla	r5, r5, sl, fp
 8012e34:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8012e38:	f7ff ff06 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012e3c:	2e0b      	cmp	r6, #11
 8012e3e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8012e42:	a901      	add	r1, sp, #4
 8012e44:	bf98      	it	ls
 8012e46:	4b13      	ldrls	r3, [pc, #76]	@ (8012e94 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8012e48:	f8ad a01e 	strh.w	sl, [sp, #30]
 8012e4c:	bf98      	it	ls
 8012e4e:	5d9c      	ldrbls	r4, [r3, r6]
 8012e50:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8012e54:	10e4      	asrs	r4, r4, #3
 8012e56:	f8cd 8010 	str.w	r8, [sp, #16]
 8012e5a:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012e5e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8012e62:	fb04 0405 	mla	r4, r4, r5, r0
 8012e66:	6878      	ldr	r0, [r7, #4]
 8012e68:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012e6c:	2300      	movs	r3, #0
 8012e6e:	9405      	str	r4, [sp, #20]
 8012e70:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012e74:	f88d 9020 	strb.w	r9, [sp, #32]
 8012e78:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8012e7c:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8012e80:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 8012e84:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 8012e88:	6803      	ldr	r3, [r0, #0]
 8012e8a:	685b      	ldr	r3, [r3, #4]
 8012e8c:	4798      	blx	r3
 8012e8e:	b00b      	add	sp, #44	@ 0x2c
 8012e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012e94:	0802a734 	.word	0x0802a734

08012e98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8012e98:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e9c:	461e      	mov	r6, r3
 8012e9e:	4b0a      	ldr	r3, [pc, #40]	@ (8012ec8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012ea0:	460f      	mov	r7, r1
 8012ea2:	4690      	mov	r8, r2
 8012ea4:	881d      	ldrh	r5, [r3, #0]
 8012ea6:	f7f8 fc51 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8012eaa:	6803      	ldr	r3, [r0, #0]
 8012eac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012eae:	4798      	blx	r3
 8012eb0:	280b      	cmp	r0, #11
 8012eb2:	bf96      	itet	ls
 8012eb4:	4b05      	ldrls	r3, [pc, #20]	@ (8012ecc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8012eb6:	2400      	movhi	r4, #0
 8012eb8:	5c1c      	ldrbls	r4, [r3, r0]
 8012eba:	fb08 7005 	mla	r0, r8, r5, r7
 8012ebe:	10e4      	asrs	r4, r4, #3
 8012ec0:	fb04 6000 	mla	r0, r4, r0, r6
 8012ec4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012ec8:	2000397e 	.word	0x2000397e
 8012ecc:	0802a734 	.word	0x0802a734

08012ed0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012ed0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012ed2:	b08b      	sub	sp, #44	@ 0x2c
 8012ed4:	461f      	mov	r7, r3
 8012ed6:	4604      	mov	r4, r0
 8012ed8:	4616      	mov	r6, r2
 8012eda:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8012ede:	2500      	movs	r5, #0
 8012ee0:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012ee4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8012ee8:	9504      	str	r5, [sp, #16]
 8012eea:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012eee:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012ef2:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012ef6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012efa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012efe:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8012f02:	f88d 3020 	strb.w	r3, [sp, #32]
 8012f06:	f7ff fe9f 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012f0a:	463a      	mov	r2, r7
 8012f0c:	4631      	mov	r1, r6
 8012f0e:	4603      	mov	r3, r0
 8012f10:	4620      	mov	r0, r4
 8012f12:	f7ff ffc1 	bl	8012e98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012f16:	4b0e      	ldr	r3, [pc, #56]	@ (8012f50 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8012f18:	9005      	str	r0, [sp, #20]
 8012f1a:	881b      	ldrh	r3, [r3, #0]
 8012f1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012f20:	f7f8 fc14 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8012f24:	6803      	ldr	r3, [r0, #0]
 8012f26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012f28:	4798      	blx	r3
 8012f2a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8012f2c:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 8012f30:	a901      	add	r1, sp, #4
 8012f32:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8012f36:	9304      	str	r3, [sp, #16]
 8012f38:	6860      	ldr	r0, [r4, #4]
 8012f3a:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8012f3e:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 8012f42:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8012f46:	6803      	ldr	r3, [r0, #0]
 8012f48:	685b      	ldr	r3, [r3, #4]
 8012f4a:	4798      	blx	r3
 8012f4c:	b00b      	add	sp, #44	@ 0x2c
 8012f4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012f50:	2000397e 	.word	0x2000397e

08012f54 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8012f54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012f56:	b08d      	sub	sp, #52	@ 0x34
 8012f58:	2501      	movs	r5, #1
 8012f5a:	4604      	mov	r4, r0
 8012f5c:	466b      	mov	r3, sp
 8012f5e:	9503      	str	r5, [sp, #12]
 8012f60:	e883 0006 	stmia.w	r3, {r1, r2}
 8012f64:	2300      	movs	r3, #0
 8012f66:	f8bd 6000 	ldrh.w	r6, [sp]
 8012f6a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012f6e:	9306      	str	r3, [sp, #24]
 8012f70:	6803      	ldr	r3, [r0, #0]
 8012f72:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012f74:	4798      	blx	r3
 8012f76:	463a      	mov	r2, r7
 8012f78:	4631      	mov	r1, r6
 8012f7a:	4603      	mov	r3, r0
 8012f7c:	4620      	mov	r0, r4
 8012f7e:	f7ff ff8b 	bl	8012e98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012f82:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8012f84:	9004      	str	r0, [sp, #16]
 8012f86:	9307      	str	r3, [sp, #28]
 8012f88:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012f8c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012f90:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012f94:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8012f98:	4b0e      	ldr	r3, [pc, #56]	@ (8012fd4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8012f9a:	881b      	ldrh	r3, [r3, #0]
 8012f9c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8012fa0:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8012fa4:	f7f8 fbd2 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8012fa8:	6803      	ldr	r3, [r0, #0]
 8012faa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012fac:	4798      	blx	r3
 8012fae:	23ff      	movs	r3, #255	@ 0xff
 8012fb0:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8012fb4:	a903      	add	r1, sp, #12
 8012fb6:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8012fba:	6860      	ldr	r0, [r4, #4]
 8012fbc:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8012fc0:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8012fc4:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8012fc8:	6803      	ldr	r3, [r0, #0]
 8012fca:	685b      	ldr	r3, [r3, #4]
 8012fcc:	4798      	blx	r3
 8012fce:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8012fd0:	b00d      	add	sp, #52	@ 0x34
 8012fd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012fd4:	2000397e 	.word	0x2000397e

08012fd8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8012fd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012fdc:	b08c      	sub	sp, #48	@ 0x30
 8012fde:	461e      	mov	r6, r3
 8012fe0:	2300      	movs	r3, #0
 8012fe2:	4604      	mov	r4, r0
 8012fe4:	466d      	mov	r5, sp
 8012fe6:	9306      	str	r3, [sp, #24]
 8012fe8:	6803      	ldr	r3, [r0, #0]
 8012fea:	e885 0006 	stmia.w	r5, {r1, r2}
 8012fee:	2501      	movs	r5, #1
 8012ff0:	f8bd 7000 	ldrh.w	r7, [sp]
 8012ff4:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8012ff8:	9503      	str	r5, [sp, #12]
 8012ffa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012ffc:	4798      	blx	r3
 8012ffe:	4642      	mov	r2, r8
 8013000:	4639      	mov	r1, r7
 8013002:	4603      	mov	r3, r0
 8013004:	4620      	mov	r0, r4
 8013006:	f7ff ff47 	bl	8012e98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801300a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801300e:	9004      	str	r0, [sp, #16]
 8013010:	f8ad 3020 	strh.w	r3, [sp, #32]
 8013014:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8013018:	9607      	str	r6, [sp, #28]
 801301a:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801301e:	4b10      	ldr	r3, [pc, #64]	@ (8013060 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8013020:	881b      	ldrh	r3, [r3, #0]
 8013022:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8013026:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8013028:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 801302c:	f7f8 fb8e 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8013030:	6803      	ldr	r3, [r0, #0]
 8013032:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013034:	4798      	blx	r3
 8013036:	23ff      	movs	r3, #255	@ 0xff
 8013038:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 801303c:	a903      	add	r1, sp, #12
 801303e:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8013042:	6860      	ldr	r0, [r4, #4]
 8013044:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8013048:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 801304c:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8013050:	6803      	ldr	r3, [r0, #0]
 8013052:	685b      	ldr	r3, [r3, #4]
 8013054:	4798      	blx	r3
 8013056:	4630      	mov	r0, r6
 8013058:	b00c      	add	sp, #48	@ 0x30
 801305a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801305e:	bf00      	nop
 8013060:	2000397e 	.word	0x2000397e

08013064 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8013064:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013066:	b085      	sub	sp, #20
 8013068:	4605      	mov	r5, r0
 801306a:	ac02      	add	r4, sp, #8
 801306c:	e884 0006 	stmia.w	r4, {r1, r2}
 8013070:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8013074:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8013078:	f7ff fde6 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801307c:	4631      	mov	r1, r6
 801307e:	4603      	mov	r3, r0
 8013080:	463a      	mov	r2, r7
 8013082:	4628      	mov	r0, r5
 8013084:	f7ff ff08 	bl	8012e98 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8013088:	4a05      	ldr	r2, [pc, #20]	@ (80130a0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801308a:	682b      	ldr	r3, [r5, #0]
 801308c:	8812      	ldrh	r2, [r2, #0]
 801308e:	9200      	str	r2, [sp, #0]
 8013090:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8013092:	4603      	mov	r3, r0
 8013094:	4628      	mov	r0, r5
 8013096:	e894 0006 	ldmia.w	r4, {r1, r2}
 801309a:	47b0      	blx	r6
 801309c:	b005      	add	sp, #20
 801309e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80130a0:	2000397e 	.word	0x2000397e

080130a4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80130a4:	b570      	push	{r4, r5, r6, lr}
 80130a6:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 80130aa:	4604      	mov	r4, r0
 80130ac:	b19b      	cbz	r3, 80130d6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80130ae:	2002      	movs	r0, #2
 80130b0:	f7fc fde6 	bl	800fc80 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80130b4:	2300      	movs	r3, #0
 80130b6:	4620      	mov	r0, r4
 80130b8:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 80130bc:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 80130c0:	6823      	ldr	r3, [r4, #0]
 80130c2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 80130c6:	f7ff fdbf 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80130ca:	4601      	mov	r1, r0
 80130cc:	4620      	mov	r0, r4
 80130ce:	462b      	mov	r3, r5
 80130d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80130d4:	4718      	bx	r3
 80130d6:	bd70      	pop	{r4, r5, r6, pc}

080130d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 80130d8:	b538      	push	{r3, r4, r5, lr}
 80130da:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 80130de:	4604      	mov	r4, r0
 80130e0:	460d      	mov	r5, r1
 80130e2:	428b      	cmp	r3, r1
 80130e4:	d006      	beq.n	80130f4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 80130e6:	6803      	ldr	r3, [r0, #0]
 80130e8:	b929      	cbnz	r1, 80130f6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 80130ea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 80130ee:	4798      	blx	r3
 80130f0:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 80130f4:	bd38      	pop	{r3, r4, r5, pc}
 80130f6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 80130fa:	e7f8      	b.n	80130ee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

080130fc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 80130fc:	4b0d      	ldr	r3, [pc, #52]	@ (8013134 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80130fe:	b510      	push	{r4, lr}
 8013100:	781b      	ldrb	r3, [r3, #0]
 8013102:	4604      	mov	r4, r0
 8013104:	b95b      	cbnz	r3, 801311e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013106:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801310a:	2b02      	cmp	r3, #2
 801310c:	d007      	beq.n	801311e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801310e:	6840      	ldr	r0, [r0, #4]
 8013110:	f000 f928 	bl	8013364 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8013114:	b118      	cbz	r0, 801311e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8013116:	6862      	ldr	r2, [r4, #4]
 8013118:	7a53      	ldrb	r3, [r2, #9]
 801311a:	2b00      	cmp	r3, #0
 801311c:	d0fc      	beq.n	8013118 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801311e:	f7fd f825 	bl	801016c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8013122:	4620      	mov	r0, r4
 8013124:	2100      	movs	r1, #0
 8013126:	f7ff ffd7 	bl	80130d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801312a:	4620      	mov	r0, r4
 801312c:	f7ff fd8c 	bl	8012c48 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8013130:	bd10      	pop	{r4, pc}
 8013132:	bf00      	nop
 8013134:	20003982 	.word	0x20003982

08013138 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8013138:	b570      	push	{r4, r5, r6, lr}
 801313a:	4604      	mov	r4, r0
 801313c:	6803      	ldr	r3, [r0, #0]
 801313e:	b919      	cbnz	r1, 8013148 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8013140:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013142:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013146:	4718      	bx	r3
 8013148:	2200      	movs	r2, #0
 801314a:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
 801314e:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
 8013152:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8013154:	4798      	blx	r3
 8013156:	6863      	ldr	r3, [r4, #4]
 8013158:	2101      	movs	r1, #1
 801315a:	4605      	mov	r5, r0
 801315c:	4620      	mov	r0, r4
 801315e:	7299      	strb	r1, [r3, #10]
 8013160:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
 8013164:	f7ff ffb8 	bl	80130d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8013168:	4628      	mov	r0, r5
 801316a:	bd70      	pop	{r4, r5, r6, pc}

0801316c <_ZN8touchgfx13DMA_Interface10initializeEv>:
 801316c:	4770      	bx	lr

0801316e <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 801316e:	2000      	movs	r0, #0
 8013170:	4770      	bx	lr

08013172 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8013172:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8013176:	1a13      	subs	r3, r2, r0
 8013178:	4258      	negs	r0, r3
 801317a:	4158      	adcs	r0, r3
 801317c:	4770      	bx	lr

0801317e <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 801317e:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8013182:	1a9b      	subs	r3, r3, r2
 8013184:	2b00      	cmp	r3, #0
 8013186:	bfdc      	itt	le
 8013188:	6882      	ldrle	r2, [r0, #8]
 801318a:	189b      	addle	r3, r3, r2
 801318c:	2b01      	cmp	r3, #1
 801318e:	bfcc      	ite	gt
 8013190:	2000      	movgt	r0, #0
 8013192:	2001      	movle	r0, #1
 8013194:	4770      	bx	lr

08013196 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8013196:	6902      	ldr	r2, [r0, #16]
 8013198:	6843      	ldr	r3, [r0, #4]
 801319a:	2024      	movs	r0, #36	@ 0x24
 801319c:	fb00 3002 	mla	r0, r0, r2, r3
 80131a0:	4770      	bx	lr

080131a2 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80131a2:	6803      	ldr	r3, [r0, #0]
 80131a4:	691b      	ldr	r3, [r3, #16]
 80131a6:	4718      	bx	r3

080131a8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80131a8:	2301      	movs	r3, #1
 80131aa:	b570      	push	{r4, r5, r6, lr}
 80131ac:	7203      	strb	r3, [r0, #8]
 80131ae:	4604      	mov	r4, r0
 80131b0:	6840      	ldr	r0, [r0, #4]
 80131b2:	6803      	ldr	r3, [r0, #0]
 80131b4:	699b      	ldr	r3, [r3, #24]
 80131b6:	4798      	blx	r3
 80131b8:	6803      	ldr	r3, [r0, #0]
 80131ba:	4605      	mov	r5, r0
 80131bc:	2b40      	cmp	r3, #64	@ 0x40
 80131be:	d00c      	beq.n	80131da <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80131c0:	d810      	bhi.n	80131e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80131c2:	2b04      	cmp	r3, #4
 80131c4:	d01d      	beq.n	8013202 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80131c6:	d804      	bhi.n	80131d2 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80131c8:	2b01      	cmp	r3, #1
 80131ca:	d006      	beq.n	80131da <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80131cc:	2b02      	cmp	r3, #2
 80131ce:	d02c      	beq.n	801322a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80131d0:	bd70      	pop	{r4, r5, r6, pc}
 80131d2:	2b08      	cmp	r3, #8
 80131d4:	d01d      	beq.n	8013212 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80131d6:	2b20      	cmp	r3, #32
 80131d8:	d1fa      	bne.n	80131d0 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 80131da:	6823      	ldr	r3, [r4, #0]
 80131dc:	4620      	mov	r0, r4
 80131de:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80131e0:	4798      	blx	r3
 80131e2:	e013      	b.n	801320c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 80131e4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80131e8:	d0f7      	beq.n	80131da <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80131ea:	d804      	bhi.n	80131f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 80131ec:	2b80      	cmp	r3, #128	@ 0x80
 80131ee:	d0f4      	beq.n	80131da <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80131f0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80131f4:	e7f0      	b.n	80131d8 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 80131f6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80131fa:	d0ee      	beq.n	80131da <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80131fc:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8013200:	e7e5      	b.n	80131ce <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8013202:	6823      	ldr	r3, [r4, #0]
 8013204:	7f01      	ldrb	r1, [r0, #28]
 8013206:	4620      	mov	r0, r4
 8013208:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801320a:	4798      	blx	r3
 801320c:	6823      	ldr	r3, [r4, #0]
 801320e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013210:	e006      	b.n	8013220 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8013212:	6823      	ldr	r3, [r4, #0]
 8013214:	7f01      	ldrb	r1, [r0, #28]
 8013216:	4620      	mov	r0, r4
 8013218:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801321a:	4798      	blx	r3
 801321c:	6823      	ldr	r3, [r4, #0]
 801321e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8013220:	4629      	mov	r1, r5
 8013222:	4620      	mov	r0, r4
 8013224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013228:	4718      	bx	r3
 801322a:	6823      	ldr	r3, [r4, #0]
 801322c:	4620      	mov	r0, r4
 801322e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8013230:	4798      	blx	r3
 8013232:	e7f3      	b.n	801321c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08013234 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8013234:	4770      	bx	lr

08013236 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8013236:	4770      	bx	lr

08013238 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8013238:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 801323c:	b510      	push	{r4, lr}
 801323e:	1ad2      	subs	r2, r2, r3
 8013240:	2a00      	cmp	r2, #0
 8013242:	bfdc      	itt	le
 8013244:	6884      	ldrle	r4, [r0, #8]
 8013246:	1912      	addle	r2, r2, r4
 8013248:	2a01      	cmp	r2, #1
 801324a:	dd16      	ble.n	801327a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 801324c:	6842      	ldr	r2, [r0, #4]
 801324e:	2424      	movs	r4, #36	@ 0x24
 8013250:	fb04 2303 	mla	r3, r4, r3, r2
 8013254:	f101 0220 	add.w	r2, r1, #32
 8013258:	f851 4b04 	ldr.w	r4, [r1], #4
 801325c:	4291      	cmp	r1, r2
 801325e:	f843 4b04 	str.w	r4, [r3], #4
 8013262:	d1f9      	bne.n	8013258 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8013264:	780a      	ldrb	r2, [r1, #0]
 8013266:	701a      	strb	r2, [r3, #0]
 8013268:	68c3      	ldr	r3, [r0, #12]
 801326a:	6882      	ldr	r2, [r0, #8]
 801326c:	f3bf 8f5b 	dmb	ish
 8013270:	3301      	adds	r3, #1
 8013272:	429a      	cmp	r2, r3
 8013274:	bfd8      	it	le
 8013276:	1a9b      	suble	r3, r3, r2
 8013278:	60c3      	str	r3, [r0, #12]
 801327a:	bd10      	pop	{r4, pc}

0801327c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 801327c:	6903      	ldr	r3, [r0, #16]
 801327e:	6882      	ldr	r2, [r0, #8]
 8013280:	f3bf 8f5b 	dmb	ish
 8013284:	3301      	adds	r3, #1
 8013286:	429a      	cmp	r2, r3
 8013288:	bfd8      	it	le
 801328a:	1a9b      	suble	r3, r3, r2
 801328c:	6103      	str	r3, [r0, #16]
 801328e:	4770      	bx	lr

08013290 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8013290:	b570      	push	{r4, r5, r6, lr}
 8013292:	4604      	mov	r4, r0
 8013294:	460e      	mov	r6, r1
 8013296:	6860      	ldr	r0, [r4, #4]
 8013298:	6803      	ldr	r3, [r0, #0]
 801329a:	685b      	ldr	r3, [r3, #4]
 801329c:	4798      	blx	r3
 801329e:	2800      	cmp	r0, #0
 80132a0:	d1f9      	bne.n	8013296 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80132a2:	4d0d      	ldr	r5, [pc, #52]	@ (80132d8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80132a4:	6828      	ldr	r0, [r5, #0]
 80132a6:	6803      	ldr	r3, [r0, #0]
 80132a8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80132aa:	4798      	blx	r3
 80132ac:	f7fc ff80 	bl	80101b0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80132b0:	6828      	ldr	r0, [r5, #0]
 80132b2:	2101      	movs	r1, #1
 80132b4:	f7ff ff10 	bl	80130d8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80132b8:	6860      	ldr	r0, [r4, #4]
 80132ba:	4631      	mov	r1, r6
 80132bc:	6803      	ldr	r3, [r0, #0]
 80132be:	689b      	ldr	r3, [r3, #8]
 80132c0:	4798      	blx	r3
 80132c2:	6823      	ldr	r3, [r4, #0]
 80132c4:	4620      	mov	r0, r4
 80132c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80132c8:	4798      	blx	r3
 80132ca:	6828      	ldr	r0, [r5, #0]
 80132cc:	6803      	ldr	r3, [r0, #0]
 80132ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80132d2:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80132d4:	4718      	bx	r3
 80132d6:	bf00      	nop
 80132d8:	20003984 	.word	0x20003984

080132dc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 80132dc:	b508      	push	{r3, lr}
 80132de:	f7fc ff45 	bl	801016c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80132e2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80132e6:	f7fc bf57 	b.w	8010198 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080132ea <_ZN8touchgfx13DMA_Interface5startEv>:
 80132ea:	b510      	push	{r4, lr}
 80132ec:	4604      	mov	r4, r0
 80132ee:	6840      	ldr	r0, [r0, #4]
 80132f0:	6803      	ldr	r3, [r0, #0]
 80132f2:	681b      	ldr	r3, [r3, #0]
 80132f4:	4798      	blx	r3
 80132f6:	b948      	cbnz	r0, 801330c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80132f8:	7a63      	ldrb	r3, [r4, #9]
 80132fa:	b13b      	cbz	r3, 801330c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80132fc:	7a23      	ldrb	r3, [r4, #8]
 80132fe:	b92b      	cbnz	r3, 801330c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8013300:	6823      	ldr	r3, [r4, #0]
 8013302:	4620      	mov	r0, r4
 8013304:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8013306:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801330a:	4718      	bx	r3
 801330c:	bd10      	pop	{r4, pc}

0801330e <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 801330e:	b570      	push	{r4, r5, r6, lr}
 8013310:	4604      	mov	r4, r0
 8013312:	6840      	ldr	r0, [r0, #4]
 8013314:	6803      	ldr	r3, [r0, #0]
 8013316:	681b      	ldr	r3, [r3, #0]
 8013318:	4798      	blx	r3
 801331a:	4605      	mov	r5, r0
 801331c:	b930      	cbnz	r0, 801332c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801331e:	7a23      	ldrb	r3, [r4, #8]
 8013320:	b123      	cbz	r3, 801332c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8013322:	6860      	ldr	r0, [r4, #4]
 8013324:	6803      	ldr	r3, [r0, #0]
 8013326:	695b      	ldr	r3, [r3, #20]
 8013328:	4798      	blx	r3
 801332a:	7225      	strb	r5, [r4, #8]
 801332c:	6860      	ldr	r0, [r4, #4]
 801332e:	6803      	ldr	r3, [r0, #0]
 8013330:	681b      	ldr	r3, [r3, #0]
 8013332:	4798      	blx	r3
 8013334:	b928      	cbnz	r0, 8013342 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8013336:	6823      	ldr	r3, [r4, #0]
 8013338:	4620      	mov	r0, r4
 801333a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801333c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013340:	4718      	bx	r3
 8013342:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8013346:	f7fc bf3f 	b.w	80101c8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

0801334c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 801334c:	b510      	push	{r4, lr}
 801334e:	6082      	str	r2, [r0, #8]
 8013350:	2200      	movs	r2, #0
 8013352:	4c03      	ldr	r4, [pc, #12]	@ (8013360 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8013354:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8013358:	e9c0 4100 	strd	r4, r1, [r0]
 801335c:	bd10      	pop	{r4, pc}
 801335e:	bf00      	nop
 8013360:	0802a870 	.word	0x0802a870

08013364 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8013364:	6840      	ldr	r0, [r0, #4]
 8013366:	6803      	ldr	r3, [r0, #0]
 8013368:	681b      	ldr	r3, [r3, #0]
 801336a:	4718      	bx	r3

0801336c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801336c:	b508      	push	{r3, lr}
 801336e:	4b05      	ldr	r3, [pc, #20]	@ (8013384 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8013370:	6818      	ldr	r0, [r3, #0]
 8013372:	6803      	ldr	r3, [r0, #0]
 8013374:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8013378:	4798      	blx	r3
 801337a:	1e43      	subs	r3, r0, #1
 801337c:	4258      	negs	r0, r3
 801337e:	4158      	adcs	r0, r3
 8013380:	bd08      	pop	{r3, pc}
 8013382:	bf00      	nop
 8013384:	20003984 	.word	0x20003984

08013388 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8013388:	b430      	push	{r4, r5}
 801338a:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 801338e:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8013392:	8a02      	ldrh	r2, [r0, #16]
 8013394:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8013398:	4629      	mov	r1, r5
 801339a:	9202      	str	r2, [sp, #8]
 801339c:	68c2      	ldr	r2, [r0, #12]
 801339e:	4620      	mov	r0, r4
 80133a0:	bc30      	pop	{r4, r5}
 80133a2:	f7fd bbaf 	b.w	8010b04 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

080133a6 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 80133a6:	f7fd bb7b 	b.w	8010aa0 <_ZN8touchgfx5paint8tearDownEv>

080133aa <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
 80133aa:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 80133ae:	4770      	bx	lr

080133b0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:
 80133b0:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
 80133b4:	4770      	bx	lr

080133b6 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
 80133b6:	2200      	movs	r2, #0
 80133b8:	8002      	strh	r2, [r0, #0]
 80133ba:	8042      	strh	r2, [r0, #2]
 80133bc:	8082      	strh	r2, [r0, #4]
 80133be:	80c2      	strh	r2, [r0, #6]
 80133c0:	4770      	bx	lr

080133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 80133c2:	b507      	push	{r0, r1, r2, lr}
 80133c4:	f44f 4200 	mov.w	r2, #32768	@ 0x8000
 80133c8:	ab01      	add	r3, sp, #4
 80133ca:	6809      	ldr	r1, [r1, #0]
 80133cc:	6800      	ldr	r0, [r0, #0]
 80133ce:	f004 fa3b 	bl	8017848 <_ZN8touchgfx6muldivElllRl>
 80133d2:	b003      	add	sp, #12
 80133d4:	f85d fb04 	ldr.w	pc, [sp], #4

080133d8 <_ZN8touchgfx7CWRUtil4sineEi>:
 80133d8:	f44f 73b4 	mov.w	r3, #360	@ 0x168
 80133dc:	fb90 f2f3 	sdiv	r2, r0, r3
 80133e0:	fb02 0013 	mls	r0, r2, r3, r0
 80133e4:	2800      	cmp	r0, #0
 80133e6:	bfb8      	it	lt
 80133e8:	18c0      	addlt	r0, r0, r3
 80133ea:	4b0a      	ldr	r3, [pc, #40]	@ (8013414 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 80133ec:	285a      	cmp	r0, #90	@ 0x5a
 80133ee:	dc02      	bgt.n	80133f6 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 80133f0:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 80133f4:	4770      	bx	lr
 80133f6:	28b4      	cmp	r0, #180	@ 0xb4
 80133f8:	dc02      	bgt.n	8013400 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 80133fa:	f1c0 00b4 	rsb	r0, r0, #180	@ 0xb4
 80133fe:	e7f7      	b.n	80133f0 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8013400:	f5b0 7f87 	cmp.w	r0, #270	@ 0x10e
 8013404:	bfd4      	ite	le
 8013406:	38b4      	suble	r0, #180	@ 0xb4
 8013408:	f5c0 70b4 	rsbgt	r0, r0, #360	@ 0x168
 801340c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8013410:	4240      	negs	r0, r0
 8013412:	4770      	bx	lr
 8013414:	0802a8c4 	.word	0x0802a8c4

08013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 8013418:	f44f 5334 	mov.w	r3, #11520	@ 0x2d00
 801341c:	fb90 f2f3 	sdiv	r2, r0, r3
 8013420:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8013422:	fb02 0013 	mls	r0, r2, r3, r0
 8013426:	2800      	cmp	r0, #0
 8013428:	bfb8      	it	lt
 801342a:	18c0      	addlt	r0, r0, r3
 801342c:	1144      	asrs	r4, r0, #5
 801342e:	f000 061f 	and.w	r6, r0, #31
 8013432:	4620      	mov	r0, r4
 8013434:	f7ff ffd0 	bl	80133d8 <_ZN8touchgfx7CWRUtil4sineEi>
 8013438:	4605      	mov	r5, r0
 801343a:	b90e      	cbnz	r6, 8013440 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 801343c:	b002      	add	sp, #8
 801343e:	bd70      	pop	{r4, r5, r6, pc}
 8013440:	1c60      	adds	r0, r4, #1
 8013442:	f7ff ffc9 	bl	80133d8 <_ZN8touchgfx7CWRUtil4sineEi>
 8013446:	ab01      	add	r3, sp, #4
 8013448:	2220      	movs	r2, #32
 801344a:	4631      	mov	r1, r6
 801344c:	1b40      	subs	r0, r0, r5
 801344e:	f004 f9fb 	bl	8017848 <_ZN8touchgfx6muldivElllRl>
 8013452:	4428      	add	r0, r5
 8013454:	e7f2      	b.n	801343c <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

08013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 8013456:	b508      	push	{r3, lr}
 8013458:	f5c0 6034 	rsb	r0, r0, #2880	@ 0xb40
 801345c:	f7ff ffdc 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013460:	bd08      	pop	{r3, pc}
	...

08013464 <_ZN8touchgfx6CircleC1Ev>:
 8013464:	b510      	push	{r4, lr}
 8013466:	4604      	mov	r4, r0
 8013468:	f000 fd78 	bl	8013f5c <_ZN8touchgfx12CanvasWidgetC1Ev>
 801346c:	4b08      	ldr	r3, [pc, #32]	@ (8013490 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 801346e:	f44f 5234 	mov.w	r2, #11520	@ 0x2d00
 8013472:	4620      	mov	r0, r4
 8013474:	6023      	str	r3, [r4, #0]
 8013476:	2300      	movs	r3, #0
 8013478:	e9c4 230f 	strd	r2, r3, [r4, #60]	@ 0x3c
 801347c:	f24b 4205 	movw	r2, #46085	@ 0xb405
 8013480:	60a3      	str	r3, [r4, #8]
 8013482:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
 8013486:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
 801348a:	f8a4 2044 	strh.w	r2, [r4, #68]	@ 0x44
 801348e:	bd10      	pop	{r4, pc}
 8013490:	0802a984 	.word	0x0802a984

08013494 <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 8013494:	29b4      	cmp	r1, #180	@ 0xb4
 8013496:	bfa8      	it	ge
 8013498:	21b4      	movge	r1, #180	@ 0xb4
 801349a:	2901      	cmp	r1, #1
 801349c:	bfb8      	it	lt
 801349e:	2101      	movlt	r1, #1
 80134a0:	f880 1045 	strb.w	r1, [r0, #69]	@ 0x45
 80134a4:	4770      	bx	lr

080134a6 <_ZNK8touchgfx6Circle15getCapPrecisionEv>:
 80134a6:	f890 0045 	ldrb.w	r0, [r0, #69]	@ 0x45
 80134aa:	4770      	bx	lr

080134ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 80134ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134b0:	428a      	cmp	r2, r1
 80134b2:	4680      	mov	r8, r0
 80134b4:	4610      	mov	r0, r2
 80134b6:	4699      	mov	r9, r3
 80134b8:	bfaa      	itet	ge
 80134ba:	460a      	movge	r2, r1
 80134bc:	460b      	movlt	r3, r1
 80134be:	4603      	movge	r3, r0
 80134c0:	b085      	sub	sp, #20
 80134c2:	f8d8 4040 	ldr.w	r4, [r8, #64]	@ 0x40
 80134c6:	f108 0a34 	add.w	sl, r8, #52	@ 0x34
 80134ca:	1a99      	subs	r1, r3, r2
 80134cc:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80134ce:	f5b1 5f34 	cmp.w	r1, #11520	@ 0x2d00
 80134d2:	bfa4      	itt	ge
 80134d4:	f44f 5334 	movge.w	r3, #11520	@ 0x2d00
 80134d8:	2200      	movge	r2, #0
 80134da:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	@ 0x38
 80134de:	9300      	str	r3, [sp, #0]
 80134e0:	f102 0b01 	add.w	fp, r2, #1
 80134e4:	2c00      	cmp	r4, #0
 80134e6:	f040 80ae 	bne.w	8013646 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19a>
 80134ea:	4610      	mov	r0, r2
 80134ec:	9201      	str	r2, [sp, #4]
 80134ee:	f7ff ff93 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80134f2:	a903      	add	r1, sp, #12
 80134f4:	9003      	str	r0, [sp, #12]
 80134f6:	4650      	mov	r0, sl
 80134f8:	f7ff ff63 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80134fc:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8013500:	9a01      	ldr	r2, [sp, #4]
 8013502:	4408      	add	r0, r1
 8013504:	f8d9 1000 	ldr.w	r1, [r9]
 8013508:	4281      	cmp	r1, r0
 801350a:	bfc8      	it	gt
 801350c:	f8c9 0000 	strgt.w	r0, [r9]
 8013510:	6839      	ldr	r1, [r7, #0]
 8013512:	4288      	cmp	r0, r1
 8013514:	bfc8      	it	gt
 8013516:	6038      	strgt	r0, [r7, #0]
 8013518:	4610      	mov	r0, r2
 801351a:	f7ff ff9c 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801351e:	a903      	add	r1, sp, #12
 8013520:	9003      	str	r0, [sp, #12]
 8013522:	4650      	mov	r0, sl
 8013524:	f7ff ff4d 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013528:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 801352c:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 8013530:	1a10      	subs	r0, r2, r0
 8013532:	6832      	ldr	r2, [r6, #0]
 8013534:	4282      	cmp	r2, r0
 8013536:	bfc8      	it	gt
 8013538:	6030      	strgt	r0, [r6, #0]
 801353a:	682a      	ldr	r2, [r5, #0]
 801353c:	4290      	cmp	r0, r2
 801353e:	fb9b f2f1 	sdiv	r2, fp, r1
 8013542:	fb01 b212 	mls	r2, r1, r2, fp
 8013546:	bfc8      	it	gt
 8013548:	6028      	strgt	r0, [r5, #0]
 801354a:	1a8a      	subs	r2, r1, r2
 801354c:	fb92 f0f1 	sdiv	r0, r2, r1
 8013550:	fb01 2210 	mls	r2, r1, r0, r2
 8013554:	4493      	add	fp, r2
 8013556:	9b00      	ldr	r3, [sp, #0]
 8013558:	455b      	cmp	r3, fp
 801355a:	db2a      	blt.n	80135b2 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x106>
 801355c:	4658      	mov	r0, fp
 801355e:	f7ff ff5b 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013562:	a903      	add	r1, sp, #12
 8013564:	9003      	str	r0, [sp, #12]
 8013566:	4650      	mov	r0, sl
 8013568:	f7ff ff2b 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801356c:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8013570:	4410      	add	r0, r2
 8013572:	f8d9 2000 	ldr.w	r2, [r9]
 8013576:	4282      	cmp	r2, r0
 8013578:	bfc8      	it	gt
 801357a:	f8c9 0000 	strgt.w	r0, [r9]
 801357e:	683a      	ldr	r2, [r7, #0]
 8013580:	4290      	cmp	r0, r2
 8013582:	bfc8      	it	gt
 8013584:	6038      	strgt	r0, [r7, #0]
 8013586:	4658      	mov	r0, fp
 8013588:	f7ff ff65 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801358c:	a903      	add	r1, sp, #12
 801358e:	9003      	str	r0, [sp, #12]
 8013590:	4650      	mov	r0, sl
 8013592:	f7ff ff16 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013596:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 801359a:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 801359e:	1a10      	subs	r0, r2, r0
 80135a0:	6832      	ldr	r2, [r6, #0]
 80135a2:	4282      	cmp	r2, r0
 80135a4:	bfc8      	it	gt
 80135a6:	6030      	strgt	r0, [r6, #0]
 80135a8:	682a      	ldr	r2, [r5, #0]
 80135aa:	4290      	cmp	r0, r2
 80135ac:	bfc8      	it	gt
 80135ae:	6028      	strgt	r0, [r5, #0]
 80135b0:	e7d1      	b.n	8013556 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xaa>
 80135b2:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 80135b6:	9b00      	ldr	r3, [sp, #0]
 80135b8:	455b      	cmp	r3, fp
 80135ba:	dd27      	ble.n	801360c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x160>
 80135bc:	4618      	mov	r0, r3
 80135be:	f7ff ff2b 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80135c2:	a903      	add	r1, sp, #12
 80135c4:	9003      	str	r0, [sp, #12]
 80135c6:	4650      	mov	r0, sl
 80135c8:	f7ff fefb 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80135cc:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 80135d0:	4410      	add	r0, r2
 80135d2:	f8d9 2000 	ldr.w	r2, [r9]
 80135d6:	4282      	cmp	r2, r0
 80135d8:	bfc8      	it	gt
 80135da:	f8c9 0000 	strgt.w	r0, [r9]
 80135de:	683a      	ldr	r2, [r7, #0]
 80135e0:	4290      	cmp	r0, r2
 80135e2:	bfc8      	it	gt
 80135e4:	6038      	strgt	r0, [r7, #0]
 80135e6:	9800      	ldr	r0, [sp, #0]
 80135e8:	f7ff ff35 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80135ec:	a903      	add	r1, sp, #12
 80135ee:	9003      	str	r0, [sp, #12]
 80135f0:	4650      	mov	r0, sl
 80135f2:	f7ff fee6 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80135f6:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80135fa:	1a10      	subs	r0, r2, r0
 80135fc:	6832      	ldr	r2, [r6, #0]
 80135fe:	4282      	cmp	r2, r0
 8013600:	bfc8      	it	gt
 8013602:	6030      	strgt	r0, [r6, #0]
 8013604:	682a      	ldr	r2, [r5, #0]
 8013606:	4290      	cmp	r0, r2
 8013608:	bfc8      	it	gt
 801360a:	6028      	strgt	r0, [r5, #0]
 801360c:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8013610:	f8d9 1000 	ldr.w	r1, [r9]
 8013614:	4291      	cmp	r1, r2
 8013616:	bfc8      	it	gt
 8013618:	f8c9 2000 	strgt.w	r2, [r9]
 801361c:	683a      	ldr	r2, [r7, #0]
 801361e:	f8d8 302c 	ldr.w	r3, [r8, #44]	@ 0x2c
 8013622:	429a      	cmp	r2, r3
 8013624:	bfb8      	it	lt
 8013626:	603b      	strlt	r3, [r7, #0]
 8013628:	6832      	ldr	r2, [r6, #0]
 801362a:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 801362e:	429a      	cmp	r2, r3
 8013630:	bfc8      	it	gt
 8013632:	6033      	strgt	r3, [r6, #0]
 8013634:	682a      	ldr	r2, [r5, #0]
 8013636:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 801363a:	429a      	cmp	r2, r3
 801363c:	da00      	bge.n	8013640 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 801363e:	602b      	str	r3, [r5, #0]
 8013640:	b005      	add	sp, #20
 8013642:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013646:	2002      	movs	r0, #2
 8013648:	3401      	adds	r4, #1
 801364a:	9201      	str	r2, [sp, #4]
 801364c:	fb94 f4f0 	sdiv	r4, r4, r0
 8013650:	4610      	mov	r0, r2
 8013652:	f7ff fee1 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013656:	a903      	add	r1, sp, #12
 8013658:	9003      	str	r0, [sp, #12]
 801365a:	4650      	mov	r0, sl
 801365c:	f7ff feb1 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013660:	f8d8 102c 	ldr.w	r1, [r8, #44]	@ 0x2c
 8013664:	9a01      	ldr	r2, [sp, #4]
 8013666:	4408      	add	r0, r1
 8013668:	f8d9 1000 	ldr.w	r1, [r9]
 801366c:	1b03      	subs	r3, r0, r4
 801366e:	4420      	add	r0, r4
 8013670:	4299      	cmp	r1, r3
 8013672:	bfc8      	it	gt
 8013674:	f8c9 3000 	strgt.w	r3, [r9]
 8013678:	6839      	ldr	r1, [r7, #0]
 801367a:	428b      	cmp	r3, r1
 801367c:	bfc8      	it	gt
 801367e:	603b      	strgt	r3, [r7, #0]
 8013680:	f8d9 1000 	ldr.w	r1, [r9]
 8013684:	4281      	cmp	r1, r0
 8013686:	bfc8      	it	gt
 8013688:	f8c9 0000 	strgt.w	r0, [r9]
 801368c:	6839      	ldr	r1, [r7, #0]
 801368e:	4288      	cmp	r0, r1
 8013690:	bfc8      	it	gt
 8013692:	6038      	strgt	r0, [r7, #0]
 8013694:	4610      	mov	r0, r2
 8013696:	f7ff fede 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 801369a:	a903      	add	r1, sp, #12
 801369c:	9003      	str	r0, [sp, #12]
 801369e:	4650      	mov	r0, sl
 80136a0:	f7ff fe8f 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80136a4:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 80136a8:	1a10      	subs	r0, r2, r0
 80136aa:	6832      	ldr	r2, [r6, #0]
 80136ac:	1b01      	subs	r1, r0, r4
 80136ae:	4420      	add	r0, r4
 80136b0:	428a      	cmp	r2, r1
 80136b2:	bfc8      	it	gt
 80136b4:	6031      	strgt	r1, [r6, #0]
 80136b6:	682a      	ldr	r2, [r5, #0]
 80136b8:	4291      	cmp	r1, r2
 80136ba:	bfc8      	it	gt
 80136bc:	6029      	strgt	r1, [r5, #0]
 80136be:	f44f 6134 	mov.w	r1, #2880	@ 0xb40
 80136c2:	6832      	ldr	r2, [r6, #0]
 80136c4:	4282      	cmp	r2, r0
 80136c6:	bfc8      	it	gt
 80136c8:	6030      	strgt	r0, [r6, #0]
 80136ca:	682a      	ldr	r2, [r5, #0]
 80136cc:	4290      	cmp	r0, r2
 80136ce:	fb9b f2f1 	sdiv	r2, fp, r1
 80136d2:	fb01 b212 	mls	r2, r1, r2, fp
 80136d6:	bfc8      	it	gt
 80136d8:	6028      	strgt	r0, [r5, #0]
 80136da:	1a8a      	subs	r2, r1, r2
 80136dc:	fb92 f0f1 	sdiv	r0, r2, r1
 80136e0:	fb01 2210 	mls	r2, r1, r0, r2
 80136e4:	4493      	add	fp, r2
 80136e6:	9b00      	ldr	r3, [sp, #0]
 80136e8:	455b      	cmp	r3, fp
 80136ea:	db40      	blt.n	801376e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c2>
 80136ec:	4658      	mov	r0, fp
 80136ee:	f7ff fe93 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 80136f2:	a903      	add	r1, sp, #12
 80136f4:	9003      	str	r0, [sp, #12]
 80136f6:	4650      	mov	r0, sl
 80136f8:	f7ff fe63 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80136fc:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 8013700:	4410      	add	r0, r2
 8013702:	f8d9 2000 	ldr.w	r2, [r9]
 8013706:	1b01      	subs	r1, r0, r4
 8013708:	4420      	add	r0, r4
 801370a:	428a      	cmp	r2, r1
 801370c:	bfc8      	it	gt
 801370e:	f8c9 1000 	strgt.w	r1, [r9]
 8013712:	683a      	ldr	r2, [r7, #0]
 8013714:	4291      	cmp	r1, r2
 8013716:	bfc8      	it	gt
 8013718:	6039      	strgt	r1, [r7, #0]
 801371a:	f8d9 2000 	ldr.w	r2, [r9]
 801371e:	4282      	cmp	r2, r0
 8013720:	bfc8      	it	gt
 8013722:	f8c9 0000 	strgt.w	r0, [r9]
 8013726:	683a      	ldr	r2, [r7, #0]
 8013728:	4290      	cmp	r0, r2
 801372a:	bfc8      	it	gt
 801372c:	6038      	strgt	r0, [r7, #0]
 801372e:	4658      	mov	r0, fp
 8013730:	f7ff fe91 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013734:	a903      	add	r1, sp, #12
 8013736:	9003      	str	r0, [sp, #12]
 8013738:	4650      	mov	r0, sl
 801373a:	f7ff fe42 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801373e:	f8d8 2030 	ldr.w	r2, [r8, #48]	@ 0x30
 8013742:	f50b 6b34 	add.w	fp, fp, #2880	@ 0xb40
 8013746:	1a10      	subs	r0, r2, r0
 8013748:	6832      	ldr	r2, [r6, #0]
 801374a:	1b01      	subs	r1, r0, r4
 801374c:	4420      	add	r0, r4
 801374e:	428a      	cmp	r2, r1
 8013750:	bfc8      	it	gt
 8013752:	6031      	strgt	r1, [r6, #0]
 8013754:	682a      	ldr	r2, [r5, #0]
 8013756:	4291      	cmp	r1, r2
 8013758:	bfc8      	it	gt
 801375a:	6029      	strgt	r1, [r5, #0]
 801375c:	6832      	ldr	r2, [r6, #0]
 801375e:	4282      	cmp	r2, r0
 8013760:	bfc8      	it	gt
 8013762:	6030      	strgt	r0, [r6, #0]
 8013764:	682a      	ldr	r2, [r5, #0]
 8013766:	4290      	cmp	r0, r2
 8013768:	bfc8      	it	gt
 801376a:	6028      	strgt	r0, [r5, #0]
 801376c:	e7bb      	b.n	80136e6 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23a>
 801376e:	f5ab 6b34 	sub.w	fp, fp, #2880	@ 0xb40
 8013772:	9b00      	ldr	r3, [sp, #0]
 8013774:	455b      	cmp	r3, fp
 8013776:	f77f af63 	ble.w	8013640 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>
 801377a:	4618      	mov	r0, r3
 801377c:	f7ff fe4c 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013780:	a903      	add	r1, sp, #12
 8013782:	9003      	str	r0, [sp, #12]
 8013784:	4650      	mov	r0, sl
 8013786:	f7ff fe1c 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801378a:	f8d8 202c 	ldr.w	r2, [r8, #44]	@ 0x2c
 801378e:	4410      	add	r0, r2
 8013790:	f8d9 2000 	ldr.w	r2, [r9]
 8013794:	1b01      	subs	r1, r0, r4
 8013796:	4420      	add	r0, r4
 8013798:	428a      	cmp	r2, r1
 801379a:	bfc8      	it	gt
 801379c:	f8c9 1000 	strgt.w	r1, [r9]
 80137a0:	683a      	ldr	r2, [r7, #0]
 80137a2:	4291      	cmp	r1, r2
 80137a4:	bfc8      	it	gt
 80137a6:	6039      	strgt	r1, [r7, #0]
 80137a8:	f8d9 2000 	ldr.w	r2, [r9]
 80137ac:	4282      	cmp	r2, r0
 80137ae:	bfc8      	it	gt
 80137b0:	f8c9 0000 	strgt.w	r0, [r9]
 80137b4:	683b      	ldr	r3, [r7, #0]
 80137b6:	4298      	cmp	r0, r3
 80137b8:	bfc8      	it	gt
 80137ba:	6038      	strgt	r0, [r7, #0]
 80137bc:	9800      	ldr	r0, [sp, #0]
 80137be:	f7ff fe4a 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 80137c2:	a903      	add	r1, sp, #12
 80137c4:	9003      	str	r0, [sp, #12]
 80137c6:	4650      	mov	r0, sl
 80137c8:	f7ff fdfb 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80137cc:	f8d8 3030 	ldr.w	r3, [r8, #48]	@ 0x30
 80137d0:	6832      	ldr	r2, [r6, #0]
 80137d2:	1a18      	subs	r0, r3, r0
 80137d4:	1b03      	subs	r3, r0, r4
 80137d6:	4404      	add	r4, r0
 80137d8:	429a      	cmp	r2, r3
 80137da:	bfc8      	it	gt
 80137dc:	6033      	strgt	r3, [r6, #0]
 80137de:	682a      	ldr	r2, [r5, #0]
 80137e0:	4293      	cmp	r3, r2
 80137e2:	bfc8      	it	gt
 80137e4:	602b      	strgt	r3, [r5, #0]
 80137e6:	6833      	ldr	r3, [r6, #0]
 80137e8:	42a3      	cmp	r3, r4
 80137ea:	bfc8      	it	gt
 80137ec:	6034      	strgt	r4, [r6, #0]
 80137ee:	682b      	ldr	r3, [r5, #0]
 80137f0:	429c      	cmp	r4, r3
 80137f2:	bfc8      	it	gt
 80137f4:	602c      	strgt	r4, [r5, #0]
 80137f6:	e723      	b.n	8013640 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x194>

080137f8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 80137f8:	b530      	push	{r4, r5, lr}
 80137fa:	4604      	mov	r4, r0
 80137fc:	4608      	mov	r0, r1
 80137fe:	4611      	mov	r1, r2
 8013800:	461a      	mov	r2, r3
 8013802:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8013806:	b089      	sub	sp, #36	@ 0x24
 8013808:	2500      	movs	r5, #0
 801380a:	015b      	lsls	r3, r3, #5
 801380c:	9505      	str	r5, [sp, #20]
 801380e:	9304      	str	r3, [sp, #16]
 8013810:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8013814:	015b      	lsls	r3, r3, #5
 8013816:	e9cd 3506 	strd	r3, r5, [sp, #24]
 801381a:	ab07      	add	r3, sp, #28
 801381c:	2520      	movs	r5, #32
 801381e:	9302      	str	r3, [sp, #8]
 8013820:	ab06      	add	r3, sp, #24
 8013822:	9301      	str	r3, [sp, #4]
 8013824:	ab05      	add	r3, sp, #20
 8013826:	9300      	str	r3, [sp, #0]
 8013828:	ab04      	add	r3, sp, #16
 801382a:	f7ff fe3f 	bl	80134ac <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 801382e:	9a04      	ldr	r2, [sp, #16]
 8013830:	9805      	ldr	r0, [sp, #20]
 8013832:	9b06      	ldr	r3, [sp, #24]
 8013834:	9907      	ldr	r1, [sp, #28]
 8013836:	fb92 f2f5 	sdiv	r2, r2, r5
 801383a:	fb90 f0f5 	sdiv	r0, r0, r5
 801383e:	fb93 f3f5 	sdiv	r3, r3, r5
 8013842:	fb91 f1f5 	sdiv	r1, r1, r5
 8013846:	b292      	uxth	r2, r2
 8013848:	3002      	adds	r0, #2
 801384a:	b29b      	uxth	r3, r3
 801384c:	3102      	adds	r1, #2
 801384e:	1a80      	subs	r0, r0, r2
 8013850:	3a01      	subs	r2, #1
 8013852:	1ac9      	subs	r1, r1, r3
 8013854:	3b01      	subs	r3, #1
 8013856:	80a0      	strh	r0, [r4, #4]
 8013858:	4620      	mov	r0, r4
 801385a:	8022      	strh	r2, [r4, #0]
 801385c:	8063      	strh	r3, [r4, #2]
 801385e:	80e1      	strh	r1, [r4, #6]
 8013860:	b009      	add	sp, #36	@ 0x24
 8013862:	bd30      	pop	{r4, r5, pc}

08013864 <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 8013864:	b510      	push	{r4, lr}
 8013866:	4604      	mov	r4, r0
 8013868:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	@ 0x38
 801386c:	f7ff ffc4 	bl	80137f8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 8013870:	4620      	mov	r0, r4
 8013872:	bd10      	pop	{r4, pc}

08013874 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 8013874:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013876:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	@ 0x38
 801387a:	4606      	mov	r6, r0
 801387c:	f891 0044 	ldrb.w	r0, [r1, #68]	@ 0x44
 8013880:	42a5      	cmp	r5, r4
 8013882:	6813      	ldr	r3, [r2, #0]
 8013884:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8013888:	da2b      	bge.n	80138e2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 801388a:	42a3      	cmp	r3, r4
 801388c:	dd14      	ble.n	80138b8 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 801388e:	b168      	cbz	r0, 80138ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013890:	4267      	negs	r7, r4
 8013892:	fb97 f2f0 	sdiv	r2, r7, r0
 8013896:	fb00 7212 	mls	r2, r0, r2, r7
 801389a:	1a82      	subs	r2, r0, r2
 801389c:	fb92 f7f0 	sdiv	r7, r2, r0
 80138a0:	fb00 2017 	mls	r0, r0, r7, r2
 80138a4:	1a24      	subs	r4, r4, r0
 80138a6:	42ac      	cmp	r4, r5
 80138a8:	bfb8      	it	lt
 80138aa:	462c      	movlt	r4, r5
 80138ac:	4630      	mov	r0, r6
 80138ae:	4622      	mov	r2, r4
 80138b0:	f7ff ffa2 	bl	80137f8 <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 80138b4:	4630      	mov	r0, r6
 80138b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80138b8:	42ab      	cmp	r3, r5
 80138ba:	dd0e      	ble.n	80138da <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80138bc:	b168      	cbz	r0, 80138da <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 80138be:	425f      	negs	r7, r3
 80138c0:	fb97 f2f0 	sdiv	r2, r7, r0
 80138c4:	fb00 7212 	mls	r2, r0, r2, r7
 80138c8:	1a82      	subs	r2, r0, r2
 80138ca:	fb92 f7f0 	sdiv	r7, r2, r0
 80138ce:	fb00 2017 	mls	r0, r0, r7, r2
 80138d2:	1a1b      	subs	r3, r3, r0
 80138d4:	42ab      	cmp	r3, r5
 80138d6:	bfb8      	it	lt
 80138d8:	462b      	movlt	r3, r5
 80138da:	4622      	mov	r2, r4
 80138dc:	461c      	mov	r4, r3
 80138de:	4613      	mov	r3, r2
 80138e0:	e7e4      	b.n	80138ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 80138e2:	42a3      	cmp	r3, r4
 80138e4:	da10      	bge.n	8013908 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 80138e6:	b148      	cbz	r0, 80138fc <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 80138e8:	fb94 f2f0 	sdiv	r2, r4, r0
 80138ec:	fb00 4212 	mls	r2, r0, r2, r4
 80138f0:	1a82      	subs	r2, r0, r2
 80138f2:	fb92 f7f0 	sdiv	r7, r2, r0
 80138f6:	fb00 2017 	mls	r0, r0, r7, r2
 80138fa:	4404      	add	r4, r0
 80138fc:	42a5      	cmp	r5, r4
 80138fe:	bfa8      	it	ge
 8013900:	4625      	movge	r5, r4
 8013902:	461c      	mov	r4, r3
 8013904:	462b      	mov	r3, r5
 8013906:	e7d1      	b.n	80138ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013908:	42ab      	cmp	r3, r5
 801390a:	dacf      	bge.n	80138ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 801390c:	2800      	cmp	r0, #0
 801390e:	d0cd      	beq.n	80138ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 8013910:	fb93 f2f0 	sdiv	r2, r3, r0
 8013914:	fb00 3212 	mls	r2, r0, r2, r3
 8013918:	1a82      	subs	r2, r0, r2
 801391a:	fb92 f7f0 	sdiv	r7, r2, r0
 801391e:	fb00 2017 	mls	r0, r0, r7, r2
 8013922:	4403      	add	r3, r0
 8013924:	42ab      	cmp	r3, r5
 8013926:	bfa8      	it	ge
 8013928:	462b      	movge	r3, r5
 801392a:	e7bf      	b.n	80138ac <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>

0801392c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 801392c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013930:	e9d0 650e 	ldrd	r6, r5, [r0, #56]	@ 0x38
 8013934:	468a      	mov	sl, r1
 8013936:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	@ 0x2c
 801393a:	42b5      	cmp	r5, r6
 801393c:	f9b0 b030 	ldrsh.w	fp, [r0, #48]	@ 0x30
 8013940:	6c01      	ldr	r1, [r0, #64]	@ 0x40
 8013942:	b0af      	sub	sp, #188	@ 0xbc
 8013944:	bfa4      	itt	ge
 8013946:	462b      	movge	r3, r5
 8013948:	4635      	movge	r5, r6
 801394a:	4604      	mov	r4, r0
 801394c:	6b42      	ldr	r2, [r0, #52]	@ 0x34
 801394e:	bfa8      	it	ge
 8013950:	461e      	movge	r6, r3
 8013952:	1b73      	subs	r3, r6, r5
 8013954:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8013958:	f04f 0320 	mov.w	r3, #32
 801395c:	bfa4      	itt	ge
 801395e:	f44f 5634 	movge.w	r6, #11520	@ 0x2d00
 8013962:	2500      	movge	r5, #0
 8013964:	fb99 f9f3 	sdiv	r9, r9, r3
 8013968:	fb9b fbf3 	sdiv	fp, fp, r3
 801396c:	2900      	cmp	r1, #0
 801396e:	f000 80fb 	beq.w	8013b68 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x23c>
 8013972:	f9ba 0000 	ldrsh.w	r0, [sl]
 8013976:	f9ba 3002 	ldrsh.w	r3, [sl, #2]
 801397a:	eba9 0700 	sub.w	r7, r9, r0
 801397e:	ebab 0803 	sub.w	r8, fp, r3
 8013982:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 8013986:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 801398a:	f8ba 7004 	ldrh.w	r7, [sl, #4]
 801398e:	4407      	add	r7, r0
 8013990:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 8013994:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 8013998:	f8ba 8006 	ldrh.w	r8, [sl, #6]
 801399c:	b23f      	sxth	r7, r7
 801399e:	4498      	add	r8, r3
 80139a0:	2302      	movs	r3, #2
 80139a2:	eba9 0707 	sub.w	r7, r9, r7
 80139a6:	fa0f f888 	sxth.w	r8, r8
 80139aa:	9303      	str	r3, [sp, #12]
 80139ac:	2f00      	cmp	r7, #0
 80139ae:	ebab 0808 	sub.w	r8, fp, r8
 80139b2:	bfb8      	it	lt
 80139b4:	427f      	neglt	r7, r7
 80139b6:	f1b8 0f00 	cmp.w	r8, #0
 80139ba:	bfb8      	it	lt
 80139bc:	f1c8 0800 	rsblt	r8, r8, #0
 80139c0:	45bc      	cmp	ip, r7
 80139c2:	bfcc      	ite	gt
 80139c4:	f10c 0701 	addgt.w	r7, ip, #1
 80139c8:	3701      	addle	r7, #1
 80139ca:	4540      	cmp	r0, r8
 80139cc:	bfc8      	it	gt
 80139ce:	f100 0801 	addgt.w	r8, r0, #1
 80139d2:	f894 0044 	ldrb.w	r0, [r4, #68]	@ 0x44
 80139d6:	bfd8      	it	le
 80139d8:	f108 0801 	addle.w	r8, r8, #1
 80139dc:	3001      	adds	r0, #1
 80139de:	fb08 f808 	mul.w	r8, r8, r8
 80139e2:	1040      	asrs	r0, r0, #1
 80139e4:	fb07 8707 	mla	r7, r7, r7, r8
 80139e8:	f1c0 005a 	rsb	r0, r0, #90	@ 0x5a
 80139ec:	fb91 f1f3 	sdiv	r1, r1, r3
 80139f0:	1a52      	subs	r2, r2, r1
 80139f2:	920f      	str	r2, [sp, #60]	@ 0x3c
 80139f4:	f7ff fcf0 	bl	80133d8 <_ZN8touchgfx7CWRUtil4sineEi>
 80139f8:	a92e      	add	r1, sp, #184	@ 0xb8
 80139fa:	f841 0d74 	str.w	r0, [r1, #-116]!
 80139fe:	a80f      	add	r0, sp, #60	@ 0x3c
 8013a00:	f7ff fcdf 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013a04:	f04f 0c20 	mov.w	ip, #32
 8013a08:	9b03      	ldr	r3, [sp, #12]
 8013a0a:	fb90 f0fc 	sdiv	r0, r0, ip
 8013a0e:	4340      	muls	r0, r0
 8013a10:	4287      	cmp	r7, r0
 8013a12:	da04      	bge.n	8013a1e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf2>
 8013a14:	2401      	movs	r4, #1
 8013a16:	4620      	mov	r0, r4
 8013a18:	b02f      	add	sp, #188	@ 0xbc
 8013a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013a1e:	6c21      	ldr	r1, [r4, #64]	@ 0x40
 8013a20:	6b60      	ldr	r0, [r4, #52]	@ 0x34
 8013a22:	fb91 f2f3 	sdiv	r2, r1, r3
 8013a26:	4402      	add	r2, r0
 8013a28:	fb92 f2fc 	sdiv	r2, r2, ip
 8013a2c:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013a30:	3201      	adds	r2, #1
 8013a32:	f8ba 3004 	ldrh.w	r3, [sl, #4]
 8013a36:	4352      	muls	r2, r2
 8013a38:	440b      	add	r3, r1
 8013a3a:	b21b      	sxth	r3, r3
 8013a3c:	454b      	cmp	r3, r9
 8013a3e:	bfa8      	it	ge
 8013a40:	464b      	movge	r3, r9
 8013a42:	428b      	cmp	r3, r1
 8013a44:	bfac      	ite	ge
 8013a46:	eba9 0903 	subge.w	r9, r9, r3
 8013a4a:	eba9 0901 	sublt.w	r9, r9, r1
 8013a4e:	f8ba 3006 	ldrh.w	r3, [sl, #6]
 8013a52:	f9ba 1002 	ldrsh.w	r1, [sl, #2]
 8013a56:	440b      	add	r3, r1
 8013a58:	b21b      	sxth	r3, r3
 8013a5a:	455b      	cmp	r3, fp
 8013a5c:	bfa8      	it	ge
 8013a5e:	465b      	movge	r3, fp
 8013a60:	428b      	cmp	r3, r1
 8013a62:	bfac      	ite	ge
 8013a64:	ebab 0b03 	subge.w	fp, fp, r3
 8013a68:	ebab 0b01 	sublt.w	fp, fp, r1
 8013a6c:	fb0b fb0b 	mul.w	fp, fp, fp
 8013a70:	fb09 b909 	mla	r9, r9, r9, fp
 8013a74:	4591      	cmp	r9, r2
 8013a76:	dccd      	bgt.n	8013a14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xe8>
 8013a78:	f10d 093c 	add.w	r9, sp, #60	@ 0x3c
 8013a7c:	4621      	mov	r1, r4
 8013a7e:	6aa7      	ldr	r7, [r4, #40]	@ 0x28
 8013a80:	4648      	mov	r0, r9
 8013a82:	f003 fdd1 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013a86:	6823      	ldr	r3, [r4, #0]
 8013a88:	4620      	mov	r0, r4
 8013a8a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8013a8c:	4798      	blx	r3
 8013a8e:	4653      	mov	r3, sl
 8013a90:	9000      	str	r0, [sp, #0]
 8013a92:	464a      	mov	r2, r9
 8013a94:	4639      	mov	r1, r7
 8013a96:	a811      	add	r0, sp, #68	@ 0x44
 8013a98:	f013 fde0 	bl	802765c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
 8013a9c:	6b62      	ldr	r2, [r4, #52]	@ 0x34
 8013a9e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8013aa0:	920b      	str	r2, [sp, #44]	@ 0x2c
 8013aa2:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 8013aa6:	930c      	str	r3, [sp, #48]	@ 0x30
 8013aa8:	dd07      	ble.n	8013aba <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x18e>
 8013aaa:	2102      	movs	r1, #2
 8013aac:	fb93 f3f1 	sdiv	r3, r3, r1
 8013ab0:	4413      	add	r3, r2
 8013ab2:	930c      	str	r3, [sp, #48]	@ 0x30
 8013ab4:	fb93 f3f1 	sdiv	r3, r3, r1
 8013ab8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8013aba:	f04f 0a02 	mov.w	sl, #2
 8013abe:	4628      	mov	r0, r5
 8013ac0:	f894 7044 	ldrb.w	r7, [r4, #68]	@ 0x44
 8013ac4:	f10d 08b8 	add.w	r8, sp, #184	@ 0xb8
 8013ac8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8013acc:	017f      	lsls	r7, r7, #5
 8013ace:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8013ad2:	930d      	str	r3, [sp, #52]	@ 0x34
 8013ad4:	f7ff fca0 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013ad8:	4649      	mov	r1, r9
 8013ada:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013adc:	a80d      	add	r0, sp, #52	@ 0x34
 8013ade:	f7ff fc70 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ae2:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013ae4:	fb90 f0fa 	sdiv	r0, r0, sl
 8013ae8:	eb00 0b03 	add.w	fp, r0, r3
 8013aec:	4628      	mov	r0, r5
 8013aee:	f7ff fcb2 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013af2:	f848 0d80 	str.w	r0, [r8, #-128]!
 8013af6:	a80d      	add	r0, sp, #52	@ 0x34
 8013af8:	4641      	mov	r1, r8
 8013afa:	f7ff fc62 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013afe:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013b00:	4659      	mov	r1, fp
 8013b02:	fb90 f0fa 	sdiv	r0, r0, sl
 8013b06:	1a12      	subs	r2, r2, r0
 8013b08:	a811      	add	r0, sp, #68	@ 0x44
 8013b0a:	f013 fef3 	bl	80278f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8013b0e:	f105 0a20 	add.w	sl, r5, #32
 8013b12:	bb67      	cbnz	r7, 8013b6e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x242>
 8013b14:	46ab      	mov	fp, r5
 8013b16:	45b2      	cmp	sl, r6
 8013b18:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8013b1a:	dc33      	bgt.n	8013b84 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x258>
 8013b1c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8013b1e:	4650      	mov	r0, sl
 8013b20:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8013b24:	920d      	str	r2, [sp, #52]	@ 0x34
 8013b26:	f7ff fc77 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013b2a:	4641      	mov	r1, r8
 8013b2c:	900e      	str	r0, [sp, #56]	@ 0x38
 8013b2e:	a80d      	add	r0, sp, #52	@ 0x34
 8013b30:	f7ff fc47 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013b34:	2302      	movs	r3, #2
 8013b36:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8013b38:	fb90 f0f3 	sdiv	r0, r0, r3
 8013b3c:	eb00 0b02 	add.w	fp, r0, r2
 8013b40:	4650      	mov	r0, sl
 8013b42:	f7ff fc88 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013b46:	4649      	mov	r1, r9
 8013b48:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013b4a:	a80d      	add	r0, sp, #52	@ 0x34
 8013b4c:	f7ff fc39 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013b50:	2302      	movs	r3, #2
 8013b52:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013b54:	4659      	mov	r1, fp
 8013b56:	46d3      	mov	fp, sl
 8013b58:	44ba      	add	sl, r7
 8013b5a:	fb90 f0f3 	sdiv	r0, r0, r3
 8013b5e:	1a12      	subs	r2, r2, r0
 8013b60:	a811      	add	r0, sp, #68	@ 0x44
 8013b62:	f013 ff14 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013b66:	e7d6      	b.n	8013b16 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1ea>
 8013b68:	fb92 f2f3 	sdiv	r2, r2, r3
 8013b6c:	e75e      	b.n	8013a2c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x100>
 8013b6e:	fb9a f2f7 	sdiv	r2, sl, r7
 8013b72:	fb07 a212 	mls	r2, r7, r2, sl
 8013b76:	1aba      	subs	r2, r7, r2
 8013b78:	fb92 f1f7 	sdiv	r1, r2, r7
 8013b7c:	fb07 2211 	mls	r2, r7, r1, r2
 8013b80:	4492      	add	sl, r2
 8013b82:	e7c7      	b.n	8013b14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1e8>
 8013b84:	455e      	cmp	r6, fp
 8013b86:	dd23      	ble.n	8013bd0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2a4>
 8013b88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8013b8a:	f04f 0a02 	mov.w	sl, #2
 8013b8e:	4630      	mov	r0, r6
 8013b90:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8013b94:	920d      	str	r2, [sp, #52]	@ 0x34
 8013b96:	f7ff fc3f 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013b9a:	4641      	mov	r1, r8
 8013b9c:	900e      	str	r0, [sp, #56]	@ 0x38
 8013b9e:	a80d      	add	r0, sp, #52	@ 0x34
 8013ba0:	f7ff fc0f 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013ba4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013ba6:	fb90 f0fa 	sdiv	r0, r0, sl
 8013baa:	4403      	add	r3, r0
 8013bac:	4630      	mov	r0, r6
 8013bae:	9303      	str	r3, [sp, #12]
 8013bb0:	f7ff fc51 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013bb4:	4649      	mov	r1, r9
 8013bb6:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013bb8:	a80d      	add	r0, sp, #52	@ 0x34
 8013bba:	f7ff fc02 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013bbe:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013bc0:	9b03      	ldr	r3, [sp, #12]
 8013bc2:	fb90 f0fa 	sdiv	r0, r0, sl
 8013bc6:	4619      	mov	r1, r3
 8013bc8:	1a12      	subs	r2, r2, r0
 8013bca:	a811      	add	r0, sp, #68	@ 0x44
 8013bcc:	f013 fedf 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013bd0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013bd2:	b99b      	cbnz	r3, 8013bfc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2d0>
 8013bd4:	1b75      	subs	r5, r6, r5
 8013bd6:	f5b5 5f34 	cmp.w	r5, #11520	@ 0x2d00
 8013bda:	da04      	bge.n	8013be6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
 8013bdc:	a811      	add	r0, sp, #68	@ 0x44
 8013bde:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	@ 0x2c
 8013be2:	f013 fed4 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013be6:	21ff      	movs	r1, #255	@ 0xff
 8013be8:	a811      	add	r0, sp, #68	@ 0x44
 8013bea:	f013 fdcb 	bl	8027784 <_ZN8touchgfx6Canvas6renderEh>
 8013bee:	4604      	mov	r4, r0
 8013bf0:	4b89      	ldr	r3, [pc, #548]	@ (8013e18 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4ec>)
 8013bf2:	a816      	add	r0, sp, #88	@ 0x58
 8013bf4:	9311      	str	r3, [sp, #68]	@ 0x44
 8013bf6:	f000 fcc3 	bl	8014580 <_ZN8touchgfx7OutlineD1Ev>
 8013bfa:	e70c      	b.n	8013a16 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xea>
 8013bfc:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	@ 0x5c
 8013c00:	429a      	cmp	r2, r3
 8013c02:	f0c0 8107 	bcc.w	8013e14 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e8>
 8013c06:	1b73      	subs	r3, r6, r5
 8013c08:	f894 a045 	ldrb.w	sl, [r4, #69]	@ 0x45
 8013c0c:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8013c10:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 8013c14:	9303      	str	r3, [sp, #12]
 8013c16:	da43      	bge.n	8013ca0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
 8013c18:	4630      	mov	r0, r6
 8013c1a:	f7ff fbfd 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013c1e:	4649      	mov	r1, r9
 8013c20:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013c22:	a80b      	add	r0, sp, #44	@ 0x2c
 8013c24:	f7ff fbcd 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c28:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013c2a:	18c3      	adds	r3, r0, r3
 8013c2c:	4630      	mov	r0, r6
 8013c2e:	9305      	str	r3, [sp, #20]
 8013c30:	f7ff fc11 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013c34:	4649      	mov	r1, r9
 8013c36:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013c38:	a80b      	add	r0, sp, #44	@ 0x2c
 8013c3a:	f7ff fbc2 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c3e:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013c40:	f506 52b4 	add.w	r2, r6, #5760	@ 0x1680
 8013c44:	1a1b      	subs	r3, r3, r0
 8013c46:	9206      	str	r2, [sp, #24]
 8013c48:	9304      	str	r3, [sp, #16]
 8013c4a:	eb06 030a 	add.w	r3, r6, sl
 8013c4e:	9a06      	ldr	r2, [sp, #24]
 8013c50:	4293      	cmp	r3, r2
 8013c52:	da25      	bge.n	8013ca0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x374>
 8013c54:	4618      	mov	r0, r3
 8013c56:	9308      	str	r3, [sp, #32]
 8013c58:	f7ff fbde 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013c5c:	4649      	mov	r1, r9
 8013c5e:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013c60:	a80c      	add	r0, sp, #48	@ 0x30
 8013c62:	f7ff fbae 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c66:	2202      	movs	r2, #2
 8013c68:	9b05      	ldr	r3, [sp, #20]
 8013c6a:	9209      	str	r2, [sp, #36]	@ 0x24
 8013c6c:	fb90 f0f2 	sdiv	r0, r0, r2
 8013c70:	18c3      	adds	r3, r0, r3
 8013c72:	9307      	str	r3, [sp, #28]
 8013c74:	9b08      	ldr	r3, [sp, #32]
 8013c76:	4618      	mov	r0, r3
 8013c78:	f7ff fbed 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013c7c:	a92e      	add	r1, sp, #184	@ 0xb8
 8013c7e:	f841 0d80 	str.w	r0, [r1, #-128]!
 8013c82:	a80c      	add	r0, sp, #48	@ 0x30
 8013c84:	f7ff fb9d 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013c88:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8013c8a:	9b04      	ldr	r3, [sp, #16]
 8013c8c:	9907      	ldr	r1, [sp, #28]
 8013c8e:	fb90 f2f2 	sdiv	r2, r0, r2
 8013c92:	a811      	add	r0, sp, #68	@ 0x44
 8013c94:	1a9a      	subs	r2, r3, r2
 8013c96:	f013 fe7a 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013c9a:	9b08      	ldr	r3, [sp, #32]
 8013c9c:	4453      	add	r3, sl
 8013c9e:	e7d6      	b.n	8013c4e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x322>
 8013ca0:	455e      	cmp	r6, fp
 8013ca2:	dd25      	ble.n	8013cf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c4>
 8013ca4:	4630      	mov	r0, r6
 8013ca6:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8013caa:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8013cae:	930d      	str	r3, [sp, #52]	@ 0x34
 8013cb0:	f7ff fbb2 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013cb4:	4641      	mov	r1, r8
 8013cb6:	900e      	str	r0, [sp, #56]	@ 0x38
 8013cb8:	a80d      	add	r0, sp, #52	@ 0x34
 8013cba:	f7ff fb82 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013cbe:	2202      	movs	r2, #2
 8013cc0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013cc2:	9204      	str	r2, [sp, #16]
 8013cc4:	fb90 f0f2 	sdiv	r0, r0, r2
 8013cc8:	eb00 0903 	add.w	r9, r0, r3
 8013ccc:	4630      	mov	r0, r6
 8013cce:	f7ff fbc2 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013cd2:	a92e      	add	r1, sp, #184	@ 0xb8
 8013cd4:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8013cd8:	a80d      	add	r0, sp, #52	@ 0x34
 8013cda:	f7ff fb72 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013cde:	9a04      	ldr	r2, [sp, #16]
 8013ce0:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013ce2:	4649      	mov	r1, r9
 8013ce4:	fb90 f2f2 	sdiv	r2, r0, r2
 8013ce8:	a811      	add	r0, sp, #68	@ 0x44
 8013cea:	1a9a      	subs	r2, r3, r2
 8013cec:	f013 fe4f 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013cf0:	46d9      	mov	r9, fp
 8013cf2:	2602      	movs	r6, #2
 8013cf4:	45a9      	cmp	r9, r5
 8013cf6:	db25      	blt.n	8013d44 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x418>
 8013cf8:	4648      	mov	r0, r9
 8013cfa:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8013cfe:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8013d02:	930d      	str	r3, [sp, #52]	@ 0x34
 8013d04:	f7ff fb88 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013d08:	4641      	mov	r1, r8
 8013d0a:	900e      	str	r0, [sp, #56]	@ 0x38
 8013d0c:	a80d      	add	r0, sp, #52	@ 0x34
 8013d0e:	f7ff fb58 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d12:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013d14:	fb90 f0f6 	sdiv	r0, r0, r6
 8013d18:	eb00 0b03 	add.w	fp, r0, r3
 8013d1c:	4648      	mov	r0, r9
 8013d1e:	f7ff fb9a 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013d22:	a90f      	add	r1, sp, #60	@ 0x3c
 8013d24:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013d26:	a80d      	add	r0, sp, #52	@ 0x34
 8013d28:	f7ff fb4b 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d2c:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013d2e:	4659      	mov	r1, fp
 8013d30:	46cb      	mov	fp, r9
 8013d32:	eba9 0907 	sub.w	r9, r9, r7
 8013d36:	fb90 f0f6 	sdiv	r0, r0, r6
 8013d3a:	1a12      	subs	r2, r2, r0
 8013d3c:	a811      	add	r0, sp, #68	@ 0x44
 8013d3e:	f013 fe26 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d42:	e7d7      	b.n	8013cf4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3c8>
 8013d44:	455d      	cmp	r5, fp
 8013d46:	da22      	bge.n	8013d8e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x462>
 8013d48:	2602      	movs	r6, #2
 8013d4a:	4628      	mov	r0, r5
 8013d4c:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8013d50:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 8013d54:	930d      	str	r3, [sp, #52]	@ 0x34
 8013d56:	f7ff fb5f 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013d5a:	4641      	mov	r1, r8
 8013d5c:	900e      	str	r0, [sp, #56]	@ 0x38
 8013d5e:	a80d      	add	r0, sp, #52	@ 0x34
 8013d60:	f7ff fb2f 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d64:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8013d66:	fb90 f0f6 	sdiv	r0, r0, r6
 8013d6a:	4407      	add	r7, r0
 8013d6c:	4628      	mov	r0, r5
 8013d6e:	f7ff fb72 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013d72:	a92e      	add	r1, sp, #184	@ 0xb8
 8013d74:	f841 0d7c 	str.w	r0, [r1, #-124]!
 8013d78:	a80d      	add	r0, sp, #52	@ 0x34
 8013d7a:	f7ff fb22 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013d7e:	6b22      	ldr	r2, [r4, #48]	@ 0x30
 8013d80:	4639      	mov	r1, r7
 8013d82:	fb90 f0f6 	sdiv	r0, r0, r6
 8013d86:	1a12      	subs	r2, r2, r0
 8013d88:	a811      	add	r0, sp, #68	@ 0x44
 8013d8a:	f013 fe00 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013d8e:	9b03      	ldr	r3, [sp, #12]
 8013d90:	f5b3 5f34 	cmp.w	r3, #11520	@ 0x2d00
 8013d94:	f6bf af27 	bge.w	8013be6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
 8013d98:	ae2e      	add	r6, sp, #184	@ 0xb8
 8013d9a:	4628      	mov	r0, r5
 8013d9c:	f7ff fb3c 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013da0:	f04f 0b02 	mov.w	fp, #2
 8013da4:	f846 0d7c 	str.w	r0, [r6, #-124]!
 8013da8:	a80b      	add	r0, sp, #44	@ 0x2c
 8013daa:	4631      	mov	r1, r6
 8013dac:	f7ff fb09 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013db0:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013db2:	eb00 0903 	add.w	r9, r0, r3
 8013db6:	4628      	mov	r0, r5
 8013db8:	f7ff fb4d 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013dbc:	4631      	mov	r1, r6
 8013dbe:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013dc0:	a80b      	add	r0, sp, #44	@ 0x2c
 8013dc2:	f7ff fafe 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013dc6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
 8013dc8:	f5a5 54b4 	sub.w	r4, r5, #5760	@ 0x1680
 8013dcc:	eba3 0800 	sub.w	r8, r3, r0
 8013dd0:	4454      	add	r4, sl
 8013dd2:	42a5      	cmp	r5, r4
 8013dd4:	f77f af07 	ble.w	8013be6 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ba>
 8013dd8:	4620      	mov	r0, r4
 8013dda:	f7ff fb1d 	bl	8013418 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 8013dde:	4631      	mov	r1, r6
 8013de0:	900f      	str	r0, [sp, #60]	@ 0x3c
 8013de2:	a80c      	add	r0, sp, #48	@ 0x30
 8013de4:	f7ff faed 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013de8:	fb90 f0fb 	sdiv	r0, r0, fp
 8013dec:	eb00 0709 	add.w	r7, r0, r9
 8013df0:	4620      	mov	r0, r4
 8013df2:	f7ff fb30 	bl	8013456 <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 8013df6:	a90e      	add	r1, sp, #56	@ 0x38
 8013df8:	900e      	str	r0, [sp, #56]	@ 0x38
 8013dfa:	a80c      	add	r0, sp, #48	@ 0x30
 8013dfc:	f7ff fae1 	bl	80133c2 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8013e00:	4639      	mov	r1, r7
 8013e02:	4454      	add	r4, sl
 8013e04:	fb90 f2fb 	sdiv	r2, r0, fp
 8013e08:	a811      	add	r0, sp, #68	@ 0x44
 8013e0a:	eba8 0202 	sub.w	r2, r8, r2
 8013e0e:	f013 fdbe 	bl	802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8013e12:	e7de      	b.n	8013dd2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4a6>
 8013e14:	2400      	movs	r4, #0
 8013e16:	e6eb      	b.n	8013bf0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c4>
 8013e18:	0802b124 	.word	0x0802b124

08013e1c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
 8013e1c:	b510      	push	{r4, lr}
 8013e1e:	2200      	movs	r2, #0
 8013e20:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8013e24:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8013e28:	8002      	strh	r2, [r0, #0]
 8013e2a:	8042      	strh	r2, [r0, #2]
 8013e2c:	8084      	strh	r4, [r0, #4]
 8013e2e:	80c1      	strh	r1, [r0, #6]
 8013e30:	bd10      	pop	{r4, pc}
	...

08013e34 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8013e34:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8013e36:	6803      	ldr	r3, [r0, #0]
 8013e38:	460d      	mov	r5, r1
 8013e3a:	4604      	mov	r4, r0
 8013e3c:	4601      	mov	r1, r0
 8013e3e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8013e40:	a802      	add	r0, sp, #8
 8013e42:	4798      	blx	r3
 8013e44:	6828      	ldr	r0, [r5, #0]
 8013e46:	6869      	ldr	r1, [r5, #4]
 8013e48:	466b      	mov	r3, sp
 8013e4a:	c303      	stmia	r3!, {r0, r1}
 8013e4c:	4668      	mov	r0, sp
 8013e4e:	4619      	mov	r1, r3
 8013e50:	f7fe fa74 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8013e54:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8013e56:	b188      	cbz	r0, 8013e7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013e58:	6803      	ldr	r3, [r0, #0]
 8013e5a:	1d21      	adds	r1, r4, #4
 8013e5c:	68db      	ldr	r3, [r3, #12]
 8013e5e:	4798      	blx	r3
 8013e60:	b160      	cbz	r0, 8013e7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013e62:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013e66:	2b00      	cmp	r3, #0
 8013e68:	dd08      	ble.n	8013e7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013e6a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8013e6e:	2d00      	cmp	r5, #0
 8013e70:	dd04      	ble.n	8013e7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013e72:	4a2b      	ldr	r2, [pc, #172]	@ (8013f20 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8013e74:	7812      	ldrb	r2, [r2, #0]
 8013e76:	b11a      	cbz	r2, 8013e80 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8013e78:	2a01      	cmp	r2, #1
 8013e7a:	d029      	beq.n	8013ed0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8013e7c:	b004      	add	sp, #16
 8013e7e:	bd70      	pop	{r4, r5, r6, pc}
 8013e80:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013e84:	441d      	add	r5, r3
 8013e86:	b2ad      	uxth	r5, r5
 8013e88:	b22e      	sxth	r6, r5
 8013e8a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8013e8e:	42b3      	cmp	r3, r6
 8013e90:	daf4      	bge.n	8013e7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013e92:	6823      	ldr	r3, [r4, #0]
 8013e94:	4669      	mov	r1, sp
 8013e96:	4620      	mov	r0, r4
 8013e98:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8013e9a:	4798      	blx	r3
 8013e9c:	b940      	cbnz	r0, 8013eb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8013e9e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8013ea2:	2b01      	cmp	r3, #1
 8013ea4:	d004      	beq.n	8013eb0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8013ea6:	3301      	adds	r3, #1
 8013ea8:	105b      	asrs	r3, r3, #1
 8013eaa:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013eae:	e7f0      	b.n	8013e92 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8013eb0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8013eb4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013eb8:	4413      	add	r3, r2
 8013eba:	b29b      	uxth	r3, r3
 8013ebc:	441a      	add	r2, r3
 8013ebe:	f8ad 3002 	strh.w	r3, [sp, #2]
 8013ec2:	b212      	sxth	r2, r2
 8013ec4:	4296      	cmp	r6, r2
 8013ec6:	dae0      	bge.n	8013e8a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8013ec8:	1aeb      	subs	r3, r5, r3
 8013eca:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013ece:	e7dc      	b.n	8013e8a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8013ed0:	f8bd 5000 	ldrh.w	r5, [sp]
 8013ed4:	441d      	add	r5, r3
 8013ed6:	b2ad      	uxth	r5, r5
 8013ed8:	b22e      	sxth	r6, r5
 8013eda:	f9bd 3000 	ldrsh.w	r3, [sp]
 8013ede:	42b3      	cmp	r3, r6
 8013ee0:	dacc      	bge.n	8013e7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8013ee2:	6823      	ldr	r3, [r4, #0]
 8013ee4:	4669      	mov	r1, sp
 8013ee6:	4620      	mov	r0, r4
 8013ee8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8013eea:	4798      	blx	r3
 8013eec:	b940      	cbnz	r0, 8013f00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8013eee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8013ef2:	2b01      	cmp	r3, #1
 8013ef4:	d004      	beq.n	8013f00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8013ef6:	3301      	adds	r3, #1
 8013ef8:	105b      	asrs	r3, r3, #1
 8013efa:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013efe:	e7f0      	b.n	8013ee2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8013f00:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8013f04:	f8bd 3000 	ldrh.w	r3, [sp]
 8013f08:	4413      	add	r3, r2
 8013f0a:	b29b      	uxth	r3, r3
 8013f0c:	441a      	add	r2, r3
 8013f0e:	f8ad 3000 	strh.w	r3, [sp]
 8013f12:	b212      	sxth	r2, r2
 8013f14:	4296      	cmp	r6, r2
 8013f16:	dae0      	bge.n	8013eda <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013f18:	1aeb      	subs	r3, r5, r3
 8013f1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8013f1e:	e7dc      	b.n	8013eda <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8013f20:	2000397c 	.word	0x2000397c

08013f24 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8013f24:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8013f26:	6803      	ldr	r3, [r0, #0]
 8013f28:	4604      	mov	r4, r0
 8013f2a:	4601      	mov	r1, r0
 8013f2c:	4668      	mov	r0, sp
 8013f2e:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8013f30:	4798      	blx	r3
 8013f32:	2100      	movs	r1, #0
 8013f34:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8013f38:	4668      	mov	r0, sp
 8013f3a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8013f3e:	9102      	str	r1, [sp, #8]
 8013f40:	a902      	add	r1, sp, #8
 8013f42:	f8ad 200c 	strh.w	r2, [sp, #12]
 8013f46:	f8ad 300e 	strh.w	r3, [sp, #14]
 8013f4a:	f7fe f9f7 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8013f4e:	6823      	ldr	r3, [r4, #0]
 8013f50:	4669      	mov	r1, sp
 8013f52:	4620      	mov	r0, r4
 8013f54:	691b      	ldr	r3, [r3, #16]
 8013f56:	4798      	blx	r3
 8013f58:	b004      	add	sp, #16
 8013f5a:	bd10      	pop	{r4, pc}

08013f5c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8013f5c:	2101      	movs	r1, #1
 8013f5e:	2200      	movs	r2, #0
 8013f60:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8013f64:	490a      	ldr	r1, [pc, #40]	@ (8013f90 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8013f66:	8082      	strh	r2, [r0, #4]
 8013f68:	6001      	str	r1, [r0, #0]
 8013f6a:	21ff      	movs	r1, #255	@ 0xff
 8013f6c:	80c2      	strh	r2, [r0, #6]
 8013f6e:	8102      	strh	r2, [r0, #8]
 8013f70:	8142      	strh	r2, [r0, #10]
 8013f72:	8182      	strh	r2, [r0, #12]
 8013f74:	81c2      	strh	r2, [r0, #14]
 8013f76:	8202      	strh	r2, [r0, #16]
 8013f78:	8242      	strh	r2, [r0, #18]
 8013f7a:	61c2      	str	r2, [r0, #28]
 8013f7c:	8402      	strh	r2, [r0, #32]
 8013f7e:	8442      	strh	r2, [r0, #34]	@ 0x22
 8013f80:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
 8013f84:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
 8013f88:	6282      	str	r2, [r0, #40]	@ 0x28
 8013f8a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8013f8e:	4770      	bx	lr
 8013f90:	0802a9fc 	.word	0x0802a9fc

08013f94 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8013f94:	2300      	movs	r3, #0
 8013f96:	8083      	strh	r3, [r0, #4]
 8013f98:	80c3      	strh	r3, [r0, #6]
 8013f9a:	8003      	strh	r3, [r0, #0]
 8013f9c:	8043      	strh	r3, [r0, #2]
 8013f9e:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8013fa2:	2bff      	cmp	r3, #255	@ 0xff
 8013fa4:	bf01      	itttt	eq
 8013fa6:	890b      	ldrheq	r3, [r1, #8]
 8013fa8:	8083      	strheq	r3, [r0, #4]
 8013faa:	894b      	ldrheq	r3, [r1, #10]
 8013fac:	80c3      	strheq	r3, [r0, #6]
 8013fae:	4770      	bx	lr

08013fb0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8013fb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013fb2:	4604      	mov	r4, r0
 8013fb4:	466b      	mov	r3, sp
 8013fb6:	6808      	ldr	r0, [r1, #0]
 8013fb8:	6849      	ldr	r1, [r1, #4]
 8013fba:	c303      	stmia	r3!, {r0, r1}
 8013fbc:	6823      	ldr	r3, [r4, #0]
 8013fbe:	4669      	mov	r1, sp
 8013fc0:	4620      	mov	r0, r4
 8013fc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8013fc4:	4798      	blx	r3
 8013fc6:	4b08      	ldr	r3, [pc, #32]	@ (8013fe8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8013fc8:	681b      	ldr	r3, [r3, #0]
 8013fca:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8013fce:	b10a      	cbz	r2, 8013fd4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8013fd0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8013fd2:	b900      	cbnz	r0, 8013fd6 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8013fd4:	6898      	ldr	r0, [r3, #8]
 8013fd6:	6803      	ldr	r3, [r0, #0]
 8013fd8:	4669      	mov	r1, sp
 8013fda:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 8013fdc:	6a1d      	ldr	r5, [r3, #32]
 8013fde:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8013fe2:	47a8      	blx	r5
 8013fe4:	b003      	add	sp, #12
 8013fe6:	bd30      	pop	{r4, r5, pc}
 8013fe8:	20003984 	.word	0x20003984

08013fec <_ZNK8touchgfx3Box17invalidateContentEv>:
 8013fec:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8013ff0:	b12a      	cbz	r2, 8013ffe <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013ff2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8013ff6:	b112      	cbz	r2, 8013ffe <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8013ff8:	6803      	ldr	r3, [r0, #0]
 8013ffa:	695b      	ldr	r3, [r3, #20]
 8013ffc:	4718      	bx	r3
 8013ffe:	4770      	bx	lr

08014000 <_ZN8touchgfx10TiledImage9setOffsetEss>:
 8014000:	b570      	push	{r4, r5, r6, lr}
 8014002:	6803      	ldr	r3, [r0, #0]
 8014004:	4604      	mov	r4, r0
 8014006:	4615      	mov	r5, r2
 8014008:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 801400a:	4798      	blx	r3
 801400c:	6823      	ldr	r3, [r4, #0]
 801400e:	4629      	mov	r1, r5
 8014010:	4620      	mov	r0, r4
 8014012:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8014014:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014018:	4718      	bx	r3

0801401a <_ZN8touchgfx10TiledImage9getOffsetERsS1_>:
 801401a:	b570      	push	{r4, r5, r6, lr}
 801401c:	6803      	ldr	r3, [r0, #0]
 801401e:	4604      	mov	r4, r0
 8014020:	460e      	mov	r6, r1
 8014022:	4615      	mov	r5, r2
 8014024:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8014026:	4798      	blx	r3
 8014028:	8030      	strh	r0, [r6, #0]
 801402a:	6823      	ldr	r3, [r4, #0]
 801402c:	4620      	mov	r0, r4
 801402e:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8014030:	4798      	blx	r3
 8014032:	8028      	strh	r0, [r5, #0]
 8014034:	bd70      	pop	{r4, r5, r6, pc}

08014036 <_ZN8touchgfx10TiledImage10getXOffsetEv>:
 8014036:	f9b0 002a 	ldrsh.w	r0, [r0, #42]	@ 0x2a
 801403a:	4770      	bx	lr

0801403c <_ZN8touchgfx10TiledImage10getYOffsetEv>:
 801403c:	f9b0 002c 	ldrsh.w	r0, [r0, #44]	@ 0x2c
 8014040:	4770      	bx	lr

08014042 <_ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE>:
 8014042:	b510      	push	{r4, lr}
 8014044:	4604      	mov	r4, r0
 8014046:	f000 fa2e 	bl	80144a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801404a:	6823      	ldr	r3, [r4, #0]
 801404c:	4620      	mov	r0, r4
 801404e:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	@ 0x2c
 8014052:	f9b4 102a 	ldrsh.w	r1, [r4, #42]	@ 0x2a
 8014056:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8014058:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801405c:	4718      	bx	r3

0801405e <_ZN8touchgfx10TiledImage10setXOffsetEs>:
 801405e:	b538      	push	{r3, r4, r5, lr}
 8014060:	f100 0526 	add.w	r5, r0, #38	@ 0x26
 8014064:	4604      	mov	r4, r0
 8014066:	8541      	strh	r1, [r0, #42]	@ 0x2a
 8014068:	4628      	mov	r0, r5
 801406a:	f004 ff29 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801406e:	b188      	cbz	r0, 8014094 <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8014070:	4628      	mov	r0, r5
 8014072:	f004 ff25 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8014076:	f9b4 202a 	ldrsh.w	r2, [r4, #42]	@ 0x2a
 801407a:	fb92 f3f0 	sdiv	r3, r2, r0
 801407e:	fb03 2010 	mls	r0, r3, r0, r2
 8014082:	2800      	cmp	r0, #0
 8014084:	8560      	strh	r0, [r4, #42]	@ 0x2a
 8014086:	da05      	bge.n	8014094 <_ZN8touchgfx10TiledImage10setXOffsetEs+0x36>
 8014088:	4628      	mov	r0, r5
 801408a:	f004 ff19 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801408e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
 8014090:	4418      	add	r0, r3
 8014092:	8560      	strh	r0, [r4, #42]	@ 0x2a
 8014094:	bd38      	pop	{r3, r4, r5, pc}

08014096 <_ZN8touchgfx10TiledImage10setYOffsetEs>:
 8014096:	b538      	push	{r3, r4, r5, lr}
 8014098:	f100 0526 	add.w	r5, r0, #38	@ 0x26
 801409c:	4604      	mov	r4, r0
 801409e:	8581      	strh	r1, [r0, #44]	@ 0x2c
 80140a0:	4628      	mov	r0, r5
 80140a2:	f004 ff41 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80140a6:	b188      	cbz	r0, 80140cc <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80140a8:	4628      	mov	r0, r5
 80140aa:	f004 ff3d 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80140ae:	f9b4 202c 	ldrsh.w	r2, [r4, #44]	@ 0x2c
 80140b2:	fb92 f3f0 	sdiv	r3, r2, r0
 80140b6:	fb03 2010 	mls	r0, r3, r0, r2
 80140ba:	2800      	cmp	r0, #0
 80140bc:	85a0      	strh	r0, [r4, #44]	@ 0x2c
 80140be:	da05      	bge.n	80140cc <_ZN8touchgfx10TiledImage10setYOffsetEs+0x36>
 80140c0:	4628      	mov	r0, r5
 80140c2:	f004 ff31 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80140c6:	8da3      	ldrh	r3, [r4, #44]	@ 0x2c
 80140c8:	4418      	add	r0, r3
 80140ca:	85a0      	strh	r0, [r4, #44]	@ 0x2c
 80140cc:	bd38      	pop	{r3, r4, r5, pc}
	...

080140d0 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE>:
 80140d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80140d4:	f100 0b26 	add.w	fp, r0, #38	@ 0x26
 80140d8:	b093      	sub	sp, #76	@ 0x4c
 80140da:	4607      	mov	r7, r0
 80140dc:	460e      	mov	r6, r1
 80140de:	4658      	mov	r0, fp
 80140e0:	f004 feee 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80140e4:	4681      	mov	r9, r0
 80140e6:	4658      	mov	r0, fp
 80140e8:	f004 ff1e 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80140ec:	4605      	mov	r5, r0
 80140ee:	f1b9 0f00 	cmp.w	r9, #0
 80140f2:	f000 80c4 	beq.w	801427e <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80140f6:	2800      	cmp	r0, #0
 80140f8:	f000 80c1 	beq.w	801427e <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 80140fc:	2300      	movs	r3, #0
 80140fe:	a90e      	add	r1, sp, #56	@ 0x38
 8014100:	4638      	mov	r0, r7
 8014102:	fa1f f889 	uxth.w	r8, r9
 8014106:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
 801410a:	683b      	ldr	r3, [r7, #0]
 801410c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801410e:	4798      	blx	r3
 8014110:	f9b7 202a 	ldrsh.w	r2, [r7, #42]	@ 0x2a
 8014114:	f9b6 3000 	ldrsh.w	r3, [r6]
 8014118:	88b1      	ldrh	r1, [r6, #4]
 801411a:	189c      	adds	r4, r3, r2
 801411c:	440b      	add	r3, r1
 801411e:	f9b7 102c 	ldrsh.w	r1, [r7, #44]	@ 0x2c
 8014122:	fa02 f383 	sxtah	r3, r2, r3
 8014126:	3b01      	subs	r3, #1
 8014128:	fb93 f3f9 	sdiv	r3, r3, r9
 801412c:	fb94 f4f9 	sdiv	r4, r4, r9
 8014130:	fb13 f308 	smulbb	r3, r3, r8
 8014134:	fb14 f408 	smulbb	r4, r4, r8
 8014138:	b21b      	sxth	r3, r3
 801413a:	1aa4      	subs	r4, r4, r2
 801413c:	b2aa      	uxth	r2, r5
 801413e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8014140:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014144:	b2a4      	uxth	r4, r4
 8014146:	9205      	str	r2, [sp, #20]
 8014148:	185a      	adds	r2, r3, r1
 801414a:	9805      	ldr	r0, [sp, #20]
 801414c:	fb92 f2f5 	sdiv	r2, r2, r5
 8014150:	fb12 f200 	smulbb	r2, r2, r0
 8014154:	1a52      	subs	r2, r2, r1
 8014156:	b212      	sxth	r2, r2
 8014158:	920c      	str	r2, [sp, #48]	@ 0x30
 801415a:	88f2      	ldrh	r2, [r6, #6]
 801415c:	4413      	add	r3, r2
 801415e:	fa01 f383 	sxtah	r3, r1, r3
 8014162:	3b01      	subs	r3, #1
 8014164:	fb93 f3f5 	sdiv	r3, r3, r5
 8014168:	fb13 f300 	smulbb	r3, r3, r0
 801416c:	eb08 0504 	add.w	r5, r8, r4
 8014170:	b21b      	sxth	r3, r3
 8014172:	930d      	str	r3, [sp, #52]	@ 0x34
 8014174:	b223      	sxth	r3, r4
 8014176:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8014178:	b2ad      	uxth	r5, r5
 801417a:	4293      	cmp	r3, r2
 801417c:	9306      	str	r3, [sp, #24]
 801417e:	dc7e      	bgt.n	801427e <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1ae>
 8014180:	b22b      	sxth	r3, r5
 8014182:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8014186:	930a      	str	r3, [sp, #40]	@ 0x28
 8014188:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801418a:	4599      	cmp	r9, r3
 801418c:	dd03      	ble.n	8014196 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xc6>
 801418e:	4444      	add	r4, r8
 8014190:	4445      	add	r5, r8
 8014192:	b2a4      	uxth	r4, r4
 8014194:	e7ee      	b.n	8014174 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xa4>
 8014196:	f9b6 c000 	ldrsh.w	ip, [r6]
 801419a:	88b2      	ldrh	r2, [r6, #4]
 801419c:	9806      	ldr	r0, [sp, #24]
 801419e:	4462      	add	r2, ip
 80141a0:	9905      	ldr	r1, [sp, #20]
 80141a2:	b292      	uxth	r2, r2
 80141a4:	b213      	sxth	r3, r2
 80141a6:	9308      	str	r3, [sp, #32]
 80141a8:	fa1f f389 	uxth.w	r3, r9
 80141ac:	4419      	add	r1, r3
 80141ae:	9307      	str	r3, [sp, #28]
 80141b0:	4603      	mov	r3, r0
 80141b2:	9808      	ldr	r0, [sp, #32]
 80141b4:	b289      	uxth	r1, r1
 80141b6:	4283      	cmp	r3, r0
 80141b8:	fa0f fa81 	sxth.w	sl, r1
 80141bc:	da5b      	bge.n	8014276 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80141be:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80141c0:	4584      	cmp	ip, r0
 80141c2:	da58      	bge.n	8014276 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80141c4:	f9b6 0002 	ldrsh.w	r0, [r6, #2]
 80141c8:	f8b6 e006 	ldrh.w	lr, [r6, #6]
 80141cc:	4486      	add	lr, r0
 80141ce:	fa1f fe8e 	uxth.w	lr, lr
 80141d2:	fa0f f38e 	sxth.w	r3, lr
 80141d6:	4599      	cmp	r9, r3
 80141d8:	9309      	str	r3, [sp, #36]	@ 0x24
 80141da:	da4c      	bge.n	8014276 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80141dc:	4550      	cmp	r0, sl
 80141de:	da4a      	bge.n	8014276 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1a6>
 80141e0:	9b06      	ldr	r3, [sp, #24]
 80141e2:	459c      	cmp	ip, r3
 80141e4:	bfb8      	it	lt
 80141e6:	469c      	movlt	ip, r3
 80141e8:	4548      	cmp	r0, r9
 80141ea:	9b08      	ldr	r3, [sp, #32]
 80141ec:	bfb8      	it	lt
 80141ee:	4648      	movlt	r0, r9
 80141f0:	f8ad c040 	strh.w	ip, [sp, #64]	@ 0x40
 80141f4:	4699      	mov	r9, r3
 80141f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80141f8:	f8ad 0042 	strh.w	r0, [sp, #66]	@ 0x42
 80141fc:	4599      	cmp	r9, r3
 80141fe:	bfc8      	it	gt
 8014200:	462a      	movgt	r2, r5
 8014202:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014204:	4553      	cmp	r3, sl
 8014206:	bfd8      	it	le
 8014208:	4671      	movle	r1, lr
 801420a:	eba2 020c 	sub.w	r2, r2, ip
 801420e:	1a09      	subs	r1, r1, r0
 8014210:	f8ad 2044 	strh.w	r2, [sp, #68]	@ 0x44
 8014214:	f8ad 1046 	strh.w	r1, [sp, #70]	@ 0x46
 8014218:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 801421c:	9b07      	ldr	r3, [sp, #28]
 801421e:	1b12      	subs	r2, r2, r4
 8014220:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 8014224:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 8014228:	1ad2      	subs	r2, r2, r3
 801422a:	4b16      	ldr	r3, [pc, #88]	@ (8014284 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x1b4>)
 801422c:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 8014230:	681a      	ldr	r2, [r3, #0]
 8014232:	f892 1058 	ldrb.w	r1, [r2, #88]	@ 0x58
 8014236:	b109      	cbz	r1, 801423c <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16c>
 8014238:	6cd0      	ldr	r0, [r2, #76]	@ 0x4c
 801423a:	b900      	cbnz	r0, 801423e <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x16e>
 801423c:	6890      	ldr	r0, [r2, #8]
 801423e:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 8014242:	f04f 0c01 	mov.w	ip, #1
 8014246:	9b07      	ldr	r3, [sp, #28]
 8014248:	6801      	ldr	r1, [r0, #0]
 801424a:	4413      	add	r3, r2
 801424c:	f8cd c008 	str.w	ip, [sp, #8]
 8014250:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 8014254:	f897 c028 	ldrb.w	ip, [r7, #40]	@ 0x28
 8014258:	b21b      	sxth	r3, r3
 801425a:	4422      	add	r2, r4
 801425c:	f8cd c004 	str.w	ip, [sp, #4]
 8014260:	f10d 0c40 	add.w	ip, sp, #64	@ 0x40
 8014264:	b212      	sxth	r2, r2
 8014266:	f8cd c000 	str.w	ip, [sp]
 801426a:	f8d1 9008 	ldr.w	r9, [r1, #8]
 801426e:	4659      	mov	r1, fp
 8014270:	47c8      	blx	r9
 8014272:	46d1      	mov	r9, sl
 8014274:	e788      	b.n	8014188 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0xb8>
 8014276:	2300      	movs	r3, #0
 8014278:	e9cd 3310 	strd	r3, r3, [sp, #64]	@ 0x40
 801427c:	e7cc      	b.n	8014218 <_ZNK8touchgfx10TiledImage4drawERKNS_4RectE+0x148>
 801427e:	b013      	add	sp, #76	@ 0x4c
 8014280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014284:	20003984 	.word	0x20003984

08014288 <_ZNK8touchgfx10TiledImage12getSolidRectEv>:
 8014288:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801428c:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8014290:	4606      	mov	r6, r0
 8014292:	4689      	mov	r9, r1
 8014294:	2bff      	cmp	r3, #255	@ 0xff
 8014296:	d008      	beq.n	80142aa <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x22>
 8014298:	2300      	movs	r3, #0
 801429a:	8003      	strh	r3, [r0, #0]
 801429c:	8043      	strh	r3, [r0, #2]
 801429e:	8083      	strh	r3, [r0, #4]
 80142a0:	4630      	mov	r0, r6
 80142a2:	80f3      	strh	r3, [r6, #6]
 80142a4:	b003      	add	sp, #12
 80142a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80142aa:	f101 0b26 	add.w	fp, r1, #38	@ 0x26
 80142ae:	4668      	mov	r0, sp
 80142b0:	4659      	mov	r1, fp
 80142b2:	f004 fe6d 	bl	8018f90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80142b6:	f9bd 4004 	ldrsh.w	r4, [sp, #4]
 80142ba:	4658      	mov	r0, fp
 80142bc:	f9bd 7000 	ldrsh.w	r7, [sp]
 80142c0:	f9bd a002 	ldrsh.w	sl, [sp, #2]
 80142c4:	f9bd 8006 	ldrsh.w	r8, [sp, #6]
 80142c8:	f004 fdfa 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80142cc:	4284      	cmp	r4, r0
 80142ce:	d10d      	bne.n	80142ec <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x64>
 80142d0:	f9b9 5008 	ldrsh.w	r5, [r9, #8]
 80142d4:	4658      	mov	r0, fp
 80142d6:	f004 fe27 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80142da:	4580      	cmp	r8, r0
 80142dc:	d12a      	bne.n	8014334 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0xac>
 80142de:	f9b9 300a 	ldrsh.w	r3, [r9, #10]
 80142e2:	8037      	strh	r7, [r6, #0]
 80142e4:	f8a6 a002 	strh.w	sl, [r6, #2]
 80142e8:	80b5      	strh	r5, [r6, #4]
 80142ea:	e7d9      	b.n	80142a0 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x18>
 80142ec:	f8b9 502a 	ldrh.w	r5, [r9, #42]	@ 0x2a
 80142f0:	4658      	mov	r0, fp
 80142f2:	f004 fde5 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80142f6:	f9b9 2008 	ldrsh.w	r2, [r9, #8]
 80142fa:	1b7f      	subs	r7, r7, r5
 80142fc:	b2a3      	uxth	r3, r4
 80142fe:	b2bd      	uxth	r5, r7
 8014300:	b22f      	sxth	r7, r5
 8014302:	4428      	add	r0, r5
 8014304:	2f00      	cmp	r7, #0
 8014306:	b280      	uxth	r0, r0
 8014308:	bfb8      	it	lt
 801430a:	18ed      	addlt	r5, r5, r3
 801430c:	4403      	add	r3, r0
 801430e:	bfac      	ite	ge
 8014310:	4625      	movge	r5, r4
 8014312:	2700      	movlt	r7, #0
 8014314:	b29b      	uxth	r3, r3
 8014316:	bfb8      	it	lt
 8014318:	b22d      	sxthlt	r5, r5
 801431a:	b219      	sxth	r1, r3
 801431c:	bfb8      	it	lt
 801431e:	ea25 75e5 	biclt.w	r5, r5, r5, asr #31
 8014322:	4291      	cmp	r1, r2
 8014324:	bfc4      	itt	gt
 8014326:	1a9c      	subgt	r4, r3, r2
 8014328:	b224      	sxthgt	r4, r4
 801432a:	42ac      	cmp	r4, r5
 801432c:	bfc4      	itt	gt
 801432e:	b207      	sxthgt	r7, r0
 8014330:	4625      	movgt	r5, r4
 8014332:	e7cf      	b.n	80142d4 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x4c>
 8014334:	f8b9 402c 	ldrh.w	r4, [r9, #44]	@ 0x2c
 8014338:	4658      	mov	r0, fp
 801433a:	f004 fdf5 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801433e:	f9b9 100a 	ldrsh.w	r1, [r9, #10]
 8014342:	ebaa 0404 	sub.w	r4, sl, r4
 8014346:	fa1f f288 	uxth.w	r2, r8
 801434a:	b2a4      	uxth	r4, r4
 801434c:	fa0f fa84 	sxth.w	sl, r4
 8014350:	4420      	add	r0, r4
 8014352:	f1ba 0f00 	cmp.w	sl, #0
 8014356:	b280      	uxth	r0, r0
 8014358:	bfb8      	it	lt
 801435a:	18a3      	addlt	r3, r4, r2
 801435c:	4402      	add	r2, r0
 801435e:	bfac      	ite	ge
 8014360:	4643      	movge	r3, r8
 8014362:	f04f 0a00 	movlt.w	sl, #0
 8014366:	b292      	uxth	r2, r2
 8014368:	bfb8      	it	lt
 801436a:	b21b      	sxthlt	r3, r3
 801436c:	b214      	sxth	r4, r2
 801436e:	bfb8      	it	lt
 8014370:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014374:	428c      	cmp	r4, r1
 8014376:	bfc4      	itt	gt
 8014378:	eba2 0801 	subgt.w	r8, r2, r1
 801437c:	fa0f f888 	sxthgt.w	r8, r8
 8014380:	4598      	cmp	r8, r3
 8014382:	bfc4      	itt	gt
 8014384:	fa0f fa80 	sxthgt.w	sl, r0
 8014388:	4643      	movgt	r3, r8
 801438a:	e7aa      	b.n	80142e2 <_ZNK8touchgfx10TiledImage12getSolidRectEv+0x5a>

0801438c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 801438c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014390:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8014392:	4604      	mov	r4, r0
 8014394:	460e      	mov	r6, r1
 8014396:	b08e      	sub	sp, #56	@ 0x38
 8014398:	b218      	sxth	r0, r3
 801439a:	8921      	ldrh	r1, [r4, #8]
 801439c:	005b      	lsls	r3, r3, #1
 801439e:	8962      	ldrh	r2, [r4, #10]
 80143a0:	f8ad 0000 	strh.w	r0, [sp]
 80143a4:	b29b      	uxth	r3, r3
 80143a6:	f8ad 0002 	strh.w	r0, [sp, #2]
 80143aa:	1ac9      	subs	r1, r1, r3
 80143ac:	1ad3      	subs	r3, r2, r3
 80143ae:	b209      	sxth	r1, r1
 80143b0:	b21b      	sxth	r3, r3
 80143b2:	2900      	cmp	r1, #0
 80143b4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80143b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80143bc:	dd5e      	ble.n	801447c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80143be:	2b00      	cmp	r3, #0
 80143c0:	dd5c      	ble.n	801447c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80143c2:	6830      	ldr	r0, [r6, #0]
 80143c4:	ab02      	add	r3, sp, #8
 80143c6:	6871      	ldr	r1, [r6, #4]
 80143c8:	c303      	stmia	r3!, {r0, r1}
 80143ca:	4669      	mov	r1, sp
 80143cc:	a802      	add	r0, sp, #8
 80143ce:	f7fd ffb5 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 80143d2:	4620      	mov	r0, r4
 80143d4:	a902      	add	r1, sp, #8
 80143d6:	f7ff fdeb 	bl	8013fb0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80143da:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 80143dc:	2800      	cmp	r0, #0
 80143de:	d05f      	beq.n	80144a0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80143e0:	8963      	ldrh	r3, [r4, #10]
 80143e2:	b202      	sxth	r2, r0
 80143e4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80143e8:	2500      	movs	r5, #0
 80143ea:	1a1f      	subs	r7, r3, r0
 80143ec:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80143f0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80143f4:	b21b      	sxth	r3, r3
 80143f6:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80143fa:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 80143fe:	af04      	add	r7, sp, #16
 8014400:	1a09      	subs	r1, r1, r0
 8014402:	9506      	str	r5, [sp, #24]
 8014404:	f8ad 201e 	strh.w	r2, [sp, #30]
 8014408:	f8ad 5020 	strh.w	r5, [sp, #32]
 801440c:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8014410:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8014414:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014418:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 801441c:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014420:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8014424:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8014428:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 801442c:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8014430:	ab06      	add	r3, sp, #24
 8014432:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014436:	e893 0003 	ldmia.w	r3, {r0, r1}
 801443a:	e887 0003 	stmia.w	r7, {r0, r1}
 801443e:	4631      	mov	r1, r6
 8014440:	4638      	mov	r0, r7
 8014442:	f7fd ff7b 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8014446:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801444a:	2b00      	cmp	r3, #0
 801444c:	dd12      	ble.n	8014474 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801444e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014452:	2b00      	cmp	r3, #0
 8014454:	dd0e      	ble.n	8014474 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8014456:	6823      	ldr	r3, [r4, #0]
 8014458:	4639      	mov	r1, r7
 801445a:	4620      	mov	r0, r4
 801445c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801445e:	4798      	blx	r3
 8014460:	f7f7 f974 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8014464:	6803      	ldr	r3, [r0, #0]
 8014466:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8014468:	4639      	mov	r1, r7
 801446a:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801446e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8014472:	47c0      	blx	r8
 8014474:	3501      	adds	r5, #1
 8014476:	2d04      	cmp	r5, #4
 8014478:	d1da      	bne.n	8014430 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801447a:	e011      	b.n	80144a0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801447c:	6830      	ldr	r0, [r6, #0]
 801447e:	ab06      	add	r3, sp, #24
 8014480:	6871      	ldr	r1, [r6, #4]
 8014482:	c303      	stmia	r3!, {r0, r1}
 8014484:	6823      	ldr	r3, [r4, #0]
 8014486:	a906      	add	r1, sp, #24
 8014488:	4620      	mov	r0, r4
 801448a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801448c:	4798      	blx	r3
 801448e:	f7f7 f95d 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8014492:	6803      	ldr	r3, [r0, #0]
 8014494:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8014496:	a906      	add	r1, sp, #24
 8014498:	6a1d      	ldr	r5, [r3, #32]
 801449a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 801449e:	47a8      	blx	r5
 80144a0:	b00e      	add	sp, #56	@ 0x38
 80144a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080144a6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80144a6:	b570      	push	{r4, r5, r6, lr}
 80144a8:	880b      	ldrh	r3, [r1, #0]
 80144aa:	460d      	mov	r5, r1
 80144ac:	4604      	mov	r4, r0
 80144ae:	84c3      	strh	r3, [r0, #38]	@ 0x26
 80144b0:	4608      	mov	r0, r1
 80144b2:	f004 fd05 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80144b6:	4606      	mov	r6, r0
 80144b8:	4628      	mov	r0, r5
 80144ba:	f004 fd35 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80144be:	6823      	ldr	r3, [r4, #0]
 80144c0:	4605      	mov	r5, r0
 80144c2:	4631      	mov	r1, r6
 80144c4:	4620      	mov	r0, r4
 80144c6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80144c8:	4798      	blx	r3
 80144ca:	6823      	ldr	r3, [r4, #0]
 80144cc:	4629      	mov	r1, r5
 80144ce:	4620      	mov	r0, r4
 80144d0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80144d2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80144d6:	4718      	bx	r3

080144d8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80144d8:	b510      	push	{r4, lr}
 80144da:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 80144de:	4604      	mov	r4, r0
 80144e0:	2bff      	cmp	r3, #255	@ 0xff
 80144e2:	d006      	beq.n	80144f2 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80144e4:	2300      	movs	r3, #0
 80144e6:	8003      	strh	r3, [r0, #0]
 80144e8:	8043      	strh	r3, [r0, #2]
 80144ea:	8083      	strh	r3, [r0, #4]
 80144ec:	80c3      	strh	r3, [r0, #6]
 80144ee:	4620      	mov	r0, r4
 80144f0:	bd10      	pop	{r4, pc}
 80144f2:	3126      	adds	r1, #38	@ 0x26
 80144f4:	f004 fd4c 	bl	8018f90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80144f8:	e7f9      	b.n	80144ee <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

080144fc <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 80144fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014500:	4604      	mov	r4, r0
 8014502:	b088      	sub	sp, #32
 8014504:	2500      	movs	r5, #0
 8014506:	460f      	mov	r7, r1
 8014508:	f854 3b26 	ldr.w	r3, [r4], #38
 801450c:	a904      	add	r1, sp, #16
 801450e:	4606      	mov	r6, r0
 8014510:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8014512:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8014516:	4798      	blx	r3
 8014518:	4620      	mov	r0, r4
 801451a:	f004 fcd1 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801451e:	4680      	mov	r8, r0
 8014520:	4620      	mov	r0, r4
 8014522:	f004 fd01 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8014526:	9506      	str	r5, [sp, #24]
 8014528:	ad06      	add	r5, sp, #24
 801452a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801452e:	4639      	mov	r1, r7
 8014530:	f8ad 801c 	strh.w	r8, [sp, #28]
 8014534:	4628      	mov	r0, r5
 8014536:	f7fd ff01 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 801453a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801453e:	2b00      	cmp	r3, #0
 8014540:	dd19      	ble.n	8014576 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8014542:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8014546:	2b00      	cmp	r3, #0
 8014548:	dd15      	ble.n	8014576 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801454a:	4b0c      	ldr	r3, [pc, #48]	@ (801457c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801454c:	681b      	ldr	r3, [r3, #0]
 801454e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8014552:	b10a      	cbz	r2, 8014558 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8014554:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8014556:	b900      	cbnz	r0, 801455a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8014558:	6898      	ldr	r0, [r3, #8]
 801455a:	2701      	movs	r7, #1
 801455c:	6801      	ldr	r1, [r0, #0]
 801455e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8014562:	9702      	str	r7, [sp, #8]
 8014564:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8014568:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801456c:	e9cd 5600 	strd	r5, r6, [sp]
 8014570:	688d      	ldr	r5, [r1, #8]
 8014572:	4621      	mov	r1, r4
 8014574:	47a8      	blx	r5
 8014576:	b008      	add	sp, #32
 8014578:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801457c:	20003984 	.word	0x20003984

08014580 <_ZN8touchgfx7OutlineD1Ev>:
 8014580:	4770      	bx	lr

08014582 <_ZN8touchgfx7OutlineD0Ev>:
 8014582:	b510      	push	{r4, lr}
 8014584:	4604      	mov	r4, r0
 8014586:	2130      	movs	r1, #48	@ 0x30
 8014588:	f013 fa75 	bl	8027a76 <_ZdlPvj>
 801458c:	4620      	mov	r0, r4
 801458e:	bd10      	pop	{r4, pc}

08014590 <_ZN8touchgfx7Outline5resetEv>:
 8014590:	b510      	push	{r4, lr}
 8014592:	4604      	mov	r4, r0
 8014594:	f000 fe86 	bl	80152a4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 8014598:	60e0      	str	r0, [r4, #12]
 801459a:	f000 fe89 	bl	80152b0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801459e:	68e3      	ldr	r3, [r4, #12]
 80145a0:	08c0      	lsrs	r0, r0, #3
 80145a2:	2200      	movs	r2, #0
 80145a4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
 80145a8:	6123      	str	r3, [r4, #16]
 80145aa:	3801      	subs	r0, #1
 80145ac:	60a2      	str	r2, [r4, #8]
 80145ae:	6060      	str	r0, [r4, #4]
 80145b0:	8019      	strh	r1, [r3, #0]
 80145b2:	8059      	strh	r1, [r3, #2]
 80145b4:	809a      	strh	r2, [r3, #4]
 80145b6:	80da      	strh	r2, [r3, #6]
 80145b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 80145ba:	f023 0301 	bic.w	r3, r3, #1
 80145be:	f043 0302 	orr.w	r3, r3, #2
 80145c2:	6263      	str	r3, [r4, #36]	@ 0x24
 80145c4:	bd10      	pop	{r4, pc}
	...

080145c8 <_ZN8touchgfx7OutlineC1Ev>:
 80145c8:	4b0a      	ldr	r3, [pc, #40]	@ (80145f4 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80145ca:	b510      	push	{r4, lr}
 80145cc:	6003      	str	r3, [r0, #0]
 80145ce:	2300      	movs	r3, #0
 80145d0:	4604      	mov	r4, r0
 80145d2:	6243      	str	r3, [r0, #36]	@ 0x24
 80145d4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80145d8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80145dc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80145e0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80145e4:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
 80145e8:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
 80145ec:	f7ff ffd0 	bl	8014590 <_ZN8touchgfx7Outline5resetEv>
 80145f0:	4620      	mov	r0, r4
 80145f2:	bd10      	pop	{r4, pc}
 80145f4:	0802ac34 	.word	0x0802ac34

080145f8 <_ZN8touchgfx7Outline10renderLineEiiii>:
 80145f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145fc:	b093      	sub	sp, #76	@ 0x4c
 80145fe:	1156      	asrs	r6, r2, #5
 8014600:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8014602:	9305      	str	r3, [sp, #20]
 8014604:	1153      	asrs	r3, r2, #5
 8014606:	f004 051f 	and.w	r5, r4, #31
 801460a:	9303      	str	r3, [sp, #12]
 801460c:	1163      	asrs	r3, r4, #5
 801460e:	9504      	str	r5, [sp, #16]
 8014610:	1165      	asrs	r5, r4, #5
 8014612:	9306      	str	r3, [sp, #24]
 8014614:	f002 031f 	and.w	r3, r2, #31
 8014618:	42ae      	cmp	r6, r5
 801461a:	f040 80f4 	bne.w	8014806 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
 801461e:	9c04      	ldr	r4, [sp, #16]
 8014620:	9a05      	ldr	r2, [sp, #20]
 8014622:	42a3      	cmp	r3, r4
 8014624:	ea4f 1e62 	mov.w	lr, r2, asr #5
 8014628:	6902      	ldr	r2, [r0, #16]
 801462a:	d125      	bne.n	8014678 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
 801462c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8014630:	459e      	cmp	lr, r3
 8014632:	d103      	bne.n	801463c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
 8014634:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014638:	429e      	cmp	r6, r3
 801463a:	d035      	beq.n	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 801463c:	88d1      	ldrh	r1, [r2, #6]
 801463e:	8893      	ldrh	r3, [r2, #4]
 8014640:	430b      	orrs	r3, r1
 8014642:	d010      	beq.n	8014666 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 8014644:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 8014648:	2b00      	cmp	r3, #0
 801464a:	db0c      	blt.n	8014666 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 801464c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 801464e:	428b      	cmp	r3, r1
 8014650:	da09      	bge.n	8014666 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
 8014652:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014656:	428b      	cmp	r3, r1
 8014658:	f103 0301 	add.w	r3, r3, #1
 801465c:	bf38      	it	cc
 801465e:	3208      	addcc	r2, #8
 8014660:	6083      	str	r3, [r0, #8]
 8014662:	bf38      	it	cc
 8014664:	6102      	strcc	r2, [r0, #16]
 8014666:	6903      	ldr	r3, [r0, #16]
 8014668:	9a03      	ldr	r2, [sp, #12]
 801466a:	f8a3 e000 	strh.w	lr, [r3]
 801466e:	805a      	strh	r2, [r3, #2]
 8014670:	2200      	movs	r2, #0
 8014672:	809a      	strh	r2, [r3, #4]
 8014674:	80da      	strh	r2, [r3, #6]
 8014676:	e017      	b.n	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8014678:	9c05      	ldr	r4, [sp, #20]
 801467a:	114e      	asrs	r6, r1, #5
 801467c:	f001 0c1f 	and.w	ip, r1, #31
 8014680:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8014684:	f004 041f 	and.w	r4, r4, #31
 8014688:	4576      	cmp	r6, lr
 801468a:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 801468e:	9402      	str	r4, [sp, #8]
 8014690:	9c04      	ldr	r4, [sp, #16]
 8014692:	eba4 0403 	sub.w	r4, r4, r3
 8014696:	d10a      	bne.n	80146ae <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
 8014698:	9b02      	ldr	r3, [sp, #8]
 801469a:	44a0      	add	r8, r4
 801469c:	449c      	add	ip, r3
 801469e:	f8a2 8004 	strh.w	r8, [r2, #4]
 80146a2:	fb04 a40c 	mla	r4, r4, ip, sl
 80146a6:	80d4      	strh	r4, [r2, #6]
 80146a8:	b013      	add	sp, #76	@ 0x4c
 80146aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146ae:	9d05      	ldr	r5, [sp, #20]
 80146b0:	1a69      	subs	r1, r5, r1
 80146b2:	bf51      	iteee	pl
 80146b4:	f1cc 0520 	rsbpl	r5, ip, #32
 80146b8:	fb04 f40c 	mulmi.w	r4, r4, ip
 80146bc:	4249      	negmi	r1, r1
 80146be:	2500      	movmi	r5, #0
 80146c0:	bf5d      	ittte	pl
 80146c2:	436c      	mulpl	r4, r5
 80146c4:	2520      	movpl	r5, #32
 80146c6:	f04f 0901 	movpl.w	r9, #1
 80146ca:	f04f 39ff 	movmi.w	r9, #4294967295
 80146ce:	9501      	str	r5, [sp, #4]
 80146d0:	9f01      	ldr	r7, [sp, #4]
 80146d2:	444e      	add	r6, r9
 80146d4:	fb94 f5f1 	sdiv	r5, r4, r1
 80146d8:	fb01 4415 	mls	r4, r1, r5, r4
 80146dc:	44bc      	add	ip, r7
 80146de:	2c00      	cmp	r4, #0
 80146e0:	bfbc      	itt	lt
 80146e2:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80146e6:	1864      	addlt	r4, r4, r1
 80146e8:	44a8      	add	r8, r5
 80146ea:	fb05 ac0c 	mla	ip, r5, ip, sl
 80146ee:	f8a2 8004 	strh.w	r8, [r2, #4]
 80146f2:	f8a2 c006 	strh.w	ip, [r2, #6]
 80146f6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80146fa:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80146fe:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8014702:	ea58 0202 	orrs.w	r2, r8, r2
 8014706:	d011      	beq.n	801472c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 8014708:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801470c:	f1b8 0f00 	cmp.w	r8, #0
 8014710:	db0c      	blt.n	801472c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 8014712:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8014714:	4590      	cmp	r8, r2
 8014716:	da09      	bge.n	801472c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
 8014718:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801471c:	4590      	cmp	r8, r2
 801471e:	bf3c      	itt	cc
 8014720:	f10c 0208 	addcc.w	r2, ip, #8
 8014724:	6102      	strcc	r2, [r0, #16]
 8014726:	f108 0201 	add.w	r2, r8, #1
 801472a:	6082      	str	r2, [r0, #8]
 801472c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014730:	2700      	movs	r7, #0
 8014732:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8014736:	45b6      	cmp	lr, r6
 8014738:	f8ac 6000 	strh.w	r6, [ip]
 801473c:	442b      	add	r3, r5
 801473e:	f8ac 2002 	strh.w	r2, [ip, #2]
 8014742:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014746:	f8ac 7006 	strh.w	r7, [ip, #6]
 801474a:	d04b      	beq.n	80147e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
 801474c:	9f04      	ldr	r7, [sp, #16]
 801474e:	1a64      	subs	r4, r4, r1
 8014750:	f04f 0a00 	mov.w	sl, #0
 8014754:	1aff      	subs	r7, r7, r3
 8014756:	443d      	add	r5, r7
 8014758:	016d      	lsls	r5, r5, #5
 801475a:	fb95 f8f1 	sdiv	r8, r5, r1
 801475e:	fb01 5518 	mls	r5, r1, r8, r5
 8014762:	2d00      	cmp	r5, #0
 8014764:	bfbc      	itt	lt
 8014766:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801476a:	186d      	addlt	r5, r5, r1
 801476c:	f108 0701 	add.w	r7, r8, #1
 8014770:	9703      	str	r7, [sp, #12]
 8014772:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014776:	1964      	adds	r4, r4, r5
 8014778:	444e      	add	r6, r9
 801477a:	bf54      	ite	pl
 801477c:	9f03      	ldrpl	r7, [sp, #12]
 801477e:	4647      	movmi	r7, r8
 8014780:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014784:	bf58      	it	pl
 8014786:	1a64      	subpl	r4, r4, r1
 8014788:	443b      	add	r3, r7
 801478a:	44bb      	add	fp, r7
 801478c:	f8ac b004 	strh.w	fp, [ip, #4]
 8014790:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014794:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014798:	f8ac b006 	strh.w	fp, [ip, #6]
 801479c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80147a0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80147a4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80147a8:	ea5b 0707 	orrs.w	r7, fp, r7
 80147ac:	d011      	beq.n	80147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 80147ae:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80147b2:	f1bb 0f00 	cmp.w	fp, #0
 80147b6:	db0c      	blt.n	80147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 80147b8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 80147ba:	45bb      	cmp	fp, r7
 80147bc:	da09      	bge.n	80147d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
 80147be:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80147c2:	45bb      	cmp	fp, r7
 80147c4:	bf3c      	itt	cc
 80147c6:	f10c 0708 	addcc.w	r7, ip, #8
 80147ca:	6107      	strcc	r7, [r0, #16]
 80147cc:	f10b 0701 	add.w	r7, fp, #1
 80147d0:	6087      	str	r7, [r0, #8]
 80147d2:	6907      	ldr	r7, [r0, #16]
 80147d4:	45b6      	cmp	lr, r6
 80147d6:	803e      	strh	r6, [r7, #0]
 80147d8:	807a      	strh	r2, [r7, #2]
 80147da:	f8a7 a004 	strh.w	sl, [r7, #4]
 80147de:	f8a7 a006 	strh.w	sl, [r7, #6]
 80147e2:	d1c6      	bne.n	8014772 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
 80147e4:	9a04      	ldr	r2, [sp, #16]
 80147e6:	1ad3      	subs	r3, r2, r3
 80147e8:	6902      	ldr	r2, [r0, #16]
 80147ea:	8891      	ldrh	r1, [r2, #4]
 80147ec:	88d6      	ldrh	r6, [r2, #6]
 80147ee:	4419      	add	r1, r3
 80147f0:	8091      	strh	r1, [r2, #4]
 80147f2:	9902      	ldr	r1, [sp, #8]
 80147f4:	f101 0c20 	add.w	ip, r1, #32
 80147f8:	9901      	ldr	r1, [sp, #4]
 80147fa:	ebac 0c01 	sub.w	ip, ip, r1
 80147fe:	fb03 630c 	mla	r3, r3, ip, r6
 8014802:	80d3      	strh	r3, [r2, #6]
 8014804:	e750      	b.n	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8014806:	9d05      	ldr	r5, [sp, #20]
 8014808:	1aa2      	subs	r2, r4, r2
 801480a:	eba5 0501 	sub.w	r5, r5, r1
 801480e:	9202      	str	r2, [sp, #8]
 8014810:	9508      	str	r5, [sp, #32]
 8014812:	f140 8128 	bpl.w	8014a66 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
 8014816:	9a03      	ldr	r2, [sp, #12]
 8014818:	2a00      	cmp	r2, #0
 801481a:	f6ff af45 	blt.w	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 801481e:	9a02      	ldr	r2, [sp, #8]
 8014820:	f04f 34ff 	mov.w	r4, #4294967295
 8014824:	4252      	negs	r2, r2
 8014826:	940b      	str	r4, [sp, #44]	@ 0x2c
 8014828:	2400      	movs	r4, #0
 801482a:	9202      	str	r2, [sp, #8]
 801482c:	9a06      	ldr	r2, [sp, #24]
 801482e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8014832:	9206      	str	r2, [sp, #24]
 8014834:	462a      	mov	r2, r5
 8014836:	435a      	muls	r2, r3
 8014838:	9401      	str	r4, [sp, #4]
 801483a:	9c02      	ldr	r4, [sp, #8]
 801483c:	9d02      	ldr	r5, [sp, #8]
 801483e:	fb92 f4f4 	sdiv	r4, r2, r4
 8014842:	fb05 2214 	mls	r2, r5, r4, r2
 8014846:	2a00      	cmp	r2, #0
 8014848:	9207      	str	r2, [sp, #28]
 801484a:	bfbc      	itt	lt
 801484c:	1952      	addlt	r2, r2, r5
 801484e:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014852:	6905      	ldr	r5, [r0, #16]
 8014854:	bfb8      	it	lt
 8014856:	9207      	strlt	r2, [sp, #28]
 8014858:	eb04 0901 	add.w	r9, r4, r1
 801485c:	9a01      	ldr	r2, [sp, #4]
 801485e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8014862:	429a      	cmp	r2, r3
 8014864:	f040 8111 	bne.w	8014a8a <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
 8014868:	f9b5 3000 	ldrsh.w	r3, [r5]
 801486c:	429e      	cmp	r6, r3
 801486e:	d104      	bne.n	801487a <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
 8014870:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014874:	9a03      	ldr	r2, [sp, #12]
 8014876:	429a      	cmp	r2, r3
 8014878:	d01b      	beq.n	80148b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 801487a:	88ea      	ldrh	r2, [r5, #6]
 801487c:	88ab      	ldrh	r3, [r5, #4]
 801487e:	4313      	orrs	r3, r2
 8014880:	d010      	beq.n	80148a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 8014882:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014886:	2a00      	cmp	r2, #0
 8014888:	db0c      	blt.n	80148a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 801488a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801488c:	429a      	cmp	r2, r3
 801488e:	da09      	bge.n	80148a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
 8014890:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8014894:	429a      	cmp	r2, r3
 8014896:	f102 0201 	add.w	r2, r2, #1
 801489a:	bf38      	it	cc
 801489c:	3508      	addcc	r5, #8
 801489e:	6082      	str	r2, [r0, #8]
 80148a0:	bf38      	it	cc
 80148a2:	6105      	strcc	r5, [r0, #16]
 80148a4:	6903      	ldr	r3, [r0, #16]
 80148a6:	9a03      	ldr	r2, [sp, #12]
 80148a8:	801e      	strh	r6, [r3, #0]
 80148aa:	805a      	strh	r2, [r3, #2]
 80148ac:	2200      	movs	r2, #0
 80148ae:	809a      	strh	r2, [r3, #4]
 80148b0:	80da      	strh	r2, [r3, #6]
 80148b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80148b4:	9a03      	ldr	r2, [sp, #12]
 80148b6:	6901      	ldr	r1, [r0, #16]
 80148b8:	441a      	add	r2, r3
 80148ba:	f9b1 3000 	ldrsh.w	r3, [r1]
 80148be:	42b3      	cmp	r3, r6
 80148c0:	d103      	bne.n	80148ca <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
 80148c2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80148c6:	429a      	cmp	r2, r3
 80148c8:	d01a      	beq.n	8014900 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
 80148ca:	88cc      	ldrh	r4, [r1, #6]
 80148cc:	888b      	ldrh	r3, [r1, #4]
 80148ce:	4323      	orrs	r3, r4
 80148d0:	d010      	beq.n	80148f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 80148d2:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80148d6:	2c00      	cmp	r4, #0
 80148d8:	db0c      	blt.n	80148f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 80148da:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80148dc:	429c      	cmp	r4, r3
 80148de:	da09      	bge.n	80148f4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
 80148e0:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80148e4:	429c      	cmp	r4, r3
 80148e6:	f104 0401 	add.w	r4, r4, #1
 80148ea:	bf38      	it	cc
 80148ec:	3108      	addcc	r1, #8
 80148ee:	6084      	str	r4, [r0, #8]
 80148f0:	bf38      	it	cc
 80148f2:	6101      	strcc	r1, [r0, #16]
 80148f4:	6903      	ldr	r3, [r0, #16]
 80148f6:	2100      	movs	r1, #0
 80148f8:	801e      	strh	r6, [r3, #0]
 80148fa:	805a      	strh	r2, [r3, #2]
 80148fc:	8099      	strh	r1, [r3, #4]
 80148fe:	80d9      	strh	r1, [r3, #6]
 8014900:	9b06      	ldr	r3, [sp, #24]
 8014902:	4293      	cmp	r3, r2
 8014904:	f000 8082 	beq.w	8014a0c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
 8014908:	9b08      	ldr	r3, [sp, #32]
 801490a:	9902      	ldr	r1, [sp, #8]
 801490c:	015b      	lsls	r3, r3, #5
 801490e:	9c02      	ldr	r4, [sp, #8]
 8014910:	fb93 f1f1 	sdiv	r1, r3, r1
 8014914:	fb04 3311 	mls	r3, r4, r1, r3
 8014918:	9103      	str	r1, [sp, #12]
 801491a:	2b00      	cmp	r3, #0
 801491c:	9308      	str	r3, [sp, #32]
 801491e:	da04      	bge.n	801492a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
 8014920:	1e4b      	subs	r3, r1, #1
 8014922:	9303      	str	r3, [sp, #12]
 8014924:	9b08      	ldr	r3, [sp, #32]
 8014926:	4423      	add	r3, r4
 8014928:	9308      	str	r3, [sp, #32]
 801492a:	9b07      	ldr	r3, [sp, #28]
 801492c:	464f      	mov	r7, r9
 801492e:	9902      	ldr	r1, [sp, #8]
 8014930:	2600      	movs	r6, #0
 8014932:	1a5b      	subs	r3, r3, r1
 8014934:	9307      	str	r3, [sp, #28]
 8014936:	9b01      	ldr	r3, [sp, #4]
 8014938:	f1c3 0320 	rsb	r3, r3, #32
 801493c:	930e      	str	r3, [sp, #56]	@ 0x38
 801493e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8014940:	9b01      	ldr	r3, [sp, #4]
 8014942:	1a5b      	subs	r3, r3, r1
 8014944:	930a      	str	r3, [sp, #40]	@ 0x28
 8014946:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 801494a:	185b      	adds	r3, r3, r1
 801494c:	bf58      	it	pl
 801494e:	9902      	ldrpl	r1, [sp, #8]
 8014950:	9307      	str	r3, [sp, #28]
 8014952:	bf57      	itett	pl
 8014954:	1a5b      	subpl	r3, r3, r1
 8014956:	9903      	ldrmi	r1, [sp, #12]
 8014958:	9307      	strpl	r3, [sp, #28]
 801495a:	9b03      	ldrpl	r3, [sp, #12]
 801495c:	bf58      	it	pl
 801495e:	1c59      	addpl	r1, r3, #1
 8014960:	2a00      	cmp	r2, #0
 8014962:	4489      	add	r9, r1
 8014964:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8014968:	db2e      	blt.n	80149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 801496a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 801496c:	4293      	cmp	r3, r2
 801496e:	dd2b      	ble.n	80149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 8014970:	9c01      	ldr	r4, [sp, #4]
 8014972:	6905      	ldr	r5, [r0, #16]
 8014974:	46a0      	mov	r8, r4
 8014976:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8014978:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 801497c:	45a0      	cmp	r8, r4
 801497e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8014982:	f040 814c 	bne.w	8014c1e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
 8014986:	f9b5 1000 	ldrsh.w	r1, [r5]
 801498a:	4551      	cmp	r1, sl
 801498c:	d103      	bne.n	8014996 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
 801498e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8014992:	4291      	cmp	r1, r2
 8014994:	d018      	beq.n	80149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 8014996:	ea5c 010e 	orrs.w	r1, ip, lr
 801499a:	d00f      	beq.n	80149bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 801499c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80149a0:	2900      	cmp	r1, #0
 80149a2:	db0b      	blt.n	80149bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 80149a4:	428b      	cmp	r3, r1
 80149a6:	dd09      	ble.n	80149bc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
 80149a8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80149ac:	4299      	cmp	r1, r3
 80149ae:	f101 0101 	add.w	r1, r1, #1
 80149b2:	bf38      	it	cc
 80149b4:	3508      	addcc	r5, #8
 80149b6:	6081      	str	r1, [r0, #8]
 80149b8:	bf38      	it	cc
 80149ba:	6105      	strcc	r5, [r0, #16]
 80149bc:	6903      	ldr	r3, [r0, #16]
 80149be:	f8a3 a000 	strh.w	sl, [r3]
 80149c2:	805a      	strh	r2, [r3, #2]
 80149c4:	809e      	strh	r6, [r3, #4]
 80149c6:	80de      	strh	r6, [r3, #6]
 80149c8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80149ca:	6901      	ldr	r1, [r0, #16]
 80149cc:	441a      	add	r2, r3
 80149ce:	88cc      	ldrh	r4, [r1, #6]
 80149d0:	888b      	ldrh	r3, [r1, #4]
 80149d2:	4323      	orrs	r3, r4
 80149d4:	d010      	beq.n	80149f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 80149d6:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 80149da:	2c00      	cmp	r4, #0
 80149dc:	db0c      	blt.n	80149f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 80149de:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 80149e0:	429c      	cmp	r4, r3
 80149e2:	da09      	bge.n	80149f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
 80149e4:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80149e8:	429c      	cmp	r4, r3
 80149ea:	f104 0401 	add.w	r4, r4, #1
 80149ee:	bf38      	it	cc
 80149f0:	3108      	addcc	r1, #8
 80149f2:	6084      	str	r4, [r0, #8]
 80149f4:	bf38      	it	cc
 80149f6:	6101      	strcc	r1, [r0, #16]
 80149f8:	6903      	ldr	r3, [r0, #16]
 80149fa:	464f      	mov	r7, r9
 80149fc:	f8a3 a000 	strh.w	sl, [r3]
 8014a00:	805a      	strh	r2, [r3, #2]
 8014a02:	809e      	strh	r6, [r3, #4]
 8014a04:	80de      	strh	r6, [r3, #6]
 8014a06:	9b06      	ldr	r3, [sp, #24]
 8014a08:	4293      	cmp	r3, r2
 8014a0a:	d19c      	bne.n	8014946 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
 8014a0c:	9b01      	ldr	r3, [sp, #4]
 8014a0e:	6907      	ldr	r7, [r0, #16]
 8014a10:	f1c3 0620 	rsb	r6, r3, #32
 8014a14:	9b05      	ldr	r3, [sp, #20]
 8014a16:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8014a1a:	9b04      	ldr	r3, [sp, #16]
 8014a1c:	429e      	cmp	r6, r3
 8014a1e:	f040 81c7 	bne.w	8014db0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
 8014a22:	f9b7 3000 	ldrsh.w	r3, [r7]
 8014a26:	459e      	cmp	lr, r3
 8014a28:	d104      	bne.n	8014a34 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
 8014a2a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a2e:	429a      	cmp	r2, r3
 8014a30:	f43f ae3a 	beq.w	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8014a34:	88f9      	ldrh	r1, [r7, #6]
 8014a36:	88bb      	ldrh	r3, [r7, #4]
 8014a38:	430b      	orrs	r3, r1
 8014a3a:	d010      	beq.n	8014a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 8014a3c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8014a40:	2b00      	cmp	r3, #0
 8014a42:	db0c      	blt.n	8014a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 8014a44:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
 8014a46:	428b      	cmp	r3, r1
 8014a48:	da09      	bge.n	8014a5e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
 8014a4a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8014a4e:	428b      	cmp	r3, r1
 8014a50:	f103 0301 	add.w	r3, r3, #1
 8014a54:	bf38      	it	cc
 8014a56:	3708      	addcc	r7, #8
 8014a58:	6083      	str	r3, [r0, #8]
 8014a5a:	bf38      	it	cc
 8014a5c:	6107      	strcc	r7, [r0, #16]
 8014a5e:	6903      	ldr	r3, [r0, #16]
 8014a60:	f8a3 e000 	strh.w	lr, [r3]
 8014a64:	e603      	b.n	801466e <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
 8014a66:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
 8014a68:	9c03      	ldr	r4, [sp, #12]
 8014a6a:	42a2      	cmp	r2, r4
 8014a6c:	f6ff ae1c 	blt.w	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8014a70:	9c06      	ldr	r4, [sp, #24]
 8014a72:	42a2      	cmp	r2, r4
 8014a74:	9c08      	ldr	r4, [sp, #32]
 8014a76:	bfbc      	itt	lt
 8014a78:	3201      	addlt	r2, #1
 8014a7a:	9206      	strlt	r2, [sp, #24]
 8014a7c:	f1c3 0220 	rsb	r2, r3, #32
 8014a80:	4362      	muls	r2, r4
 8014a82:	2401      	movs	r4, #1
 8014a84:	940b      	str	r4, [sp, #44]	@ 0x2c
 8014a86:	2420      	movs	r4, #32
 8014a88:	e6d6      	b.n	8014838 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
 8014a8a:	ea4f 1861 	mov.w	r8, r1, asr #5
 8014a8e:	f009 021f 	and.w	r2, r9, #31
 8014a92:	f001 011f 	and.w	r1, r1, #31
 8014a96:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8014a9a:	920c      	str	r2, [sp, #48]	@ 0x30
 8014a9c:	45b0      	cmp	r8, r6
 8014a9e:	9a01      	ldr	r2, [sp, #4]
 8014aa0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8014aa4:	eba2 0203 	sub.w	r2, r2, r3
 8014aa8:	d108      	bne.n	8014abc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
 8014aaa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014aac:	4496      	add	lr, r2
 8014aae:	4419      	add	r1, r3
 8014ab0:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014ab4:	fb02 a101 	mla	r1, r2, r1, sl
 8014ab8:	80e9      	strh	r1, [r5, #6]
 8014aba:	e6fa      	b.n	80148b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 8014abc:	2c00      	cmp	r4, #0
 8014abe:	f2c0 80a7 	blt.w	8014c10 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
 8014ac2:	2701      	movs	r7, #1
 8014ac4:	f1c1 0c20 	rsb	ip, r1, #32
 8014ac8:	970a      	str	r7, [sp, #40]	@ 0x28
 8014aca:	2720      	movs	r7, #32
 8014acc:	fb02 f20c 	mul.w	r2, r2, ip
 8014ad0:	9709      	str	r7, [sp, #36]	@ 0x24
 8014ad2:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8014ad4:	fb92 fcf4 	sdiv	ip, r2, r4
 8014ad8:	fb04 221c 	mls	r2, r4, ip, r2
 8014adc:	4439      	add	r1, r7
 8014ade:	2a00      	cmp	r2, #0
 8014ae0:	bfbc      	itt	lt
 8014ae2:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8014ae6:	1912      	addlt	r2, r2, r4
 8014ae8:	fb0c a101 	mla	r1, ip, r1, sl
 8014aec:	44e6      	add	lr, ip
 8014aee:	80e9      	strh	r1, [r5, #6]
 8014af0:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8014af2:	f8a5 e004 	strh.w	lr, [r5, #4]
 8014af6:	eb08 0501 	add.w	r5, r8, r1
 8014afa:	6901      	ldr	r1, [r0, #16]
 8014afc:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8014b00:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8014b04:	ea58 070e 	orrs.w	r7, r8, lr
 8014b08:	d010      	beq.n	8014b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 8014b0a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8014b0e:	f1be 0f00 	cmp.w	lr, #0
 8014b12:	db0b      	blt.n	8014b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 8014b14:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014b16:	45be      	cmp	lr, r7
 8014b18:	da08      	bge.n	8014b2c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
 8014b1a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014b1e:	45be      	cmp	lr, r7
 8014b20:	bf3c      	itt	cc
 8014b22:	3108      	addcc	r1, #8
 8014b24:	6101      	strcc	r1, [r0, #16]
 8014b26:	f10e 0101 	add.w	r1, lr, #1
 8014b2a:	6081      	str	r1, [r0, #8]
 8014b2c:	6901      	ldr	r1, [r0, #16]
 8014b2e:	f04f 0e00 	mov.w	lr, #0
 8014b32:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8014b36:	42ae      	cmp	r6, r5
 8014b38:	800d      	strh	r5, [r1, #0]
 8014b3a:	4463      	add	r3, ip
 8014b3c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8014b40:	f8a1 e004 	strh.w	lr, [r1, #4]
 8014b44:	f8a1 e006 	strh.w	lr, [r1, #6]
 8014b48:	d053      	beq.n	8014bf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
 8014b4a:	9901      	ldr	r1, [sp, #4]
 8014b4c:	1b12      	subs	r2, r2, r4
 8014b4e:	1ac9      	subs	r1, r1, r3
 8014b50:	4461      	add	r1, ip
 8014b52:	0149      	lsls	r1, r1, #5
 8014b54:	fb91 fef4 	sdiv	lr, r1, r4
 8014b58:	fb04 111e 	mls	r1, r4, lr, r1
 8014b5c:	2900      	cmp	r1, #0
 8014b5e:	bfbc      	itt	lt
 8014b60:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8014b64:	1909      	addlt	r1, r1, r4
 8014b66:	f10e 0701 	add.w	r7, lr, #1
 8014b6a:	970d      	str	r7, [sp, #52]	@ 0x34
 8014b6c:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8014b70:	1852      	adds	r2, r2, r1
 8014b72:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8014b74:	bf54      	ite	pl
 8014b76:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
 8014b7a:	46f4      	movmi	ip, lr
 8014b7c:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8014b80:	bf58      	it	pl
 8014b82:	1b12      	subpl	r2, r2, r4
 8014b84:	4463      	add	r3, ip
 8014b86:	443d      	add	r5, r7
 8014b88:	44e3      	add	fp, ip
 8014b8a:	f8aa b004 	strh.w	fp, [sl, #4]
 8014b8e:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8014b92:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8014b96:	f8aa b006 	strh.w	fp, [sl, #6]
 8014b9a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014b9e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ba2:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8014ba6:	ea5b 070a 	orrs.w	r7, fp, sl
 8014baa:	d014      	beq.n	8014bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 8014bac:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8014bb0:	f1ba 0f00 	cmp.w	sl, #0
 8014bb4:	db0f      	blt.n	8014bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 8014bb6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014bb8:	45ba      	cmp	sl, r7
 8014bba:	da0c      	bge.n	8014bd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
 8014bbc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8014bc0:	45ba      	cmp	sl, r7
 8014bc2:	f10a 0a01 	add.w	sl, sl, #1
 8014bc6:	bf38      	it	cc
 8014bc8:	f10c 0c08 	addcc.w	ip, ip, #8
 8014bcc:	f8c0 a008 	str.w	sl, [r0, #8]
 8014bd0:	bf38      	it	cc
 8014bd2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8014bd6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014bda:	f04f 0700 	mov.w	r7, #0
 8014bde:	42ae      	cmp	r6, r5
 8014be0:	f8ac 5000 	strh.w	r5, [ip]
 8014be4:	f8ac 8002 	strh.w	r8, [ip, #2]
 8014be8:	f8ac 7004 	strh.w	r7, [ip, #4]
 8014bec:	f8ac 7006 	strh.w	r7, [ip, #6]
 8014bf0:	d1bc      	bne.n	8014b6c <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
 8014bf2:	6904      	ldr	r4, [r0, #16]
 8014bf4:	9a01      	ldr	r2, [sp, #4]
 8014bf6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014bf8:	1ad3      	subs	r3, r2, r3
 8014bfa:	88a2      	ldrh	r2, [r4, #4]
 8014bfc:	3120      	adds	r1, #32
 8014bfe:	441a      	add	r2, r3
 8014c00:	80a2      	strh	r2, [r4, #4]
 8014c02:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014c04:	1a89      	subs	r1, r1, r2
 8014c06:	88e2      	ldrh	r2, [r4, #6]
 8014c08:	fb03 2301 	mla	r3, r3, r1, r2
 8014c0c:	80e3      	strh	r3, [r4, #6]
 8014c0e:	e650      	b.n	80148b2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
 8014c10:	f04f 37ff 	mov.w	r7, #4294967295
 8014c14:	434a      	muls	r2, r1
 8014c16:	4264      	negs	r4, r4
 8014c18:	970a      	str	r7, [sp, #40]	@ 0x28
 8014c1a:	2700      	movs	r7, #0
 8014c1c:	e758      	b.n	8014ad0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
 8014c1e:	ea4f 1867 	mov.w	r8, r7, asr #5
 8014c22:	f009 031f 	and.w	r3, r9, #31
 8014c26:	f007 071f 	and.w	r7, r7, #31
 8014c2a:	fa1f fc8c 	uxth.w	ip, ip
 8014c2e:	45d0      	cmp	r8, sl
 8014c30:	930f      	str	r3, [sp, #60]	@ 0x3c
 8014c32:	fa1f fe8e 	uxth.w	lr, lr
 8014c36:	d10a      	bne.n	8014c4e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
 8014c38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014c3a:	449c      	add	ip, r3
 8014c3c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8014c3e:	441f      	add	r7, r3
 8014c40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014c42:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014c46:	fb03 e707 	mla	r7, r3, r7, lr
 8014c4a:	80ef      	strh	r7, [r5, #6]
 8014c4c:	e6bc      	b.n	80149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 8014c4e:	2900      	cmp	r1, #0
 8014c50:	f2c0 80a6 	blt.w	8014da0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
 8014c54:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8014c56:	f1c7 0320 	rsb	r3, r7, #32
 8014c5a:	4363      	muls	r3, r4
 8014c5c:	2401      	movs	r4, #1
 8014c5e:	940d      	str	r4, [sp, #52]	@ 0x34
 8014c60:	2420      	movs	r4, #32
 8014c62:	940c      	str	r4, [sp, #48]	@ 0x30
 8014c64:	fb93 f4f1 	sdiv	r4, r3, r1
 8014c68:	fb01 3b14 	mls	fp, r1, r4, r3
 8014c6c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8014c6e:	f1bb 0f00 	cmp.w	fp, #0
 8014c72:	441f      	add	r7, r3
 8014c74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8014c76:	bfbc      	itt	lt
 8014c78:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8014c7c:	448b      	addlt	fp, r1
 8014c7e:	fb04 e707 	mla	r7, r4, r7, lr
 8014c82:	44a4      	add	ip, r4
 8014c84:	80ef      	strh	r7, [r5, #6]
 8014c86:	f8a5 c004 	strh.w	ip, [r5, #4]
 8014c8a:	eb08 0503 	add.w	r5, r8, r3
 8014c8e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014c92:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8014c96:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014c9a:	ea5e 0307 	orrs.w	r3, lr, r7
 8014c9e:	d011      	beq.n	8014cc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 8014ca0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8014ca4:	f1be 0f00 	cmp.w	lr, #0
 8014ca8:	db0c      	blt.n	8014cc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 8014caa:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014cac:	45be      	cmp	lr, r7
 8014cae:	da09      	bge.n	8014cc4 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
 8014cb0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8014cb4:	45be      	cmp	lr, r7
 8014cb6:	bf3c      	itt	cc
 8014cb8:	f10c 0708 	addcc.w	r7, ip, #8
 8014cbc:	6107      	strcc	r7, [r0, #16]
 8014cbe:	f10e 0701 	add.w	r7, lr, #1
 8014cc2:	6087      	str	r7, [r0, #8]
 8014cc4:	6907      	ldr	r7, [r0, #16]
 8014cc6:	b213      	sxth	r3, r2
 8014cc8:	4555      	cmp	r5, sl
 8014cca:	9310      	str	r3, [sp, #64]	@ 0x40
 8014ccc:	807b      	strh	r3, [r7, #2]
 8014cce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8014cd0:	803d      	strh	r5, [r7, #0]
 8014cd2:	80be      	strh	r6, [r7, #4]
 8014cd4:	eb04 0c03 	add.w	ip, r4, r3
 8014cd8:	80fe      	strh	r6, [r7, #6]
 8014cda:	d050      	beq.n	8014d7e <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
 8014cdc:	9b01      	ldr	r3, [sp, #4]
 8014cde:	eba3 070c 	sub.w	r7, r3, ip
 8014ce2:	ebab 0301 	sub.w	r3, fp, r1
 8014ce6:	443c      	add	r4, r7
 8014ce8:	9309      	str	r3, [sp, #36]	@ 0x24
 8014cea:	0164      	lsls	r4, r4, #5
 8014cec:	fb94 f8f1 	sdiv	r8, r4, r1
 8014cf0:	fb01 4418 	mls	r4, r1, r8, r4
 8014cf4:	2c00      	cmp	r4, #0
 8014cf6:	bfbc      	itt	lt
 8014cf8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014cfc:	1864      	addlt	r4, r4, r1
 8014cfe:	f108 0701 	add.w	r7, r8, #1
 8014d02:	9711      	str	r7, [sp, #68]	@ 0x44
 8014d04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8014d06:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d0a:	191b      	adds	r3, r3, r4
 8014d0c:	f8be b004 	ldrh.w	fp, [lr, #4]
 8014d10:	bf54      	ite	pl
 8014d12:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
 8014d14:	4647      	movmi	r7, r8
 8014d16:	9309      	str	r3, [sp, #36]	@ 0x24
 8014d18:	bf58      	it	pl
 8014d1a:	1a5b      	subpl	r3, r3, r1
 8014d1c:	44bb      	add	fp, r7
 8014d1e:	44bc      	add	ip, r7
 8014d20:	bf58      	it	pl
 8014d22:	9309      	strpl	r3, [sp, #36]	@ 0x24
 8014d24:	f8ae b004 	strh.w	fp, [lr, #4]
 8014d28:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d2c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014d30:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
 8014d32:	f8ae b006 	strh.w	fp, [lr, #6]
 8014d36:	443d      	add	r5, r7
 8014d38:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8014d3c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8014d40:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8014d44:	ea5b 0307 	orrs.w	r3, fp, r7
 8014d48:	d011      	beq.n	8014d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 8014d4a:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8014d4e:	f1bb 0f00 	cmp.w	fp, #0
 8014d52:	db0c      	blt.n	8014d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 8014d54:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014d56:	45bb      	cmp	fp, r7
 8014d58:	da09      	bge.n	8014d6e <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
 8014d5a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014d5e:	45bb      	cmp	fp, r7
 8014d60:	bf3c      	itt	cc
 8014d62:	f10e 0708 	addcc.w	r7, lr, #8
 8014d66:	6107      	strcc	r7, [r0, #16]
 8014d68:	f10b 0701 	add.w	r7, fp, #1
 8014d6c:	6087      	str	r7, [r0, #8]
 8014d6e:	6907      	ldr	r7, [r0, #16]
 8014d70:	4555      	cmp	r5, sl
 8014d72:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8014d74:	803d      	strh	r5, [r7, #0]
 8014d76:	807b      	strh	r3, [r7, #2]
 8014d78:	80be      	strh	r6, [r7, #4]
 8014d7a:	80fe      	strh	r6, [r7, #6]
 8014d7c:	d1c2      	bne.n	8014d04 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
 8014d7e:	9b01      	ldr	r3, [sp, #4]
 8014d80:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8014d82:	eba3 0c0c 	sub.w	ip, r3, ip
 8014d86:	6903      	ldr	r3, [r0, #16]
 8014d88:	3720      	adds	r7, #32
 8014d8a:	8899      	ldrh	r1, [r3, #4]
 8014d8c:	4461      	add	r1, ip
 8014d8e:	8099      	strh	r1, [r3, #4]
 8014d90:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8014d92:	1a7f      	subs	r7, r7, r1
 8014d94:	88d9      	ldrh	r1, [r3, #6]
 8014d96:	fb0c 1c07 	mla	ip, ip, r7, r1
 8014d9a:	f8a3 c006 	strh.w	ip, [r3, #6]
 8014d9e:	e613      	b.n	80149c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
 8014da0:	f04f 34ff 	mov.w	r4, #4294967295
 8014da4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8014da6:	4249      	negs	r1, r1
 8014da8:	940d      	str	r4, [sp, #52]	@ 0x34
 8014daa:	2400      	movs	r4, #0
 8014dac:	437b      	muls	r3, r7
 8014dae:	e758      	b.n	8014c62 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
 8014db0:	9905      	ldr	r1, [sp, #20]
 8014db2:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8014db6:	f009 0c1f 	and.w	ip, r9, #31
 8014dba:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8014dbe:	f001 011f 	and.w	r1, r1, #31
 8014dc2:	45f3      	cmp	fp, lr
 8014dc4:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8014dc8:	9102      	str	r1, [sp, #8]
 8014dca:	9904      	ldr	r1, [sp, #16]
 8014dcc:	eba1 0406 	sub.w	r4, r1, r6
 8014dd0:	d108      	bne.n	8014de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
 8014dd2:	9b02      	ldr	r3, [sp, #8]
 8014dd4:	44a0      	add	r8, r4
 8014dd6:	449c      	add	ip, r3
 8014dd8:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014ddc:	fb04 a40c 	mla	r4, r4, ip, sl
 8014de0:	80fc      	strh	r4, [r7, #6]
 8014de2:	e461      	b.n	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
 8014de4:	9905      	ldr	r1, [sp, #20]
 8014de6:	ebb1 0109 	subs.w	r1, r1, r9
 8014dea:	bf51      	iteee	pl
 8014dec:	f1cc 0520 	rsbpl	r5, ip, #32
 8014df0:	fb04 f40c 	mulmi.w	r4, r4, ip
 8014df4:	4249      	negmi	r1, r1
 8014df6:	2500      	movmi	r5, #0
 8014df8:	bf5d      	ittte	pl
 8014dfa:	436c      	mulpl	r4, r5
 8014dfc:	2520      	movpl	r5, #32
 8014dfe:	f04f 0901 	movpl.w	r9, #1
 8014e02:	f04f 39ff 	movmi.w	r9, #4294967295
 8014e06:	9501      	str	r5, [sp, #4]
 8014e08:	9b01      	ldr	r3, [sp, #4]
 8014e0a:	fb94 f5f1 	sdiv	r5, r4, r1
 8014e0e:	fb01 4415 	mls	r4, r1, r5, r4
 8014e12:	449c      	add	ip, r3
 8014e14:	eb0b 0309 	add.w	r3, fp, r9
 8014e18:	2c00      	cmp	r4, #0
 8014e1a:	bfbc      	itt	lt
 8014e1c:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8014e20:	1864      	addlt	r4, r4, r1
 8014e22:	44a8      	add	r8, r5
 8014e24:	fb05 ac0c 	mla	ip, r5, ip, sl
 8014e28:	f8a7 8004 	strh.w	r8, [r7, #4]
 8014e2c:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014e30:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014e34:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8014e38:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014e3c:	ea58 0707 	orrs.w	r7, r8, r7
 8014e40:	d011      	beq.n	8014e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 8014e42:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8014e46:	f1b8 0f00 	cmp.w	r8, #0
 8014e4a:	db0c      	blt.n	8014e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 8014e4c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014e4e:	45b8      	cmp	r8, r7
 8014e50:	da09      	bge.n	8014e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
 8014e52:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8014e56:	45b8      	cmp	r8, r7
 8014e58:	bf3c      	itt	cc
 8014e5a:	f10c 0708 	addcc.w	r7, ip, #8
 8014e5e:	6107      	strcc	r7, [r0, #16]
 8014e60:	f108 0701 	add.w	r7, r8, #1
 8014e64:	6087      	str	r7, [r0, #8]
 8014e66:	6907      	ldr	r7, [r0, #16]
 8014e68:	f04f 0c00 	mov.w	ip, #0
 8014e6c:	b212      	sxth	r2, r2
 8014e6e:	459e      	cmp	lr, r3
 8014e70:	803b      	strh	r3, [r7, #0]
 8014e72:	442e      	add	r6, r5
 8014e74:	807a      	strh	r2, [r7, #2]
 8014e76:	f8a7 c004 	strh.w	ip, [r7, #4]
 8014e7a:	f8a7 c006 	strh.w	ip, [r7, #6]
 8014e7e:	d04b      	beq.n	8014f18 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
 8014e80:	9f04      	ldr	r7, [sp, #16]
 8014e82:	1a64      	subs	r4, r4, r1
 8014e84:	f04f 0a00 	mov.w	sl, #0
 8014e88:	1bbf      	subs	r7, r7, r6
 8014e8a:	443d      	add	r5, r7
 8014e8c:	016d      	lsls	r5, r5, #5
 8014e8e:	fb95 f8f1 	sdiv	r8, r5, r1
 8014e92:	fb01 5518 	mls	r5, r1, r8, r5
 8014e96:	4565      	cmp	r5, ip
 8014e98:	bfbc      	itt	lt
 8014e9a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8014e9e:	186d      	addlt	r5, r5, r1
 8014ea0:	f108 0701 	add.w	r7, r8, #1
 8014ea4:	9703      	str	r7, [sp, #12]
 8014ea6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014eaa:	1964      	adds	r4, r4, r5
 8014eac:	444b      	add	r3, r9
 8014eae:	bf54      	ite	pl
 8014eb0:	9f03      	ldrpl	r7, [sp, #12]
 8014eb2:	4647      	movmi	r7, r8
 8014eb4:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8014eb8:	bf58      	it	pl
 8014eba:	1a64      	subpl	r4, r4, r1
 8014ebc:	443e      	add	r6, r7
 8014ebe:	44bb      	add	fp, r7
 8014ec0:	f8ac b004 	strh.w	fp, [ip, #4]
 8014ec4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ec8:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8014ecc:	f8ac b006 	strh.w	fp, [ip, #6]
 8014ed0:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8014ed4:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8014ed8:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8014edc:	ea5b 0707 	orrs.w	r7, fp, r7
 8014ee0:	d011      	beq.n	8014f06 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 8014ee2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8014ee6:	f1bb 0f00 	cmp.w	fp, #0
 8014eea:	db0c      	blt.n	8014f06 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 8014eec:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
 8014eee:	45bb      	cmp	fp, r7
 8014ef0:	da09      	bge.n	8014f06 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
 8014ef2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8014ef6:	45bb      	cmp	fp, r7
 8014ef8:	bf3c      	itt	cc
 8014efa:	f10c 0708 	addcc.w	r7, ip, #8
 8014efe:	6107      	strcc	r7, [r0, #16]
 8014f00:	f10b 0701 	add.w	r7, fp, #1
 8014f04:	6087      	str	r7, [r0, #8]
 8014f06:	6907      	ldr	r7, [r0, #16]
 8014f08:	459e      	cmp	lr, r3
 8014f0a:	803b      	strh	r3, [r7, #0]
 8014f0c:	807a      	strh	r2, [r7, #2]
 8014f0e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8014f12:	f8a7 a006 	strh.w	sl, [r7, #6]
 8014f16:	d1c6      	bne.n	8014ea6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
 8014f18:	9b04      	ldr	r3, [sp, #16]
 8014f1a:	1b9e      	subs	r6, r3, r6
 8014f1c:	6903      	ldr	r3, [r0, #16]
 8014f1e:	889a      	ldrh	r2, [r3, #4]
 8014f20:	4432      	add	r2, r6
 8014f22:	809a      	strh	r2, [r3, #4]
 8014f24:	9a02      	ldr	r2, [sp, #8]
 8014f26:	f102 0c20 	add.w	ip, r2, #32
 8014f2a:	9a01      	ldr	r2, [sp, #4]
 8014f2c:	ebac 0c02 	sub.w	ip, ip, r2
 8014f30:	88da      	ldrh	r2, [r3, #6]
 8014f32:	fb06 260c 	mla	r6, r6, ip, r2
 8014f36:	80de      	strh	r6, [r3, #6]
 8014f38:	f7ff bbb6 	b.w	80146a8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

08014f3c <_ZN8touchgfx7Outline6lineToEii>:
 8014f3c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014f3e:	079b      	lsls	r3, r3, #30
 8014f40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8014f42:	460e      	mov	r6, r1
 8014f44:	4615      	mov	r5, r2
 8014f46:	d511      	bpl.n	8014f6c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f48:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8014f4c:	ea86 0701 	eor.w	r7, r6, r1
 8014f50:	ea85 0302 	eor.w	r3, r5, r2
 8014f54:	433b      	orrs	r3, r7
 8014f56:	d009      	beq.n	8014f6c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8014f58:	4633      	mov	r3, r6
 8014f5a:	9500      	str	r5, [sp, #0]
 8014f5c:	f7ff fb4c 	bl	80145f8 <_ZN8touchgfx7Outline10renderLineEiiii>
 8014f60:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014f62:	f043 0301 	orr.w	r3, r3, #1
 8014f66:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8014f6a:	6243      	str	r3, [r0, #36]	@ 0x24
 8014f6c:	b003      	add	sp, #12
 8014f6e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08014f70 <_ZN8touchgfx7Outline6moveToEii>:
 8014f70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014f72:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8014f74:	4615      	mov	r5, r2
 8014f76:	4604      	mov	r4, r0
 8014f78:	460e      	mov	r6, r1
 8014f7a:	079a      	lsls	r2, r3, #30
 8014f7c:	d401      	bmi.n	8014f82 <_ZN8touchgfx7Outline6moveToEii+0x12>
 8014f7e:	f7ff fb07 	bl	8014590 <_ZN8touchgfx7Outline5resetEv>
 8014f82:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8014f84:	07db      	lsls	r3, r3, #31
 8014f86:	d504      	bpl.n	8014f92 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8014f88:	4620      	mov	r0, r4
 8014f8a:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8014f8e:	f7ff ffd5 	bl	8014f3c <_ZN8touchgfx7Outline6lineToEii>
 8014f92:	6923      	ldr	r3, [r4, #16]
 8014f94:	1170      	asrs	r0, r6, #5
 8014f96:	1169      	asrs	r1, r5, #5
 8014f98:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f9c:	4290      	cmp	r0, r2
 8014f9e:	d103      	bne.n	8014fa8 <_ZN8touchgfx7Outline6moveToEii+0x38>
 8014fa0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fa4:	4291      	cmp	r1, r2
 8014fa6:	d01a      	beq.n	8014fde <_ZN8touchgfx7Outline6moveToEii+0x6e>
 8014fa8:	88df      	ldrh	r7, [r3, #6]
 8014faa:	889a      	ldrh	r2, [r3, #4]
 8014fac:	433a      	orrs	r2, r7
 8014fae:	d010      	beq.n	8014fd2 <_ZN8touchgfx7Outline6moveToEii+0x62>
 8014fb0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8014fb4:	2a00      	cmp	r2, #0
 8014fb6:	db0c      	blt.n	8014fd2 <_ZN8touchgfx7Outline6moveToEii+0x62>
 8014fb8:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8014fba:	42ba      	cmp	r2, r7
 8014fbc:	da09      	bge.n	8014fd2 <_ZN8touchgfx7Outline6moveToEii+0x62>
 8014fbe:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8014fc2:	42ba      	cmp	r2, r7
 8014fc4:	f102 0201 	add.w	r2, r2, #1
 8014fc8:	bf38      	it	cc
 8014fca:	3308      	addcc	r3, #8
 8014fcc:	60a2      	str	r2, [r4, #8]
 8014fce:	bf38      	it	cc
 8014fd0:	6123      	strcc	r3, [r4, #16]
 8014fd2:	6923      	ldr	r3, [r4, #16]
 8014fd4:	2200      	movs	r2, #0
 8014fd6:	8018      	strh	r0, [r3, #0]
 8014fd8:	8059      	strh	r1, [r3, #2]
 8014fda:	809a      	strh	r2, [r3, #4]
 8014fdc:	80da      	strh	r2, [r3, #6]
 8014fde:	6166      	str	r6, [r4, #20]
 8014fe0:	6225      	str	r5, [r4, #32]
 8014fe2:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8014fe6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014fe8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8014fe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014fec:	b0d0      	sub	sp, #320	@ 0x140
 8014fee:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8014ff2:	466c      	mov	r4, sp
 8014ff4:	4627      	mov	r7, r4
 8014ff6:	1a0d      	subs	r5, r1, r0
 8014ff8:	f100 0308 	add.w	r3, r0, #8
 8014ffc:	2d48      	cmp	r5, #72	@ 0x48
 8014ffe:	f340 80d5 	ble.w	80151ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015002:	112d      	asrs	r5, r5, #4
 8015004:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8015008:	f9b0 9000 	ldrsh.w	r9, [r0]
 801500c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8015010:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8015014:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8015018:	6816      	ldr	r6, [r2, #0]
 801501a:	6006      	str	r6, [r0, #0]
 801501c:	6856      	ldr	r6, [r2, #4]
 801501e:	6046      	str	r6, [r0, #4]
 8015020:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015024:	f8a2 8002 	strh.w	r8, [r2, #2]
 8015028:	f8a2 e004 	strh.w	lr, [r2, #4]
 801502c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015030:	f1a1 0208 	sub.w	r2, r1, #8
 8015034:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8015038:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801503c:	4565      	cmp	r5, ip
 801503e:	db06      	blt.n	801504e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8015040:	d119      	bne.n	8015076 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8015042:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8015046:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801504a:	42ae      	cmp	r6, r5
 801504c:	dd13      	ble.n	8015076 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801504e:	460e      	mov	r6, r1
 8015050:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8015054:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8015058:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801505c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8015060:	601d      	str	r5, [r3, #0]
 8015062:	6875      	ldr	r5, [r6, #4]
 8015064:	605d      	str	r5, [r3, #4]
 8015066:	f821 9c08 	strh.w	r9, [r1, #-8]
 801506a:	f821 cc06 	strh.w	ip, [r1, #-6]
 801506e:	f821 8c04 	strh.w	r8, [r1, #-4]
 8015072:	f821 ec02 	strh.w	lr, [r1, #-2]
 8015076:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801507a:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 801507e:	42ae      	cmp	r6, r5
 8015080:	db06      	blt.n	8015090 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8015082:	d116      	bne.n	80150b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8015084:	f9b0 c000 	ldrsh.w	ip, [r0]
 8015088:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801508c:	45ac      	cmp	ip, r5
 801508e:	da10      	bge.n	80150b2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8015090:	681d      	ldr	r5, [r3, #0]
 8015092:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015096:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801509a:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801509e:	6005      	str	r5, [r0, #0]
 80150a0:	685d      	ldr	r5, [r3, #4]
 80150a2:	f8a0 8008 	strh.w	r8, [r0, #8]
 80150a6:	6045      	str	r5, [r0, #4]
 80150a8:	8146      	strh	r6, [r0, #10]
 80150aa:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80150ae:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80150b2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80150b6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80150ba:	4565      	cmp	r5, ip
 80150bc:	db06      	blt.n	80150cc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80150be:	d119      	bne.n	80150f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150c0:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80150c4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80150c8:	42ae      	cmp	r6, r5
 80150ca:	da13      	bge.n	80150f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80150cc:	460e      	mov	r6, r1
 80150ce:	f9b0 9000 	ldrsh.w	r9, [r0]
 80150d2:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80150d6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80150da:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80150de:	6005      	str	r5, [r0, #0]
 80150e0:	6875      	ldr	r5, [r6, #4]
 80150e2:	6045      	str	r5, [r0, #4]
 80150e4:	f821 9c08 	strh.w	r9, [r1, #-8]
 80150e8:	f821 cc06 	strh.w	ip, [r1, #-6]
 80150ec:	f821 8c04 	strh.w	r8, [r1, #-4]
 80150f0:	f821 ec02 	strh.w	lr, [r1, #-2]
 80150f4:	3308      	adds	r3, #8
 80150f6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80150fa:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 80150fe:	45e6      	cmp	lr, ip
 8015100:	dbf8      	blt.n	80150f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015102:	d105      	bne.n	8015110 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8015104:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015108:	f9b0 5000 	ldrsh.w	r5, [r0]
 801510c:	42ae      	cmp	r6, r5
 801510e:	dbf1      	blt.n	80150f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015110:	4615      	mov	r5, r2
 8015112:	3a08      	subs	r2, #8
 8015114:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 8015118:	45b4      	cmp	ip, r6
 801511a:	dbf9      	blt.n	8015110 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801511c:	d105      	bne.n	801512a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801511e:	f9b0 8000 	ldrsh.w	r8, [r0]
 8015122:	f9b2 6000 	ldrsh.w	r6, [r2]
 8015126:	45b0      	cmp	r8, r6
 8015128:	dbf2      	blt.n	8015110 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801512a:	4293      	cmp	r3, r2
 801512c:	f1a5 0608 	sub.w	r6, r5, #8
 8015130:	d816      	bhi.n	8015160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8015132:	f8d6 c000 	ldr.w	ip, [r6]
 8015136:	f9b3 a000 	ldrsh.w	sl, [r3]
 801513a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801513e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8015142:	f8c3 c000 	str.w	ip, [r3]
 8015146:	f8d6 c004 	ldr.w	ip, [r6, #4]
 801514a:	f8c3 c004 	str.w	ip, [r3, #4]
 801514e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8015152:	f825 ec06 	strh.w	lr, [r5, #-6]
 8015156:	f825 9c04 	strh.w	r9, [r5, #-4]
 801515a:	f825 8c02 	strh.w	r8, [r5, #-2]
 801515e:	e7c9      	b.n	80150f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8015160:	f8d6 e000 	ldr.w	lr, [r6]
 8015164:	f9b0 a000 	ldrsh.w	sl, [r0]
 8015168:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801516c:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8015170:	f8c0 e000 	str.w	lr, [r0]
 8015174:	f8d6 e004 	ldr.w	lr, [r6, #4]
 8015178:	1a16      	subs	r6, r2, r0
 801517a:	f8c0 e004 	str.w	lr, [r0, #4]
 801517e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8015182:	f825 cc06 	strh.w	ip, [r5, #-6]
 8015186:	f825 9c04 	strh.w	r9, [r5, #-4]
 801518a:	f825 8c02 	strh.w	r8, [r5, #-2]
 801518e:	1acd      	subs	r5, r1, r3
 8015190:	10ed      	asrs	r5, r5, #3
 8015192:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 8015196:	bfb5      	itete	lt
 8015198:	e9c4 0200 	strdlt	r0, r2, [r4]
 801519c:	e9c4 3100 	strdge	r3, r1, [r4]
 80151a0:	460a      	movlt	r2, r1
 80151a2:	4603      	movge	r3, r0
 80151a4:	3408      	adds	r4, #8
 80151a6:	4618      	mov	r0, r3
 80151a8:	4611      	mov	r1, r2
 80151aa:	e724      	b.n	8014ff6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80151ac:	4299      	cmp	r1, r3
 80151ae:	d927      	bls.n	8015200 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
 80151b0:	f1a3 0210 	sub.w	r2, r3, #16
 80151b4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80151b8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80151bc:	45ac      	cmp	ip, r5
 80151be:	db06      	blt.n	80151ce <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80151c0:	d11c      	bne.n	80151fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 80151c2:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80151c6:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80151ca:	42ae      	cmp	r6, r5
 80151cc:	da16      	bge.n	80151fc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
 80151ce:	4615      	mov	r5, r2
 80151d0:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80151d4:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80151d8:	3a08      	subs	r2, #8
 80151da:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80151de:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
 80151e2:	6196      	str	r6, [r2, #24]
 80151e4:	42a8      	cmp	r0, r5
 80151e6:	686e      	ldr	r6, [r5, #4]
 80151e8:	f8a2 9010 	strh.w	r9, [r2, #16]
 80151ec:	61d6      	str	r6, [r2, #28]
 80151ee:	f8a2 c012 	strh.w	ip, [r2, #18]
 80151f2:	f8a2 8014 	strh.w	r8, [r2, #20]
 80151f6:	f8a2 e016 	strh.w	lr, [r2, #22]
 80151fa:	d1db      	bne.n	80151b4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 80151fc:	3308      	adds	r3, #8
 80151fe:	e7d5      	b.n	80151ac <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8015200:	42bc      	cmp	r4, r7
 8015202:	d903      	bls.n	801520c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
 8015204:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 8015208:	3c08      	subs	r4, #8
 801520a:	e6f4      	b.n	8014ff6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801520c:	b050      	add	sp, #320	@ 0x140
 801520e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08015212 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8015212:	b510      	push	{r4, lr}
 8015214:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015216:	4604      	mov	r4, r0
 8015218:	07da      	lsls	r2, r3, #31
 801521a:	d507      	bpl.n	801522c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801521c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8015220:	f7ff fe8c 	bl	8014f3c <_ZN8touchgfx7Outline6lineToEii>
 8015224:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8015226:	f023 0301 	bic.w	r3, r3, #1
 801522a:	6243      	str	r3, [r0, #36]	@ 0x24
 801522c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 801522e:	079b      	lsls	r3, r3, #30
 8015230:	d521      	bpl.n	8015276 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8015232:	6923      	ldr	r3, [r4, #16]
 8015234:	88d9      	ldrh	r1, [r3, #6]
 8015236:	889a      	ldrh	r2, [r3, #4]
 8015238:	430a      	orrs	r2, r1
 801523a:	d010      	beq.n	801525e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801523c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8015240:	2a00      	cmp	r2, #0
 8015242:	db0c      	blt.n	801525e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8015244:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
 8015246:	428a      	cmp	r2, r1
 8015248:	da09      	bge.n	801525e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801524a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801524e:	4291      	cmp	r1, r2
 8015250:	f102 0201 	add.w	r2, r2, #1
 8015254:	bf88      	it	hi
 8015256:	3308      	addhi	r3, #8
 8015258:	60a2      	str	r2, [r4, #8]
 801525a:	bf88      	it	hi
 801525c:	6123      	strhi	r3, [r4, #16]
 801525e:	68a1      	ldr	r1, [r4, #8]
 8015260:	b129      	cbz	r1, 801526e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015262:	6863      	ldr	r3, [r4, #4]
 8015264:	4299      	cmp	r1, r3
 8015266:	d802      	bhi.n	801526e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8015268:	68e0      	ldr	r0, [r4, #12]
 801526a:	f7ff febd 	bl	8014fe8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801526e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
 8015270:	f023 0302 	bic.w	r3, r3, #2
 8015274:	6263      	str	r3, [r4, #36]	@ 0x24
 8015276:	68e0      	ldr	r0, [r4, #12]
 8015278:	bd10      	pop	{r4, pc}
	...

0801527c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 801527c:	4b02      	ldr	r3, [pc, #8]	@ (8015288 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801527e:	6018      	str	r0, [r3, #0]
 8015280:	4b02      	ldr	r3, [pc, #8]	@ (801528c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8015282:	6019      	str	r1, [r3, #0]
 8015284:	4770      	bx	lr
 8015286:	bf00      	nop
 8015288:	2000398c 	.word	0x2000398c
 801528c:	20003990 	.word	0x20003990

08015290 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 8015290:	2300      	movs	r3, #0
 8015292:	4a02      	ldr	r2, [pc, #8]	@ (801529c <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 8015294:	6013      	str	r3, [r2, #0]
 8015296:	4a02      	ldr	r2, [pc, #8]	@ (80152a0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 8015298:	6013      	str	r3, [r2, #0]
 801529a:	4770      	bx	lr
 801529c:	2000398c 	.word	0x2000398c
 80152a0:	20003990 	.word	0x20003990

080152a4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80152a4:	4b01      	ldr	r3, [pc, #4]	@ (80152ac <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80152a6:	6818      	ldr	r0, [r3, #0]
 80152a8:	4770      	bx	lr
 80152aa:	bf00      	nop
 80152ac:	2000398c 	.word	0x2000398c

080152b0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80152b0:	4b01      	ldr	r3, [pc, #4]	@ (80152b8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80152b2:	6818      	ldr	r0, [r3, #0]
 80152b4:	4770      	bx	lr
 80152b6:	bf00      	nop
 80152b8:	20003990 	.word	0x20003990

080152bc <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80152bc:	b510      	push	{r4, lr}
 80152be:	6803      	ldr	r3, [r0, #0]
 80152c0:	460c      	mov	r4, r1
 80152c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80152c4:	4798      	blx	r3
 80152c6:	1b03      	subs	r3, r0, r4
 80152c8:	4258      	negs	r0, r3
 80152ca:	4158      	adcs	r0, r3
 80152cc:	bd10      	pop	{r4, pc}
	...

080152d0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80152d0:	4b01      	ldr	r3, [pc, #4]	@ (80152d8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80152d2:	6019      	str	r1, [r3, #0]
 80152d4:	4770      	bx	lr
 80152d6:	bf00      	nop
 80152d8:	20003994 	.word	0x20003994

080152dc <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80152dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80152e0:	4696      	mov	lr, r2
 80152e2:	b097      	sub	sp, #92	@ 0x5c
 80152e4:	4605      	mov	r5, r0
 80152e6:	4614      	mov	r4, r2
 80152e8:	460e      	mov	r6, r1
 80152ea:	461f      	mov	r7, r3
 80152ec:	f10d 0c1c 	add.w	ip, sp, #28
 80152f0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 80152f4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 80152f8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 80152fc:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015300:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015304:	f8de 3000 	ldr.w	r3, [lr]
 8015308:	f104 0e14 	add.w	lr, r4, #20
 801530c:	f8cc 3000 	str.w	r3, [ip]
 8015310:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8015314:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015318:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801531c:	f8de 3000 	ldr.w	r3, [lr]
 8015320:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8015324:	f8cc 3000 	str.w	r3, [ip]
 8015328:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 801532c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015330:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015334:	f8de 3000 	ldr.w	r3, [lr]
 8015338:	4631      	mov	r1, r6
 801533a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801533c:	4628      	mov	r0, r5
 801533e:	f8cc 3000 	str.w	r3, [ip]
 8015342:	682b      	ldr	r3, [r5, #0]
 8015344:	9201      	str	r2, [sp, #4]
 8015346:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8015348:	f8cd 8008 	str.w	r8, [sp, #8]
 801534c:	9200      	str	r2, [sp, #0]
 801534e:	aa07      	add	r2, sp, #28
 8015350:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8015354:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8015358:	463b      	mov	r3, r7
 801535a:	47d8      	blx	fp
 801535c:	46a6      	mov	lr, r4
 801535e:	f10d 0c1c 	add.w	ip, sp, #28
 8015362:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015366:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801536a:	f8de 3000 	ldr.w	r3, [lr]
 801536e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8015372:	343c      	adds	r4, #60	@ 0x3c
 8015374:	f8cc 3000 	str.w	r3, [ip]
 8015378:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801537c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8015380:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015384:	f8de 3000 	ldr.w	r3, [lr]
 8015388:	f8cc 3000 	str.w	r3, [ip]
 801538c:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8015390:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015392:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8015396:	6823      	ldr	r3, [r4, #0]
 8015398:	4631      	mov	r1, r6
 801539a:	4628      	mov	r0, r5
 801539c:	f8cc 3000 	str.w	r3, [ip]
 80153a0:	682b      	ldr	r3, [r5, #0]
 80153a2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80153a6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80153a8:	f8cd 8008 	str.w	r8, [sp, #8]
 80153ac:	9201      	str	r2, [sp, #4]
 80153ae:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80153b0:	9200      	str	r2, [sp, #0]
 80153b2:	aa07      	add	r2, sp, #28
 80153b4:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 80153b6:	463b      	mov	r3, r7
 80153b8:	47a0      	blx	r4
 80153ba:	b017      	add	sp, #92	@ 0x5c
 80153bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080153c0 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 80153c0:	2000      	movs	r0, #0
 80153c2:	4770      	bx	lr

080153c4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80153c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80153c8:	b08d      	sub	sp, #52	@ 0x34
 80153ca:	4688      	mov	r8, r1
 80153cc:	f8d3 c000 	ldr.w	ip, [r3]
 80153d0:	9916      	ldr	r1, [sp, #88]	@ 0x58
 80153d2:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80153d6:	680f      	ldr	r7, [r1, #0]
 80153d8:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80153dc:	eba7 070c 	sub.w	r7, r7, ip
 80153e0:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80153e4:	edd3 6a07 	vldr	s13, [r3, #28]
 80153e8:	42bc      	cmp	r4, r7
 80153ea:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80153ec:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80153f0:	bfa8      	it	ge
 80153f2:	463c      	movge	r4, r7
 80153f4:	f9b1 9000 	ldrsh.w	r9, [r1]
 80153f8:	f9ba 1000 	ldrsh.w	r1, [sl]
 80153fc:	ee07 4a90 	vmov	s15, r4
 8015400:	eb09 0e0c 	add.w	lr, r9, ip
 8015404:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8015408:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801540c:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8015410:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8015414:	4571      	cmp	r1, lr
 8015416:	ee25 4a04 	vmul.f32	s8, s10, s8
 801541a:	ee65 4a24 	vmul.f32	s9, s10, s9
 801541e:	ee25 5a27 	vmul.f32	s10, s10, s15
 8015422:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8015426:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801542a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801542e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8015432:	ee36 0a84 	vadd.f32	s0, s13, s8
 8015436:	ee61 1a87 	vmul.f32	s3, s3, s14
 801543a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801543e:	f340 808c 	ble.w	801555a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8015442:	eba1 060e 	sub.w	r6, r1, lr
 8015446:	fb96 f5f4 	sdiv	r5, r6, r4
 801544a:	ee07 5a10 	vmov	s14, r5
 801544e:	2d00      	cmp	r5, #0
 8015450:	fb04 6615 	mls	r6, r4, r5, r6
 8015454:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8015458:	eea7 0a04 	vfma.f32	s0, s14, s8
 801545c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8015460:	eea7 1a05 	vfma.f32	s2, s14, s10
 8015464:	dd12      	ble.n	801548c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 8015466:	ee70 6a44 	vsub.f32	s13, s0, s8
 801546a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801546e:	ee31 2a45 	vsub.f32	s4, s2, s10
 8015472:	eef5 6a40 	vcmp.f32	s13, #0.0
 8015476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801547a:	bf14      	ite	ne
 801547c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8015480:	eeb0 7a67 	vmoveq.f32	s14, s15
 8015484:	ee61 1a87 	vmul.f32	s3, s3, s14
 8015488:	ee22 2a07 	vmul.f32	s4, s4, s14
 801548c:	fb05 f204 	mul.w	r2, r5, r4
 8015490:	1abf      	subs	r7, r7, r2
 8015492:	4494      	add	ip, r2
 8015494:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8015498:	4411      	add	r1, r2
 801549a:	eb09 020c 	add.w	r2, r9, ip
 801549e:	b209      	sxth	r1, r1
 80154a0:	443a      	add	r2, r7
 80154a2:	428a      	cmp	r2, r1
 80154a4:	bfc4      	itt	gt
 80154a6:	eba1 0209 	subgt.w	r2, r1, r9
 80154aa:	eba2 070c 	subgt.w	r7, r2, ip
 80154ae:	2f00      	cmp	r7, #0
 80154b0:	dd50      	ble.n	8015554 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 80154b2:	fb97 f1f4 	sdiv	r1, r7, r4
 80154b6:	fb04 7211 	mls	r2, r4, r1, r7
 80154ba:	b90a      	cbnz	r2, 80154c0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 80154bc:	3901      	subs	r1, #1
 80154be:	4622      	mov	r2, r4
 80154c0:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80154c4:	6840      	ldr	r0, [r0, #4]
 80154c6:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 80154ca:	44b6      	add	lr, r6
 80154cc:	f8d0 a000 	ldr.w	sl, [r0]
 80154d0:	2900      	cmp	r1, #0
 80154d2:	bfcc      	ite	gt
 80154d4:	46a1      	movgt	r9, r4
 80154d6:	4691      	movle	r9, r2
 80154d8:	900b      	str	r0, [sp, #44]	@ 0x2c
 80154da:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80154dc:	fb04 e505 	mla	r5, r4, r5, lr
 80154e0:	eef0 6a42 	vmov.f32	s13, s4
 80154e4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80154e8:	9008      	str	r0, [sp, #32]
 80154ea:	eeb0 7a61 	vmov.f32	s14, s3
 80154ee:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80154f0:	695b      	ldr	r3, [r3, #20]
 80154f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80154f6:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80154fa:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80154fe:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8015500:	445b      	add	r3, fp
 8015502:	9307      	str	r3, [sp, #28]
 8015504:	ee16 3a90 	vmov	r3, s13
 8015508:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801550c:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8015510:	ee21 3a23 	vmul.f32	s6, s2, s7
 8015514:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8015518:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801551c:	ee17 7a90 	vmov	r7, s15
 8015520:	ee73 7a42 	vsub.f32	s15, s6, s4
 8015524:	fb97 f7f4 	sdiv	r7, r7, r4
 8015528:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801552c:	ee17 ca90 	vmov	ip, s15
 8015530:	fb9c fcf4 	sdiv	ip, ip, r4
 8015534:	fb0c 3306 	mla	r3, ip, r6, r3
 8015538:	9302      	str	r3, [sp, #8]
 801553a:	ee17 3a10 	vmov	r3, s14
 801553e:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8015542:	fb07 3706 	mla	r7, r7, r6, r3
 8015546:	eba9 0306 	sub.w	r3, r9, r6
 801554a:	e9cd 4700 	strd	r4, r7, [sp]
 801554e:	f8da 4008 	ldr.w	r4, [sl, #8]
 8015552:	47a0      	blx	r4
 8015554:	b00d      	add	sp, #52	@ 0x34
 8015556:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801555a:	2500      	movs	r5, #0
 801555c:	462e      	mov	r6, r5
 801555e:	e799      	b.n	8015494 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08015560 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8015560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015564:	b0db      	sub	sp, #364	@ 0x16c
 8015566:	461d      	mov	r5, r3
 8015568:	4614      	mov	r4, r2
 801556a:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 801556e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8015570:	4629      	mov	r1, r5
 8015572:	930a      	str	r3, [sp, #40]	@ 0x28
 8015574:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8015578:	9009      	str	r0, [sp, #36]	@ 0x24
 801557a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801557c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8015580:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8015584:	9310      	str	r3, [sp, #64]	@ 0x40
 8015586:	6803      	ldr	r3, [r0, #0]
 8015588:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 801558a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 801558e:	47b8      	blx	r7
 8015590:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015592:	6058      	str	r0, [r3, #4]
 8015594:	2800      	cmp	r0, #0
 8015596:	f000 83a1 	beq.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801559a:	682b      	ldr	r3, [r5, #0]
 801559c:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 80155a0:	ed94 7a02 	vldr	s14, [r4, #8]
 80155a4:	9314      	str	r3, [sp, #80]	@ 0x50
 80155a6:	686b      	ldr	r3, [r5, #4]
 80155a8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155ac:	9315      	str	r3, [sp, #84]	@ 0x54
 80155ae:	4bc1      	ldr	r3, [pc, #772]	@ (80158b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80155b0:	7819      	ldrb	r1, [r3, #0]
 80155b2:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80155b6:	2900      	cmp	r1, #0
 80155b8:	bf16      	itet	ne
 80155ba:	4619      	movne	r1, r3
 80155bc:	4611      	moveq	r1, r2
 80155be:	4613      	movne	r3, r2
 80155c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155c4:	9116      	str	r1, [sp, #88]	@ 0x58
 80155c6:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 80155ca:	f240 8387 	bls.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155ce:	ed94 7a07 	vldr	s14, [r4, #28]
 80155d2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155da:	f240 837f 	bls.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155de:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80155e2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80155e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80155ea:	f240 8377 	bls.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155ee:	6822      	ldr	r2, [r4, #0]
 80155f0:	4bb1      	ldr	r3, [pc, #708]	@ (80158b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80155f2:	429a      	cmp	r2, r3
 80155f4:	f2c0 8372 	blt.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80155f8:	49b0      	ldr	r1, [pc, #704]	@ (80158bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80155fa:	6963      	ldr	r3, [r4, #20]
 80155fc:	428a      	cmp	r2, r1
 80155fe:	f300 836d 	bgt.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015602:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8015606:	48ae      	ldr	r0, [pc, #696]	@ (80158c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8015608:	33ff      	adds	r3, #255	@ 0xff
 801560a:	4283      	cmp	r3, r0
 801560c:	f200 8366 	bhi.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015610:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8015612:	4dac      	ldr	r5, [pc, #688]	@ (80158c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8015614:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8015618:	33ff      	adds	r3, #255	@ 0xff
 801561a:	42ab      	cmp	r3, r5
 801561c:	f200 835e 	bhi.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015620:	6862      	ldr	r2, [r4, #4]
 8015622:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8015626:	33ff      	adds	r3, #255	@ 0xff
 8015628:	4283      	cmp	r3, r0
 801562a:	f200 8357 	bhi.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801562e:	69a1      	ldr	r1, [r4, #24]
 8015630:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8015634:	33ff      	adds	r3, #255	@ 0xff
 8015636:	4283      	cmp	r3, r0
 8015638:	f200 8350 	bhi.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801563c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 801563e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8015642:	30ff      	adds	r0, #255	@ 0xff
 8015644:	42a8      	cmp	r0, r5
 8015646:	f200 8349 	bhi.w	8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801564a:	428a      	cmp	r2, r1
 801564c:	f280 8110 	bge.w	8015870 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8015650:	429a      	cmp	r2, r3
 8015652:	f300 8119 	bgt.w	8015888 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8015656:	4299      	cmp	r1, r3
 8015658:	f280 811d 	bge.w	8015896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801565c:	2502      	movs	r5, #2
 801565e:	2701      	movs	r7, #1
 8015660:	46a9      	mov	r9, r5
 8015662:	46b8      	mov	r8, r7
 8015664:	f04f 0a00 	mov.w	sl, #0
 8015668:	4621      	mov	r1, r4
 801566a:	a849      	add	r0, sp, #292	@ 0x124
 801566c:	f003 f960 	bl	8018930 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8015670:	4622      	mov	r2, r4
 8015672:	4653      	mov	r3, sl
 8015674:	a949      	add	r1, sp, #292	@ 0x124
 8015676:	f8cd 9000 	str.w	r9, [sp]
 801567a:	a819      	add	r0, sp, #100	@ 0x64
 801567c:	f003 fa88 	bl	8018b90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015680:	4622      	mov	r2, r4
 8015682:	4653      	mov	r3, sl
 8015684:	a949      	add	r1, sp, #292	@ 0x124
 8015686:	f8cd 8000 	str.w	r8, [sp]
 801568a:	a829      	add	r0, sp, #164	@ 0xa4
 801568c:	f003 fa80 	bl	8018b90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8015690:	4643      	mov	r3, r8
 8015692:	4622      	mov	r2, r4
 8015694:	a949      	add	r1, sp, #292	@ 0x124
 8015696:	f8cd 9000 	str.w	r9, [sp]
 801569a:	a839      	add	r0, sp, #228	@ 0xe4
 801569c:	f003 fa78 	bl	8018b90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80156a0:	42af      	cmp	r7, r5
 80156a2:	af12      	add	r7, sp, #72	@ 0x48
 80156a4:	bfb7      	itett	lt
 80156a6:	2300      	movlt	r3, #0
 80156a8:	2301      	movge	r3, #1
 80156aa:	ad29      	addlt	r5, sp, #164	@ 0xa4
 80156ac:	ac19      	addlt	r4, sp, #100	@ 0x64
 80156ae:	bfb1      	iteee	lt
 80156b0:	930e      	strlt	r3, [sp, #56]	@ 0x38
 80156b2:	ad19      	addge	r5, sp, #100	@ 0x64
 80156b4:	930e      	strge	r3, [sp, #56]	@ 0x38
 80156b6:	ac29      	addge	r4, sp, #164	@ 0xa4
 80156b8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80156ba:	e893 0003 	ldmia.w	r3, {r0, r1}
 80156be:	e887 0003 	stmia.w	r7, {r0, r1}
 80156c2:	b928      	cbnz	r0, 80156d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80156c4:	4b80      	ldr	r3, [pc, #512]	@ (80158c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80156c6:	6818      	ldr	r0, [r3, #0]
 80156c8:	6803      	ldr	r3, [r0, #0]
 80156ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80156cc:	4798      	blx	r3
 80156ce:	6038      	str	r0, [r7, #0]
 80156d0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80156d2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80156d6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80156da:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80156dc:	930c      	str	r3, [sp, #48]	@ 0x30
 80156de:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80156e0:	6963      	ldr	r3, [r4, #20]
 80156e2:	440b      	add	r3, r1
 80156e4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80156e8:	4408      	add	r0, r1
 80156ea:	b200      	sxth	r0, r0
 80156ec:	4283      	cmp	r3, r0
 80156ee:	900d      	str	r0, [sp, #52]	@ 0x34
 80156f0:	f280 80dd 	bge.w	80158ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80156f4:	428b      	cmp	r3, r1
 80156f6:	da08      	bge.n	801570a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80156f8:	2a00      	cmp	r2, #0
 80156fa:	dd06      	ble.n	801570a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80156fc:	1acb      	subs	r3, r1, r3
 80156fe:	429a      	cmp	r2, r3
 8015700:	f2c0 80e4 	blt.w	80158cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8015704:	2b00      	cmp	r3, #0
 8015706:	f300 80e2 	bgt.w	80158ce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801570a:	6967      	ldr	r7, [r4, #20]
 801570c:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8015710:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015712:	443b      	add	r3, r7
 8015714:	461f      	mov	r7, r3
 8015716:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015718:	1bdf      	subs	r7, r3, r7
 801571a:	4297      	cmp	r7, r2
 801571c:	bfa8      	it	ge
 801571e:	4617      	movge	r7, r2
 8015720:	2f00      	cmp	r7, #0
 8015722:	f340 8166 	ble.w	80159f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8015726:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8015728:	6829      	ldr	r1, [r5, #0]
 801572a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801572e:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015732:	4411      	add	r1, r2
 8015734:	6820      	ldr	r0, [r4, #0]
 8015736:	4299      	cmp	r1, r3
 8015738:	dd1a      	ble.n	8015770 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801573a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801573e:	4402      	add	r2, r0
 8015740:	440b      	add	r3, r1
 8015742:	b21b      	sxth	r3, r3
 8015744:	429a      	cmp	r2, r3
 8015746:	dc13      	bgt.n	8015770 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8015748:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801574a:	a912      	add	r1, sp, #72	@ 0x48
 801574c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801574e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8015750:	681b      	ldr	r3, [r3, #0]
 8015752:	9206      	str	r2, [sp, #24]
 8015754:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015756:	9500      	str	r5, [sp, #0]
 8015758:	9205      	str	r2, [sp, #20]
 801575a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801575c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015760:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8015762:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015766:	aa49      	add	r2, sp, #292	@ 0x124
 8015768:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801576c:	4623      	mov	r3, r4
 801576e:	47c8      	blx	r9
 8015770:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8015774:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8015778:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 801577c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015780:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8015784:	68a1      	ldr	r1, [r4, #8]
 8015786:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801578a:	ed94 6a08 	vldr	s12, [r4, #32]
 801578e:	edd4 6a07 	vldr	s13, [r4, #28]
 8015792:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015796:	ee76 6a86 	vadd.f32	s13, s13, s12
 801579a:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 801579e:	e9d4 2300 	ldrd	r2, r3, [r4]
 80157a2:	edc4 6a07 	vstr	s13, [r4, #28]
 80157a6:	441a      	add	r2, r3
 80157a8:	6963      	ldr	r3, [r4, #20]
 80157aa:	3301      	adds	r3, #1
 80157ac:	6022      	str	r2, [r4, #0]
 80157ae:	6163      	str	r3, [r4, #20]
 80157b0:	69a3      	ldr	r3, [r4, #24]
 80157b2:	3b01      	subs	r3, #1
 80157b4:	61a3      	str	r3, [r4, #24]
 80157b6:	6923      	ldr	r3, [r4, #16]
 80157b8:	440b      	add	r3, r1
 80157ba:	68e1      	ldr	r1, [r4, #12]
 80157bc:	428b      	cmp	r3, r1
 80157be:	6123      	str	r3, [r4, #16]
 80157c0:	db15      	blt.n	80157ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80157c2:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80157c6:	3201      	adds	r2, #1
 80157c8:	1a5b      	subs	r3, r3, r1
 80157ca:	ee76 6a26 	vadd.f32	s13, s12, s13
 80157ce:	6022      	str	r2, [r4, #0]
 80157d0:	6123      	str	r3, [r4, #16]
 80157d2:	edc4 6a07 	vstr	s13, [r4, #28]
 80157d6:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80157da:	ee36 7a87 	vadd.f32	s14, s13, s14
 80157de:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80157e2:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80157e6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80157ea:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80157ee:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80157f2:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 80157f6:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 80157fa:	ee37 7a27 	vadd.f32	s14, s14, s15
 80157fe:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8015802:	68a9      	ldr	r1, [r5, #8]
 8015804:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015808:	ed95 6a08 	vldr	s12, [r5, #32]
 801580c:	edd5 6a07 	vldr	s13, [r5, #28]
 8015810:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015814:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015818:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801581c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015820:	edc5 6a07 	vstr	s13, [r5, #28]
 8015824:	441a      	add	r2, r3
 8015826:	696b      	ldr	r3, [r5, #20]
 8015828:	3301      	adds	r3, #1
 801582a:	602a      	str	r2, [r5, #0]
 801582c:	616b      	str	r3, [r5, #20]
 801582e:	69ab      	ldr	r3, [r5, #24]
 8015830:	3b01      	subs	r3, #1
 8015832:	61ab      	str	r3, [r5, #24]
 8015834:	692b      	ldr	r3, [r5, #16]
 8015836:	440b      	add	r3, r1
 8015838:	68e9      	ldr	r1, [r5, #12]
 801583a:	428b      	cmp	r3, r1
 801583c:	612b      	str	r3, [r5, #16]
 801583e:	db15      	blt.n	801586c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8015840:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8015844:	3201      	adds	r2, #1
 8015846:	1a5b      	subs	r3, r3, r1
 8015848:	ee76 6a26 	vadd.f32	s13, s12, s13
 801584c:	602a      	str	r2, [r5, #0]
 801584e:	612b      	str	r3, [r5, #16]
 8015850:	edc5 6a07 	vstr	s13, [r5, #28]
 8015854:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8015858:	ee36 7a87 	vadd.f32	s14, s13, s14
 801585c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015860:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8015864:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015868:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801586c:	3f01      	subs	r7, #1
 801586e:	e757      	b.n	8015720 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8015870:	4299      	cmp	r1, r3
 8015872:	dc13      	bgt.n	801589c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8015874:	429a      	cmp	r2, r3
 8015876:	da14      	bge.n	80158a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8015878:	2502      	movs	r5, #2
 801587a:	2703      	movs	r7, #3
 801587c:	f04f 0800 	mov.w	r8, #0
 8015880:	46a9      	mov	r9, r5
 8015882:	f04f 0a01 	mov.w	sl, #1
 8015886:	e6ef      	b.n	8015668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015888:	2501      	movs	r5, #1
 801588a:	2700      	movs	r7, #0
 801588c:	46a9      	mov	r9, r5
 801588e:	46b8      	mov	r8, r7
 8015890:	f04f 0a02 	mov.w	sl, #2
 8015894:	e6e8      	b.n	8015668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8015896:	2501      	movs	r5, #1
 8015898:	2702      	movs	r7, #2
 801589a:	e6e1      	b.n	8015660 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801589c:	2500      	movs	r5, #0
 801589e:	2701      	movs	r7, #1
 80158a0:	e7f4      	b.n	801588c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 80158a2:	2702      	movs	r7, #2
 80158a4:	2503      	movs	r5, #3
 80158a6:	f04f 0900 	mov.w	r9, #0
 80158aa:	46b8      	mov	r8, r7
 80158ac:	e7e9      	b.n	8015882 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 80158ae:	4613      	mov	r3, r2
 80158b0:	e728      	b.n	8015704 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 80158b2:	bf00      	nop
 80158b4:	2000397c 	.word	0x2000397c
 80158b8:	fffd8f01 	.word	0xfffd8f01
 80158bc:	00027100 	.word	0x00027100
 80158c0:	0004e1ff 	.word	0x0004e1ff
 80158c4:	0004e1fe 	.word	0x0004e1fe
 80158c8:	20003984 	.word	0x20003984
 80158cc:	4613      	mov	r3, r2
 80158ce:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80158d0:	469e      	mov	lr, r3
 80158d2:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80158d4:	469c      	mov	ip, r3
 80158d6:	9111      	str	r1, [sp, #68]	@ 0x44
 80158d8:	f04f 0900 	mov.w	r9, #0
 80158dc:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80158e0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80158e4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 80158e8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 80158ec:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 80158f0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80158f4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 80158f8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 80158fc:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8015900:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8015904:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8015908:	f1bc 0f00 	cmp.w	ip, #0
 801590c:	d147      	bne.n	801599e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801590e:	eb03 0c07 	add.w	ip, r3, r7
 8015912:	1ad7      	subs	r7, r2, r3
 8015914:	f1b9 0f00 	cmp.w	r9, #0
 8015918:	d009      	beq.n	801592e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801591a:	9029      	str	r0, [sp, #164]	@ 0xa4
 801591c:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8015920:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8015924:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8015928:	912d      	str	r1, [sp, #180]	@ 0xb4
 801592a:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 801592e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8015930:	f04f 0800 	mov.w	r8, #0
 8015934:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8015938:	9111      	str	r1, [sp, #68]	@ 0x44
 801593a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 801593e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8015942:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8015946:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801594a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 801594e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8015952:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8015956:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801595a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801595e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8015962:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8015966:	f1be 0f00 	cmp.w	lr, #0
 801596a:	d031      	beq.n	80159d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801596c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 801596e:	4450      	add	r0, sl
 8015970:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015974:	4431      	add	r1, r6
 8015976:	ee37 7a04 	vadd.f32	s14, s14, s8
 801597a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801597e:	4549      	cmp	r1, r9
 8015980:	db08      	blt.n	8015994 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8015982:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015986:	3001      	adds	r0, #1
 8015988:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801598c:	eba1 0109 	sub.w	r1, r1, r9
 8015990:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015994:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015998:	f04f 0801 	mov.w	r8, #1
 801599c:	e7e3      	b.n	8015966 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801599e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 80159a0:	4450      	add	r0, sl
 80159a2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80159a6:	4431      	add	r1, r6
 80159a8:	ee77 7a84 	vadd.f32	s15, s15, s8
 80159ac:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80159b0:	4541      	cmp	r1, r8
 80159b2:	db08      	blt.n	80159c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 80159b4:	ee76 6a85 	vadd.f32	s13, s13, s10
 80159b8:	3001      	adds	r0, #1
 80159ba:	ee37 7a25 	vadd.f32	s14, s14, s11
 80159be:	eba1 0108 	sub.w	r1, r1, r8
 80159c2:	ee77 7a86 	vadd.f32	s15, s15, s12
 80159c6:	f10c 3cff 	add.w	ip, ip, #4294967295
 80159ca:	f04f 0901 	mov.w	r9, #1
 80159ce:	e79b      	b.n	8015908 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80159d0:	449c      	add	ip, r3
 80159d2:	1aff      	subs	r7, r7, r3
 80159d4:	f1b8 0f00 	cmp.w	r8, #0
 80159d8:	d009      	beq.n	80159ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80159da:	9019      	str	r0, [sp, #100]	@ 0x64
 80159dc:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80159e0:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80159e4:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80159e8:	911d      	str	r1, [sp, #116]	@ 0x74
 80159ea:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80159ee:	1ad2      	subs	r2, r2, r3
 80159f0:	e68b      	b.n	801570a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80159f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80159f4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 80159f6:	2b00      	cmp	r3, #0
 80159f8:	f000 80d1 	beq.w	8015b9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80159fc:	ad19      	add	r5, sp, #100	@ 0x64
 80159fe:	ac39      	add	r4, sp, #228	@ 0xe4
 8015a00:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8015a02:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8015a06:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8015a0a:	930c      	str	r3, [sp, #48]	@ 0x30
 8015a0c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8015a0e:	6963      	ldr	r3, [r4, #20]
 8015a10:	440b      	add	r3, r1
 8015a12:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8015a16:	4408      	add	r0, r1
 8015a18:	b200      	sxth	r0, r0
 8015a1a:	4283      	cmp	r3, r0
 8015a1c:	900d      	str	r0, [sp, #52]	@ 0x34
 8015a1e:	f280 80c1 	bge.w	8015ba4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8015a22:	428b      	cmp	r3, r1
 8015a24:	da08      	bge.n	8015a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a26:	2a00      	cmp	r2, #0
 8015a28:	dd06      	ble.n	8015a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015a2a:	1acb      	subs	r3, r1, r3
 8015a2c:	429a      	cmp	r2, r3
 8015a2e:	f2c0 80bb 	blt.w	8015ba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8015a32:	2b00      	cmp	r3, #0
 8015a34:	f300 80b9 	bgt.w	8015baa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8015a38:	6967      	ldr	r7, [r4, #20]
 8015a3a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8015a3e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8015a40:	443b      	add	r3, r7
 8015a42:	461f      	mov	r7, r3
 8015a44:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8015a46:	1bdf      	subs	r7, r3, r7
 8015a48:	4297      	cmp	r7, r2
 8015a4a:	bfa8      	it	ge
 8015a4c:	4617      	movge	r7, r2
 8015a4e:	2f00      	cmp	r7, #0
 8015a50:	f340 813c 	ble.w	8015ccc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8015a54:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8015a56:	6829      	ldr	r1, [r5, #0]
 8015a58:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015a5c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8015a60:	4411      	add	r1, r2
 8015a62:	6820      	ldr	r0, [r4, #0]
 8015a64:	4299      	cmp	r1, r3
 8015a66:	dd1a      	ble.n	8015a9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015a68:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8015a6c:	4402      	add	r2, r0
 8015a6e:	440b      	add	r3, r1
 8015a70:	b21b      	sxth	r3, r3
 8015a72:	429a      	cmp	r2, r3
 8015a74:	dc13      	bgt.n	8015a9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8015a76:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8015a78:	a912      	add	r1, sp, #72	@ 0x48
 8015a7a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8015a7c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8015a7e:	681b      	ldr	r3, [r3, #0]
 8015a80:	9206      	str	r2, [sp, #24]
 8015a82:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8015a84:	9500      	str	r5, [sp, #0]
 8015a86:	9205      	str	r2, [sp, #20]
 8015a88:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8015a8a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8015a8e:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8015a90:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8015a94:	aa49      	add	r2, sp, #292	@ 0x124
 8015a96:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8015a9a:	4623      	mov	r3, r4
 8015a9c:	47c8      	blx	r9
 8015a9e:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8015aa2:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8015aa6:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8015aaa:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015aae:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8015ab2:	68a1      	ldr	r1, [r4, #8]
 8015ab4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015ab8:	ed94 6a08 	vldr	s12, [r4, #32]
 8015abc:	edd4 6a07 	vldr	s13, [r4, #28]
 8015ac0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015ac4:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015ac8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8015acc:	e9d4 2300 	ldrd	r2, r3, [r4]
 8015ad0:	edc4 6a07 	vstr	s13, [r4, #28]
 8015ad4:	441a      	add	r2, r3
 8015ad6:	6963      	ldr	r3, [r4, #20]
 8015ad8:	3301      	adds	r3, #1
 8015ada:	6022      	str	r2, [r4, #0]
 8015adc:	6163      	str	r3, [r4, #20]
 8015ade:	69a3      	ldr	r3, [r4, #24]
 8015ae0:	3b01      	subs	r3, #1
 8015ae2:	61a3      	str	r3, [r4, #24]
 8015ae4:	6923      	ldr	r3, [r4, #16]
 8015ae6:	440b      	add	r3, r1
 8015ae8:	68e1      	ldr	r1, [r4, #12]
 8015aea:	428b      	cmp	r3, r1
 8015aec:	6123      	str	r3, [r4, #16]
 8015aee:	db15      	blt.n	8015b1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8015af0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8015af4:	3201      	adds	r2, #1
 8015af6:	1a5b      	subs	r3, r3, r1
 8015af8:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015afc:	6022      	str	r2, [r4, #0]
 8015afe:	6123      	str	r3, [r4, #16]
 8015b00:	edc4 6a07 	vstr	s13, [r4, #28]
 8015b04:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8015b08:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015b0c:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8015b10:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8015b14:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015b18:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8015b1c:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8015b20:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8015b24:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8015b28:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015b2c:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8015b30:	68a9      	ldr	r1, [r5, #8]
 8015b32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015b36:	ed95 6a08 	vldr	s12, [r5, #32]
 8015b3a:	edd5 6a07 	vldr	s13, [r5, #28]
 8015b3e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015b42:	ee76 6a86 	vadd.f32	s13, s13, s12
 8015b46:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015b4a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8015b4e:	edc5 6a07 	vstr	s13, [r5, #28]
 8015b52:	441a      	add	r2, r3
 8015b54:	696b      	ldr	r3, [r5, #20]
 8015b56:	3301      	adds	r3, #1
 8015b58:	602a      	str	r2, [r5, #0]
 8015b5a:	616b      	str	r3, [r5, #20]
 8015b5c:	69ab      	ldr	r3, [r5, #24]
 8015b5e:	3b01      	subs	r3, #1
 8015b60:	61ab      	str	r3, [r5, #24]
 8015b62:	692b      	ldr	r3, [r5, #16]
 8015b64:	440b      	add	r3, r1
 8015b66:	68e9      	ldr	r1, [r5, #12]
 8015b68:	428b      	cmp	r3, r1
 8015b6a:	612b      	str	r3, [r5, #16]
 8015b6c:	db15      	blt.n	8015b9a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8015b6e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8015b72:	3201      	adds	r2, #1
 8015b74:	1a5b      	subs	r3, r3, r1
 8015b76:	ee76 6a26 	vadd.f32	s13, s12, s13
 8015b7a:	602a      	str	r2, [r5, #0]
 8015b7c:	612b      	str	r3, [r5, #16]
 8015b7e:	edc5 6a07 	vstr	s13, [r5, #28]
 8015b82:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8015b86:	ee36 7a87 	vadd.f32	s14, s13, s14
 8015b8a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8015b8e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8015b92:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015b96:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8015b9a:	3f01      	subs	r7, #1
 8015b9c:	e757      	b.n	8015a4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8015b9e:	ad39      	add	r5, sp, #228	@ 0xe4
 8015ba0:	ac19      	add	r4, sp, #100	@ 0x64
 8015ba2:	e72d      	b.n	8015a00 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8015ba4:	4613      	mov	r3, r2
 8015ba6:	e744      	b.n	8015a32 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8015ba8:	4613      	mov	r3, r2
 8015baa:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8015bac:	469e      	mov	lr, r3
 8015bae:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8015bb2:	461f      	mov	r7, r3
 8015bb4:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8015bb8:	f04f 0900 	mov.w	r9, #0
 8015bbc:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8015bc0:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8015bc4:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8015bc8:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8015bcc:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 8015bd0:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 8015bd2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 8015bd6:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 8015bda:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 8015bde:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 8015be2:	960e      	str	r6, [sp, #56]	@ 0x38
 8015be4:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 8015be8:	2f00      	cmp	r7, #0
 8015bea:	d146      	bne.n	8015c7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8015bec:	449c      	add	ip, r3
 8015bee:	1ad7      	subs	r7, r2, r3
 8015bf0:	f1b9 0f00 	cmp.w	r9, #0
 8015bf4:	d009      	beq.n	8015c0a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8015bf6:	9039      	str	r0, [sp, #228]	@ 0xe4
 8015bf8:	913d      	str	r1, [sp, #244]	@ 0xf4
 8015bfa:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 8015bfe:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 8015c02:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 8015c06:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 8015c0a:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8015c0c:	f04f 0800 	mov.w	r8, #0
 8015c10:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8015c14:	910e      	str	r1, [sp, #56]	@ 0x38
 8015c16:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8015c1a:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8015c1e:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8015c22:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8015c26:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8015c2a:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8015c2e:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8015c32:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8015c36:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8015c3a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8015c3e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8015c42:	f1be 0f00 	cmp.w	lr, #0
 8015c46:	d030      	beq.n	8015caa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8015c48:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8015c4a:	4450      	add	r0, sl
 8015c4c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8015c50:	4431      	add	r1, r6
 8015c52:	ee37 7a04 	vadd.f32	s14, s14, s8
 8015c56:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8015c5a:	4549      	cmp	r1, r9
 8015c5c:	db08      	blt.n	8015c70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8015c5e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8015c62:	3001      	adds	r0, #1
 8015c64:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8015c68:	eba1 0109 	sub.w	r1, r1, r9
 8015c6c:	ee37 7a06 	vadd.f32	s14, s14, s12
 8015c70:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015c74:	f04f 0801 	mov.w	r8, #1
 8015c78:	e7e3      	b.n	8015c42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8015c7a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8015c7c:	4450      	add	r0, sl
 8015c7e:	ee37 7a24 	vadd.f32	s14, s14, s9
 8015c82:	4431      	add	r1, r6
 8015c84:	ee77 7a84 	vadd.f32	s15, s15, s8
 8015c88:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8015c8c:	4541      	cmp	r1, r8
 8015c8e:	db08      	blt.n	8015ca2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8015c90:	ee76 6a85 	vadd.f32	s13, s13, s10
 8015c94:	3001      	adds	r0, #1
 8015c96:	ee37 7a25 	vadd.f32	s14, s14, s11
 8015c9a:	eba1 0108 	sub.w	r1, r1, r8
 8015c9e:	ee77 7a86 	vadd.f32	s15, s15, s12
 8015ca2:	3f01      	subs	r7, #1
 8015ca4:	f04f 0901 	mov.w	r9, #1
 8015ca8:	e79e      	b.n	8015be8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8015caa:	449c      	add	ip, r3
 8015cac:	1aff      	subs	r7, r7, r3
 8015cae:	f1b8 0f00 	cmp.w	r8, #0
 8015cb2:	d009      	beq.n	8015cc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8015cb4:	9019      	str	r0, [sp, #100]	@ 0x64
 8015cb6:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8015cba:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8015cbe:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8015cc2:	911d      	str	r1, [sp, #116]	@ 0x74
 8015cc4:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8015cc8:	1ad2      	subs	r2, r2, r3
 8015cca:	e6b5      	b.n	8015a38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8015ccc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8015cce:	681b      	ldr	r3, [r3, #0]
 8015cd0:	b923      	cbnz	r3, 8015cdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8015cd2:	4b04      	ldr	r3, [pc, #16]	@ (8015ce4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8015cd4:	6818      	ldr	r0, [r3, #0]
 8015cd6:	6803      	ldr	r3, [r0, #0]
 8015cd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015cda:	4798      	blx	r3
 8015cdc:	b05b      	add	sp, #364	@ 0x16c
 8015cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ce2:	bf00      	nop
 8015ce4:	20003984 	.word	0x20003984

08015ce8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8015ce8:	2b03      	cmp	r3, #3
 8015cea:	d818      	bhi.n	8015d1e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8015cec:	e8df f003 	tbb	[pc, r3]
 8015cf0:	130d0602 	.word	0x130d0602
 8015cf4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015cf8:	1850      	adds	r0, r2, r1
 8015cfa:	4770      	bx	lr
 8015cfc:	8803      	ldrh	r3, [r0, #0]
 8015cfe:	8880      	ldrh	r0, [r0, #4]
 8015d00:	4418      	add	r0, r3
 8015d02:	b200      	sxth	r0, r0
 8015d04:	1a80      	subs	r0, r0, r2
 8015d06:	3801      	subs	r0, #1
 8015d08:	4770      	bx	lr
 8015d0a:	8803      	ldrh	r3, [r0, #0]
 8015d0c:	8880      	ldrh	r0, [r0, #4]
 8015d0e:	4418      	add	r0, r3
 8015d10:	b200      	sxth	r0, r0
 8015d12:	1a40      	subs	r0, r0, r1
 8015d14:	e7f7      	b.n	8015d06 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8015d16:	f9b0 0000 	ldrsh.w	r0, [r0]
 8015d1a:	4410      	add	r0, r2
 8015d1c:	4770      	bx	lr
 8015d1e:	2000      	movs	r0, #0
 8015d20:	4770      	bx	lr

08015d22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8015d22:	2b03      	cmp	r3, #3
 8015d24:	d817      	bhi.n	8015d56 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8015d26:	e8df f003 	tbb	[pc, r3]
 8015d2a:	0602      	.short	0x0602
 8015d2c:	1009      	.short	0x1009
 8015d2e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8015d32:	1850      	adds	r0, r2, r1
 8015d34:	4770      	bx	lr
 8015d36:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8015d3a:	e7fa      	b.n	8015d32 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8015d3c:	8843      	ldrh	r3, [r0, #2]
 8015d3e:	88c0      	ldrh	r0, [r0, #6]
 8015d40:	4418      	add	r0, r3
 8015d42:	b200      	sxth	r0, r0
 8015d44:	1a80      	subs	r0, r0, r2
 8015d46:	3801      	subs	r0, #1
 8015d48:	4770      	bx	lr
 8015d4a:	8843      	ldrh	r3, [r0, #2]
 8015d4c:	88c0      	ldrh	r0, [r0, #6]
 8015d4e:	4418      	add	r0, r3
 8015d50:	b200      	sxth	r0, r0
 8015d52:	1a40      	subs	r0, r0, r1
 8015d54:	e7f7      	b.n	8015d46 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8015d56:	2000      	movs	r0, #0
 8015d58:	4770      	bx	lr
	...

08015d5c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8015d5c:	4b01      	ldr	r3, [pc, #4]	@ (8015d64 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8015d5e:	2200      	movs	r2, #0
 8015d60:	601a      	str	r2, [r3, #0]
 8015d62:	4770      	bx	lr
 8015d64:	20003994 	.word	0x20003994

08015d68 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8015d68:	4603      	mov	r3, r0
 8015d6a:	b1c8      	cbz	r0, 8015da0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8015d6c:	0c02      	lsrs	r2, r0, #16
 8015d6e:	0412      	lsls	r2, r2, #16
 8015d70:	b9a2      	cbnz	r2, 8015d9c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8015d72:	0403      	lsls	r3, r0, #16
 8015d74:	2010      	movs	r0, #16
 8015d76:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8015d7a:	bf04      	itt	eq
 8015d7c:	021b      	lsleq	r3, r3, #8
 8015d7e:	3008      	addeq	r0, #8
 8015d80:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8015d84:	bf04      	itt	eq
 8015d86:	011b      	lsleq	r3, r3, #4
 8015d88:	3004      	addeq	r0, #4
 8015d8a:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8015d8e:	bf04      	itt	eq
 8015d90:	009b      	lsleq	r3, r3, #2
 8015d92:	3002      	addeq	r0, #2
 8015d94:	2b00      	cmp	r3, #0
 8015d96:	db04      	blt.n	8015da2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8015d98:	3001      	adds	r0, #1
 8015d9a:	4770      	bx	lr
 8015d9c:	2000      	movs	r0, #0
 8015d9e:	e7ea      	b.n	8015d76 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8015da0:	2020      	movs	r0, #32
 8015da2:	4770      	bx	lr

08015da4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8015da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015da8:	b087      	sub	sp, #28
 8015daa:	460d      	mov	r5, r1
 8015dac:	4616      	mov	r6, r2
 8015dae:	4698      	mov	r8, r3
 8015db0:	4601      	mov	r1, r0
 8015db2:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8015db6:	b120      	cbz	r0, 8015dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015db8:	b11a      	cbz	r2, 8015dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015dba:	2d1f      	cmp	r5, #31
 8015dbc:	d801      	bhi.n	8015dc2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8015dbe:	2b1f      	cmp	r3, #31
 8015dc0:	d904      	bls.n	8015dcc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8015dc2:	2000      	movs	r0, #0
 8015dc4:	6038      	str	r0, [r7, #0]
 8015dc6:	b007      	add	sp, #28
 8015dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015dcc:	b97d      	cbnz	r5, 8015dee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8015dce:	b143      	cbz	r3, 8015de2 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8015dd0:	4602      	mov	r2, r0
 8015dd2:	462b      	mov	r3, r5
 8015dd4:	4641      	mov	r1, r8
 8015dd6:	4630      	mov	r0, r6
 8015dd8:	e9cd 4700 	strd	r4, r7, [sp]
 8015ddc:	f7ff ffe2 	bl	8015da4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015de0:	e7f1      	b.n	8015dc6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015de2:	f04f 33ff 	mov.w	r3, #4294967295
 8015de6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8015dea:	603b      	str	r3, [r7, #0]
 8015dec:	e7eb      	b.n	8015dc6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015dee:	fa32 fa05 	lsrs.w	sl, r2, r5
 8015df2:	d106      	bne.n	8015e02 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8015df4:	4346      	muls	r6, r0
 8015df6:	fbb6 f0f4 	udiv	r0, r6, r4
 8015dfa:	fb04 6610 	mls	r6, r4, r0, r6
 8015dfe:	603e      	str	r6, [r7, #0]
 8015e00:	e7e1      	b.n	8015dc6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8015e02:	2201      	movs	r2, #1
 8015e04:	fa00 fb05 	lsl.w	fp, r0, r5
 8015e08:	40aa      	lsls	r2, r5
 8015e0a:	fbbb f9f4 	udiv	r9, fp, r4
 8015e0e:	3a01      	subs	r2, #1
 8015e10:	fb0a f309 	mul.w	r3, sl, r9
 8015e14:	fb04 b919 	mls	r9, r4, r9, fp
 8015e18:	4016      	ands	r6, r2
 8015e1a:	9303      	str	r3, [sp, #12]
 8015e1c:	4630      	mov	r0, r6
 8015e1e:	f7ff ffa3 	bl	8015d68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015e22:	462b      	mov	r3, r5
 8015e24:	460a      	mov	r2, r1
 8015e26:	4601      	mov	r1, r0
 8015e28:	4630      	mov	r0, r6
 8015e2a:	e9cd 4700 	strd	r4, r7, [sp]
 8015e2e:	f7ff ffb9 	bl	8015da4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015e32:	4606      	mov	r6, r0
 8015e34:	4648      	mov	r0, r9
 8015e36:	eb05 0108 	add.w	r1, r5, r8
 8015e3a:	f7ff ff95 	bl	8015d68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015e3e:	ab05      	add	r3, sp, #20
 8015e40:	464a      	mov	r2, r9
 8015e42:	e9cd 4300 	strd	r4, r3, [sp]
 8015e46:	4603      	mov	r3, r0
 8015e48:	4650      	mov	r0, sl
 8015e4a:	f7ff ffab 	bl	8015da4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015e4e:	6839      	ldr	r1, [r7, #0]
 8015e50:	9a05      	ldr	r2, [sp, #20]
 8015e52:	9b03      	ldr	r3, [sp, #12]
 8015e54:	4411      	add	r1, r2
 8015e56:	fbb1 f2f4 	udiv	r2, r1, r4
 8015e5a:	18d3      	adds	r3, r2, r3
 8015e5c:	fb04 1412 	mls	r4, r4, r2, r1
 8015e60:	441e      	add	r6, r3
 8015e62:	603c      	str	r4, [r7, #0]
 8015e64:	4430      	add	r0, r6
 8015e66:	e7ae      	b.n	8015dc6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08015e68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8015e68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015e6c:	b085      	sub	sp, #20
 8015e6e:	f1b0 0900 	subs.w	r9, r0, #0
 8015e72:	461d      	mov	r5, r3
 8015e74:	4617      	mov	r7, r2
 8015e76:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8015e78:	bfbb      	ittet	lt
 8015e7a:	f1c9 0900 	rsblt	r9, r9, #0
 8015e7e:	f04f 36ff 	movlt.w	r6, #4294967295
 8015e82:	2601      	movge	r6, #1
 8015e84:	6823      	ldrlt	r3, [r4, #0]
 8015e86:	bfbc      	itt	lt
 8015e88:	425b      	neglt	r3, r3
 8015e8a:	6023      	strlt	r3, [r4, #0]
 8015e8c:	2a00      	cmp	r2, #0
 8015e8e:	da04      	bge.n	8015e9a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8015e90:	6823      	ldr	r3, [r4, #0]
 8015e92:	4257      	negs	r7, r2
 8015e94:	4276      	negs	r6, r6
 8015e96:	425b      	negs	r3, r3
 8015e98:	6023      	str	r3, [r4, #0]
 8015e9a:	2d00      	cmp	r5, #0
 8015e9c:	4638      	mov	r0, r7
 8015e9e:	bfba      	itte	lt
 8015ea0:	426d      	neglt	r5, r5
 8015ea2:	f04f 38ff 	movlt.w	r8, #4294967295
 8015ea6:	f04f 0801 	movge.w	r8, #1
 8015eaa:	f7ff ff5d 	bl	8015d68 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8015eae:	ab03      	add	r3, sp, #12
 8015eb0:	463a      	mov	r2, r7
 8015eb2:	e9cd 5300 	strd	r5, r3, [sp]
 8015eb6:	4603      	mov	r3, r0
 8015eb8:	4648      	mov	r0, r9
 8015eba:	f7ff ff73 	bl	8015da4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8015ebe:	6823      	ldr	r3, [r4, #0]
 8015ec0:	9a03      	ldr	r2, [sp, #12]
 8015ec2:	4546      	cmp	r6, r8
 8015ec4:	441a      	add	r2, r3
 8015ec6:	fb92 f3f5 	sdiv	r3, r2, r5
 8015eca:	4418      	add	r0, r3
 8015ecc:	fb05 2313 	mls	r3, r5, r3, r2
 8015ed0:	bf18      	it	ne
 8015ed2:	4240      	negne	r0, r0
 8015ed4:	1c72      	adds	r2, r6, #1
 8015ed6:	6023      	str	r3, [r4, #0]
 8015ed8:	d105      	bne.n	8015ee6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8015eda:	2b00      	cmp	r3, #0
 8015edc:	f1c3 0200 	rsb	r2, r3, #0
 8015ee0:	db0b      	blt.n	8015efa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8015ee2:	6022      	str	r2, [r4, #0]
 8015ee4:	e006      	b.n	8015ef4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015ee6:	2e01      	cmp	r6, #1
 8015ee8:	d104      	bne.n	8015ef4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015eea:	2b00      	cmp	r3, #0
 8015eec:	da02      	bge.n	8015ef4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8015eee:	442b      	add	r3, r5
 8015ef0:	3801      	subs	r0, #1
 8015ef2:	6023      	str	r3, [r4, #0]
 8015ef4:	b005      	add	sp, #20
 8015ef6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8015efa:	3801      	subs	r0, #1
 8015efc:	1b52      	subs	r2, r2, r5
 8015efe:	e7f0      	b.n	8015ee2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08015f00 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8015f00:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8015f04:	4c1c      	ldr	r4, [pc, #112]	@ (8015f78 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8015f06:	4605      	mov	r5, r0
 8015f08:	6807      	ldr	r7, [r0, #0]
 8015f0a:	69a3      	ldr	r3, [r4, #24]
 8015f0c:	b92b      	cbnz	r3, 8015f1a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8015f0e:	6840      	ldr	r0, [r0, #4]
 8015f10:	e9c5 7000 	strd	r7, r0, [r5]
 8015f14:	b004      	add	sp, #16
 8015f16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015f1a:	f04f 0802 	mov.w	r8, #2
 8015f1e:	68a2      	ldr	r2, [r4, #8]
 8015f20:	ae04      	add	r6, sp, #16
 8015f22:	6820      	ldr	r0, [r4, #0]
 8015f24:	fb93 f1f8 	sdiv	r1, r3, r8
 8015f28:	440a      	add	r2, r1
 8015f2a:	69e1      	ldr	r1, [r4, #28]
 8015f2c:	f846 2d04 	str.w	r2, [r6, #-4]!
 8015f30:	463a      	mov	r2, r7
 8015f32:	9600      	str	r6, [sp, #0]
 8015f34:	f7ff ff98 	bl	8015e68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015f38:	69a3      	ldr	r3, [r4, #24]
 8015f3a:	4607      	mov	r7, r0
 8015f3c:	686a      	ldr	r2, [r5, #4]
 8015f3e:	6a21      	ldr	r1, [r4, #32]
 8015f40:	9600      	str	r6, [sp, #0]
 8015f42:	6860      	ldr	r0, [r4, #4]
 8015f44:	f7ff ff90 	bl	8015e68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015f48:	69a3      	ldr	r3, [r4, #24]
 8015f4a:	6962      	ldr	r2, [r4, #20]
 8015f4c:	4407      	add	r7, r0
 8015f4e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8015f50:	9600      	str	r6, [sp, #0]
 8015f52:	68e0      	ldr	r0, [r4, #12]
 8015f54:	fb93 f8f8 	sdiv	r8, r3, r8
 8015f58:	4442      	add	r2, r8
 8015f5a:	9203      	str	r2, [sp, #12]
 8015f5c:	682a      	ldr	r2, [r5, #0]
 8015f5e:	f7ff ff83 	bl	8015e68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015f62:	4680      	mov	r8, r0
 8015f64:	9600      	str	r6, [sp, #0]
 8015f66:	69a3      	ldr	r3, [r4, #24]
 8015f68:	686a      	ldr	r2, [r5, #4]
 8015f6a:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8015f6c:	6920      	ldr	r0, [r4, #16]
 8015f6e:	f7ff ff7b 	bl	8015e68 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8015f72:	4440      	add	r0, r8
 8015f74:	e7cc      	b.n	8015f10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8015f76:	bf00      	nop
 8015f78:	20003998 	.word	0x20003998

08015f7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8015f7c:	4b07      	ldr	r3, [pc, #28]	@ (8015f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8015f7e:	781b      	ldrb	r3, [r3, #0]
 8015f80:	2b01      	cmp	r3, #1
 8015f82:	d109      	bne.n	8015f98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8015f84:	f9b1 3000 	ldrsh.w	r3, [r1]
 8015f88:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015f8c:	8003      	strh	r3, [r0, #0]
 8015f8e:	4b04      	ldr	r3, [pc, #16]	@ (8015fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8015f90:	881b      	ldrh	r3, [r3, #0]
 8015f92:	3b01      	subs	r3, #1
 8015f94:	1a9b      	subs	r3, r3, r2
 8015f96:	800b      	strh	r3, [r1, #0]
 8015f98:	4770      	bx	lr
 8015f9a:	bf00      	nop
 8015f9c:	2000397c 	.word	0x2000397c
 8015fa0:	20003978 	.word	0x20003978

08015fa4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8015fa4:	4b07      	ldr	r3, [pc, #28]	@ (8015fc4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8015fa6:	b510      	push	{r4, lr}
 8015fa8:	781b      	ldrb	r3, [r3, #0]
 8015faa:	2b01      	cmp	r3, #1
 8015fac:	d108      	bne.n	8015fc0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8015fae:	4b06      	ldr	r3, [pc, #24]	@ (8015fc8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8015fb0:	880c      	ldrh	r4, [r1, #0]
 8015fb2:	881b      	ldrh	r3, [r3, #0]
 8015fb4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8015fb8:	3b01      	subs	r3, #1
 8015fba:	1b1b      	subs	r3, r3, r4
 8015fbc:	8003      	strh	r3, [r0, #0]
 8015fbe:	800a      	strh	r2, [r1, #0]
 8015fc0:	bd10      	pop	{r4, pc}
 8015fc2:	bf00      	nop
 8015fc4:	2000397c 	.word	0x2000397c
 8015fc8:	20003978 	.word	0x20003978

08015fcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8015fcc:	4b0a      	ldr	r3, [pc, #40]	@ (8015ff8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8015fce:	b510      	push	{r4, lr}
 8015fd0:	781b      	ldrb	r3, [r3, #0]
 8015fd2:	2b01      	cmp	r3, #1
 8015fd4:	d10e      	bne.n	8015ff4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8015fd6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8015fda:	8843      	ldrh	r3, [r0, #2]
 8015fdc:	f9b0 4000 	ldrsh.w	r4, [r0]
 8015fe0:	18ca      	adds	r2, r1, r3
 8015fe2:	4b06      	ldr	r3, [pc, #24]	@ (8015ffc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8015fe4:	8044      	strh	r4, [r0, #2]
 8015fe6:	881b      	ldrh	r3, [r3, #0]
 8015fe8:	1a9b      	subs	r3, r3, r2
 8015fea:	8003      	strh	r3, [r0, #0]
 8015fec:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8015ff0:	8081      	strh	r1, [r0, #4]
 8015ff2:	80c3      	strh	r3, [r0, #6]
 8015ff4:	bd10      	pop	{r4, pc}
 8015ff6:	bf00      	nop
 8015ff8:	2000397c 	.word	0x2000397c
 8015ffc:	20003978 	.word	0x20003978

08016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8016000:	4b08      	ldr	r3, [pc, #32]	@ (8016024 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8016002:	781b      	ldrb	r3, [r3, #0]
 8016004:	2b01      	cmp	r3, #1
 8016006:	d10c      	bne.n	8016022 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8016008:	8803      	ldrh	r3, [r0, #0]
 801600a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801600e:	8842      	ldrh	r2, [r0, #2]
 8016010:	8002      	strh	r2, [r0, #0]
 8016012:	185a      	adds	r2, r3, r1
 8016014:	4b04      	ldr	r3, [pc, #16]	@ (8016028 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8016016:	881b      	ldrh	r3, [r3, #0]
 8016018:	1a9b      	subs	r3, r3, r2
 801601a:	8043      	strh	r3, [r0, #2]
 801601c:	88c3      	ldrh	r3, [r0, #6]
 801601e:	80c1      	strh	r1, [r0, #6]
 8016020:	8083      	strh	r3, [r0, #4]
 8016022:	4770      	bx	lr
 8016024:	2000397c 	.word	0x2000397c
 8016028:	20003978 	.word	0x20003978

0801602c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801602c:	4b07      	ldr	r3, [pc, #28]	@ (801604c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801602e:	b510      	push	{r4, lr}
 8016030:	781b      	ldrb	r3, [r3, #0]
 8016032:	2b01      	cmp	r3, #1
 8016034:	d108      	bne.n	8016048 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8016036:	f9b1 3000 	ldrsh.w	r3, [r1]
 801603a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801603e:	8003      	strh	r3, [r0, #0]
 8016040:	8893      	ldrh	r3, [r2, #4]
 8016042:	3b01      	subs	r3, #1
 8016044:	1b1b      	subs	r3, r3, r4
 8016046:	800b      	strh	r3, [r1, #0]
 8016048:	bd10      	pop	{r4, pc}
 801604a:	bf00      	nop
 801604c:	2000397c 	.word	0x2000397c

08016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8016050:	4b0a      	ldr	r3, [pc, #40]	@ (801607c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8016052:	460a      	mov	r2, r1
 8016054:	b510      	push	{r4, lr}
 8016056:	781b      	ldrb	r3, [r3, #0]
 8016058:	2b01      	cmp	r3, #1
 801605a:	d10d      	bne.n	8016078 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801605c:	8881      	ldrh	r1, [r0, #4]
 801605e:	8803      	ldrh	r3, [r0, #0]
 8016060:	440b      	add	r3, r1
 8016062:	4601      	mov	r1, r0
 8016064:	3b01      	subs	r3, #1
 8016066:	f821 3b02 	strh.w	r3, [r1], #2
 801606a:	f7ff ffdf 	bl	801602c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801606e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8016072:	88c2      	ldrh	r2, [r0, #6]
 8016074:	80c3      	strh	r3, [r0, #6]
 8016076:	8082      	strh	r2, [r0, #4]
 8016078:	bd10      	pop	{r4, pc}
 801607a:	bf00      	nop
 801607c:	2000397c 	.word	0x2000397c

08016080 <_ZN8touchgfx11Application13requestRedrawEv>:
 8016080:	4b06      	ldr	r3, [pc, #24]	@ (801609c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8016082:	2100      	movs	r1, #0
 8016084:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016088:	4b05      	ldr	r3, [pc, #20]	@ (80160a0 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801608a:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 801608e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016092:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8016096:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 801609a:	4770      	bx	lr
 801609c:	20003978 	.word	0x20003978
 80160a0:	2000397a 	.word	0x2000397a

080160a4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80160a4:	4b03      	ldr	r3, [pc, #12]	@ (80160b4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80160a6:	6818      	ldr	r0, [r3, #0]
 80160a8:	b110      	cbz	r0, 80160b0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80160aa:	6803      	ldr	r3, [r0, #0]
 80160ac:	699b      	ldr	r3, [r3, #24]
 80160ae:	4718      	bx	r3
 80160b0:	4770      	bx	lr
 80160b2:	bf00      	nop
 80160b4:	200039c8 	.word	0x200039c8

080160b8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80160b8:	4770      	bx	lr
	...

080160bc <_ZN8touchgfx11Application4drawEv>:
 80160bc:	4b09      	ldr	r3, [pc, #36]	@ (80160e4 <_ZN8touchgfx11Application4drawEv+0x28>)
 80160be:	b507      	push	{r0, r1, r2, lr}
 80160c0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80160c4:	2100      	movs	r1, #0
 80160c6:	4b08      	ldr	r3, [pc, #32]	@ (80160e8 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80160c8:	9100      	str	r1, [sp, #0]
 80160ca:	4669      	mov	r1, sp
 80160cc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80160d0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80160d4:	f8ad 3006 	strh.w	r3, [sp, #6]
 80160d8:	6803      	ldr	r3, [r0, #0]
 80160da:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80160dc:	4798      	blx	r3
 80160de:	b003      	add	sp, #12
 80160e0:	f85d fb04 	ldr.w	pc, [sp], #4
 80160e4:	20003978 	.word	0x20003978
 80160e8:	2000397a 	.word	0x2000397a

080160ec <_ZN8touchgfx11Application10invalidateEv>:
 80160ec:	4b09      	ldr	r3, [pc, #36]	@ (8016114 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80160ee:	b082      	sub	sp, #8
 80160f0:	2100      	movs	r1, #0
 80160f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80160f6:	4b08      	ldr	r3, [pc, #32]	@ (8016118 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80160f8:	f8ad 2004 	strh.w	r2, [sp, #4]
 80160fc:	aa02      	add	r2, sp, #8
 80160fe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016102:	9100      	str	r1, [sp, #0]
 8016104:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016108:	6803      	ldr	r3, [r0, #0]
 801610a:	e912 0006 	ldmdb	r2, {r1, r2}
 801610e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016110:	b002      	add	sp, #8
 8016112:	4718      	bx	r3
 8016114:	20003978 	.word	0x20003978
 8016118:	2000397a 	.word	0x2000397a

0801611c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801611c:	4b03      	ldr	r3, [pc, #12]	@ (801612c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801611e:	6818      	ldr	r0, [r3, #0]
 8016120:	b110      	cbz	r0, 8016128 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8016122:	6803      	ldr	r3, [r0, #0]
 8016124:	69db      	ldr	r3, [r3, #28]
 8016126:	4718      	bx	r3
 8016128:	4770      	bx	lr
 801612a:	bf00      	nop
 801612c:	200039c8 	.word	0x200039c8

08016130 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8016130:	4b03      	ldr	r3, [pc, #12]	@ (8016140 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8016132:	6818      	ldr	r0, [r3, #0]
 8016134:	b110      	cbz	r0, 801613c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8016136:	6803      	ldr	r3, [r0, #0]
 8016138:	6a1b      	ldr	r3, [r3, #32]
 801613a:	4718      	bx	r3
 801613c:	4770      	bx	lr
 801613e:	bf00      	nop
 8016140:	200039c8 	.word	0x200039c8

08016144 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8016144:	2300      	movs	r3, #0
 8016146:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801614a:	4770      	bx	lr

0801614c <_ZN8touchgfx11Application14handleKeyEventEh>:
 801614c:	4b03      	ldr	r3, [pc, #12]	@ (801615c <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801614e:	6818      	ldr	r0, [r3, #0]
 8016150:	b110      	cbz	r0, 8016158 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8016152:	6803      	ldr	r3, [r0, #0]
 8016154:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8016156:	4718      	bx	r3
 8016158:	4770      	bx	lr
 801615a:	bf00      	nop
 801615c:	200039c8 	.word	0x200039c8

08016160 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8016160:	b510      	push	{r4, lr}
 8016162:	f9b1 4000 	ldrsh.w	r4, [r1]
 8016166:	888a      	ldrh	r2, [r1, #4]
 8016168:	f9b0 3000 	ldrsh.w	r3, [r0]
 801616c:	4422      	add	r2, r4
 801616e:	b212      	sxth	r2, r2
 8016170:	4293      	cmp	r3, r2
 8016172:	da15      	bge.n	80161a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016174:	8882      	ldrh	r2, [r0, #4]
 8016176:	4413      	add	r3, r2
 8016178:	b21b      	sxth	r3, r3
 801617a:	429c      	cmp	r4, r3
 801617c:	da10      	bge.n	80161a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801617e:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8016182:	88c9      	ldrh	r1, [r1, #6]
 8016184:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8016188:	4419      	add	r1, r3
 801618a:	b209      	sxth	r1, r1
 801618c:	428a      	cmp	r2, r1
 801618e:	da07      	bge.n	80161a0 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8016190:	88c0      	ldrh	r0, [r0, #6]
 8016192:	4410      	add	r0, r2
 8016194:	b200      	sxth	r0, r0
 8016196:	4283      	cmp	r3, r0
 8016198:	bfac      	ite	ge
 801619a:	2000      	movge	r0, #0
 801619c:	2001      	movlt	r0, #1
 801619e:	bd10      	pop	{r4, pc}
 80161a0:	2000      	movs	r0, #0
 80161a2:	e7fc      	b.n	801619e <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080161a4 <_ZN8touchgfx4Rect10restrictToEss>:
 80161a4:	f9b0 3000 	ldrsh.w	r3, [r0]
 80161a8:	2b00      	cmp	r3, #0
 80161aa:	b510      	push	{r4, lr}
 80161ac:	da04      	bge.n	80161b8 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80161ae:	8884      	ldrh	r4, [r0, #4]
 80161b0:	4423      	add	r3, r4
 80161b2:	8083      	strh	r3, [r0, #4]
 80161b4:	2300      	movs	r3, #0
 80161b6:	8003      	strh	r3, [r0, #0]
 80161b8:	f9b0 4000 	ldrsh.w	r4, [r0]
 80161bc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80161c0:	1b09      	subs	r1, r1, r4
 80161c2:	428b      	cmp	r3, r1
 80161c4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80161c8:	bfc8      	it	gt
 80161ca:	8081      	strhgt	r1, [r0, #4]
 80161cc:	2b00      	cmp	r3, #0
 80161ce:	da04      	bge.n	80161da <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80161d0:	88c1      	ldrh	r1, [r0, #6]
 80161d2:	440b      	add	r3, r1
 80161d4:	80c3      	strh	r3, [r0, #6]
 80161d6:	2300      	movs	r3, #0
 80161d8:	8043      	strh	r3, [r0, #2]
 80161da:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80161de:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80161e2:	1a52      	subs	r2, r2, r1
 80161e4:	4293      	cmp	r3, r2
 80161e6:	bfc8      	it	gt
 80161e8:	80c2      	strhgt	r2, [r0, #6]
 80161ea:	bd10      	pop	{r4, pc}

080161ec <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80161ec:	4b10      	ldr	r3, [pc, #64]	@ (8016230 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80161ee:	b510      	push	{r4, lr}
 80161f0:	460c      	mov	r4, r1
 80161f2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80161f6:	4b0f      	ldr	r3, [pc, #60]	@ (8016234 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80161f8:	4620      	mov	r0, r4
 80161fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80161fe:	f7ff ffd1 	bl	80161a4 <_ZN8touchgfx4Rect10restrictToEss>
 8016202:	4b0d      	ldr	r3, [pc, #52]	@ (8016238 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8016204:	6818      	ldr	r0, [r3, #0]
 8016206:	b190      	cbz	r0, 801622e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8016208:	6803      	ldr	r3, [r0, #0]
 801620a:	4621      	mov	r1, r4
 801620c:	689b      	ldr	r3, [r3, #8]
 801620e:	4798      	blx	r3
 8016210:	4b0a      	ldr	r3, [pc, #40]	@ (801623c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8016212:	6818      	ldr	r0, [r3, #0]
 8016214:	b118      	cbz	r0, 801621e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8016216:	6803      	ldr	r3, [r0, #0]
 8016218:	4621      	mov	r1, r4
 801621a:	689b      	ldr	r3, [r3, #8]
 801621c:	4798      	blx	r3
 801621e:	4b08      	ldr	r3, [pc, #32]	@ (8016240 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8016220:	4621      	mov	r1, r4
 8016222:	6818      	ldr	r0, [r3, #0]
 8016224:	6803      	ldr	r3, [r0, #0]
 8016226:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801622a:	69db      	ldr	r3, [r3, #28]
 801622c:	4718      	bx	r3
 801622e:	bd10      	pop	{r4, pc}
 8016230:	2000397a 	.word	0x2000397a
 8016234:	20003978 	.word	0x20003978
 8016238:	200039c8 	.word	0x200039c8
 801623c:	200039c4 	.word	0x200039c4
 8016240:	20003984 	.word	0x20003984

08016244 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8016244:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016246:	4606      	mov	r6, r0
 8016248:	4608      	mov	r0, r1
 801624a:	460f      	mov	r7, r1
 801624c:	f7fc f8b9 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016250:	b9e8      	cbnz	r0, 801628e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8016252:	f9b7 5000 	ldrsh.w	r5, [r7]
 8016256:	f9b6 4000 	ldrsh.w	r4, [r6]
 801625a:	42a5      	cmp	r5, r4
 801625c:	db17      	blt.n	801628e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801625e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8016262:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8016266:	429a      	cmp	r2, r3
 8016268:	db11      	blt.n	801628e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801626a:	88b9      	ldrh	r1, [r7, #4]
 801626c:	440d      	add	r5, r1
 801626e:	88b1      	ldrh	r1, [r6, #4]
 8016270:	440c      	add	r4, r1
 8016272:	b22d      	sxth	r5, r5
 8016274:	b224      	sxth	r4, r4
 8016276:	42a5      	cmp	r5, r4
 8016278:	dc09      	bgt.n	801628e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801627a:	88f8      	ldrh	r0, [r7, #6]
 801627c:	4410      	add	r0, r2
 801627e:	88f2      	ldrh	r2, [r6, #6]
 8016280:	4413      	add	r3, r2
 8016282:	b200      	sxth	r0, r0
 8016284:	b21b      	sxth	r3, r3
 8016286:	4298      	cmp	r0, r3
 8016288:	bfcc      	ite	gt
 801628a:	2000      	movgt	r0, #0
 801628c:	2001      	movle	r0, #1
 801628e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08016290 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8016290:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016292:	4604      	mov	r4, r0
 8016294:	4608      	mov	r0, r1
 8016296:	460d      	mov	r5, r1
 8016298:	f7fc f893 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801629c:	b978      	cbnz	r0, 80162be <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801629e:	4620      	mov	r0, r4
 80162a0:	f7fc f88f 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80162a4:	f9b5 6000 	ldrsh.w	r6, [r5]
 80162a8:	b150      	cbz	r0, 80162c0 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80162aa:	8026      	strh	r6, [r4, #0]
 80162ac:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80162b0:	8063      	strh	r3, [r4, #2]
 80162b2:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80162b6:	80a3      	strh	r3, [r4, #4]
 80162b8:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80162bc:	80e3      	strh	r3, [r4, #6]
 80162be:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80162c0:	f9b4 1000 	ldrsh.w	r1, [r4]
 80162c4:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80162c8:	42b1      	cmp	r1, r6
 80162ca:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80162ce:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80162d2:	460f      	mov	r7, r1
 80162d4:	88ed      	ldrh	r5, [r5, #6]
 80162d6:	bfa8      	it	ge
 80162d8:	4637      	movge	r7, r6
 80162da:	4293      	cmp	r3, r2
 80162dc:	4618      	mov	r0, r3
 80162de:	4466      	add	r6, ip
 80162e0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80162e4:	bfa8      	it	ge
 80162e6:	4610      	movge	r0, r2
 80162e8:	442a      	add	r2, r5
 80162ea:	88e5      	ldrh	r5, [r4, #6]
 80162ec:	4461      	add	r1, ip
 80162ee:	b236      	sxth	r6, r6
 80162f0:	8027      	strh	r7, [r4, #0]
 80162f2:	442b      	add	r3, r5
 80162f4:	b209      	sxth	r1, r1
 80162f6:	b212      	sxth	r2, r2
 80162f8:	8060      	strh	r0, [r4, #2]
 80162fa:	b21b      	sxth	r3, r3
 80162fc:	428e      	cmp	r6, r1
 80162fe:	bfac      	ite	ge
 8016300:	ebc7 0106 	rsbge	r1, r7, r6
 8016304:	ebc7 0101 	rsblt	r1, r7, r1
 8016308:	429a      	cmp	r2, r3
 801630a:	bfac      	ite	ge
 801630c:	ebc0 0202 	rsbge	r2, r0, r2
 8016310:	ebc0 0203 	rsblt	r2, r0, r3
 8016314:	80a1      	strh	r1, [r4, #4]
 8016316:	80e2      	strh	r2, [r4, #6]
 8016318:	e7d1      	b.n	80162be <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0801631c <_ZN8touchgfx11Application11getInstanceEv>:
 801631c:	4b01      	ldr	r3, [pc, #4]	@ (8016324 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801631e:	6818      	ldr	r0, [r3, #0]
 8016320:	4770      	bx	lr
 8016322:	bf00      	nop
 8016324:	200039d8 	.word	0x200039d8

08016328 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8016328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801632a:	4b10      	ldr	r3, [pc, #64]	@ (801636c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 801632c:	4605      	mov	r5, r0
 801632e:	781b      	ldrb	r3, [r3, #0]
 8016330:	b1d3      	cbz	r3, 8016368 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8016332:	4b0f      	ldr	r3, [pc, #60]	@ (8016370 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8016334:	f100 06ee 	add.w	r6, r0, #238	@ 0xee
 8016338:	4f0e      	ldr	r7, [pc, #56]	@ (8016374 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 801633a:	881c      	ldrh	r4, [r3, #0]
 801633c:	f8b5 312e 	ldrh.w	r3, [r5, #302]	@ 0x12e
 8016340:	42a3      	cmp	r3, r4
 8016342:	d90e      	bls.n	8016362 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8016344:	683b      	ldr	r3, [r7, #0]
 8016346:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801634a:	b10a      	cbz	r2, 8016350 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 801634c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 801634e:	b900      	cbnz	r0, 8016352 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8016350:	6898      	ldr	r0, [r3, #8]
 8016352:	6803      	ldr	r3, [r0, #0]
 8016354:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8016358:	3401      	adds	r4, #1
 801635a:	69db      	ldr	r3, [r3, #28]
 801635c:	4798      	blx	r3
 801635e:	b2a4      	uxth	r4, r4
 8016360:	e7ec      	b.n	801633c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8016362:	2300      	movs	r3, #0
 8016364:	f8a5 312e 	strh.w	r3, [r5, #302]	@ 0x12e
 8016368:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801636a:	bf00      	nop
 801636c:	20003982 	.word	0x20003982
 8016370:	200001a0 	.word	0x200001a0
 8016374:	20003984 	.word	0x20003984

08016378 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8016378:	2300      	movs	r3, #0
 801637a:	b510      	push	{r4, lr}
 801637c:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8016380:	4604      	mov	r4, r0
 8016382:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8016386:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801638a:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 801638e:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8016392:	429a      	cmp	r2, r3
 8016394:	d90e      	bls.n	80163b4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8016396:	18e2      	adds	r2, r4, r3
 8016398:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 801639c:	b122      	cbz	r2, 80163a8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801639e:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80163a2:	6803      	ldr	r3, [r0, #0]
 80163a4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80163a6:	4798      	blx	r3
 80163a8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 80163ac:	3301      	adds	r3, #1
 80163ae:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80163b2:	e7ea      	b.n	801638a <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80163b4:	bd10      	pop	{r4, pc}

080163b6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80163b6:	b530      	push	{r4, r5, lr}
 80163b8:	2200      	movs	r2, #0
 80163ba:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 80163be:	b293      	uxth	r3, r2
 80163c0:	429d      	cmp	r5, r3
 80163c2:	d90e      	bls.n	80163e2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80163c4:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80163c8:	428b      	cmp	r3, r1
 80163ca:	d10b      	bne.n	80163e4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80163cc:	1884      	adds	r4, r0, r2
 80163ce:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 80163d2:	b13b      	cbz	r3, 80163e4 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80163d4:	3b01      	subs	r3, #1
 80163d6:	b2db      	uxtb	r3, r3
 80163d8:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 80163dc:	b90b      	cbnz	r3, 80163e2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80163de:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80163e2:	bd30      	pop	{r4, r5, pc}
 80163e4:	3201      	adds	r2, #1
 80163e6:	e7ea      	b.n	80163be <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080163e8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80163e8:	2300      	movs	r3, #0
 80163ea:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 80163ee:	30a4      	adds	r0, #164	@ 0xa4
 80163f0:	f820 3c24 	strh.w	r3, [r0, #-36]
 80163f4:	f802 3b01 	strb.w	r3, [r2], #1
 80163f8:	4282      	cmp	r2, r0
 80163fa:	d1fb      	bne.n	80163f4 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80163fc:	4770      	bx	lr
	...

08016400 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8016400:	b570      	push	{r4, r5, r6, lr}
 8016402:	4c0b      	ldr	r4, [pc, #44]	@ (8016430 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8016404:	4605      	mov	r5, r0
 8016406:	460e      	mov	r6, r1
 8016408:	6820      	ldr	r0, [r4, #0]
 801640a:	b110      	cbz	r0, 8016412 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 801640c:	6803      	ldr	r3, [r0, #0]
 801640e:	695b      	ldr	r3, [r3, #20]
 8016410:	4798      	blx	r3
 8016412:	1d28      	adds	r0, r5, #4
 8016414:	f7ff ffe8 	bl	80163e8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8016418:	6026      	str	r6, [r4, #0]
 801641a:	6833      	ldr	r3, [r6, #0]
 801641c:	4630      	mov	r0, r6
 801641e:	68db      	ldr	r3, [r3, #12]
 8016420:	4798      	blx	r3
 8016422:	682b      	ldr	r3, [r5, #0]
 8016424:	4628      	mov	r0, r5
 8016426:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8016428:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801642c:	4718      	bx	r3
 801642e:	bf00      	nop
 8016430:	200039c8 	.word	0x200039c8

08016434 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8016434:	2300      	movs	r3, #0
 8016436:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 801643a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 801643e:	461a      	mov	r2, r3
 8016440:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016442:	461c      	mov	r4, r3
 8016444:	461d      	mov	r5, r3
 8016446:	459c      	cmp	ip, r3
 8016448:	dd1a      	ble.n	8016480 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 801644a:	18c6      	adds	r6, r0, r3
 801644c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 8016450:	b16e      	cbz	r6, 801646e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8016452:	429a      	cmp	r2, r3
 8016454:	d008      	beq.n	8016468 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8016456:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 801645a:	fa1f fe82 	uxth.w	lr, r2
 801645e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8016462:	1887      	adds	r7, r0, r2
 8016464:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8016468:	3201      	adds	r2, #1
 801646a:	3301      	adds	r3, #1
 801646c:	e7eb      	b.n	8016446 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801646e:	4299      	cmp	r1, r3
 8016470:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8016474:	bfa8      	it	ge
 8016476:	3501      	addge	r5, #1
 8016478:	429e      	cmp	r6, r3
 801647a:	bfc8      	it	gt
 801647c:	3401      	addgt	r4, #1
 801647e:	e7f4      	b.n	801646a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8016480:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8016484:	1b49      	subs	r1, r1, r5
 8016486:	1b1b      	subs	r3, r3, r4
 8016488:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801648c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8016490:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8016494:	4293      	cmp	r3, r2
 8016496:	dd03      	ble.n	80164a0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8016498:	3b01      	subs	r3, #1
 801649a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801649e:	e7f7      	b.n	8016490 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 80164a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

080164a4 <_ZN8touchgfx11Application15handleTickEventEv>:
 80164a4:	b570      	push	{r4, r5, r6, lr}
 80164a6:	4d16      	ldr	r5, [pc, #88]	@ (8016500 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 80164a8:	4604      	mov	r4, r0
 80164aa:	6828      	ldr	r0, [r5, #0]
 80164ac:	b140      	cbz	r0, 80164c0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80164ae:	7a03      	ldrb	r3, [r0, #8]
 80164b0:	b933      	cbnz	r3, 80164c0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 80164b2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80164b6:	6803      	ldr	r3, [r0, #0]
 80164b8:	689b      	ldr	r3, [r3, #8]
 80164ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80164be:	4718      	bx	r3
 80164c0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 80164c4:	4e0f      	ldr	r6, [pc, #60]	@ (8016504 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80164c6:	b973      	cbnz	r3, 80164e6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80164c8:	b168      	cbz	r0, 80164e6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80164ca:	7a03      	ldrb	r3, [r0, #8]
 80164cc:	b15b      	cbz	r3, 80164e6 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80164ce:	6830      	ldr	r0, [r6, #0]
 80164d0:	b110      	cbz	r0, 80164d8 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80164d2:	6803      	ldr	r3, [r0, #0]
 80164d4:	691b      	ldr	r3, [r3, #16]
 80164d6:	4798      	blx	r3
 80164d8:	6828      	ldr	r0, [r5, #0]
 80164da:	6803      	ldr	r3, [r0, #0]
 80164dc:	68db      	ldr	r3, [r3, #12]
 80164de:	4798      	blx	r3
 80164e0:	2301      	movs	r3, #1
 80164e2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 80164e6:	3404      	adds	r4, #4
 80164e8:	4620      	mov	r0, r4
 80164ea:	f7ff ff45 	bl	8016378 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80164ee:	4620      	mov	r0, r4
 80164f0:	f7ff ffa0 	bl	8016434 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80164f4:	6830      	ldr	r0, [r6, #0]
 80164f6:	b110      	cbz	r0, 80164fe <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80164f8:	6803      	ldr	r3, [r0, #0]
 80164fa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80164fc:	e7dd      	b.n	80164ba <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80164fe:	bd70      	pop	{r4, r5, r6, pc}
 8016500:	200039cc 	.word	0x200039cc
 8016504:	200039c8 	.word	0x200039c8

08016508 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8016508:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801650a:	2300      	movs	r3, #0
 801650c:	4604      	mov	r4, r0
 801650e:	460d      	mov	r5, r1
 8016510:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 8016514:	4618      	mov	r0, r3
 8016516:	b29a      	uxth	r2, r3
 8016518:	4291      	cmp	r1, r2
 801651a:	d912      	bls.n	8016542 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
 801651c:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8016520:	18e6      	adds	r6, r4, r3
 8016522:	42af      	cmp	r7, r5
 8016524:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 8016528:	d105      	bne.n	8016536 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 801652a:	2aff      	cmp	r2, #255	@ 0xff
 801652c:	d002      	beq.n	8016534 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 801652e:	3201      	adds	r2, #1
 8016530:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 8016534:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016536:	2a00      	cmp	r2, #0
 8016538:	f103 0301 	add.w	r3, r3, #1
 801653c:	bf08      	it	eq
 801653e:	2001      	moveq	r0, #1
 8016540:	e7e9      	b.n	8016516 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8016542:	b120      	cbz	r0, 801654e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 8016544:	2920      	cmp	r1, #32
 8016546:	d102      	bne.n	801654e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 8016548:	4620      	mov	r0, r4
 801654a:	f7ff ff73 	bl	8016434 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801654e:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 8016552:	2b1f      	cmp	r3, #31
 8016554:	d8ee      	bhi.n	8016534 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8016556:	18e2      	adds	r2, r4, r3
 8016558:	2101      	movs	r1, #1
 801655a:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 801655e:	185a      	adds	r2, r3, r1
 8016560:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 8016564:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8016568:	e7e4      	b.n	8016534 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

0801656a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801656a:	4603      	mov	r3, r0
 801656c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 8016570:	2200      	movs	r2, #0
 8016572:	801a      	strh	r2, [r3, #0]
 8016574:	3308      	adds	r3, #8
 8016576:	f823 2c06 	strh.w	r2, [r3, #-6]
 801657a:	f823 2c04 	strh.w	r2, [r3, #-4]
 801657e:	f823 2c02 	strh.w	r2, [r3, #-2]
 8016582:	428b      	cmp	r3, r1
 8016584:	d1f5      	bne.n	8016572 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8016586:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 801658a:	4770      	bx	lr

0801658c <_ZN8touchgfx11ApplicationC1Ev>:
 801658c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801658e:	4b1d      	ldr	r3, [pc, #116]	@ (8016604 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8016590:	4606      	mov	r6, r0
 8016592:	4604      	mov	r4, r0
 8016594:	2500      	movs	r5, #0
 8016596:	f846 3b04 	str.w	r3, [r6], #4
 801659a:	22a8      	movs	r2, #168	@ 0xa8
 801659c:	2100      	movs	r1, #0
 801659e:	4630      	mov	r0, r6
 80165a0:	f011 fc9f 	bl	8027ee2 <memset>
 80165a4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80165a8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80165ac:	4f16      	ldr	r7, [pc, #88]	@ (8016608 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80165ae:	f7ff ffdc 	bl	801656a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80165b2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80165b6:	f7ff ffd8 	bl	801656a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80165ba:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 80165be:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80165c2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80165c6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 80165ca:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 80165ce:	490f      	ldr	r1, [pc, #60]	@ (801660c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80165d0:	480f      	ldr	r0, [pc, #60]	@ (8016610 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 80165d2:	f010 fe33 	bl	802723c <CRC_Lock>
 80165d6:	4b0f      	ldr	r3, [pc, #60]	@ (8016614 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 80165d8:	b158      	cbz	r0, 80165f2 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 80165da:	801d      	strh	r5, [r3, #0]
 80165dc:	2300      	movs	r3, #0
 80165de:	4a0e      	ldr	r2, [pc, #56]	@ (8016618 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 80165e0:	4630      	mov	r0, r6
 80165e2:	6013      	str	r3, [r2, #0]
 80165e4:	4a0d      	ldr	r2, [pc, #52]	@ (801661c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 80165e6:	603b      	str	r3, [r7, #0]
 80165e8:	6013      	str	r3, [r2, #0]
 80165ea:	f7ff fefd 	bl	80163e8 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80165ee:	4620      	mov	r0, r4
 80165f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80165f2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80165f6:	2002      	movs	r0, #2
 80165f8:	801a      	strh	r2, [r3, #0]
 80165fa:	6038      	str	r0, [r7, #0]
 80165fc:	f001 fadc 	bl	8017bb8 <_ZN8touchgfx6Screen4drawEv>
 8016600:	e7ec      	b.n	80165dc <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8016602:	bf00      	nop
 8016604:	0802ac9c 	.word	0x0802ac9c
 8016608:	200039c8 	.word	0x200039c8
 801660c:	b5e8b5cd 	.word	0xb5e8b5cd
 8016610:	f407a5c2 	.word	0xf407a5c2
 8016614:	200001a0 	.word	0x200001a0
 8016618:	200039d8 	.word	0x200039d8
 801661c:	200039cc 	.word	0x200039cc

08016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8016620:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8016624:	3b01      	subs	r3, #1
 8016626:	b29b      	uxth	r3, r3
 8016628:	428b      	cmp	r3, r1
 801662a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 801662e:	b510      	push	{r4, lr}
 8016630:	d908      	bls.n	8016644 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8016632:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8016636:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801663a:	681a      	ldr	r2, [r3, #0]
 801663c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8016640:	685a      	ldr	r2, [r3, #4]
 8016642:	6062      	str	r2, [r4, #4]
 8016644:	bd10      	pop	{r4, pc}
	...

08016648 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8016648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801664c:	b08f      	sub	sp, #60	@ 0x3c
 801664e:	4b8f      	ldr	r3, [pc, #572]	@ (801688c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8016650:	4683      	mov	fp, r0
 8016652:	ac0a      	add	r4, sp, #40	@ 0x28
 8016654:	e884 0006 	stmia.w	r4, {r1, r2}
 8016658:	f9b3 2000 	ldrsh.w	r2, [r3]
 801665c:	4620      	mov	r0, r4
 801665e:	4b8c      	ldr	r3, [pc, #560]	@ (8016890 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8016660:	f9b3 1000 	ldrsh.w	r1, [r3]
 8016664:	f7ff fd9e 	bl	80161a4 <_ZN8touchgfx4Rect10restrictToEss>
 8016668:	4620      	mov	r0, r4
 801666a:	f7fb feaa 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801666e:	2800      	cmp	r0, #0
 8016670:	d16a      	bne.n	8016748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016672:	9403      	str	r4, [sp, #12]
 8016674:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8016678:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 801667c:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8016680:	9301      	str	r3, [sp, #4]
 8016682:	35a4      	adds	r5, #164	@ 0xa4
 8016684:	b15c      	cbz	r4, 801669e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8016686:	4629      	mov	r1, r5
 8016688:	9803      	ldr	r0, [sp, #12]
 801668a:	f7ff fddb 	bl	8016244 <_ZNK8touchgfx4Rect8includesERKS0_>
 801668e:	3c01      	subs	r4, #1
 8016690:	b118      	cbz	r0, 801669a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8016692:	b2a1      	uxth	r1, r4
 8016694:	9801      	ldr	r0, [sp, #4]
 8016696:	f7ff ffc3 	bl	8016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801669a:	3d08      	subs	r5, #8
 801669c:	e7f2      	b.n	8016684 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 801669e:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80166a2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80166a6:	f8cd a010 	str.w	sl, [sp, #16]
 80166aa:	9302      	str	r3, [sp, #8]
 80166ac:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80166b0:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80166b4:	9306      	str	r3, [sp, #24]
 80166b6:	445c      	add	r4, fp
 80166b8:	2500      	movs	r5, #0
 80166ba:	4626      	mov	r6, r4
 80166bc:	f8cd a014 	str.w	sl, [sp, #20]
 80166c0:	462f      	mov	r7, r5
 80166c2:	9b05      	ldr	r3, [sp, #20]
 80166c4:	2b00      	cmp	r3, #0
 80166c6:	d073      	beq.n	80167b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80166c8:	9903      	ldr	r1, [sp, #12]
 80166ca:	4630      	mov	r0, r6
 80166cc:	f7ff fd48 	bl	8016160 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80166d0:	b350      	cbz	r0, 8016728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80166d2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 80166d6:	f9b6 c000 	ldrsh.w	ip, [r6]
 80166da:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 80166de:	45e6      	cmp	lr, ip
 80166e0:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 80166e4:	db33      	blt.n	801674e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80166e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80166ea:	88b3      	ldrh	r3, [r6, #4]
 80166ec:	4472      	add	r2, lr
 80166ee:	4463      	add	r3, ip
 80166f0:	b212      	sxth	r2, r2
 80166f2:	b21b      	sxth	r3, r3
 80166f4:	429a      	cmp	r2, r3
 80166f6:	dc2a      	bgt.n	801674e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80166f8:	fa1f f289 	uxth.w	r2, r9
 80166fc:	88f3      	ldrh	r3, [r6, #6]
 80166fe:	45c8      	cmp	r8, r9
 8016700:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8016704:	4413      	add	r3, r2
 8016706:	fa1f fc88 	uxth.w	ip, r8
 801670a:	b29b      	uxth	r3, r3
 801670c:	fa0f fe83 	sxth.w	lr, r3
 8016710:	db0f      	blt.n	8016732 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8016712:	eba3 030c 	sub.w	r3, r3, ip
 8016716:	1ac9      	subs	r1, r1, r3
 8016718:	b209      	sxth	r1, r1
 801671a:	2900      	cmp	r1, #0
 801671c:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8016720:	dd12      	ble.n	8016748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016722:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8016726:	4605      	mov	r5, r0
 8016728:	9b05      	ldr	r3, [sp, #20]
 801672a:	3e08      	subs	r6, #8
 801672c:	3b01      	subs	r3, #1
 801672e:	9305      	str	r3, [sp, #20]
 8016730:	e7c7      	b.n	80166c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8016732:	4461      	add	r1, ip
 8016734:	b209      	sxth	r1, r1
 8016736:	4571      	cmp	r1, lr
 8016738:	dc38      	bgt.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801673a:	eba2 020c 	sub.w	r2, r2, ip
 801673e:	b212      	sxth	r2, r2
 8016740:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8016744:	2a00      	cmp	r2, #0
 8016746:	dcee      	bgt.n	8016726 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016748:	b00f      	add	sp, #60	@ 0x3c
 801674a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801674e:	45c8      	cmp	r8, r9
 8016750:	db2c      	blt.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016752:	88f3      	ldrh	r3, [r6, #6]
 8016754:	4499      	add	r9, r3
 8016756:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 801675a:	4498      	add	r8, r3
 801675c:	fa0f f989 	sxth.w	r9, r9
 8016760:	fa0f f888 	sxth.w	r8, r8
 8016764:	45c1      	cmp	r9, r8
 8016766:	db21      	blt.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8016768:	fa1f f28c 	uxth.w	r2, ip
 801676c:	88b3      	ldrh	r3, [r6, #4]
 801676e:	45e6      	cmp	lr, ip
 8016770:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8016774:	4413      	add	r3, r2
 8016776:	fa1f f88e 	uxth.w	r8, lr
 801677a:	b29b      	uxth	r3, r3
 801677c:	fa0f f983 	sxth.w	r9, r3
 8016780:	db0a      	blt.n	8016798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8016782:	eba3 0308 	sub.w	r3, r3, r8
 8016786:	1ac9      	subs	r1, r1, r3
 8016788:	b209      	sxth	r1, r1
 801678a:	2900      	cmp	r1, #0
 801678c:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8016790:	ddda      	ble.n	8016748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016792:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8016796:	e7c6      	b.n	8016726 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8016798:	4441      	add	r1, r8
 801679a:	b209      	sxth	r1, r1
 801679c:	4549      	cmp	r1, r9
 801679e:	dc05      	bgt.n	80167ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80167a0:	eba2 0208 	sub.w	r2, r2, r8
 80167a4:	b212      	sxth	r2, r2
 80167a6:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80167aa:	e7cb      	b.n	8016744 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80167ac:	4607      	mov	r7, r0
 80167ae:	e7bb      	b.n	8016728 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80167b0:	2d00      	cmp	r5, #0
 80167b2:	d181      	bne.n	80166b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80167b4:	2f00      	cmp	r7, #0
 80167b6:	f000 81dd 	beq.w	8016b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80167ba:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80167be:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80167c2:	b2b3      	uxth	r3, r6
 80167c4:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80167c8:	9305      	str	r3, [sp, #20]
 80167ca:	9a05      	ldr	r2, [sp, #20]
 80167cc:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80167d0:	4413      	add	r3, r2
 80167d2:	b2ba      	uxth	r2, r7
 80167d4:	4492      	add	sl, r2
 80167d6:	b29b      	uxth	r3, r3
 80167d8:	fa1f fa8a 	uxth.w	sl, sl
 80167dc:	fa0f f883 	sxth.w	r8, r3
 80167e0:	fa0f f98a 	sxth.w	r9, sl
 80167e4:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80167e8:	9b04      	ldr	r3, [sp, #16]
 80167ea:	2b00      	cmp	r3, #0
 80167ec:	d052      	beq.n	8016894 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80167ee:	9903      	ldr	r1, [sp, #12]
 80167f0:	4620      	mov	r0, r4
 80167f2:	f7ff fcb5 	bl	8016160 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80167f6:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80167fa:	b1c0      	cbz	r0, 801682e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80167fc:	f9b4 e000 	ldrsh.w	lr, [r4]
 8016800:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8016804:	4576      	cmp	r6, lr
 8016806:	dc22      	bgt.n	801684e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016808:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801680c:	44f4      	add	ip, lr
 801680e:	fa0f fc8c 	sxth.w	ip, ip
 8016812:	45e0      	cmp	r8, ip
 8016814:	db1b      	blt.n	801684e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8016816:	428f      	cmp	r7, r1
 8016818:	fa1f fc81 	uxth.w	ip, r1
 801681c:	88e1      	ldrh	r1, [r4, #6]
 801681e:	dc0d      	bgt.n	801683c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8016820:	ebaa 0c0c 	sub.w	ip, sl, ip
 8016824:	f8a4 9002 	strh.w	r9, [r4, #2]
 8016828:	eba1 010c 	sub.w	r1, r1, ip
 801682c:	80e1      	strh	r1, [r4, #6]
 801682e:	4628      	mov	r0, r5
 8016830:	9904      	ldr	r1, [sp, #16]
 8016832:	3c08      	subs	r4, #8
 8016834:	4605      	mov	r5, r0
 8016836:	3901      	subs	r1, #1
 8016838:	9104      	str	r1, [sp, #16]
 801683a:	e7d3      	b.n	80167e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 801683c:	4461      	add	r1, ip
 801683e:	b209      	sxth	r1, r1
 8016840:	4549      	cmp	r1, r9
 8016842:	dcf5      	bgt.n	8016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016844:	eba2 0c0c 	sub.w	ip, r2, ip
 8016848:	f8a4 c006 	strh.w	ip, [r4, #6]
 801684c:	e7ef      	b.n	801682e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801684e:	428f      	cmp	r7, r1
 8016850:	dcee      	bgt.n	8016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016852:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8016856:	4461      	add	r1, ip
 8016858:	b209      	sxth	r1, r1
 801685a:	4589      	cmp	r9, r1
 801685c:	dbe8      	blt.n	8016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801685e:	4576      	cmp	r6, lr
 8016860:	fa1f fc8e 	uxth.w	ip, lr
 8016864:	88a1      	ldrh	r1, [r4, #4]
 8016866:	dc07      	bgt.n	8016878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8016868:	eba3 0c0c 	sub.w	ip, r3, ip
 801686c:	f8a4 8000 	strh.w	r8, [r4]
 8016870:	eba1 010c 	sub.w	r1, r1, ip
 8016874:	80a1      	strh	r1, [r4, #4]
 8016876:	e7da      	b.n	801682e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8016878:	4461      	add	r1, ip
 801687a:	b209      	sxth	r1, r1
 801687c:	4588      	cmp	r8, r1
 801687e:	dbd7      	blt.n	8016830 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8016880:	9905      	ldr	r1, [sp, #20]
 8016882:	eba1 0c0c 	sub.w	ip, r1, ip
 8016886:	f8a4 c004 	strh.w	ip, [r4, #4]
 801688a:	e7d0      	b.n	801682e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801688c:	2000397a 	.word	0x2000397a
 8016890:	20003978 	.word	0x20003978
 8016894:	2d00      	cmp	r5, #0
 8016896:	f000 816d 	beq.w	8016b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801689a:	9b06      	ldr	r3, [sp, #24]
 801689c:	445b      	add	r3, fp
 801689e:	461c      	mov	r4, r3
 80168a0:	9b02      	ldr	r3, [sp, #8]
 80168a2:	3301      	adds	r3, #1
 80168a4:	f000 8166 	beq.w	8016b74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80168a8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80168ac:	9803      	ldr	r0, [sp, #12]
 80168ae:	4629      	mov	r1, r5
 80168b0:	f7ff fcc8 	bl	8016244 <_ZNK8touchgfx4Rect8includesERKS0_>
 80168b4:	b120      	cbz	r0, 80168c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80168b6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80168ba:	9801      	ldr	r0, [sp, #4]
 80168bc:	f7ff feb0 	bl	8016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80168c0:	9903      	ldr	r1, [sp, #12]
 80168c2:	4628      	mov	r0, r5
 80168c4:	f7ff fc4c 	bl	8016160 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80168c8:	2800      	cmp	r0, #0
 80168ca:	f000 809c 	beq.w	8016a06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80168ce:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 80168d2:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80168d6:	fa1f f189 	uxth.w	r1, r9
 80168da:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 80168de:	9309      	str	r3, [sp, #36]	@ 0x24
 80168e0:	eb01 0c03 	add.w	ip, r1, r3
 80168e4:	b283      	uxth	r3, r0
 80168e6:	4548      	cmp	r0, r9
 80168e8:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 80168ec:	fa1f fa8c 	uxth.w	sl, ip
 80168f0:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 80168f4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 80168f8:	eb03 050c 	add.w	r5, r3, ip
 80168fc:	b2ad      	uxth	r5, r5
 80168fe:	9505      	str	r5, [sp, #20]
 8016900:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8016904:	9504      	str	r5, [sp, #16]
 8016906:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 801690a:	f340 8099 	ble.w	8016a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 801690e:	1a5b      	subs	r3, r3, r1
 8016910:	4596      	cmp	lr, r2
 8016912:	fa0f f08a 	sxth.w	r0, sl
 8016916:	b29b      	uxth	r3, r3
 8016918:	b21e      	sxth	r6, r3
 801691a:	dd2e      	ble.n	801697a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 801691c:	9f02      	ldr	r7, [sp, #8]
 801691e:	fa1f fe8e 	uxth.w	lr, lr
 8016922:	b292      	uxth	r2, r2
 8016924:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8016928:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801692c:	9f04      	ldr	r7, [sp, #16]
 801692e:	ebae 0102 	sub.w	r1, lr, r2
 8016932:	44a6      	add	lr, r4
 8016934:	1a3f      	subs	r7, r7, r0
 8016936:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 801693a:	b289      	uxth	r1, r1
 801693c:	4402      	add	r2, r0
 801693e:	fa0f fe8e 	sxth.w	lr, lr
 8016942:	b20d      	sxth	r5, r1
 8016944:	b212      	sxth	r2, r2
 8016946:	436f      	muls	r7, r5
 8016948:	ebae 0202 	sub.w	r2, lr, r2
 801694c:	4372      	muls	r2, r6
 801694e:	4297      	cmp	r7, r2
 8016950:	db09      	blt.n	8016966 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8016952:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8016956:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 801695a:	449c      	add	ip, r3
 801695c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8016960:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8016964:	e686      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016966:	4421      	add	r1, r4
 8016968:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 801696c:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8016970:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8016974:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8016978:	e67c      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801697a:	9f04      	ldr	r7, [sp, #16]
 801697c:	42b8      	cmp	r0, r7
 801697e:	da27      	bge.n	80169d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8016980:	9902      	ldr	r1, [sp, #8]
 8016982:	1a3f      	subs	r7, r7, r0
 8016984:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8016988:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801698c:	eb05 010e 	add.w	r1, r5, lr
 8016990:	fa1f f881 	uxth.w	r8, r1
 8016994:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8016998:	4411      	add	r1, r2
 801699a:	fa0f f988 	sxth.w	r9, r8
 801699e:	eba2 020e 	sub.w	r2, r2, lr
 80169a2:	eba1 0108 	sub.w	r1, r1, r8
 80169a6:	4372      	muls	r2, r6
 80169a8:	b289      	uxth	r1, r1
 80169aa:	fa0f f881 	sxth.w	r8, r1
 80169ae:	fb08 f707 	mul.w	r7, r8, r7
 80169b2:	42ba      	cmp	r2, r7
 80169b4:	dc06      	bgt.n	80169c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80169b6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80169ba:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80169be:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80169c2:	e7ca      	b.n	801695a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80169c4:	4429      	add	r1, r5
 80169c6:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 80169ca:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80169ce:	e651      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80169d0:	9805      	ldr	r0, [sp, #20]
 80169d2:	2d06      	cmp	r5, #6
 80169d4:	ebaa 0000 	sub.w	r0, sl, r0
 80169d8:	b280      	uxth	r0, r0
 80169da:	fa0f fe80 	sxth.w	lr, r0
 80169de:	d817      	bhi.n	8016a10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80169e0:	9b04      	ldr	r3, [sp, #16]
 80169e2:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 80169e6:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 80169ea:	1c6b      	adds	r3, r5, #1
 80169ec:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 80169f0:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 80169f4:	9b01      	ldr	r3, [sp, #4]
 80169f6:	9801      	ldr	r0, [sp, #4]
 80169f8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80169fc:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8016a00:	805a      	strh	r2, [r3, #2]
 8016a02:	809e      	strh	r6, [r3, #4]
 8016a04:	80d9      	strh	r1, [r3, #6]
 8016a06:	9b02      	ldr	r3, [sp, #8]
 8016a08:	3c08      	subs	r4, #8
 8016a0a:	3b01      	subs	r3, #1
 8016a0c:	9302      	str	r3, [sp, #8]
 8016a0e:	e747      	b.n	80168a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8016a10:	9a02      	ldr	r2, [sp, #8]
 8016a12:	45b6      	cmp	lr, r6
 8016a14:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016a18:	db0d      	blt.n	8016a36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8016a1a:	449c      	add	ip, r3
 8016a1c:	445a      	add	r2, fp
 8016a1e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8016a22:	fa1f fc8c 	uxth.w	ip, ip
 8016a26:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8016a2a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8016a2e:	448c      	add	ip, r1
 8016a30:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8016a34:	e61e      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016a36:	445a      	add	r2, fp
 8016a38:	4484      	add	ip, r0
 8016a3a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8016a3e:	e78f      	b.n	8016960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016a40:	fa1f f18e 	uxth.w	r1, lr
 8016a44:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8016a48:	b293      	uxth	r3, r2
 8016a4a:	4596      	cmp	lr, r2
 8016a4c:	eb01 0806 	add.w	r8, r1, r6
 8016a50:	9306      	str	r3, [sp, #24]
 8016a52:	fa1f f888 	uxth.w	r8, r8
 8016a56:	9f06      	ldr	r7, [sp, #24]
 8016a58:	fa0f f388 	sxth.w	r3, r8
 8016a5c:	9307      	str	r3, [sp, #28]
 8016a5e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8016a62:	443b      	add	r3, r7
 8016a64:	b29b      	uxth	r3, r3
 8016a66:	9308      	str	r3, [sp, #32]
 8016a68:	da24      	bge.n	8016ab4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8016a6a:	9905      	ldr	r1, [sp, #20]
 8016a6c:	eba3 0308 	sub.w	r3, r3, r8
 8016a70:	eba2 020e 	sub.w	r2, r2, lr
 8016a74:	eba9 0000 	sub.w	r0, r9, r0
 8016a78:	ebaa 0401 	sub.w	r4, sl, r1
 8016a7c:	b29b      	uxth	r3, r3
 8016a7e:	b2a4      	uxth	r4, r4
 8016a80:	b219      	sxth	r1, r3
 8016a82:	b225      	sxth	r5, r4
 8016a84:	4348      	muls	r0, r1
 8016a86:	436a      	muls	r2, r5
 8016a88:	4282      	cmp	r2, r0
 8016a8a:	9a02      	ldr	r2, [sp, #8]
 8016a8c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8016a90:	445a      	add	r2, fp
 8016a92:	dc06      	bgt.n	8016aa2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8016a94:	9b07      	ldr	r3, [sp, #28]
 8016a96:	44a4      	add	ip, r4
 8016a98:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8016a9c:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8016aa0:	e75e      	b.n	8016960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016aa2:	9904      	ldr	r1, [sp, #16]
 8016aa4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8016aa8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8016aac:	4433      	add	r3, r6
 8016aae:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8016ab2:	e5df      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016ab4:	9f06      	ldr	r7, [sp, #24]
 8016ab6:	9b04      	ldr	r3, [sp, #16]
 8016ab8:	1bc9      	subs	r1, r1, r7
 8016aba:	fa0f f78a 	sxth.w	r7, sl
 8016abe:	b289      	uxth	r1, r1
 8016ac0:	429f      	cmp	r7, r3
 8016ac2:	fa0f fe81 	sxth.w	lr, r1
 8016ac6:	dd23      	ble.n	8016b10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8016ac8:	9a05      	ldr	r2, [sp, #20]
 8016aca:	eba9 0000 	sub.w	r0, r9, r0
 8016ace:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8016ad2:	ebaa 0202 	sub.w	r2, sl, r2
 8016ad6:	9d07      	ldr	r5, [sp, #28]
 8016ad8:	fb0e f000 	mul.w	r0, lr, r0
 8016adc:	b292      	uxth	r2, r2
 8016ade:	eba5 0a03 	sub.w	sl, r5, r3
 8016ae2:	9b02      	ldr	r3, [sp, #8]
 8016ae4:	b214      	sxth	r4, r2
 8016ae6:	00db      	lsls	r3, r3, #3
 8016ae8:	fb04 fa0a 	mul.w	sl, r4, sl
 8016aec:	445b      	add	r3, fp
 8016aee:	4550      	cmp	r0, sl
 8016af0:	db03      	blt.n	8016afa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8016af2:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8016af6:	4494      	add	ip, r2
 8016af8:	e732      	b.n	8016960 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8016afa:	9a04      	ldr	r2, [sp, #16]
 8016afc:	4431      	add	r1, r6
 8016afe:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8016b02:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8016b06:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8016b0a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8016b0e:	e75c      	b.n	80169ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8016b10:	9b08      	ldr	r3, [sp, #32]
 8016b12:	2d06      	cmp	r5, #6
 8016b14:	eba3 0308 	sub.w	r3, r3, r8
 8016b18:	b29b      	uxth	r3, r3
 8016b1a:	b218      	sxth	r0, r3
 8016b1c:	d813      	bhi.n	8016b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8016b1e:	9b07      	ldr	r3, [sp, #28]
 8016b20:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8016b24:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8016b28:	1c6b      	adds	r3, r5, #1
 8016b2a:	9901      	ldr	r1, [sp, #4]
 8016b2c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8016b30:	9b01      	ldr	r3, [sp, #4]
 8016b32:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8016b36:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8016b3a:	805a      	strh	r2, [r3, #2]
 8016b3c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016b3e:	f8a3 e006 	strh.w	lr, [r3, #6]
 8016b42:	809a      	strh	r2, [r3, #4]
 8016b44:	e75f      	b.n	8016a06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8016b46:	9c02      	ldr	r4, [sp, #8]
 8016b48:	4570      	cmp	r0, lr
 8016b4a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8016b4e:	db0d      	blt.n	8016b6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8016b50:	4431      	add	r1, r6
 8016b52:	9b06      	ldr	r3, [sp, #24]
 8016b54:	445c      	add	r4, fp
 8016b56:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8016b5a:	b289      	uxth	r1, r1
 8016b5c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8016b60:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8016b64:	4419      	add	r1, r3
 8016b66:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8016b6a:	e583      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016b6c:	445c      	add	r4, fp
 8016b6e:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8016b72:	e79b      	b.n	8016aac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8016b74:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8016b78:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8016b7c:	1e65      	subs	r5, r4, #1
 8016b7e:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8016b82:	b2ad      	uxth	r5, r5
 8016b84:	42b5      	cmp	r5, r6
 8016b86:	d044      	beq.n	8016c12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8016b88:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8016b8c:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8016b90:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 8016b94:	4282      	cmp	r2, r0
 8016b96:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8016b9a:	d11f      	bne.n	8016bdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016b9c:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8016ba0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8016ba4:	459c      	cmp	ip, r3
 8016ba6:	d119      	bne.n	8016bdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8016ba8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8016bac:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8016bb0:	19d8      	adds	r0, r3, r7
 8016bb2:	b200      	sxth	r0, r0
 8016bb4:	4288      	cmp	r0, r1
 8016bb6:	d109      	bne.n	8016bcc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8016bb8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8016bbc:	4413      	add	r3, r2
 8016bbe:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 8016bc2:	4629      	mov	r1, r5
 8016bc4:	9801      	ldr	r0, [sp, #4]
 8016bc6:	f7ff fd2b 	bl	8016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016bca:	e003      	b.n	8016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016bcc:	4411      	add	r1, r2
 8016bce:	b209      	sxth	r1, r1
 8016bd0:	42b9      	cmp	r1, r7
 8016bd2:	d0f3      	beq.n	8016bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8016bd4:	3d01      	subs	r5, #1
 8016bd6:	3c08      	subs	r4, #8
 8016bd8:	b2ad      	uxth	r5, r5
 8016bda:	e7d3      	b.n	8016b84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8016bdc:	42b9      	cmp	r1, r7
 8016bde:	d1f9      	bne.n	8016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016be0:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8016be4:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8016be8:	4299      	cmp	r1, r3
 8016bea:	d1f3      	bne.n	8016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016bec:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8016bf0:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8016bf4:	181f      	adds	r7, r3, r0
 8016bf6:	b23f      	sxth	r7, r7
 8016bf8:	42ba      	cmp	r2, r7
 8016bfa:	d105      	bne.n	8016c08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8016bfc:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8016c00:	440b      	add	r3, r1
 8016c02:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8016c06:	e7dc      	b.n	8016bc2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8016c08:	440a      	add	r2, r1
 8016c0a:	b212      	sxth	r2, r2
 8016c0c:	4290      	cmp	r0, r2
 8016c0e:	d1e1      	bne.n	8016bd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8016c10:	e7f6      	b.n	8016c00 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8016c12:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8016c16:	2e07      	cmp	r6, #7
 8016c18:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8016c1c:	d812      	bhi.n	8016c44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8016c1e:	1c75      	adds	r5, r6, #1
 8016c20:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8016c24:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8016c28:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8016c2c:	9d01      	ldr	r5, [sp, #4]
 8016c2e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8016c32:	442c      	add	r4, r5
 8016c34:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8016c38:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8016c3c:	8061      	strh	r1, [r4, #2]
 8016c3e:	80a2      	strh	r2, [r4, #4]
 8016c40:	80e3      	strh	r3, [r4, #6]
 8016c42:	e581      	b.n	8016748 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8016c44:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8016c48:	3e01      	subs	r6, #1
 8016c4a:	445c      	add	r4, fp
 8016c4c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8016c50:	f04f 37ff 	mov.w	r7, #4294967295
 8016c54:	2500      	movs	r5, #0
 8016c56:	9305      	str	r3, [sp, #20]
 8016c58:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8016c5c:	1e72      	subs	r2, r6, #1
 8016c5e:	9302      	str	r3, [sp, #8]
 8016c60:	4691      	mov	r9, r2
 8016c62:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8016c66:	9304      	str	r3, [sp, #16]
 8016c68:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8016c6c:	f1b9 3fff 	cmp.w	r9, #4294967295
 8016c70:	6818      	ldr	r0, [r3, #0]
 8016c72:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8016c76:	9207      	str	r2, [sp, #28]
 8016c78:	bf16      	itet	ne
 8016c7a:	9905      	ldrne	r1, [sp, #20]
 8016c7c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8016c80:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8016c84:	9306      	str	r3, [sp, #24]
 8016c86:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8016c8a:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8016c8e:	fb18 f801 	smulbb	r8, r8, r1
 8016c92:	6859      	ldr	r1, [r3, #4]
 8016c94:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016c98:	4671      	mov	r1, lr
 8016c9a:	a80c      	add	r0, sp, #48	@ 0x30
 8016c9c:	f7ff faf8 	bl	8016290 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016ca0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8016ca4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8016ca8:	f04f 0c08 	mov.w	ip, #8
 8016cac:	9b04      	ldr	r3, [sp, #16]
 8016cae:	9a02      	ldr	r2, [sp, #8]
 8016cb0:	fb10 f001 	smulbb	r0, r0, r1
 8016cb4:	fb02 8803 	mla	r8, r2, r3, r8
 8016cb8:	eba0 0108 	sub.w	r1, r0, r8
 8016cbc:	fb90 f0fc 	sdiv	r0, r0, ip
 8016cc0:	4288      	cmp	r0, r1
 8016cc2:	dc20      	bgt.n	8016d06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8016cc4:	4551      	cmp	r1, sl
 8016cc6:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8016cca:	da03      	bge.n	8016cd4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8016ccc:	b1d9      	cbz	r1, 8016d06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8016cce:	468a      	mov	sl, r1
 8016cd0:	464f      	mov	r7, r9
 8016cd2:	4635      	mov	r5, r6
 8016cd4:	f109 39ff 	add.w	r9, r9, #4294967295
 8016cd8:	f119 0f02 	cmn.w	r9, #2
 8016cdc:	d1c6      	bne.n	8016c6c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8016cde:	4616      	mov	r6, r2
 8016ce0:	3201      	adds	r2, #1
 8016ce2:	f1a4 0408 	sub.w	r4, r4, #8
 8016ce6:	d1b7      	bne.n	8016c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8016ce8:	9b01      	ldr	r3, [sp, #4]
 8016cea:	b2ac      	uxth	r4, r5
 8016cec:	00ed      	lsls	r5, r5, #3
 8016cee:	1958      	adds	r0, r3, r5
 8016cf0:	1c7b      	adds	r3, r7, #1
 8016cf2:	d10b      	bne.n	8016d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 8016cf4:	4601      	mov	r1, r0
 8016cf6:	9803      	ldr	r0, [sp, #12]
 8016cf8:	f7ff faca 	bl	8016290 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016cfc:	4621      	mov	r1, r4
 8016cfe:	9801      	ldr	r0, [sp, #4]
 8016d00:	f7ff fc8e 	bl	8016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8016d04:	e4b6      	b.n	8016674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8016d06:	464f      	mov	r7, r9
 8016d08:	4635      	mov	r5, r6
 8016d0a:	e7ed      	b.n	8016ce8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8016d0c:	9b01      	ldr	r3, [sp, #4]
 8016d0e:	00ff      	lsls	r7, r7, #3
 8016d10:	445d      	add	r5, fp
 8016d12:	19d9      	adds	r1, r3, r7
 8016d14:	445f      	add	r7, fp
 8016d16:	f7ff fabb 	bl	8016290 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8016d1a:	9b03      	ldr	r3, [sp, #12]
 8016d1c:	cb03      	ldmia	r3!, {r0, r1}
 8016d1e:	9b03      	ldr	r3, [sp, #12]
 8016d20:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8016d24:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8016d28:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8016d2c:	6869      	ldr	r1, [r5, #4]
 8016d2e:	c303      	stmia	r3!, {r0, r1}
 8016d30:	e7e4      	b.n	8016cfc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 8016d32:	bf00      	nop

08016d34 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8016d34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d38:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8016d3c:	b09b      	sub	sp, #108	@ 0x6c
 8016d3e:	4604      	mov	r4, r0
 8016d40:	4630      	mov	r0, r6
 8016d42:	f7fb fb3e 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016d46:	4605      	mov	r5, r0
 8016d48:	b948      	cbnz	r0, 8016d5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8016d4a:	6823      	ldr	r3, [r4, #0]
 8016d4c:	4620      	mov	r0, r4
 8016d4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016d50:	e896 0006 	ldmia.w	r6, {r1, r2}
 8016d54:	4798      	blx	r3
 8016d56:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8016d5a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8016d5e:	4bc5      	ldr	r3, [pc, #788]	@ (8017074 <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 8016d60:	681b      	ldr	r3, [r3, #0]
 8016d62:	2b00      	cmp	r3, #0
 8016d64:	d03f      	beq.n	8016de6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016d66:	4dc4      	ldr	r5, [pc, #784]	@ (8017078 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8016d68:	4628      	mov	r0, r5
 8016d6a:	f7fb fb2a 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016d6e:	4606      	mov	r6, r0
 8016d70:	2800      	cmp	r0, #0
 8016d72:	d138      	bne.n	8016de6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8016d74:	4628      	mov	r0, r5
 8016d76:	f7ff f929 	bl	8015fcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8016d7a:	6823      	ldr	r3, [r4, #0]
 8016d7c:	6829      	ldr	r1, [r5, #0]
 8016d7e:	4620      	mov	r0, r4
 8016d80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8016d82:	686a      	ldr	r2, [r5, #4]
 8016d84:	4798      	blx	r3
 8016d86:	802e      	strh	r6, [r5, #0]
 8016d88:	806e      	strh	r6, [r5, #2]
 8016d8a:	80ae      	strh	r6, [r5, #4]
 8016d8c:	80ee      	strh	r6, [r5, #6]
 8016d8e:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8016d92:	4dba      	ldr	r5, [pc, #744]	@ (801707c <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8016d94:	4640      	mov	r0, r8
 8016d96:	f7ff fbe8 	bl	801656a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8016d9a:	882e      	ldrh	r6, [r5, #0]
 8016d9c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8016da0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8016da4:	4633      	mov	r3, r6
 8016da6:	42bb      	cmp	r3, r7
 8016da8:	d224      	bcs.n	8016df4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016daa:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8016dae:	2907      	cmp	r1, #7
 8016db0:	d816      	bhi.n	8016de0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8016db2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8016db6:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8016dba:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8016dbe:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8016dc2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8016dc6:	1c4a      	adds	r2, r1, #1
 8016dc8:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8016dcc:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8016dd0:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8016dd4:	f8a2 a002 	strh.w	sl, [r2, #2]
 8016dd8:	f8a2 e004 	strh.w	lr, [r2, #4]
 8016ddc:	f8a2 c006 	strh.w	ip, [r2, #6]
 8016de0:	3301      	adds	r3, #1
 8016de2:	b29b      	uxth	r3, r3
 8016de4:	e7df      	b.n	8016da6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8016de6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8016dea:	2b00      	cmp	r3, #0
 8016dec:	d1cf      	bne.n	8016d8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8016dee:	b01b      	add	sp, #108	@ 0x6c
 8016df0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016df4:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8016df8:	42b3      	cmp	r3, r6
 8016dfa:	d90c      	bls.n	8016e16 <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8016dfc:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8016e00:	6822      	ldr	r2, [r4, #0]
 8016e02:	3601      	adds	r6, #1
 8016e04:	4620      	mov	r0, r4
 8016e06:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8016e08:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8016e0c:	b2b6      	uxth	r6, r6
 8016e0e:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8016e12:	47b8      	blx	r7
 8016e14:	e7ee      	b.n	8016df4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8016e16:	4a9a      	ldr	r2, [pc, #616]	@ (8017080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016e18:	6813      	ldr	r3, [r2, #0]
 8016e1a:	4691      	mov	r9, r2
 8016e1c:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8016e20:	2b01      	cmp	r3, #1
 8016e22:	f040 80e0 	bne.w	8016fe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 8016e26:	8829      	ldrh	r1, [r5, #0]
 8016e28:	2600      	movs	r6, #0
 8016e2a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8016e2e:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8016e32:	33ae      	adds	r3, #174	@ 0xae
 8016e34:	428f      	cmp	r7, r1
 8016e36:	f103 0308 	add.w	r3, r3, #8
 8016e3a:	dd0a      	ble.n	8016e52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8016e3c:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8016e40:	3101      	adds	r1, #1
 8016e42:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8016e46:	4402      	add	r2, r0
 8016e48:	b212      	sxth	r2, r2
 8016e4a:	4296      	cmp	r6, r2
 8016e4c:	bfb8      	it	lt
 8016e4e:	4616      	movlt	r6, r2
 8016e50:	e7f0      	b.n	8016e34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8016e52:	4b8c      	ldr	r3, [pc, #560]	@ (8017084 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8016e54:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 8017080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 8016e58:	881b      	ldrh	r3, [r3, #0]
 8016e5a:	2b0f      	cmp	r3, #15
 8016e5c:	bf8c      	ite	hi
 8016e5e:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8016e62:	f04f 0b01 	movls.w	fp, #1
 8016e66:	2300      	movs	r3, #0
 8016e68:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8016e6c:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8016e70:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8016e74:	4b82      	ldr	r3, [pc, #520]	@ (8017080 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8016e76:	4438      	add	r0, r7
 8016e78:	b207      	sxth	r7, r0
 8016e7a:	6818      	ldr	r0, [r3, #0]
 8016e7c:	42b7      	cmp	r7, r6
 8016e7e:	6803      	ldr	r3, [r0, #0]
 8016e80:	f280 8083 	bge.w	8016f8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 8016e84:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8016e88:	4798      	blx	r3
 8016e8a:	eb07 030b 	add.w	r3, r7, fp
 8016e8e:	4298      	cmp	r0, r3
 8016e90:	da07      	bge.n	8016ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016e92:	42b0      	cmp	r0, r6
 8016e94:	da05      	bge.n	8016ea2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8016e96:	4287      	cmp	r7, r0
 8016e98:	dd6c      	ble.n	8016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8016e9a:	2f00      	cmp	r7, #0
 8016e9c:	dd6a      	ble.n	8016f74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8016e9e:	4630      	mov	r0, r6
 8016ea0:	e004      	b.n	8016eac <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 8016ea2:	4287      	cmp	r7, r0
 8016ea4:	dcfb      	bgt.n	8016e9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 8016ea6:	42b0      	cmp	r0, r6
 8016ea8:	bfa8      	it	ge
 8016eaa:	4630      	movge	r0, r6
 8016eac:	4b76      	ldr	r3, [pc, #472]	@ (8017088 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8016eae:	1bc0      	subs	r0, r0, r7
 8016eb0:	2200      	movs	r2, #0
 8016eb2:	f8ad 7016 	strh.w	r7, [sp, #22]
 8016eb6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016eba:	882f      	ldrh	r7, [r5, #0]
 8016ebc:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016ec0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8016ec4:	f8ad 001a 	strh.w	r0, [sp, #26]
 8016ec8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8016ecc:	42bb      	cmp	r3, r7
 8016ece:	d9cd      	bls.n	8016e6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8016ed0:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8016ed4:	ab07      	add	r3, sp, #28
 8016ed6:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8016eda:	6851      	ldr	r1, [r2, #4]
 8016edc:	c303      	stmia	r3!, {r0, r1}
 8016ede:	a905      	add	r1, sp, #20
 8016ee0:	a807      	add	r0, sp, #28
 8016ee2:	f7ff f93d 	bl	8016160 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016ee6:	2800      	cmp	r0, #0
 8016ee8:	d04c      	beq.n	8016f84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8016eea:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8016eee:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8016ef2:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8016ef6:	4686      	mov	lr, r0
 8016ef8:	4290      	cmp	r0, r2
 8016efa:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8016efe:	4450      	add	r0, sl
 8016f00:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8016f04:	bfb8      	it	lt
 8016f06:	4696      	movlt	lr, r2
 8016f08:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016f0c:	4452      	add	r2, sl
 8016f0e:	b280      	uxth	r0, r0
 8016f10:	4299      	cmp	r1, r3
 8016f12:	468c      	mov	ip, r1
 8016f14:	b292      	uxth	r2, r2
 8016f16:	9302      	str	r3, [sp, #8]
 8016f18:	bfb8      	it	lt
 8016f1a:	469c      	movlt	ip, r3
 8016f1c:	b203      	sxth	r3, r0
 8016f1e:	fa0f fa82 	sxth.w	sl, r2
 8016f22:	f8ad e01c 	strh.w	lr, [sp, #28]
 8016f26:	f8ad c01e 	strh.w	ip, [sp, #30]
 8016f2a:	4553      	cmp	r3, sl
 8016f2c:	bfb8      	it	lt
 8016f2e:	4602      	movlt	r2, r0
 8016f30:	9b02      	ldr	r3, [sp, #8]
 8016f32:	eba2 020e 	sub.w	r2, r2, lr
 8016f36:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016f3a:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8016f3e:	4411      	add	r1, r2
 8016f40:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016f44:	4413      	add	r3, r2
 8016f46:	b289      	uxth	r1, r1
 8016f48:	b29b      	uxth	r3, r3
 8016f4a:	b208      	sxth	r0, r1
 8016f4c:	b21a      	sxth	r2, r3
 8016f4e:	4290      	cmp	r0, r2
 8016f50:	bfb8      	it	lt
 8016f52:	460b      	movlt	r3, r1
 8016f54:	eba3 030c 	sub.w	r3, r3, ip
 8016f58:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8016f5c:	a807      	add	r0, sp, #28
 8016f5e:	f7fb fa30 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8016f62:	b920      	cbnz	r0, 8016f6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 8016f64:	6823      	ldr	r3, [r4, #0]
 8016f66:	a907      	add	r1, sp, #28
 8016f68:	4620      	mov	r0, r4
 8016f6a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8016f6c:	4798      	blx	r3
 8016f6e:	3701      	adds	r7, #1
 8016f70:	b2bf      	uxth	r7, r7
 8016f72:	e7a9      	b.n	8016ec8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 8016f74:	f8d9 0000 	ldr.w	r0, [r9]
 8016f78:	2101      	movs	r1, #1
 8016f7a:	6803      	ldr	r3, [r0, #0]
 8016f7c:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8016f80:	4798      	blx	r3
 8016f82:	e773      	b.n	8016e6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8016f84:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8016f88:	e7e8      	b.n	8016f5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8016f8a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8016f8c:	4798      	blx	r3
 8016f8e:	4b3f      	ldr	r3, [pc, #252]	@ (801708c <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8016f90:	781b      	ldrb	r3, [r3, #0]
 8016f92:	2b00      	cmp	r3, #0
 8016f94:	f43f af2b 	beq.w	8016dee <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016f98:	2300      	movs	r3, #0
 8016f9a:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8016f9e:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8016fa2:	882b      	ldrh	r3, [r5, #0]
 8016fa4:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8016fa8:	42ab      	cmp	r3, r5
 8016faa:	f4bf af20 	bcs.w	8016dee <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8016fae:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8016fb2:	2907      	cmp	r1, #7
 8016fb4:	d814      	bhi.n	8016fe0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 8016fb6:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8016fba:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8016fbe:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8016fc2:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8016fc6:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8016fca:	1c4a      	adds	r2, r1, #1
 8016fcc:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8016fd0:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8016fd4:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8016fd8:	f8a2 c002 	strh.w	ip, [r2, #2]
 8016fdc:	8097      	strh	r7, [r2, #4]
 8016fde:	80d6      	strh	r6, [r2, #6]
 8016fe0:	3301      	adds	r3, #1
 8016fe2:	b29b      	uxth	r3, r3
 8016fe4:	e7e0      	b.n	8016fa8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 8016fe6:	2b02      	cmp	r3, #2
 8016fe8:	f040 8133 	bne.w	8017252 <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8016fec:	4b28      	ldr	r3, [pc, #160]	@ (8017090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8016fee:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8016ff2:	781b      	ldrb	r3, [r3, #0]
 8016ff4:	2b01      	cmp	r3, #1
 8016ff6:	f000 8098 	beq.w	801712a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8016ffa:	882a      	ldrh	r2, [r5, #0]
 8016ffc:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8017000:	3201      	adds	r2, #1
 8017002:	b292      	uxth	r2, r2
 8017004:	2900      	cmp	r1, #0
 8017006:	d0c2      	beq.n	8016f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017008:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 801700c:	4694      	mov	ip, r2
 801700e:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8017012:	f04f 0900 	mov.w	r9, #0
 8017016:	441e      	add	r6, r3
 8017018:	b236      	sxth	r6, r6
 801701a:	fa1f f38c 	uxth.w	r3, ip
 801701e:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8017022:	4299      	cmp	r1, r3
 8017024:	f240 80be 	bls.w	80171a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 8017028:	4427      	add	r7, r4
 801702a:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 801702e:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8017032:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8017036:	4283      	cmp	r3, r0
 8017038:	f340 80a0 	ble.w	801717c <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 801703c:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8017040:	46e1      	mov	r9, ip
 8017042:	4406      	add	r6, r0
 8017044:	b236      	sxth	r6, r6
 8017046:	429e      	cmp	r6, r3
 8017048:	bfa8      	it	ge
 801704a:	461e      	movge	r6, r3
 801704c:	f10c 0c01 	add.w	ip, ip, #1
 8017050:	e7e3      	b.n	801701a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 8017052:	d10a      	bne.n	801706a <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 8017054:	4562      	cmp	r2, ip
 8017056:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 801705a:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 801705e:	bfb8      	it	lt
 8017060:	4662      	movlt	r2, ip
 8017062:	4288      	cmp	r0, r1
 8017064:	bfb8      	it	lt
 8017066:	461f      	movlt	r7, r3
 8017068:	e086      	b.n	8017178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 801706a:	428a      	cmp	r2, r1
 801706c:	bfb8      	it	lt
 801706e:	460a      	movlt	r2, r1
 8017070:	e082      	b.n	8017178 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 8017072:	bf00      	nop
 8017074:	200039c4 	.word	0x200039c4
 8017078:	200039d0 	.word	0x200039d0
 801707c:	200001a0 	.word	0x200001a0
 8017080:	20003984 	.word	0x20003984
 8017084:	2000397a 	.word	0x2000397a
 8017088:	20003978 	.word	0x20003978
 801708c:	20003982 	.word	0x20003982
 8017090:	2000397c 	.word	0x2000397c
 8017094:	19a1      	adds	r1, r4, r6
 8017096:	ab07      	add	r3, sp, #28
 8017098:	f851 0fac 	ldr.w	r0, [r1, #172]!
 801709c:	6849      	ldr	r1, [r1, #4]
 801709e:	c303      	stmia	r3!, {r0, r1}
 80170a0:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80170a4:	a807      	add	r0, sp, #28
 80170a6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80170aa:	2b13      	cmp	r3, #19
 80170ac:	440b      	add	r3, r1
 80170ae:	bfd8      	it	le
 80170b0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80170b4:	1a9b      	subs	r3, r3, r2
 80170b6:	f8ad 201c 	strh.w	r2, [sp, #28]
 80170ba:	f8ad 3020 	strh.w	r3, [sp, #32]
 80170be:	f7fe ff9f 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80170c2:	a807      	add	r0, sp, #28
 80170c4:	f7fb f97d 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80170c8:	bb78      	cbnz	r0, 801712a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 80170ca:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 80170ce:	4426      	add	r6, r4
 80170d0:	f8d9 0000 	ldr.w	r0, [r9]
 80170d4:	f1bc 0f14 	cmp.w	ip, #20
 80170d8:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80170dc:	f8d0 e000 	ldr.w	lr, [r0]
 80170e0:	bfa8      	it	ge
 80170e2:	f04f 0c14 	movge.w	ip, #20
 80170e6:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80170ea:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80170ee:	fa1f fc8c 	uxth.w	ip, ip
 80170f2:	f8cd c000 	str.w	ip, [sp]
 80170f6:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 80170fa:	47d8      	blx	fp
 80170fc:	4683      	mov	fp, r0
 80170fe:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8017102:	a807      	add	r0, sp, #28
 8017104:	f7fe ff62 	bl	8015fcc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8017108:	6823      	ldr	r3, [r4, #0]
 801710a:	4620      	mov	r0, r4
 801710c:	a907      	add	r1, sp, #28
 801710e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017110:	4798      	blx	r3
 8017112:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8017116:	eba0 000b 	sub.w	r0, r0, fp
 801711a:	b200      	sxth	r0, r0
 801711c:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8017120:	b918      	cbnz	r0, 801712a <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8017122:	b2b9      	uxth	r1, r7
 8017124:	4650      	mov	r0, sl
 8017126:	f7ff fa7b 	bl	8016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801712a:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 801712e:	f1bb 0f00 	cmp.w	fp, #0
 8017132:	f43f af2c 	beq.w	8016f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8017136:	882b      	ldrh	r3, [r5, #0]
 8017138:	2700      	movs	r7, #0
 801713a:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 801713e:	3301      	adds	r3, #1
 8017140:	b29b      	uxth	r3, r3
 8017142:	b299      	uxth	r1, r3
 8017144:	00fe      	lsls	r6, r7, #3
 8017146:	458b      	cmp	fp, r1
 8017148:	d9a4      	bls.n	8017094 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 801714a:	4426      	add	r6, r4
 801714c:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8017150:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8017154:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8017158:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 801715c:	4408      	add	r0, r1
 801715e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8017162:	4461      	add	r1, ip
 8017164:	b200      	sxth	r0, r0
 8017166:	b209      	sxth	r1, r1
 8017168:	4288      	cmp	r0, r1
 801716a:	f6bf af72 	bge.w	8017052 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 801716e:	4584      	cmp	ip, r0
 8017170:	4662      	mov	r2, ip
 8017172:	461f      	mov	r7, r3
 8017174:	bfb8      	it	lt
 8017176:	4602      	movlt	r2, r0
 8017178:	3301      	adds	r3, #1
 801717a:	e7e2      	b.n	8017142 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 801717c:	d10e      	bne.n	801719c <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 801717e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8017182:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8017186:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 801718a:	4473      	add	r3, lr
 801718c:	b21b      	sxth	r3, r3
 801718e:	429e      	cmp	r6, r3
 8017190:	bfa8      	it	ge
 8017192:	461e      	movge	r6, r3
 8017194:	4287      	cmp	r7, r0
 8017196:	bfb8      	it	lt
 8017198:	46e1      	movlt	r9, ip
 801719a:	e757      	b.n	801704c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801719c:	4286      	cmp	r6, r0
 801719e:	bfa8      	it	ge
 80171a0:	4606      	movge	r6, r0
 80171a2:	e753      	b.n	801704c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 80171a4:	eb0a 0007 	add.w	r0, sl, r7
 80171a8:	4427      	add	r7, r4
 80171aa:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 80171ae:	f1bb 0f13 	cmp.w	fp, #19
 80171b2:	bfdc      	itt	le
 80171b4:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 80171b8:	445e      	addle	r6, fp
 80171ba:	e9cd 2102 	strd	r2, r1, [sp, #8]
 80171be:	bfd8      	it	le
 80171c0:	b236      	sxthle	r6, r6
 80171c2:	f7fb f8fe 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80171c6:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 80171ca:	2800      	cmp	r0, #0
 80171cc:	f47f af1a 	bne.w	8017004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 80171d0:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 80171d4:	fa1f fb8b 	uxth.w	fp, fp
 80171d8:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 80171dc:	1ab6      	subs	r6, r6, r2
 80171de:	4829      	ldr	r0, [pc, #164]	@ (8017284 <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 80171e0:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 80171e4:	2e14      	cmp	r6, #20
 80171e6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 80171ea:	6800      	ldr	r0, [r0, #0]
 80171ec:	bfa8      	it	ge
 80171ee:	2614      	movge	r6, #20
 80171f0:	f8ad 101c 	strh.w	r1, [sp, #28]
 80171f4:	f8ad 201e 	strh.w	r2, [sp, #30]
 80171f8:	b289      	uxth	r1, r1
 80171fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80171fe:	b2b6      	uxth	r6, r6
 8017200:	f8d0 c000 	ldr.w	ip, [r0]
 8017204:	b292      	uxth	r2, r2
 8017206:	455e      	cmp	r6, fp
 8017208:	bf94      	ite	ls
 801720a:	9600      	strls	r6, [sp, #0]
 801720c:	f8cd b000 	strhi.w	fp, [sp]
 8017210:	b29b      	uxth	r3, r3
 8017212:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 8017216:	47b0      	blx	r6
 8017218:	6823      	ldr	r3, [r4, #0]
 801721a:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801721e:	a907      	add	r1, sp, #28
 8017220:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017222:	4620      	mov	r0, r4
 8017224:	4798      	blx	r3
 8017226:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 801722a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801722e:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 8017232:	1a5b      	subs	r3, r3, r1
 8017234:	440a      	add	r2, r1
 8017236:	b21b      	sxth	r3, r3
 8017238:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 801723c:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 8017240:	2b00      	cmp	r3, #0
 8017242:	f47f aeda 	bne.w	8016ffa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8017246:	fa1f f189 	uxth.w	r1, r9
 801724a:	4650      	mov	r0, sl
 801724c:	f7ff f9e8 	bl	8016620 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8017250:	e6d3      	b.n	8016ffa <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 8017252:	882e      	ldrh	r6, [r5, #0]
 8017254:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8017258:	42b3      	cmp	r3, r6
 801725a:	f67f ae98 	bls.w	8016f8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801725e:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8017262:	ab07      	add	r3, sp, #28
 8017264:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8017268:	6851      	ldr	r1, [r2, #4]
 801726a:	c303      	stmia	r3!, {r0, r1}
 801726c:	a807      	add	r0, sp, #28
 801726e:	f7fb f8a8 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017272:	b920      	cbnz	r0, 801727e <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 8017274:	6823      	ldr	r3, [r4, #0]
 8017276:	a907      	add	r1, sp, #28
 8017278:	4620      	mov	r0, r4
 801727a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801727c:	4798      	blx	r3
 801727e:	3601      	adds	r6, #1
 8017280:	b2b6      	uxth	r6, r6
 8017282:	e7e7      	b.n	8017254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 8017284:	20003984 	.word	0x20003984

08017288 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8017288:	4b03      	ldr	r3, [pc, #12]	@ (8017298 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801728a:	2200      	movs	r2, #0
 801728c:	801a      	strh	r2, [r3, #0]
 801728e:	805a      	strh	r2, [r3, #2]
 8017290:	809a      	strh	r2, [r3, #4]
 8017292:	80da      	strh	r2, [r3, #6]
 8017294:	4770      	bx	lr
 8017296:	bf00      	nop
 8017298:	200039d0 	.word	0x200039d0

0801729c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801729c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172a0:	b09d      	sub	sp, #116	@ 0x74
 80172a2:	4606      	mov	r6, r0
 80172a4:	4614      	mov	r4, r2
 80172a6:	468a      	mov	sl, r1
 80172a8:	a803      	add	r0, sp, #12
 80172aa:	461d      	mov	r5, r3
 80172ac:	f000 fe2d 	bl	8017f0a <_ZN8touchgfx12TextProviderC1Ev>
 80172b0:	6833      	ldr	r3, [r6, #0]
 80172b2:	4630      	mov	r0, r6
 80172b4:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 80172b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80172ba:	4798      	blx	r3
 80172bc:	6833      	ldr	r3, [r6, #0]
 80172be:	4607      	mov	r7, r0
 80172c0:	4630      	mov	r0, r6
 80172c2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80172c4:	4798      	blx	r3
 80172c6:	462a      	mov	r2, r5
 80172c8:	2500      	movs	r5, #0
 80172ca:	4621      	mov	r1, r4
 80172cc:	9000      	str	r0, [sp, #0]
 80172ce:	463b      	mov	r3, r7
 80172d0:	462c      	mov	r4, r5
 80172d2:	46a9      	mov	r9, r5
 80172d4:	46a8      	mov	r8, r5
 80172d6:	a803      	add	r0, sp, #12
 80172d8:	f000 fe6a 	bl	8017fb0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80172dc:	2300      	movs	r3, #0
 80172de:	9302      	str	r3, [sp, #8]
 80172e0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80172e4:	429c      	cmp	r4, r3
 80172e6:	d002      	beq.n	80172ee <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 80172e8:	455c      	cmp	r4, fp
 80172ea:	bf18      	it	ne
 80172ec:	4625      	movne	r5, r4
 80172ee:	ab02      	add	r3, sp, #8
 80172f0:	4632      	mov	r2, r6
 80172f2:	4651      	mov	r1, sl
 80172f4:	a803      	add	r0, sp, #12
 80172f6:	f001 f97d 	bl	80185f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80172fa:	4604      	mov	r4, r0
 80172fc:	b108      	cbz	r0, 8017302 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 80172fe:	280a      	cmp	r0, #10
 8017300:	d10a      	bne.n	8017318 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8017302:	45c1      	cmp	r9, r8
 8017304:	bf38      	it	cc
 8017306:	46c1      	movcc	r9, r8
 8017308:	f04f 0800 	mov.w	r8, #0
 801730c:	2c00      	cmp	r4, #0
 801730e:	d1e5      	bne.n	80172dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8017310:	4648      	mov	r0, r9
 8017312:	b01d      	add	sp, #116	@ 0x74
 8017314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017318:	9a02      	ldr	r2, [sp, #8]
 801731a:	2a00      	cmp	r2, #0
 801731c:	d0de      	beq.n	80172dc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801731e:	7b57      	ldrb	r7, [r2, #13]
 8017320:	4629      	mov	r1, r5
 8017322:	6833      	ldr	r3, [r6, #0]
 8017324:	007f      	lsls	r7, r7, #1
 8017326:	8894      	ldrh	r4, [r2, #4]
 8017328:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801732a:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 801732e:	7a97      	ldrb	r7, [r2, #10]
 8017330:	4307      	orrs	r7, r0
 8017332:	4630      	mov	r0, r6
 8017334:	4798      	blx	r3
 8017336:	4438      	add	r0, r7
 8017338:	4480      	add	r8, r0
 801733a:	fa1f f888 	uxth.w	r8, r8
 801733e:	e7e5      	b.n	801730c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08017340 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8017340:	b508      	push	{r3, lr}
 8017342:	6803      	ldr	r3, [r0, #0]
 8017344:	68db      	ldr	r3, [r3, #12]
 8017346:	4798      	blx	r3
 8017348:	b128      	cbz	r0, 8017356 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801734a:	7b43      	ldrb	r3, [r0, #13]
 801734c:	7a80      	ldrb	r0, [r0, #10]
 801734e:	005b      	lsls	r3, r3, #1
 8017350:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8017354:	4318      	orrs	r0, r3
 8017356:	bd08      	pop	{r3, pc}

08017358 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8017358:	b40e      	push	{r1, r2, r3}
 801735a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801735c:	b09e      	sub	sp, #120	@ 0x78
 801735e:	4605      	mov	r5, r0
 8017360:	ab23      	add	r3, sp, #140	@ 0x8c
 8017362:	a805      	add	r0, sp, #20
 8017364:	f853 4b04 	ldr.w	r4, [r3], #4
 8017368:	9303      	str	r3, [sp, #12]
 801736a:	f000 fdce 	bl	8017f0a <_ZN8touchgfx12TextProviderC1Ev>
 801736e:	682b      	ldr	r3, [r5, #0]
 8017370:	4628      	mov	r0, r5
 8017372:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017374:	4798      	blx	r3
 8017376:	682b      	ldr	r3, [r5, #0]
 8017378:	4606      	mov	r6, r0
 801737a:	4628      	mov	r0, r5
 801737c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801737e:	4798      	blx	r3
 8017380:	4633      	mov	r3, r6
 8017382:	4621      	mov	r1, r4
 8017384:	ae1e      	add	r6, sp, #120	@ 0x78
 8017386:	2400      	movs	r4, #0
 8017388:	9000      	str	r0, [sp, #0]
 801738a:	9a03      	ldr	r2, [sp, #12]
 801738c:	a805      	add	r0, sp, #20
 801738e:	f000 fe0f 	bl	8017fb0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017392:	f846 4d68 	str.w	r4, [r6, #-104]!
 8017396:	462a      	mov	r2, r5
 8017398:	4633      	mov	r3, r6
 801739a:	4621      	mov	r1, r4
 801739c:	a805      	add	r0, sp, #20
 801739e:	f001 f929 	bl	80185f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80173a2:	b300      	cbz	r0, 80173e6 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 80173a4:	280a      	cmp	r0, #10
 80173a6:	d01a      	beq.n	80173de <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80173a8:	9f04      	ldr	r7, [sp, #16]
 80173aa:	b1c7      	cbz	r7, 80173de <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 80173ac:	7b78      	ldrb	r0, [r7, #13]
 80173ae:	7a3b      	ldrb	r3, [r7, #8]
 80173b0:	00c1      	lsls	r1, r0, #3
 80173b2:	88ea      	ldrh	r2, [r5, #6]
 80173b4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80173b8:	4319      	orrs	r1, r3
 80173ba:	0643      	lsls	r3, r0, #25
 80173bc:	ea4f 1000 	mov.w	r0, r0, lsl #4
 80173c0:	bf48      	it	mi
 80173c2:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80173c6:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 80173ca:	bf48      	it	mi
 80173cc:	b219      	sxthmi	r1, r3
 80173ce:	79fb      	ldrb	r3, [r7, #7]
 80173d0:	4303      	orrs	r3, r0
 80173d2:	4413      	add	r3, r2
 80173d4:	1a5b      	subs	r3, r3, r1
 80173d6:	b21b      	sxth	r3, r3
 80173d8:	429c      	cmp	r4, r3
 80173da:	bfb8      	it	lt
 80173dc:	461c      	movlt	r4, r3
 80173de:	4633      	mov	r3, r6
 80173e0:	462a      	mov	r2, r5
 80173e2:	2100      	movs	r1, #0
 80173e4:	e7da      	b.n	801739c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 80173e6:	b2a0      	uxth	r0, r4
 80173e8:	b01e      	add	sp, #120	@ 0x78
 80173ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80173ee:	b003      	add	sp, #12
 80173f0:	4770      	bx	lr

080173f2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 80173f2:	7a43      	ldrb	r3, [r0, #9]
 80173f4:	8880      	ldrh	r0, [r0, #4]
 80173f6:	4418      	add	r0, r3
 80173f8:	b280      	uxth	r0, r0
 80173fa:	4770      	bx	lr

080173fc <_ZNK8touchgfx4Font13getFontHeightEv>:
 80173fc:	6803      	ldr	r3, [r0, #0]
 80173fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8017400:	4718      	bx	r3

08017402 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8017402:	b40e      	push	{r1, r2, r3}
 8017404:	b570      	push	{r4, r5, r6, lr}
 8017406:	b09d      	sub	sp, #116	@ 0x74
 8017408:	4604      	mov	r4, r0
 801740a:	ab21      	add	r3, sp, #132	@ 0x84
 801740c:	a803      	add	r0, sp, #12
 801740e:	f853 5b04 	ldr.w	r5, [r3], #4
 8017412:	9302      	str	r3, [sp, #8]
 8017414:	f000 fd79 	bl	8017f0a <_ZN8touchgfx12TextProviderC1Ev>
 8017418:	6823      	ldr	r3, [r4, #0]
 801741a:	4620      	mov	r0, r4
 801741c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801741e:	4798      	blx	r3
 8017420:	6823      	ldr	r3, [r4, #0]
 8017422:	4606      	mov	r6, r0
 8017424:	4620      	mov	r0, r4
 8017426:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017428:	2401      	movs	r4, #1
 801742a:	4798      	blx	r3
 801742c:	4633      	mov	r3, r6
 801742e:	9000      	str	r0, [sp, #0]
 8017430:	4629      	mov	r1, r5
 8017432:	9a02      	ldr	r2, [sp, #8]
 8017434:	a803      	add	r0, sp, #12
 8017436:	f000 fdbb 	bl	8017fb0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801743a:	a803      	add	r0, sp, #12
 801743c:	f001 f95a 	bl	80186f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017440:	b2a3      	uxth	r3, r4
 8017442:	b138      	cbz	r0, 8017454 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 8017444:	280a      	cmp	r0, #10
 8017446:	a803      	add	r0, sp, #12
 8017448:	bf04      	itt	eq
 801744a:	3301      	addeq	r3, #1
 801744c:	b21c      	sxtheq	r4, r3
 801744e:	f001 f951 	bl	80186f4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8017452:	e7f5      	b.n	8017440 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8017454:	4618      	mov	r0, r3
 8017456:	b01d      	add	sp, #116	@ 0x74
 8017458:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801745c:	b003      	add	sp, #12
 801745e:	4770      	bx	lr

08017460 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8017460:	b40e      	push	{r1, r2, r3}
 8017462:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017464:	b09e      	sub	sp, #120	@ 0x78
 8017466:	4604      	mov	r4, r0
 8017468:	ab23      	add	r3, sp, #140	@ 0x8c
 801746a:	a805      	add	r0, sp, #20
 801746c:	f853 5b04 	ldr.w	r5, [r3], #4
 8017470:	9303      	str	r3, [sp, #12]
 8017472:	f000 fd4a 	bl	8017f0a <_ZN8touchgfx12TextProviderC1Ev>
 8017476:	6823      	ldr	r3, [r4, #0]
 8017478:	4620      	mov	r0, r4
 801747a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 801747c:	4798      	blx	r3
 801747e:	6823      	ldr	r3, [r4, #0]
 8017480:	4606      	mov	r6, r0
 8017482:	4620      	mov	r0, r4
 8017484:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8017486:	4798      	blx	r3
 8017488:	4633      	mov	r3, r6
 801748a:	4629      	mov	r1, r5
 801748c:	9000      	str	r0, [sp, #0]
 801748e:	9a03      	ldr	r2, [sp, #12]
 8017490:	a805      	add	r0, sp, #20
 8017492:	f000 fd8d 	bl	8017fb0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8017496:	ad1e      	add	r5, sp, #120	@ 0x78
 8017498:	2100      	movs	r1, #0
 801749a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 801749e:	4622      	mov	r2, r4
 80174a0:	a805      	add	r0, sp, #20
 80174a2:	f845 1d68 	str.w	r1, [r5, #-104]!
 80174a6:	462b      	mov	r3, r5
 80174a8:	f001 f8a4 	bl	80185f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80174ac:	b1d8      	cbz	r0, 80174e6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80174ae:	280a      	cmp	r0, #10
 80174b0:	d012      	beq.n	80174d8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80174b2:	9804      	ldr	r0, [sp, #16]
 80174b4:	b180      	cbz	r0, 80174d8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80174b6:	7b47      	ldrb	r7, [r0, #13]
 80174b8:	88e2      	ldrh	r2, [r4, #6]
 80174ba:	00fb      	lsls	r3, r7, #3
 80174bc:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80174c0:	7a03      	ldrb	r3, [r0, #8]
 80174c2:	430b      	orrs	r3, r1
 80174c4:	0679      	lsls	r1, r7, #25
 80174c6:	bf44      	itt	mi
 80174c8:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80174cc:	b21b      	sxthmi	r3, r3
 80174ce:	1ad3      	subs	r3, r2, r3
 80174d0:	b21b      	sxth	r3, r3
 80174d2:	429e      	cmp	r6, r3
 80174d4:	bfa8      	it	ge
 80174d6:	461e      	movge	r6, r3
 80174d8:	462b      	mov	r3, r5
 80174da:	4622      	mov	r2, r4
 80174dc:	2100      	movs	r1, #0
 80174de:	a805      	add	r0, sp, #20
 80174e0:	f001 f888 	bl	80185f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80174e4:	e7e2      	b.n	80174ac <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 80174e6:	4630      	mov	r0, r6
 80174e8:	b01e      	add	sp, #120	@ 0x78
 80174ea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80174ee:	b003      	add	sp, #12
 80174f0:	4770      	bx	lr

080174f2 <_ZNK8touchgfx8Drawable10invalidateEv>:
 80174f2:	b513      	push	{r0, r1, r4, lr}
 80174f4:	6803      	ldr	r3, [r0, #0]
 80174f6:	2400      	movs	r4, #0
 80174f8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80174fc:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017500:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017504:	4669      	mov	r1, sp
 8017506:	691b      	ldr	r3, [r3, #16]
 8017508:	9400      	str	r4, [sp, #0]
 801750a:	f8ad 2006 	strh.w	r2, [sp, #6]
 801750e:	4798      	blx	r3
 8017510:	b002      	add	sp, #8
 8017512:	bd10      	pop	{r4, pc}

08017514 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8017514:	b538      	push	{r3, r4, r5, lr}
 8017516:	680b      	ldr	r3, [r1, #0]
 8017518:	460c      	mov	r4, r1
 801751a:	4605      	mov	r5, r0
 801751c:	68db      	ldr	r3, [r3, #12]
 801751e:	4798      	blx	r3
 8017520:	6823      	ldr	r3, [r4, #0]
 8017522:	4620      	mov	r0, r4
 8017524:	4629      	mov	r1, r5
 8017526:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017528:	4798      	blx	r3
 801752a:	4628      	mov	r0, r5
 801752c:	bd38      	pop	{r3, r4, r5, pc}

0801752e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801752e:	b410      	push	{r4}
 8017530:	880a      	ldrh	r2, [r1, #0]
 8017532:	8884      	ldrh	r4, [r0, #4]
 8017534:	4422      	add	r2, r4
 8017536:	800a      	strh	r2, [r1, #0]
 8017538:	884a      	ldrh	r2, [r1, #2]
 801753a:	88c4      	ldrh	r4, [r0, #6]
 801753c:	4422      	add	r2, r4
 801753e:	804a      	strh	r2, [r1, #2]
 8017540:	6940      	ldr	r0, [r0, #20]
 8017542:	b120      	cbz	r0, 801754e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8017544:	6803      	ldr	r3, [r0, #0]
 8017546:	f85d 4b04 	ldr.w	r4, [sp], #4
 801754a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801754c:	4718      	bx	r3
 801754e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017552:	4770      	bx	lr

08017554 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8017554:	b570      	push	{r4, r5, r6, lr}
 8017556:	8882      	ldrh	r2, [r0, #4]
 8017558:	460c      	mov	r4, r1
 801755a:	880b      	ldrh	r3, [r1, #0]
 801755c:	4605      	mov	r5, r0
 801755e:	4413      	add	r3, r2
 8017560:	800b      	strh	r3, [r1, #0]
 8017562:	884b      	ldrh	r3, [r1, #2]
 8017564:	88c2      	ldrh	r2, [r0, #6]
 8017566:	4413      	add	r3, r2
 8017568:	804b      	strh	r3, [r1, #2]
 801756a:	1d01      	adds	r1, r0, #4
 801756c:	4620      	mov	r0, r4
 801756e:	f7fa fee5 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8017572:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8017576:	2b00      	cmp	r3, #0
 8017578:	dd0b      	ble.n	8017592 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801757a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801757e:	2b00      	cmp	r3, #0
 8017580:	dd07      	ble.n	8017592 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017582:	6968      	ldr	r0, [r5, #20]
 8017584:	b128      	cbz	r0, 8017592 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8017586:	6803      	ldr	r3, [r0, #0]
 8017588:	4621      	mov	r1, r4
 801758a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801758c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017590:	4718      	bx	r3
 8017592:	bd70      	pop	{r4, r5, r6, pc}

08017594 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8017594:	b570      	push	{r4, r5, r6, lr}
 8017596:	8882      	ldrh	r2, [r0, #4]
 8017598:	460c      	mov	r4, r1
 801759a:	880b      	ldrh	r3, [r1, #0]
 801759c:	4605      	mov	r5, r0
 801759e:	4413      	add	r3, r2
 80175a0:	800b      	strh	r3, [r1, #0]
 80175a2:	884b      	ldrh	r3, [r1, #2]
 80175a4:	88c2      	ldrh	r2, [r0, #6]
 80175a6:	4413      	add	r3, r2
 80175a8:	804b      	strh	r3, [r1, #2]
 80175aa:	1d01      	adds	r1, r0, #4
 80175ac:	4620      	mov	r0, r4
 80175ae:	f7fa fec5 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 80175b2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80175b6:	2b00      	cmp	r3, #0
 80175b8:	dd19      	ble.n	80175ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80175ba:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80175be:	2b00      	cmp	r3, #0
 80175c0:	dd15      	ble.n	80175ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80175c2:	6968      	ldr	r0, [r5, #20]
 80175c4:	b128      	cbz	r0, 80175d2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80175c6:	6803      	ldr	r3, [r0, #0]
 80175c8:	4621      	mov	r1, r4
 80175ca:	691b      	ldr	r3, [r3, #16]
 80175cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80175d0:	4718      	bx	r3
 80175d2:	4b07      	ldr	r3, [pc, #28]	@ (80175f0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80175d4:	681b      	ldr	r3, [r3, #0]
 80175d6:	3304      	adds	r3, #4
 80175d8:	429d      	cmp	r5, r3
 80175da:	d108      	bne.n	80175ee <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80175dc:	f7fe fe9e 	bl	801631c <_ZN8touchgfx11Application11getInstanceEv>
 80175e0:	6803      	ldr	r3, [r0, #0]
 80175e2:	6821      	ldr	r1, [r4, #0]
 80175e4:	6862      	ldr	r2, [r4, #4]
 80175e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80175e8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80175ec:	4718      	bx	r3
 80175ee:	bd70      	pop	{r4, r5, r6, pc}
 80175f0:	200039c8 	.word	0x200039c8

080175f4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80175f4:	b570      	push	{r4, r5, r6, lr}
 80175f6:	4604      	mov	r4, r0
 80175f8:	4616      	mov	r6, r2
 80175fa:	460d      	mov	r5, r1
 80175fc:	b901      	cbnz	r1, 8017600 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80175fe:	b192      	cbz	r2, 8017626 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8017600:	6823      	ldr	r3, [r4, #0]
 8017602:	4620      	mov	r0, r4
 8017604:	699b      	ldr	r3, [r3, #24]
 8017606:	4798      	blx	r3
 8017608:	88e2      	ldrh	r2, [r4, #6]
 801760a:	88a1      	ldrh	r1, [r4, #4]
 801760c:	4620      	mov	r0, r4
 801760e:	4432      	add	r2, r6
 8017610:	4429      	add	r1, r5
 8017612:	b212      	sxth	r2, r2
 8017614:	b209      	sxth	r1, r1
 8017616:	f7f5 f8e2 	bl	800c7de <_ZN8touchgfx8Drawable5setXYEss>
 801761a:	6823      	ldr	r3, [r4, #0]
 801761c:	4620      	mov	r0, r4
 801761e:	699b      	ldr	r3, [r3, #24]
 8017620:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8017624:	4718      	bx	r3
 8017626:	bd70      	pop	{r4, r5, r6, pc}

08017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8017628:	b510      	push	{r4, lr}
 801762a:	2300      	movs	r3, #0
 801762c:	4604      	mov	r4, r0
 801762e:	4608      	mov	r0, r1
 8017630:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8017634:	8023      	strh	r3, [r4, #0]
 8017636:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801763a:	8063      	strh	r3, [r4, #2]
 801763c:	6803      	ldr	r3, [r0, #0]
 801763e:	80a1      	strh	r1, [r4, #4]
 8017640:	4621      	mov	r1, r4
 8017642:	80e2      	strh	r2, [r4, #6]
 8017644:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017646:	4798      	blx	r3
 8017648:	4620      	mov	r0, r4
 801764a:	bd10      	pop	{r4, pc}

0801764c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 801764c:	b530      	push	{r4, r5, lr}
 801764e:	8083      	strh	r3, [r0, #4]
 8017650:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8017654:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8017658:	80c3      	strh	r3, [r0, #6]
 801765a:	f89d 3010 	ldrb.w	r3, [sp, #16]
 801765e:	6141      	str	r1, [r0, #20]
 8017660:	7203      	strb	r3, [r0, #8]
 8017662:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017666:	8302      	strh	r2, [r0, #24]
 8017668:	7243      	strb	r3, [r0, #9]
 801766a:	7a83      	ldrb	r3, [r0, #10]
 801766c:	f365 0306 	bfi	r3, r5, #0, #7
 8017670:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8017674:	f365 13c7 	bfi	r3, r5, #7, #1
 8017678:	7283      	strb	r3, [r0, #10]
 801767a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 801767e:	72c3      	strb	r3, [r0, #11]
 8017680:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8017684:	7303      	strb	r3, [r0, #12]
 8017686:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801768a:	81c3      	strh	r3, [r0, #14]
 801768c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8017690:	8203      	strh	r3, [r0, #16]
 8017692:	4b01      	ldr	r3, [pc, #4]	@ (8017698 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8017694:	6003      	str	r3, [r0, #0]
 8017696:	bd30      	pop	{r4, r5, pc}
 8017698:	0802ad58 	.word	0x0802ad58

0801769c <_ZNK8touchgfx9ConstFont4findEt>:
 801769c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801769e:	6944      	ldr	r4, [r0, #20]
 80176a0:	b3bc      	cbz	r4, 8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80176a2:	88a3      	ldrh	r3, [r4, #4]
 80176a4:	8b02      	ldrh	r2, [r0, #24]
 80176a6:	1acb      	subs	r3, r1, r3
 80176a8:	f102 32ff 	add.w	r2, r2, #4294967295
 80176ac:	d431      	bmi.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80176ae:	4293      	cmp	r3, r2
 80176b0:	dd0c      	ble.n	80176cc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80176b2:	230e      	movs	r3, #14
 80176b4:	fb03 4302 	mla	r3, r3, r2, r4
 80176b8:	889b      	ldrh	r3, [r3, #4]
 80176ba:	1a5b      	subs	r3, r3, r1
 80176bc:	1ad3      	subs	r3, r2, r3
 80176be:	429a      	cmp	r2, r3
 80176c0:	db27      	blt.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80176c2:	2b00      	cmp	r3, #0
 80176c4:	bfbc      	itt	lt
 80176c6:	2302      	movlt	r3, #2
 80176c8:	fb92 f3f3 	sdivlt	r3, r2, r3
 80176cc:	2500      	movs	r5, #0
 80176ce:	260e      	movs	r6, #14
 80176d0:	4295      	cmp	r5, r2
 80176d2:	dc1e      	bgt.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80176d4:	fb06 4003 	mla	r0, r6, r3, r4
 80176d8:	8887      	ldrh	r7, [r0, #4]
 80176da:	42b9      	cmp	r1, r7
 80176dc:	d01a      	beq.n	8017714 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 80176de:	d20d      	bcs.n	80176fc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80176e0:	1e5a      	subs	r2, r3, #1
 80176e2:	4295      	cmp	r5, r2
 80176e4:	dc15      	bgt.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80176e6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80176ea:	1a5b      	subs	r3, r3, r1
 80176ec:	1ad3      	subs	r3, r2, r3
 80176ee:	429a      	cmp	r2, r3
 80176f0:	db0f      	blt.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80176f2:	429d      	cmp	r5, r3
 80176f4:	ddec      	ble.n	80176d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80176f6:	1953      	adds	r3, r2, r5
 80176f8:	105b      	asrs	r3, r3, #1
 80176fa:	e7e9      	b.n	80176d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80176fc:	1c5d      	adds	r5, r3, #1
 80176fe:	42aa      	cmp	r2, r5
 8017700:	db07      	blt.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8017702:	8a43      	ldrh	r3, [r0, #18]
 8017704:	1acb      	subs	r3, r1, r3
 8017706:	442b      	add	r3, r5
 8017708:	429d      	cmp	r5, r3
 801770a:	dc02      	bgt.n	8017712 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801770c:	429a      	cmp	r2, r3
 801770e:	dadf      	bge.n	80176d0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8017710:	e7f1      	b.n	80176f6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8017712:	2000      	movs	r0, #0
 8017714:	bdf0      	pop	{r4, r5, r6, r7, pc}

08017716 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8017716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8017718:	4604      	mov	r4, r0
 801771a:	4617      	mov	r7, r2
 801771c:	461e      	mov	r6, r3
 801771e:	b911      	cbnz	r1, 8017726 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8017720:	2500      	movs	r5, #0
 8017722:	4628      	mov	r0, r5
 8017724:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8017726:	290a      	cmp	r1, #10
 8017728:	d0fa      	beq.n	8017720 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801772a:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801772e:	4291      	cmp	r1, r2
 8017730:	d0f6      	beq.n	8017720 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017732:	f242 020b 	movw	r2, #8203	@ 0x200b
 8017736:	4291      	cmp	r1, r2
 8017738:	d0f2      	beq.n	8017720 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801773a:	f7ff ffaf 	bl	801769c <_ZNK8touchgfx9ConstFont4findEt>
 801773e:	4605      	mov	r5, r0
 8017740:	b950      	cbnz	r0, 8017758 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8017742:	6823      	ldr	r3, [r4, #0]
 8017744:	4620      	mov	r0, r4
 8017746:	691b      	ldr	r3, [r3, #16]
 8017748:	4798      	blx	r3
 801774a:	4601      	mov	r1, r0
 801774c:	4620      	mov	r0, r4
 801774e:	f7ff ffa5 	bl	801769c <_ZNK8touchgfx9ConstFont4findEt>
 8017752:	4605      	mov	r5, r0
 8017754:	2800      	cmp	r0, #0
 8017756:	d0e3      	beq.n	8017720 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8017758:	6823      	ldr	r3, [r4, #0]
 801775a:	4629      	mov	r1, r5
 801775c:	4620      	mov	r0, r4
 801775e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8017760:	4798      	blx	r3
 8017762:	6038      	str	r0, [r7, #0]
 8017764:	6823      	ldr	r3, [r4, #0]
 8017766:	4620      	mov	r0, r4
 8017768:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 801776a:	4798      	blx	r3
 801776c:	7030      	strb	r0, [r6, #0]
 801776e:	e7d8      	b.n	8017722 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08017770 <_ZN8touchgfx4clzuEm>:
 8017770:	4603      	mov	r3, r0
 8017772:	b1c8      	cbz	r0, 80177a8 <_ZN8touchgfx4clzuEm+0x38>
 8017774:	0c02      	lsrs	r2, r0, #16
 8017776:	0412      	lsls	r2, r2, #16
 8017778:	b9a2      	cbnz	r2, 80177a4 <_ZN8touchgfx4clzuEm+0x34>
 801777a:	0403      	lsls	r3, r0, #16
 801777c:	2010      	movs	r0, #16
 801777e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8017782:	bf04      	itt	eq
 8017784:	021b      	lsleq	r3, r3, #8
 8017786:	3008      	addeq	r0, #8
 8017788:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801778c:	bf04      	itt	eq
 801778e:	011b      	lsleq	r3, r3, #4
 8017790:	3004      	addeq	r0, #4
 8017792:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8017796:	bf04      	itt	eq
 8017798:	009b      	lsleq	r3, r3, #2
 801779a:	3002      	addeq	r0, #2
 801779c:	2b00      	cmp	r3, #0
 801779e:	db04      	blt.n	80177aa <_ZN8touchgfx4clzuEm+0x3a>
 80177a0:	3001      	adds	r0, #1
 80177a2:	4770      	bx	lr
 80177a4:	2000      	movs	r0, #0
 80177a6:	e7ea      	b.n	801777e <_ZN8touchgfx4clzuEm+0xe>
 80177a8:	2020      	movs	r0, #32
 80177aa:	4770      	bx	lr

080177ac <_ZN8touchgfx7muldivuEmmmRm>:
 80177ac:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80177b0:	460f      	mov	r7, r1
 80177b2:	4615      	mov	r5, r2
 80177b4:	461e      	mov	r6, r3
 80177b6:	4601      	mov	r1, r0
 80177b8:	b100      	cbz	r0, 80177bc <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80177ba:	b927      	cbnz	r7, 80177c6 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80177bc:	2000      	movs	r0, #0
 80177be:	6030      	str	r0, [r6, #0]
 80177c0:	b002      	add	sp, #8
 80177c2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80177c6:	f7ff ffd3 	bl	8017770 <_ZN8touchgfx4clzuEm>
 80177ca:	b980      	cbnz	r0, 80177ee <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80177cc:	4638      	mov	r0, r7
 80177ce:	f7ff ffcf 	bl	8017770 <_ZN8touchgfx4clzuEm>
 80177d2:	2800      	cmp	r0, #0
 80177d4:	dd05      	ble.n	80177e2 <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80177d6:	4633      	mov	r3, r6
 80177d8:	462a      	mov	r2, r5
 80177da:	4638      	mov	r0, r7
 80177dc:	f7ff ffe6 	bl	80177ac <_ZN8touchgfx7muldivuEmmmRm>
 80177e0:	e7ee      	b.n	80177c0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80177e2:	f04f 33ff 	mov.w	r3, #4294967295
 80177e6:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80177ea:	6033      	str	r3, [r6, #0]
 80177ec:	e7e8      	b.n	80177c0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80177ee:	fa37 f800 	lsrs.w	r8, r7, r0
 80177f2:	fb07 f301 	mul.w	r3, r7, r1
 80177f6:	d105      	bne.n	8017804 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80177f8:	fbb3 f0f5 	udiv	r0, r3, r5
 80177fc:	fb05 3510 	mls	r5, r5, r0, r3
 8017800:	6035      	str	r5, [r6, #0]
 8017802:	e7dd      	b.n	80177c0 <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8017804:	2301      	movs	r3, #1
 8017806:	fa01 fa00 	lsl.w	sl, r1, r0
 801780a:	462a      	mov	r2, r5
 801780c:	fa03 f000 	lsl.w	r0, r3, r0
 8017810:	4633      	mov	r3, r6
 8017812:	fbba f9f5 	udiv	r9, sl, r5
 8017816:	3801      	subs	r0, #1
 8017818:	fb08 f409 	mul.w	r4, r8, r9
 801781c:	4038      	ands	r0, r7
 801781e:	f7ff ffc5 	bl	80177ac <_ZN8touchgfx7muldivuEmmmRm>
 8017822:	462a      	mov	r2, r5
 8017824:	4607      	mov	r7, r0
 8017826:	ab01      	add	r3, sp, #4
 8017828:	fb05 a119 	mls	r1, r5, r9, sl
 801782c:	4640      	mov	r0, r8
 801782e:	f7ff ffbd 	bl	80177ac <_ZN8touchgfx7muldivuEmmmRm>
 8017832:	9b01      	ldr	r3, [sp, #4]
 8017834:	6832      	ldr	r2, [r6, #0]
 8017836:	441a      	add	r2, r3
 8017838:	fbb2 f3f5 	udiv	r3, r2, r5
 801783c:	441c      	add	r4, r3
 801783e:	fb05 2513 	mls	r5, r5, r3, r2
 8017842:	443c      	add	r4, r7
 8017844:	4420      	add	r0, r4
 8017846:	e7db      	b.n	8017800 <_ZN8touchgfx7muldivuEmmmRm+0x54>

08017848 <_ZN8touchgfx6muldivElllRl>:
 8017848:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801784a:	2800      	cmp	r0, #0
 801784c:	461e      	mov	r6, r3
 801784e:	bfba      	itte	lt
 8017850:	4240      	neglt	r0, r0
 8017852:	f04f 34ff 	movlt.w	r4, #4294967295
 8017856:	2401      	movge	r4, #1
 8017858:	2900      	cmp	r1, #0
 801785a:	bfbc      	itt	lt
 801785c:	4249      	neglt	r1, r1
 801785e:	4264      	neglt	r4, r4
 8017860:	2a00      	cmp	r2, #0
 8017862:	bfb6      	itet	lt
 8017864:	4265      	neglt	r5, r4
 8017866:	4625      	movge	r5, r4
 8017868:	4252      	neglt	r2, r2
 801786a:	4288      	cmp	r0, r1
 801786c:	bfc2      	ittt	gt
 801786e:	4603      	movgt	r3, r0
 8017870:	4608      	movgt	r0, r1
 8017872:	4619      	movgt	r1, r3
 8017874:	ab01      	add	r3, sp, #4
 8017876:	f7ff ff99 	bl	80177ac <_ZN8touchgfx7muldivuEmmmRm>
 801787a:	9b01      	ldr	r3, [sp, #4]
 801787c:	4368      	muls	r0, r5
 801787e:	435c      	muls	r4, r3
 8017880:	6034      	str	r4, [r6, #0]
 8017882:	b002      	add	sp, #8
 8017884:	bd70      	pop	{r4, r5, r6, pc}

08017886 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8017886:	2000      	movs	r0, #0
 8017888:	4770      	bx	lr

0801788a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801788a:	2001      	movs	r0, #1
 801788c:	4770      	bx	lr

0801788e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801788e:	2002      	movs	r0, #2
 8017890:	4770      	bx	lr

08017892 <_ZN8touchgfx12GestureEventD1Ev>:
 8017892:	4770      	bx	lr

08017894 <_ZN8touchgfx9DragEventD1Ev>:
 8017894:	4770      	bx	lr

08017896 <_ZN8touchgfx10ClickEventD1Ev>:
 8017896:	4770      	bx	lr

08017898 <_ZN8touchgfx10ClickEventD0Ev>:
 8017898:	b510      	push	{r4, lr}
 801789a:	4604      	mov	r4, r0
 801789c:	210c      	movs	r1, #12
 801789e:	f010 f8ea 	bl	8027a76 <_ZdlPvj>
 80178a2:	4620      	mov	r0, r4
 80178a4:	bd10      	pop	{r4, pc}

080178a6 <_ZN8touchgfx9DragEventD0Ev>:
 80178a6:	b510      	push	{r4, lr}
 80178a8:	4604      	mov	r4, r0
 80178aa:	2110      	movs	r1, #16
 80178ac:	f010 f8e3 	bl	8027a76 <_ZdlPvj>
 80178b0:	4620      	mov	r0, r4
 80178b2:	bd10      	pop	{r4, pc}

080178b4 <_ZN8touchgfx12GestureEventD0Ev>:
 80178b4:	b510      	push	{r4, lr}
 80178b6:	4604      	mov	r4, r0
 80178b8:	210c      	movs	r1, #12
 80178ba:	f010 f8dc 	bl	8027a76 <_ZdlPvj>
 80178be:	4620      	mov	r0, r4
 80178c0:	bd10      	pop	{r4, pc}
	...

080178c4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80178c4:	b530      	push	{r4, r5, lr}
 80178c6:	460d      	mov	r5, r1
 80178c8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80178ca:	b087      	sub	sp, #28
 80178cc:	4604      	mov	r4, r0
 80178ce:	b301      	cbz	r1, 8017912 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80178d0:	a801      	add	r0, sp, #4
 80178d2:	f7ff fea9 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80178d6:	892a      	ldrh	r2, [r5, #8]
 80178d8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80178dc:	7928      	ldrb	r0, [r5, #4]
 80178de:	1ad2      	subs	r2, r2, r3
 80178e0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 80178e2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80178e6:	441a      	add	r2, r3
 80178e8:	896b      	ldrh	r3, [r5, #10]
 80178ea:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80178ee:	f88d 0010 	strb.w	r0, [sp, #16]
 80178f2:	1b5b      	subs	r3, r3, r5
 80178f4:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 80178f6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80178f8:	442b      	add	r3, r5
 80178fa:	4d07      	ldr	r5, [pc, #28]	@ (8017918 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80178fc:	f8ad 1012 	strh.w	r1, [sp, #18]
 8017900:	a903      	add	r1, sp, #12
 8017902:	9503      	str	r5, [sp, #12]
 8017904:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017908:	f8ad 3016 	strh.w	r3, [sp, #22]
 801790c:	6803      	ldr	r3, [r0, #0]
 801790e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8017910:	4798      	blx	r3
 8017912:	b007      	add	sp, #28
 8017914:	bd30      	pop	{r4, r5, pc}
 8017916:	bf00      	nop
 8017918:	0802ade8 	.word	0x0802ade8

0801791c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801791c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017920:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8017922:	b08a      	sub	sp, #40	@ 0x28
 8017924:	4604      	mov	r4, r0
 8017926:	460d      	mov	r5, r1
 8017928:	b113      	cbz	r3, 8017930 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801792a:	790b      	ldrb	r3, [r1, #4]
 801792c:	2b00      	cmp	r3, #0
 801792e:	d044      	beq.n	80179ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8017930:	f104 0804 	add.w	r8, r4, #4
 8017934:	a803      	add	r0, sp, #12
 8017936:	4641      	mov	r1, r8
 8017938:	f7ff fe76 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801793c:	792b      	ldrb	r3, [r5, #4]
 801793e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017942:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8017946:	b983      	cbnz	r3, 801796a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8017948:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 801794c:	892a      	ldrh	r2, [r5, #8]
 801794e:	88e9      	ldrh	r1, [r5, #6]
 8017950:	4640      	mov	r0, r8
 8017952:	1b92      	subs	r2, r2, r6
 8017954:	9301      	str	r3, [sp, #4]
 8017956:	1bc9      	subs	r1, r1, r7
 8017958:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801795c:	b212      	sxth	r2, r2
 801795e:	9300      	str	r3, [sp, #0]
 8017960:	b209      	sxth	r1, r1
 8017962:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8017966:	f7fa fc07 	bl	8012178 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801796a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801796c:	b329      	cbz	r1, 80179ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801796e:	a805      	add	r0, sp, #20
 8017970:	f7ff fe5a 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017974:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8017978:	792b      	ldrb	r3, [r5, #4]
 801797a:	a907      	add	r1, sp, #28
 801797c:	1abf      	subs	r7, r7, r2
 801797e:	88ea      	ldrh	r2, [r5, #6]
 8017980:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8017982:	4417      	add	r7, r2
 8017984:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8017986:	f88d 3020 	strb.w	r3, [sp, #32]
 801798a:	4417      	add	r7, r2
 801798c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8017990:	1ab6      	subs	r6, r6, r2
 8017992:	892a      	ldrh	r2, [r5, #8]
 8017994:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8017998:	4416      	add	r6, r2
 801799a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801799c:	4416      	add	r6, r2
 801799e:	4a08      	ldr	r2, [pc, #32]	@ (80179c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80179a0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80179a4:	2600      	movs	r6, #0
 80179a6:	9207      	str	r2, [sp, #28]
 80179a8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80179ac:	6803      	ldr	r3, [r0, #0]
 80179ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80179b0:	4798      	blx	r3
 80179b2:	792b      	ldrb	r3, [r5, #4]
 80179b4:	b10b      	cbz	r3, 80179ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80179b6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80179ba:	b00a      	add	sp, #40	@ 0x28
 80179bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80179c0:	0802adc0 	.word	0x0802adc0

080179c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80179c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80179c8:	460c      	mov	r4, r1
 80179ca:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80179cc:	b088      	sub	sp, #32
 80179ce:	4605      	mov	r5, r0
 80179d0:	2900      	cmp	r1, #0
 80179d2:	d06d      	beq.n	8017ab0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80179d4:	4668      	mov	r0, sp
 80179d6:	f7ff fe27 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80179da:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 80179dc:	88e3      	ldrh	r3, [r4, #6]
 80179de:	f9bd 8000 	ldrsh.w	r8, [sp]
 80179e2:	440b      	add	r3, r1
 80179e4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 80179e8:	b21b      	sxth	r3, r3
 80179ea:	4543      	cmp	r3, r8
 80179ec:	db31      	blt.n	8017a52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80179ee:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80179f2:	44c4      	add	ip, r8
 80179f4:	fa0f fc8c 	sxth.w	ip, ip
 80179f8:	4563      	cmp	r3, ip
 80179fa:	da2a      	bge.n	8017a52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80179fc:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 80179fe:	8926      	ldrh	r6, [r4, #8]
 8017a00:	4416      	add	r6, r2
 8017a02:	b236      	sxth	r6, r6
 8017a04:	42be      	cmp	r6, r7
 8017a06:	db24      	blt.n	8017a52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017a08:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8017a0c:	4438      	add	r0, r7
 8017a0e:	b200      	sxth	r0, r0
 8017a10:	4286      	cmp	r6, r0
 8017a12:	da1e      	bge.n	8017a52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017a14:	8963      	ldrh	r3, [r4, #10]
 8017a16:	4419      	add	r1, r3
 8017a18:	b209      	sxth	r1, r1
 8017a1a:	4541      	cmp	r1, r8
 8017a1c:	db08      	blt.n	8017a30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017a1e:	4561      	cmp	r1, ip
 8017a20:	da06      	bge.n	8017a30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017a22:	89a3      	ldrh	r3, [r4, #12]
 8017a24:	441a      	add	r2, r3
 8017a26:	b212      	sxth	r2, r2
 8017a28:	42ba      	cmp	r2, r7
 8017a2a:	db01      	blt.n	8017a30 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8017a2c:	4282      	cmp	r2, r0
 8017a2e:	db10      	blt.n	8017a52 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8017a30:	4b21      	ldr	r3, [pc, #132]	@ (8017ab8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8017a32:	a904      	add	r1, sp, #16
 8017a34:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8017a36:	9304      	str	r3, [sp, #16]
 8017a38:	2302      	movs	r3, #2
 8017a3a:	f88d 3014 	strb.w	r3, [sp, #20]
 8017a3e:	2300      	movs	r3, #0
 8017a40:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017a44:	f8ad 3018 	strh.w	r3, [sp, #24]
 8017a48:	f8ad 301a 	strh.w	r3, [sp, #26]
 8017a4c:	6803      	ldr	r3, [r0, #0]
 8017a4e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8017a50:	4798      	blx	r3
 8017a52:	1d29      	adds	r1, r5, #4
 8017a54:	a802      	add	r0, sp, #8
 8017a56:	f7ff fde7 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017a5a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017a5e:	88e0      	ldrh	r0, [r4, #6]
 8017a60:	eba3 0808 	sub.w	r8, r3, r8
 8017a64:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017a68:	7921      	ldrb	r1, [r4, #4]
 8017a6a:	fa1f f888 	uxth.w	r8, r8
 8017a6e:	1bdf      	subs	r7, r3, r7
 8017a70:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8017a74:	b2bb      	uxth	r3, r7
 8017a76:	4440      	add	r0, r8
 8017a78:	8922      	ldrh	r2, [r4, #8]
 8017a7a:	8967      	ldrh	r7, [r4, #10]
 8017a7c:	4460      	add	r0, ip
 8017a7e:	89a4      	ldrh	r4, [r4, #12]
 8017a80:	441a      	add	r2, r3
 8017a82:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8017a84:	44b8      	add	r8, r7
 8017a86:	4423      	add	r3, r4
 8017a88:	f8ad 0016 	strh.w	r0, [sp, #22]
 8017a8c:	4432      	add	r2, r6
 8017a8e:	44e0      	add	r8, ip
 8017a90:	4433      	add	r3, r6
 8017a92:	4c0a      	ldr	r4, [pc, #40]	@ (8017abc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8017a94:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8017a96:	f88d 1014 	strb.w	r1, [sp, #20]
 8017a9a:	a904      	add	r1, sp, #16
 8017a9c:	9404      	str	r4, [sp, #16]
 8017a9e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8017aa2:	f8ad 801a 	strh.w	r8, [sp, #26]
 8017aa6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8017aaa:	6803      	ldr	r3, [r0, #0]
 8017aac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8017aae:	4798      	blx	r3
 8017ab0:	b008      	add	sp, #32
 8017ab2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8017ab6:	bf00      	nop
 8017ab8:	0802adc0 	.word	0x0802adc0
 8017abc:	0802add4 	.word	0x0802add4

08017ac0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8017ac0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8017ac2:	4604      	mov	r4, r0
 8017ac4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8017ac8:	3201      	adds	r2, #1
 8017aca:	d112      	bne.n	8017af2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8017acc:	2500      	movs	r5, #0
 8017ace:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8017ad2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8017ad6:	6803      	ldr	r3, [r0, #0]
 8017ad8:	9500      	str	r5, [sp, #0]
 8017ada:	466d      	mov	r5, sp
 8017adc:	f8ad 1004 	strh.w	r1, [sp, #4]
 8017ae0:	f8ad 2006 	strh.w	r2, [sp, #6]
 8017ae4:	4629      	mov	r1, r5
 8017ae6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8017ae8:	4798      	blx	r3
 8017aea:	e895 0003 	ldmia.w	r5, {r0, r1}
 8017aee:	e884 0003 	stmia.w	r4, {r0, r1}
 8017af2:	4620      	mov	r0, r4
 8017af4:	b003      	add	sp, #12
 8017af6:	bd30      	pop	{r4, r5, pc}

08017af8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8017af8:	b513      	push	{r0, r1, r4, lr}
 8017afa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8017afe:	4604      	mov	r4, r0
 8017b00:	3301      	adds	r3, #1
 8017b02:	d109      	bne.n	8017b18 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8017b04:	4601      	mov	r1, r0
 8017b06:	4668      	mov	r0, sp
 8017b08:	f7ff fd8e 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b0c:	f8bd 3000 	ldrh.w	r3, [sp]
 8017b10:	8423      	strh	r3, [r4, #32]
 8017b12:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017b16:	8463      	strh	r3, [r4, #34]	@ 0x22
 8017b18:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8017b1c:	b002      	add	sp, #8
 8017b1e:	bd10      	pop	{r4, pc}

08017b20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8017b20:	b513      	push	{r0, r1, r4, lr}
 8017b22:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8017b26:	4604      	mov	r4, r0
 8017b28:	3301      	adds	r3, #1
 8017b2a:	d109      	bne.n	8017b40 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8017b2c:	4601      	mov	r1, r0
 8017b2e:	4668      	mov	r0, sp
 8017b30:	f7ff fd7a 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017b34:	f8bd 3000 	ldrh.w	r3, [sp]
 8017b38:	8423      	strh	r3, [r4, #32]
 8017b3a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017b3e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8017b40:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8017b44:	b002      	add	sp, #8
 8017b46:	bd10      	pop	{r4, pc}

08017b48 <_ZN8touchgfx6ScreenC1Ev>:
 8017b48:	b570      	push	{r4, r5, r6, lr}
 8017b4a:	4b17      	ldr	r3, [pc, #92]	@ (8017ba8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8017b4c:	4605      	mov	r5, r0
 8017b4e:	4a17      	ldr	r2, [pc, #92]	@ (8017bac <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8017b50:	2101      	movs	r1, #1
 8017b52:	f845 3b04 	str.w	r3, [r5], #4
 8017b56:	2300      	movs	r3, #0
 8017b58:	6042      	str	r2, [r0, #4]
 8017b5a:	4604      	mov	r4, r0
 8017b5c:	8103      	strh	r3, [r0, #8]
 8017b5e:	8143      	strh	r3, [r0, #10]
 8017b60:	8183      	strh	r3, [r0, #12]
 8017b62:	81c3      	strh	r3, [r0, #14]
 8017b64:	8203      	strh	r3, [r0, #16]
 8017b66:	8243      	strh	r3, [r0, #18]
 8017b68:	8283      	strh	r3, [r0, #20]
 8017b6a:	82c3      	strh	r3, [r0, #22]
 8017b6c:	6203      	str	r3, [r0, #32]
 8017b6e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8017b70:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8017b72:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8017b76:	6343      	str	r3, [r0, #52]	@ 0x34
 8017b78:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8017b7c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8017b80:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8017b84:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8017b88:	4b09      	ldr	r3, [pc, #36]	@ (8017bb0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8017b8a:	4628      	mov	r0, r5
 8017b8c:	f9b3 6000 	ldrsh.w	r6, [r3]
 8017b90:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8017b92:	4a08      	ldr	r2, [pc, #32]	@ (8017bb4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8017b94:	f9b2 1000 	ldrsh.w	r1, [r2]
 8017b98:	4798      	blx	r3
 8017b9a:	6863      	ldr	r3, [r4, #4]
 8017b9c:	4628      	mov	r0, r5
 8017b9e:	4631      	mov	r1, r6
 8017ba0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8017ba2:	4798      	blx	r3
 8017ba4:	4620      	mov	r0, r4
 8017ba6:	bd70      	pop	{r4, r5, r6, pc}
 8017ba8:	0802adfc 	.word	0x0802adfc
 8017bac:	0802a6ac 	.word	0x0802a6ac
 8017bb0:	2000397a 	.word	0x2000397a
 8017bb4:	20003978 	.word	0x20003978

08017bb8 <_ZN8touchgfx6Screen4drawEv>:
 8017bb8:	4b09      	ldr	r3, [pc, #36]	@ (8017be0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8017bba:	b507      	push	{r0, r1, r2, lr}
 8017bbc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017bc0:	2100      	movs	r1, #0
 8017bc2:	4b08      	ldr	r3, [pc, #32]	@ (8017be4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8017bc4:	9100      	str	r1, [sp, #0]
 8017bc6:	4669      	mov	r1, sp
 8017bc8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017bcc:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017bd0:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017bd4:	6803      	ldr	r3, [r0, #0]
 8017bd6:	689b      	ldr	r3, [r3, #8]
 8017bd8:	4798      	blx	r3
 8017bda:	b003      	add	sp, #12
 8017bdc:	f85d fb04 	ldr.w	pc, [sp], #4
 8017be0:	20003978 	.word	0x20003978
 8017be4:	2000397a 	.word	0x2000397a

08017be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8017be8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bec:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8017bf0:	b089      	sub	sp, #36	@ 0x24
 8017bf2:	4680      	mov	r8, r0
 8017bf4:	460c      	mov	r4, r1
 8017bf6:	2b00      	cmp	r3, #0
 8017bf8:	4615      	mov	r5, r2
 8017bfa:	dd0e      	ble.n	8017c1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017bfc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8017c00:	2b00      	cmp	r3, #0
 8017c02:	dd0a      	ble.n	8017c1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017c04:	4628      	mov	r0, r5
 8017c06:	f7ff ff5b 	bl	8017ac0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017c0a:	4621      	mov	r1, r4
 8017c0c:	f7fe faa8 	bl	8016160 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8017c10:	69eb      	ldr	r3, [r5, #28]
 8017c12:	b928      	cbnz	r0, 8017c20 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8017c14:	461d      	mov	r5, r3
 8017c16:	2b00      	cmp	r3, #0
 8017c18:	d1f4      	bne.n	8017c04 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8017c1a:	b009      	add	sp, #36	@ 0x24
 8017c1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c20:	ae04      	add	r6, sp, #16
 8017c22:	2b00      	cmp	r3, #0
 8017c24:	f000 80b5 	beq.w	8017d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017c28:	682b      	ldr	r3, [r5, #0]
 8017c2a:	4629      	mov	r1, r5
 8017c2c:	a802      	add	r0, sp, #8
 8017c2e:	68db      	ldr	r3, [r3, #12]
 8017c30:	4798      	blx	r3
 8017c32:	4628      	mov	r0, r5
 8017c34:	f7ff ff60 	bl	8017af8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017c38:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8017c3c:	4407      	add	r7, r0
 8017c3e:	4628      	mov	r0, r5
 8017c40:	f7ff ff6e 	bl	8017b20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017c44:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017c48:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8017c4c:	b23f      	sxth	r7, r7
 8017c4e:	4418      	add	r0, r3
 8017c50:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8017c54:	4621      	mov	r1, r4
 8017c56:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017c5a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017c5e:	4630      	mov	r0, r6
 8017c60:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017c64:	f8ad 7010 	strh.w	r7, [sp, #16]
 8017c68:	f7fa fb68 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8017c6c:	4628      	mov	r0, r5
 8017c6e:	f7ff ff27 	bl	8017ac0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017c72:	ab06      	add	r3, sp, #24
 8017c74:	4602      	mov	r2, r0
 8017c76:	e896 0003 	ldmia.w	r6, {r0, r1}
 8017c7a:	e883 0003 	stmia.w	r3, {r0, r1}
 8017c7e:	4611      	mov	r1, r2
 8017c80:	4618      	mov	r0, r3
 8017c82:	f7fa fb5b 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8017c86:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8017c8a:	f9b4 1000 	ldrsh.w	r1, [r4]
 8017c8e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8017c92:	4299      	cmp	r1, r3
 8017c94:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8017c98:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8017c9c:	d10b      	bne.n	8017cb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017c9e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017ca2:	4552      	cmp	r2, sl
 8017ca4:	d107      	bne.n	8017cb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017ca6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 8017caa:	455a      	cmp	r2, fp
 8017cac:	d103      	bne.n	8017cb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8017cae:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8017cb2:	454a      	cmp	r2, r9
 8017cb4:	d06d      	beq.n	8017d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017cb6:	f1bb 0f00 	cmp.w	fp, #0
 8017cba:	dd65      	ble.n	8017d88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017cbc:	f1b9 0f00 	cmp.w	r9, #0
 8017cc0:	dd62      	ble.n	8017d88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8017cc2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8017cc6:	fa1f f08a 	uxth.w	r0, sl
 8017cca:	4552      	cmp	r2, sl
 8017ccc:	9000      	str	r0, [sp, #0]
 8017cce:	da12      	bge.n	8017cf6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8017cd0:	9301      	str	r3, [sp, #4]
 8017cd2:	9b00      	ldr	r3, [sp, #0]
 8017cd4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017cd8:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017cdc:	1a9a      	subs	r2, r3, r2
 8017cde:	f8ad 1010 	strh.w	r1, [sp, #16]
 8017ce2:	4631      	mov	r1, r6
 8017ce4:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017ce8:	4640      	mov	r0, r8
 8017cea:	f8ad 2016 	strh.w	r2, [sp, #22]
 8017cee:	69ea      	ldr	r2, [r5, #28]
 8017cf0:	f7ff ff7a 	bl	8017be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017cf4:	9b01      	ldr	r3, [sp, #4]
 8017cf6:	f9b4 2000 	ldrsh.w	r2, [r4]
 8017cfa:	b29f      	uxth	r7, r3
 8017cfc:	429a      	cmp	r2, r3
 8017cfe:	da0d      	bge.n	8017d1c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8017d00:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017d04:	1aba      	subs	r2, r7, r2
 8017d06:	f8ad a012 	strh.w	sl, [sp, #18]
 8017d0a:	4631      	mov	r1, r6
 8017d0c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8017d10:	4640      	mov	r0, r8
 8017d12:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017d16:	69ea      	ldr	r2, [r5, #28]
 8017d18:	f7ff ff66 	bl	8017be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017d1c:	8822      	ldrh	r2, [r4, #0]
 8017d1e:	445f      	add	r7, fp
 8017d20:	88a3      	ldrh	r3, [r4, #4]
 8017d22:	b2bf      	uxth	r7, r7
 8017d24:	4413      	add	r3, r2
 8017d26:	b23a      	sxth	r2, r7
 8017d28:	b29b      	uxth	r3, r3
 8017d2a:	b219      	sxth	r1, r3
 8017d2c:	4291      	cmp	r1, r2
 8017d2e:	dd0d      	ble.n	8017d4c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8017d30:	1bdb      	subs	r3, r3, r7
 8017d32:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017d36:	f8ad a012 	strh.w	sl, [sp, #18]
 8017d3a:	4631      	mov	r1, r6
 8017d3c:	f8ad 3014 	strh.w	r3, [sp, #20]
 8017d40:	4640      	mov	r0, r8
 8017d42:	f8ad 9016 	strh.w	r9, [sp, #22]
 8017d46:	69ea      	ldr	r2, [r5, #28]
 8017d48:	f7ff ff4e 	bl	8017be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017d4c:	88e2      	ldrh	r2, [r4, #6]
 8017d4e:	8863      	ldrh	r3, [r4, #2]
 8017d50:	4413      	add	r3, r2
 8017d52:	9a00      	ldr	r2, [sp, #0]
 8017d54:	444a      	add	r2, r9
 8017d56:	b29b      	uxth	r3, r3
 8017d58:	fa1f f982 	uxth.w	r9, r2
 8017d5c:	b219      	sxth	r1, r3
 8017d5e:	fa0f f289 	sxth.w	r2, r9
 8017d62:	428a      	cmp	r2, r1
 8017d64:	da15      	bge.n	8017d92 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8017d66:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8017d6a:	eba3 0309 	sub.w	r3, r3, r9
 8017d6e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8017d72:	f8ad 1014 	strh.w	r1, [sp, #20]
 8017d76:	4631      	mov	r1, r6
 8017d78:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017d7c:	f8ad 2012 	strh.w	r2, [sp, #18]
 8017d80:	f8ad 3016 	strh.w	r3, [sp, #22]
 8017d84:	69ea      	ldr	r2, [r5, #28]
 8017d86:	e001      	b.n	8017d8c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8017d88:	69ea      	ldr	r2, [r5, #28]
 8017d8a:	4621      	mov	r1, r4
 8017d8c:	4640      	mov	r0, r8
 8017d8e:	f7ff ff2b 	bl	8017be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017d92:	4628      	mov	r0, r5
 8017d94:	f7ff fe94 	bl	8017ac0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8017d98:	6861      	ldr	r1, [r4, #4]
 8017d9a:	4602      	mov	r2, r0
 8017d9c:	4633      	mov	r3, r6
 8017d9e:	6820      	ldr	r0, [r4, #0]
 8017da0:	c303      	stmia	r3!, {r0, r1}
 8017da2:	4611      	mov	r1, r2
 8017da4:	4630      	mov	r0, r6
 8017da6:	f7fa fac9 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8017daa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8017dae:	2b00      	cmp	r3, #0
 8017db0:	f77f af33 	ble.w	8017c1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017db4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8017db8:	2b00      	cmp	r3, #0
 8017dba:	f77f af2e 	ble.w	8017c1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8017dbe:	4628      	mov	r0, r5
 8017dc0:	f7ff fe9a 	bl	8017af8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8017dc4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8017dc8:	1a18      	subs	r0, r3, r0
 8017dca:	f8ad 0010 	strh.w	r0, [sp, #16]
 8017dce:	4628      	mov	r0, r5
 8017dd0:	f7ff fea6 	bl	8017b20 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8017dd4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017dd8:	4631      	mov	r1, r6
 8017dda:	1a18      	subs	r0, r3, r0
 8017ddc:	f8ad 0012 	strh.w	r0, [sp, #18]
 8017de0:	4628      	mov	r0, r5
 8017de2:	682b      	ldr	r3, [r5, #0]
 8017de4:	689b      	ldr	r3, [r3, #8]
 8017de6:	4798      	blx	r3
 8017de8:	e717      	b.n	8017c1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08017dea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8017dea:	b570      	push	{r4, r5, r6, lr}
 8017dec:	1d06      	adds	r6, r0, #4
 8017dee:	b086      	sub	sp, #24
 8017df0:	460c      	mov	r4, r1
 8017df2:	2300      	movs	r3, #0
 8017df4:	4631      	mov	r1, r6
 8017df6:	4605      	mov	r5, r0
 8017df8:	a802      	add	r0, sp, #8
 8017dfa:	9301      	str	r3, [sp, #4]
 8017dfc:	f7ff fc14 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e00:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017e04:	8822      	ldrh	r2, [r4, #0]
 8017e06:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8017e0a:	1ad2      	subs	r2, r2, r3
 8017e0c:	8863      	ldrh	r3, [r4, #2]
 8017e0e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8017e12:	1a5b      	subs	r3, r3, r1
 8017e14:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8017e18:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017e1c:	aa01      	add	r2, sp, #4
 8017e1e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8017e22:	4630      	mov	r0, r6
 8017e24:	f8ad 1016 	strh.w	r1, [sp, #22]
 8017e28:	a904      	add	r1, sp, #16
 8017e2a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017e2e:	f7fa fb5d 	bl	80124ec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8017e32:	9a01      	ldr	r2, [sp, #4]
 8017e34:	b11a      	cbz	r2, 8017e3e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8017e36:	4621      	mov	r1, r4
 8017e38:	4628      	mov	r0, r5
 8017e3a:	f7ff fed5 	bl	8017be8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8017e3e:	b006      	add	sp, #24
 8017e40:	bd70      	pop	{r4, r5, r6, pc}

08017e42 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8017e42:	4602      	mov	r2, r0
 8017e44:	b530      	push	{r4, r5, lr}
 8017e46:	4604      	mov	r4, r0
 8017e48:	b085      	sub	sp, #20
 8017e4a:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8017e4e:	460d      	mov	r5, r1
 8017e50:	466b      	mov	r3, sp
 8017e52:	6851      	ldr	r1, [r2, #4]
 8017e54:	c303      	stmia	r3!, {r0, r1}
 8017e56:	4629      	mov	r1, r5
 8017e58:	4668      	mov	r0, sp
 8017e5a:	f7fa fa6f 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 8017e5e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8017e62:	b12b      	cbz	r3, 8017e70 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8017e64:	4669      	mov	r1, sp
 8017e66:	4620      	mov	r0, r4
 8017e68:	f7ff ffbf 	bl	8017dea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8017e6c:	b005      	add	sp, #20
 8017e6e:	bd30      	pop	{r4, r5, pc}
 8017e70:	3404      	adds	r4, #4
 8017e72:	a802      	add	r0, sp, #8
 8017e74:	4621      	mov	r1, r4
 8017e76:	f7ff fbd7 	bl	8017628 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8017e7a:	f8bd 3000 	ldrh.w	r3, [sp]
 8017e7e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8017e82:	4669      	mov	r1, sp
 8017e84:	4620      	mov	r0, r4
 8017e86:	1a9b      	subs	r3, r3, r2
 8017e88:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017e8c:	f8ad 3000 	strh.w	r3, [sp]
 8017e90:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8017e94:	1a9b      	subs	r3, r3, r2
 8017e96:	f8ad 3002 	strh.w	r3, [sp, #2]
 8017e9a:	f7fa faee 	bl	801247a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8017e9e:	e7e5      	b.n	8017e6c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08017ea0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8017ea0:	460b      	mov	r3, r1
 8017ea2:	680a      	ldr	r2, [r1, #0]
 8017ea4:	1d01      	adds	r1, r0, #4
 8017ea6:	6992      	ldr	r2, [r2, #24]
 8017ea8:	4618      	mov	r0, r3
 8017eaa:	4710      	bx	r2

08017eac <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8017eac:	4298      	cmp	r0, r3
 8017eae:	d200      	bcs.n	8017eb2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8017eb0:	b913      	cbnz	r3, 8017eb8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8017eb2:	440a      	add	r2, r1
 8017eb4:	b210      	sxth	r0, r2
 8017eb6:	4770      	bx	lr
 8017eb8:	ee07 2a90 	vmov	s15, r2
 8017ebc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8017ec0:	ee07 0a90 	vmov	s15, r0
 8017ec4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8017ec8:	ee67 7a27 	vmul.f32	s15, s14, s15
 8017ecc:	ee07 3a10 	vmov	s14, r3
 8017ed0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8017ed4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017ed8:	ee07 1a90 	vmov	s15, r1
 8017edc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017ee0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8017ee4:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8017ee8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8017eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017ef0:	bfcc      	ite	gt
 8017ef2:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8017ef6:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8017efa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017efe:	ee17 3a90 	vmov	r3, s15
 8017f02:	b218      	sxth	r0, r3
 8017f04:	4770      	bx	lr

08017f06 <_ZN8touchgfx15EasingEquations12linearEaseInEtsst>:
 8017f06:	f7ff bfd1 	b.w	8017eac <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>

08017f0a <_ZN8touchgfx12TextProviderC1Ev>:
 8017f0a:	b538      	push	{r3, r4, r5, lr}
 8017f0c:	2500      	movs	r5, #0
 8017f0e:	2302      	movs	r3, #2
 8017f10:	4604      	mov	r4, r0
 8017f12:	220e      	movs	r2, #14
 8017f14:	7403      	strb	r3, [r0, #16]
 8017f16:	4629      	mov	r1, r5
 8017f18:	6145      	str	r5, [r0, #20]
 8017f1a:	7605      	strb	r5, [r0, #24]
 8017f1c:	83c5      	strh	r5, [r0, #30]
 8017f1e:	8405      	strh	r5, [r0, #32]
 8017f20:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8017f22:	8705      	strh	r5, [r0, #56]	@ 0x38
 8017f24:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8017f26:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8017f2a:	e9c0 5500 	strd	r5, r5, [r0]
 8017f2e:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8017f32:	304c      	adds	r0, #76	@ 0x4c
 8017f34:	f00f ffd5 	bl	8027ee2 <memset>
 8017f38:	2301      	movs	r3, #1
 8017f3a:	4620      	mov	r0, r4
 8017f3c:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8017f40:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8017f44:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8017f48:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8017f4c:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8017f50:	f7f7 fa6a 	bl	800f428 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8017f54:	4620      	mov	r0, r4
 8017f56:	bd38      	pop	{r3, r4, r5, pc}

08017f58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8017f58:	b530      	push	{r4, r5, lr}
 8017f5a:	2500      	movs	r5, #0
 8017f5c:	2401      	movs	r4, #1
 8017f5e:	6843      	ldr	r3, [r0, #4]
 8017f60:	b913      	cbnz	r3, 8017f68 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8017f62:	6803      	ldr	r3, [r0, #0]
 8017f64:	b313      	cbz	r3, 8017fac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017f66:	6043      	str	r3, [r0, #4]
 8017f68:	7e03      	ldrb	r3, [r0, #24]
 8017f6a:	b143      	cbz	r3, 8017f7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8017f6c:	6943      	ldr	r3, [r0, #20]
 8017f6e:	b12b      	cbz	r3, 8017f7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017f70:	881a      	ldrh	r2, [r3, #0]
 8017f72:	b11a      	cbz	r2, 8017f7c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8017f74:	1c9a      	adds	r2, r3, #2
 8017f76:	6142      	str	r2, [r0, #20]
 8017f78:	8818      	ldrh	r0, [r3, #0]
 8017f7a:	bd30      	pop	{r4, r5, pc}
 8017f7c:	7605      	strb	r5, [r0, #24]
 8017f7e:	6843      	ldr	r3, [r0, #4]
 8017f80:	8819      	ldrh	r1, [r3, #0]
 8017f82:	b199      	cbz	r1, 8017fac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8017f84:	1c9a      	adds	r2, r3, #2
 8017f86:	2902      	cmp	r1, #2
 8017f88:	6042      	str	r2, [r0, #4]
 8017f8a:	d1f5      	bne.n	8017f78 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8017f8c:	7c03      	ldrb	r3, [r0, #16]
 8017f8e:	2b01      	cmp	r3, #1
 8017f90:	d8e5      	bhi.n	8017f5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017f92:	1c5a      	adds	r2, r3, #1
 8017f94:	3302      	adds	r3, #2
 8017f96:	7402      	strb	r2, [r0, #16]
 8017f98:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8017f9c:	6143      	str	r3, [r0, #20]
 8017f9e:	2b00      	cmp	r3, #0
 8017fa0:	d0dd      	beq.n	8017f5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017fa2:	881b      	ldrh	r3, [r3, #0]
 8017fa4:	2b00      	cmp	r3, #0
 8017fa6:	d0da      	beq.n	8017f5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017fa8:	7604      	strb	r4, [r0, #24]
 8017faa:	e7d8      	b.n	8017f5e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8017fac:	2000      	movs	r0, #0
 8017fae:	e7e4      	b.n	8017f7a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08017fb0 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8017fb0:	6001      	str	r1, [r0, #0]
 8017fb2:	2100      	movs	r1, #0
 8017fb4:	b430      	push	{r4, r5}
 8017fb6:	6041      	str	r1, [r0, #4]
 8017fb8:	6815      	ldr	r5, [r2, #0]
 8017fba:	6085      	str	r5, [r0, #8]
 8017fbc:	6852      	ldr	r2, [r2, #4]
 8017fbe:	6443      	str	r3, [r0, #68]	@ 0x44
 8017fc0:	9b02      	ldr	r3, [sp, #8]
 8017fc2:	60c2      	str	r2, [r0, #12]
 8017fc4:	7401      	strb	r1, [r0, #16]
 8017fc6:	6141      	str	r1, [r0, #20]
 8017fc8:	7601      	strb	r1, [r0, #24]
 8017fca:	8701      	strh	r1, [r0, #56]	@ 0x38
 8017fcc:	8401      	strh	r1, [r0, #32]
 8017fce:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8017fd2:	6483      	str	r3, [r0, #72]	@ 0x48
 8017fd4:	bc30      	pop	{r4, r5}
 8017fd6:	f7f7 ba27 	b.w	800f428 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08017fda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8017fda:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017fdc:	4605      	mov	r5, r0
 8017fde:	4608      	mov	r0, r1
 8017fe0:	b1f1      	cbz	r1, 8018020 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 8017fe2:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8017fe6:	460b      	mov	r3, r1
 8017fe8:	f101 0708 	add.w	r7, r1, #8
 8017fec:	4622      	mov	r2, r4
 8017fee:	6818      	ldr	r0, [r3, #0]
 8017ff0:	3308      	adds	r3, #8
 8017ff2:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8017ff6:	4626      	mov	r6, r4
 8017ff8:	42bb      	cmp	r3, r7
 8017ffa:	c603      	stmia	r6!, {r0, r1}
 8017ffc:	4634      	mov	r4, r6
 8017ffe:	d1f6      	bne.n	8017fee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8018000:	6818      	ldr	r0, [r3, #0]
 8018002:	6030      	str	r0, [r6, #0]
 8018004:	4610      	mov	r0, r2
 8018006:	889b      	ldrh	r3, [r3, #4]
 8018008:	80b3      	strh	r3, [r6, #4]
 801800a:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 801800e:	015b      	lsls	r3, r3, #5
 8018010:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8018014:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8018018:	430b      	orrs	r3, r1
 801801a:	425b      	negs	r3, r3
 801801c:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8018020:	bdf0      	pop	{r4, r5, r6, r7, pc}

08018022 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8018022:	b538      	push	{r3, r4, r5, lr}
 8018024:	460c      	mov	r4, r1
 8018026:	6811      	ldr	r1, [r2, #0]
 8018028:	4610      	mov	r0, r2
 801802a:	68cd      	ldr	r5, [r1, #12]
 801802c:	4619      	mov	r1, r3
 801802e:	47a8      	blx	r5
 8018030:	2800      	cmp	r0, #0
 8018032:	bf08      	it	eq
 8018034:	4620      	moveq	r0, r4
 8018036:	bd38      	pop	{r3, r4, r5, pc}

08018038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8018038:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801803c:	468c      	mov	ip, r1
 801803e:	4605      	mov	r5, r0
 8018040:	4614      	mov	r4, r2
 8018042:	b942      	cbnz	r2, 8018056 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8018044:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8018048:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 801804c:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8018050:	4620      	mov	r0, r4
 8018052:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018056:	7b50      	ldrb	r0, [r2, #13]
 8018058:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 801805c:	8893      	ldrh	r3, [r2, #4]
 801805e:	0106      	lsls	r6, r0, #4
 8018060:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8018064:	79e6      	ldrb	r6, [r4, #7]
 8018066:	4316      	orrs	r6, r2
 8018068:	185a      	adds	r2, r3, r1
 801806a:	b291      	uxth	r1, r2
 801806c:	b2b7      	uxth	r7, r6
 801806e:	291d      	cmp	r1, #29
 8018070:	d87f      	bhi.n	8018172 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 8018072:	2201      	movs	r2, #1
 8018074:	10f6      	asrs	r6, r6, #3
 8018076:	408a      	lsls	r2, r1
 8018078:	498b      	ldr	r1, [pc, #556]	@ (80182a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
 801807a:	420a      	tst	r2, r1
 801807c:	d12e      	bne.n	80180dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 801807e:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8018082:	d076      	beq.n	8018172 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 8018084:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8018088:	4623      	mov	r3, r4
 801808a:	f104 0e08 	add.w	lr, r4, #8
 801808e:	4614      	mov	r4, r2
 8018090:	6818      	ldr	r0, [r3, #0]
 8018092:	3308      	adds	r3, #8
 8018094:	f853 1c04 	ldr.w	r1, [r3, #-4]
 8018098:	4694      	mov	ip, r2
 801809a:	4573      	cmp	r3, lr
 801809c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80180a0:	4662      	mov	r2, ip
 80180a2:	d1f5      	bne.n	8018090 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 80180a4:	6818      	ldr	r0, [r3, #0]
 80180a6:	f8cc 0000 	str.w	r0, [ip]
 80180aa:	889b      	ldrh	r3, [r3, #4]
 80180ac:	f8ac 3004 	strh.w	r3, [ip, #4]
 80180b0:	b2b3      	uxth	r3, r6
 80180b2:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 80180b6:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 80180ba:	1aca      	subs	r2, r1, r3
 80180bc:	1bcf      	subs	r7, r1, r7
 80180be:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80180c2:	b292      	uxth	r2, r2
 80180c4:	1afb      	subs	r3, r7, r3
 80180c6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 80180ca:	10d2      	asrs	r2, r2, #3
 80180cc:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80180d0:	4302      	orrs	r2, r0
 80180d2:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 80180d6:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 80180da:	e7b9      	b.n	8018050 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80180dc:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 80180e0:	4623      	mov	r3, r4
 80180e2:	f104 0808 	add.w	r8, r4, #8
 80180e6:	4614      	mov	r4, r2
 80180e8:	6818      	ldr	r0, [r3, #0]
 80180ea:	3308      	adds	r3, #8
 80180ec:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80180f0:	4696      	mov	lr, r2
 80180f2:	4543      	cmp	r3, r8
 80180f4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80180f8:	4672      	mov	r2, lr
 80180fa:	d1f5      	bne.n	80180e8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 80180fc:	6818      	ldr	r0, [r3, #0]
 80180fe:	f8ce 0000 	str.w	r0, [lr]
 8018102:	889b      	ldrh	r3, [r3, #4]
 8018104:	f8ae 3004 	strh.w	r3, [lr, #4]
 8018108:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 801810a:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 801810e:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8018110:	f640 6333 	movw	r3, #3635	@ 0xe33
 8018114:	4299      	cmp	r1, r3
 8018116:	d111      	bne.n	801813c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
 8018118:	f8dc 3000 	ldr.w	r3, [ip]
 801811c:	4660      	mov	r0, ip
 801811e:	68db      	ldr	r3, [r3, #12]
 8018120:	4798      	blx	r3
 8018122:	7b41      	ldrb	r1, [r0, #13]
 8018124:	00cb      	lsls	r3, r1, #3
 8018126:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801812a:	7a03      	ldrb	r3, [r0, #8]
 801812c:	4313      	orrs	r3, r2
 801812e:	064a      	lsls	r2, r1, #25
 8018130:	bf44      	itt	mi
 8018132:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018136:	b21b      	sxthmi	r3, r3
 8018138:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 801813c:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8018140:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8018144:	443b      	add	r3, r7
 8018146:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801814a:	4433      	add	r3, r6
 801814c:	b29b      	uxth	r3, r3
 801814e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8018152:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8018156:	10db      	asrs	r3, r3, #3
 8018158:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 801815c:	4313      	orrs	r3, r2
 801815e:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8018162:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8018166:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 801816a:	1a9b      	subs	r3, r3, r2
 801816c:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8018170:	e76e      	b.n	8018050 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8018172:	f023 0204 	bic.w	r2, r3, #4
 8018176:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801817a:	428a      	cmp	r2, r1
 801817c:	d003      	beq.n	8018186 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
 801817e:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8018182:	4293      	cmp	r3, r2
 8018184:	d138      	bne.n	80181f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
 8018186:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 801818a:	4622      	mov	r2, r4
 801818c:	f104 0808 	add.w	r8, r4, #8
 8018190:	4634      	mov	r4, r6
 8018192:	6810      	ldr	r0, [r2, #0]
 8018194:	3208      	adds	r2, #8
 8018196:	f852 1c04 	ldr.w	r1, [r2, #-4]
 801819a:	46b6      	mov	lr, r6
 801819c:	4542      	cmp	r2, r8
 801819e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80181a2:	4676      	mov	r6, lr
 80181a4:	d1f5      	bne.n	8018192 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
 80181a6:	6810      	ldr	r0, [r2, #0]
 80181a8:	3b01      	subs	r3, #1
 80181aa:	4621      	mov	r1, r4
 80181ac:	f8ce 0000 	str.w	r0, [lr]
 80181b0:	b29b      	uxth	r3, r3
 80181b2:	8892      	ldrh	r2, [r2, #4]
 80181b4:	4628      	mov	r0, r5
 80181b6:	f8ae 2004 	strh.w	r2, [lr, #4]
 80181ba:	4662      	mov	r2, ip
 80181bc:	f7ff ff31 	bl	8018022 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80181c0:	7b41      	ldrb	r1, [r0, #13]
 80181c2:	00cb      	lsls	r3, r1, #3
 80181c4:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80181c8:	7a03      	ldrb	r3, [r0, #8]
 80181ca:	0648      	lsls	r0, r1, #25
 80181cc:	ea43 0302 	orr.w	r3, r3, r2
 80181d0:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 80181d4:	bf44      	itt	mi
 80181d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80181da:	b21b      	sxthmi	r3, r3
 80181dc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 80181e0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 80181e4:	005b      	lsls	r3, r3, #1
 80181e6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80181ea:	4313      	orrs	r3, r2
 80181ec:	115a      	asrs	r2, r3, #5
 80181ee:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80181f2:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 80181f6:	e047      	b.n	8018288 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
 80181f8:	00c2      	lsls	r2, r0, #3
 80181fa:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80181fe:	7a22      	ldrb	r2, [r4, #8]
 8018200:	430a      	orrs	r2, r1
 8018202:	0641      	lsls	r1, r0, #25
 8018204:	f640 6109 	movw	r1, #3593	@ 0xe09
 8018208:	bf44      	itt	mi
 801820a:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 801820e:	b212      	sxthmi	r2, r2
 8018210:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8018214:	f023 0210 	bic.w	r2, r3, #16
 8018218:	428a      	cmp	r2, r1
 801821a:	d003      	beq.n	8018224 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
 801821c:	f640 6213 	movw	r2, #3603	@ 0xe13
 8018220:	4293      	cmp	r3, r2
 8018222:	d13e      	bne.n	80182a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
 8018224:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8018228:	f104 0808 	add.w	r8, r4, #8
 801822c:	4696      	mov	lr, r2
 801822e:	6820      	ldr	r0, [r4, #0]
 8018230:	3408      	adds	r4, #8
 8018232:	f854 1c04 	ldr.w	r1, [r4, #-4]
 8018236:	4616      	mov	r6, r2
 8018238:	4544      	cmp	r4, r8
 801823a:	c603      	stmia	r6!, {r0, r1}
 801823c:	4632      	mov	r2, r6
 801823e:	d1f6      	bne.n	801822e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
 8018240:	6820      	ldr	r0, [r4, #0]
 8018242:	6030      	str	r0, [r6, #0]
 8018244:	4628      	mov	r0, r5
 8018246:	88a1      	ldrh	r1, [r4, #4]
 8018248:	4674      	mov	r4, lr
 801824a:	80b1      	strh	r1, [r6, #4]
 801824c:	4671      	mov	r1, lr
 801824e:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8018252:	0076      	lsls	r6, r6, #1
 8018254:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8018258:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 801825c:	4316      	orrs	r6, r2
 801825e:	f640 6213 	movw	r2, #3603	@ 0xe13
 8018262:	4293      	cmp	r3, r2
 8018264:	4662      	mov	r2, ip
 8018266:	bf16      	itet	ne
 8018268:	f103 33ff 	addne.w	r3, r3, #4294967295
 801826c:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8018270:	b29b      	uxthne	r3, r3
 8018272:	f7ff fed6 	bl	8018022 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8018276:	7b43      	ldrb	r3, [r0, #13]
 8018278:	7a82      	ldrb	r2, [r0, #10]
 801827a:	005b      	lsls	r3, r3, #1
 801827c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8018280:	4313      	orrs	r3, r2
 8018282:	1af6      	subs	r6, r6, r3
 8018284:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8018288:	7b61      	ldrb	r1, [r4, #13]
 801828a:	00cb      	lsls	r3, r1, #3
 801828c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8018290:	7a23      	ldrb	r3, [r4, #8]
 8018292:	4313      	orrs	r3, r2
 8018294:	064a      	lsls	r2, r1, #25
 8018296:	bf44      	itt	mi
 8018298:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801829c:	b21b      	sxthmi	r3, r3
 801829e:	1bdb      	subs	r3, r3, r7
 80182a0:	e719      	b.n	80180d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80182a2:	2300      	movs	r3, #0
 80182a4:	e7a5      	b.n	80181f2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
 80182a6:	bf00      	nop
 80182a8:	3fc00079 	.word	0x3fc00079

080182ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80182ac:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80182b0:	4604      	mov	r4, r0
 80182b2:	b942      	cbnz	r2, 80182c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80182b4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80182b8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 80182bc:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 80182c0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80182c4:	e047      	b.n	8018356 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80182c6:	7b51      	ldrb	r1, [r2, #13]
 80182c8:	8893      	ldrh	r3, [r2, #4]
 80182ca:	010d      	lsls	r5, r1, #4
 80182cc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 80182d0:	79d5      	ldrb	r5, [r2, #7]
 80182d2:	4305      	orrs	r5, r0
 80182d4:	2d04      	cmp	r5, #4
 80182d6:	bfcc      	ite	gt
 80182d8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80182dc:	f04f 0e01 	movle.w	lr, #1
 80182e0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 80182e4:	f200 80ab 	bhi.w	801843e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80182e8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 80182ec:	4283      	cmp	r3, r0
 80182ee:	d216      	bcs.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80182f0:	f240 605b 	movw	r0, #1627	@ 0x65b
 80182f4:	4283      	cmp	r3, r0
 80182f6:	d859      	bhi.n	80183ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80182f8:	f240 6057 	movw	r0, #1623	@ 0x657
 80182fc:	4283      	cmp	r3, r0
 80182fe:	d20e      	bcs.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018300:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8018304:	d24a      	bcs.n	801839c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8018306:	f240 604e 	movw	r0, #1614	@ 0x64e
 801830a:	4283      	cmp	r3, r0
 801830c:	d207      	bcs.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801830e:	f240 601a 	movw	r0, #1562	@ 0x61a
 8018312:	4283      	cmp	r3, r0
 8018314:	d02a      	beq.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018316:	d821      	bhi.n	801835c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8018318:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801831c:	d35b      	bcc.n	80183d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801831e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8018322:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8018326:	f040 80d0 	bne.w	80184ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801832a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801832e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8018332:	f040 80ca 	bne.w	80184ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8018336:	00cb      	lsls	r3, r1, #3
 8018338:	0649      	lsls	r1, r1, #25
 801833a:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801833e:	7a13      	ldrb	r3, [r2, #8]
 8018340:	ea43 0300 	orr.w	r3, r3, r0
 8018344:	bf44      	itt	mi
 8018346:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801834a:	b21b      	sxthmi	r3, r3
 801834c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8018350:	1b5d      	subs	r5, r3, r5
 8018352:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8018356:	4610      	mov	r0, r2
 8018358:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801835c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8018360:	4283      	cmp	r3, r0
 8018362:	d338      	bcc.n	80183d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8018364:	f240 604c 	movw	r0, #1612	@ 0x64c
 8018368:	4283      	cmp	r3, r0
 801836a:	d9d8      	bls.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801836c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8018370:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8018374:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8018378:	f040 80f3 	bne.w	8018562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 801837c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8018380:	f040 80ef 	bne.w	8018562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8018384:	00cb      	lsls	r3, r1, #3
 8018386:	064e      	lsls	r6, r1, #25
 8018388:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801838c:	7a13      	ldrb	r3, [r2, #8]
 801838e:	ea43 0300 	orr.w	r3, r3, r0
 8018392:	bf44      	itt	mi
 8018394:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018398:	b21b      	sxthmi	r3, r3
 801839a:	e7d9      	b.n	8018350 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801839c:	f240 6054 	movw	r0, #1620	@ 0x654
 80183a0:	4283      	cmp	r3, r0
 80183a2:	d8e3      	bhi.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80183a4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80183a8:	d9e0      	bls.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80183aa:	e7b8      	b.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183ac:	f240 6074 	movw	r0, #1652	@ 0x674
 80183b0:	4283      	cmp	r3, r0
 80183b2:	d0b4      	beq.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183b4:	d82d      	bhi.n	8018412 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80183b6:	f240 605e 	movw	r0, #1630	@ 0x65e
 80183ba:	4283      	cmp	r3, r0
 80183bc:	d804      	bhi.n	80183c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80183be:	f240 605d 	movw	r0, #1629	@ 0x65d
 80183c2:	4283      	cmp	r3, r0
 80183c4:	d3d2      	bcc.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80183c6:	e7aa      	b.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183c8:	f240 605f 	movw	r0, #1631	@ 0x65f
 80183cc:	4283      	cmp	r3, r0
 80183ce:	d0cd      	beq.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80183d0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80183d4:	d0a3      	beq.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80183d6:	00cb      	lsls	r3, r1, #3
 80183d8:	0649      	lsls	r1, r1, #25
 80183da:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80183de:	7a13      	ldrb	r3, [r2, #8]
 80183e0:	ea43 0300 	orr.w	r3, r3, r0
 80183e4:	bf44      	itt	mi
 80183e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80183ea:	b21b      	sxthmi	r3, r3
 80183ec:	1b5d      	subs	r5, r3, r5
 80183ee:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80183f2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80183f6:	7b53      	ldrb	r3, [r2, #13]
 80183f8:	015b      	lsls	r3, r3, #5
 80183fa:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80183fe:	7993      	ldrb	r3, [r2, #6]
 8018400:	430b      	orrs	r3, r1
 8018402:	2105      	movs	r1, #5
 8018404:	005b      	lsls	r3, r3, #1
 8018406:	fb93 f3f1 	sdiv	r3, r3, r1
 801840a:	f992 1009 	ldrsb.w	r1, [r2, #9]
 801840e:	440b      	add	r3, r1
 8018410:	e756      	b.n	80182c0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8018412:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8018416:	4283      	cmp	r3, r0
 8018418:	d809      	bhi.n	801842e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801841a:	f240 60df 	movw	r0, #1759	@ 0x6df
 801841e:	4283      	cmp	r3, r0
 8018420:	f4bf af7d 	bcs.w	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018424:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8018428:	2b05      	cmp	r3, #5
 801842a:	d8d4      	bhi.n	80183d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801842c:	e777      	b.n	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801842e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8018432:	4283      	cmp	r3, r0
 8018434:	d09a      	beq.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8018436:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801843a:	4283      	cmp	r3, r0
 801843c:	e7ca      	b.n	80183d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801843e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8018442:	d22b      	bcs.n	801849c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8018444:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8018448:	4283      	cmp	r3, r0
 801844a:	d28f      	bcs.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801844c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8018450:	4283      	cmp	r3, r0
 8018452:	d816      	bhi.n	8018482 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8018454:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8018458:	4283      	cmp	r3, r0
 801845a:	f4bf af60 	bcs.w	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801845e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8018462:	4283      	cmp	r3, r0
 8018464:	d80a      	bhi.n	801847c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8018466:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801846a:	4283      	cmp	r3, r0
 801846c:	f4bf af57 	bcs.w	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8018470:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8018474:	4283      	cmp	r3, r0
 8018476:	f43f af79 	beq.w	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801847a:	e7ac      	b.n	80183d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801847c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8018480:	e7f8      	b.n	8018474 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8018482:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8018486:	4283      	cmp	r3, r0
 8018488:	d802      	bhi.n	8018490 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801848a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801848e:	e798      	b.n	80183c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8018490:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8018494:	4283      	cmp	r3, r0
 8018496:	f47f af42 	bne.w	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801849a:	e767      	b.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801849c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 80184a0:	4283      	cmp	r3, r0
 80184a2:	f43f af63 	beq.w	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80184a6:	d802      	bhi.n	80184ae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80184a8:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 80184ac:	e7f2      	b.n	8018494 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80184ae:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80184b2:	4283      	cmp	r3, r0
 80184b4:	d805      	bhi.n	80184c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80184b6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80184ba:	4283      	cmp	r3, r0
 80184bc:	f4ff af2f 	bcc.w	801831e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80184c0:	e754      	b.n	801836c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80184c2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80184c6:	4283      	cmp	r3, r0
 80184c8:	e7af      	b.n	801842a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80184ca:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80184ce:	4617      	mov	r7, r2
 80184d0:	f102 0808 	add.w	r8, r2, #8
 80184d4:	4666      	mov	r6, ip
 80184d6:	6838      	ldr	r0, [r7, #0]
 80184d8:	3708      	adds	r7, #8
 80184da:	f857 1c04 	ldr.w	r1, [r7, #-4]
 80184de:	46e6      	mov	lr, ip
 80184e0:	4547      	cmp	r7, r8
 80184e2:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80184e6:	46f4      	mov	ip, lr
 80184e8:	d1f5      	bne.n	80184d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80184ea:	6838      	ldr	r0, [r7, #0]
 80184ec:	f8ce 0000 	str.w	r0, [lr]
 80184f0:	88b9      	ldrh	r1, [r7, #4]
 80184f2:	f8ae 1004 	strh.w	r1, [lr, #4]
 80184f6:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80184fa:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80184fe:	d009      	beq.n	8018514 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 8018500:	7b51      	ldrb	r1, [r2, #13]
 8018502:	7992      	ldrb	r2, [r2, #6]
 8018504:	0149      	lsls	r1, r1, #5
 8018506:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801850a:	4311      	orrs	r1, r2
 801850c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8018510:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8018514:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8018518:	b2ad      	uxth	r5, r5
 801851a:	d00d      	beq.n	8018538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 801851c:	442b      	add	r3, r5
 801851e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8018522:	b29b      	uxth	r3, r3
 8018524:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8018528:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801852c:	10db      	asrs	r3, r3, #3
 801852e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8018532:	4313      	orrs	r3, r2
 8018534:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8018538:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801853c:	00cb      	lsls	r3, r1, #3
 801853e:	064f      	lsls	r7, r1, #25
 8018540:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8018544:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8018548:	ea43 0302 	orr.w	r3, r3, r2
 801854c:	bf44      	itt	mi
 801854e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8018552:	b21b      	sxthmi	r3, r3
 8018554:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8018558:	1b5b      	subs	r3, r3, r5
 801855a:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801855e:	4632      	mov	r2, r6
 8018560:	e6f9      	b.n	8018356 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8018562:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8018566:	4617      	mov	r7, r2
 8018568:	f102 0908 	add.w	r9, r2, #8
 801856c:	4666      	mov	r6, ip
 801856e:	6838      	ldr	r0, [r7, #0]
 8018570:	3708      	adds	r7, #8
 8018572:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8018576:	46e0      	mov	r8, ip
 8018578:	454f      	cmp	r7, r9
 801857a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801857e:	46c4      	mov	ip, r8
 8018580:	d1f5      	bne.n	801856e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 8018582:	6838      	ldr	r0, [r7, #0]
 8018584:	f8c8 0000 	str.w	r0, [r8]
 8018588:	88b9      	ldrh	r1, [r7, #4]
 801858a:	f8a8 1004 	strh.w	r1, [r8, #4]
 801858e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 8018592:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8018596:	d009      	beq.n	80185ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8018598:	7b51      	ldrb	r1, [r2, #13]
 801859a:	7992      	ldrb	r2, [r2, #6]
 801859c:	0149      	lsls	r1, r1, #5
 801859e:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80185a2:	4311      	orrs	r1, r2
 80185a4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80185a8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80185ac:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80185b0:	d00e      	beq.n	80185d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 80185b2:	eba3 030e 	sub.w	r3, r3, lr
 80185b6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80185ba:	b29b      	uxth	r3, r3
 80185bc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80185c0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80185c4:	10db      	asrs	r3, r3, #3
 80185c6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80185ca:	4313      	orrs	r3, r2
 80185cc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80185d0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80185d4:	00cb      	lsls	r3, r1, #3
 80185d6:	0648      	lsls	r0, r1, #25
 80185d8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80185dc:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80185e0:	ea43 0302 	orr.w	r3, r3, r2
 80185e4:	bf44      	itt	mi
 80185e6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80185ea:	b21b      	sxthmi	r3, r3
 80185ec:	1b5d      	subs	r5, r3, r5
 80185ee:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80185f2:	e7b4      	b.n	801855e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

080185f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80185f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80185f8:	461e      	mov	r6, r3
 80185fa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80185fc:	4604      	mov	r4, r0
 80185fe:	4617      	mov	r7, r2
 8018600:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018604:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8018608:	f7f6 fe68 	bl	800f2dc <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801860c:	4605      	mov	r5, r0
 801860e:	b918      	cbnz	r0, 8018618 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8018610:	6030      	str	r0, [r6, #0]
 8018612:	4628      	mov	r0, r5
 8018614:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018618:	683b      	ldr	r3, [r7, #0]
 801861a:	4601      	mov	r1, r0
 801861c:	4638      	mov	r0, r7
 801861e:	68db      	ldr	r3, [r3, #12]
 8018620:	4798      	blx	r3
 8018622:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8018626:	4602      	mov	r2, r0
 8018628:	6030      	str	r0, [r6, #0]
 801862a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801862e:	d213      	bcs.n	8018658 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8018630:	4643      	mov	r3, r8
 8018632:	4639      	mov	r1, r7
 8018634:	4620      	mov	r0, r4
 8018636:	f7ff fe39 	bl	80182ac <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801863a:	6030      	str	r0, [r6, #0]
 801863c:	6833      	ldr	r3, [r6, #0]
 801863e:	b143      	cbz	r3, 8018652 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8018640:	7b5a      	ldrb	r2, [r3, #13]
 8018642:	7a9b      	ldrb	r3, [r3, #10]
 8018644:	0052      	lsls	r2, r2, #1
 8018646:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801864a:	4313      	orrs	r3, r2
 801864c:	bf0c      	ite	eq
 801864e:	2301      	moveq	r3, #1
 8018650:	2300      	movne	r3, #0
 8018652:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8018656:	e7dc      	b.n	8018612 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8018658:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801865c:	b29b      	uxth	r3, r3
 801865e:	2b7f      	cmp	r3, #127	@ 0x7f
 8018660:	d804      	bhi.n	801866c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8018662:	4639      	mov	r1, r7
 8018664:	4620      	mov	r0, r4
 8018666:	f7ff fce7 	bl	8018038 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801866a:	e7e6      	b.n	801863a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 801866c:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8018670:	2b00      	cmp	r3, #0
 8018672:	d0e3      	beq.n	801863c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8018674:	f640 1302 	movw	r3, #2306	@ 0x902
 8018678:	429d      	cmp	r5, r3
 801867a:	d1df      	bne.n	801863c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801867c:	4601      	mov	r1, r0
 801867e:	4620      	mov	r0, r4
 8018680:	f7ff fcab 	bl	8017fda <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8018684:	e7d9      	b.n	801863a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08018686 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8018686:	b510      	push	{r4, lr}
 8018688:	4604      	mov	r4, r0
 801868a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 801868e:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8018690:	b1e1      	cbz	r1, 80186cc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8018692:	2b0a      	cmp	r3, #10
 8018694:	d02d      	beq.n	80186f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8018696:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 8018698:	3901      	subs	r1, #1
 801869a:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 801869e:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80186a0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80186a4:	1c51      	adds	r1, r2, #1
 80186a6:	b289      	uxth	r1, r1
 80186a8:	2901      	cmp	r1, #1
 80186aa:	bf8a      	itet	hi
 80186ac:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80186b0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80186b2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80186b4:	1c5a      	adds	r2, r3, #1
 80186b6:	8722      	strh	r2, [r4, #56]	@ 0x38
 80186b8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80186ba:	4413      	add	r3, r2
 80186bc:	b29b      	uxth	r3, r3
 80186be:	2b09      	cmp	r3, #9
 80186c0:	bf88      	it	hi
 80186c2:	3b0a      	subhi	r3, #10
 80186c4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80186c8:	8458      	strh	r0, [r3, #34]	@ 0x22
 80186ca:	e7de      	b.n	801868a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80186cc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80186ce:	2b0a      	cmp	r3, #10
 80186d0:	d00f      	beq.n	80186f2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80186d2:	4620      	mov	r0, r4
 80186d4:	f7ff fc40 	bl	8017f58 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80186d8:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80186da:	1c5a      	adds	r2, r3, #1
 80186dc:	8722      	strh	r2, [r4, #56]	@ 0x38
 80186de:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80186e0:	4413      	add	r3, r2
 80186e2:	b29b      	uxth	r3, r3
 80186e4:	2b09      	cmp	r3, #9
 80186e6:	bf88      	it	hi
 80186e8:	3b0a      	subhi	r3, #10
 80186ea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80186ee:	8458      	strh	r0, [r3, #34]	@ 0x22
 80186f0:	e7ec      	b.n	80186cc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80186f2:	bd10      	pop	{r4, pc}

080186f4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80186f4:	b538      	push	{r3, r4, r5, lr}
 80186f6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80186f8:	4604      	mov	r4, r0
 80186fa:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80186fe:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8018700:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8018702:	3a01      	subs	r2, #1
 8018704:	8702      	strh	r2, [r0, #56]	@ 0x38
 8018706:	1c5a      	adds	r2, r3, #1
 8018708:	b292      	uxth	r2, r2
 801870a:	2a09      	cmp	r2, #9
 801870c:	bf8a      	itet	hi
 801870e:	3b09      	subhi	r3, #9
 8018710:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8018712:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8018714:	f7ff ffb7 	bl	8018686 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8018718:	8c23      	ldrh	r3, [r4, #32]
 801871a:	2b01      	cmp	r3, #1
 801871c:	bf9c      	itt	ls
 801871e:	3301      	addls	r3, #1
 8018720:	8423      	strhls	r3, [r4, #32]
 8018722:	8be3      	ldrh	r3, [r4, #30]
 8018724:	b90b      	cbnz	r3, 801872a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8018726:	2302      	movs	r3, #2
 8018728:	83e3      	strh	r3, [r4, #30]
 801872a:	8be3      	ldrh	r3, [r4, #30]
 801872c:	4628      	mov	r0, r5
 801872e:	3b01      	subs	r3, #1
 8018730:	b29b      	uxth	r3, r3
 8018732:	83e3      	strh	r3, [r4, #30]
 8018734:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018738:	8365      	strh	r5, [r4, #26]
 801873a:	bd38      	pop	{r3, r4, r5, pc}

0801873c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801873c:	428a      	cmp	r2, r1
 801873e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018742:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8018744:	d932      	bls.n	80187ac <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8018746:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8018748:	1a54      	subs	r4, r2, r1
 801874a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 801874e:	19ee      	adds	r6, r5, r7
 8018750:	fa1f fe84 	uxth.w	lr, r4
 8018754:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8018758:	3e01      	subs	r6, #1
 801875a:	b2b4      	uxth	r4, r6
 801875c:	eba4 090e 	sub.w	r9, r4, lr
 8018760:	fa1f f989 	uxth.w	r9, r9
 8018764:	2c09      	cmp	r4, #9
 8018766:	4626      	mov	r6, r4
 8018768:	bf88      	it	hi
 801876a:	f1a4 060a 	subhi.w	r6, r4, #10
 801876e:	f1bc 0f00 	cmp.w	ip, #0
 8018772:	f104 34ff 	add.w	r4, r4, #4294967295
 8018776:	bf08      	it	eq
 8018778:	f04f 0c02 	moveq.w	ip, #2
 801877c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018780:	b2a4      	uxth	r4, r4
 8018782:	f10c 3cff 	add.w	ip, ip, #4294967295
 8018786:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 801878a:	454c      	cmp	r4, r9
 801878c:	fa1f fc8c 	uxth.w	ip, ip
 8018790:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8018794:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8018798:	d1e4      	bne.n	8018764 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 801879a:	eba5 050e 	sub.w	r5, r5, lr
 801879e:	eb0e 0408 	add.w	r4, lr, r8
 80187a2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 80187a6:	8705      	strh	r5, [r0, #56]	@ 0x38
 80187a8:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 80187ac:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 80187ae:	250a      	movs	r5, #10
 80187b0:	1a64      	subs	r4, r4, r1
 80187b2:	4439      	add	r1, r7
 80187b4:	b289      	uxth	r1, r1
 80187b6:	8704      	strh	r4, [r0, #56]	@ 0x38
 80187b8:	2909      	cmp	r1, #9
 80187ba:	bf88      	it	hi
 80187bc:	390a      	subhi	r1, #10
 80187be:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80187c0:	b18a      	cbz	r2, 80187e6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 80187c2:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 80187c4:	3a01      	subs	r2, #1
 80187c6:	3101      	adds	r1, #1
 80187c8:	b292      	uxth	r2, r2
 80187ca:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80187ce:	8701      	strh	r1, [r0, #56]	@ 0x38
 80187d0:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80187d2:	b901      	cbnz	r1, 80187d6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 80187d4:	86c5      	strh	r5, [r0, #54]	@ 0x36
 80187d6:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 80187d8:	3901      	subs	r1, #1
 80187da:	b289      	uxth	r1, r1
 80187dc:	86c1      	strh	r1, [r0, #54]	@ 0x36
 80187de:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80187e2:	844c      	strh	r4, [r1, #34]	@ 0x22
 80187e4:	e7ec      	b.n	80187c0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 80187e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80187ea:	f7ff bf4c 	b.w	8018686 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080187ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80187ee:	b570      	push	{r4, r5, r6, lr}
 80187f0:	2500      	movs	r5, #0
 80187f2:	4295      	cmp	r5, r2
 80187f4:	d011      	beq.n	801881a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80187f6:	8bc4      	ldrh	r4, [r0, #30]
 80187f8:	f831 6b02 	ldrh.w	r6, [r1], #2
 80187fc:	4414      	add	r4, r2
 80187fe:	3c01      	subs	r4, #1
 8018800:	1b64      	subs	r4, r4, r5
 8018802:	b2a4      	uxth	r4, r4
 8018804:	2c01      	cmp	r4, #1
 8018806:	bf88      	it	hi
 8018808:	3c02      	subhi	r4, #2
 801880a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801880e:	8b64      	ldrh	r4, [r4, #26]
 8018810:	42b4      	cmp	r4, r6
 8018812:	d117      	bne.n	8018844 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8018814:	3501      	adds	r5, #1
 8018816:	b2ad      	uxth	r5, r5
 8018818:	e7eb      	b.n	80187f2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 801881a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801881e:	2400      	movs	r4, #0
 8018820:	4413      	add	r3, r2
 8018822:	b2a2      	uxth	r2, r4
 8018824:	429a      	cmp	r2, r3
 8018826:	da0f      	bge.n	8018848 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8018828:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 801882a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801882e:	3401      	adds	r4, #1
 8018830:	4432      	add	r2, r6
 8018832:	b292      	uxth	r2, r2
 8018834:	2a09      	cmp	r2, #9
 8018836:	bf88      	it	hi
 8018838:	3a0a      	subhi	r2, #10
 801883a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801883e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8018840:	42aa      	cmp	r2, r5
 8018842:	d0ee      	beq.n	8018822 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8018844:	2000      	movs	r0, #0
 8018846:	bd70      	pop	{r4, r5, r6, pc}
 8018848:	2001      	movs	r0, #1
 801884a:	e7fc      	b.n	8018846 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801884c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801884c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018850:	4605      	mov	r5, r0
 8018852:	4616      	mov	r6, r2
 8018854:	1c8c      	adds	r4, r1, #2
 8018856:	8809      	ldrh	r1, [r1, #0]
 8018858:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801885c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8018860:	42b3      	cmp	r3, r6
 8018862:	d124      	bne.n	80188ae <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8018864:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8018868:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801886c:	f001 070f 	and.w	r7, r1, #15
 8018870:	4652      	mov	r2, sl
 8018872:	f8cd 8000 	str.w	r8, [sp]
 8018876:	464b      	mov	r3, r9
 8018878:	4621      	mov	r1, r4
 801887a:	4628      	mov	r0, r5
 801887c:	f7ff ffb7 	bl	80187ee <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8018880:	4683      	mov	fp, r0
 8018882:	b168      	cbz	r0, 80188a0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8018884:	eb0a 0109 	add.w	r1, sl, r9
 8018888:	463a      	mov	r2, r7
 801888a:	4628      	mov	r0, r5
 801888c:	4441      	add	r1, r8
 801888e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8018892:	4649      	mov	r1, r9
 8018894:	f7ff ff52 	bl	801873c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8018898:	4658      	mov	r0, fp
 801889a:	b003      	add	sp, #12
 801889c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80188a0:	eb07 010a 	add.w	r1, r7, sl
 80188a4:	4449      	add	r1, r9
 80188a6:	4441      	add	r1, r8
 80188a8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80188ac:	e7d2      	b.n	8018854 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80188ae:	f04f 0b00 	mov.w	fp, #0
 80188b2:	e7f1      	b.n	8018898 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080188b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80188b4:	b570      	push	{r4, r5, r6, lr}
 80188b6:	8810      	ldrh	r0, [r2, #0]
 80188b8:	4298      	cmp	r0, r3
 80188ba:	d817      	bhi.n	80188ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80188bc:	1e48      	subs	r0, r1, #1
 80188be:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80188c2:	4298      	cmp	r0, r3
 80188c4:	d312      	bcc.n	80188ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80188c6:	2400      	movs	r4, #0
 80188c8:	428c      	cmp	r4, r1
 80188ca:	d20f      	bcs.n	80188ec <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80188cc:	1860      	adds	r0, r4, r1
 80188ce:	1040      	asrs	r0, r0, #1
 80188d0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 80188d4:	0085      	lsls	r5, r0, #2
 80188d6:	42b3      	cmp	r3, r6
 80188d8:	d902      	bls.n	80188e0 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 80188da:	3001      	adds	r0, #1
 80188dc:	b284      	uxth	r4, r0
 80188de:	e7f3      	b.n	80188c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80188e0:	d201      	bcs.n	80188e6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80188e2:	b281      	uxth	r1, r0
 80188e4:	e7f0      	b.n	80188c8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80188e6:	442a      	add	r2, r5
 80188e8:	8850      	ldrh	r0, [r2, #2]
 80188ea:	bd70      	pop	{r4, r5, r6, pc}
 80188ec:	2000      	movs	r0, #0
 80188ee:	e7fc      	b.n	80188ea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080188f0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80188f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80188f4:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 80188f6:	4604      	mov	r4, r0
 80188f8:	260b      	movs	r6, #11
 80188fa:	886f      	ldrh	r7, [r5, #2]
 80188fc:	087f      	lsrs	r7, r7, #1
 80188fe:	3e01      	subs	r6, #1
 8018900:	d013      	beq.n	801892a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8018902:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8018904:	462a      	mov	r2, r5
 8018906:	4639      	mov	r1, r7
 8018908:	4620      	mov	r0, r4
 801890a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801890e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8018912:	4643      	mov	r3, r8
 8018914:	f7ff ffce 	bl	80188b4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8018918:	b138      	cbz	r0, 801892a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 801891a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801891e:	4642      	mov	r2, r8
 8018920:	4620      	mov	r0, r4
 8018922:	f7ff ff93 	bl	801884c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8018926:	2800      	cmp	r0, #0
 8018928:	d1e9      	bne.n	80188fe <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 801892a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08018930 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8018930:	b570      	push	{r4, r5, r6, lr}
 8018932:	694a      	ldr	r2, [r1, #20]
 8018934:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8018936:	684b      	ldr	r3, [r1, #4]
 8018938:	1b54      	subs	r4, r2, r5
 801893a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 801893c:	f000 8106 	beq.w	8018b4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8018940:	1b9b      	subs	r3, r3, r6
 8018942:	d003      	beq.n	801894c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018944:	4363      	muls	r3, r4
 8018946:	2210      	movs	r2, #16
 8018948:	fb93 f3f2 	sdiv	r3, r3, r2
 801894c:	680c      	ldr	r4, [r1, #0]
 801894e:	698a      	ldr	r2, [r1, #24]
 8018950:	1b65      	subs	r5, r4, r5
 8018952:	f000 80fd 	beq.w	8018b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8018956:	1b92      	subs	r2, r2, r6
 8018958:	d003      	beq.n	8018962 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 801895a:	436a      	muls	r2, r5
 801895c:	2410      	movs	r4, #16
 801895e:	fb92 f2f4 	sdiv	r2, r2, r4
 8018962:	1a9b      	subs	r3, r3, r2
 8018964:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8018b8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8018968:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801896c:	460a      	mov	r2, r1
 801896e:	ee07 3a90 	vmov	s15, r3
 8018972:	f100 040c 	add.w	r4, r0, #12
 8018976:	4603      	mov	r3, r0
 8018978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801897c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8018980:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8018984:	eeb1 6a43 	vneg.f32	s12, s6
 8018988:	edd2 7a02 	vldr	s15, [r2, #8]
 801898c:	3214      	adds	r2, #20
 801898e:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8018992:	ece3 6a01 	vstmia	r3!, {s13}
 8018996:	429c      	cmp	r4, r3
 8018998:	ed52 7a02 	vldr	s15, [r2, #-8]
 801899c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80189a0:	edc3 7a02 	vstr	s15, [r3, #8]
 80189a4:	ed52 7a01 	vldr	s15, [r2, #-4]
 80189a8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80189ac:	edc3 7a05 	vstr	s15, [r3, #20]
 80189b0:	d1ea      	bne.n	8018988 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80189b2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80189b4:	698b      	ldr	r3, [r1, #24]
 80189b6:	edd0 4a02 	vldr	s9, [r0, #8]
 80189ba:	1a9b      	subs	r3, r3, r2
 80189bc:	edd0 3a00 	vldr	s7, [r0]
 80189c0:	edd0 6a01 	vldr	s13, [r0, #4]
 80189c4:	ee07 3a90 	vmov	s15, r3
 80189c8:	684b      	ldr	r3, [r1, #4]
 80189ca:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80189ce:	ed90 5a05 	vldr	s10, [r0, #20]
 80189d2:	1a9b      	subs	r3, r3, r2
 80189d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80189d8:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80189dc:	ed90 2a03 	vldr	s4, [r0, #12]
 80189e0:	ee07 3a10 	vmov	s14, r3
 80189e4:	edd0 5a04 	vldr	s11, [r0, #16]
 80189e8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80189ec:	ed90 1a07 	vldr	s2, [r0, #28]
 80189f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80189f4:	edd0 2a06 	vldr	s5, [r0, #24]
 80189f8:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80189fc:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8018a00:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018a04:	ee32 5a45 	vsub.f32	s10, s4, s10
 8018a08:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018a0c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8018a10:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8018a14:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8018a16:	694a      	ldr	r2, [r1, #20]
 8018a18:	1b13      	subs	r3, r2, r4
 8018a1a:	ee07 3a10 	vmov	s14, r3
 8018a1e:	680b      	ldr	r3, [r1, #0]
 8018a20:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a24:	1b1b      	subs	r3, r3, r4
 8018a26:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018a2a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8018a2e:	ee07 3a10 	vmov	s14, r3
 8018a32:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a36:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018a3a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8018a3e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8018a42:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8018a46:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8018a48:	698b      	ldr	r3, [r1, #24]
 8018a4a:	1a9b      	subs	r3, r3, r2
 8018a4c:	ee06 3a90 	vmov	s13, r3
 8018a50:	684b      	ldr	r3, [r1, #4]
 8018a52:	1a9b      	subs	r3, r3, r2
 8018a54:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018a58:	ee07 3a10 	vmov	s14, r3
 8018a5c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8018a60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a64:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8018a68:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018a6c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8018a70:	ee66 6a83 	vmul.f32	s13, s13, s6
 8018a74:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8018a78:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8018a7a:	694a      	ldr	r2, [r1, #20]
 8018a7c:	1b13      	subs	r3, r2, r4
 8018a7e:	ee07 3a10 	vmov	s14, r3
 8018a82:	680b      	ldr	r3, [r1, #0]
 8018a84:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a88:	1b1b      	subs	r3, r3, r4
 8018a8a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018a8e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8018a92:	ee07 3a10 	vmov	s14, r3
 8018a96:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018a9a:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018a9e:	eea5 5a87 	vfma.f32	s10, s11, s14
 8018aa2:	edd0 5a08 	vldr	s11, [r0, #32]
 8018aa6:	ee31 1a65 	vsub.f32	s2, s2, s11
 8018aaa:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8018aae:	ee25 5a06 	vmul.f32	s10, s10, s12
 8018ab2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8018ab6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8018ab8:	698b      	ldr	r3, [r1, #24]
 8018aba:	1a9b      	subs	r3, r3, r2
 8018abc:	ee07 3a10 	vmov	s14, r3
 8018ac0:	684b      	ldr	r3, [r1, #4]
 8018ac2:	1a9b      	subs	r3, r3, r2
 8018ac4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018ac8:	ee01 3a90 	vmov	s3, r3
 8018acc:	ee27 7a04 	vmul.f32	s14, s14, s8
 8018ad0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8018ad4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8018ad8:	ee61 1a84 	vmul.f32	s3, s3, s8
 8018adc:	eea1 7a21 	vfma.f32	s14, s2, s3
 8018ae0:	ee27 7a03 	vmul.f32	s14, s14, s6
 8018ae4:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8018ae8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8018aea:	694a      	ldr	r2, [r1, #20]
 8018aec:	1b13      	subs	r3, r2, r4
 8018aee:	ee03 3a10 	vmov	s6, r3
 8018af2:	680b      	ldr	r3, [r1, #0]
 8018af4:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018af8:	1b1b      	subs	r3, r3, r4
 8018afa:	ee23 3a04 	vmul.f32	s6, s6, s8
 8018afe:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8018b02:	ee03 3a10 	vmov	s6, r3
 8018b06:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8018b0a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8018b0e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8018b12:	ee25 6a86 	vmul.f32	s12, s11, s12
 8018b16:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8018b1a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8018b1e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8018b22:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8018b26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b2a:	dd13      	ble.n	8018b54 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8018b2c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8018b30:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8018b34:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8018b36:	eee3 7a87 	vfma.f32	s15, s7, s14
 8018b3a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8018b3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b42:	dd15      	ble.n	8018b70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8018b44:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8018b48:	6403      	str	r3, [r0, #64]	@ 0x40
 8018b4a:	bd70      	pop	{r4, r5, r6, pc}
 8018b4c:	4623      	mov	r3, r4
 8018b4e:	e6fd      	b.n	801894c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8018b50:	462a      	mov	r2, r5
 8018b52:	e706      	b.n	8018962 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8018b54:	d502      	bpl.n	8018b5c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8018b56:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8018b5a:	e7e9      	b.n	8018b30 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8018b5c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8018b60:	eea3 2a85 	vfma.f32	s4, s7, s10
 8018b64:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8018b68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b6c:	dade      	bge.n	8018b2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8018b6e:	e7f2      	b.n	8018b56 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8018b70:	d502      	bpl.n	8018b78 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8018b72:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8018b76:	e7e7      	b.n	8018b48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8018b78:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8018b7c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8018b80:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8018b84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018b88:	dadc      	bge.n	8018b44 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8018b8a:	e7f2      	b.n	8018b72 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8018b8c:	3d800000 	.word	0x3d800000

08018b90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8018b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018b94:	2714      	movs	r7, #20
 8018b96:	435f      	muls	r7, r3
 8018b98:	eb02 0c07 	add.w	ip, r2, r7
 8018b9c:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8018ba0:	f115 0e0f 	adds.w	lr, r5, #15
 8018ba4:	f100 80a2 	bmi.w	8018cec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8018ba8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8018bac:	9c08      	ldr	r4, [sp, #32]
 8018bae:	2614      	movs	r6, #20
 8018bb0:	f8c0 e014 	str.w	lr, [r0, #20]
 8018bb4:	4366      	muls	r6, r4
 8018bb6:	eb02 0806 	add.w	r8, r2, r6
 8018bba:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8018bbe:	f115 040f 	adds.w	r4, r5, #15
 8018bc2:	f100 809f 	bmi.w	8018d04 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8018bc6:	1124      	asrs	r4, r4, #4
 8018bc8:	eba4 040e 	sub.w	r4, r4, lr
 8018bcc:	6184      	str	r4, [r0, #24]
 8018bce:	2c00      	cmp	r4, #0
 8018bd0:	f000 808a 	beq.w	8018ce8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8018bd4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8018bd8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8018bdc:	5995      	ldr	r5, [r2, r6]
 8018bde:	eba4 0809 	sub.w	r8, r4, r9
 8018be2:	59d4      	ldr	r4, [r2, r7]
 8018be4:	eba5 0a04 	sub.w	sl, r5, r4
 8018be8:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8018bec:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8018bf0:	fb0e fe05 	mul.w	lr, lr, r5
 8018bf4:	fb0a ee19 	mls	lr, sl, r9, lr
 8018bf8:	fb08 e404 	mla	r4, r8, r4, lr
 8018bfc:	3c01      	subs	r4, #1
 8018bfe:	19a4      	adds	r4, r4, r6
 8018c00:	f100 808c 	bmi.w	8018d1c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8018c04:	fb94 fef6 	sdiv	lr, r4, r6
 8018c08:	fb06 441e 	mls	r4, r6, lr, r4
 8018c0c:	f8c0 e000 	str.w	lr, [r0]
 8018c10:	6104      	str	r4, [r0, #16]
 8018c12:	2d00      	cmp	r5, #0
 8018c14:	f2c0 8095 	blt.w	8018d42 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8018c18:	fb95 f4f6 	sdiv	r4, r5, r6
 8018c1c:	fb06 5514 	mls	r5, r6, r4, r5
 8018c20:	6044      	str	r4, [r0, #4]
 8018c22:	6085      	str	r5, [r0, #8]
 8018c24:	60c6      	str	r6, [r0, #12]
 8018c26:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8018c2a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8018c2e:	6945      	ldr	r5, [r0, #20]
 8018c30:	59d2      	ldr	r2, [r2, r7]
 8018c32:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8018c36:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 8018d64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8018c3a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8018c3e:	ee07 4a10 	vmov	s14, r4
 8018c42:	6804      	ldr	r4, [r0, #0]
 8018c44:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8018c48:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018c4c:	ee07 2a90 	vmov	s15, r2
 8018c50:	ee27 7a26 	vmul.f32	s14, s14, s13
 8018c54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8018c58:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8018c5c:	edd3 6a00 	vldr	s13, [r3]
 8018c60:	eee6 6a07 	vfma.f32	s13, s12, s14
 8018c64:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8018c68:	eee6 6a27 	vfma.f32	s13, s12, s15
 8018c6c:	edc0 6a07 	vstr	s13, [r0, #28]
 8018c70:	edd0 6a01 	vldr	s13, [r0, #4]
 8018c74:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8018c78:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8018c7c:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8018c80:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018c84:	ed80 6a08 	vstr	s12, [r0, #32]
 8018c88:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8018c8a:	6242      	str	r2, [r0, #36]	@ 0x24
 8018c8c:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8018c90:	ed93 6a03 	vldr	s12, [r3, #12]
 8018c94:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018c98:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8018c9c:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8018ca0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8018ca4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8018ca8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8018cac:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8018cb0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8018cb4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8018cb6:	6302      	str	r2, [r0, #48]	@ 0x30
 8018cb8:	ed93 6a06 	vldr	s12, [r3, #24]
 8018cbc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8018cc0:	eea5 6a87 	vfma.f32	s12, s11, s14
 8018cc4:	eeb0 7a46 	vmov.f32	s14, s12
 8018cc8:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8018ccc:	eea6 7a27 	vfma.f32	s14, s12, s15
 8018cd0:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8018cd4:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8018cd8:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8018cdc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8018ce0:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8018ce4:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8018ce6:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8018ce8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018cec:	2410      	movs	r4, #16
 8018cee:	f1c5 0501 	rsb	r5, r5, #1
 8018cf2:	fb9e fef4 	sdiv	lr, lr, r4
 8018cf6:	f015 050f 	ands.w	r5, r5, #15
 8018cfa:	bf18      	it	ne
 8018cfc:	2501      	movne	r5, #1
 8018cfe:	ebae 0e05 	sub.w	lr, lr, r5
 8018d02:	e753      	b.n	8018bac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8018d04:	f04f 0910 	mov.w	r9, #16
 8018d08:	f1c5 0501 	rsb	r5, r5, #1
 8018d0c:	fb94 f4f9 	sdiv	r4, r4, r9
 8018d10:	f015 050f 	ands.w	r5, r5, #15
 8018d14:	bf18      	it	ne
 8018d16:	2501      	movne	r5, #1
 8018d18:	1b64      	subs	r4, r4, r5
 8018d1a:	e755      	b.n	8018bc8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8018d1c:	4264      	negs	r4, r4
 8018d1e:	fb94 fef6 	sdiv	lr, r4, r6
 8018d22:	f1ce 0800 	rsb	r8, lr, #0
 8018d26:	fb06 441e 	mls	r4, r6, lr, r4
 8018d2a:	f8c0 8000 	str.w	r8, [r0]
 8018d2e:	6104      	str	r4, [r0, #16]
 8018d30:	2c00      	cmp	r4, #0
 8018d32:	f43f af6e 	beq.w	8018c12 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8018d36:	ea6f 0e0e 	mvn.w	lr, lr
 8018d3a:	1b34      	subs	r4, r6, r4
 8018d3c:	f8c0 e000 	str.w	lr, [r0]
 8018d40:	e766      	b.n	8018c10 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8018d42:	426d      	negs	r5, r5
 8018d44:	fb95 f4f6 	sdiv	r4, r5, r6
 8018d48:	f1c4 0e00 	rsb	lr, r4, #0
 8018d4c:	fb06 5514 	mls	r5, r6, r4, r5
 8018d50:	f8c0 e004 	str.w	lr, [r0, #4]
 8018d54:	6085      	str	r5, [r0, #8]
 8018d56:	2d00      	cmp	r5, #0
 8018d58:	f43f af64 	beq.w	8018c24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8018d5c:	43e4      	mvns	r4, r4
 8018d5e:	1b75      	subs	r5, r6, r5
 8018d60:	6044      	str	r4, [r0, #4]
 8018d62:	e75e      	b.n	8018c22 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8018d64:	3d800000 	.word	0x3d800000

08018d68 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018d68:	4b01      	ldr	r3, [pc, #4]	@ (8018d70 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018d6a:	6018      	str	r0, [r3, #0]
 8018d6c:	4770      	bx	lr
 8018d6e:	bf00      	nop
 8018d70:	200039ec 	.word	0x200039ec

08018d74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018d74:	4b06      	ldr	r3, [pc, #24]	@ (8018d90 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018d76:	881a      	ldrh	r2, [r3, #0]
 8018d78:	4282      	cmp	r2, r0
 8018d7a:	d807      	bhi.n	8018d8c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018d7c:	4b05      	ldr	r3, [pc, #20]	@ (8018d94 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8018d7e:	881b      	ldrh	r3, [r3, #0]
 8018d80:	4413      	add	r3, r2
 8018d82:	4298      	cmp	r0, r3
 8018d84:	bfac      	ite	ge
 8018d86:	2000      	movge	r0, #0
 8018d88:	2001      	movlt	r0, #1
 8018d8a:	4770      	bx	lr
 8018d8c:	2000      	movs	r0, #0
 8018d8e:	4770      	bx	lr
 8018d90:	20003a0c 	.word	0x20003a0c
 8018d94:	20003a10 	.word	0x20003a10

08018d98 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8018d98:	b508      	push	{r3, lr}
 8018d9a:	4601      	mov	r1, r0
 8018d9c:	f7ff ffea 	bl	8018d74 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8018da0:	b118      	cbz	r0, 8018daa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8018da2:	4b02      	ldr	r3, [pc, #8]	@ (8018dac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018da4:	681b      	ldr	r3, [r3, #0]
 8018da6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018daa:	bd08      	pop	{r3, pc}
 8018dac:	200039f0 	.word	0x200039f0

08018db0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8018db0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018db2:	4c24      	ldr	r4, [pc, #144]	@ (8018e44 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018db4:	6823      	ldr	r3, [r4, #0]
 8018db6:	2b00      	cmp	r3, #0
 8018db8:	d042      	beq.n	8018e40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018dba:	4a23      	ldr	r2, [pc, #140]	@ (8018e48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018dbc:	4d23      	ldr	r5, [pc, #140]	@ (8018e4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8018dbe:	8811      	ldrh	r1, [r2, #0]
 8018dc0:	f8b5 c000 	ldrh.w	ip, [r5]
 8018dc4:	4822      	ldr	r0, [pc, #136]	@ (8018e50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018dc6:	4461      	add	r1, ip
 8018dc8:	1c4a      	adds	r2, r1, #1
 8018dca:	008f      	lsls	r7, r1, #2
 8018dcc:	f022 0201 	bic.w	r2, r2, #1
 8018dd0:	19de      	adds	r6, r3, r7
 8018dd2:	0412      	lsls	r2, r2, #16
 8018dd4:	6006      	str	r6, [r0, #0]
 8018dd6:	4e1f      	ldr	r6, [pc, #124]	@ (8018e54 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8018dd8:	0c12      	lsrs	r2, r2, #16
 8018dda:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018dde:	19da      	adds	r2, r3, r7
 8018de0:	6032      	str	r2, [r6, #0]
 8018de2:	220e      	movs	r2, #14
 8018de4:	fb02 f20c 	mul.w	r2, r2, ip
 8018de8:	3203      	adds	r2, #3
 8018dea:	f022 0203 	bic.w	r2, r2, #3
 8018dee:	443a      	add	r2, r7
 8018df0:	4f19      	ldr	r7, [pc, #100]	@ (8018e58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8018df2:	4413      	add	r3, r2
 8018df4:	603b      	str	r3, [r7, #0]
 8018df6:	2300      	movs	r3, #0
 8018df8:	4f18      	ldr	r7, [pc, #96]	@ (8018e5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018dfa:	469c      	mov	ip, r3
 8018dfc:	803b      	strh	r3, [r7, #0]
 8018dfe:	4f18      	ldr	r7, [pc, #96]	@ (8018e60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8018e00:	683f      	ldr	r7, [r7, #0]
 8018e02:	1aba      	subs	r2, r7, r2
 8018e04:	4f17      	ldr	r7, [pc, #92]	@ (8018e64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018e06:	603a      	str	r2, [r7, #0]
 8018e08:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8018e0c:	4a16      	ldr	r2, [pc, #88]	@ (8018e68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018e0e:	8013      	strh	r3, [r2, #0]
 8018e10:	428b      	cmp	r3, r1
 8018e12:	d10d      	bne.n	8018e30 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018e14:	882d      	ldrh	r5, [r5, #0]
 8018e16:	2300      	movs	r3, #0
 8018e18:	6830      	ldr	r0, [r6, #0]
 8018e1a:	240e      	movs	r4, #14
 8018e1c:	429d      	cmp	r5, r3
 8018e1e:	d90f      	bls.n	8018e40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018e20:	fb04 0203 	mla	r2, r4, r3, r0
 8018e24:	3301      	adds	r3, #1
 8018e26:	7b11      	ldrb	r1, [r2, #12]
 8018e28:	f36f 1145 	bfc	r1, #5, #1
 8018e2c:	7311      	strb	r1, [r2, #12]
 8018e2e:	e7f5      	b.n	8018e1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8018e30:	6822      	ldr	r2, [r4, #0]
 8018e32:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018e36:	6802      	ldr	r2, [r0, #0]
 8018e38:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018e3c:	3301      	adds	r3, #1
 8018e3e:	e7e7      	b.n	8018e10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8018e40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018e42:	bf00      	nop
 8018e44:	200039f0 	.word	0x200039f0
 8018e48:	20003a0c 	.word	0x20003a0c
 8018e4c:	20003a10 	.word	0x20003a10
 8018e50:	20003a04 	.word	0x20003a04
 8018e54:	200039f4 	.word	0x200039f4
 8018e58:	200039fc 	.word	0x200039fc
 8018e5c:	20003a0e 	.word	0x20003a0e
 8018e60:	200039f8 	.word	0x200039f8
 8018e64:	20003a08 	.word	0x20003a08
 8018e68:	20003a00 	.word	0x20003a00

08018e6c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018e6c:	4b06      	ldr	r3, [pc, #24]	@ (8018e88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8018e6e:	681b      	ldr	r3, [r3, #0]
 8018e70:	b943      	cbnz	r3, 8018e84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018e72:	b139      	cbz	r1, 8018e84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018e74:	4b05      	ldr	r3, [pc, #20]	@ (8018e8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018e76:	801a      	strh	r2, [r3, #0]
 8018e78:	4b05      	ldr	r3, [pc, #20]	@ (8018e90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018e7a:	6019      	str	r1, [r3, #0]
 8018e7c:	4b05      	ldr	r3, [pc, #20]	@ (8018e94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8018e7e:	6018      	str	r0, [r3, #0]
 8018e80:	f7ff bf96 	b.w	8018db0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018e84:	4770      	bx	lr
 8018e86:	bf00      	nop
 8018e88:	200039fc 	.word	0x200039fc
 8018e8c:	20003a10 	.word	0x20003a10
 8018e90:	200039f8 	.word	0x200039f8
 8018e94:	200039f0 	.word	0x200039f0

08018e98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8018e98:	b470      	push	{r4, r5, r6}
 8018e9a:	4c07      	ldr	r4, [pc, #28]	@ (8018eb8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8018e9c:	4605      	mov	r5, r0
 8018e9e:	4610      	mov	r0, r2
 8018ea0:	9a03      	ldr	r2, [sp, #12]
 8018ea2:	6826      	ldr	r6, [r4, #0]
 8018ea4:	b936      	cbnz	r6, 8018eb4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018ea6:	6025      	str	r5, [r4, #0]
 8018ea8:	4c04      	ldr	r4, [pc, #16]	@ (8018ebc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018eaa:	8021      	strh	r1, [r4, #0]
 8018eac:	4619      	mov	r1, r3
 8018eae:	bc70      	pop	{r4, r5, r6}
 8018eb0:	f7ff bfdc 	b.w	8018e6c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018eb4:	bc70      	pop	{r4, r5, r6}
 8018eb6:	4770      	bx	lr
 8018eb8:	20003a14 	.word	0x20003a14
 8018ebc:	20003a0c 	.word	0x20003a0c

08018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8018ec0:	4a12      	ldr	r2, [pc, #72]	@ (8018f0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8018ec2:	8803      	ldrh	r3, [r0, #0]
 8018ec4:	8812      	ldrh	r2, [r2, #0]
 8018ec6:	4293      	cmp	r3, r2
 8018ec8:	d207      	bcs.n	8018eda <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018eca:	4a11      	ldr	r2, [pc, #68]	@ (8018f10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018ecc:	2114      	movs	r1, #20
 8018ece:	6812      	ldr	r2, [r2, #0]
 8018ed0:	fb01 2303 	mla	r3, r1, r3, r2
 8018ed4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018ed8:	4770      	bx	lr
 8018eda:	490e      	ldr	r1, [pc, #56]	@ (8018f14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018edc:	8809      	ldrh	r1, [r1, #0]
 8018ede:	4411      	add	r1, r2
 8018ee0:	428b      	cmp	r3, r1
 8018ee2:	da04      	bge.n	8018eee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018ee4:	1a9b      	subs	r3, r3, r2
 8018ee6:	4a0c      	ldr	r2, [pc, #48]	@ (8018f18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018ee8:	210e      	movs	r1, #14
 8018eea:	6812      	ldr	r2, [r2, #0]
 8018eec:	e7f0      	b.n	8018ed0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8018eee:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8018ef2:	4293      	cmp	r3, r2
 8018ef4:	d108      	bne.n	8018f08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018ef6:	4b09      	ldr	r3, [pc, #36]	@ (8018f1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018ef8:	781b      	ldrb	r3, [r3, #0]
 8018efa:	b91b      	cbnz	r3, 8018f04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018efc:	4b08      	ldr	r3, [pc, #32]	@ (8018f20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8018efe:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018f02:	4770      	bx	lr
 8018f04:	4b07      	ldr	r3, [pc, #28]	@ (8018f24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018f06:	e7fa      	b.n	8018efe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018f08:	2000      	movs	r0, #0
 8018f0a:	4770      	bx	lr
 8018f0c:	20003a0c 	.word	0x20003a0c
 8018f10:	20003a14 	.word	0x20003a14
 8018f14:	20003a10 	.word	0x20003a10
 8018f18:	200039f4 	.word	0x200039f4
 8018f1c:	2000397c 	.word	0x2000397c
 8018f20:	2000397e 	.word	0x2000397e
 8018f24:	20003980 	.word	0x20003980

08018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018f28:	4a12      	ldr	r2, [pc, #72]	@ (8018f74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018f2a:	8803      	ldrh	r3, [r0, #0]
 8018f2c:	8812      	ldrh	r2, [r2, #0]
 8018f2e:	4293      	cmp	r3, r2
 8018f30:	d207      	bcs.n	8018f42 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8018f32:	4a11      	ldr	r2, [pc, #68]	@ (8018f78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018f34:	2114      	movs	r1, #20
 8018f36:	6812      	ldr	r2, [r2, #0]
 8018f38:	fb01 2303 	mla	r3, r1, r3, r2
 8018f3c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8018f40:	4770      	bx	lr
 8018f42:	490e      	ldr	r1, [pc, #56]	@ (8018f7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018f44:	8809      	ldrh	r1, [r1, #0]
 8018f46:	4411      	add	r1, r2
 8018f48:	428b      	cmp	r3, r1
 8018f4a:	da04      	bge.n	8018f56 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018f4c:	1a9b      	subs	r3, r3, r2
 8018f4e:	4a0c      	ldr	r2, [pc, #48]	@ (8018f80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8018f50:	210e      	movs	r1, #14
 8018f52:	6812      	ldr	r2, [r2, #0]
 8018f54:	e7f0      	b.n	8018f38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018f56:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8018f5a:	4293      	cmp	r3, r2
 8018f5c:	d108      	bne.n	8018f70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8018f5e:	4b09      	ldr	r3, [pc, #36]	@ (8018f84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8018f60:	781b      	ldrb	r3, [r3, #0]
 8018f62:	b91b      	cbnz	r3, 8018f6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018f64:	4b08      	ldr	r3, [pc, #32]	@ (8018f88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018f66:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018f6a:	4770      	bx	lr
 8018f6c:	4b07      	ldr	r3, [pc, #28]	@ (8018f8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8018f6e:	e7fa      	b.n	8018f66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8018f70:	2000      	movs	r0, #0
 8018f72:	4770      	bx	lr
 8018f74:	20003a0c 	.word	0x20003a0c
 8018f78:	20003a14 	.word	0x20003a14
 8018f7c:	20003a10 	.word	0x20003a10
 8018f80:	200039f4 	.word	0x200039f4
 8018f84:	2000397c 	.word	0x2000397c
 8018f88:	20003980 	.word	0x20003980
 8018f8c:	2000397e 	.word	0x2000397e

08018f90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8018f90:	4a22      	ldr	r2, [pc, #136]	@ (801901c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8018f92:	b530      	push	{r4, r5, lr}
 8018f94:	880b      	ldrh	r3, [r1, #0]
 8018f96:	8812      	ldrh	r2, [r2, #0]
 8018f98:	4293      	cmp	r3, r2
 8018f9a:	d213      	bcs.n	8018fc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8018f9c:	4a20      	ldr	r2, [pc, #128]	@ (8019020 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8018f9e:	2114      	movs	r1, #20
 8018fa0:	6812      	ldr	r2, [r2, #0]
 8018fa2:	fb01 2303 	mla	r3, r1, r3, r2
 8018fa6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018faa:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8018fae:	8a1a      	ldrh	r2, [r3, #16]
 8018fb0:	8a5b      	ldrh	r3, [r3, #18]
 8018fb2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018fb6:	8004      	strh	r4, [r0, #0]
 8018fb8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018fbc:	8041      	strh	r1, [r0, #2]
 8018fbe:	8082      	strh	r2, [r0, #4]
 8018fc0:	80c3      	strh	r3, [r0, #6]
 8018fc2:	e024      	b.n	801900e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8018fc4:	4917      	ldr	r1, [pc, #92]	@ (8019024 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018fc6:	8809      	ldrh	r1, [r1, #0]
 8018fc8:	4411      	add	r1, r2
 8018fca:	428b      	cmp	r3, r1
 8018fcc:	da10      	bge.n	8018ff0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 8018fce:	1a9b      	subs	r3, r3, r2
 8018fd0:	220e      	movs	r2, #14
 8018fd2:	4353      	muls	r3, r2
 8018fd4:	4a14      	ldr	r2, [pc, #80]	@ (8019028 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8018fd6:	6811      	ldr	r1, [r2, #0]
 8018fd8:	18ca      	adds	r2, r1, r3
 8018fda:	5ecd      	ldrsh	r5, [r1, r3]
 8018fdc:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8018fe0:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8018fe4:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8018fe8:	8005      	strh	r5, [r0, #0]
 8018fea:	8044      	strh	r4, [r0, #2]
 8018fec:	8081      	strh	r1, [r0, #4]
 8018fee:	e7e7      	b.n	8018fc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8018ff0:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8018ff4:	4293      	cmp	r3, r2
 8018ff6:	d10b      	bne.n	8019010 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8018ff8:	4b0c      	ldr	r3, [pc, #48]	@ (801902c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8018ffa:	f9b3 1000 	ldrsh.w	r1, [r3]
 8018ffe:	4b0c      	ldr	r3, [pc, #48]	@ (8019030 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8019000:	8081      	strh	r1, [r0, #4]
 8019002:	f9b3 2000 	ldrsh.w	r2, [r3]
 8019006:	2300      	movs	r3, #0
 8019008:	80c2      	strh	r2, [r0, #6]
 801900a:	8003      	strh	r3, [r0, #0]
 801900c:	8043      	strh	r3, [r0, #2]
 801900e:	bd30      	pop	{r4, r5, pc}
 8019010:	2300      	movs	r3, #0
 8019012:	8003      	strh	r3, [r0, #0]
 8019014:	8043      	strh	r3, [r0, #2]
 8019016:	8083      	strh	r3, [r0, #4]
 8019018:	e7d2      	b.n	8018fc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801901a:	bf00      	nop
 801901c:	20003a0c 	.word	0x20003a0c
 8019020:	20003a14 	.word	0x20003a14
 8019024:	20003a10 	.word	0x20003a10
 8019028:	200039f4 	.word	0x200039f4
 801902c:	20003978 	.word	0x20003978
 8019030:	2000397a 	.word	0x2000397a

08019034 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8019034:	4a17      	ldr	r2, [pc, #92]	@ (8019094 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8019036:	8803      	ldrh	r3, [r0, #0]
 8019038:	8812      	ldrh	r2, [r2, #0]
 801903a:	4293      	cmp	r3, r2
 801903c:	d213      	bcs.n	8019066 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801903e:	4a16      	ldr	r2, [pc, #88]	@ (8019098 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8019040:	2114      	movs	r1, #20
 8019042:	6812      	ldr	r2, [r2, #0]
 8019044:	fb01 2303 	mla	r3, r1, r3, r2
 8019048:	8a1a      	ldrh	r2, [r3, #16]
 801904a:	8919      	ldrh	r1, [r3, #8]
 801904c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8019050:	428a      	cmp	r2, r1
 8019052:	db1d      	blt.n	8019090 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019054:	8a58      	ldrh	r0, [r3, #18]
 8019056:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801905a:	895b      	ldrh	r3, [r3, #10]
 801905c:	4298      	cmp	r0, r3
 801905e:	bfac      	ite	ge
 8019060:	2000      	movge	r0, #0
 8019062:	2001      	movlt	r0, #1
 8019064:	4770      	bx	lr
 8019066:	490d      	ldr	r1, [pc, #52]	@ (801909c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8019068:	8809      	ldrh	r1, [r1, #0]
 801906a:	4411      	add	r1, r2
 801906c:	428b      	cmp	r3, r1
 801906e:	da0d      	bge.n	801908c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8019070:	1a9b      	subs	r3, r3, r2
 8019072:	4a0b      	ldr	r2, [pc, #44]	@ (80190a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8019074:	210e      	movs	r1, #14
 8019076:	6812      	ldr	r2, [r2, #0]
 8019078:	fb01 2303 	mla	r3, r1, r3, r2
 801907c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8019080:	891a      	ldrh	r2, [r3, #8]
 8019082:	4291      	cmp	r1, r2
 8019084:	db04      	blt.n	8019090 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8019086:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801908a:	e7e6      	b.n	801905a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801908c:	2000      	movs	r0, #0
 801908e:	4770      	bx	lr
 8019090:	2001      	movs	r0, #1
 8019092:	4770      	bx	lr
 8019094:	20003a0c 	.word	0x20003a0c
 8019098:	20003a14 	.word	0x20003a14
 801909c:	20003a10 	.word	0x20003a10
 80190a0:	200039f4 	.word	0x200039f4

080190a4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80190a4:	4a12      	ldr	r2, [pc, #72]	@ (80190f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80190a6:	8803      	ldrh	r3, [r0, #0]
 80190a8:	8811      	ldrh	r1, [r2, #0]
 80190aa:	428b      	cmp	r3, r1
 80190ac:	d20b      	bcs.n	80190c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80190ae:	4a11      	ldr	r2, [pc, #68]	@ (80190f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80190b0:	6812      	ldr	r2, [r2, #0]
 80190b2:	b112      	cbz	r2, 80190ba <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80190b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80190b8:	b9c0      	cbnz	r0, 80190ec <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80190ba:	4a0f      	ldr	r2, [pc, #60]	@ (80190f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80190bc:	6811      	ldr	r1, [r2, #0]
 80190be:	2214      	movs	r2, #20
 80190c0:	4353      	muls	r3, r2
 80190c2:	58c8      	ldr	r0, [r1, r3]
 80190c4:	4770      	bx	lr
 80190c6:	4a0d      	ldr	r2, [pc, #52]	@ (80190fc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80190c8:	8812      	ldrh	r2, [r2, #0]
 80190ca:	440a      	add	r2, r1
 80190cc:	4293      	cmp	r3, r2
 80190ce:	da04      	bge.n	80190da <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80190d0:	4a08      	ldr	r2, [pc, #32]	@ (80190f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80190d2:	6812      	ldr	r2, [r2, #0]
 80190d4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80190d8:	4770      	bx	lr
 80190da:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80190de:	4293      	cmp	r3, r2
 80190e0:	d103      	bne.n	80190ea <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80190e2:	4b07      	ldr	r3, [pc, #28]	@ (8019100 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80190e4:	681b      	ldr	r3, [r3, #0]
 80190e6:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 80190e8:	4770      	bx	lr
 80190ea:	2000      	movs	r0, #0
 80190ec:	4770      	bx	lr
 80190ee:	bf00      	nop
 80190f0:	20003a0c 	.word	0x20003a0c
 80190f4:	200039f0 	.word	0x200039f0
 80190f8:	20003a14 	.word	0x20003a14
 80190fc:	20003a10 	.word	0x20003a10
 8019100:	20003984 	.word	0x20003984

08019104 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8019104:	4b24      	ldr	r3, [pc, #144]	@ (8019198 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8019106:	8802      	ldrh	r2, [r0, #0]
 8019108:	8818      	ldrh	r0, [r3, #0]
 801910a:	4282      	cmp	r2, r0
 801910c:	d221      	bcs.n	8019152 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801910e:	4b23      	ldr	r3, [pc, #140]	@ (801919c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8019110:	6819      	ldr	r1, [r3, #0]
 8019112:	2314      	movs	r3, #20
 8019114:	fb03 1302 	mla	r3, r3, r2, r1
 8019118:	6858      	ldr	r0, [r3, #4]
 801911a:	2800      	cmp	r0, #0
 801911c:	d03a      	beq.n	8019194 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801911e:	4920      	ldr	r1, [pc, #128]	@ (80191a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8019120:	6809      	ldr	r1, [r1, #0]
 8019122:	2900      	cmp	r1, #0
 8019124:	d036      	beq.n	8019194 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8019126:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801912a:	2900      	cmp	r1, #0
 801912c:	d032      	beq.n	8019194 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801912e:	891a      	ldrh	r2, [r3, #8]
 8019130:	8958      	ldrh	r0, [r3, #10]
 8019132:	4350      	muls	r0, r2
 8019134:	7c5a      	ldrb	r2, [r3, #17]
 8019136:	7cdb      	ldrb	r3, [r3, #19]
 8019138:	0952      	lsrs	r2, r2, #5
 801913a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801913e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8019142:	2b0b      	cmp	r3, #11
 8019144:	bf18      	it	ne
 8019146:	0040      	lslne	r0, r0, #1
 8019148:	3003      	adds	r0, #3
 801914a:	f020 0003 	bic.w	r0, r0, #3
 801914e:	4408      	add	r0, r1
 8019150:	4770      	bx	lr
 8019152:	4b14      	ldr	r3, [pc, #80]	@ (80191a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8019154:	881b      	ldrh	r3, [r3, #0]
 8019156:	4403      	add	r3, r0
 8019158:	429a      	cmp	r2, r3
 801915a:	da1a      	bge.n	8019192 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801915c:	4b12      	ldr	r3, [pc, #72]	@ (80191a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801915e:	1a10      	subs	r0, r2, r0
 8019160:	210e      	movs	r1, #14
 8019162:	681b      	ldr	r3, [r3, #0]
 8019164:	fb01 3000 	mla	r0, r1, r0, r3
 8019168:	7b03      	ldrb	r3, [r0, #12]
 801916a:	f003 031f 	and.w	r3, r3, #31
 801916e:	2b0b      	cmp	r3, #11
 8019170:	d10b      	bne.n	801918a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8019172:	8903      	ldrh	r3, [r0, #8]
 8019174:	8940      	ldrh	r0, [r0, #10]
 8019176:	4358      	muls	r0, r3
 8019178:	4b09      	ldr	r3, [pc, #36]	@ (80191a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801917a:	3003      	adds	r0, #3
 801917c:	6819      	ldr	r1, [r3, #0]
 801917e:	f020 0303 	bic.w	r3, r0, #3
 8019182:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8019186:	4418      	add	r0, r3
 8019188:	4770      	bx	lr
 801918a:	2b0d      	cmp	r3, #13
 801918c:	d101      	bne.n	8019192 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801918e:	300d      	adds	r0, #13
 8019190:	4770      	bx	lr
 8019192:	2000      	movs	r0, #0
 8019194:	4770      	bx	lr
 8019196:	bf00      	nop
 8019198:	20003a0c 	.word	0x20003a0c
 801919c:	20003a14 	.word	0x20003a14
 80191a0:	200039f0 	.word	0x200039f0
 80191a4:	20003a10 	.word	0x20003a10
 80191a8:	200039f4 	.word	0x200039f4

080191ac <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80191ac:	4b1f      	ldr	r3, [pc, #124]	@ (801922c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 80191ae:	b510      	push	{r4, lr}
 80191b0:	8802      	ldrh	r2, [r0, #0]
 80191b2:	881b      	ldrh	r3, [r3, #0]
 80191b4:	429a      	cmp	r2, r3
 80191b6:	d21a      	bcs.n	80191ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 80191b8:	4b1d      	ldr	r3, [pc, #116]	@ (8019230 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 80191ba:	2114      	movs	r1, #20
 80191bc:	681b      	ldr	r3, [r3, #0]
 80191be:	fb01 3102 	mla	r1, r1, r2, r3
 80191c2:	7c4b      	ldrb	r3, [r1, #17]
 80191c4:	0958      	lsrs	r0, r3, #5
 80191c6:	7ccb      	ldrb	r3, [r1, #19]
 80191c8:	491a      	ldr	r1, [pc, #104]	@ (8019234 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 80191ca:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80191ce:	6809      	ldr	r1, [r1, #0]
 80191d0:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 80191d4:	b2d8      	uxtb	r0, r3
 80191d6:	b149      	cbz	r1, 80191ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80191d8:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 80191dc:	b132      	cbz	r2, 80191ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 80191de:	2b0e      	cmp	r3, #14
 80191e0:	d021      	beq.n	8019226 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 80191e2:	280f      	cmp	r0, #15
 80191e4:	d01d      	beq.n	8019222 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 80191e6:	2810      	cmp	r0, #16
 80191e8:	bf08      	it	eq
 80191ea:	2002      	moveq	r0, #2
 80191ec:	bd10      	pop	{r4, pc}
 80191ee:	4912      	ldr	r1, [pc, #72]	@ (8019238 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 80191f0:	8809      	ldrh	r1, [r1, #0]
 80191f2:	4419      	add	r1, r3
 80191f4:	428a      	cmp	r2, r1
 80191f6:	da09      	bge.n	801920c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 80191f8:	1ad3      	subs	r3, r2, r3
 80191fa:	4a10      	ldr	r2, [pc, #64]	@ (801923c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 80191fc:	210e      	movs	r1, #14
 80191fe:	6812      	ldr	r2, [r2, #0]
 8019200:	fb01 2303 	mla	r3, r1, r3, r2
 8019204:	7b18      	ldrb	r0, [r3, #12]
 8019206:	f000 001f 	and.w	r0, r0, #31
 801920a:	e7ef      	b.n	80191ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801920c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8019210:	429a      	cmp	r2, r3
 8019212:	d108      	bne.n	8019226 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8019214:	f7f2 fa9a 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 8019218:	6803      	ldr	r3, [r0, #0]
 801921a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801921e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019220:	4718      	bx	r3
 8019222:	2001      	movs	r0, #1
 8019224:	e7e2      	b.n	80191ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8019226:	2000      	movs	r0, #0
 8019228:	e7e0      	b.n	80191ec <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801922a:	bf00      	nop
 801922c:	20003a0c 	.word	0x20003a0c
 8019230:	20003a14 	.word	0x20003a14
 8019234:	200039f0 	.word	0x200039f0
 8019238:	20003a10 	.word	0x20003a10
 801923c:	200039f4 	.word	0x200039f4

08019240 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8019240:	2010      	movs	r0, #16
 8019242:	4770      	bx	lr

08019244 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8019244:	2000      	movs	r0, #0
 8019246:	4770      	bx	lr

08019248 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8019248:	4b02      	ldr	r3, [pc, #8]	@ (8019254 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801924a:	8818      	ldrh	r0, [r3, #0]
 801924c:	0040      	lsls	r0, r0, #1
 801924e:	b280      	uxth	r0, r0
 8019250:	4770      	bx	lr
 8019252:	bf00      	nop
 8019254:	2000397e 	.word	0x2000397e

08019258 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8019258:	2bff      	cmp	r3, #255	@ 0xff
 801925a:	d05e      	beq.n	801931a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801925c:	2a0b      	cmp	r2, #11
 801925e:	d058      	beq.n	8019312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8019260:	d80e      	bhi.n	8019280 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8019262:	2a03      	cmp	r2, #3
 8019264:	d04d      	beq.n	8019302 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8019266:	d804      	bhi.n	8019272 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8019268:	2a01      	cmp	r2, #1
 801926a:	d04c      	beq.n	8019306 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 801926c:	d94d      	bls.n	801930a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 801926e:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8019270:	e031      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019272:	2a09      	cmp	r2, #9
 8019274:	d04d      	beq.n	8019312 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8019276:	d84a      	bhi.n	801930e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8019278:	2a08      	cmp	r2, #8
 801927a:	d048      	beq.n	801930e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 801927c:	2300      	movs	r3, #0
 801927e:	e02a      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019280:	2a2f      	cmp	r2, #47	@ 0x2f
 8019282:	d02c      	beq.n	80192de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8019284:	d811      	bhi.n	80192aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8019286:	2a2d      	cmp	r2, #45	@ 0x2d
 8019288:	d018      	beq.n	80192bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 801928a:	d831      	bhi.n	80192f0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 801928c:	2a2c      	cmp	r2, #44	@ 0x2c
 801928e:	d1f5      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019290:	684a      	ldr	r2, [r1, #4]
 8019292:	7813      	ldrb	r3, [r2, #0]
 8019294:	7852      	ldrb	r2, [r2, #1]
 8019296:	2a00      	cmp	r2, #0
 8019298:	d1f0      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801929a:	2b01      	cmp	r3, #1
 801929c:	d01d      	beq.n	80192da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801929e:	2b00      	cmp	r3, #0
 80192a0:	d02d      	beq.n	80192fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80192a2:	2b02      	cmp	r3, #2
 80192a4:	d1ea      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80192a6:	68c3      	ldr	r3, [r0, #12]
 80192a8:	e015      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192aa:	2a31      	cmp	r2, #49	@ 0x31
 80192ac:	d004      	beq.n	80192b8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80192ae:	d332      	bcc.n	8019316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80192b0:	2a32      	cmp	r2, #50	@ 0x32
 80192b2:	d030      	beq.n	8019316 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80192b4:	2a33      	cmp	r2, #51	@ 0x33
 80192b6:	d1e1      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80192b8:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 80192ba:	e00c      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192bc:	684a      	ldr	r2, [r1, #4]
 80192be:	7813      	ldrb	r3, [r2, #0]
 80192c0:	7852      	ldrb	r2, [r2, #1]
 80192c2:	2a00      	cmp	r2, #0
 80192c4:	d1da      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80192c6:	2b01      	cmp	r3, #1
 80192c8:	d004      	beq.n	80192d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 80192ca:	d30f      	bcc.n	80192ec <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 80192cc:	2b02      	cmp	r3, #2
 80192ce:	d1d5      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80192d0:	6943      	ldr	r3, [r0, #20]
 80192d2:	e000      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192d4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 80192d6:	4618      	mov	r0, r3
 80192d8:	4770      	bx	lr
 80192da:	69c3      	ldr	r3, [r0, #28]
 80192dc:	e7fb      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192de:	684b      	ldr	r3, [r1, #4]
 80192e0:	781a      	ldrb	r2, [r3, #0]
 80192e2:	785b      	ldrb	r3, [r3, #1]
 80192e4:	2b00      	cmp	r3, #0
 80192e6:	d1c9      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80192e8:	2a00      	cmp	r2, #0
 80192ea:	d1f4      	bne.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192ec:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 80192ee:	e7f2      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192f0:	684b      	ldr	r3, [r1, #4]
 80192f2:	781a      	ldrb	r2, [r3, #0]
 80192f4:	785b      	ldrb	r3, [r3, #1]
 80192f6:	2b00      	cmp	r3, #0
 80192f8:	d1c0      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80192fa:	2a00      	cmp	r2, #0
 80192fc:	d1eb      	bne.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80192fe:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8019300:	e7e9      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019302:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8019304:	e7e7      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019306:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8019308:	e7e5      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801930a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801930c:	e7e3      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801930e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8019310:	e7e1      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019312:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8019314:	e7df      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019316:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8019318:	e7dd      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801931a:	2a0b      	cmp	r2, #11
 801931c:	d059      	beq.n	80193d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801931e:	d80e      	bhi.n	801933e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8019320:	2a03      	cmp	r2, #3
 8019322:	d050      	beq.n	80193c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8019324:	d804      	bhi.n	8019330 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8019326:	2a01      	cmp	r2, #1
 8019328:	d04f      	beq.n	80193ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801932a:	d950      	bls.n	80193ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801932c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801932e:	e7d2      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019330:	2a09      	cmp	r2, #9
 8019332:	d04e      	beq.n	80193d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8019334:	d801      	bhi.n	801933a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8019336:	2a08      	cmp	r2, #8
 8019338:	d1a0      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801933a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801933c:	e7cb      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801933e:	2a2f      	cmp	r2, #47	@ 0x2f
 8019340:	d02d      	beq.n	801939e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8019342:	d811      	bhi.n	8019368 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8019344:	2a2d      	cmp	r2, #45	@ 0x2d
 8019346:	d018      	beq.n	801937a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8019348:	d833      	bhi.n	80193b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801934a:	2a2c      	cmp	r2, #44	@ 0x2c
 801934c:	d196      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801934e:	684a      	ldr	r2, [r1, #4]
 8019350:	7813      	ldrb	r3, [r2, #0]
 8019352:	7852      	ldrb	r2, [r2, #1]
 8019354:	2a00      	cmp	r2, #0
 8019356:	d191      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019358:	2b01      	cmp	r3, #1
 801935a:	d01e      	beq.n	801939a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801935c:	2b00      	cmp	r3, #0
 801935e:	d030      	beq.n	80193c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8019360:	2b02      	cmp	r3, #2
 8019362:	d18b      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019364:	6903      	ldr	r3, [r0, #16]
 8019366:	e7b6      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019368:	2a31      	cmp	r2, #49	@ 0x31
 801936a:	d004      	beq.n	8019376 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 801936c:	d333      	bcc.n	80193d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 801936e:	2a32      	cmp	r2, #50	@ 0x32
 8019370:	d031      	beq.n	80193d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8019372:	2a33      	cmp	r2, #51	@ 0x33
 8019374:	d182      	bne.n	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019376:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8019378:	e7ad      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801937a:	684a      	ldr	r2, [r1, #4]
 801937c:	7813      	ldrb	r3, [r2, #0]
 801937e:	7852      	ldrb	r2, [r2, #1]
 8019380:	2a00      	cmp	r2, #0
 8019382:	f47f af7b 	bne.w	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019386:	2b01      	cmp	r3, #1
 8019388:	d005      	beq.n	8019396 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801938a:	d310      	bcc.n	80193ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 801938c:	2b02      	cmp	r3, #2
 801938e:	f47f af75 	bne.w	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8019392:	6983      	ldr	r3, [r0, #24]
 8019394:	e79f      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8019396:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8019398:	e79d      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801939a:	6a03      	ldr	r3, [r0, #32]
 801939c:	e79b      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801939e:	684b      	ldr	r3, [r1, #4]
 80193a0:	781a      	ldrb	r2, [r3, #0]
 80193a2:	785b      	ldrb	r3, [r3, #1]
 80193a4:	2b00      	cmp	r3, #0
 80193a6:	f47f af69 	bne.w	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80193aa:	2a00      	cmp	r2, #0
 80193ac:	d193      	bne.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193ae:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80193b0:	e791      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193b2:	684b      	ldr	r3, [r1, #4]
 80193b4:	781a      	ldrb	r2, [r3, #0]
 80193b6:	785b      	ldrb	r3, [r3, #1]
 80193b8:	2b00      	cmp	r3, #0
 80193ba:	f47f af5f 	bne.w	801927c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80193be:	2a00      	cmp	r2, #0
 80193c0:	d189      	bne.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193c2:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 80193c4:	e787      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193c6:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 80193c8:	e785      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193ca:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 80193cc:	e783      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193ce:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 80193d0:	e781      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193d2:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 80193d4:	e77f      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80193d6:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 80193d8:	e77d      	b.n	80192d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

080193da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80193da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193de:	b087      	sub	sp, #28
 80193e0:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80193e2:	9205      	str	r2, [sp, #20]
 80193e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80193e8:	9101      	str	r1, [sp, #4]
 80193ea:	9202      	str	r2, [sp, #8]
 80193ec:	6841      	ldr	r1, [r0, #4]
 80193ee:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 80193f2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 80193f6:	fb01 2404 	mla	r4, r1, r4, r2
 80193fa:	6802      	ldr	r2, [r0, #0]
 80193fc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019400:	f8de 2000 	ldr.w	r2, [lr]
 8019404:	9203      	str	r2, [sp, #12]
 8019406:	f8de 2004 	ldr.w	r2, [lr, #4]
 801940a:	3204      	adds	r2, #4
 801940c:	9204      	str	r2, [sp, #16]
 801940e:	9a02      	ldr	r2, [sp, #8]
 8019410:	43d6      	mvns	r6, r2
 8019412:	b2f6      	uxtb	r6, r6
 8019414:	9a01      	ldr	r2, [sp, #4]
 8019416:	2a00      	cmp	r2, #0
 8019418:	dc03      	bgt.n	8019422 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801941a:	9a05      	ldr	r2, [sp, #20]
 801941c:	2a00      	cmp	r2, #0
 801941e:	f340 8129 	ble.w	8019674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019422:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019424:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019428:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801942c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801942e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019432:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019436:	2b00      	cmp	r3, #0
 8019438:	dd0e      	ble.n	8019458 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801943a:	1408      	asrs	r0, r1, #16
 801943c:	d405      	bmi.n	801944a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801943e:	4560      	cmp	r0, ip
 8019440:	da03      	bge.n	801944a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019442:	1410      	asrs	r0, r2, #16
 8019444:	d401      	bmi.n	801944a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019446:	42b8      	cmp	r0, r7
 8019448:	db07      	blt.n	801945a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801944a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801944c:	3b01      	subs	r3, #1
 801944e:	3402      	adds	r4, #2
 8019450:	4401      	add	r1, r0
 8019452:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019454:	4402      	add	r2, r0
 8019456:	e7ee      	b.n	8019436 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019458:	d071      	beq.n	801953e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801945a:	1e58      	subs	r0, r3, #1
 801945c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801945e:	fb05 1500 	mla	r5, r5, r0, r1
 8019462:	142d      	asrs	r5, r5, #16
 8019464:	d45f      	bmi.n	8019526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019466:	4565      	cmp	r5, ip
 8019468:	da5d      	bge.n	8019526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801946a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801946c:	fb05 2000 	mla	r0, r5, r0, r2
 8019470:	1400      	asrs	r0, r0, #16
 8019472:	d458      	bmi.n	8019526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019474:	42b8      	cmp	r0, r7
 8019476:	da56      	bge.n	8019526 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8019478:	4699      	mov	r9, r3
 801947a:	46a2      	mov	sl, r4
 801947c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8019480:	f1b9 0f00 	cmp.w	r9, #0
 8019484:	dd57      	ble.n	8019536 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8019486:	ea4f 4c22 	mov.w	ip, r2, asr #16
 801948a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801948e:	9803      	ldr	r0, [sp, #12]
 8019490:	140d      	asrs	r5, r1, #16
 8019492:	f109 39ff 	add.w	r9, r9, #4294967295
 8019496:	fb07 000c 	mla	r0, r7, ip, r0
 801949a:	5d40      	ldrb	r0, [r0, r5]
 801949c:	9d04      	ldr	r5, [sp, #16]
 801949e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80194a2:	f8ba 5000 	ldrh.w	r5, [sl]
 80194a6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80194aa:	122f      	asrs	r7, r5, #8
 80194ac:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80194b0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80194b4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80194b8:	00ed      	lsls	r5, r5, #3
 80194ba:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80194be:	fb17 f706 	smulbb	r7, r7, r6
 80194c2:	b2ed      	uxtb	r5, r5
 80194c4:	fb18 f806 	smulbb	r8, r8, r6
 80194c8:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80194cc:	10c7      	asrs	r7, r0, #3
 80194ce:	fb15 f506 	smulbb	r5, r5, r6
 80194d2:	00c0      	lsls	r0, r0, #3
 80194d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80194d8:	fa1f fc8c 	uxth.w	ip, ip
 80194dc:	b2c0      	uxtb	r0, r0
 80194de:	fb07 870b 	mla	r7, r7, fp, r8
 80194e2:	fb00 500b 	mla	r0, r0, fp, r5
 80194e6:	f10c 0501 	add.w	r5, ip, #1
 80194ea:	b2bf      	uxth	r7, r7
 80194ec:	b280      	uxth	r0, r0
 80194ee:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80194f2:	f107 0801 	add.w	r8, r7, #1
 80194f6:	1c45      	adds	r5, r0, #1
 80194f8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80194fc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019500:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019504:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019506:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801950a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801950e:	4401      	add	r1, r0
 8019510:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019514:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019516:	ea45 0c0c 	orr.w	ip, r5, ip
 801951a:	4402      	add	r2, r0
 801951c:	ea4c 0c08 	orr.w	ip, ip, r8
 8019520:	f82a cb02 	strh.w	ip, [sl], #2
 8019524:	e7ac      	b.n	8019480 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019526:	f04f 0800 	mov.w	r8, #0
 801952a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801952e:	eb03 0008 	add.w	r0, r3, r8
 8019532:	2800      	cmp	r0, #0
 8019534:	dc41      	bgt.n	80195ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019536:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801953a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801953e:	9b01      	ldr	r3, [sp, #4]
 8019540:	2b00      	cmp	r3, #0
 8019542:	f340 8097 	ble.w	8019674 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8019546:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801954a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801954c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019550:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019554:	eef0 6a62 	vmov.f32	s13, s5
 8019558:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801955c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019560:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019564:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8019568:	eef0 6a43 	vmov.f32	s13, s6
 801956c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019570:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8019574:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019578:	ee61 7a27 	vmul.f32	s15, s2, s15
 801957c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019580:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019584:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019588:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801958c:	ee12 2a90 	vmov	r2, s5
 8019590:	eef0 2a47 	vmov.f32	s5, s14
 8019594:	fb92 f3f3 	sdiv	r3, r2, r3
 8019598:	ee13 2a10 	vmov	r2, s6
 801959c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801959e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80195a0:	eeb0 3a67 	vmov.f32	s6, s15
 80195a4:	fb92 f3f3 	sdiv	r3, r2, r3
 80195a8:	9314      	str	r3, [sp, #80]	@ 0x50
 80195aa:	9b01      	ldr	r3, [sp, #4]
 80195ac:	9a05      	ldr	r2, [sp, #20]
 80195ae:	3b01      	subs	r3, #1
 80195b0:	9301      	str	r3, [sp, #4]
 80195b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80195b4:	bf08      	it	eq
 80195b6:	4613      	moveq	r3, r2
 80195b8:	e72c      	b.n	8019414 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80195ba:	140f      	asrs	r7, r1, #16
 80195bc:	d453      	bmi.n	8019666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80195be:	f8de 5008 	ldr.w	r5, [lr, #8]
 80195c2:	42bd      	cmp	r5, r7
 80195c4:	dd4f      	ble.n	8019666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80195c6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80195ca:	d44c      	bmi.n	8019666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80195cc:	f8de 000c 	ldr.w	r0, [lr, #12]
 80195d0:	4560      	cmp	r0, ip
 80195d2:	dd48      	ble.n	8019666 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80195d4:	9803      	ldr	r0, [sp, #12]
 80195d6:	b22d      	sxth	r5, r5
 80195d8:	fb0c 0505 	mla	r5, ip, r5, r0
 80195dc:	5de8      	ldrb	r0, [r5, r7]
 80195de:	9d04      	ldr	r5, [sp, #16]
 80195e0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80195e4:	f06f 0501 	mvn.w	r5, #1
 80195e8:	fb05 fb08 	mul.w	fp, r5, r8
 80195ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80195f0:	f834 500b 	ldrh.w	r5, [r4, fp]
 80195f4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80195f8:	122f      	asrs	r7, r5, #8
 80195fa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80195fe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019602:	00ed      	lsls	r5, r5, #3
 8019604:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8019608:	fb17 f706 	smulbb	r7, r7, r6
 801960c:	b2ed      	uxtb	r5, r5
 801960e:	fb19 f906 	smulbb	r9, r9, r6
 8019612:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019616:	10c7      	asrs	r7, r0, #3
 8019618:	fb15 f506 	smulbb	r5, r5, r6
 801961c:	00c0      	lsls	r0, r0, #3
 801961e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019622:	fa1f fc8c 	uxth.w	ip, ip
 8019626:	b2c0      	uxtb	r0, r0
 8019628:	fb07 970a 	mla	r7, r7, sl, r9
 801962c:	fb00 500a 	mla	r0, r0, sl, r5
 8019630:	f10c 0501 	add.w	r5, ip, #1
 8019634:	b2bf      	uxth	r7, r7
 8019636:	b280      	uxth	r0, r0
 8019638:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801963c:	f107 0901 	add.w	r9, r7, #1
 8019640:	1c45      	adds	r5, r0, #1
 8019642:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019646:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801964a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801964e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019652:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019656:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801965a:	ea45 0c0c 	orr.w	ip, r5, ip
 801965e:	ea4c 0c09 	orr.w	ip, ip, r9
 8019662:	f824 c00b 	strh.w	ip, [r4, fp]
 8019666:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019668:	f108 38ff 	add.w	r8, r8, #4294967295
 801966c:	4401      	add	r1, r0
 801966e:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019670:	4402      	add	r2, r0
 8019672:	e75c      	b.n	801952e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8019674:	b007      	add	sp, #28
 8019676:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801967a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801967a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801967e:	b085      	sub	sp, #20
 8019680:	4693      	mov	fp, r2
 8019682:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019686:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8019688:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801968a:	6870      	ldr	r0, [r6, #4]
 801968c:	9100      	str	r1, [sp, #0]
 801968e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019692:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8019696:	fb00 2404 	mla	r4, r0, r4, r2
 801969a:	6832      	ldr	r2, [r6, #0]
 801969c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80196a0:	682a      	ldr	r2, [r5, #0]
 80196a2:	9201      	str	r2, [sp, #4]
 80196a4:	686a      	ldr	r2, [r5, #4]
 80196a6:	3204      	adds	r2, #4
 80196a8:	9202      	str	r2, [sp, #8]
 80196aa:	9a00      	ldr	r2, [sp, #0]
 80196ac:	2a00      	cmp	r2, #0
 80196ae:	dc03      	bgt.n	80196b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80196b0:	f1bb 0f00 	cmp.w	fp, #0
 80196b4:	f340 80a0 	ble.w	80197f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80196b8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80196ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80196be:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80196c2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80196c4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80196c8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80196cc:	2b00      	cmp	r3, #0
 80196ce:	dd0c      	ble.n	80196ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80196d0:	1406      	asrs	r6, r0, #16
 80196d2:	d405      	bmi.n	80196e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80196d4:	454e      	cmp	r6, r9
 80196d6:	da03      	bge.n	80196e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80196d8:	1416      	asrs	r6, r2, #16
 80196da:	d401      	bmi.n	80196e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80196dc:	4546      	cmp	r6, r8
 80196de:	db05      	blt.n	80196ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80196e0:	4470      	add	r0, lr
 80196e2:	4462      	add	r2, ip
 80196e4:	3b01      	subs	r3, #1
 80196e6:	3402      	adds	r4, #2
 80196e8:	e7f0      	b.n	80196cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80196ea:	d00f      	beq.n	801970c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80196ec:	1e5e      	subs	r6, r3, #1
 80196ee:	fb0e 0706 	mla	r7, lr, r6, r0
 80196f2:	143f      	asrs	r7, r7, #16
 80196f4:	d541      	bpl.n	801977a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 80196f6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 80196fa:	4698      	mov	r8, r3
 80196fc:	9603      	str	r6, [sp, #12]
 80196fe:	f1b8 0f00 	cmp.w	r8, #0
 8019702:	dc59      	bgt.n	80197b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019704:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019708:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801970c:	9b00      	ldr	r3, [sp, #0]
 801970e:	2b00      	cmp	r3, #0
 8019710:	dd72      	ble.n	80197f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8019712:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019716:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019718:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801971c:	eeb0 6a62 	vmov.f32	s12, s5
 8019720:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019724:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019728:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801972c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8019730:	eeb0 6a43 	vmov.f32	s12, s6
 8019734:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019738:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801973c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019740:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019744:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019748:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801974c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019750:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019754:	ee12 2a90 	vmov	r2, s5
 8019758:	eef0 2a47 	vmov.f32	s5, s14
 801975c:	fb92 fef3 	sdiv	lr, r2, r3
 8019760:	ee13 2a10 	vmov	r2, s6
 8019764:	eeb0 3a67 	vmov.f32	s6, s15
 8019768:	fb92 fcf3 	sdiv	ip, r2, r3
 801976c:	9b00      	ldr	r3, [sp, #0]
 801976e:	3b01      	subs	r3, #1
 8019770:	9300      	str	r3, [sp, #0]
 8019772:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019774:	bf08      	it	eq
 8019776:	465b      	moveq	r3, fp
 8019778:	e797      	b.n	80196aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801977a:	454f      	cmp	r7, r9
 801977c:	dabb      	bge.n	80196f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801977e:	fb0c 2606 	mla	r6, ip, r6, r2
 8019782:	1436      	asrs	r6, r6, #16
 8019784:	d4b7      	bmi.n	80196f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019786:	4546      	cmp	r6, r8
 8019788:	dab5      	bge.n	80196f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801978a:	461e      	mov	r6, r3
 801978c:	46a0      	mov	r8, r4
 801978e:	2e00      	cmp	r6, #0
 8019790:	ddb8      	ble.n	8019704 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019792:	1417      	asrs	r7, r2, #16
 8019794:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019798:	9901      	ldr	r1, [sp, #4]
 801979a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801979e:	4462      	add	r2, ip
 80197a0:	4470      	add	r0, lr
 80197a2:	fb0a 1707 	mla	r7, sl, r7, r1
 80197a6:	9902      	ldr	r1, [sp, #8]
 80197a8:	3e01      	subs	r6, #1
 80197aa:	f817 7009 	ldrb.w	r7, [r7, r9]
 80197ae:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80197b2:	f828 7b02 	strh.w	r7, [r8], #2
 80197b6:	e7ea      	b.n	801978e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80197b8:	ea5f 4920 	movs.w	r9, r0, asr #16
 80197bc:	d417      	bmi.n	80197ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80197be:	68ae      	ldr	r6, [r5, #8]
 80197c0:	454e      	cmp	r6, r9
 80197c2:	dd14      	ble.n	80197ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80197c4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80197c8:	d411      	bmi.n	80197ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80197ca:	68ef      	ldr	r7, [r5, #12]
 80197cc:	4557      	cmp	r7, sl
 80197ce:	dd0e      	ble.n	80197ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80197d0:	9f01      	ldr	r7, [sp, #4]
 80197d2:	b236      	sxth	r6, r6
 80197d4:	f06f 0101 	mvn.w	r1, #1
 80197d8:	fb0a 7606 	mla	r6, sl, r6, r7
 80197dc:	9f02      	ldr	r7, [sp, #8]
 80197de:	f816 6009 	ldrb.w	r6, [r6, r9]
 80197e2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80197e6:	fb01 f608 	mul.w	r6, r1, r8
 80197ea:	9903      	ldr	r1, [sp, #12]
 80197ec:	538f      	strh	r7, [r1, r6]
 80197ee:	4470      	add	r0, lr
 80197f0:	4462      	add	r2, ip
 80197f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80197f6:	e782      	b.n	80196fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80197f8:	b005      	add	sp, #20
 80197fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080197fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80197fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019802:	b087      	sub	sp, #28
 8019804:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8019806:	9205      	str	r2, [sp, #20]
 8019808:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801980c:	9102      	str	r1, [sp, #8]
 801980e:	9203      	str	r2, [sp, #12]
 8019810:	6861      	ldr	r1, [r4, #4]
 8019812:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8019816:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801981a:	fb01 2000 	mla	r0, r1, r0, r2
 801981e:	6822      	ldr	r2, [r4, #0]
 8019820:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8019824:	9200      	str	r2, [sp, #0]
 8019826:	f8dc 2000 	ldr.w	r2, [ip]
 801982a:	9204      	str	r2, [sp, #16]
 801982c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019830:	3204      	adds	r2, #4
 8019832:	9201      	str	r2, [sp, #4]
 8019834:	9a03      	ldr	r2, [sp, #12]
 8019836:	43d5      	mvns	r5, r2
 8019838:	b2ed      	uxtb	r5, r5
 801983a:	9a02      	ldr	r2, [sp, #8]
 801983c:	2a00      	cmp	r2, #0
 801983e:	dc03      	bgt.n	8019848 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019840:	9a05      	ldr	r2, [sp, #20]
 8019842:	2a00      	cmp	r2, #0
 8019844:	f340 812c 	ble.w	8019aa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019848:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801984a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 801984e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019852:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019854:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8019858:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801985c:	2b00      	cmp	r3, #0
 801985e:	dd10      	ble.n	8019882 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019860:	140c      	asrs	r4, r1, #16
 8019862:	d405      	bmi.n	8019870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019864:	4574      	cmp	r4, lr
 8019866:	da03      	bge.n	8019870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019868:	1414      	asrs	r4, r2, #16
 801986a:	d401      	bmi.n	8019870 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801986c:	42bc      	cmp	r4, r7
 801986e:	db09      	blt.n	8019884 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019870:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8019872:	3b01      	subs	r3, #1
 8019874:	9800      	ldr	r0, [sp, #0]
 8019876:	4421      	add	r1, r4
 8019878:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801987a:	3002      	adds	r0, #2
 801987c:	4422      	add	r2, r4
 801987e:	9000      	str	r0, [sp, #0]
 8019880:	e7ec      	b.n	801985c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019882:	d071      	beq.n	8019968 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019884:	1e5c      	subs	r4, r3, #1
 8019886:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8019888:	fb06 1604 	mla	r6, r6, r4, r1
 801988c:	1436      	asrs	r6, r6, #16
 801988e:	d45d      	bmi.n	801994c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019890:	4576      	cmp	r6, lr
 8019892:	da5b      	bge.n	801994c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019894:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8019896:	fb06 2404 	mla	r4, r6, r4, r2
 801989a:	1424      	asrs	r4, r4, #16
 801989c:	d456      	bmi.n	801994c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801989e:	42bc      	cmp	r4, r7
 80198a0:	da54      	bge.n	801994c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80198a2:	4698      	mov	r8, r3
 80198a4:	f8dd 9000 	ldr.w	r9, [sp]
 80198a8:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80198ac:	f1b8 0f00 	cmp.w	r8, #0
 80198b0:	dd54      	ble.n	801995c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80198b2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80198b6:	1414      	asrs	r4, r2, #16
 80198b8:	9804      	ldr	r0, [sp, #16]
 80198ba:	140e      	asrs	r6, r1, #16
 80198bc:	f108 38ff 	add.w	r8, r8, #4294967295
 80198c0:	fb07 0404 	mla	r4, r7, r4, r0
 80198c4:	9801      	ldr	r0, [sp, #4]
 80198c6:	f814 e006 	ldrb.w	lr, [r4, r6]
 80198ca:	f8b9 4000 	ldrh.w	r4, [r9]
 80198ce:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80198d2:	1227      	asrs	r7, r4, #8
 80198d4:	eb00 0b0e 	add.w	fp, r0, lr
 80198d8:	f810 e00e 	ldrb.w	lr, [r0, lr]
 80198dc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80198e0:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80198e2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80198e6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80198ea:	4401      	add	r1, r0
 80198ec:	fb16 f60a 	smulbb	r6, r6, sl
 80198f0:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80198f2:	fb1b fb0a 	smulbb	fp, fp, sl
 80198f6:	fb07 6705 	mla	r7, r7, r5, r6
 80198fa:	10e6      	asrs	r6, r4, #3
 80198fc:	00e4      	lsls	r4, r4, #3
 80198fe:	4402      	add	r2, r0
 8019900:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019904:	b2bf      	uxth	r7, r7
 8019906:	b2e4      	uxtb	r4, r4
 8019908:	fb06 b605 	mla	r6, r6, r5, fp
 801990c:	fb14 f405 	smulbb	r4, r4, r5
 8019910:	b2b6      	uxth	r6, r6
 8019912:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8019916:	1c7c      	adds	r4, r7, #1
 8019918:	f106 0b01 	add.w	fp, r6, #1
 801991c:	fa1f fe8e 	uxth.w	lr, lr
 8019920:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019924:	f10e 0401 	add.w	r4, lr, #1
 8019928:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801992c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019930:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8019934:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019938:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801993c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019940:	4327      	orrs	r7, r4
 8019942:	ea47 070b 	orr.w	r7, r7, fp
 8019946:	f829 7b02 	strh.w	r7, [r9], #2
 801994a:	e7af      	b.n	80198ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 801994c:	f04f 0e00 	mov.w	lr, #0
 8019950:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8019954:	eb03 040e 	add.w	r4, r3, lr
 8019958:	2c00      	cmp	r4, #0
 801995a:	dc43      	bgt.n	80199e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801995c:	9a00      	ldr	r2, [sp, #0]
 801995e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019962:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019966:	9300      	str	r3, [sp, #0]
 8019968:	9b02      	ldr	r3, [sp, #8]
 801996a:	2b00      	cmp	r3, #0
 801996c:	f340 8098 	ble.w	8019aa0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019970:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8019974:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019976:	ee30 0a04 	vadd.f32	s0, s0, s8
 801997a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801997e:	eef0 6a62 	vmov.f32	s13, s5
 8019982:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019986:	ee31 1a05 	vadd.f32	s2, s2, s10
 801998a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801998e:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8019992:	eef0 6a43 	vmov.f32	s13, s6
 8019996:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801999a:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 801999e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80199a2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80199a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80199aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80199ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80199b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80199b6:	ee12 2a90 	vmov	r2, s5
 80199ba:	eef0 2a47 	vmov.f32	s5, s14
 80199be:	fb92 f3f3 	sdiv	r3, r2, r3
 80199c2:	ee13 2a10 	vmov	r2, s6
 80199c6:	9313      	str	r3, [sp, #76]	@ 0x4c
 80199c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80199ca:	eeb0 3a67 	vmov.f32	s6, s15
 80199ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80199d2:	9314      	str	r3, [sp, #80]	@ 0x50
 80199d4:	9b02      	ldr	r3, [sp, #8]
 80199d6:	9a05      	ldr	r2, [sp, #20]
 80199d8:	3b01      	subs	r3, #1
 80199da:	9302      	str	r3, [sp, #8]
 80199dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80199de:	bf08      	it	eq
 80199e0:	4613      	moveq	r3, r2
 80199e2:	e72a      	b.n	801983a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80199e4:	140f      	asrs	r7, r1, #16
 80199e6:	d454      	bmi.n	8019a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80199e8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80199ec:	42be      	cmp	r6, r7
 80199ee:	dd50      	ble.n	8019a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80199f0:	ea5f 4822 	movs.w	r8, r2, asr #16
 80199f4:	d44d      	bmi.n	8019a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80199f6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80199fa:	4544      	cmp	r4, r8
 80199fc:	dd49      	ble.n	8019a92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80199fe:	9c04      	ldr	r4, [sp, #16]
 8019a00:	b236      	sxth	r6, r6
 8019a02:	f06f 0001 	mvn.w	r0, #1
 8019a06:	fb08 4606 	mla	r6, r8, r6, r4
 8019a0a:	9c01      	ldr	r4, [sp, #4]
 8019a0c:	fb00 fa0e 	mul.w	sl, r0, lr
 8019a10:	9800      	ldr	r0, [sp, #0]
 8019a12:	f816 8007 	ldrb.w	r8, [r6, r7]
 8019a16:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8019a1a:	eb04 0b08 	add.w	fp, r4, r8
 8019a1e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8019a22:	9801      	ldr	r0, [sp, #4]
 8019a24:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019a28:	1227      	asrs	r7, r4, #8
 8019a2a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8019a2e:	fb16 f609 	smulbb	r6, r6, r9
 8019a32:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019a36:	f810 8008 	ldrb.w	r8, [r0, r8]
 8019a3a:	fb1b fb09 	smulbb	fp, fp, r9
 8019a3e:	fb07 6705 	mla	r7, r7, r5, r6
 8019a42:	10e6      	asrs	r6, r4, #3
 8019a44:	00e4      	lsls	r4, r4, #3
 8019a46:	9800      	ldr	r0, [sp, #0]
 8019a48:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019a4c:	b2bf      	uxth	r7, r7
 8019a4e:	b2e4      	uxtb	r4, r4
 8019a50:	fb06 b605 	mla	r6, r6, r5, fp
 8019a54:	fb14 f405 	smulbb	r4, r4, r5
 8019a58:	b2b6      	uxth	r6, r6
 8019a5a:	fb08 4809 	mla	r8, r8, r9, r4
 8019a5e:	1c7c      	adds	r4, r7, #1
 8019a60:	f106 0b01 	add.w	fp, r6, #1
 8019a64:	fa1f f888 	uxth.w	r8, r8
 8019a68:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019a6c:	f108 0401 	add.w	r4, r8, #1
 8019a70:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019a74:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019a78:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019a7c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019a80:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019a84:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8019a88:	4327      	orrs	r7, r4
 8019a8a:	ea47 070b 	orr.w	r7, r7, fp
 8019a8e:	f820 700a 	strh.w	r7, [r0, sl]
 8019a92:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019a94:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019a98:	4401      	add	r1, r0
 8019a9a:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8019a9c:	4402      	add	r2, r0
 8019a9e:	e759      	b.n	8019954 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019aa0:	b007      	add	sp, #28
 8019aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019aa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019aac:	b085      	sub	sp, #20
 8019aae:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019ab2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8019ab4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8019ab6:	9203      	str	r2, [sp, #12]
 8019ab8:	6870      	ldr	r0, [r6, #4]
 8019aba:	686f      	ldr	r7, [r5, #4]
 8019abc:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8019ac0:	3704      	adds	r7, #4
 8019ac2:	9101      	str	r1, [sp, #4]
 8019ac4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019ac8:	fb00 2404 	mla	r4, r0, r4, r2
 8019acc:	6832      	ldr	r2, [r6, #0]
 8019ace:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ad2:	682a      	ldr	r2, [r5, #0]
 8019ad4:	9202      	str	r2, [sp, #8]
 8019ad6:	9a01      	ldr	r2, [sp, #4]
 8019ad8:	2a00      	cmp	r2, #0
 8019ada:	dc03      	bgt.n	8019ae4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019adc:	9a03      	ldr	r2, [sp, #12]
 8019ade:	2a00      	cmp	r2, #0
 8019ae0:	f340 80cc 	ble.w	8019c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019ae4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019ae6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019aea:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019aee:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019af0:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019af4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019af8:	2b00      	cmp	r3, #0
 8019afa:	dd0d      	ble.n	8019b18 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019afc:	1406      	asrs	r6, r0, #16
 8019afe:	d405      	bmi.n	8019b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019b00:	454e      	cmp	r6, r9
 8019b02:	da03      	bge.n	8019b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019b04:	1416      	asrs	r6, r2, #16
 8019b06:	d401      	bmi.n	8019b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8019b08:	4546      	cmp	r6, r8
 8019b0a:	db06      	blt.n	8019b1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b0c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8019b0e:	4460      	add	r0, ip
 8019b10:	3b01      	subs	r3, #1
 8019b12:	3402      	adds	r4, #2
 8019b14:	4432      	add	r2, r6
 8019b16:	e7ef      	b.n	8019af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019b18:	d00f      	beq.n	8019b3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019b1a:	1e5e      	subs	r6, r3, #1
 8019b1c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019b20:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8019b24:	d543      	bpl.n	8019bae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019b26:	4698      	mov	r8, r3
 8019b28:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8019b2c:	f1b8 0f00 	cmp.w	r8, #0
 8019b30:	dc71      	bgt.n	8019c16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019b32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019b36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019b3a:	9b01      	ldr	r3, [sp, #4]
 8019b3c:	2b00      	cmp	r3, #0
 8019b3e:	f340 809d 	ble.w	8019c7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019b42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019b46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019b48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019b4c:	eeb0 6a62 	vmov.f32	s12, s5
 8019b50:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019b54:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b58:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b5c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8019b60:	eeb0 6a43 	vmov.f32	s12, s6
 8019b64:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b68:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8019b6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b70:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b78:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b80:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b84:	ee12 2a90 	vmov	r2, s5
 8019b88:	eef0 2a47 	vmov.f32	s5, s14
 8019b8c:	fb92 fcf3 	sdiv	ip, r2, r3
 8019b90:	ee13 2a10 	vmov	r2, s6
 8019b94:	eeb0 3a67 	vmov.f32	s6, s15
 8019b98:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b9c:	9312      	str	r3, [sp, #72]	@ 0x48
 8019b9e:	9b01      	ldr	r3, [sp, #4]
 8019ba0:	9a03      	ldr	r2, [sp, #12]
 8019ba2:	3b01      	subs	r3, #1
 8019ba4:	9301      	str	r3, [sp, #4]
 8019ba6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019ba8:	bf08      	it	eq
 8019baa:	4613      	moveq	r3, r2
 8019bac:	e793      	b.n	8019ad6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8019bae:	45ce      	cmp	lr, r9
 8019bb0:	dab9      	bge.n	8019b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019bb2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019bb4:	fb01 2606 	mla	r6, r1, r6, r2
 8019bb8:	1436      	asrs	r6, r6, #16
 8019bba:	d4b4      	bmi.n	8019b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019bbc:	4546      	cmp	r6, r8
 8019bbe:	dab2      	bge.n	8019b26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019bc0:	4698      	mov	r8, r3
 8019bc2:	46a2      	mov	sl, r4
 8019bc4:	f1b8 0f00 	cmp.w	r8, #0
 8019bc8:	ddb3      	ble.n	8019b32 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8019bca:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019bce:	1416      	asrs	r6, r2, #16
 8019bd0:	9902      	ldr	r1, [sp, #8]
 8019bd2:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8019bd6:	f108 38ff 	add.w	r8, r8, #4294967295
 8019bda:	4460      	add	r0, ip
 8019bdc:	fb09 1606 	mla	r6, r9, r6, r1
 8019be0:	4928      	ldr	r1, [pc, #160]	@ (8019c84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8019be2:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019be6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019bea:	eb07 0b0e 	add.w	fp, r7, lr
 8019bee:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8019bf2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019bf6:	00f6      	lsls	r6, r6, #3
 8019bf8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019bfc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019bfe:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019c02:	440a      	add	r2, r1
 8019c04:	ea49 0606 	orr.w	r6, r9, r6
 8019c08:	f817 900e 	ldrb.w	r9, [r7, lr]
 8019c0c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8019c10:	f82a 6b02 	strh.w	r6, [sl], #2
 8019c14:	e7d6      	b.n	8019bc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019c16:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019c1a:	d429      	bmi.n	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019c1c:	68ae      	ldr	r6, [r5, #8]
 8019c1e:	454e      	cmp	r6, r9
 8019c20:	dd26      	ble.n	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019c22:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8019c26:	d423      	bmi.n	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019c28:	68e9      	ldr	r1, [r5, #12]
 8019c2a:	4559      	cmp	r1, fp
 8019c2c:	dd20      	ble.n	8019c70 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019c2e:	fa0f fe86 	sxth.w	lr, r6
 8019c32:	9902      	ldr	r1, [sp, #8]
 8019c34:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019c38:	f06f 0101 	mvn.w	r1, #1
 8019c3c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019c40:	fb01 f908 	mul.w	r9, r1, r8
 8019c44:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8019c48:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019c4c:	eb07 060e 	add.w	r6, r7, lr
 8019c50:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019c54:	7876      	ldrb	r6, [r6, #1]
 8019c56:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8019c5a:	00f6      	lsls	r6, r6, #3
 8019c5c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019c60:	ea4b 0606 	orr.w	r6, fp, r6
 8019c64:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019c68:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8019c6c:	f82a 6009 	strh.w	r6, [sl, r9]
 8019c70:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8019c72:	4460      	add	r0, ip
 8019c74:	f108 38ff 	add.w	r8, r8, #4294967295
 8019c78:	440a      	add	r2, r1
 8019c7a:	e757      	b.n	8019b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019c7c:	b005      	add	sp, #20
 8019c7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019c82:	bf00      	nop
 8019c84:	fffff800 	.word	0xfffff800

08019c88 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019c88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c8c:	b087      	sub	sp, #28
 8019c8e:	468b      	mov	fp, r1
 8019c90:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019c94:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019c96:	9204      	str	r2, [sp, #16]
 8019c98:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8019c9c:	6841      	ldr	r1, [r0, #4]
 8019c9e:	9205      	str	r2, [sp, #20]
 8019ca0:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8019ca4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8019ca8:	fb01 2404 	mla	r4, r1, r4, r2
 8019cac:	6802      	ldr	r2, [r0, #0]
 8019cae:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019cb2:	f8dc 2000 	ldr.w	r2, [ip]
 8019cb6:	9201      	str	r2, [sp, #4]
 8019cb8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019cbc:	3204      	adds	r2, #4
 8019cbe:	9202      	str	r2, [sp, #8]
 8019cc0:	f1bb 0f00 	cmp.w	fp, #0
 8019cc4:	dc03      	bgt.n	8019cce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019cc6:	9a04      	ldr	r2, [sp, #16]
 8019cc8:	2a00      	cmp	r2, #0
 8019cca:	f340 8138 	ble.w	8019f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019cce:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019cd0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019cd4:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019cd8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019cda:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019cde:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019ce2:	2b00      	cmp	r3, #0
 8019ce4:	dd0e      	ble.n	8019d04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019ce6:	1402      	asrs	r2, r0, #16
 8019ce8:	d405      	bmi.n	8019cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019cea:	42ba      	cmp	r2, r7
 8019cec:	da03      	bge.n	8019cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019cee:	140a      	asrs	r2, r1, #16
 8019cf0:	d401      	bmi.n	8019cf6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019cf2:	42b2      	cmp	r2, r6
 8019cf4:	db07      	blt.n	8019d06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019cf6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019cf8:	3b01      	subs	r3, #1
 8019cfa:	3402      	adds	r4, #2
 8019cfc:	4410      	add	r0, r2
 8019cfe:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019d00:	4411      	add	r1, r2
 8019d02:	e7ee      	b.n	8019ce2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019d04:	d019      	beq.n	8019d3a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019d06:	1e5a      	subs	r2, r3, #1
 8019d08:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019d0a:	fb05 0502 	mla	r5, r5, r2, r0
 8019d0e:	142d      	asrs	r5, r5, #16
 8019d10:	d409      	bmi.n	8019d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019d12:	42bd      	cmp	r5, r7
 8019d14:	da07      	bge.n	8019d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019d16:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019d18:	fb05 1202 	mla	r2, r5, r2, r1
 8019d1c:	1412      	asrs	r2, r2, #16
 8019d1e:	d402      	bmi.n	8019d26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019d20:	42b2      	cmp	r2, r6
 8019d22:	f2c0 80ac 	blt.w	8019e7e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019d26:	f04f 0e00 	mov.w	lr, #0
 8019d2a:	eb03 020e 	add.w	r2, r3, lr
 8019d2e:	2a00      	cmp	r2, #0
 8019d30:	dc3e      	bgt.n	8019db0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019d32:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019d3a:	f1bb 0f00 	cmp.w	fp, #0
 8019d3e:	f340 80fe 	ble.w	8019f3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019d42:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d46:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019d48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d4c:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d50:	eeb0 6a62 	vmov.f32	s12, s5
 8019d54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d58:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d60:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019d64:	eeb0 6a43 	vmov.f32	s12, s6
 8019d68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d6c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019d70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d78:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d88:	ee12 2a90 	vmov	r2, s5
 8019d8c:	eef0 2a47 	vmov.f32	s5, s14
 8019d90:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d94:	ee13 2a10 	vmov	r2, s6
 8019d98:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019d9a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019d9c:	eeb0 3a67 	vmov.f32	s6, s15
 8019da0:	fb92 f3f3 	sdiv	r3, r2, r3
 8019da4:	9a04      	ldr	r2, [sp, #16]
 8019da6:	9314      	str	r3, [sp, #80]	@ 0x50
 8019da8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019daa:	bf08      	it	eq
 8019dac:	4613      	moveq	r3, r2
 8019dae:	e787      	b.n	8019cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019db0:	1406      	asrs	r6, r0, #16
 8019db2:	d45d      	bmi.n	8019e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019db4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019db8:	42b5      	cmp	r5, r6
 8019dba:	dd59      	ble.n	8019e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019dbc:	140f      	asrs	r7, r1, #16
 8019dbe:	d457      	bmi.n	8019e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019dc0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019dc4:	42ba      	cmp	r2, r7
 8019dc6:	dd53      	ble.n	8019e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019dc8:	9a01      	ldr	r2, [sp, #4]
 8019dca:	b22d      	sxth	r5, r5
 8019dcc:	fb07 2505 	mla	r5, r7, r5, r2
 8019dd0:	5daa      	ldrb	r2, [r5, r6]
 8019dd2:	9d02      	ldr	r5, [sp, #8]
 8019dd4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019dd8:	0e2e      	lsrs	r6, r5, #24
 8019dda:	d049      	beq.n	8019e70 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019ddc:	f06f 0201 	mvn.w	r2, #1
 8019de0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019de4:	fb02 f20e 	mul.w	r2, r2, lr
 8019de8:	f834 8002 	ldrh.w	r8, [r4, r2]
 8019dec:	9203      	str	r2, [sp, #12]
 8019dee:	9a05      	ldr	r2, [sp, #20]
 8019df0:	ea4f 2728 	mov.w	r7, r8, asr #8
 8019df4:	4356      	muls	r6, r2
 8019df6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019dfa:	1c72      	adds	r2, r6, #1
 8019dfc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019e00:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019e04:	b2ed      	uxtb	r5, r5
 8019e06:	1212      	asrs	r2, r2, #8
 8019e08:	fa1f f982 	uxth.w	r9, r2
 8019e0c:	43d2      	mvns	r2, r2
 8019e0e:	fb16 f609 	smulbb	r6, r6, r9
 8019e12:	b2d2      	uxtb	r2, r2
 8019e14:	fb15 f509 	smulbb	r5, r5, r9
 8019e18:	fb07 6702 	mla	r7, r7, r2, r6
 8019e1c:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019e20:	fb1a fa09 	smulbb	sl, sl, r9
 8019e24:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019e28:	b2bf      	uxth	r7, r7
 8019e2a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019e2e:	fa5f f888 	uxtb.w	r8, r8
 8019e32:	fb06 a602 	mla	r6, r6, r2, sl
 8019e36:	fb08 5502 	mla	r5, r8, r2, r5
 8019e3a:	1c7a      	adds	r2, r7, #1
 8019e3c:	b2b6      	uxth	r6, r6
 8019e3e:	b2ad      	uxth	r5, r5
 8019e40:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019e44:	9a03      	ldr	r2, [sp, #12]
 8019e46:	f105 0a01 	add.w	sl, r5, #1
 8019e4a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019e4e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019e52:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019e56:	ea4a 0707 	orr.w	r7, sl, r7
 8019e5a:	f106 0a01 	add.w	sl, r6, #1
 8019e5e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019e62:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e66:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019e6a:	ea47 070a 	orr.w	r7, r7, sl
 8019e6e:	52a7      	strh	r7, [r4, r2]
 8019e70:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019e72:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019e76:	4410      	add	r0, r2
 8019e78:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019e7a:	4411      	add	r1, r2
 8019e7c:	e755      	b.n	8019d2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019e7e:	f04f 0800 	mov.w	r8, #0
 8019e82:	eba3 0208 	sub.w	r2, r3, r8
 8019e86:	2a00      	cmp	r2, #0
 8019e88:	f77f af53 	ble.w	8019d32 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019e8c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019e90:	140a      	asrs	r2, r1, #16
 8019e92:	9f01      	ldr	r7, [sp, #4]
 8019e94:	1405      	asrs	r5, r0, #16
 8019e96:	fb06 7202 	mla	r2, r6, r2, r7
 8019e9a:	5d52      	ldrb	r2, [r2, r5]
 8019e9c:	9d02      	ldr	r5, [sp, #8]
 8019e9e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019ea2:	0e2e      	lsrs	r6, r5, #24
 8019ea4:	d044      	beq.n	8019f30 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019ea6:	9a05      	ldr	r2, [sp, #20]
 8019ea8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019eac:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019eb0:	4356      	muls	r6, r2
 8019eb2:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019eb6:	1c72      	adds	r2, r6, #1
 8019eb8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019ebc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019ec0:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019ec4:	b2ed      	uxtb	r5, r5
 8019ec6:	1212      	asrs	r2, r2, #8
 8019ec8:	fa1f f982 	uxth.w	r9, r2
 8019ecc:	43d2      	mvns	r2, r2
 8019ece:	fb16 f609 	smulbb	r6, r6, r9
 8019ed2:	b2d2      	uxtb	r2, r2
 8019ed4:	fb15 f509 	smulbb	r5, r5, r9
 8019ed8:	fb07 6702 	mla	r7, r7, r2, r6
 8019edc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019ee0:	fb1a fa09 	smulbb	sl, sl, r9
 8019ee4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019ee8:	b2bf      	uxth	r7, r7
 8019eea:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019eee:	fa5f fe8e 	uxtb.w	lr, lr
 8019ef2:	fb06 a602 	mla	r6, r6, r2, sl
 8019ef6:	fb0e 5502 	mla	r5, lr, r2, r5
 8019efa:	1c7a      	adds	r2, r7, #1
 8019efc:	b2b6      	uxth	r6, r6
 8019efe:	b2ad      	uxth	r5, r5
 8019f00:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019f04:	f105 0a01 	add.w	sl, r5, #1
 8019f08:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019f0c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f10:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f14:	ea4a 0707 	orr.w	r7, sl, r7
 8019f18:	f106 0a01 	add.w	sl, r6, #1
 8019f1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f24:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019f28:	ea47 070a 	orr.w	r7, r7, sl
 8019f2c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019f30:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019f32:	f108 0801 	add.w	r8, r8, #1
 8019f36:	4410      	add	r0, r2
 8019f38:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019f3a:	4411      	add	r1, r2
 8019f3c:	e7a1      	b.n	8019e82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8019f3e:	b007      	add	sp, #28
 8019f40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f44 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f48:	b085      	sub	sp, #20
 8019f4a:	468b      	mov	fp, r1
 8019f4c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019f50:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019f52:	9203      	str	r2, [sp, #12]
 8019f54:	6841      	ldr	r1, [r0, #4]
 8019f56:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8019f5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019f5e:	fb01 2404 	mla	r4, r1, r4, r2
 8019f62:	6802      	ldr	r2, [r0, #0]
 8019f64:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f68:	f8de 2000 	ldr.w	r2, [lr]
 8019f6c:	9200      	str	r2, [sp, #0]
 8019f6e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019f72:	3204      	adds	r2, #4
 8019f74:	9201      	str	r2, [sp, #4]
 8019f76:	f1bb 0f00 	cmp.w	fp, #0
 8019f7a:	dc03      	bgt.n	8019f84 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019f7c:	9a03      	ldr	r2, [sp, #12]
 8019f7e:	2a00      	cmp	r2, #0
 8019f80:	f340 8153 	ble.w	801a22a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019f84:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019f86:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019f8a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019f8e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019f90:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019f94:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019f98:	2b00      	cmp	r3, #0
 8019f9a:	dd0e      	ble.n	8019fba <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019f9c:	1408      	asrs	r0, r1, #16
 8019f9e:	d405      	bmi.n	8019fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fa0:	42b8      	cmp	r0, r7
 8019fa2:	da03      	bge.n	8019fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fa4:	1410      	asrs	r0, r2, #16
 8019fa6:	d401      	bmi.n	8019fac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fa8:	42b0      	cmp	r0, r6
 8019faa:	db07      	blt.n	8019fbc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fac:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019fae:	3b01      	subs	r3, #1
 8019fb0:	3402      	adds	r4, #2
 8019fb2:	4401      	add	r1, r0
 8019fb4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019fb6:	4402      	add	r2, r0
 8019fb8:	e7ee      	b.n	8019f98 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019fba:	d017      	beq.n	8019fec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019fbc:	1e58      	subs	r0, r3, #1
 8019fbe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8019fc0:	fb05 1500 	mla	r5, r5, r0, r1
 8019fc4:	142d      	asrs	r5, r5, #16
 8019fc6:	d409      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019fc8:	42bd      	cmp	r5, r7
 8019fca:	da07      	bge.n	8019fdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019fcc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8019fce:	fb05 2000 	mla	r0, r5, r0, r2
 8019fd2:	1400      	asrs	r0, r0, #16
 8019fd4:	d402      	bmi.n	8019fdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019fd6:	42b0      	cmp	r0, r6
 8019fd8:	f2c0 80bc 	blt.w	801a154 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8019fdc:	2600      	movs	r6, #0
 8019fde:	1998      	adds	r0, r3, r6
 8019fe0:	2800      	cmp	r0, #0
 8019fe2:	dc3e      	bgt.n	801a062 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019fe8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019fec:	f1bb 0f00 	cmp.w	fp, #0
 8019ff0:	f340 811b 	ble.w	801a22a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019ff4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019ff8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019ffa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019ffe:	f1bb 0b01 	subs.w	fp, fp, #1
 801a002:	eeb0 6a62 	vmov.f32	s12, s5
 801a006:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a00a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a00e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a012:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801a016:	eeb0 6a43 	vmov.f32	s12, s6
 801a01a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a01e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801a022:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a026:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a02a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a02e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a032:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a036:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a03a:	ee12 2a90 	vmov	r2, s5
 801a03e:	eef0 2a47 	vmov.f32	s5, s14
 801a042:	fb92 f3f3 	sdiv	r3, r2, r3
 801a046:	ee13 2a10 	vmov	r2, s6
 801a04a:	9311      	str	r3, [sp, #68]	@ 0x44
 801a04c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a04e:	eeb0 3a67 	vmov.f32	s6, s15
 801a052:	fb92 f3f3 	sdiv	r3, r2, r3
 801a056:	9a03      	ldr	r2, [sp, #12]
 801a058:	9312      	str	r3, [sp, #72]	@ 0x48
 801a05a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a05c:	bf08      	it	eq
 801a05e:	4613      	moveq	r3, r2
 801a060:	e789      	b.n	8019f76 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a062:	140f      	asrs	r7, r1, #16
 801a064:	d426      	bmi.n	801a0b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a066:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a06a:	42bd      	cmp	r5, r7
 801a06c:	dd22      	ble.n	801a0b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a06e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a072:	d41f      	bmi.n	801a0b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a074:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a078:	4560      	cmp	r0, ip
 801a07a:	dd1b      	ble.n	801a0b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a07c:	9800      	ldr	r0, [sp, #0]
 801a07e:	b22d      	sxth	r5, r5
 801a080:	fb0c 0505 	mla	r5, ip, r5, r0
 801a084:	5de8      	ldrb	r0, [r5, r7]
 801a086:	9d01      	ldr	r5, [sp, #4]
 801a088:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801a08c:	0e07      	lsrs	r7, r0, #24
 801a08e:	2fff      	cmp	r7, #255	@ 0xff
 801a090:	d116      	bne.n	801a0c0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a092:	f06f 0501 	mvn.w	r5, #1
 801a096:	fb05 f706 	mul.w	r7, r5, r6
 801a09a:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801a09e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a0a2:	0945      	lsrs	r5, r0, #5
 801a0a4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a0a8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a0ac:	ea4c 0505 	orr.w	r5, ip, r5
 801a0b0:	4305      	orrs	r5, r0
 801a0b2:	53e5      	strh	r5, [r4, r7]
 801a0b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a0b6:	3e01      	subs	r6, #1
 801a0b8:	4401      	add	r1, r0
 801a0ba:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a0bc:	4402      	add	r2, r0
 801a0be:	e78e      	b.n	8019fde <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a0c0:	b2fd      	uxtb	r5, r7
 801a0c2:	2f00      	cmp	r7, #0
 801a0c4:	d0f6      	beq.n	801a0b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a0c6:	f06f 0701 	mvn.w	r7, #1
 801a0ca:	fa1f f985 	uxth.w	r9, r5
 801a0ce:	43ed      	mvns	r5, r5
 801a0d0:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a0d4:	4377      	muls	r7, r6
 801a0d6:	fb1a fa09 	smulbb	sl, sl, r9
 801a0da:	b2ed      	uxtb	r5, r5
 801a0dc:	f834 8007 	ldrh.w	r8, [r4, r7]
 801a0e0:	9702      	str	r7, [sp, #8]
 801a0e2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a0e6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a0ea:	fb17 f709 	smulbb	r7, r7, r9
 801a0ee:	b2c0      	uxtb	r0, r0
 801a0f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a0f4:	fb10 f009 	smulbb	r0, r0, r9
 801a0f8:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a0fc:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801a100:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a104:	fa1f fc8c 	uxth.w	ip, ip
 801a108:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a10c:	fa5f f888 	uxtb.w	r8, r8
 801a110:	fb07 a705 	mla	r7, r7, r5, sl
 801a114:	fb08 0005 	mla	r0, r8, r5, r0
 801a118:	f10c 0501 	add.w	r5, ip, #1
 801a11c:	b2bf      	uxth	r7, r7
 801a11e:	b280      	uxth	r0, r0
 801a120:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a124:	f100 0a01 	add.w	sl, r0, #1
 801a128:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a12c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a130:	9802      	ldr	r0, [sp, #8]
 801a132:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a136:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a13a:	f107 0a01 	add.w	sl, r7, #1
 801a13e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a142:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a146:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a14a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a14e:	f824 c000 	strh.w	ip, [r4, r0]
 801a152:	e7af      	b.n	801a0b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a154:	f04f 0800 	mov.w	r8, #0
 801a158:	eba3 0008 	sub.w	r0, r3, r8
 801a15c:	2800      	cmp	r0, #0
 801a15e:	f77f af41 	ble.w	8019fe4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a162:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a166:	1410      	asrs	r0, r2, #16
 801a168:	9f00      	ldr	r7, [sp, #0]
 801a16a:	140d      	asrs	r5, r1, #16
 801a16c:	fb06 7000 	mla	r0, r6, r0, r7
 801a170:	5d40      	ldrb	r0, [r0, r5]
 801a172:	9d01      	ldr	r5, [sp, #4]
 801a174:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a178:	0e2e      	lsrs	r6, r5, #24
 801a17a:	2eff      	cmp	r6, #255	@ 0xff
 801a17c:	d112      	bne.n	801a1a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801a17e:	482c      	ldr	r0, [pc, #176]	@ (801a230 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 801a180:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a184:	0968      	lsrs	r0, r5, #5
 801a186:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a18a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a18e:	4330      	orrs	r0, r6
 801a190:	4328      	orrs	r0, r5
 801a192:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801a196:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a198:	f108 0801 	add.w	r8, r8, #1
 801a19c:	4401      	add	r1, r0
 801a19e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a1a0:	4402      	add	r2, r0
 801a1a2:	e7d9      	b.n	801a158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a1a4:	b2f0      	uxtb	r0, r6
 801a1a6:	2e00      	cmp	r6, #0
 801a1a8:	d0f5      	beq.n	801a196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a1aa:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801a1ae:	fa1f f980 	uxth.w	r9, r0
 801a1b2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a1b6:	43c0      	mvns	r0, r0
 801a1b8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a1bc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a1c0:	fb16 f609 	smulbb	r6, r6, r9
 801a1c4:	b2c0      	uxtb	r0, r0
 801a1c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a1ca:	b2ed      	uxtb	r5, r5
 801a1cc:	fb1a fa09 	smulbb	sl, sl, r9
 801a1d0:	fb07 6700 	mla	r7, r7, r0, r6
 801a1d4:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a1d8:	fb15 f509 	smulbb	r5, r5, r9
 801a1dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a1e0:	b2bf      	uxth	r7, r7
 801a1e2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a1e6:	fa5f fc8c 	uxtb.w	ip, ip
 801a1ea:	fb06 a600 	mla	r6, r6, r0, sl
 801a1ee:	fb0c 5500 	mla	r5, ip, r0, r5
 801a1f2:	1c78      	adds	r0, r7, #1
 801a1f4:	b2b6      	uxth	r6, r6
 801a1f6:	b2ad      	uxth	r5, r5
 801a1f8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a1fc:	f105 0a01 	add.w	sl, r5, #1
 801a200:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801a204:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a208:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a20c:	ea4a 0707 	orr.w	r7, sl, r7
 801a210:	f106 0a01 	add.w	sl, r6, #1
 801a214:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a218:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a21c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a220:	ea47 070a 	orr.w	r7, r7, sl
 801a224:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 801a228:	e7b5      	b.n	801a196 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a22a:	b005      	add	sp, #20
 801a22c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a230:	fffff800 	.word	0xfffff800

0801a234 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a234:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a238:	b087      	sub	sp, #28
 801a23a:	468b      	mov	fp, r1
 801a23c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a240:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801a242:	9204      	str	r2, [sp, #16]
 801a244:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a248:	6861      	ldr	r1, [r4, #4]
 801a24a:	9205      	str	r2, [sp, #20]
 801a24c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 801a250:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801a254:	fb01 2000 	mla	r0, r1, r0, r2
 801a258:	6822      	ldr	r2, [r4, #0]
 801a25a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a25e:	f8de 2000 	ldr.w	r2, [lr]
 801a262:	9201      	str	r2, [sp, #4]
 801a264:	f8de 2004 	ldr.w	r2, [lr, #4]
 801a268:	9202      	str	r2, [sp, #8]
 801a26a:	f1bb 0f00 	cmp.w	fp, #0
 801a26e:	dc03      	bgt.n	801a278 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 801a270:	9a04      	ldr	r2, [sp, #16]
 801a272:	2a00      	cmp	r2, #0
 801a274:	f340 8142 	ble.w	801a4fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a278:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801a27a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a27e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a282:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801a284:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801a288:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a28c:	2b00      	cmp	r3, #0
 801a28e:	dd0e      	ble.n	801a2ae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a290:	140c      	asrs	r4, r1, #16
 801a292:	d405      	bmi.n	801a2a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a294:	42bc      	cmp	r4, r7
 801a296:	da03      	bge.n	801a2a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a298:	1414      	asrs	r4, r2, #16
 801a29a:	d401      	bmi.n	801a2a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a29c:	42b4      	cmp	r4, r6
 801a29e:	db07      	blt.n	801a2b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801a2a0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a2a2:	3b01      	subs	r3, #1
 801a2a4:	3002      	adds	r0, #2
 801a2a6:	4421      	add	r1, r4
 801a2a8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a2aa:	4422      	add	r2, r4
 801a2ac:	e7ee      	b.n	801a28c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a2ae:	d019      	beq.n	801a2e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801a2b0:	1e5c      	subs	r4, r3, #1
 801a2b2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801a2b4:	fb05 1504 	mla	r5, r5, r4, r1
 801a2b8:	142d      	asrs	r5, r5, #16
 801a2ba:	d409      	bmi.n	801a2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a2bc:	42bd      	cmp	r5, r7
 801a2be:	da07      	bge.n	801a2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a2c0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801a2c2:	fb05 2404 	mla	r4, r5, r4, r2
 801a2c6:	1424      	asrs	r4, r4, #16
 801a2c8:	d402      	bmi.n	801a2d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801a2ca:	42b4      	cmp	r4, r6
 801a2cc:	f2c0 80b1 	blt.w	801a432 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801a2d0:	f04f 0800 	mov.w	r8, #0
 801a2d4:	eb03 0408 	add.w	r4, r3, r8
 801a2d8:	2c00      	cmp	r4, #0
 801a2da:	dc3e      	bgt.n	801a35a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801a2dc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a2e0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a2e4:	f1bb 0f00 	cmp.w	fp, #0
 801a2e8:	f340 8108 	ble.w	801a4fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801a2ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a2f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a2f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a2f6:	f1bb 0b01 	subs.w	fp, fp, #1
 801a2fa:	eeb0 6a62 	vmov.f32	s12, s5
 801a2fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a302:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a306:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a30a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801a30e:	eeb0 6a43 	vmov.f32	s12, s6
 801a312:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a316:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801a31a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a31e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a322:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a326:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a32a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a32e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a332:	ee12 2a90 	vmov	r2, s5
 801a336:	eef0 2a47 	vmov.f32	s5, s14
 801a33a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a33e:	ee13 2a10 	vmov	r2, s6
 801a342:	9313      	str	r3, [sp, #76]	@ 0x4c
 801a344:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a346:	eeb0 3a67 	vmov.f32	s6, s15
 801a34a:	fb92 f3f3 	sdiv	r3, r2, r3
 801a34e:	9a04      	ldr	r2, [sp, #16]
 801a350:	9314      	str	r3, [sp, #80]	@ 0x50
 801a352:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801a354:	bf08      	it	eq
 801a356:	4613      	moveq	r3, r2
 801a358:	e787      	b.n	801a26a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801a35a:	140e      	asrs	r6, r1, #16
 801a35c:	d462      	bmi.n	801a424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a35e:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a362:	42b5      	cmp	r5, r6
 801a364:	dd5e      	ble.n	801a424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a366:	1417      	asrs	r7, r2, #16
 801a368:	d45c      	bmi.n	801a424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a36a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801a36e:	42bc      	cmp	r4, r7
 801a370:	dd58      	ble.n	801a424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a372:	b22d      	sxth	r5, r5
 801a374:	9c02      	ldr	r4, [sp, #8]
 801a376:	fb07 6505 	mla	r5, r7, r5, r6
 801a37a:	5d66      	ldrb	r6, [r4, r5]
 801a37c:	2e00      	cmp	r6, #0
 801a37e:	d051      	beq.n	801a424 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a380:	9c01      	ldr	r4, [sp, #4]
 801a382:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801a386:	f06f 0401 	mvn.w	r4, #1
 801a38a:	fb04 f408 	mul.w	r4, r4, r8
 801a38e:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801a392:	5b05      	ldrh	r5, [r0, r4]
 801a394:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a398:	9403      	str	r4, [sp, #12]
 801a39a:	9c05      	ldr	r4, [sp, #20]
 801a39c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a3a0:	4366      	muls	r6, r4
 801a3a2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801a3a6:	1c74      	adds	r4, r6, #1
 801a3a8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a3ac:	122e      	asrs	r6, r5, #8
 801a3ae:	1224      	asrs	r4, r4, #8
 801a3b0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a3b4:	00ed      	lsls	r5, r5, #3
 801a3b6:	b2a7      	uxth	r7, r4
 801a3b8:	43e4      	mvns	r4, r4
 801a3ba:	b2ed      	uxtb	r5, r5
 801a3bc:	b2e4      	uxtb	r4, r4
 801a3be:	fb16 f604 	smulbb	r6, r6, r4
 801a3c2:	fb15 f504 	smulbb	r5, r5, r4
 801a3c6:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a3ca:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801a3ce:	fb1a fa04 	smulbb	sl, sl, r4
 801a3d2:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a3d6:	fa1f fc8c 	uxth.w	ip, ip
 801a3da:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a3de:	fa5f f989 	uxtb.w	r9, r9
 801a3e2:	fb06 a607 	mla	r6, r6, r7, sl
 801a3e6:	f10c 0401 	add.w	r4, ip, #1
 801a3ea:	fb09 5507 	mla	r5, r9, r7, r5
 801a3ee:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a3f2:	9c03      	ldr	r4, [sp, #12]
 801a3f4:	b2ad      	uxth	r5, r5
 801a3f6:	b2b6      	uxth	r6, r6
 801a3f8:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a3fc:	f105 0a01 	add.w	sl, r5, #1
 801a400:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a404:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a408:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a40c:	f106 0a01 	add.w	sl, r6, #1
 801a410:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a414:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a418:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a41c:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a420:	f820 c004 	strh.w	ip, [r0, r4]
 801a424:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a426:	f108 38ff 	add.w	r8, r8, #4294967295
 801a42a:	4421      	add	r1, r4
 801a42c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a42e:	4422      	add	r2, r4
 801a430:	e750      	b.n	801a2d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a432:	f04f 0900 	mov.w	r9, #0
 801a436:	eba3 0409 	sub.w	r4, r3, r9
 801a43a:	2c00      	cmp	r4, #0
 801a43c:	f77f af4e 	ble.w	801a2dc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801a440:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801a444:	140d      	asrs	r5, r1, #16
 801a446:	1414      	asrs	r4, r2, #16
 801a448:	fb06 5404 	mla	r4, r6, r4, r5
 801a44c:	9d02      	ldr	r5, [sp, #8]
 801a44e:	5d2e      	ldrb	r6, [r5, r4]
 801a450:	2e00      	cmp	r6, #0
 801a452:	d04c      	beq.n	801a4ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801a454:	9d01      	ldr	r5, [sp, #4]
 801a456:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801a45a:	9c05      	ldr	r4, [sp, #20]
 801a45c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a460:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801a464:	4366      	muls	r6, r4
 801a466:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a46a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a46e:	1c74      	adds	r4, r6, #1
 801a470:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801a474:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801a478:	122e      	asrs	r6, r5, #8
 801a47a:	1224      	asrs	r4, r4, #8
 801a47c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a480:	00ed      	lsls	r5, r5, #3
 801a482:	b2a7      	uxth	r7, r4
 801a484:	43e4      	mvns	r4, r4
 801a486:	b2ed      	uxtb	r5, r5
 801a488:	b2e4      	uxtb	r4, r4
 801a48a:	fb16 f604 	smulbb	r6, r6, r4
 801a48e:	fb15 f504 	smulbb	r5, r5, r4
 801a492:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a496:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801a49a:	fb1a fa04 	smulbb	sl, sl, r4
 801a49e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a4a2:	fa1f fc8c 	uxth.w	ip, ip
 801a4a6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a4aa:	fa5f f888 	uxtb.w	r8, r8
 801a4ae:	fb06 a607 	mla	r6, r6, r7, sl
 801a4b2:	f10c 0401 	add.w	r4, ip, #1
 801a4b6:	fb08 5507 	mla	r5, r8, r7, r5
 801a4ba:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a4be:	b2ad      	uxth	r5, r5
 801a4c0:	b2b6      	uxth	r6, r6
 801a4c2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a4c6:	f105 0a01 	add.w	sl, r5, #1
 801a4ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a4ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a4d2:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a4d6:	f106 0a01 	add.w	sl, r6, #1
 801a4da:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a4de:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a4e2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a4e6:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a4ea:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a4ee:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a4f0:	f109 0901 	add.w	r9, r9, #1
 801a4f4:	4421      	add	r1, r4
 801a4f6:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801a4f8:	4422      	add	r2, r4
 801a4fa:	e79c      	b.n	801a436 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801a4fc:	b007      	add	sp, #28
 801a4fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a502 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a502:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a506:	b085      	sub	sp, #20
 801a508:	468b      	mov	fp, r1
 801a50a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801a50e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801a510:	9203      	str	r2, [sp, #12]
 801a512:	6861      	ldr	r1, [r4, #4]
 801a514:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801a518:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801a51c:	fb01 2000 	mla	r0, r1, r0, r2
 801a520:	6822      	ldr	r2, [r4, #0]
 801a522:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801a526:	f8d8 2000 	ldr.w	r2, [r8]
 801a52a:	9200      	str	r2, [sp, #0]
 801a52c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 801a530:	9201      	str	r2, [sp, #4]
 801a532:	f1bb 0f00 	cmp.w	fp, #0
 801a536:	dc03      	bgt.n	801a540 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a538:	9a03      	ldr	r2, [sp, #12]
 801a53a:	2a00      	cmp	r2, #0
 801a53c:	f340 8146 	ble.w	801a7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a540:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a542:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a546:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a54a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a54c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a550:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a554:	2b00      	cmp	r3, #0
 801a556:	dd0e      	ble.n	801a576 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a558:	140c      	asrs	r4, r1, #16
 801a55a:	d405      	bmi.n	801a568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a55c:	42bc      	cmp	r4, r7
 801a55e:	da03      	bge.n	801a568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a560:	1414      	asrs	r4, r2, #16
 801a562:	d401      	bmi.n	801a568 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a564:	42b4      	cmp	r4, r6
 801a566:	db07      	blt.n	801a578 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a568:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a56a:	3b01      	subs	r3, #1
 801a56c:	3002      	adds	r0, #2
 801a56e:	4421      	add	r1, r4
 801a570:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a572:	4422      	add	r2, r4
 801a574:	e7ee      	b.n	801a554 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a576:	d017      	beq.n	801a5a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a578:	1e5c      	subs	r4, r3, #1
 801a57a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a57c:	fb05 1504 	mla	r5, r5, r4, r1
 801a580:	142d      	asrs	r5, r5, #16
 801a582:	d409      	bmi.n	801a598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a584:	42bd      	cmp	r5, r7
 801a586:	da07      	bge.n	801a598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a588:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801a58a:	fb05 2404 	mla	r4, r5, r4, r2
 801a58e:	1424      	asrs	r4, r4, #16
 801a590:	d402      	bmi.n	801a598 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a592:	42b4      	cmp	r4, r6
 801a594:	f2c0 80b3 	blt.w	801a6fe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801a598:	2600      	movs	r6, #0
 801a59a:	199c      	adds	r4, r3, r6
 801a59c:	2c00      	cmp	r4, #0
 801a59e:	dc3e      	bgt.n	801a61e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a5a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a5a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a5a8:	f1bb 0f00 	cmp.w	fp, #0
 801a5ac:	f340 810e 	ble.w	801a7cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 801a5b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a5b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a5b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a5ba:	f1bb 0b01 	subs.w	fp, fp, #1
 801a5be:	eeb0 6a62 	vmov.f32	s12, s5
 801a5c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a5c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a5ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801a5d2:	eeb0 6a43 	vmov.f32	s12, s6
 801a5d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a5da:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801a5de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a5e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a5e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a5ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a5ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a5f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a5f6:	ee12 2a90 	vmov	r2, s5
 801a5fa:	eef0 2a47 	vmov.f32	s5, s14
 801a5fe:	fb92 f3f3 	sdiv	r3, r2, r3
 801a602:	ee13 2a10 	vmov	r2, s6
 801a606:	9311      	str	r3, [sp, #68]	@ 0x44
 801a608:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a60a:	eeb0 3a67 	vmov.f32	s6, s15
 801a60e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a612:	9a03      	ldr	r2, [sp, #12]
 801a614:	9312      	str	r3, [sp, #72]	@ 0x48
 801a616:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a618:	bf08      	it	eq
 801a61a:	4613      	moveq	r3, r2
 801a61c:	e789      	b.n	801a532 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a61e:	140f      	asrs	r7, r1, #16
 801a620:	d418      	bmi.n	801a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a622:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a626:	42bd      	cmp	r5, r7
 801a628:	dd14      	ble.n	801a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a62a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a62e:	d411      	bmi.n	801a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a630:	f8d8 400c 	ldr.w	r4, [r8, #12]
 801a634:	4564      	cmp	r4, ip
 801a636:	dd0d      	ble.n	801a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a638:	b22d      	sxth	r5, r5
 801a63a:	9c01      	ldr	r4, [sp, #4]
 801a63c:	fb0c 7505 	mla	r5, ip, r5, r7
 801a640:	5d64      	ldrb	r4, [r4, r5]
 801a642:	2cff      	cmp	r4, #255	@ 0xff
 801a644:	d10c      	bne.n	801a660 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801a646:	9c00      	ldr	r4, [sp, #0]
 801a648:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801a64c:	f06f 0401 	mvn.w	r4, #1
 801a650:	4374      	muls	r4, r6
 801a652:	5305      	strh	r5, [r0, r4]
 801a654:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a656:	3e01      	subs	r6, #1
 801a658:	4421      	add	r1, r4
 801a65a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a65c:	4422      	add	r2, r4
 801a65e:	e79c      	b.n	801a59a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a660:	2c00      	cmp	r4, #0
 801a662:	d0f7      	beq.n	801a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a664:	9f00      	ldr	r7, [sp, #0]
 801a666:	fa1f fc84 	uxth.w	ip, r4
 801a66a:	43e4      	mvns	r4, r4
 801a66c:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801a670:	f06f 0501 	mvn.w	r5, #1
 801a674:	b2e4      	uxtb	r4, r4
 801a676:	4375      	muls	r5, r6
 801a678:	ea4f 2e29 	mov.w	lr, r9, asr #8
 801a67c:	9502      	str	r5, [sp, #8]
 801a67e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801a682:	5b45      	ldrh	r5, [r0, r5]
 801a684:	122f      	asrs	r7, r5, #8
 801a686:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a68a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a68e:	00ed      	lsls	r5, r5, #3
 801a690:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801a694:	fb17 f704 	smulbb	r7, r7, r4
 801a698:	b2ed      	uxtb	r5, r5
 801a69a:	fb1a fa04 	smulbb	sl, sl, r4
 801a69e:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801a6a2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 801a6a6:	fb15 f504 	smulbb	r5, r5, r4
 801a6aa:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801a6ae:	fa1f fe8e 	uxth.w	lr, lr
 801a6b2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a6b6:	fa5f f989 	uxtb.w	r9, r9
 801a6ba:	fb07 a70c 	mla	r7, r7, ip, sl
 801a6be:	f10e 0401 	add.w	r4, lr, #1
 801a6c2:	fb09 550c 	mla	r5, r9, ip, r5
 801a6c6:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801a6ca:	9c02      	ldr	r4, [sp, #8]
 801a6cc:	b2ad      	uxth	r5, r5
 801a6ce:	b2bf      	uxth	r7, r7
 801a6d0:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801a6d4:	f105 0a01 	add.w	sl, r5, #1
 801a6d8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a6dc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a6e0:	ea4a 0e0e 	orr.w	lr, sl, lr
 801a6e4:	f107 0a01 	add.w	sl, r7, #1
 801a6e8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a6ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a6f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a6f4:	ea4e 0e0a 	orr.w	lr, lr, sl
 801a6f8:	f820 e004 	strh.w	lr, [r0, r4]
 801a6fc:	e7aa      	b.n	801a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801a6fe:	f04f 0900 	mov.w	r9, #0
 801a702:	eba3 0409 	sub.w	r4, r3, r9
 801a706:	2c00      	cmp	r4, #0
 801a708:	f77f af4a 	ble.w	801a5a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a70c:	1414      	asrs	r4, r2, #16
 801a70e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a712:	140d      	asrs	r5, r1, #16
 801a714:	fb06 5504 	mla	r5, r6, r4, r5
 801a718:	9c01      	ldr	r4, [sp, #4]
 801a71a:	5d64      	ldrb	r4, [r4, r5]
 801a71c:	2cff      	cmp	r4, #255	@ 0xff
 801a71e:	d10b      	bne.n	801a738 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801a720:	9c00      	ldr	r4, [sp, #0]
 801a722:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 801a726:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 801a72a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 801a72c:	f109 0901 	add.w	r9, r9, #1
 801a730:	4421      	add	r1, r4
 801a732:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801a734:	4422      	add	r2, r4
 801a736:	e7e4      	b.n	801a702 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a738:	2c00      	cmp	r4, #0
 801a73a:	d0f6      	beq.n	801a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a73c:	9e00      	ldr	r6, [sp, #0]
 801a73e:	b2a7      	uxth	r7, r4
 801a740:	43e4      	mvns	r4, r4
 801a742:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 801a746:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 801a74a:	b2e4      	uxtb	r4, r4
 801a74c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a750:	122e      	asrs	r6, r5, #8
 801a752:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801a756:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a75a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a75e:	00ed      	lsls	r5, r5, #3
 801a760:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801a764:	fb16 f604 	smulbb	r6, r6, r4
 801a768:	b2ed      	uxtb	r5, r5
 801a76a:	fb1a fa04 	smulbb	sl, sl, r4
 801a76e:	fb0c 6c07 	mla	ip, ip, r7, r6
 801a772:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801a776:	fb15 f504 	smulbb	r5, r5, r4
 801a77a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a77e:	fa1f fc8c 	uxth.w	ip, ip
 801a782:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801a786:	fa5f fe8e 	uxtb.w	lr, lr
 801a78a:	fb06 a607 	mla	r6, r6, r7, sl
 801a78e:	f10c 0401 	add.w	r4, ip, #1
 801a792:	fb0e 5507 	mla	r5, lr, r7, r5
 801a796:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801a79a:	b2ad      	uxth	r5, r5
 801a79c:	b2b6      	uxth	r6, r6
 801a79e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a7a2:	f105 0a01 	add.w	sl, r5, #1
 801a7a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a7aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a7ae:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a7b2:	f106 0a01 	add.w	sl, r6, #1
 801a7b6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a7ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a7be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a7c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a7c6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801a7ca:	e7ae      	b.n	801a72a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801a7cc:	b005      	add	sp, #20
 801a7ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a7d2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a7d2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a7d6:	b085      	sub	sp, #20
 801a7d8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801a7da:	9203      	str	r2, [sp, #12]
 801a7dc:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801a7e0:	9100      	str	r1, [sp, #0]
 801a7e2:	9201      	str	r2, [sp, #4]
 801a7e4:	6841      	ldr	r1, [r0, #4]
 801a7e6:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801a7ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801a7ee:	fb01 2404 	mla	r4, r1, r4, r2
 801a7f2:	6802      	ldr	r2, [r0, #0]
 801a7f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a7f8:	f8de 2000 	ldr.w	r2, [lr]
 801a7fc:	9202      	str	r2, [sp, #8]
 801a7fe:	9a01      	ldr	r2, [sp, #4]
 801a800:	43d6      	mvns	r6, r2
 801a802:	b2f6      	uxtb	r6, r6
 801a804:	9a00      	ldr	r2, [sp, #0]
 801a806:	2a00      	cmp	r2, #0
 801a808:	dc03      	bgt.n	801a812 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a80a:	9a03      	ldr	r2, [sp, #12]
 801a80c:	2a00      	cmp	r2, #0
 801a80e:	f340 8124 	ble.w	801aa5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a812:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801a814:	f9be c008 	ldrsh.w	ip, [lr, #8]
 801a818:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801a81c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801a81e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801a822:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801a826:	2b00      	cmp	r3, #0
 801a828:	dd0e      	ble.n	801a848 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a82a:	1408      	asrs	r0, r1, #16
 801a82c:	d405      	bmi.n	801a83a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a82e:	4560      	cmp	r0, ip
 801a830:	da03      	bge.n	801a83a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a832:	1410      	asrs	r0, r2, #16
 801a834:	d401      	bmi.n	801a83a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801a836:	42b8      	cmp	r0, r7
 801a838:	db07      	blt.n	801a84a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801a83a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a83c:	3b01      	subs	r3, #1
 801a83e:	3402      	adds	r4, #2
 801a840:	4401      	add	r1, r0
 801a842:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a844:	4402      	add	r2, r0
 801a846:	e7ee      	b.n	801a826 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801a848:	d06e      	beq.n	801a928 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801a84a:	1e58      	subs	r0, r3, #1
 801a84c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801a84e:	fb05 1500 	mla	r5, r5, r0, r1
 801a852:	142d      	asrs	r5, r5, #16
 801a854:	d45c      	bmi.n	801a910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a856:	4565      	cmp	r5, ip
 801a858:	da5a      	bge.n	801a910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a85a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801a85c:	fb05 2000 	mla	r0, r5, r0, r2
 801a860:	1400      	asrs	r0, r0, #16
 801a862:	d455      	bmi.n	801a910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a864:	42b8      	cmp	r0, r7
 801a866:	da53      	bge.n	801a910 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a868:	4699      	mov	r9, r3
 801a86a:	46a2      	mov	sl, r4
 801a86c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a870:	f1b9 0f00 	cmp.w	r9, #0
 801a874:	dd54      	ble.n	801a920 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a876:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a87a:	140d      	asrs	r5, r1, #16
 801a87c:	1410      	asrs	r0, r2, #16
 801a87e:	f109 39ff 	add.w	r9, r9, #4294967295
 801a882:	fb07 5000 	mla	r0, r7, r0, r5
 801a886:	9d02      	ldr	r5, [sp, #8]
 801a888:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a88c:	f8ba 5000 	ldrh.w	r5, [sl]
 801a890:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a894:	122f      	asrs	r7, r5, #8
 801a896:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a89a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a89e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a8a2:	00ed      	lsls	r5, r5, #3
 801a8a4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 801a8a8:	fb17 f706 	smulbb	r7, r7, r6
 801a8ac:	b2ed      	uxtb	r5, r5
 801a8ae:	fb18 f806 	smulbb	r8, r8, r6
 801a8b2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a8b6:	10c7      	asrs	r7, r0, #3
 801a8b8:	fb15 f506 	smulbb	r5, r5, r6
 801a8bc:	00c0      	lsls	r0, r0, #3
 801a8be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801a8c2:	fa1f fc8c 	uxth.w	ip, ip
 801a8c6:	b2c0      	uxtb	r0, r0
 801a8c8:	fb07 870b 	mla	r7, r7, fp, r8
 801a8cc:	fb00 500b 	mla	r0, r0, fp, r5
 801a8d0:	f10c 0501 	add.w	r5, ip, #1
 801a8d4:	b2bf      	uxth	r7, r7
 801a8d6:	b280      	uxth	r0, r0
 801a8d8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a8dc:	f107 0801 	add.w	r8, r7, #1
 801a8e0:	1c45      	adds	r5, r0, #1
 801a8e2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a8e6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801a8ea:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a8ee:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801a8f0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a8f4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a8f8:	4401      	add	r1, r0
 801a8fa:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801a8fe:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801a900:	ea45 0c0c 	orr.w	ip, r5, ip
 801a904:	4402      	add	r2, r0
 801a906:	ea4c 0c08 	orr.w	ip, ip, r8
 801a90a:	f82a cb02 	strh.w	ip, [sl], #2
 801a90e:	e7af      	b.n	801a870 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a910:	f04f 0800 	mov.w	r8, #0
 801a914:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a918:	eb03 0008 	add.w	r0, r3, r8
 801a91c:	2800      	cmp	r0, #0
 801a91e:	dc41      	bgt.n	801a9a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a920:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a924:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a928:	9b00      	ldr	r3, [sp, #0]
 801a92a:	2b00      	cmp	r3, #0
 801a92c:	f340 8095 	ble.w	801aa5a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a930:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801a934:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a936:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a93a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a93e:	eef0 6a62 	vmov.f32	s13, s5
 801a942:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a946:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a94a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a94e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 801a952:	eef0 6a43 	vmov.f32	s13, s6
 801a956:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a95a:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 801a95e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a962:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a966:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a96a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a96e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a972:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a976:	ee12 2a90 	vmov	r2, s5
 801a97a:	eef0 2a47 	vmov.f32	s5, s14
 801a97e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a982:	ee13 2a10 	vmov	r2, s6
 801a986:	9311      	str	r3, [sp, #68]	@ 0x44
 801a988:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a98a:	eeb0 3a67 	vmov.f32	s6, s15
 801a98e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a992:	9312      	str	r3, [sp, #72]	@ 0x48
 801a994:	9b00      	ldr	r3, [sp, #0]
 801a996:	9a03      	ldr	r2, [sp, #12]
 801a998:	3b01      	subs	r3, #1
 801a99a:	9300      	str	r3, [sp, #0]
 801a99c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801a99e:	bf08      	it	eq
 801a9a0:	4613      	moveq	r3, r2
 801a9a2:	e72f      	b.n	801a804 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a9a4:	140f      	asrs	r7, r1, #16
 801a9a6:	d451      	bmi.n	801aa4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a9a8:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a9ac:	42bd      	cmp	r5, r7
 801a9ae:	dd4d      	ble.n	801aa4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a9b0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a9b4:	d44a      	bmi.n	801aa4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a9b6:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a9ba:	4560      	cmp	r0, ip
 801a9bc:	dd46      	ble.n	801aa4c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a9be:	b22d      	sxth	r5, r5
 801a9c0:	9802      	ldr	r0, [sp, #8]
 801a9c2:	fb0c 7505 	mla	r5, ip, r5, r7
 801a9c6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a9ca:	f06f 0501 	mvn.w	r5, #1
 801a9ce:	fb05 fb08 	mul.w	fp, r5, r8
 801a9d2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a9d6:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a9da:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a9de:	122f      	asrs	r7, r5, #8
 801a9e0:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a9e4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801a9e8:	00ed      	lsls	r5, r5, #3
 801a9ea:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801a9ee:	fb17 f706 	smulbb	r7, r7, r6
 801a9f2:	b2ed      	uxtb	r5, r5
 801a9f4:	fb19 f906 	smulbb	r9, r9, r6
 801a9f8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a9fc:	10c7      	asrs	r7, r0, #3
 801a9fe:	fb15 f506 	smulbb	r5, r5, r6
 801aa02:	00c0      	lsls	r0, r0, #3
 801aa04:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801aa08:	fa1f fc8c 	uxth.w	ip, ip
 801aa0c:	b2c0      	uxtb	r0, r0
 801aa0e:	fb07 970a 	mla	r7, r7, sl, r9
 801aa12:	fb00 500a 	mla	r0, r0, sl, r5
 801aa16:	f10c 0501 	add.w	r5, ip, #1
 801aa1a:	b2bf      	uxth	r7, r7
 801aa1c:	b280      	uxth	r0, r0
 801aa1e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801aa22:	f107 0901 	add.w	r9, r7, #1
 801aa26:	1c45      	adds	r5, r0, #1
 801aa28:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801aa2c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801aa30:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801aa34:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801aa38:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801aa3c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801aa40:	ea45 0c0c 	orr.w	ip, r5, ip
 801aa44:	ea4c 0c09 	orr.w	ip, ip, r9
 801aa48:	f824 c00b 	strh.w	ip, [r4, fp]
 801aa4c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801aa4e:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa52:	4401      	add	r1, r0
 801aa54:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801aa56:	4402      	add	r2, r0
 801aa58:	e75e      	b.n	801a918 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801aa5a:	b005      	add	sp, #20
 801aa5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa60 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa64:	b085      	sub	sp, #20
 801aa66:	4693      	mov	fp, r2
 801aa68:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801aa6c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801aa6e:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801aa70:	6870      	ldr	r0, [r6, #4]
 801aa72:	9101      	str	r1, [sp, #4]
 801aa74:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801aa78:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801aa7c:	fb00 2404 	mla	r4, r0, r4, r2
 801aa80:	6832      	ldr	r2, [r6, #0]
 801aa82:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aa86:	682a      	ldr	r2, [r5, #0]
 801aa88:	9202      	str	r2, [sp, #8]
 801aa8a:	9a01      	ldr	r2, [sp, #4]
 801aa8c:	2a00      	cmp	r2, #0
 801aa8e:	dc03      	bgt.n	801aa98 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801aa90:	f1bb 0f00 	cmp.w	fp, #0
 801aa94:	f340 809a 	ble.w	801abcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801aa98:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801aa9a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801aa9e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801aaa2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801aaa4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801aaa8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801aaac:	2b00      	cmp	r3, #0
 801aaae:	dd0c      	ble.n	801aaca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801aab0:	1406      	asrs	r6, r0, #16
 801aab2:	d405      	bmi.n	801aac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801aab4:	454e      	cmp	r6, r9
 801aab6:	da03      	bge.n	801aac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801aab8:	1416      	asrs	r6, r2, #16
 801aaba:	d401      	bmi.n	801aac0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801aabc:	4546      	cmp	r6, r8
 801aabe:	db05      	blt.n	801aacc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801aac0:	4470      	add	r0, lr
 801aac2:	4462      	add	r2, ip
 801aac4:	3b01      	subs	r3, #1
 801aac6:	3402      	adds	r4, #2
 801aac8:	e7f0      	b.n	801aaac <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801aaca:	d00f      	beq.n	801aaec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801aacc:	1e5e      	subs	r6, r3, #1
 801aace:	fb0e 0706 	mla	r7, lr, r6, r0
 801aad2:	143f      	asrs	r7, r7, #16
 801aad4:	d541      	bpl.n	801ab5a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801aad6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801aada:	4698      	mov	r8, r3
 801aadc:	9603      	str	r6, [sp, #12]
 801aade:	f1b8 0f00 	cmp.w	r8, #0
 801aae2:	dc56      	bgt.n	801ab92 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801aae4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aae8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aaec:	9b01      	ldr	r3, [sp, #4]
 801aaee:	2b00      	cmp	r3, #0
 801aaf0:	dd6c      	ble.n	801abcc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801aaf2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aaf6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801aaf8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aafc:	eeb0 6a62 	vmov.f32	s12, s5
 801ab00:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ab04:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ab08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801ab10:	eeb0 6a43 	vmov.f32	s12, s6
 801ab14:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ab18:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801ab1c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ab20:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ab24:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ab28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ab2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ab30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ab34:	ee12 2a90 	vmov	r2, s5
 801ab38:	eef0 2a47 	vmov.f32	s5, s14
 801ab3c:	fb92 fef3 	sdiv	lr, r2, r3
 801ab40:	ee13 2a10 	vmov	r2, s6
 801ab44:	eeb0 3a67 	vmov.f32	s6, s15
 801ab48:	fb92 fcf3 	sdiv	ip, r2, r3
 801ab4c:	9b01      	ldr	r3, [sp, #4]
 801ab4e:	3b01      	subs	r3, #1
 801ab50:	9301      	str	r3, [sp, #4]
 801ab52:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ab54:	bf08      	it	eq
 801ab56:	465b      	moveq	r3, fp
 801ab58:	e797      	b.n	801aa8a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801ab5a:	454f      	cmp	r7, r9
 801ab5c:	dabb      	bge.n	801aad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ab5e:	fb0c 2606 	mla	r6, ip, r6, r2
 801ab62:	1436      	asrs	r6, r6, #16
 801ab64:	d4b7      	bmi.n	801aad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ab66:	4546      	cmp	r6, r8
 801ab68:	dab5      	bge.n	801aad6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ab6a:	461e      	mov	r6, r3
 801ab6c:	46a0      	mov	r8, r4
 801ab6e:	2e00      	cmp	r6, #0
 801ab70:	ddb8      	ble.n	801aae4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ab72:	1417      	asrs	r7, r2, #16
 801ab74:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801ab78:	ea4f 4920 	mov.w	r9, r0, asr #16
 801ab7c:	9902      	ldr	r1, [sp, #8]
 801ab7e:	4470      	add	r0, lr
 801ab80:	4462      	add	r2, ip
 801ab82:	fb0a 9707 	mla	r7, sl, r7, r9
 801ab86:	3e01      	subs	r6, #1
 801ab88:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801ab8c:	f828 7b02 	strh.w	r7, [r8], #2
 801ab90:	e7ed      	b.n	801ab6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801ab92:	ea5f 4920 	movs.w	r9, r0, asr #16
 801ab96:	d414      	bmi.n	801abc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801ab98:	68ae      	ldr	r6, [r5, #8]
 801ab9a:	454e      	cmp	r6, r9
 801ab9c:	dd11      	ble.n	801abc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801ab9e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801aba2:	d40e      	bmi.n	801abc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801aba4:	68ef      	ldr	r7, [r5, #12]
 801aba6:	4557      	cmp	r7, sl
 801aba8:	dd0b      	ble.n	801abc2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801abaa:	b236      	sxth	r6, r6
 801abac:	f06f 0101 	mvn.w	r1, #1
 801abb0:	9f02      	ldr	r7, [sp, #8]
 801abb2:	fb0a 9606 	mla	r6, sl, r6, r9
 801abb6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801abba:	fb01 f608 	mul.w	r6, r1, r8
 801abbe:	9903      	ldr	r1, [sp, #12]
 801abc0:	538f      	strh	r7, [r1, r6]
 801abc2:	4470      	add	r0, lr
 801abc4:	4462      	add	r2, ip
 801abc6:	f108 38ff 	add.w	r8, r8, #4294967295
 801abca:	e788      	b.n	801aade <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801abcc:	b005      	add	sp, #20
 801abce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801abd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abd6:	b087      	sub	sp, #28
 801abd8:	468b      	mov	fp, r1
 801abda:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801abde:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801abe0:	9203      	str	r2, [sp, #12]
 801abe2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801abe6:	6841      	ldr	r1, [r0, #4]
 801abe8:	9204      	str	r2, [sp, #16]
 801abea:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801abee:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 801abf2:	fb01 2505 	mla	r5, r1, r5, r2
 801abf6:	6802      	ldr	r2, [r0, #0]
 801abf8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801abfc:	f8d9 2000 	ldr.w	r2, [r9]
 801ac00:	9201      	str	r2, [sp, #4]
 801ac02:	f1bb 0f00 	cmp.w	fp, #0
 801ac06:	dc03      	bgt.n	801ac10 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ac08:	9a03      	ldr	r2, [sp, #12]
 801ac0a:	2a00      	cmp	r2, #0
 801ac0c:	f340 8158 	ble.w	801aec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 801ac10:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801ac12:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801ac16:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801ac1a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801ac1c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801ac20:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801ac24:	2b00      	cmp	r3, #0
 801ac26:	dd0e      	ble.n	801ac46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801ac28:	1402      	asrs	r2, r0, #16
 801ac2a:	d405      	bmi.n	801ac38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac2c:	42ba      	cmp	r2, r7
 801ac2e:	da03      	bge.n	801ac38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac30:	140a      	asrs	r2, r1, #16
 801ac32:	d401      	bmi.n	801ac38 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801ac34:	42b2      	cmp	r2, r6
 801ac36:	db07      	blt.n	801ac48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801ac38:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ac3a:	3b01      	subs	r3, #1
 801ac3c:	3502      	adds	r5, #2
 801ac3e:	4410      	add	r0, r2
 801ac40:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ac42:	4411      	add	r1, r2
 801ac44:	e7ee      	b.n	801ac24 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801ac46:	d017      	beq.n	801ac78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801ac48:	1e5a      	subs	r2, r3, #1
 801ac4a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801ac4c:	fb04 0402 	mla	r4, r4, r2, r0
 801ac50:	1424      	asrs	r4, r4, #16
 801ac52:	d409      	bmi.n	801ac68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac54:	42bc      	cmp	r4, r7
 801ac56:	da07      	bge.n	801ac68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac58:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ac5a:	fb04 1202 	mla	r2, r4, r2, r1
 801ac5e:	1412      	asrs	r2, r2, #16
 801ac60:	d402      	bmi.n	801ac68 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801ac62:	42b2      	cmp	r2, r6
 801ac64:	f2c0 80bf 	blt.w	801ade6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ac68:	2700      	movs	r7, #0
 801ac6a:	19da      	adds	r2, r3, r7
 801ac6c:	2a00      	cmp	r2, #0
 801ac6e:	dc3e      	bgt.n	801acee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801ac70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ac74:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801ac78:	f1bb 0f00 	cmp.w	fp, #0
 801ac7c:	f340 8120 	ble.w	801aec0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 801ac80:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ac84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ac86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ac8a:	f1bb 0b01 	subs.w	fp, fp, #1
 801ac8e:	eeb0 6a62 	vmov.f32	s12, s5
 801ac92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ac96:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ac9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ac9e:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801aca2:	eeb0 6a43 	vmov.f32	s12, s6
 801aca6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801acaa:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801acae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801acb2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801acb6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801acba:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801acbe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801acc2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801acc6:	ee12 2a90 	vmov	r2, s5
 801acca:	eef0 2a47 	vmov.f32	s5, s14
 801acce:	fb92 f3f3 	sdiv	r3, r2, r3
 801acd2:	ee13 2a10 	vmov	r2, s6
 801acd6:	9313      	str	r3, [sp, #76]	@ 0x4c
 801acd8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801acda:	eeb0 3a67 	vmov.f32	s6, s15
 801acde:	fb92 f3f3 	sdiv	r3, r2, r3
 801ace2:	9a03      	ldr	r2, [sp, #12]
 801ace4:	9314      	str	r3, [sp, #80]	@ 0x50
 801ace6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ace8:	bf08      	it	eq
 801acea:	4613      	moveq	r3, r2
 801acec:	e789      	b.n	801ac02 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801acee:	1406      	asrs	r6, r0, #16
 801acf0:	d42d      	bmi.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801acf2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801acf6:	42b4      	cmp	r4, r6
 801acf8:	dd29      	ble.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801acfa:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801acfe:	d426      	bmi.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ad00:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801ad04:	4562      	cmp	r2, ip
 801ad06:	dd22      	ble.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ad08:	b224      	sxth	r4, r4
 801ad0a:	9a01      	ldr	r2, [sp, #4]
 801ad0c:	fb0c 6404 	mla	r4, ip, r4, r6
 801ad10:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801ad14:	0e22      	lsrs	r2, r4, #24
 801ad16:	d01a      	beq.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ad18:	9e04      	ldr	r6, [sp, #16]
 801ad1a:	4372      	muls	r2, r6
 801ad1c:	1c56      	adds	r6, r2, #1
 801ad1e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801ad22:	0a26      	lsrs	r6, r4, #8
 801ad24:	1212      	asrs	r2, r2, #8
 801ad26:	9605      	str	r6, [sp, #20]
 801ad28:	2aff      	cmp	r2, #255	@ 0xff
 801ad2a:	d116      	bne.n	801ad5a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801ad2c:	f06f 0201 	mvn.w	r2, #1
 801ad30:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ad34:	fb02 fc07 	mul.w	ip, r2, r7
 801ad38:	0962      	lsrs	r2, r4, #5
 801ad3a:	f026 0607 	bic.w	r6, r6, #7
 801ad3e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ad42:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ad46:	4316      	orrs	r6, r2
 801ad48:	4326      	orrs	r6, r4
 801ad4a:	f825 600c 	strh.w	r6, [r5, ip]
 801ad4e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ad50:	3f01      	subs	r7, #1
 801ad52:	4410      	add	r0, r2
 801ad54:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ad56:	4411      	add	r1, r2
 801ad58:	e787      	b.n	801ac6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801ad5a:	f06f 0601 	mvn.w	r6, #1
 801ad5e:	fa1f fa82 	uxth.w	sl, r2
 801ad62:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801ad66:	43d2      	mvns	r2, r2
 801ad68:	437e      	muls	r6, r7
 801ad6a:	b2e4      	uxtb	r4, r4
 801ad6c:	fb1c fc0a 	smulbb	ip, ip, sl
 801ad70:	b2d2      	uxtb	r2, r2
 801ad72:	f835 8006 	ldrh.w	r8, [r5, r6]
 801ad76:	fb14 f40a 	smulbb	r4, r4, sl
 801ad7a:	9602      	str	r6, [sp, #8]
 801ad7c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ad80:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ad84:	fb16 f60a 	smulbb	r6, r6, sl
 801ad88:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ad8c:	fb0e ce02 	mla	lr, lr, r2, ip
 801ad90:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ad94:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ad98:	fa1f fe8e 	uxth.w	lr, lr
 801ad9c:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801ada0:	fa5f f888 	uxtb.w	r8, r8
 801ada4:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ada8:	fb08 4402 	mla	r4, r8, r2, r4
 801adac:	f10e 0201 	add.w	r2, lr, #1
 801adb0:	fa1f fc8c 	uxth.w	ip, ip
 801adb4:	b2a4      	uxth	r4, r4
 801adb6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801adba:	9a02      	ldr	r2, [sp, #8]
 801adbc:	1c66      	adds	r6, r4, #1
 801adbe:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801adc2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801adc6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801adca:	ea46 0e0e 	orr.w	lr, r6, lr
 801adce:	f10c 0601 	add.w	r6, ip, #1
 801add2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801add6:	0976      	lsrs	r6, r6, #5
 801add8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801addc:	ea4e 0e06 	orr.w	lr, lr, r6
 801ade0:	f825 e002 	strh.w	lr, [r5, r2]
 801ade4:	e7b3      	b.n	801ad4e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801ade6:	f04f 0800 	mov.w	r8, #0
 801adea:	eba3 0208 	sub.w	r2, r3, r8
 801adee:	2a00      	cmp	r2, #0
 801adf0:	f77f af3e 	ble.w	801ac70 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801adf4:	1404      	asrs	r4, r0, #16
 801adf6:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801adfa:	140a      	asrs	r2, r1, #16
 801adfc:	fb06 4202 	mla	r2, r6, r2, r4
 801ae00:	9c01      	ldr	r4, [sp, #4]
 801ae02:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801ae06:	0e22      	lsrs	r2, r4, #24
 801ae08:	d015      	beq.n	801ae36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801ae0a:	9e04      	ldr	r6, [sp, #16]
 801ae0c:	4372      	muls	r2, r6
 801ae0e:	1c56      	adds	r6, r2, #1
 801ae10:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801ae14:	0a26      	lsrs	r6, r4, #8
 801ae16:	1212      	asrs	r2, r2, #8
 801ae18:	2aff      	cmp	r2, #255	@ 0xff
 801ae1a:	d113      	bne.n	801ae44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ae1c:	0962      	lsrs	r2, r4, #5
 801ae1e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801ae22:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ae26:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ae2a:	f026 0607 	bic.w	r6, r6, #7
 801ae2e:	4316      	orrs	r6, r2
 801ae30:	4326      	orrs	r6, r4
 801ae32:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801ae36:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801ae38:	f108 0801 	add.w	r8, r8, #1
 801ae3c:	4410      	add	r0, r2
 801ae3e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ae40:	4411      	add	r1, r2
 801ae42:	e7d2      	b.n	801adea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801ae44:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801ae48:	fa1f fa82 	uxth.w	sl, r2
 801ae4c:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801ae50:	43d2      	mvns	r2, r2
 801ae52:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801ae56:	fb17 f70a 	smulbb	r7, r7, sl
 801ae5a:	b2d2      	uxtb	r2, r2
 801ae5c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ae60:	b2e4      	uxtb	r4, r4
 801ae62:	b2f6      	uxtb	r6, r6
 801ae64:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ae68:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ae6c:	fb14 f40a 	smulbb	r4, r4, sl
 801ae70:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae74:	fa1f fc8c 	uxth.w	ip, ip
 801ae78:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ae7c:	fb16 f60a 	smulbb	r6, r6, sl
 801ae80:	fa5f fe8e 	uxtb.w	lr, lr
 801ae84:	fb0e 4402 	mla	r4, lr, r2, r4
 801ae88:	fb07 6702 	mla	r7, r7, r2, r6
 801ae8c:	f10c 0201 	add.w	r2, ip, #1
 801ae90:	b2a4      	uxth	r4, r4
 801ae92:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ae96:	1c66      	adds	r6, r4, #1
 801ae98:	b2bf      	uxth	r7, r7
 801ae9a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801ae9e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801aea2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801aea6:	ea46 0c0c 	orr.w	ip, r6, ip
 801aeaa:	1c7e      	adds	r6, r7, #1
 801aeac:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801aeb0:	0976      	lsrs	r6, r6, #5
 801aeb2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801aeb6:	ea4c 0c06 	orr.w	ip, ip, r6
 801aeba:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801aebe:	e7ba      	b.n	801ae36 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801aec0:	b007      	add	sp, #28
 801aec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801aec8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aecc:	b085      	sub	sp, #20
 801aece:	468b      	mov	fp, r1
 801aed0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801aed4:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801aed6:	9203      	str	r2, [sp, #12]
 801aed8:	6841      	ldr	r1, [r0, #4]
 801aeda:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801aede:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801aee2:	fb01 2404 	mla	r4, r1, r4, r2
 801aee6:	6802      	ldr	r2, [r0, #0]
 801aee8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801aeec:	f8d8 2000 	ldr.w	r2, [r8]
 801aef0:	9201      	str	r2, [sp, #4]
 801aef2:	f1bb 0f00 	cmp.w	fp, #0
 801aef6:	dc03      	bgt.n	801af00 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801aef8:	9a03      	ldr	r2, [sp, #12]
 801aefa:	2a00      	cmp	r2, #0
 801aefc:	f340 814f 	ble.w	801b19e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801af00:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801af02:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801af06:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801af0a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801af0c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801af10:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 801af14:	2b00      	cmp	r3, #0
 801af16:	dd0e      	ble.n	801af36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801af18:	1408      	asrs	r0, r1, #16
 801af1a:	d405      	bmi.n	801af28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af1c:	42b8      	cmp	r0, r7
 801af1e:	da03      	bge.n	801af28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af20:	1410      	asrs	r0, r2, #16
 801af22:	d401      	bmi.n	801af28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801af24:	42b0      	cmp	r0, r6
 801af26:	db07      	blt.n	801af38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801af28:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801af2a:	3b01      	subs	r3, #1
 801af2c:	3402      	adds	r4, #2
 801af2e:	4401      	add	r1, r0
 801af30:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801af32:	4402      	add	r2, r0
 801af34:	e7ee      	b.n	801af14 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801af36:	d017      	beq.n	801af68 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801af38:	1e58      	subs	r0, r3, #1
 801af3a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801af3c:	fb05 1500 	mla	r5, r5, r0, r1
 801af40:	142d      	asrs	r5, r5, #16
 801af42:	d409      	bmi.n	801af58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801af44:	42bd      	cmp	r5, r7
 801af46:	da07      	bge.n	801af58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801af48:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801af4a:	fb05 2000 	mla	r0, r5, r0, r2
 801af4e:	1400      	asrs	r0, r0, #16
 801af50:	d402      	bmi.n	801af58 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801af52:	42b0      	cmp	r0, r6
 801af54:	f2c0 80ba 	blt.w	801b0cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801af58:	2600      	movs	r6, #0
 801af5a:	1998      	adds	r0, r3, r6
 801af5c:	2800      	cmp	r0, #0
 801af5e:	dc3e      	bgt.n	801afde <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801af60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801af64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801af68:	f1bb 0f00 	cmp.w	fp, #0
 801af6c:	f340 8117 	ble.w	801b19e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801af70:	ee30 0a04 	vadd.f32	s0, s0, s8
 801af74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801af76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801af7a:	f1bb 0b01 	subs.w	fp, fp, #1
 801af7e:	eeb0 6a62 	vmov.f32	s12, s5
 801af82:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801af86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801af8a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af8e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801af92:	eeb0 6a43 	vmov.f32	s12, s6
 801af96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801af9a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801af9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801afa2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801afa6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801afaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801afae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801afb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801afb6:	ee12 2a90 	vmov	r2, s5
 801afba:	eef0 2a47 	vmov.f32	s5, s14
 801afbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801afc2:	ee13 2a10 	vmov	r2, s6
 801afc6:	9311      	str	r3, [sp, #68]	@ 0x44
 801afc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801afca:	eeb0 3a67 	vmov.f32	s6, s15
 801afce:	fb92 f3f3 	sdiv	r3, r2, r3
 801afd2:	9a03      	ldr	r2, [sp, #12]
 801afd4:	9312      	str	r3, [sp, #72]	@ 0x48
 801afd6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801afd8:	bf08      	it	eq
 801afda:	4613      	moveq	r3, r2
 801afdc:	e789      	b.n	801aef2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801afde:	140f      	asrs	r7, r1, #16
 801afe0:	d424      	bmi.n	801b02c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801afe2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801afe6:	42bd      	cmp	r5, r7
 801afe8:	dd20      	ble.n	801b02c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801afea:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801afee:	d41d      	bmi.n	801b02c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aff0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801aff4:	4560      	cmp	r0, ip
 801aff6:	dd19      	ble.n	801b02c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801aff8:	b22d      	sxth	r5, r5
 801affa:	9801      	ldr	r0, [sp, #4]
 801affc:	fb0c 7505 	mla	r5, ip, r5, r7
 801b000:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801b004:	0e07      	lsrs	r7, r0, #24
 801b006:	2fff      	cmp	r7, #255	@ 0xff
 801b008:	d116      	bne.n	801b038 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801b00a:	f06f 0501 	mvn.w	r5, #1
 801b00e:	fb05 f706 	mul.w	r7, r5, r6
 801b012:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801b016:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801b01a:	0945      	lsrs	r5, r0, #5
 801b01c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801b020:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b024:	ea4c 0505 	orr.w	r5, ip, r5
 801b028:	4305      	orrs	r5, r0
 801b02a:	53e5      	strh	r5, [r4, r7]
 801b02c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b02e:	3e01      	subs	r6, #1
 801b030:	4401      	add	r1, r0
 801b032:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b034:	4402      	add	r2, r0
 801b036:	e790      	b.n	801af5a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801b038:	b2fd      	uxtb	r5, r7
 801b03a:	2f00      	cmp	r7, #0
 801b03c:	d0f6      	beq.n	801b02c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b03e:	f06f 0701 	mvn.w	r7, #1
 801b042:	fa1f f985 	uxth.w	r9, r5
 801b046:	43ed      	mvns	r5, r5
 801b048:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801b04c:	4377      	muls	r7, r6
 801b04e:	fb1a fa09 	smulbb	sl, sl, r9
 801b052:	b2ed      	uxtb	r5, r5
 801b054:	f834 e007 	ldrh.w	lr, [r4, r7]
 801b058:	9702      	str	r7, [sp, #8]
 801b05a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801b05e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b062:	fb17 f709 	smulbb	r7, r7, r9
 801b066:	b2c0      	uxtb	r0, r0
 801b068:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b06c:	fb10 f009 	smulbb	r0, r0, r9
 801b070:	fb0c 7c05 	mla	ip, ip, r5, r7
 801b074:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b078:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b07c:	fa1f fc8c 	uxth.w	ip, ip
 801b080:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b084:	fa5f fe8e 	uxtb.w	lr, lr
 801b088:	fb07 a705 	mla	r7, r7, r5, sl
 801b08c:	fb0e 0005 	mla	r0, lr, r5, r0
 801b090:	f10c 0501 	add.w	r5, ip, #1
 801b094:	b2bf      	uxth	r7, r7
 801b096:	b280      	uxth	r0, r0
 801b098:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801b09c:	f100 0a01 	add.w	sl, r0, #1
 801b0a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b0a4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801b0a8:	9802      	ldr	r0, [sp, #8]
 801b0aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b0ae:	ea4a 0c0c 	orr.w	ip, sl, ip
 801b0b2:	f107 0a01 	add.w	sl, r7, #1
 801b0b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b0ba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b0be:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b0c2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801b0c6:	f824 c000 	strh.w	ip, [r4, r0]
 801b0ca:	e7af      	b.n	801b02c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801b0cc:	f04f 0e00 	mov.w	lr, #0
 801b0d0:	eba3 000e 	sub.w	r0, r3, lr
 801b0d4:	2800      	cmp	r0, #0
 801b0d6:	f77f af43 	ble.w	801af60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801b0da:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801b0de:	140d      	asrs	r5, r1, #16
 801b0e0:	1410      	asrs	r0, r2, #16
 801b0e2:	fb06 5000 	mla	r0, r6, r0, r5
 801b0e6:	9d01      	ldr	r5, [sp, #4]
 801b0e8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801b0ec:	0e2e      	lsrs	r6, r5, #24
 801b0ee:	2eff      	cmp	r6, #255	@ 0xff
 801b0f0:	d112      	bne.n	801b118 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801b0f2:	482c      	ldr	r0, [pc, #176]	@ (801b1a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801b0f4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801b0f8:	0968      	lsrs	r0, r5, #5
 801b0fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b0fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801b102:	4330      	orrs	r0, r6
 801b104:	4328      	orrs	r0, r5
 801b106:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801b10a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b10c:	f10e 0e01 	add.w	lr, lr, #1
 801b110:	4401      	add	r1, r0
 801b112:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801b114:	4402      	add	r2, r0
 801b116:	e7db      	b.n	801b0d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801b118:	b2f0      	uxtb	r0, r6
 801b11a:	2e00      	cmp	r6, #0
 801b11c:	d0f5      	beq.n	801b10a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b11e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b122:	fa1f f980 	uxth.w	r9, r0
 801b126:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801b12a:	43c0      	mvns	r0, r0
 801b12c:	ea4f 272c 	mov.w	r7, ip, asr #8
 801b130:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801b134:	fb16 f609 	smulbb	r6, r6, r9
 801b138:	b2c0      	uxtb	r0, r0
 801b13a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b13e:	b2ed      	uxtb	r5, r5
 801b140:	fb1a fa09 	smulbb	sl, sl, r9
 801b144:	fb07 6700 	mla	r7, r7, r0, r6
 801b148:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801b14c:	fb15 f509 	smulbb	r5, r5, r9
 801b150:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b154:	b2bf      	uxth	r7, r7
 801b156:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b15a:	fa5f fc8c 	uxtb.w	ip, ip
 801b15e:	fb06 a600 	mla	r6, r6, r0, sl
 801b162:	fb0c 5500 	mla	r5, ip, r0, r5
 801b166:	1c78      	adds	r0, r7, #1
 801b168:	b2b6      	uxth	r6, r6
 801b16a:	b2ad      	uxth	r5, r5
 801b16c:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b170:	f105 0a01 	add.w	sl, r5, #1
 801b174:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b178:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b17c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b180:	ea4a 0707 	orr.w	r7, sl, r7
 801b184:	f106 0a01 	add.w	sl, r6, #1
 801b188:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b18c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b190:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b194:	ea47 070a 	orr.w	r7, r7, sl
 801b198:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801b19c:	e7b5      	b.n	801b10a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801b19e:	b005      	add	sp, #20
 801b1a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b1a4:	fffff800 	.word	0xfffff800

0801b1a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b1a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b1ac:	b087      	sub	sp, #28
 801b1ae:	468b      	mov	fp, r1
 801b1b0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b1b4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b1b6:	9203      	str	r2, [sp, #12]
 801b1b8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b1bc:	6841      	ldr	r1, [r0, #4]
 801b1be:	9204      	str	r2, [sp, #16]
 801b1c0:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801b1c4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801b1c8:	fb01 2404 	mla	r4, r1, r4, r2
 801b1cc:	6802      	ldr	r2, [r0, #0]
 801b1ce:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b1d2:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b1d6:	3201      	adds	r2, #1
 801b1d8:	f022 0201 	bic.w	r2, r2, #1
 801b1dc:	9200      	str	r2, [sp, #0]
 801b1de:	f8d9 2000 	ldr.w	r2, [r9]
 801b1e2:	9201      	str	r2, [sp, #4]
 801b1e4:	f1bb 0f00 	cmp.w	fp, #0
 801b1e8:	dc03      	bgt.n	801b1f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b1ea:	9a03      	ldr	r2, [sp, #12]
 801b1ec:	2a00      	cmp	r2, #0
 801b1ee:	f340 816a 	ble.w	801b4c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801b1f2:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b1f4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801b1f8:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b1fc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b1fe:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801b202:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b206:	2b00      	cmp	r3, #0
 801b208:	dd0e      	ble.n	801b228 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b20a:	1402      	asrs	r2, r0, #16
 801b20c:	d405      	bmi.n	801b21a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b20e:	42ba      	cmp	r2, r7
 801b210:	da03      	bge.n	801b21a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b212:	140a      	asrs	r2, r1, #16
 801b214:	d401      	bmi.n	801b21a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801b216:	42b2      	cmp	r2, r6
 801b218:	db07      	blt.n	801b22a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801b21a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b21c:	3b01      	subs	r3, #1
 801b21e:	3402      	adds	r4, #2
 801b220:	4410      	add	r0, r2
 801b222:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b224:	4411      	add	r1, r2
 801b226:	e7ee      	b.n	801b206 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801b228:	d017      	beq.n	801b25a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801b22a:	1e5a      	subs	r2, r3, #1
 801b22c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b22e:	fb05 0502 	mla	r5, r5, r2, r0
 801b232:	142d      	asrs	r5, r5, #16
 801b234:	d409      	bmi.n	801b24a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b236:	42bd      	cmp	r5, r7
 801b238:	da07      	bge.n	801b24a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b23a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b23c:	fb05 1202 	mla	r2, r5, r2, r1
 801b240:	1412      	asrs	r2, r2, #16
 801b242:	d402      	bmi.n	801b24a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b244:	42b2      	cmp	r2, r6
 801b246:	f2c0 80c8 	blt.w	801b3da <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801b24a:	2700      	movs	r7, #0
 801b24c:	19da      	adds	r2, r3, r7
 801b24e:	2a00      	cmp	r2, #0
 801b250:	dc3e      	bgt.n	801b2d0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b252:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b256:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b25a:	f1bb 0f00 	cmp.w	fp, #0
 801b25e:	f340 8132 	ble.w	801b4c6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801b262:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b266:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b268:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b26c:	f1bb 0b01 	subs.w	fp, fp, #1
 801b270:	eeb0 6a62 	vmov.f32	s12, s5
 801b274:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b278:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b27c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b280:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801b284:	eeb0 6a43 	vmov.f32	s12, s6
 801b288:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b28c:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801b290:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b294:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b298:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b29c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b2a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b2a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b2a8:	ee12 2a90 	vmov	r2, s5
 801b2ac:	eef0 2a47 	vmov.f32	s5, s14
 801b2b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2b4:	ee13 2a10 	vmov	r2, s6
 801b2b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b2ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b2bc:	eeb0 3a67 	vmov.f32	s6, s15
 801b2c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801b2c4:	9a03      	ldr	r2, [sp, #12]
 801b2c6:	9314      	str	r3, [sp, #80]	@ 0x50
 801b2c8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b2ca:	bf08      	it	eq
 801b2cc:	4613      	moveq	r3, r2
 801b2ce:	e789      	b.n	801b1e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b2d0:	1405      	asrs	r5, r0, #16
 801b2d2:	d436      	bmi.n	801b342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b2d4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801b2d8:	42aa      	cmp	r2, r5
 801b2da:	dd32      	ble.n	801b342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b2dc:	140e      	asrs	r6, r1, #16
 801b2de:	d430      	bmi.n	801b342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b2e0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801b2e4:	42b2      	cmp	r2, r6
 801b2e6:	dd2c      	ble.n	801b342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b2e8:	9a00      	ldr	r2, [sp, #0]
 801b2ea:	fb06 5502 	mla	r5, r6, r2, r5
 801b2ee:	9e01      	ldr	r6, [sp, #4]
 801b2f0:	086a      	lsrs	r2, r5, #1
 801b2f2:	5cb2      	ldrb	r2, [r6, r2]
 801b2f4:	07ee      	lsls	r6, r5, #31
 801b2f6:	bf54      	ite	pl
 801b2f8:	f002 020f 	andpl.w	r2, r2, #15
 801b2fc:	1112      	asrmi	r2, r2, #4
 801b2fe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b302:	b2d2      	uxtb	r2, r2
 801b304:	b1ea      	cbz	r2, 801b342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b306:	9d04      	ldr	r5, [sp, #16]
 801b308:	436a      	muls	r2, r5
 801b30a:	1c55      	adds	r5, r2, #1
 801b30c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b310:	4d6e      	ldr	r5, [pc, #440]	@ (801b4cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b312:	1212      	asrs	r2, r2, #8
 801b314:	682d      	ldr	r5, [r5, #0]
 801b316:	2aff      	cmp	r2, #255	@ 0xff
 801b318:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801b31c:	9605      	str	r6, [sp, #20]
 801b31e:	d116      	bne.n	801b34e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 801b320:	f06f 0201 	mvn.w	r2, #1
 801b324:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801b328:	fb02 fc07 	mul.w	ip, r2, r7
 801b32c:	096a      	lsrs	r2, r5, #5
 801b32e:	f026 0607 	bic.w	r6, r6, #7
 801b332:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b336:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b33a:	4316      	orrs	r6, r2
 801b33c:	432e      	orrs	r6, r5
 801b33e:	f824 600c 	strh.w	r6, [r4, ip]
 801b342:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b344:	3f01      	subs	r7, #1
 801b346:	4410      	add	r0, r2
 801b348:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b34a:	4411      	add	r1, r2
 801b34c:	e77e      	b.n	801b24c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801b34e:	f06f 0601 	mvn.w	r6, #1
 801b352:	fa1f fa82 	uxth.w	sl, r2
 801b356:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801b35a:	43d2      	mvns	r2, r2
 801b35c:	437e      	muls	r6, r7
 801b35e:	b2ed      	uxtb	r5, r5
 801b360:	fb1c fc0a 	smulbb	ip, ip, sl
 801b364:	b2d2      	uxtb	r2, r2
 801b366:	f834 8006 	ldrh.w	r8, [r4, r6]
 801b36a:	fb15 f50a 	smulbb	r5, r5, sl
 801b36e:	9602      	str	r6, [sp, #8]
 801b370:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801b374:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801b378:	fb16 f60a 	smulbb	r6, r6, sl
 801b37c:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801b380:	fb0e ce02 	mla	lr, lr, r2, ip
 801b384:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801b388:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801b38c:	fa1f fe8e 	uxth.w	lr, lr
 801b390:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b394:	fa5f f888 	uxtb.w	r8, r8
 801b398:	fb0c 6c02 	mla	ip, ip, r2, r6
 801b39c:	fb08 5502 	mla	r5, r8, r2, r5
 801b3a0:	f10e 0201 	add.w	r2, lr, #1
 801b3a4:	fa1f fc8c 	uxth.w	ip, ip
 801b3a8:	b2ad      	uxth	r5, r5
 801b3aa:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801b3ae:	9a02      	ldr	r2, [sp, #8]
 801b3b0:	1c6e      	adds	r6, r5, #1
 801b3b2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 801b3b6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801b3ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801b3be:	ea46 0e0e 	orr.w	lr, r6, lr
 801b3c2:	f10c 0601 	add.w	r6, ip, #1
 801b3c6:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801b3ca:	0976      	lsrs	r6, r6, #5
 801b3cc:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b3d0:	ea4e 0e06 	orr.w	lr, lr, r6
 801b3d4:	f824 e002 	strh.w	lr, [r4, r2]
 801b3d8:	e7b3      	b.n	801b342 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801b3da:	f04f 0800 	mov.w	r8, #0
 801b3de:	eba3 0208 	sub.w	r2, r3, r8
 801b3e2:	2a00      	cmp	r2, #0
 801b3e4:	f77f af35 	ble.w	801b252 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801b3e8:	1402      	asrs	r2, r0, #16
 801b3ea:	9e00      	ldr	r6, [sp, #0]
 801b3ec:	140d      	asrs	r5, r1, #16
 801b3ee:	fb06 2505 	mla	r5, r6, r5, r2
 801b3f2:	9e01      	ldr	r6, [sp, #4]
 801b3f4:	086a      	lsrs	r2, r5, #1
 801b3f6:	07ed      	lsls	r5, r5, #31
 801b3f8:	5cb2      	ldrb	r2, [r6, r2]
 801b3fa:	bf54      	ite	pl
 801b3fc:	f002 020f 	andpl.w	r2, r2, #15
 801b400:	1112      	asrmi	r2, r2, #4
 801b402:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b406:	b2d2      	uxtb	r2, r2
 801b408:	b1c2      	cbz	r2, 801b43c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b40a:	9d04      	ldr	r5, [sp, #16]
 801b40c:	436a      	muls	r2, r5
 801b40e:	1c55      	adds	r5, r2, #1
 801b410:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801b414:	4d2d      	ldr	r5, [pc, #180]	@ (801b4cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801b416:	1212      	asrs	r2, r2, #8
 801b418:	682e      	ldr	r6, [r5, #0]
 801b41a:	2aff      	cmp	r2, #255	@ 0xff
 801b41c:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801b420:	d113      	bne.n	801b44a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b422:	0972      	lsrs	r2, r6, #5
 801b424:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801b428:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801b42c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b430:	f025 0507 	bic.w	r5, r5, #7
 801b434:	4315      	orrs	r5, r2
 801b436:	4335      	orrs	r5, r6
 801b438:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801b43c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b43e:	f108 0801 	add.w	r8, r8, #1
 801b442:	4410      	add	r0, r2
 801b444:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b446:	4411      	add	r1, r2
 801b448:	e7c9      	b.n	801b3de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801b44a:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801b44e:	fa1f fa82 	uxth.w	sl, r2
 801b452:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801b456:	43d2      	mvns	r2, r2
 801b458:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801b45c:	fb17 f70a 	smulbb	r7, r7, sl
 801b460:	b2d2      	uxtb	r2, r2
 801b462:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801b466:	b2f6      	uxtb	r6, r6
 801b468:	b2ed      	uxtb	r5, r5
 801b46a:	fb0c 7c02 	mla	ip, ip, r2, r7
 801b46e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801b472:	fb16 f60a 	smulbb	r6, r6, sl
 801b476:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b47a:	fa1f fc8c 	uxth.w	ip, ip
 801b47e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801b482:	fb15 f50a 	smulbb	r5, r5, sl
 801b486:	fa5f fe8e 	uxtb.w	lr, lr
 801b48a:	fb0e 6602 	mla	r6, lr, r2, r6
 801b48e:	fb07 5702 	mla	r7, r7, r2, r5
 801b492:	f10c 0201 	add.w	r2, ip, #1
 801b496:	b2b6      	uxth	r6, r6
 801b498:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b49c:	1c75      	adds	r5, r6, #1
 801b49e:	b2bf      	uxth	r7, r7
 801b4a0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801b4a4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801b4a8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801b4ac:	ea45 0c0c 	orr.w	ip, r5, ip
 801b4b0:	1c7d      	adds	r5, r7, #1
 801b4b2:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801b4b6:	096d      	lsrs	r5, r5, #5
 801b4b8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b4bc:	ea4c 0c05 	orr.w	ip, ip, r5
 801b4c0:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801b4c4:	e7ba      	b.n	801b43c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801b4c6:	b007      	add	sp, #28
 801b4c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4cc:	20003994 	.word	0x20003994

0801b4d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b4d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4d4:	b087      	sub	sp, #28
 801b4d6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801b4da:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 801b7e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801b4de:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801b4e0:	9101      	str	r1, [sp, #4]
 801b4e2:	9205      	str	r2, [sp, #20]
 801b4e4:	6841      	ldr	r1, [r0, #4]
 801b4e6:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801b4ea:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801b4ee:	fb01 2404 	mla	r4, r1, r4, r2
 801b4f2:	6802      	ldr	r2, [r0, #0]
 801b4f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801b4f8:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b4fc:	3201      	adds	r2, #1
 801b4fe:	f022 0201 	bic.w	r2, r2, #1
 801b502:	9202      	str	r2, [sp, #8]
 801b504:	f8db 2000 	ldr.w	r2, [fp]
 801b508:	9203      	str	r2, [sp, #12]
 801b50a:	9a01      	ldr	r2, [sp, #4]
 801b50c:	2a00      	cmp	r2, #0
 801b50e:	dc03      	bgt.n	801b518 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801b510:	9a05      	ldr	r2, [sp, #20]
 801b512:	2a00      	cmp	r2, #0
 801b514:	f340 8162 	ble.w	801b7dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b518:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b51a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801b51e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801b522:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b524:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801b528:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801b52c:	2b00      	cmp	r3, #0
 801b52e:	dd0e      	ble.n	801b54e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801b530:	1402      	asrs	r2, r0, #16
 801b532:	d405      	bmi.n	801b540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b534:	42ba      	cmp	r2, r7
 801b536:	da03      	bge.n	801b540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b538:	140a      	asrs	r2, r1, #16
 801b53a:	d401      	bmi.n	801b540 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801b53c:	42b2      	cmp	r2, r6
 801b53e:	db07      	blt.n	801b550 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801b540:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b542:	3b01      	subs	r3, #1
 801b544:	3402      	adds	r4, #2
 801b546:	4410      	add	r0, r2
 801b548:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b54a:	4411      	add	r1, r2
 801b54c:	e7ee      	b.n	801b52c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801b54e:	d017      	beq.n	801b580 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801b550:	1e5a      	subs	r2, r3, #1
 801b552:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801b554:	fb05 0502 	mla	r5, r5, r2, r0
 801b558:	142d      	asrs	r5, r5, #16
 801b55a:	d409      	bmi.n	801b570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b55c:	42bd      	cmp	r5, r7
 801b55e:	da07      	bge.n	801b570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b560:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801b562:	fb05 1202 	mla	r2, r5, r2, r1
 801b566:	1412      	asrs	r2, r2, #16
 801b568:	d402      	bmi.n	801b570 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801b56a:	42b2      	cmp	r2, r6
 801b56c:	f2c0 80c3 	blt.w	801b6f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801b570:	2500      	movs	r5, #0
 801b572:	195a      	adds	r2, r3, r5
 801b574:	2a00      	cmp	r2, #0
 801b576:	dc3f      	bgt.n	801b5f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801b578:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b57c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b580:	9b01      	ldr	r3, [sp, #4]
 801b582:	2b00      	cmp	r3, #0
 801b584:	f340 812a 	ble.w	801b7dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801b588:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b58c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b58e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b592:	eeb0 6a62 	vmov.f32	s12, s5
 801b596:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801b59a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b59e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b5a2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801b5a6:	eeb0 6a43 	vmov.f32	s12, s6
 801b5aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801b5ae:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801b5b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b5b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b5ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b5be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b5c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b5c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b5ca:	ee12 2a90 	vmov	r2, s5
 801b5ce:	eef0 2a47 	vmov.f32	s5, s14
 801b5d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5d6:	ee13 2a10 	vmov	r2, s6
 801b5da:	9313      	str	r3, [sp, #76]	@ 0x4c
 801b5dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b5de:	eeb0 3a67 	vmov.f32	s6, s15
 801b5e2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b5e6:	9314      	str	r3, [sp, #80]	@ 0x50
 801b5e8:	9b01      	ldr	r3, [sp, #4]
 801b5ea:	9a05      	ldr	r2, [sp, #20]
 801b5ec:	3b01      	subs	r3, #1
 801b5ee:	9301      	str	r3, [sp, #4]
 801b5f0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801b5f2:	bf08      	it	eq
 801b5f4:	4613      	moveq	r3, r2
 801b5f6:	e788      	b.n	801b50a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801b5f8:	1406      	asrs	r6, r0, #16
 801b5fa:	d42c      	bmi.n	801b656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b5fc:	f8db 2008 	ldr.w	r2, [fp, #8]
 801b600:	42b2      	cmp	r2, r6
 801b602:	dd28      	ble.n	801b656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b604:	140f      	asrs	r7, r1, #16
 801b606:	d426      	bmi.n	801b656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b608:	f8db 200c 	ldr.w	r2, [fp, #12]
 801b60c:	42ba      	cmp	r2, r7
 801b60e:	dd22      	ble.n	801b656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b610:	9a02      	ldr	r2, [sp, #8]
 801b612:	fb07 6602 	mla	r6, r7, r2, r6
 801b616:	9f03      	ldr	r7, [sp, #12]
 801b618:	0872      	lsrs	r2, r6, #1
 801b61a:	07f6      	lsls	r6, r6, #31
 801b61c:	5cba      	ldrb	r2, [r7, r2]
 801b61e:	bf54      	ite	pl
 801b620:	f002 020f 	andpl.w	r2, r2, #15
 801b624:	1112      	asrmi	r2, r2, #4
 801b626:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b62a:	b2d2      	uxtb	r2, r2
 801b62c:	2aff      	cmp	r2, #255	@ 0xff
 801b62e:	d118      	bne.n	801b662 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801b630:	f06f 0601 	mvn.w	r6, #1
 801b634:	f8d8 2000 	ldr.w	r2, [r8]
 801b638:	fb06 f705 	mul.w	r7, r6, r5
 801b63c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 801b640:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801b644:	0956      	lsrs	r6, r2, #5
 801b646:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b64a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801b64e:	ea4c 0606 	orr.w	r6, ip, r6
 801b652:	4316      	orrs	r6, r2
 801b654:	53e6      	strh	r6, [r4, r7]
 801b656:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b658:	3d01      	subs	r5, #1
 801b65a:	4410      	add	r0, r2
 801b65c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b65e:	4411      	add	r1, r2
 801b660:	e787      	b.n	801b572 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801b662:	2a00      	cmp	r2, #0
 801b664:	d0f7      	beq.n	801b656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b666:	f06f 0601 	mvn.w	r6, #1
 801b66a:	f8d8 c000 	ldr.w	ip, [r8]
 801b66e:	fa1f f982 	uxth.w	r9, r2
 801b672:	43d2      	mvns	r2, r2
 801b674:	436e      	muls	r6, r5
 801b676:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801b67a:	b2d2      	uxtb	r2, r2
 801b67c:	f834 e006 	ldrh.w	lr, [r4, r6]
 801b680:	fb1a fa09 	smulbb	sl, sl, r9
 801b684:	9604      	str	r6, [sp, #16]
 801b686:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801b68a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801b68e:	fb16 f609 	smulbb	r6, r6, r9
 801b692:	fa5f fc8c 	uxtb.w	ip, ip
 801b696:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b69a:	fb1c fc09 	smulbb	ip, ip, r9
 801b69e:	fb07 6702 	mla	r7, r7, r2, r6
 801b6a2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801b6a6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801b6aa:	b2bf      	uxth	r7, r7
 801b6ac:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801b6b0:	fa5f fe8e 	uxtb.w	lr, lr
 801b6b4:	fb06 a602 	mla	r6, r6, r2, sl
 801b6b8:	fb0e cc02 	mla	ip, lr, r2, ip
 801b6bc:	1c7a      	adds	r2, r7, #1
 801b6be:	b2b6      	uxth	r6, r6
 801b6c0:	fa1f fc8c 	uxth.w	ip, ip
 801b6c4:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801b6c8:	9a04      	ldr	r2, [sp, #16]
 801b6ca:	f10c 0a01 	add.w	sl, ip, #1
 801b6ce:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b6d2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801b6d6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b6da:	ea4a 0707 	orr.w	r7, sl, r7
 801b6de:	f106 0a01 	add.w	sl, r6, #1
 801b6e2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801b6e6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b6ea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b6ee:	ea47 070a 	orr.w	r7, r7, sl
 801b6f2:	52a7      	strh	r7, [r4, r2]
 801b6f4:	e7af      	b.n	801b656 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801b6f6:	f04f 0e00 	mov.w	lr, #0
 801b6fa:	eba3 020e 	sub.w	r2, r3, lr
 801b6fe:	2a00      	cmp	r2, #0
 801b700:	f77f af3a 	ble.w	801b578 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801b704:	1402      	asrs	r2, r0, #16
 801b706:	9e02      	ldr	r6, [sp, #8]
 801b708:	140d      	asrs	r5, r1, #16
 801b70a:	fb06 2505 	mla	r5, r6, r5, r2
 801b70e:	9e03      	ldr	r6, [sp, #12]
 801b710:	086a      	lsrs	r2, r5, #1
 801b712:	07ed      	lsls	r5, r5, #31
 801b714:	5cb2      	ldrb	r2, [r6, r2]
 801b716:	bf54      	ite	pl
 801b718:	f002 020f 	andpl.w	r2, r2, #15
 801b71c:	1112      	asrmi	r2, r2, #4
 801b71e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801b722:	b2d2      	uxtb	r2, r2
 801b724:	2aff      	cmp	r2, #255	@ 0xff
 801b726:	d115      	bne.n	801b754 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801b728:	f8d8 5000 	ldr.w	r5, [r8]
 801b72c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 801b730:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801b734:	096a      	lsrs	r2, r5, #5
 801b736:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b73a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b73e:	4332      	orrs	r2, r6
 801b740:	432a      	orrs	r2, r5
 801b742:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801b746:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801b748:	f10e 0e01 	add.w	lr, lr, #1
 801b74c:	4410      	add	r0, r2
 801b74e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801b750:	4411      	add	r1, r2
 801b752:	e7d2      	b.n	801b6fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801b754:	2a00      	cmp	r2, #0
 801b756:	d0f6      	beq.n	801b746 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b758:	f8d8 7000 	ldr.w	r7, [r8]
 801b75c:	fa1f f982 	uxth.w	r9, r2
 801b760:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801b764:	43d2      	mvns	r2, r2
 801b766:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801b76a:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801b76e:	ea4f 262c 	mov.w	r6, ip, asr #8
 801b772:	fb15 f509 	smulbb	r5, r5, r9
 801b776:	b2d2      	uxtb	r2, r2
 801b778:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b77c:	b2ff      	uxtb	r7, r7
 801b77e:	fb1a fa09 	smulbb	sl, sl, r9
 801b782:	fb06 5602 	mla	r6, r6, r2, r5
 801b786:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801b78a:	fb17 f709 	smulbb	r7, r7, r9
 801b78e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b792:	b2b6      	uxth	r6, r6
 801b794:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b798:	fa5f fc8c 	uxtb.w	ip, ip
 801b79c:	fb05 a502 	mla	r5, r5, r2, sl
 801b7a0:	fb0c 7702 	mla	r7, ip, r2, r7
 801b7a4:	1c72      	adds	r2, r6, #1
 801b7a6:	b2ad      	uxth	r5, r5
 801b7a8:	b2bf      	uxth	r7, r7
 801b7aa:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801b7ae:	f107 0a01 	add.w	sl, r7, #1
 801b7b2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b7b6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801b7ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801b7be:	ea4a 0606 	orr.w	r6, sl, r6
 801b7c2:	f105 0a01 	add.w	sl, r5, #1
 801b7c6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801b7ca:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b7ce:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b7d2:	ea46 060a 	orr.w	r6, r6, sl
 801b7d6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801b7da:	e7b4      	b.n	801b746 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b7dc:	b007      	add	sp, #28
 801b7de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7e2:	bf00      	nop
 801b7e4:	20003994 	.word	0x20003994

0801b7e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801b7e8:	4770      	bx	lr

0801b7ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801b7ea:	4770      	bx	lr

0801b7ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801b7ec:	4770      	bx	lr

0801b7ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801b7ee:	4770      	bx	lr

0801b7f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801b7f0:	4770      	bx	lr

0801b7f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801b7f2:	4770      	bx	lr

0801b7f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801b7f4:	4770      	bx	lr

0801b7f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801b7f6:	4770      	bx	lr

0801b7f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b7f8:	4770      	bx	lr

0801b7fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b7fa:	4770      	bx	lr

0801b7fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b7fc:	4770      	bx	lr

0801b7fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b7fe:	4770      	bx	lr

0801b800 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b800:	4770      	bx	lr

0801b802 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b802:	4770      	bx	lr

0801b804 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b804:	4770      	bx	lr

0801b806 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b806:	4770      	bx	lr

0801b808 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b808:	4770      	bx	lr

0801b80a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b80a:	4770      	bx	lr

0801b80c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b80c:	4770      	bx	lr

0801b80e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b80e:	4770      	bx	lr

0801b810 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801b810:	4770      	bx	lr

0801b812 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801b812:	4770      	bx	lr

0801b814 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801b814:	4770      	bx	lr

0801b816 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801b816:	4770      	bx	lr

0801b818 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b818:	4770      	bx	lr

0801b81a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801b81a:	4770      	bx	lr

0801b81c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b81c:	4770      	bx	lr

0801b81e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801b81e:	4770      	bx	lr

0801b820 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801b820:	4770      	bx	lr

0801b822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801b822:	4770      	bx	lr

0801b824 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801b824:	4770      	bx	lr

0801b826 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801b826:	4770      	bx	lr

0801b828 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801b828:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b82c:	b088      	sub	sp, #32
 801b82e:	4606      	mov	r6, r0
 801b830:	4688      	mov	r8, r1
 801b832:	4691      	mov	r9, r2
 801b834:	ac08      	add	r4, sp, #32
 801b836:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801b83a:	4620      	mov	r0, r4
 801b83c:	f7fd fc32 	bl	80190a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801b840:	6833      	ldr	r3, [r6, #0]
 801b842:	4605      	mov	r5, r0
 801b844:	4620      	mov	r0, r4
 801b846:	699f      	ldr	r7, [r3, #24]
 801b848:	f7fd fb3a 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b84c:	4682      	mov	sl, r0
 801b84e:	4620      	mov	r0, r4
 801b850:	f7fd fb6a 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b854:	9500      	str	r5, [sp, #0]
 801b856:	464b      	mov	r3, r9
 801b858:	4642      	mov	r2, r8
 801b85a:	4631      	mov	r1, r6
 801b85c:	e9cd a001 	strd	sl, r0, [sp, #4]
 801b860:	a806      	add	r0, sp, #24
 801b862:	47b8      	blx	r7
 801b864:	4628      	mov	r0, r5
 801b866:	b008      	add	sp, #32
 801b868:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b86c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b86c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b870:	2300      	movs	r3, #0
 801b872:	9300      	str	r3, [sp, #0]
 801b874:	4b3d      	ldr	r3, [pc, #244]	@ (801b96c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b876:	781b      	ldrb	r3, [r3, #0]
 801b878:	2b00      	cmp	r3, #0
 801b87a:	d137      	bne.n	801b8ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b87c:	4a3c      	ldr	r2, [pc, #240]	@ (801b970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b87e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b882:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b886:	2b00      	cmp	r3, #0
 801b888:	d132      	bne.n	801b8f0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b88a:	4b3a      	ldr	r3, [pc, #232]	@ (801b974 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b88c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b890:	ac02      	add	r4, sp, #8
 801b892:	6808      	ldr	r0, [r1, #0]
 801b894:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b898:	ab02      	add	r3, sp, #8
 801b89a:	6849      	ldr	r1, [r1, #4]
 801b89c:	4d36      	ldr	r5, [pc, #216]	@ (801b978 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b89e:	c303      	stmia	r3!, {r0, r1}
 801b8a0:	4669      	mov	r1, sp
 801b8a2:	4620      	mov	r0, r4
 801b8a4:	f7fa fbd4 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b8a8:	4668      	mov	r0, sp
 801b8aa:	f7fa fba9 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b8ae:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b8b2:	f8bd 2000 	ldrh.w	r2, [sp]
 801b8b6:	462f      	mov	r7, r5
 801b8b8:	6828      	ldr	r0, [r5, #0]
 801b8ba:	4413      	add	r3, r2
 801b8bc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b8c0:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b8c4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b8c8:	4413      	add	r3, r2
 801b8ca:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b8ce:	6803      	ldr	r3, [r0, #0]
 801b8d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b8d2:	4798      	blx	r3
 801b8d4:	f010 0f01 	tst.w	r0, #1
 801b8d8:	d00c      	beq.n	801b8f4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b8da:	6828      	ldr	r0, [r5, #0]
 801b8dc:	6803      	ldr	r3, [r0, #0]
 801b8de:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b8e2:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801b8e4:	4798      	blx	r3
 801b8e6:	b004      	add	sp, #16
 801b8e8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b8ec:	4a21      	ldr	r2, [pc, #132]	@ (801b974 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b8ee:	e7c6      	b.n	801b87e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b8f0:	4b1f      	ldr	r3, [pc, #124]	@ (801b970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b8f2:	e7cb      	b.n	801b88c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b8f4:	6838      	ldr	r0, [r7, #0]
 801b8f6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b8fa:	6803      	ldr	r3, [r0, #0]
 801b8fc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b900:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b904:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801b906:	4798      	blx	r3
 801b908:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b90c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b910:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b914:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b918:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b91c:	6838      	ldr	r0, [r7, #0]
 801b91e:	6803      	ldr	r3, [r0, #0]
 801b920:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b922:	4798      	blx	r3
 801b924:	4a12      	ldr	r2, [pc, #72]	@ (801b970 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b926:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b92a:	8813      	ldrh	r3, [r2, #0]
 801b92c:	4691      	mov	r9, r2
 801b92e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b932:	435d      	muls	r5, r3
 801b934:	fb03 1404 	mla	r4, r3, r4, r1
 801b938:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b93c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b940:	6838      	ldr	r0, [r7, #0]
 801b942:	42ac      	cmp	r4, r5
 801b944:	6803      	ldr	r3, [r0, #0]
 801b946:	d20e      	bcs.n	801b966 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b948:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801b94c:	4632      	mov	r2, r6
 801b94e:	4643      	mov	r3, r8
 801b950:	4621      	mov	r1, r4
 801b952:	47d0      	blx	sl
 801b954:	f8b9 3000 	ldrh.w	r3, [r9]
 801b958:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b95c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b960:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b964:	e7ec      	b.n	801b940 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b966:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b968:	4798      	blx	r3
 801b96a:	e7bc      	b.n	801b8e6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b96c:	2000397c 	.word	0x2000397c
 801b970:	2000397e 	.word	0x2000397e
 801b974:	20003980 	.word	0x20003980
 801b978:	20003984 	.word	0x20003984

0801b97c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b97c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b980:	b08b      	sub	sp, #44	@ 0x2c
 801b982:	460f      	mov	r7, r1
 801b984:	4616      	mov	r6, r2
 801b986:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801b98a:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801b98e:	f1bb 0f00 	cmp.w	fp, #0
 801b992:	d04a      	beq.n	801ba2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b994:	6810      	ldr	r0, [r2, #0]
 801b996:	ad06      	add	r5, sp, #24
 801b998:	6851      	ldr	r1, [r2, #4]
 801b99a:	c503      	stmia	r5!, {r0, r1}
 801b99c:	6818      	ldr	r0, [r3, #0]
 801b99e:	ad08      	add	r5, sp, #32
 801b9a0:	6859      	ldr	r1, [r3, #4]
 801b9a2:	c503      	stmia	r5!, {r0, r1}
 801b9a4:	a806      	add	r0, sp, #24
 801b9a6:	f7fa fb2b 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b9aa:	4631      	mov	r1, r6
 801b9ac:	a808      	add	r0, sp, #32
 801b9ae:	f7fa fb4f 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b9b2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b9b6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801b9ba:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b9be:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801b9c2:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b9c6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801b9ca:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b9ce:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b9d2:	4f5f      	ldr	r7, [pc, #380]	@ (801bb50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b9d4:	440a      	add	r2, r1
 801b9d6:	6838      	ldr	r0, [r7, #0]
 801b9d8:	46b9      	mov	r9, r7
 801b9da:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b9de:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b9e2:	4413      	add	r3, r2
 801b9e4:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801b9e8:	6803      	ldr	r3, [r0, #0]
 801b9ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801b9ec:	4798      	blx	r3
 801b9ee:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801b9f2:	d11d      	bne.n	801ba30 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b9f4:	b9fc      	cbnz	r4, 801ba36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b9f6:	f010 0f01 	tst.w	r0, #1
 801b9fa:	d01c      	beq.n	801ba36 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b9fc:	f8d9 0000 	ldr.w	r0, [r9]
 801ba00:	2700      	movs	r7, #0
 801ba02:	b2ad      	uxth	r5, r5
 801ba04:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801ba08:	6801      	ldr	r1, [r0, #0]
 801ba0a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801ba0e:	f8cd b00c 	str.w	fp, [sp, #12]
 801ba12:	9501      	str	r5, [sp, #4]
 801ba14:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801ba18:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801ba1c:	9402      	str	r4, [sp, #8]
 801ba1e:	fa1f f488 	uxth.w	r4, r8
 801ba22:	9400      	str	r4, [sp, #0]
 801ba24:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801ba26:	4631      	mov	r1, r6
 801ba28:	47a0      	blx	r4
 801ba2a:	b00b      	add	sp, #44	@ 0x2c
 801ba2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba30:	f010 0f04 	tst.w	r0, #4
 801ba34:	e7e1      	b.n	801b9fa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801ba36:	f8d9 0000 	ldr.w	r0, [r9]
 801ba3a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801ba3e:	6803      	ldr	r3, [r0, #0]
 801ba40:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ba42:	4798      	blx	r3
 801ba44:	4b43      	ldr	r3, [pc, #268]	@ (801bb54 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801ba46:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801ba4a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801ba4e:	881a      	ldrh	r2, [r3, #0]
 801ba50:	469a      	mov	sl, r3
 801ba52:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801ba56:	fb05 f502 	mul.w	r5, r5, r2
 801ba5a:	fb02 1404 	mla	r4, r2, r4, r1
 801ba5e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ba62:	d059      	beq.n	801bb18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801ba64:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801ba68:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ba6c:	fa1f f28b 	uxth.w	r2, fp
 801ba70:	469e      	mov	lr, r3
 801ba72:	fa1f f989 	uxth.w	r9, r9
 801ba76:	42ac      	cmp	r4, r5
 801ba78:	d264      	bcs.n	801bb44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801ba7a:	eb04 0a07 	add.w	sl, r4, r7
 801ba7e:	4554      	cmp	r4, sl
 801ba80:	d23d      	bcs.n	801bafe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801ba82:	8821      	ldrh	r1, [r4, #0]
 801ba84:	f836 3b02 	ldrh.w	r3, [r6], #2
 801ba88:	1208      	asrs	r0, r1, #8
 801ba8a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801ba8e:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ba92:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801ba96:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ba9a:	00c9      	lsls	r1, r1, #3
 801ba9c:	fb10 f009 	smulbb	r0, r0, r9
 801baa0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801baa4:	b2c9      	uxtb	r1, r1
 801baa6:	fb0c 0c02 	mla	ip, ip, r2, r0
 801baaa:	10d8      	asrs	r0, r3, #3
 801baac:	fb1b fb09 	smulbb	fp, fp, r9
 801bab0:	00db      	lsls	r3, r3, #3
 801bab2:	fa1f fc8c 	uxth.w	ip, ip
 801bab6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801baba:	fb11 f109 	smulbb	r1, r1, r9
 801babe:	b2db      	uxtb	r3, r3
 801bac0:	fb00 b002 	mla	r0, r0, r2, fp
 801bac4:	f10c 0b01 	add.w	fp, ip, #1
 801bac8:	fb03 1302 	mla	r3, r3, r2, r1
 801bacc:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801bad0:	b29b      	uxth	r3, r3
 801bad2:	b280      	uxth	r0, r0
 801bad4:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801bad8:	f103 0c01 	add.w	ip, r3, #1
 801badc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801bae0:	1c43      	adds	r3, r0, #1
 801bae2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bae6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801baea:	0940      	lsrs	r0, r0, #5
 801baec:	ea4c 0c0b 	orr.w	ip, ip, fp
 801baf0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801baf4:	ea4c 0c00 	orr.w	ip, ip, r0
 801baf8:	f824 cb02 	strh.w	ip, [r4], #2
 801bafc:	e7bf      	b.n	801ba7e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801bafe:	f8be 3000 	ldrh.w	r3, [lr]
 801bb02:	eba3 0308 	sub.w	r3, r3, r8
 801bb06:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb0a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bb0e:	eba3 0308 	sub.w	r3, r3, r8
 801bb12:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bb16:	e7ae      	b.n	801ba76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801bb18:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801bb1c:	f8d9 0000 	ldr.w	r0, [r9]
 801bb20:	42ac      	cmp	r4, r5
 801bb22:	6803      	ldr	r3, [r0, #0]
 801bb24:	d20e      	bcs.n	801bb44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801bb26:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801bb2a:	4632      	mov	r2, r6
 801bb2c:	463b      	mov	r3, r7
 801bb2e:	4621      	mov	r1, r4
 801bb30:	47c0      	blx	r8
 801bb32:	f8ba 3000 	ldrh.w	r3, [sl]
 801bb36:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801bb3a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801bb3e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801bb42:	e7eb      	b.n	801bb1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801bb44:	4b02      	ldr	r3, [pc, #8]	@ (801bb50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801bb46:	6818      	ldr	r0, [r3, #0]
 801bb48:	6803      	ldr	r3, [r0, #0]
 801bb4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bb4c:	4798      	blx	r3
 801bb4e:	e76c      	b.n	801ba2a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801bb50:	20003984 	.word	0x20003984
 801bb54:	2000397e 	.word	0x2000397e

0801bb58 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801bb58:	b510      	push	{r4, lr}
 801bb5a:	4604      	mov	r4, r0
 801bb5c:	2104      	movs	r1, #4
 801bb5e:	f00b ff8a 	bl	8027a76 <_ZdlPvj>
 801bb62:	4620      	mov	r0, r4
 801bb64:	bd10      	pop	{r4, pc}

0801bb66 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801bb66:	b510      	push	{r4, lr}
 801bb68:	4604      	mov	r4, r0
 801bb6a:	2104      	movs	r1, #4
 801bb6c:	f00b ff83 	bl	8027a76 <_ZdlPvj>
 801bb70:	4620      	mov	r0, r4
 801bb72:	bd10      	pop	{r4, pc}

0801bb74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801bb74:	b510      	push	{r4, lr}
 801bb76:	4604      	mov	r4, r0
 801bb78:	f640 0144 	movw	r1, #2116	@ 0x844
 801bb7c:	f00b ff7b 	bl	8027a76 <_ZdlPvj>
 801bb80:	4620      	mov	r0, r4
 801bb82:	bd10      	pop	{r4, pc}

0801bb84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801bb84:	b510      	push	{r4, lr}
 801bb86:	4604      	mov	r4, r0
 801bb88:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801bb8c:	f00b ff73 	bl	8027a76 <_ZdlPvj>
 801bb90:	4620      	mov	r0, r4
 801bb92:	bd10      	pop	{r4, pc}

0801bb94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801bb94:	b510      	push	{r4, lr}
 801bb96:	4604      	mov	r4, r0
 801bb98:	2104      	movs	r1, #4
 801bb9a:	f00b ff6c 	bl	8027a76 <_ZdlPvj>
 801bb9e:	4620      	mov	r0, r4
 801bba0:	bd10      	pop	{r4, pc}

0801bba2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801bba2:	b510      	push	{r4, lr}
 801bba4:	4604      	mov	r4, r0
 801bba6:	2104      	movs	r1, #4
 801bba8:	f00b ff65 	bl	8027a76 <_ZdlPvj>
 801bbac:	4620      	mov	r0, r4
 801bbae:	bd10      	pop	{r4, pc}

0801bbb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801bbb0:	b510      	push	{r4, lr}
 801bbb2:	4604      	mov	r4, r0
 801bbb4:	2104      	movs	r1, #4
 801bbb6:	f00b ff5e 	bl	8027a76 <_ZdlPvj>
 801bbba:	4620      	mov	r0, r4
 801bbbc:	bd10      	pop	{r4, pc}

0801bbbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801bbbe:	b510      	push	{r4, lr}
 801bbc0:	4604      	mov	r4, r0
 801bbc2:	2104      	movs	r1, #4
 801bbc4:	f00b ff57 	bl	8027a76 <_ZdlPvj>
 801bbc8:	4620      	mov	r0, r4
 801bbca:	bd10      	pop	{r4, pc}

0801bbcc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801bbcc:	b510      	push	{r4, lr}
 801bbce:	4604      	mov	r4, r0
 801bbd0:	2104      	movs	r1, #4
 801bbd2:	f00b ff50 	bl	8027a76 <_ZdlPvj>
 801bbd6:	4620      	mov	r0, r4
 801bbd8:	bd10      	pop	{r4, pc}

0801bbda <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801bbda:	b510      	push	{r4, lr}
 801bbdc:	4604      	mov	r4, r0
 801bbde:	2104      	movs	r1, #4
 801bbe0:	f00b ff49 	bl	8027a76 <_ZdlPvj>
 801bbe4:	4620      	mov	r0, r4
 801bbe6:	bd10      	pop	{r4, pc}

0801bbe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801bbe8:	b510      	push	{r4, lr}
 801bbea:	4604      	mov	r4, r0
 801bbec:	2104      	movs	r1, #4
 801bbee:	f00b ff42 	bl	8027a76 <_ZdlPvj>
 801bbf2:	4620      	mov	r0, r4
 801bbf4:	bd10      	pop	{r4, pc}

0801bbf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801bbf6:	b510      	push	{r4, lr}
 801bbf8:	4604      	mov	r4, r0
 801bbfa:	2104      	movs	r1, #4
 801bbfc:	f00b ff3b 	bl	8027a76 <_ZdlPvj>
 801bc00:	4620      	mov	r0, r4
 801bc02:	bd10      	pop	{r4, pc}

0801bc04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801bc04:	b510      	push	{r4, lr}
 801bc06:	4604      	mov	r4, r0
 801bc08:	2104      	movs	r1, #4
 801bc0a:	f00b ff34 	bl	8027a76 <_ZdlPvj>
 801bc0e:	4620      	mov	r0, r4
 801bc10:	bd10      	pop	{r4, pc}

0801bc12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801bc12:	b510      	push	{r4, lr}
 801bc14:	4604      	mov	r4, r0
 801bc16:	2104      	movs	r1, #4
 801bc18:	f00b ff2d 	bl	8027a76 <_ZdlPvj>
 801bc1c:	4620      	mov	r0, r4
 801bc1e:	bd10      	pop	{r4, pc}

0801bc20 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801bc20:	b510      	push	{r4, lr}
 801bc22:	4604      	mov	r4, r0
 801bc24:	2104      	movs	r1, #4
 801bc26:	f00b ff26 	bl	8027a76 <_ZdlPvj>
 801bc2a:	4620      	mov	r0, r4
 801bc2c:	bd10      	pop	{r4, pc}

0801bc2e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801bc2e:	b510      	push	{r4, lr}
 801bc30:	4604      	mov	r4, r0
 801bc32:	2104      	movs	r1, #4
 801bc34:	f00b ff1f 	bl	8027a76 <_ZdlPvj>
 801bc38:	4620      	mov	r0, r4
 801bc3a:	bd10      	pop	{r4, pc}

0801bc3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801bc3c:	b510      	push	{r4, lr}
 801bc3e:	4604      	mov	r4, r0
 801bc40:	2104      	movs	r1, #4
 801bc42:	f00b ff18 	bl	8027a76 <_ZdlPvj>
 801bc46:	4620      	mov	r0, r4
 801bc48:	bd10      	pop	{r4, pc}

0801bc4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801bc4a:	b510      	push	{r4, lr}
 801bc4c:	4604      	mov	r4, r0
 801bc4e:	2104      	movs	r1, #4
 801bc50:	f00b ff11 	bl	8027a76 <_ZdlPvj>
 801bc54:	4620      	mov	r0, r4
 801bc56:	bd10      	pop	{r4, pc}

0801bc58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801bc58:	b510      	push	{r4, lr}
 801bc5a:	4604      	mov	r4, r0
 801bc5c:	2104      	movs	r1, #4
 801bc5e:	f00b ff0a 	bl	8027a76 <_ZdlPvj>
 801bc62:	4620      	mov	r0, r4
 801bc64:	bd10      	pop	{r4, pc}

0801bc66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801bc66:	b510      	push	{r4, lr}
 801bc68:	4604      	mov	r4, r0
 801bc6a:	2104      	movs	r1, #4
 801bc6c:	f00b ff03 	bl	8027a76 <_ZdlPvj>
 801bc70:	4620      	mov	r0, r4
 801bc72:	bd10      	pop	{r4, pc}

0801bc74 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801bc74:	b510      	push	{r4, lr}
 801bc76:	4604      	mov	r4, r0
 801bc78:	2104      	movs	r1, #4
 801bc7a:	f00b fefc 	bl	8027a76 <_ZdlPvj>
 801bc7e:	4620      	mov	r0, r4
 801bc80:	bd10      	pop	{r4, pc}

0801bc82 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801bc82:	b510      	push	{r4, lr}
 801bc84:	4604      	mov	r4, r0
 801bc86:	2104      	movs	r1, #4
 801bc88:	f00b fef5 	bl	8027a76 <_ZdlPvj>
 801bc8c:	4620      	mov	r0, r4
 801bc8e:	bd10      	pop	{r4, pc}

0801bc90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801bc90:	b510      	push	{r4, lr}
 801bc92:	4604      	mov	r4, r0
 801bc94:	2104      	movs	r1, #4
 801bc96:	f00b feee 	bl	8027a76 <_ZdlPvj>
 801bc9a:	4620      	mov	r0, r4
 801bc9c:	bd10      	pop	{r4, pc}

0801bc9e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801bc9e:	b510      	push	{r4, lr}
 801bca0:	4604      	mov	r4, r0
 801bca2:	2104      	movs	r1, #4
 801bca4:	f00b fee7 	bl	8027a76 <_ZdlPvj>
 801bca8:	4620      	mov	r0, r4
 801bcaa:	bd10      	pop	{r4, pc}

0801bcac <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801bcac:	b510      	push	{r4, lr}
 801bcae:	4604      	mov	r4, r0
 801bcb0:	2104      	movs	r1, #4
 801bcb2:	f00b fee0 	bl	8027a76 <_ZdlPvj>
 801bcb6:	4620      	mov	r0, r4
 801bcb8:	bd10      	pop	{r4, pc}

0801bcba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801bcba:	b510      	push	{r4, lr}
 801bcbc:	4604      	mov	r4, r0
 801bcbe:	2104      	movs	r1, #4
 801bcc0:	f00b fed9 	bl	8027a76 <_ZdlPvj>
 801bcc4:	4620      	mov	r0, r4
 801bcc6:	bd10      	pop	{r4, pc}

0801bcc8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801bcc8:	b510      	push	{r4, lr}
 801bcca:	4604      	mov	r4, r0
 801bccc:	2104      	movs	r1, #4
 801bcce:	f00b fed2 	bl	8027a76 <_ZdlPvj>
 801bcd2:	4620      	mov	r0, r4
 801bcd4:	bd10      	pop	{r4, pc}

0801bcd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801bcd6:	b510      	push	{r4, lr}
 801bcd8:	4604      	mov	r4, r0
 801bcda:	2104      	movs	r1, #4
 801bcdc:	f00b fecb 	bl	8027a76 <_ZdlPvj>
 801bce0:	4620      	mov	r0, r4
 801bce2:	bd10      	pop	{r4, pc}

0801bce4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801bce4:	b510      	push	{r4, lr}
 801bce6:	4604      	mov	r4, r0
 801bce8:	2104      	movs	r1, #4
 801bcea:	f00b fec4 	bl	8027a76 <_ZdlPvj>
 801bcee:	4620      	mov	r0, r4
 801bcf0:	bd10      	pop	{r4, pc}

0801bcf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801bcf2:	b510      	push	{r4, lr}
 801bcf4:	4604      	mov	r4, r0
 801bcf6:	2104      	movs	r1, #4
 801bcf8:	f00b febd 	bl	8027a76 <_ZdlPvj>
 801bcfc:	4620      	mov	r0, r4
 801bcfe:	bd10      	pop	{r4, pc}

0801bd00 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801bd00:	b510      	push	{r4, lr}
 801bd02:	4604      	mov	r4, r0
 801bd04:	2104      	movs	r1, #4
 801bd06:	f00b feb6 	bl	8027a76 <_ZdlPvj>
 801bd0a:	4620      	mov	r0, r4
 801bd0c:	bd10      	pop	{r4, pc}

0801bd0e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801bd0e:	b510      	push	{r4, lr}
 801bd10:	4604      	mov	r4, r0
 801bd12:	2104      	movs	r1, #4
 801bd14:	f00b feaf 	bl	8027a76 <_ZdlPvj>
 801bd18:	4620      	mov	r0, r4
 801bd1a:	bd10      	pop	{r4, pc}

0801bd1c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801bd1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd20:	b08f      	sub	sp, #60	@ 0x3c
 801bd22:	4616      	mov	r6, r2
 801bd24:	4682      	mov	sl, r0
 801bd26:	460d      	mov	r5, r1
 801bd28:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801bd2c:	9205      	str	r2, [sp, #20]
 801bd2e:	2a00      	cmp	r2, #0
 801bd30:	f000 82b7 	beq.w	801c2a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801bd34:	6830      	ldr	r0, [r6, #0]
 801bd36:	ac0a      	add	r4, sp, #40	@ 0x28
 801bd38:	6871      	ldr	r1, [r6, #4]
 801bd3a:	c403      	stmia	r4!, {r0, r1}
 801bd3c:	6818      	ldr	r0, [r3, #0]
 801bd3e:	ac0c      	add	r4, sp, #48	@ 0x30
 801bd40:	6859      	ldr	r1, [r3, #4]
 801bd42:	c403      	stmia	r4!, {r0, r1}
 801bd44:	a80a      	add	r0, sp, #40	@ 0x28
 801bd46:	f7fa f95b 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd4a:	4631      	mov	r1, r6
 801bd4c:	a80c      	add	r0, sp, #48	@ 0x30
 801bd4e:	f7fa f97f 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd52:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801bd56:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801bd5a:	bfdb      	ittet	le
 801bd5c:	b293      	uxthle	r3, r2
 801bd5e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801bd62:	2301      	movgt	r3, #1
 801bd64:	fb91 f3f3 	sdivle	r3, r1, r3
 801bd68:	9300      	str	r3, [sp, #0]
 801bd6a:	f105 0308 	add.w	r3, r5, #8
 801bd6e:	9900      	ldr	r1, [sp, #0]
 801bd70:	9306      	str	r3, [sp, #24]
 801bd72:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801bd76:	440b      	add	r3, r1
 801bd78:	3b01      	subs	r3, #1
 801bd7a:	fb93 f3f1 	sdiv	r3, r3, r1
 801bd7e:	3b01      	subs	r3, #1
 801bd80:	9906      	ldr	r1, [sp, #24]
 801bd82:	b29b      	uxth	r3, r3
 801bd84:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801bd88:	9900      	ldr	r1, [sp, #0]
 801bd8a:	9307      	str	r3, [sp, #28]
 801bd8c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801bd90:	fb93 f0f1 	sdiv	r0, r3, r1
 801bd94:	b284      	uxth	r4, r0
 801bd96:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801bd9a:	9402      	str	r4, [sp, #8]
 801bd9c:	9d02      	ldr	r5, [sp, #8]
 801bd9e:	9c00      	ldr	r4, [sp, #0]
 801bda0:	fb05 3414 	mls	r4, r5, r4, r3
 801bda4:	fb14 f402 	smulbb	r4, r4, r2
 801bda8:	440c      	add	r4, r1
 801bdaa:	b2a4      	uxth	r4, r4
 801bdac:	2d00      	cmp	r5, #0
 801bdae:	d06c      	beq.n	801be8a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801bdb0:	1e6a      	subs	r2, r5, #1
 801bdb2:	9806      	ldr	r0, [sp, #24]
 801bdb4:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801bdb8:	9a07      	ldr	r2, [sp, #28]
 801bdba:	ba36      	rev	r6, r6
 801bdbc:	4416      	add	r6, r2
 801bdbe:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801bdc2:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801bdc6:	4411      	add	r1, r2
 801bdc8:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801bdcc:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 801c0fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801bdd0:	4413      	add	r3, r2
 801bdd2:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801bdd6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801bdda:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801bdde:	9301      	str	r3, [sp, #4]
 801bde0:	4bc4      	ldr	r3, [pc, #784]	@ (801c0f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801bde2:	6818      	ldr	r0, [r3, #0]
 801bde4:	6803      	ldr	r3, [r0, #0]
 801bde6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bde8:	4798      	blx	r3
 801bdea:	4bc3      	ldr	r3, [pc, #780]	@ (801c0f8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801bdec:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801bdf0:	881b      	ldrh	r3, [r3, #0]
 801bdf2:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801bdf6:	fb03 2808 	mla	r8, r3, r8, r2
 801bdfa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801bdfe:	436b      	muls	r3, r5
 801be00:	2500      	movs	r5, #0
 801be02:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801be06:	4629      	mov	r1, r5
 801be08:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801be0c:	9309      	str	r3, [sp, #36]	@ 0x24
 801be0e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801be12:	fb94 f3f3 	sdiv	r3, r4, r3
 801be16:	9304      	str	r3, [sp, #16]
 801be18:	f10a 0304 	add.w	r3, sl, #4
 801be1c:	4618      	mov	r0, r3
 801be1e:	9308      	str	r3, [sp, #32]
 801be20:	f00c f85f 	bl	8027ee2 <memset>
 801be24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801be26:	4543      	cmp	r3, r8
 801be28:	f240 8236 	bls.w	801c298 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801be2c:	2203      	movs	r2, #3
 801be2e:	2107      	movs	r1, #7
 801be30:	200b      	movs	r0, #11
 801be32:	2c00      	cmp	r4, #0
 801be34:	f000 8131 	beq.w	801c09a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801be38:	7833      	ldrb	r3, [r6, #0]
 801be3a:	b2db      	uxtb	r3, r3
 801be3c:	2bfe      	cmp	r3, #254	@ 0xfe
 801be3e:	d126      	bne.n	801be8e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801be40:	f896 e001 	ldrb.w	lr, [r6, #1]
 801be44:	3c01      	subs	r4, #1
 801be46:	f896 c002 	ldrb.w	ip, [r6, #2]
 801be4a:	1d37      	adds	r7, r6, #4
 801be4c:	fa5f fe8e 	uxtb.w	lr, lr
 801be50:	f896 b003 	ldrb.w	fp, [r6, #3]
 801be54:	fa5f fc8c 	uxtb.w	ip, ip
 801be58:	f36e 0507 	bfi	r5, lr, #0, #8
 801be5c:	fa5f fb8b 	uxtb.w	fp, fp
 801be60:	b2a4      	uxth	r4, r4
 801be62:	f36c 250f 	bfi	r5, ip, #8, #8
 801be66:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801be6a:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801be6e:	f36b 4517 	bfi	r5, fp, #16, #8
 801be72:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801be76:	0e2b      	lsrs	r3, r5, #24
 801be78:	fb10 c303 	smlabb	r3, r0, r3, ip
 801be7c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801be80:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801be84:	605d      	str	r5, [r3, #4]
 801be86:	463e      	mov	r6, r7
 801be88:	e7d3      	b.n	801be32 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801be8a:	9e07      	ldr	r6, [sp, #28]
 801be8c:	e797      	b.n	801bdbe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801be8e:	2bff      	cmp	r3, #255	@ 0xff
 801be90:	d127      	bne.n	801bee2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801be92:	f896 c001 	ldrb.w	ip, [r6, #1]
 801be96:	3c01      	subs	r4, #1
 801be98:	78b3      	ldrb	r3, [r6, #2]
 801be9a:	1d77      	adds	r7, r6, #5
 801be9c:	fa5f fc8c 	uxtb.w	ip, ip
 801bea0:	f896 e003 	ldrb.w	lr, [r6, #3]
 801bea4:	b2db      	uxtb	r3, r3
 801bea6:	f896 b004 	ldrb.w	fp, [r6, #4]
 801beaa:	f36c 0507 	bfi	r5, ip, #0, #8
 801beae:	fa5f fe8e 	uxtb.w	lr, lr
 801beb2:	fa5f fb8b 	uxtb.w	fp, fp
 801beb6:	f363 250f 	bfi	r5, r3, #8, #8
 801beba:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801bebe:	b2a4      	uxth	r4, r4
 801bec0:	fb12 330e 	smlabb	r3, r2, lr, r3
 801bec4:	f36e 4517 	bfi	r5, lr, #16, #8
 801bec8:	fb11 330c 	smlabb	r3, r1, ip, r3
 801becc:	f36b 651f 	bfi	r5, fp, #24, #8
 801bed0:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801bed4:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801bed8:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801bedc:	f8cb 5004 	str.w	r5, [fp, #4]
 801bee0:	e7d1      	b.n	801be86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801bee2:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801bee6:	f106 0701 	add.w	r7, r6, #1
 801beea:	d107      	bne.n	801befc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801beec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801bef0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801bef4:	685d      	ldr	r5, [r3, #4]
 801bef6:	3c01      	subs	r4, #1
 801bef8:	b2a4      	uxth	r4, r4
 801befa:	e7c4      	b.n	801be86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801befc:	f1bc 0f01 	cmp.w	ip, #1
 801bf00:	d12c      	bne.n	801bf5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801bf02:	f003 0e03 	and.w	lr, r3, #3
 801bf06:	f003 0c0c 	and.w	ip, r3, #12
 801bf0a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801bf0e:	f1ae 0e02 	sub.w	lr, lr, #2
 801bf12:	f1ac 0c08 	sub.w	ip, ip, #8
 801bf16:	3b02      	subs	r3, #2
 801bf18:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801bf1c:	fa5f fe8e 	uxtb.w	lr, lr
 801bf20:	f36e 0507 	bfi	r5, lr, #0, #8
 801bf24:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801bf28:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801bf2c:	f36c 250f 	bfi	r5, ip, #8, #8
 801bf30:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801bf34:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bf38:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801bf3c:	b2db      	uxtb	r3, r3
 801bf3e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801bf42:	f363 4517 	bfi	r5, r3, #16, #8
 801bf46:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801bf4a:	0e2e      	lsrs	r6, r5, #24
 801bf4c:	fb10 c606 	smlabb	r6, r0, r6, ip
 801bf50:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801bf54:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801bf58:	6075      	str	r5, [r6, #4]
 801bf5a:	e7cc      	b.n	801bef6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801bf5c:	f1bc 0f02 	cmp.w	ip, #2
 801bf60:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801bf64:	d12a      	bne.n	801bfbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801bf66:	1cb7      	adds	r7, r6, #2
 801bf68:	7876      	ldrb	r6, [r6, #1]
 801bf6a:	3b20      	subs	r3, #32
 801bf6c:	b2f6      	uxtb	r6, r6
 801bf6e:	f006 0c0f 	and.w	ip, r6, #15
 801bf72:	1136      	asrs	r6, r6, #4
 801bf74:	f1ac 0c08 	sub.w	ip, ip, #8
 801bf78:	3e08      	subs	r6, #8
 801bf7a:	449c      	add	ip, r3
 801bf7c:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801bf80:	fa5f fc8c 	uxtb.w	ip, ip
 801bf84:	f36c 0507 	bfi	r5, ip, #0, #8
 801bf88:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801bf8c:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801bf90:	4433      	add	r3, r6
 801bf92:	fa5f fe8e 	uxtb.w	lr, lr
 801bf96:	f36e 250f 	bfi	r5, lr, #8, #8
 801bf9a:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801bf9e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801bfa2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801bfa6:	b2db      	uxtb	r3, r3
 801bfa8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801bfac:	f363 4517 	bfi	r5, r3, #16, #8
 801bfb0:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801bfb4:	0e2e      	lsrs	r6, r5, #24
 801bfb6:	fb10 e606 	smlabb	r6, r0, r6, lr
 801bfba:	e7c9      	b.n	801bf50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801bfbc:	1c5e      	adds	r6, r3, #1
 801bfbe:	42a6      	cmp	r6, r4
 801bfc0:	dd4e      	ble.n	801c060 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801bfc2:	1b36      	subs	r6, r6, r4
 801bfc4:	2e00      	cmp	r6, #0
 801bfc6:	dc4e      	bgt.n	801c066 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801bfc8:	f8dd b004 	ldr.w	fp, [sp, #4]
 801bfcc:	2400      	movs	r4, #0
 801bfce:	f1bb 0f00 	cmp.w	fp, #0
 801bfd2:	f340 8122 	ble.w	801c21a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801bfd6:	1c7b      	adds	r3, r7, #1
 801bfd8:	9303      	str	r3, [sp, #12]
 801bfda:	783b      	ldrb	r3, [r7, #0]
 801bfdc:	b2db      	uxtb	r3, r3
 801bfde:	2bfe      	cmp	r3, #254	@ 0xfe
 801bfe0:	d160      	bne.n	801c0a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801bfe2:	7879      	ldrb	r1, [r7, #1]
 801bfe4:	1d3b      	adds	r3, r7, #4
 801bfe6:	78ba      	ldrb	r2, [r7, #2]
 801bfe8:	b2c9      	uxtb	r1, r1
 801bfea:	78f8      	ldrb	r0, [r7, #3]
 801bfec:	b2d2      	uxtb	r2, r2
 801bfee:	9303      	str	r3, [sp, #12]
 801bff0:	f361 0507 	bfi	r5, r1, #0, #8
 801bff4:	b2c0      	uxtb	r0, r0
 801bff6:	2303      	movs	r3, #3
 801bff8:	f362 250f 	bfi	r5, r2, #8, #8
 801bffc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801c000:	fb13 2200 	smlabb	r2, r3, r0, r2
 801c004:	f360 4517 	bfi	r5, r0, #16, #8
 801c008:	2307      	movs	r3, #7
 801c00a:	0e2e      	lsrs	r6, r5, #24
 801c00c:	fb13 2101 	smlabb	r1, r3, r1, r2
 801c010:	230b      	movs	r3, #11
 801c012:	fb13 1306 	smlabb	r3, r3, r6, r1
 801c016:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801c01a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801c01e:	605d      	str	r5, [r3, #4]
 801c020:	2601      	movs	r6, #1
 801c022:	4637      	mov	r7, r6
 801c024:	0e2b      	lsrs	r3, r5, #24
 801c026:	ebab 0b07 	sub.w	fp, fp, r7
 801c02a:	eba6 0607 	sub.w	r6, r6, r7
 801c02e:	f040 80d3 	bne.w	801c1d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801c032:	b18c      	cbz	r4, 801c058 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801c034:	4648      	mov	r0, r9
 801c036:	00a1      	lsls	r1, r4, #2
 801c038:	f7f4 fd4a 	bl	8010ad0 <_ZN8touchgfx5paint9flushLineEPmi>
 801c03c:	9b05      	ldr	r3, [sp, #20]
 801c03e:	4622      	mov	r2, r4
 801c040:	4649      	mov	r1, r9
 801c042:	4640      	mov	r0, r8
 801c044:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c048:	f7f4 fdfa 	bl	8010c40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801c04c:	4b2b      	ldr	r3, [pc, #172]	@ (801c0fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801c04e:	4a2c      	ldr	r2, [pc, #176]	@ (801c100 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801c050:	4599      	cmp	r9, r3
 801c052:	bf08      	it	eq
 801c054:	4613      	moveq	r3, r2
 801c056:	4699      	mov	r9, r3
 801c058:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801c05c:	2400      	movs	r4, #0
 801c05e:	e0da      	b.n	801c216 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801c060:	1ba6      	subs	r6, r4, r6
 801c062:	b2b4      	uxth	r4, r6
 801c064:	e70f      	b.n	801be86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801c066:	9b01      	ldr	r3, [sp, #4]
 801c068:	9a01      	ldr	r2, [sp, #4]
 801c06a:	42b3      	cmp	r3, r6
 801c06c:	bfa8      	it	ge
 801c06e:	4633      	movge	r3, r6
 801c070:	0e2c      	lsrs	r4, r5, #24
 801c072:	eba2 0b03 	sub.w	fp, r2, r3
 801c076:	eba6 0603 	sub.w	r6, r6, r3
 801c07a:	d00b      	beq.n	801c094 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801c07c:	f1a9 0104 	sub.w	r1, r9, #4
 801c080:	461a      	mov	r2, r3
 801c082:	2a00      	cmp	r2, #0
 801c084:	dc02      	bgt.n	801c08c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801c086:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c08a:	e7a0      	b.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801c08c:	f841 5f04 	str.w	r5, [r1, #4]!
 801c090:	3a01      	subs	r2, #1
 801c092:	e7f6      	b.n	801c082 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801c094:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801c098:	e799      	b.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801c09a:	4637      	mov	r7, r6
 801c09c:	f8dd b004 	ldr.w	fp, [sp, #4]
 801c0a0:	4626      	mov	r6, r4
 801c0a2:	e794      	b.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801c0a4:	2bff      	cmp	r3, #255	@ 0xff
 801c0a6:	d11d      	bne.n	801c0e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801c0a8:	7878      	ldrb	r0, [r7, #1]
 801c0aa:	1d7b      	adds	r3, r7, #5
 801c0ac:	78ba      	ldrb	r2, [r7, #2]
 801c0ae:	b2c0      	uxtb	r0, r0
 801c0b0:	78fe      	ldrb	r6, [r7, #3]
 801c0b2:	b2d2      	uxtb	r2, r2
 801c0b4:	9303      	str	r3, [sp, #12]
 801c0b6:	f360 0507 	bfi	r5, r0, #0, #8
 801c0ba:	793b      	ldrb	r3, [r7, #4]
 801c0bc:	b2f6      	uxtb	r6, r6
 801c0be:	b2d9      	uxtb	r1, r3
 801c0c0:	f362 250f 	bfi	r5, r2, #8, #8
 801c0c4:	2303      	movs	r3, #3
 801c0c6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801c0ca:	f366 4517 	bfi	r5, r6, #16, #8
 801c0ce:	fb13 2206 	smlabb	r2, r3, r6, r2
 801c0d2:	2307      	movs	r3, #7
 801c0d4:	f361 651f 	bfi	r5, r1, #24, #8
 801c0d8:	fb13 2000 	smlabb	r0, r3, r0, r2
 801c0dc:	230b      	movs	r3, #11
 801c0de:	fb13 0301 	smlabb	r3, r3, r1, r0
 801c0e2:	e798      	b.n	801c016 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801c0e4:	119e      	asrs	r6, r3, #6
 801c0e6:	d10d      	bne.n	801c104 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801c0e8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801c0ec:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801c0f0:	685d      	ldr	r5, [r3, #4]
 801c0f2:	e795      	b.n	801c020 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801c0f4:	20003984 	.word	0x20003984
 801c0f8:	2000397e 	.word	0x2000397e
 801c0fc:	20000280 	.word	0x20000280
 801c100:	20000380 	.word	0x20000380
 801c104:	2e01      	cmp	r6, #1
 801c106:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801c10a:	d12b      	bne.n	801c164 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801c10c:	f003 0003 	and.w	r0, r3, #3
 801c110:	f003 020c 	and.w	r2, r3, #12
 801c114:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801c118:	3802      	subs	r0, #2
 801c11a:	3a08      	subs	r2, #8
 801c11c:	1e9f      	subs	r7, r3, #2
 801c11e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801c122:	b2c0      	uxtb	r0, r0
 801c124:	f360 0507 	bfi	r5, r0, #0, #8
 801c128:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801c12c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801c130:	f362 250f 	bfi	r5, r2, #8, #8
 801c134:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801c138:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801c13c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801c140:	2703      	movs	r7, #3
 801c142:	b2db      	uxtb	r3, r3
 801c144:	fb17 2203 	smlabb	r2, r7, r3, r2
 801c148:	2707      	movs	r7, #7
 801c14a:	f363 4517 	bfi	r5, r3, #16, #8
 801c14e:	230b      	movs	r3, #11
 801c150:	fb17 2000 	smlabb	r0, r7, r0, r2
 801c154:	fb13 0101 	smlabb	r1, r3, r1, r0
 801c158:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801c15c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801c160:	604d      	str	r5, [r1, #4]
 801c162:	e75e      	b.n	801c022 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801c164:	2e02      	cmp	r6, #2
 801c166:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801c16a:	d12f      	bne.n	801c1cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801c16c:	7878      	ldrb	r0, [r7, #1]
 801c16e:	1cba      	adds	r2, r7, #2
 801c170:	3b20      	subs	r3, #32
 801c172:	b2c0      	uxtb	r0, r0
 801c174:	9203      	str	r2, [sp, #12]
 801c176:	f000 020f 	and.w	r2, r0, #15
 801c17a:	1100      	asrs	r0, r0, #4
 801c17c:	3a08      	subs	r2, #8
 801c17e:	3808      	subs	r0, #8
 801c180:	441a      	add	r2, r3
 801c182:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801c186:	b2d2      	uxtb	r2, r2
 801c188:	f362 0507 	bfi	r5, r2, #0, #8
 801c18c:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801c190:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801c194:	4403      	add	r3, r0
 801c196:	b2f6      	uxtb	r6, r6
 801c198:	f366 250f 	bfi	r5, r6, #8, #8
 801c19c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801c1a0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801c1a4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801c1a8:	2003      	movs	r0, #3
 801c1aa:	b2db      	uxtb	r3, r3
 801c1ac:	fb10 6603 	smlabb	r6, r0, r3, r6
 801c1b0:	2007      	movs	r0, #7
 801c1b2:	f363 4517 	bfi	r5, r3, #16, #8
 801c1b6:	230b      	movs	r3, #11
 801c1b8:	fb10 6202 	smlabb	r2, r0, r2, r6
 801c1bc:	fb13 2101 	smlabb	r1, r3, r1, r2
 801c1c0:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801c1c4:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801c1c8:	604d      	str	r5, [r1, #4]
 801c1ca:	e729      	b.n	801c020 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801c1cc:	1c5e      	adds	r6, r3, #1
 801c1ce:	465f      	mov	r7, fp
 801c1d0:	45b3      	cmp	fp, r6
 801c1d2:	bfa8      	it	ge
 801c1d4:	4637      	movge	r7, r6
 801c1d6:	e725      	b.n	801c024 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801c1d8:	193b      	adds	r3, r7, r4
 801c1da:	2b40      	cmp	r3, #64	@ 0x40
 801c1dc:	dd13      	ble.n	801c206 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801c1de:	4648      	mov	r0, r9
 801c1e0:	00a1      	lsls	r1, r4, #2
 801c1e2:	f7f4 fc75 	bl	8010ad0 <_ZN8touchgfx5paint9flushLineEPmi>
 801c1e6:	4649      	mov	r1, r9
 801c1e8:	9b05      	ldr	r3, [sp, #20]
 801c1ea:	4622      	mov	r2, r4
 801c1ec:	4640      	mov	r0, r8
 801c1ee:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c1f2:	f7f4 fd25 	bl	8010c40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801c1f6:	4b2c      	ldr	r3, [pc, #176]	@ (801c2a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801c1f8:	2400      	movs	r4, #0
 801c1fa:	4599      	cmp	r9, r3
 801c1fc:	bf0c      	ite	eq
 801c1fe:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 801c2b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801c202:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 801c2a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801c206:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801c20a:	463b      	mov	r3, r7
 801c20c:	3b01      	subs	r3, #1
 801c20e:	f842 5b04 	str.w	r5, [r2], #4
 801c212:	d1fb      	bne.n	801c20c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801c214:	443c      	add	r4, r7
 801c216:	9f03      	ldr	r7, [sp, #12]
 801c218:	e6d9      	b.n	801bfce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801c21a:	b15c      	cbz	r4, 801c234 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801c21c:	00a1      	lsls	r1, r4, #2
 801c21e:	4648      	mov	r0, r9
 801c220:	f7f4 fc56 	bl	8010ad0 <_ZN8touchgfx5paint9flushLineEPmi>
 801c224:	4640      	mov	r0, r8
 801c226:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801c22a:	9b05      	ldr	r3, [sp, #20]
 801c22c:	4622      	mov	r2, r4
 801c22e:	4649      	mov	r1, r9
 801c230:	f7f4 fd06 	bl	8010c40 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801c234:	4b1d      	ldr	r3, [pc, #116]	@ (801c2ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801c236:	9a01      	ldr	r2, [sp, #4]
 801c238:	881b      	ldrh	r3, [r3, #0]
 801c23a:	1a9b      	subs	r3, r3, r2
 801c23c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801c240:	9b04      	ldr	r3, [sp, #16]
 801c242:	3301      	adds	r3, #1
 801c244:	9304      	str	r3, [sp, #16]
 801c246:	9a04      	ldr	r2, [sp, #16]
 801c248:	9b00      	ldr	r3, [sp, #0]
 801c24a:	4293      	cmp	r3, r2
 801c24c:	d11d      	bne.n	801c28a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801c24e:	9b02      	ldr	r3, [sp, #8]
 801c250:	2500      	movs	r5, #0
 801c252:	9a02      	ldr	r2, [sp, #8]
 801c254:	f103 0b01 	add.w	fp, r3, #1
 801c258:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801c25c:	9b06      	ldr	r3, [sp, #24]
 801c25e:	4629      	mov	r1, r5
 801c260:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801c264:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801c268:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801c26c:	1ba4      	subs	r4, r4, r6
 801c26e:	9b07      	ldr	r3, [sp, #28]
 801c270:	ba3f      	rev	r7, r7
 801c272:	9808      	ldr	r0, [sp, #32]
 801c274:	b2a4      	uxth	r4, r4
 801c276:	441f      	add	r7, r3
 801c278:	f00b fe33 	bl	8027ee2 <memset>
 801c27c:	f8cd b008 	str.w	fp, [sp, #8]
 801c280:	9504      	str	r5, [sp, #16]
 801c282:	f7f4 fc0d 	bl	8010aa0 <_ZN8touchgfx5paint8tearDownEv>
 801c286:	463e      	mov	r6, r7
 801c288:	e5cc      	b.n	801be24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801c28a:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801c28e:	9b01      	ldr	r3, [sp, #4]
 801c290:	1ae4      	subs	r4, r4, r3
 801c292:	1ba4      	subs	r4, r4, r6
 801c294:	b2a4      	uxth	r4, r4
 801c296:	e7f4      	b.n	801c282 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801c298:	4b05      	ldr	r3, [pc, #20]	@ (801c2b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801c29a:	6818      	ldr	r0, [r3, #0]
 801c29c:	6803      	ldr	r3, [r0, #0]
 801c29e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c2a0:	4798      	blx	r3
 801c2a2:	b00f      	add	sp, #60	@ 0x3c
 801c2a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c2a8:	20000280 	.word	0x20000280
 801c2ac:	2000397e 	.word	0x2000397e
 801c2b0:	20003984 	.word	0x20003984
 801c2b4:	20000380 	.word	0x20000380

0801c2b8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c2bc:	b08f      	sub	sp, #60	@ 0x3c
 801c2be:	461c      	mov	r4, r3
 801c2c0:	9205      	str	r2, [sp, #20]
 801c2c2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801c2c6:	9100      	str	r1, [sp, #0]
 801c2c8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801c2ca:	9201      	str	r2, [sp, #4]
 801c2cc:	2a00      	cmp	r2, #0
 801c2ce:	f000 8116 	beq.w	801c4fe <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 801c2d2:	6820      	ldr	r0, [r4, #0]
 801c2d4:	aa0a      	add	r2, sp, #40	@ 0x28
 801c2d6:	6861      	ldr	r1, [r4, #4]
 801c2d8:	c203      	stmia	r2!, {r0, r1}
 801c2da:	6818      	ldr	r0, [r3, #0]
 801c2dc:	aa0c      	add	r2, sp, #48	@ 0x30
 801c2de:	6859      	ldr	r1, [r3, #4]
 801c2e0:	c203      	stmia	r2!, {r0, r1}
 801c2e2:	a80a      	add	r0, sp, #40	@ 0x28
 801c2e4:	f7f9 fe8c 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c2e8:	4621      	mov	r1, r4
 801c2ea:	a80c      	add	r0, sp, #48	@ 0x30
 801c2ec:	f7f9 feb0 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c2f0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801c2f4:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801c2f8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801c2fc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801c300:	bfdb      	ittet	le
 801c302:	b2b3      	uxthle	r3, r6
 801c304:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801c308:	2301      	movgt	r3, #1
 801c30a:	fb92 f3f3 	sdivle	r3, r2, r3
 801c30e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801c312:	441d      	add	r5, r3
 801c314:	fb92 f1f3 	sdiv	r1, r2, r3
 801c318:	fa1f fc81 	uxth.w	ip, r1
 801c31c:	3d01      	subs	r5, #1
 801c31e:	fb0c 2413 	mls	r4, ip, r3, r2
 801c322:	4661      	mov	r1, ip
 801c324:	fb14 f406 	smulbb	r4, r4, r6
 801c328:	4404      	add	r4, r0
 801c32a:	fb95 f5f3 	sdiv	r5, r5, r3
 801c32e:	b2a4      	uxth	r4, r4
 801c330:	b131      	cbz	r1, 801c340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801c332:	9b05      	ldr	r3, [sp, #20]
 801c334:	9900      	ldr	r1, [sp, #0]
 801c336:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801c33a:	ba1b      	rev	r3, r3
 801c33c:	4419      	add	r1, r3
 801c33e:	9100      	str	r1, [sp, #0]
 801c340:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c344:	b2ad      	uxth	r5, r5
 801c346:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801c34a:	4418      	add	r0, r3
 801c34c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c350:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801c354:	00ad      	lsls	r5, r5, #2
 801c356:	441a      	add	r2, r3
 801c358:	4b6a      	ldr	r3, [pc, #424]	@ (801c504 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c35a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801c35e:	6818      	ldr	r0, [r3, #0]
 801c360:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801c364:	6803      	ldr	r3, [r0, #0]
 801c366:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c368:	4798      	blx	r3
 801c36a:	4967      	ldr	r1, [pc, #412]	@ (801c508 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801c36c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801c370:	2c00      	cmp	r4, #0
 801c372:	880b      	ldrh	r3, [r1, #0]
 801c374:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801c378:	bf0c      	ite	eq
 801c37a:	46c6      	moveq	lr, r8
 801c37c:	f04f 0e00 	movne.w	lr, #0
 801c380:	9109      	str	r1, [sp, #36]	@ 0x24
 801c382:	fb03 c202 	mla	r2, r3, r2, ip
 801c386:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c38a:	4373      	muls	r3, r6
 801c38c:	fa1f fe8e 	uxth.w	lr, lr
 801c390:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c394:	9103      	str	r1, [sp, #12]
 801c396:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c39a:	9306      	str	r3, [sp, #24]
 801c39c:	1d2b      	adds	r3, r5, #4
 801c39e:	9307      	str	r3, [sp, #28]
 801c3a0:	9b01      	ldr	r3, [sp, #4]
 801c3a2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801c3a6:	2300      	movs	r3, #0
 801c3a8:	b292      	uxth	r2, r2
 801c3aa:	9302      	str	r3, [sp, #8]
 801c3ac:	9204      	str	r2, [sp, #16]
 801c3ae:	9a06      	ldr	r2, [sp, #24]
 801c3b0:	4282      	cmp	r2, r0
 801c3b2:	f240 809f 	bls.w	801c4f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 801c3b6:	b963      	cbnz	r3, 801c3d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801c3b8:	9b00      	ldr	r3, [sp, #0]
 801c3ba:	781a      	ldrb	r2, [r3, #0]
 801c3bc:	0993      	lsrs	r3, r2, #6
 801c3be:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801c3c2:	9202      	str	r2, [sp, #8]
 801c3c4:	1e5a      	subs	r2, r3, #1
 801c3c6:	2a02      	cmp	r2, #2
 801c3c8:	d815      	bhi.n	801c3f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801c3ca:	9a00      	ldr	r2, [sp, #0]
 801c3cc:	b29b      	uxth	r3, r3
 801c3ce:	3201      	adds	r2, #1
 801c3d0:	9200      	str	r2, [sp, #0]
 801c3d2:	b1b4      	cbz	r4, 801c402 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 801c3d4:	429c      	cmp	r4, r3
 801c3d6:	bf91      	iteee	ls
 801c3d8:	1b1c      	subls	r4, r3, r4
 801c3da:	1ae4      	subhi	r4, r4, r3
 801c3dc:	4671      	movhi	r1, lr
 801c3de:	f04f 0a00 	movhi.w	sl, #0
 801c3e2:	bf9b      	ittet	ls
 801c3e4:	fa1f fa84 	uxthls.w	sl, r4
 801c3e8:	2400      	movls	r4, #0
 801c3ea:	b2a4      	uxthhi	r4, r4
 801c3ec:	fa1f f188 	uxthls.w	r1, r8
 801c3f0:	4653      	mov	r3, sl
 801c3f2:	468e      	mov	lr, r1
 801c3f4:	e7db      	b.n	801c3ae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 801c3f6:	9a00      	ldr	r2, [sp, #0]
 801c3f8:	9b00      	ldr	r3, [sp, #0]
 801c3fa:	3202      	adds	r2, #2
 801c3fc:	785b      	ldrb	r3, [r3, #1]
 801c3fe:	9200      	str	r2, [sp, #0]
 801c400:	e7e7      	b.n	801c3d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801c402:	2202      	movs	r2, #2
 801c404:	9907      	ldr	r1, [sp, #28]
 801c406:	4573      	cmp	r3, lr
 801c408:	4615      	mov	r5, r2
 801c40a:	9a02      	ldr	r2, [sp, #8]
 801c40c:	bf24      	itt	cs
 801c40e:	eba3 0a0e 	subcs.w	sl, r3, lr
 801c412:	46f1      	movcs	r9, lr
 801c414:	fb15 1202 	smlabb	r2, r5, r2, r1
 801c418:	9905      	ldr	r1, [sp, #20]
 801c41a:	bf34      	ite	cc
 801c41c:	4699      	movcc	r9, r3
 801c41e:	fa1f fa8a 	uxthcs.w	sl, sl
 801c422:	f831 c002 	ldrh.w	ip, [r1, r2]
 801c426:	bf38      	it	cc
 801c428:	ebae 0103 	subcc.w	r1, lr, r3
 801c42c:	9a01      	ldr	r2, [sp, #4]
 801c42e:	bf2e      	itee	cs
 801c430:	4621      	movcs	r1, r4
 801c432:	b289      	uxthcc	r1, r1
 801c434:	46a2      	movcc	sl, r4
 801c436:	2aff      	cmp	r2, #255	@ 0xff
 801c438:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c43c:	d105      	bne.n	801c44a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 801c43e:	4481      	add	r9, r0
 801c440:	4581      	cmp	r9, r0
 801c442:	d045      	beq.n	801c4d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801c444:	f820 cb02 	strh.w	ip, [r0], #2
 801c448:	e7fa      	b.n	801c440 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 801c44a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801c44e:	9d03      	ldr	r5, [sp, #12]
 801c450:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801c454:	4481      	add	r9, r0
 801c456:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c45a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801c45e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801c462:	fa5f fc8c 	uxtb.w	ip, ip
 801c466:	436a      	muls	r2, r5
 801c468:	fb0b fb05 	mul.w	fp, fp, r5
 801c46c:	fb0c fc05 	mul.w	ip, ip, r5
 801c470:	9208      	str	r2, [sp, #32]
 801c472:	4581      	cmp	r9, r0
 801c474:	d02c      	beq.n	801c4d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801c476:	8802      	ldrh	r2, [r0, #0]
 801c478:	9d04      	ldr	r5, [sp, #16]
 801c47a:	1216      	asrs	r6, r2, #8
 801c47c:	9f04      	ldr	r7, [sp, #16]
 801c47e:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c482:	fb16 f605 	smulbb	r6, r6, r5
 801c486:	9d08      	ldr	r5, [sp, #32]
 801c488:	442e      	add	r6, r5
 801c48a:	10d5      	asrs	r5, r2, #3
 801c48c:	00d2      	lsls	r2, r2, #3
 801c48e:	b2b6      	uxth	r6, r6
 801c490:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c494:	b2d2      	uxtb	r2, r2
 801c496:	fb15 f507 	smulbb	r5, r5, r7
 801c49a:	fb12 f207 	smulbb	r2, r2, r7
 801c49e:	1c77      	adds	r7, r6, #1
 801c4a0:	445d      	add	r5, fp
 801c4a2:	4462      	add	r2, ip
 801c4a4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801c4a8:	b2ad      	uxth	r5, r5
 801c4aa:	b292      	uxth	r2, r2
 801c4ac:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c4b0:	1c57      	adds	r7, r2, #1
 801c4b2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801c4b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c4ba:	4316      	orrs	r6, r2
 801c4bc:	1c6a      	adds	r2, r5, #1
 801c4be:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801c4c2:	096d      	lsrs	r5, r5, #5
 801c4c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c4c8:	432e      	orrs	r6, r5
 801c4ca:	f820 6b02 	strh.w	r6, [r0], #2
 801c4ce:	e7d0      	b.n	801c472 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 801c4d0:	4573      	cmp	r3, lr
 801c4d2:	d38d      	bcc.n	801c3f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801c4d4:	fa1f f188 	uxth.w	r1, r8
 801c4d8:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801c4dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801c4de:	1a64      	subs	r4, r4, r1
 801c4e0:	881b      	ldrh	r3, [r3, #0]
 801c4e2:	b2a4      	uxth	r4, r4
 801c4e4:	eba3 0308 	sub.w	r3, r3, r8
 801c4e8:	2c00      	cmp	r4, #0
 801c4ea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c4ee:	bf18      	it	ne
 801c4f0:	2100      	movne	r1, #0
 801c4f2:	e77d      	b.n	801c3f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801c4f4:	4b03      	ldr	r3, [pc, #12]	@ (801c504 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801c4f6:	6818      	ldr	r0, [r3, #0]
 801c4f8:	6803      	ldr	r3, [r0, #0]
 801c4fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c4fc:	4798      	blx	r3
 801c4fe:	b00f      	add	sp, #60	@ 0x3c
 801c500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c504:	20003984 	.word	0x20003984
 801c508:	2000397e 	.word	0x2000397e

0801c50c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801c50c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c510:	b09f      	sub	sp, #124	@ 0x7c
 801c512:	461d      	mov	r5, r3
 801c514:	4604      	mov	r4, r0
 801c516:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c518:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801c51c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801c520:	9209      	str	r2, [sp, #36]	@ 0x24
 801c522:	2a00      	cmp	r2, #0
 801c524:	f000 81ed 	beq.w	801c902 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 801c528:	6828      	ldr	r0, [r5, #0]
 801c52a:	aa1a      	add	r2, sp, #104	@ 0x68
 801c52c:	6869      	ldr	r1, [r5, #4]
 801c52e:	c203      	stmia	r2!, {r0, r1}
 801c530:	6818      	ldr	r0, [r3, #0]
 801c532:	aa1c      	add	r2, sp, #112	@ 0x70
 801c534:	6859      	ldr	r1, [r3, #4]
 801c536:	c203      	stmia	r2!, {r0, r1}
 801c538:	a81a      	add	r0, sp, #104	@ 0x68
 801c53a:	f7f9 fd61 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c53e:	4629      	mov	r1, r5
 801c540:	a81c      	add	r0, sp, #112	@ 0x70
 801c542:	f7f9 fd85 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c546:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801c54a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801c54e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c552:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801c556:	bfdb      	ittet	le
 801c558:	b29a      	uxthle	r2, r3
 801c55a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c55e:	2201      	movgt	r2, #1
 801c560:	fb91 f2f2 	sdivle	r2, r1, r2
 801c564:	9202      	str	r2, [sp, #8]
 801c566:	9802      	ldr	r0, [sp, #8]
 801c568:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801c56c:	9902      	ldr	r1, [sp, #8]
 801c56e:	fb92 f0f0 	sdiv	r0, r2, r0
 801c572:	b280      	uxth	r0, r0
 801c574:	4488      	add	r8, r1
 801c576:	9010      	str	r0, [sp, #64]	@ 0x40
 801c578:	f108 38ff 	add.w	r8, r8, #4294967295
 801c57c:	9802      	ldr	r0, [sp, #8]
 801c57e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c580:	fb05 2510 	mls	r5, r5, r0, r2
 801c584:	fb98 f8f1 	sdiv	r8, r8, r1
 801c588:	fb15 f503 	smulbb	r5, r5, r3
 801c58c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801c590:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801c594:	f108 0801 	add.w	r8, r8, #1
 801c598:	440d      	add	r5, r1
 801c59a:	4419      	add	r1, r3
 801c59c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801c5a0:	fa1f f888 	uxth.w	r8, r8
 801c5a4:	441a      	add	r2, r3
 801c5a6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801c5aa:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801c5ae:	b2ad      	uxth	r5, r5
 801c5b0:	9304      	str	r3, [sp, #16]
 801c5b2:	4b94      	ldr	r3, [pc, #592]	@ (801c804 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c5b4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801c5b8:	6818      	ldr	r0, [r3, #0]
 801c5ba:	6803      	ldr	r3, [r0, #0]
 801c5bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c5be:	4798      	blx	r3
 801c5c0:	4b91      	ldr	r3, [pc, #580]	@ (801c808 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c5c2:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801c5c6:	2d00      	cmp	r5, #0
 801c5c8:	881a      	ldrh	r2, [r3, #0]
 801c5ca:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801c5ce:	fb02 f606 	mul.w	r6, r2, r6
 801c5d2:	fb02 7101 	mla	r1, r2, r1, r7
 801c5d6:	9318      	str	r3, [sp, #96]	@ 0x60
 801c5d8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c5dc:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801c5e0:	f04f 0100 	mov.w	r1, #0
 801c5e4:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801c5e8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c5ea:	4b88      	ldr	r3, [pc, #544]	@ (801c80c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 801c5ec:	920a      	str	r2, [sp, #40]	@ 0x28
 801c5ee:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c5f0:	eba3 0304 	sub.w	r3, r3, r4
 801c5f4:	910d      	str	r1, [sp, #52]	@ 0x34
 801c5f6:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801c5fa:	9319      	str	r3, [sp, #100]	@ 0x64
 801c5fc:	f108 0204 	add.w	r2, r8, #4
 801c600:	9211      	str	r2, [sp, #68]	@ 0x44
 801c602:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c604:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801c608:	9215      	str	r2, [sp, #84]	@ 0x54
 801c60a:	9a04      	ldr	r2, [sp, #16]
 801c60c:	bf18      	it	ne
 801c60e:	2200      	movne	r2, #0
 801c610:	b292      	uxth	r2, r2
 801c612:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801c614:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c616:	fa11 f383 	uxtah	r3, r1, r3
 801c61a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801c61c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c620:	3304      	adds	r3, #4
 801c622:	9306      	str	r3, [sp, #24]
 801c624:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c626:	4283      	cmp	r3, r0
 801c628:	f240 8166 	bls.w	801c8f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 801c62c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801c630:	f04f 0a01 	mov.w	sl, #1
 801c634:	9902      	ldr	r1, [sp, #8]
 801c636:	9e06      	ldr	r6, [sp, #24]
 801c638:	46d3      	mov	fp, sl
 801c63a:	4657      	mov	r7, sl
 801c63c:	7836      	ldrb	r6, [r6, #0]
 801c63e:	fbb5 f3f3 	udiv	r3, r5, r3
 801c642:	1acb      	subs	r3, r1, r3
 801c644:	9612      	str	r6, [sp, #72]	@ 0x48
 801c646:	3601      	adds	r6, #1
 801c648:	b29b      	uxth	r3, r3
 801c64a:	9605      	str	r6, [sp, #20]
 801c64c:	9316      	str	r3, [sp, #88]	@ 0x58
 801c64e:	9b06      	ldr	r3, [sp, #24]
 801c650:	7859      	ldrb	r1, [r3, #1]
 801c652:	789b      	ldrb	r3, [r3, #2]
 801c654:	021b      	lsls	r3, r3, #8
 801c656:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801c65a:	9906      	ldr	r1, [sp, #24]
 801c65c:	78c9      	ldrb	r1, [r1, #3]
 801c65e:	430b      	orrs	r3, r1
 801c660:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801c662:	4419      	add	r1, r3
 801c664:	1c4e      	adds	r6, r1, #1
 801c666:	7849      	ldrb	r1, [r1, #1]
 801c668:	9603      	str	r6, [sp, #12]
 801c66a:	0209      	lsls	r1, r1, #8
 801c66c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801c66e:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801c672:	5cf3      	ldrb	r3, [r6, r3]
 801c674:	4319      	orrs	r1, r3
 801c676:	b28b      	uxth	r3, r1
 801c678:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801c67c:	930c      	str	r3, [sp, #48]	@ 0x30
 801c67e:	2300      	movs	r3, #0
 801c680:	9307      	str	r3, [sp, #28]
 801c682:	469c      	mov	ip, r3
 801c684:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801c688:	930e      	str	r3, [sp, #56]	@ 0x38
 801c68a:	2d00      	cmp	r5, #0
 801c68c:	d07e      	beq.n	801c78c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 801c68e:	42af      	cmp	r7, r5
 801c690:	d26e      	bcs.n	801c770 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801c692:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801c694:	1bed      	subs	r5, r5, r7
 801c696:	9201      	str	r2, [sp, #4]
 801c698:	4283      	cmp	r3, r0
 801c69a:	b2ad      	uxth	r5, r5
 801c69c:	d802      	bhi.n	801c6a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801c69e:	e073      	b.n	801c788 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801c6a0:	2b00      	cmp	r3, #0
 801c6a2:	d15f      	bne.n	801c764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801c6a4:	9b03      	ldr	r3, [sp, #12]
 801c6a6:	f1cb 0207 	rsb	r2, fp, #7
 801c6aa:	785b      	ldrb	r3, [r3, #1]
 801c6ac:	4093      	lsls	r3, r2
 801c6ae:	005b      	lsls	r3, r3, #1
 801c6b0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801c6b4:	9b03      	ldr	r3, [sp, #12]
 801c6b6:	781b      	ldrb	r3, [r3, #0]
 801c6b8:	fa43 f30b 	asr.w	r3, r3, fp
 801c6bc:	b2db      	uxtb	r3, r3
 801c6be:	4313      	orrs	r3, r2
 801c6c0:	f10b 0201 	add.w	r2, fp, #1
 801c6c4:	fa5f fb82 	uxtb.w	fp, r2
 801c6c8:	9a03      	ldr	r2, [sp, #12]
 801c6ca:	b29f      	uxth	r7, r3
 801c6cc:	f1bb 0f08 	cmp.w	fp, #8
 801c6d0:	bf13      	iteet	ne
 801c6d2:	3201      	addne	r2, #1
 801c6d4:	3202      	addeq	r2, #2
 801c6d6:	f04f 0b00 	moveq.w	fp, #0
 801c6da:	9203      	strne	r2, [sp, #12]
 801c6dc:	bf08      	it	eq
 801c6de:	9203      	streq	r2, [sp, #12]
 801c6e0:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801c6e2:	42ba      	cmp	r2, r7
 801c6e4:	d309      	bcc.n	801c6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801c6e6:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801c6ea:	2301      	movs	r3, #1
 801c6ec:	9a05      	ldr	r2, [sp, #20]
 801c6ee:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801c6f2:	d30e      	bcc.n	801c712 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801c6f4:	469a      	mov	sl, r3
 801c6f6:	2600      	movs	r6, #0
 801c6f8:	e035      	b.n	801c766 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801c6fa:	9b05      	ldr	r3, [sp, #20]
 801c6fc:	429f      	cmp	r7, r3
 801c6fe:	d318      	bcc.n	801c732 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 801c700:	eb04 030a 	add.w	r3, r4, sl
 801c704:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801c708:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801c70c:	f10a 0301 	add.w	r3, sl, #1
 801c710:	b29b      	uxth	r3, r3
 801c712:	9a05      	ldr	r2, [sp, #20]
 801c714:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801c718:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c71c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801c71e:	7116      	strb	r6, [r2, #4]
 801c720:	f10a 0601 	add.w	r6, sl, #1
 801c724:	80d1      	strh	r1, [r2, #6]
 801c726:	7156      	strb	r6, [r2, #5]
 801c728:	9a05      	ldr	r2, [sp, #20]
 801c72a:	3201      	adds	r2, #1
 801c72c:	b292      	uxth	r2, r2
 801c72e:	9205      	str	r2, [sp, #20]
 801c730:	e7e0      	b.n	801c6f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801c732:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801c736:	463a      	mov	r2, r7
 801c738:	795b      	ldrb	r3, [r3, #5]
 801c73a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801c73e:	4426      	add	r6, r4
 801c740:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801c742:	eb01 0c06 	add.w	ip, r1, r6
 801c746:	f1bc 0f00 	cmp.w	ip, #0
 801c74a:	dd07      	ble.n	801c75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 801c74c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801c750:	f892 c004 	ldrb.w	ip, [r2, #4]
 801c754:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801c758:	88d2      	ldrh	r2, [r2, #6]
 801c75a:	e7f1      	b.n	801c740 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 801c75c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801c760:	b29b      	uxth	r3, r3
 801c762:	e7c3      	b.n	801c6ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801c764:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801c766:	970c      	str	r7, [sp, #48]	@ 0x30
 801c768:	46b4      	mov	ip, r6
 801c76a:	9a01      	ldr	r2, [sp, #4]
 801c76c:	461f      	mov	r7, r3
 801c76e:	e78c      	b.n	801c68a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 801c770:	1b7b      	subs	r3, r7, r5
 801c772:	eb0c 0605 	add.w	r6, ip, r5
 801c776:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c77a:	b29b      	uxth	r3, r3
 801c77c:	b2b6      	uxth	r6, r6
 801c77e:	9201      	str	r2, [sp, #4]
 801c780:	2500      	movs	r5, #0
 801c782:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c784:	4282      	cmp	r2, r0
 801c786:	d88b      	bhi.n	801c6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801c788:	9a01      	ldr	r2, [sp, #4]
 801c78a:	e74b      	b.n	801c624 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 801c78c:	4297      	cmp	r7, r2
 801c78e:	d332      	bcc.n	801c7f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 801c790:	1abb      	subs	r3, r7, r2
 801c792:	9208      	str	r2, [sp, #32]
 801c794:	9501      	str	r5, [sp, #4]
 801c796:	b29b      	uxth	r3, r3
 801c798:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801c79a:	29ff      	cmp	r1, #255	@ 0xff
 801c79c:	9908      	ldr	r1, [sp, #32]
 801c79e:	eb0c 0601 	add.w	r6, ip, r1
 801c7a2:	d135      	bne.n	801c810 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801c7a4:	f1a0 0e02 	sub.w	lr, r0, #2
 801c7a8:	b2b6      	uxth	r6, r6
 801c7aa:	45b4      	cmp	ip, r6
 801c7ac:	f040 808c 	bne.w	801c8c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 801c7b0:	9908      	ldr	r1, [sp, #32]
 801c7b2:	4297      	cmp	r7, r2
 801c7b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801c7b8:	d3e2      	bcc.n	801c780 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801c7ba:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c7bc:	9904      	ldr	r1, [sp, #16]
 801c7be:	8812      	ldrh	r2, [r2, #0]
 801c7c0:	1a52      	subs	r2, r2, r1
 801c7c2:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801c7c4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c7c8:	9a07      	ldr	r2, [sp, #28]
 801c7ca:	3201      	adds	r2, #1
 801c7cc:	428a      	cmp	r2, r1
 801c7ce:	9207      	str	r2, [sp, #28]
 801c7d0:	f040 8087 	bne.w	801c8e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 801c7d4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801c7d8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801c7dc:	9b04      	ldr	r3, [sp, #16]
 801c7de:	1bed      	subs	r5, r5, r7
 801c7e0:	b2ad      	uxth	r5, r5
 801c7e2:	2d00      	cmp	r5, #0
 801c7e4:	bf08      	it	eq
 801c7e6:	461a      	moveq	r2, r3
 801c7e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c7ea:	bf18      	it	ne
 801c7ec:	2200      	movne	r2, #0
 801c7ee:	3301      	adds	r3, #1
 801c7f0:	b292      	uxth	r2, r2
 801c7f2:	930d      	str	r3, [sp, #52]	@ 0x34
 801c7f4:	e70d      	b.n	801c612 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801c7f6:	1bd1      	subs	r1, r2, r7
 801c7f8:	9708      	str	r7, [sp, #32]
 801c7fa:	b28b      	uxth	r3, r1
 801c7fc:	9301      	str	r3, [sp, #4]
 801c7fe:	462b      	mov	r3, r5
 801c800:	e7ca      	b.n	801c798 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 801c802:	bf00      	nop
 801c804:	20003984 	.word	0x20003984
 801c808:	2000397e 	.word	0x2000397e
 801c80c:	fffff7fb 	.word	0xfffff7fb
 801c810:	b2b6      	uxth	r6, r6
 801c812:	900b      	str	r0, [sp, #44]	@ 0x2c
 801c814:	45b4      	cmp	ip, r6
 801c816:	d0cb      	beq.n	801c7b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 801c818:	f10c 0101 	add.w	r1, ip, #1
 801c81c:	44a4      	add	ip, r4
 801c81e:	9117      	str	r1, [sp, #92]	@ 0x5c
 801c820:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801c824:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801c826:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c82a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801c82c:	ea4f 2825 	mov.w	r8, r5, asr #8
 801c830:	f8b1 c000 	ldrh.w	ip, [r1]
 801c834:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c836:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801c83a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801c83e:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801c842:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801c846:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c84a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801c84e:	fb1e fe01 	smulbb	lr, lr, r1
 801c852:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c854:	fa5f fc8c 	uxtb.w	ip, ip
 801c858:	fb08 e801 	mla	r8, r8, r1, lr
 801c85c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801c860:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c862:	00ed      	lsls	r5, r5, #3
 801c864:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801c868:	fa1f f888 	uxth.w	r8, r8
 801c86c:	fb19 f901 	smulbb	r9, r9, r1
 801c870:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c872:	b2ed      	uxtb	r5, r5
 801c874:	fb0e 9e01 	mla	lr, lr, r1, r9
 801c878:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801c87a:	fb1c fc01 	smulbb	ip, ip, r1
 801c87e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801c880:	fa1f fe8e 	uxth.w	lr, lr
 801c884:	fb05 c501 	mla	r5, r5, r1, ip
 801c888:	f108 0c01 	add.w	ip, r8, #1
 801c88c:	f10e 0901 	add.w	r9, lr, #1
 801c890:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801c892:	b2ad      	uxth	r5, r5
 801c894:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801c898:	f105 0c01 	add.w	ip, r5, #1
 801c89c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801c8a0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801c8a4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801c8a8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c8ac:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801c8b0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c8b4:	ea4c 0808 	orr.w	r8, ip, r8
 801c8b8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801c8bc:	ea48 0809 	orr.w	r8, r8, r9
 801c8c0:	f821 8b02 	strh.w	r8, [r1], #2
 801c8c4:	910b      	str	r1, [sp, #44]	@ 0x2c
 801c8c6:	e7a5      	b.n	801c814 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 801c8c8:	f10c 0801 	add.w	r8, ip, #1
 801c8cc:	44a4      	add	ip, r4
 801c8ce:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801c8d0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801c8d4:	fa1f fc88 	uxth.w	ip, r8
 801c8d8:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801c8dc:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801c8e0:	e763      	b.n	801c7aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801c8e2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c8e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801c8ea:	1aad      	subs	r5, r5, r2
 801c8ec:	b2ad      	uxth	r5, r5
 801c8ee:	2d00      	cmp	r5, #0
 801c8f0:	bf18      	it	ne
 801c8f2:	2200      	movne	r2, #0
 801c8f4:	9201      	str	r2, [sp, #4]
 801c8f6:	e744      	b.n	801c782 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 801c8f8:	4b03      	ldr	r3, [pc, #12]	@ (801c908 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801c8fa:	6818      	ldr	r0, [r3, #0]
 801c8fc:	6803      	ldr	r3, [r0, #0]
 801c8fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c900:	4798      	blx	r3
 801c902:	b01f      	add	sp, #124	@ 0x7c
 801c904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c908:	20003984 	.word	0x20003984

0801c90c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801c90c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c910:	b093      	sub	sp, #76	@ 0x4c
 801c912:	4616      	mov	r6, r2
 801c914:	460d      	mov	r5, r1
 801c916:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801c91a:	9003      	str	r0, [sp, #12]
 801c91c:	9201      	str	r2, [sp, #4]
 801c91e:	2a00      	cmp	r2, #0
 801c920:	f000 8303 	beq.w	801cf2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
 801c924:	6830      	ldr	r0, [r6, #0]
 801c926:	ac0e      	add	r4, sp, #56	@ 0x38
 801c928:	6871      	ldr	r1, [r6, #4]
 801c92a:	c403      	stmia	r4!, {r0, r1}
 801c92c:	6818      	ldr	r0, [r3, #0]
 801c92e:	ac10      	add	r4, sp, #64	@ 0x40
 801c930:	6859      	ldr	r1, [r3, #4]
 801c932:	c403      	stmia	r4!, {r0, r1}
 801c934:	a80e      	add	r0, sp, #56	@ 0x38
 801c936:	f7f9 fb63 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c93a:	4631      	mov	r1, r6
 801c93c:	a810      	add	r0, sp, #64	@ 0x40
 801c93e:	f7f9 fb87 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c942:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801c946:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801c94a:	bfdb      	ittet	le
 801c94c:	b293      	uxthle	r3, r2
 801c94e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c952:	2301      	movgt	r3, #1
 801c954:	fb91 f3f3 	sdivle	r3, r1, r3
 801c958:	9304      	str	r3, [sp, #16]
 801c95a:	f105 0308 	add.w	r3, r5, #8
 801c95e:	9904      	ldr	r1, [sp, #16]
 801c960:	9308      	str	r3, [sp, #32]
 801c962:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801c966:	440b      	add	r3, r1
 801c968:	3b01      	subs	r3, #1
 801c96a:	fb93 f3f1 	sdiv	r3, r3, r1
 801c96e:	3b01      	subs	r3, #1
 801c970:	9908      	ldr	r1, [sp, #32]
 801c972:	b29b      	uxth	r3, r3
 801c974:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801c978:	9904      	ldr	r1, [sp, #16]
 801c97a:	9309      	str	r3, [sp, #36]	@ 0x24
 801c97c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801c980:	fb93 f0f1 	sdiv	r0, r3, r1
 801c984:	b284      	uxth	r4, r0
 801c986:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801c98a:	9405      	str	r4, [sp, #20]
 801c98c:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801c990:	fb05 3914 	mls	r9, r5, r4, r3
 801c994:	fb19 f902 	smulbb	r9, r9, r2
 801c998:	4489      	add	r9, r1
 801c99a:	fa1f f989 	uxth.w	r9, r9
 801c99e:	2d00      	cmp	r5, #0
 801c9a0:	d05d      	beq.n	801ca5e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801c9a2:	1e6a      	subs	r2, r5, #1
 801c9a4:	9808      	ldr	r0, [sp, #32]
 801c9a6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801c9aa:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c9ac:	fa9a fa8a 	rev.w	sl, sl
 801c9b0:	4492      	add	sl, r2
 801c9b2:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801c9b6:	f04f 0600 	mov.w	r6, #0
 801c9ba:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801c9be:	4411      	add	r1, r2
 801c9c0:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801c9c4:	4413      	add	r3, r2
 801c9c6:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801c9ca:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801c9ce:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801c9d2:	9302      	str	r3, [sp, #8]
 801c9d4:	4bca      	ldr	r3, [pc, #808]	@ (801cd00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801c9d6:	6818      	ldr	r0, [r3, #0]
 801c9d8:	6803      	ldr	r3, [r0, #0]
 801c9da:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c9dc:	4798      	blx	r3
 801c9de:	4bc9      	ldr	r3, [pc, #804]	@ (801cd04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801c9e0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801c9e4:	2100      	movs	r1, #0
 801c9e6:	881b      	ldrh	r3, [r3, #0]
 801c9e8:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801c9ec:	fb03 2404 	mla	r4, r3, r4, r2
 801c9f0:	2280      	movs	r2, #128	@ 0x80
 801c9f2:	436b      	muls	r3, r5
 801c9f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801c9f8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801c9fc:	930d      	str	r3, [sp, #52]	@ 0x34
 801c9fe:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801ca02:	fb99 f3f3 	sdiv	r3, r9, r3
 801ca06:	9306      	str	r3, [sp, #24]
 801ca08:	9b01      	ldr	r3, [sp, #4]
 801ca0a:	43db      	mvns	r3, r3
 801ca0c:	b2db      	uxtb	r3, r3
 801ca0e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ca10:	9b03      	ldr	r3, [sp, #12]
 801ca12:	3304      	adds	r3, #4
 801ca14:	4618      	mov	r0, r3
 801ca16:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ca18:	f00b fa63 	bl	8027ee2 <memset>
 801ca1c:	4bba      	ldr	r3, [pc, #744]	@ (801cd08 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801ca1e:	9300      	str	r3, [sp, #0]
 801ca20:	2300      	movs	r3, #0
 801ca22:	9307      	str	r3, [sp, #28]
 801ca24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ca26:	42a3      	cmp	r3, r4
 801ca28:	f240 827a 	bls.w	801cf20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
 801ca2c:	f04f 0e07 	mov.w	lr, #7
 801ca30:	f1b9 0f00 	cmp.w	r9, #0
 801ca34:	f000 8159 	beq.w	801ccea <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801ca38:	f89a 5000 	ldrb.w	r5, [sl]
 801ca3c:	f10a 0701 	add.w	r7, sl, #1
 801ca40:	b2ed      	uxtb	r5, r5
 801ca42:	11aa      	asrs	r2, r5, #6
 801ca44:	d10e      	bne.n	801ca64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801ca46:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801ca4a:	9b03      	ldr	r3, [sp, #12]
 801ca4c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801ca50:	88ae      	ldrh	r6, [r5, #4]
 801ca52:	f109 39ff 	add.w	r9, r9, #4294967295
 801ca56:	fa1f f989 	uxth.w	r9, r9
 801ca5a:	46ba      	mov	sl, r7
 801ca5c:	e7e8      	b.n	801ca30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801ca5e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801ca62:	e7a6      	b.n	801c9b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801ca64:	2a01      	cmp	r2, #1
 801ca66:	d129      	bne.n	801cabc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801ca68:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801ca6c:	f005 0203 	and.w	r2, r5, #3
 801ca70:	2103      	movs	r1, #3
 801ca72:	3b02      	subs	r3, #2
 801ca74:	4413      	add	r3, r2
 801ca76:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801ca7a:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801ca7e:	f003 031f 	and.w	r3, r3, #31
 801ca82:	3a02      	subs	r2, #2
 801ca84:	3d02      	subs	r5, #2
 801ca86:	f363 0604 	bfi	r6, r3, #0, #5
 801ca8a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801ca8e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801ca92:	f362 164a 	bfi	r6, r2, #5, #6
 801ca96:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801ca9a:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801ca9e:	f005 051f 	and.w	r5, r5, #31
 801caa2:	fb11 2205 	smlabb	r2, r1, r5, r2
 801caa6:	f365 26cf 	bfi	r6, r5, #11, #5
 801caaa:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801caae:	9a03      	ldr	r2, [sp, #12]
 801cab0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cab4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cab8:	809e      	strh	r6, [r3, #4]
 801caba:	e7ca      	b.n	801ca52 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801cabc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801cac0:	2a02      	cmp	r2, #2
 801cac2:	b2ab      	uxth	r3, r5
 801cac4:	d136      	bne.n	801cb34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801cac6:	2101      	movs	r1, #1
 801cac8:	fb12 1205 	smlabb	r2, r2, r5, r1
 801cacc:	4492      	add	sl, r2
 801cace:	463a      	mov	r2, r7
 801cad0:	4552      	cmp	r2, sl
 801cad2:	d01c      	beq.n	801cb0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801cad4:	4694      	mov	ip, r2
 801cad6:	f04f 0b03 	mov.w	fp, #3
 801cada:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801cade:	7852      	ldrb	r2, [r2, #1]
 801cae0:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801cae4:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801cae8:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801caec:	f001 021f 	and.w	r2, r1, #31
 801caf0:	460e      	mov	r6, r1
 801caf2:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801caf6:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801cafa:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801cafe:	9a03      	ldr	r2, [sp, #12]
 801cb00:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801cb04:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801cb08:	4662      	mov	r2, ip
 801cb0a:	8081      	strh	r1, [r0, #4]
 801cb0c:	e7e0      	b.n	801cad0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801cb0e:	4599      	cmp	r9, r3
 801cb10:	d20b      	bcs.n	801cb2a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801cb12:	eba5 0509 	sub.w	r5, r5, r9
 801cb16:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801cb1a:	2d00      	cmp	r5, #0
 801cb1c:	f300 8208 	bgt.w	801cf30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
 801cb20:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801cb24:	2301      	movs	r3, #1
 801cb26:	9307      	str	r3, [sp, #28]
 801cb28:	e00c      	b.n	801cb44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801cb2a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801cb2e:	eba9 0903 	sub.w	r9, r9, r3
 801cb32:	e790      	b.n	801ca56 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801cb34:	4599      	cmp	r9, r3
 801cb36:	d2fa      	bcs.n	801cb2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801cb38:	eba5 0509 	sub.w	r5, r5, r9
 801cb3c:	2d00      	cmp	r5, #0
 801cb3e:	dc1d      	bgt.n	801cb7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801cb40:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801cb44:	f04f 0b00 	mov.w	fp, #0
 801cb48:	f1b8 0f00 	cmp.w	r8, #0
 801cb4c:	f340 81a0 	ble.w	801ce90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
 801cb50:	783b      	ldrb	r3, [r7, #0]
 801cb52:	f107 0a01 	add.w	sl, r7, #1
 801cb56:	b2db      	uxtb	r3, r3
 801cb58:	119a      	asrs	r2, r3, #6
 801cb5a:	f040 80d7 	bne.w	801cd0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801cb5e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cb62:	9a03      	ldr	r2, [sp, #12]
 801cb64:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb68:	889e      	ldrh	r6, [r3, #4]
 801cb6a:	9b01      	ldr	r3, [sp, #4]
 801cb6c:	2bff      	cmp	r3, #255	@ 0xff
 801cb6e:	f040 81e8 	bne.w	801cf42 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
 801cb72:	8026      	strh	r6, [r4, #0]
 801cb74:	f108 38ff 	add.w	r8, r8, #4294967295
 801cb78:	3402      	adds	r4, #2
 801cb7a:	e0be      	b.n	801ccfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801cb7c:	9b02      	ldr	r3, [sp, #8]
 801cb7e:	9a02      	ldr	r2, [sp, #8]
 801cb80:	42ab      	cmp	r3, r5
 801cb82:	bfa8      	it	ge
 801cb84:	462b      	movge	r3, r5
 801cb86:	eba2 0803 	sub.w	r8, r2, r3
 801cb8a:	9a07      	ldr	r2, [sp, #28]
 801cb8c:	1aed      	subs	r5, r5, r3
 801cb8e:	2a00      	cmp	r2, #0
 801cb90:	d05a      	beq.n	801cc48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801cb92:	9a01      	ldr	r2, [sp, #4]
 801cb94:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cb98:	2aff      	cmp	r2, #255	@ 0xff
 801cb9a:	d049      	beq.n	801cc30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801cb9c:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801cba0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801cba4:	42a3      	cmp	r3, r4
 801cba6:	f240 80a5 	bls.w	801ccf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801cbaa:	46bc      	mov	ip, r7
 801cbac:	8820      	ldrh	r0, [r4, #0]
 801cbae:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801cbb2:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801cbb6:	7879      	ldrb	r1, [r7, #1]
 801cbb8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801cbbc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801cbc0:	fb1a fa09 	smulbb	sl, sl, r9
 801cbc4:	b212      	sxth	r2, r2
 801cbc6:	b291      	uxth	r1, r2
 801cbc8:	00d2      	lsls	r2, r2, #3
 801cbca:	120f      	asrs	r7, r1, #8
 801cbcc:	10c9      	asrs	r1, r1, #3
 801cbce:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801cbd2:	b2d2      	uxtb	r2, r2
 801cbd4:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801cbd8:	fb07 a70e 	mla	r7, r7, lr, sl
 801cbdc:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801cbe0:	00c0      	lsls	r0, r0, #3
 801cbe2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801cbe6:	b2bf      	uxth	r7, r7
 801cbe8:	b2c0      	uxtb	r0, r0
 801cbea:	fb1a fa09 	smulbb	sl, sl, r9
 801cbee:	fb10 f009 	smulbb	r0, r0, r9
 801cbf2:	fb01 a10e 	mla	r1, r1, lr, sl
 801cbf6:	fb02 020e 	mla	r2, r2, lr, r0
 801cbfa:	1c78      	adds	r0, r7, #1
 801cbfc:	b289      	uxth	r1, r1
 801cbfe:	b292      	uxth	r2, r2
 801cc00:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801cc04:	f101 0a01 	add.w	sl, r1, #1
 801cc08:	1c50      	adds	r0, r2, #1
 801cc0a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801cc0e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801cc12:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801cc16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801cc1a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801cc1e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801cc22:	4307      	orrs	r7, r0
 801cc24:	ea47 070a 	orr.w	r7, r7, sl
 801cc28:	f824 7b02 	strh.w	r7, [r4], #2
 801cc2c:	4667      	mov	r7, ip
 801cc2e:	e7b9      	b.n	801cba4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801cc30:	42a3      	cmp	r3, r4
 801cc32:	d95f      	bls.n	801ccf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801cc34:	463a      	mov	r2, r7
 801cc36:	f812 1b02 	ldrb.w	r1, [r2], #2
 801cc3a:	7878      	ldrb	r0, [r7, #1]
 801cc3c:	4617      	mov	r7, r2
 801cc3e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801cc42:	f824 1b02 	strh.w	r1, [r4], #2
 801cc46:	e7f3      	b.n	801cc30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801cc48:	9901      	ldr	r1, [sp, #4]
 801cc4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801cc4e:	b2b2      	uxth	r2, r6
 801cc50:	29ff      	cmp	r1, #255	@ 0xff
 801cc52:	d044      	beq.n	801ccde <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801cc54:	ea4f 2922 	mov.w	r9, r2, asr #8
 801cc58:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cc5c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801cc60:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801cc64:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801cc68:	4608      	mov	r0, r1
 801cc6a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801cc6e:	fb09 f901 	mul.w	r9, r9, r1
 801cc72:	fb0e fe01 	mul.w	lr, lr, r1
 801cc76:	00d1      	lsls	r1, r2, #3
 801cc78:	b2c9      	uxtb	r1, r1
 801cc7a:	4341      	muls	r1, r0
 801cc7c:	429c      	cmp	r4, r3
 801cc7e:	f4bf af61 	bcs.w	801cb44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801cc82:	8822      	ldrh	r2, [r4, #0]
 801cc84:	1210      	asrs	r0, r2, #8
 801cc86:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801cc8a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801cc8e:	00d2      	lsls	r2, r2, #3
 801cc90:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801cc94:	fb00 900a 	mla	r0, r0, sl, r9
 801cc98:	b2d2      	uxtb	r2, r2
 801cc9a:	fb0c ec0a 	mla	ip, ip, sl, lr
 801cc9e:	b280      	uxth	r0, r0
 801cca0:	fb02 120a 	mla	r2, r2, sl, r1
 801cca4:	fa1f fc8c 	uxth.w	ip, ip
 801cca8:	b292      	uxth	r2, r2
 801ccaa:	f100 0b01 	add.w	fp, r0, #1
 801ccae:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ccb2:	1c50      	adds	r0, r2, #1
 801ccb4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ccb8:	f10c 0201 	add.w	r2, ip, #1
 801ccbc:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801ccc0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ccc4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801ccc8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801cccc:	ea40 0b0b 	orr.w	fp, r0, fp
 801ccd0:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801ccd4:	ea4b 0b0c 	orr.w	fp, fp, ip
 801ccd8:	f824 bb02 	strh.w	fp, [r4], #2
 801ccdc:	e7ce      	b.n	801cc7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801ccde:	429c      	cmp	r4, r3
 801cce0:	f4bf af30 	bcs.w	801cb44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801cce4:	f824 2b02 	strh.w	r2, [r4], #2
 801cce8:	e7f9      	b.n	801ccde <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801ccea:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801ccee:	4657      	mov	r7, sl
 801ccf0:	464d      	mov	r5, r9
 801ccf2:	e727      	b.n	801cb44 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801ccf4:	2300      	movs	r3, #0
 801ccf6:	e716      	b.n	801cb26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801ccf8:	44bb      	add	fp, r7
 801ccfa:	4657      	mov	r7, sl
 801ccfc:	e724      	b.n	801cb48 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801ccfe:	bf00      	nop
 801cd00:	20003984 	.word	0x20003984
 801cd04:	2000397e 	.word	0x2000397e
 801cd08:	20000280 	.word	0x20000280
 801cd0c:	2a01      	cmp	r2, #1
 801cd0e:	d12a      	bne.n	801cd66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801cd10:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801cd14:	f003 0203 	and.w	r2, r3, #3
 801cd18:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801cd1c:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801cd20:	3902      	subs	r1, #2
 801cd22:	3802      	subs	r0, #2
 801cd24:	3b02      	subs	r3, #2
 801cd26:	4411      	add	r1, r2
 801cd28:	f001 011f 	and.w	r1, r1, #31
 801cd2c:	f361 0604 	bfi	r6, r1, #0, #5
 801cd30:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801cd34:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801cd38:	f360 164a 	bfi	r6, r0, #5, #6
 801cd3c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801cd40:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801cd44:	f002 031f 	and.w	r3, r2, #31
 801cd48:	2203      	movs	r2, #3
 801cd4a:	f363 26cf 	bfi	r6, r3, #11, #5
 801cd4e:	fb12 0303 	smlabb	r3, r2, r3, r0
 801cd52:	2207      	movs	r2, #7
 801cd54:	fb12 3301 	smlabb	r3, r2, r1, r3
 801cd58:	9a03      	ldr	r2, [sp, #12]
 801cd5a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801cd5e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cd62:	809e      	strh	r6, [r3, #4]
 801cd64:	e701      	b.n	801cb6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801cd66:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801cd6a:	4647      	mov	r7, r8
 801cd6c:	45a8      	cmp	r8, r5
 801cd6e:	bfa8      	it	ge
 801cd70:	462f      	movge	r7, r5
 801cd72:	2a02      	cmp	r2, #2
 801cd74:	d154      	bne.n	801ce20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801cd76:	9b01      	ldr	r3, [sp, #4]
 801cd78:	2bff      	cmp	r3, #255	@ 0xff
 801cd7a:	d01a      	beq.n	801cdb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801cd7c:	eb0b 0307 	add.w	r3, fp, r7
 801cd80:	2b40      	cmp	r3, #64	@ 0x40
 801cd82:	dd16      	ble.n	801cdb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801cd84:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801cd88:	9800      	ldr	r0, [sp, #0]
 801cd8a:	4649      	mov	r1, r9
 801cd8c:	f7f3 fea0 	bl	8010ad0 <_ZN8touchgfx5paint9flushLineEPmi>
 801cd90:	465a      	mov	r2, fp
 801cd92:	9b01      	ldr	r3, [sp, #4]
 801cd94:	4620      	mov	r0, r4
 801cd96:	9900      	ldr	r1, [sp, #0]
 801cd98:	444c      	add	r4, r9
 801cd9a:	f7f3 ff05 	bl	8010ba8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801cd9e:	9b00      	ldr	r3, [sp, #0]
 801cda0:	f04f 0b00 	mov.w	fp, #0
 801cda4:	461a      	mov	r2, r3
 801cda6:	4b6a      	ldr	r3, [pc, #424]	@ (801cf50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801cda8:	429a      	cmp	r2, r3
 801cdaa:	bf0c      	ite	eq
 801cdac:	4b69      	ldreq	r3, [pc, #420]	@ (801cf54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801cdae:	4b68      	ldrne	r3, [pc, #416]	@ (801cf50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801cdb0:	9300      	str	r3, [sp, #0]
 801cdb2:	4652      	mov	r2, sl
 801cdb4:	2100      	movs	r1, #0
 801cdb6:	42a9      	cmp	r1, r5
 801cdb8:	da2c      	bge.n	801ce14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801cdba:	4694      	mov	ip, r2
 801cdbc:	f04f 0903 	mov.w	r9, #3
 801cdc0:	42b9      	cmp	r1, r7
 801cdc2:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801cdc6:	7852      	ldrb	r2, [r2, #1]
 801cdc8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801cdcc:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801cdd0:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801cdd4:	f003 021f 	and.w	r2, r3, #31
 801cdd8:	461e      	mov	r6, r3
 801cdda:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801cdde:	fb19 000e 	smlabb	r0, r9, lr, r0
 801cde2:	f04f 0e07 	mov.w	lr, #7
 801cde6:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801cdea:	9a03      	ldr	r2, [sp, #12]
 801cdec:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801cdf0:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801cdf4:	8083      	strh	r3, [r0, #4]
 801cdf6:	da0a      	bge.n	801ce0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801cdf8:	9a01      	ldr	r2, [sp, #4]
 801cdfa:	2aff      	cmp	r2, #255	@ 0xff
 801cdfc:	bf13      	iteet	ne
 801cdfe:	9a00      	ldrne	r2, [sp, #0]
 801ce00:	8023      	strheq	r3, [r4, #0]
 801ce02:	3402      	addeq	r4, #2
 801ce04:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801ce08:	bf18      	it	ne
 801ce0a:	f10b 0b01 	addne.w	fp, fp, #1
 801ce0e:	3101      	adds	r1, #1
 801ce10:	4662      	mov	r2, ip
 801ce12:	e7d0      	b.n	801cdb6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801ce14:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801ce18:	eba8 0807 	sub.w	r8, r8, r7
 801ce1c:	1bed      	subs	r5, r5, r7
 801ce1e:	e76c      	b.n	801ccfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801ce20:	9b01      	ldr	r3, [sp, #4]
 801ce22:	eba8 0807 	sub.w	r8, r8, r7
 801ce26:	1bed      	subs	r5, r5, r7
 801ce28:	fa1f f986 	uxth.w	r9, r6
 801ce2c:	2bff      	cmp	r3, #255	@ 0xff
 801ce2e:	d027      	beq.n	801ce80 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
 801ce30:	eb0b 0307 	add.w	r3, fp, r7
 801ce34:	2b40      	cmp	r3, #64	@ 0x40
 801ce36:	dd18      	ble.n	801ce6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
 801ce38:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801ce3c:	9800      	ldr	r0, [sp, #0]
 801ce3e:	4619      	mov	r1, r3
 801ce40:	930c      	str	r3, [sp, #48]	@ 0x30
 801ce42:	f7f3 fe45 	bl	8010ad0 <_ZN8touchgfx5paint9flushLineEPmi>
 801ce46:	465a      	mov	r2, fp
 801ce48:	9b01      	ldr	r3, [sp, #4]
 801ce4a:	4620      	mov	r0, r4
 801ce4c:	9900      	ldr	r1, [sp, #0]
 801ce4e:	f04f 0b00 	mov.w	fp, #0
 801ce52:	f7f3 fea9 	bl	8010ba8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801ce56:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ce58:	441c      	add	r4, r3
 801ce5a:	9b00      	ldr	r3, [sp, #0]
 801ce5c:	461a      	mov	r2, r3
 801ce5e:	4b3c      	ldr	r3, [pc, #240]	@ (801cf50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801ce60:	429a      	cmp	r2, r3
 801ce62:	bf0c      	ite	eq
 801ce64:	4b3b      	ldreq	r3, [pc, #236]	@ (801cf54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801ce66:	4b3a      	ldrne	r3, [pc, #232]	@ (801cf50 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801ce68:	9300      	str	r3, [sp, #0]
 801ce6a:	9b00      	ldr	r3, [sp, #0]
 801ce6c:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801ce70:	463b      	mov	r3, r7
 801ce72:	2b00      	cmp	r3, #0
 801ce74:	f43f af40 	beq.w	801ccf8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801ce78:	f822 9b02 	strh.w	r9, [r2], #2
 801ce7c:	3b01      	subs	r3, #1
 801ce7e:	e7f8      	b.n	801ce72 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
 801ce80:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801ce84:	42a7      	cmp	r7, r4
 801ce86:	f67f af38 	bls.w	801ccfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801ce8a:	f824 9b02 	strh.w	r9, [r4], #2
 801ce8e:	e7f9      	b.n	801ce84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
 801ce90:	f1bb 0f00 	cmp.w	fp, #0
 801ce94:	d00c      	beq.n	801ceb0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
 801ce96:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801ce9a:	9800      	ldr	r0, [sp, #0]
 801ce9c:	4641      	mov	r1, r8
 801ce9e:	f7f3 fe17 	bl	8010ad0 <_ZN8touchgfx5paint9flushLineEPmi>
 801cea2:	4620      	mov	r0, r4
 801cea4:	4444      	add	r4, r8
 801cea6:	9b01      	ldr	r3, [sp, #4]
 801cea8:	465a      	mov	r2, fp
 801ceaa:	9900      	ldr	r1, [sp, #0]
 801ceac:	f7f3 fe7c 	bl	8010ba8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801ceb0:	4b29      	ldr	r3, [pc, #164]	@ (801cf58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801ceb2:	9a02      	ldr	r2, [sp, #8]
 801ceb4:	881b      	ldrh	r3, [r3, #0]
 801ceb6:	1a9b      	subs	r3, r3, r2
 801ceb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801cebc:	9b06      	ldr	r3, [sp, #24]
 801cebe:	3301      	adds	r3, #1
 801cec0:	9306      	str	r3, [sp, #24]
 801cec2:	9a06      	ldr	r2, [sp, #24]
 801cec4:	9b04      	ldr	r3, [sp, #16]
 801cec6:	4293      	cmp	r3, r2
 801cec8:	d120      	bne.n	801cf0c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
 801ceca:	9b05      	ldr	r3, [sp, #20]
 801cecc:	2100      	movs	r1, #0
 801cece:	9a05      	ldr	r2, [sp, #20]
 801ced0:	f04f 0600 	mov.w	r6, #0
 801ced4:	f103 0801 	add.w	r8, r3, #1
 801ced8:	9b08      	ldr	r3, [sp, #32]
 801ceda:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801cede:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801cee2:	2280      	movs	r2, #128	@ 0x80
 801cee4:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801cee8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ceea:	ba3f      	rev	r7, r7
 801ceec:	eba9 0905 	sub.w	r9, r9, r5
 801cef0:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801cef2:	441f      	add	r7, r3
 801cef4:	f00a fff5 	bl	8027ee2 <memset>
 801cef8:	fa1f f989 	uxth.w	r9, r9
 801cefc:	2300      	movs	r3, #0
 801cefe:	f8cd 8014 	str.w	r8, [sp, #20]
 801cf02:	9306      	str	r3, [sp, #24]
 801cf04:	f7f3 fdcc 	bl	8010aa0 <_ZN8touchgfx5paint8tearDownEv>
 801cf08:	46ba      	mov	sl, r7
 801cf0a:	e58b      	b.n	801ca24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801cf0c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801cf10:	9b02      	ldr	r3, [sp, #8]
 801cf12:	eba9 0903 	sub.w	r9, r9, r3
 801cf16:	eba9 0505 	sub.w	r5, r9, r5
 801cf1a:	fa1f f985 	uxth.w	r9, r5
 801cf1e:	e7f1      	b.n	801cf04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
 801cf20:	4b0e      	ldr	r3, [pc, #56]	@ (801cf5c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801cf22:	6818      	ldr	r0, [r3, #0]
 801cf24:	6803      	ldr	r3, [r0, #0]
 801cf26:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cf28:	4798      	blx	r3
 801cf2a:	b013      	add	sp, #76	@ 0x4c
 801cf2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf30:	9b02      	ldr	r3, [sp, #8]
 801cf32:	9a02      	ldr	r2, [sp, #8]
 801cf34:	42ab      	cmp	r3, r5
 801cf36:	bfa8      	it	ge
 801cf38:	462b      	movge	r3, r5
 801cf3a:	eba2 0803 	sub.w	r8, r2, r3
 801cf3e:	1aed      	subs	r5, r5, r3
 801cf40:	e627      	b.n	801cb92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801cf42:	f108 38ff 	add.w	r8, r8, #4294967295
 801cf46:	fa1f f986 	uxth.w	r9, r6
 801cf4a:	2500      	movs	r5, #0
 801cf4c:	2701      	movs	r7, #1
 801cf4e:	e76f      	b.n	801ce30 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
 801cf50:	20000280 	.word	0x20000280
 801cf54:	20000380 	.word	0x20000380
 801cf58:	2000397e 	.word	0x2000397e
 801cf5c:	20003984 	.word	0x20003984

0801cf60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801cf60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf64:	b08f      	sub	sp, #60	@ 0x3c
 801cf66:	461c      	mov	r4, r3
 801cf68:	460f      	mov	r7, r1
 801cf6a:	9203      	str	r2, [sp, #12]
 801cf6c:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801cf70:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801cf72:	9202      	str	r2, [sp, #8]
 801cf74:	2a00      	cmp	r2, #0
 801cf76:	f000 8128 	beq.w	801d1ca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801cf7a:	6820      	ldr	r0, [r4, #0]
 801cf7c:	aa0a      	add	r2, sp, #40	@ 0x28
 801cf7e:	6861      	ldr	r1, [r4, #4]
 801cf80:	c203      	stmia	r2!, {r0, r1}
 801cf82:	6818      	ldr	r0, [r3, #0]
 801cf84:	aa0c      	add	r2, sp, #48	@ 0x30
 801cf86:	6859      	ldr	r1, [r3, #4]
 801cf88:	c203      	stmia	r2!, {r0, r1}
 801cf8a:	a80a      	add	r0, sp, #40	@ 0x28
 801cf8c:	f7f9 f838 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf90:	4621      	mov	r1, r4
 801cf92:	a80c      	add	r0, sp, #48	@ 0x30
 801cf94:	f7f9 f85c 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf98:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801cf9c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801cfa0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801cfa4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801cfa8:	bfdb      	ittet	le
 801cfaa:	b2b3      	uxthle	r3, r6
 801cfac:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801cfb0:	2301      	movgt	r3, #1
 801cfb2:	fb92 f3f3 	sdivle	r3, r2, r3
 801cfb6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801cfba:	441d      	add	r5, r3
 801cfbc:	fb92 f1f3 	sdiv	r1, r2, r3
 801cfc0:	fa1f fc81 	uxth.w	ip, r1
 801cfc4:	3d01      	subs	r5, #1
 801cfc6:	fb0c 2413 	mls	r4, ip, r3, r2
 801cfca:	4661      	mov	r1, ip
 801cfcc:	fb14 f406 	smulbb	r4, r4, r6
 801cfd0:	4404      	add	r4, r0
 801cfd2:	fb95 f5f3 	sdiv	r5, r5, r3
 801cfd6:	b2a4      	uxth	r4, r4
 801cfd8:	b121      	cbz	r1, 801cfe4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801cfda:	9b03      	ldr	r3, [sp, #12]
 801cfdc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801cfe0:	ba1b      	rev	r3, r3
 801cfe2:	441f      	add	r7, r3
 801cfe4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801cfe8:	b2ad      	uxth	r5, r5
 801cfea:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801cfee:	4418      	add	r0, r3
 801cff0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801cff4:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801cff8:	00ad      	lsls	r5, r5, #2
 801cffa:	441a      	add	r2, r3
 801cffc:	4b74      	ldr	r3, [pc, #464]	@ (801d1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801cffe:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801d002:	6818      	ldr	r0, [r3, #0]
 801d004:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801d008:	6803      	ldr	r3, [r0, #0]
 801d00a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d00c:	4798      	blx	r3
 801d00e:	4a71      	ldr	r2, [pc, #452]	@ (801d1d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801d010:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801d014:	2c00      	cmp	r4, #0
 801d016:	8813      	ldrh	r3, [r2, #0]
 801d018:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801d01c:	bf0c      	ite	eq
 801d01e:	46c8      	moveq	r8, r9
 801d020:	f04f 0800 	movne.w	r8, #0
 801d024:	9209      	str	r2, [sp, #36]	@ 0x24
 801d026:	fb03 c101 	mla	r1, r3, r1, ip
 801d02a:	4373      	muls	r3, r6
 801d02c:	fa1f f888 	uxth.w	r8, r8
 801d030:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d034:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d038:	9304      	str	r3, [sp, #16]
 801d03a:	1d2b      	adds	r3, r5, #4
 801d03c:	9305      	str	r3, [sp, #20]
 801d03e:	2300      	movs	r3, #0
 801d040:	9301      	str	r3, [sp, #4]
 801d042:	9a04      	ldr	r2, [sp, #16]
 801d044:	4282      	cmp	r2, r0
 801d046:	f240 80bb 	bls.w	801d1c0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801d04a:	b95b      	cbnz	r3, 801d064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 801d04c:	783a      	ldrb	r2, [r7, #0]
 801d04e:	0993      	lsrs	r3, r2, #6
 801d050:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d054:	9201      	str	r2, [sp, #4]
 801d056:	1e5a      	subs	r2, r3, #1
 801d058:	2a02      	cmp	r2, #2
 801d05a:	bf8d      	iteet	hi
 801d05c:	787b      	ldrbhi	r3, [r7, #1]
 801d05e:	3701      	addls	r7, #1
 801d060:	b29b      	uxthls	r3, r3
 801d062:	3702      	addhi	r7, #2
 801d064:	b184      	cbz	r4, 801d088 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801d066:	429c      	cmp	r4, r3
 801d068:	bf91      	iteee	ls
 801d06a:	1b1c      	subls	r4, r3, r4
 801d06c:	1ae4      	subhi	r4, r4, r3
 801d06e:	46c4      	movhi	ip, r8
 801d070:	f04f 0a00 	movhi.w	sl, #0
 801d074:	bf9b      	ittet	ls
 801d076:	fa1f fa84 	uxthls.w	sl, r4
 801d07a:	2400      	movls	r4, #0
 801d07c:	b2a4      	uxthhi	r4, r4
 801d07e:	fa1f fc89 	uxthls.w	ip, r9
 801d082:	4653      	mov	r3, sl
 801d084:	46e0      	mov	r8, ip
 801d086:	e7dc      	b.n	801d042 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801d088:	2204      	movs	r2, #4
 801d08a:	9905      	ldr	r1, [sp, #20]
 801d08c:	4543      	cmp	r3, r8
 801d08e:	4615      	mov	r5, r2
 801d090:	9a01      	ldr	r2, [sp, #4]
 801d092:	bf24      	itt	cs
 801d094:	eba3 0a08 	subcs.w	sl, r3, r8
 801d098:	46c6      	movcs	lr, r8
 801d09a:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d09e:	9903      	ldr	r1, [sp, #12]
 801d0a0:	bf3c      	itt	cc
 801d0a2:	eba8 0c03 	subcc.w	ip, r8, r3
 801d0a6:	469e      	movcc	lr, r3
 801d0a8:	588a      	ldr	r2, [r1, r2]
 801d0aa:	bf26      	itte	cs
 801d0ac:	fa1f fa8a 	uxthcs.w	sl, sl
 801d0b0:	46a4      	movcs	ip, r4
 801d0b2:	fa1f fc8c 	uxthcc.w	ip, ip
 801d0b6:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801d0ba:	bf38      	it	cc
 801d0bc:	46a2      	movcc	sl, r4
 801d0be:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801d0c2:	2900      	cmp	r1, #0
 801d0c4:	d066      	beq.n	801d194 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801d0c6:	29ff      	cmp	r1, #255	@ 0xff
 801d0c8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801d0cc:	d114      	bne.n	801d0f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d0ce:	9d02      	ldr	r5, [sp, #8]
 801d0d0:	2dff      	cmp	r5, #255	@ 0xff
 801d0d2:	d111      	bne.n	801d0f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801d0d4:	0951      	lsrs	r1, r2, #5
 801d0d6:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801d0da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d0de:	4486      	add	lr, r0
 801d0e0:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d0e4:	f026 0607 	bic.w	r6, r6, #7
 801d0e8:	430e      	orrs	r6, r1
 801d0ea:	4316      	orrs	r6, r2
 801d0ec:	b2b6      	uxth	r6, r6
 801d0ee:	4586      	cmp	lr, r0
 801d0f0:	d051      	beq.n	801d196 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d0f2:	f820 6b02 	strh.w	r6, [r0], #2
 801d0f6:	e7fa      	b.n	801d0ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801d0f8:	9d02      	ldr	r5, [sp, #8]
 801d0fa:	b2f6      	uxtb	r6, r6
 801d0fc:	4486      	add	lr, r0
 801d0fe:	4369      	muls	r1, r5
 801d100:	1c4d      	adds	r5, r1, #1
 801d102:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801d106:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801d10a:	b2d2      	uxtb	r2, r2
 801d10c:	122d      	asrs	r5, r5, #8
 801d10e:	ea6f 0b05 	mvn.w	fp, r5
 801d112:	b2ad      	uxth	r5, r5
 801d114:	fb11 f105 	smulbb	r1, r1, r5
 801d118:	fa5f fb8b 	uxtb.w	fp, fp
 801d11c:	fb16 f605 	smulbb	r6, r6, r5
 801d120:	fb12 f205 	smulbb	r2, r2, r5
 801d124:	b289      	uxth	r1, r1
 801d126:	b2b6      	uxth	r6, r6
 801d128:	b292      	uxth	r2, r2
 801d12a:	9106      	str	r1, [sp, #24]
 801d12c:	9607      	str	r6, [sp, #28]
 801d12e:	9208      	str	r2, [sp, #32]
 801d130:	4586      	cmp	lr, r0
 801d132:	d030      	beq.n	801d196 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d134:	8802      	ldrh	r2, [r0, #0]
 801d136:	9906      	ldr	r1, [sp, #24]
 801d138:	1216      	asrs	r6, r2, #8
 801d13a:	10d5      	asrs	r5, r2, #3
 801d13c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d140:	00d2      	lsls	r2, r2, #3
 801d142:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d146:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d14a:	b2d2      	uxtb	r2, r2
 801d14c:	fb06 160b 	mla	r6, r6, fp, r1
 801d150:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d154:	9907      	ldr	r1, [sp, #28]
 801d156:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d15a:	b2b6      	uxth	r6, r6
 801d15c:	fb05 150b 	mla	r5, r5, fp, r1
 801d160:	9908      	ldr	r1, [sp, #32]
 801d162:	fb02 120b 	mla	r2, r2, fp, r1
 801d166:	1c71      	adds	r1, r6, #1
 801d168:	b2ad      	uxth	r5, r5
 801d16a:	b292      	uxth	r2, r2
 801d16c:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801d170:	1c51      	adds	r1, r2, #1
 801d172:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801d176:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d17a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d17e:	4316      	orrs	r6, r2
 801d180:	1c6a      	adds	r2, r5, #1
 801d182:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801d186:	096d      	lsrs	r5, r5, #5
 801d188:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d18c:	432e      	orrs	r6, r5
 801d18e:	f820 6b02 	strh.w	r6, [r0], #2
 801d192:	e7cd      	b.n	801d130 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801d194:	4470      	add	r0, lr
 801d196:	4543      	cmp	r3, r8
 801d198:	f4ff af73 	bcc.w	801d082 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801d19c:	fa1f fc89 	uxth.w	ip, r9
 801d1a0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801d1a4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d1a6:	eba4 040c 	sub.w	r4, r4, ip
 801d1aa:	881b      	ldrh	r3, [r3, #0]
 801d1ac:	b2a4      	uxth	r4, r4
 801d1ae:	eba3 0309 	sub.w	r3, r3, r9
 801d1b2:	2c00      	cmp	r4, #0
 801d1b4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1b8:	bf18      	it	ne
 801d1ba:	f04f 0c00 	movne.w	ip, #0
 801d1be:	e760      	b.n	801d082 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801d1c0:	4b03      	ldr	r3, [pc, #12]	@ (801d1d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801d1c2:	6818      	ldr	r0, [r3, #0]
 801d1c4:	6803      	ldr	r3, [r0, #0]
 801d1c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d1c8:	4798      	blx	r3
 801d1ca:	b00f      	add	sp, #60	@ 0x3c
 801d1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1d0:	20003984 	.word	0x20003984
 801d1d4:	2000397e 	.word	0x2000397e

0801d1d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d1d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1dc:	b093      	sub	sp, #76	@ 0x4c
 801d1de:	461c      	mov	r4, r3
 801d1e0:	9205      	str	r2, [sp, #20]
 801d1e2:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801d1e6:	9101      	str	r1, [sp, #4]
 801d1e8:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801d1ea:	9202      	str	r2, [sp, #8]
 801d1ec:	2a00      	cmp	r2, #0
 801d1ee:	f000 812e 	beq.w	801d44e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801d1f2:	6820      	ldr	r0, [r4, #0]
 801d1f4:	aa0e      	add	r2, sp, #56	@ 0x38
 801d1f6:	6861      	ldr	r1, [r4, #4]
 801d1f8:	c203      	stmia	r2!, {r0, r1}
 801d1fa:	6818      	ldr	r0, [r3, #0]
 801d1fc:	aa10      	add	r2, sp, #64	@ 0x40
 801d1fe:	6859      	ldr	r1, [r3, #4]
 801d200:	c203      	stmia	r2!, {r0, r1}
 801d202:	a80e      	add	r0, sp, #56	@ 0x38
 801d204:	f7f8 fefc 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d208:	4621      	mov	r1, r4
 801d20a:	a810      	add	r0, sp, #64	@ 0x40
 801d20c:	f7f8 ff20 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d210:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801d214:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801d218:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801d21c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801d220:	bfdb      	ittet	le
 801d222:	b2b3      	uxthle	r3, r6
 801d224:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801d228:	2301      	movgt	r3, #1
 801d22a:	fb92 f3f3 	sdivle	r3, r2, r3
 801d22e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801d232:	441d      	add	r5, r3
 801d234:	fb92 f1f3 	sdiv	r1, r2, r3
 801d238:	fa1f fc81 	uxth.w	ip, r1
 801d23c:	3d01      	subs	r5, #1
 801d23e:	fb0c 2413 	mls	r4, ip, r3, r2
 801d242:	4661      	mov	r1, ip
 801d244:	fb14 f406 	smulbb	r4, r4, r6
 801d248:	4404      	add	r4, r0
 801d24a:	fb95 f5f3 	sdiv	r5, r5, r3
 801d24e:	b2a4      	uxth	r4, r4
 801d250:	b131      	cbz	r1, 801d260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801d252:	9b05      	ldr	r3, [sp, #20]
 801d254:	9901      	ldr	r1, [sp, #4]
 801d256:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801d25a:	ba1b      	rev	r3, r3
 801d25c:	4419      	add	r1, r3
 801d25e:	9101      	str	r1, [sp, #4]
 801d260:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801d264:	b2ad      	uxth	r5, r5
 801d266:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801d26a:	4418      	add	r0, r3
 801d26c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801d270:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801d274:	00ad      	lsls	r5, r5, #2
 801d276:	441a      	add	r2, r3
 801d278:	4b76      	ldr	r3, [pc, #472]	@ (801d454 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d27a:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801d27e:	6818      	ldr	r0, [r3, #0]
 801d280:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801d284:	6803      	ldr	r3, [r0, #0]
 801d286:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d288:	4798      	blx	r3
 801d28a:	4973      	ldr	r1, [pc, #460]	@ (801d458 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801d28c:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801d290:	2c00      	cmp	r4, #0
 801d292:	880b      	ldrh	r3, [r1, #0]
 801d294:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801d298:	910d      	str	r1, [sp, #52]	@ 0x34
 801d29a:	fb03 c202 	mla	r2, r3, r2, ip
 801d29e:	bf08      	it	eq
 801d2a0:	46dc      	moveq	ip, fp
 801d2a2:	fb03 f306 	mul.w	r3, r3, r6
 801d2a6:	bf18      	it	ne
 801d2a8:	f04f 0c00 	movne.w	ip, #0
 801d2ac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d2b0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d2b4:	fa1f fc8c 	uxth.w	ip, ip
 801d2b8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d2bc:	9106      	str	r1, [sp, #24]
 801d2be:	9308      	str	r3, [sp, #32]
 801d2c0:	1d2b      	adds	r3, r5, #4
 801d2c2:	9309      	str	r3, [sp, #36]	@ 0x24
 801d2c4:	9b02      	ldr	r3, [sp, #8]
 801d2c6:	43da      	mvns	r2, r3
 801d2c8:	2300      	movs	r3, #0
 801d2ca:	b2d2      	uxtb	r2, r2
 801d2cc:	9303      	str	r3, [sp, #12]
 801d2ce:	9207      	str	r2, [sp, #28]
 801d2d0:	9a08      	ldr	r2, [sp, #32]
 801d2d2:	4282      	cmp	r2, r0
 801d2d4:	f240 80b6 	bls.w	801d444 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801d2d8:	b963      	cbnz	r3, 801d2f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801d2da:	9b01      	ldr	r3, [sp, #4]
 801d2dc:	781a      	ldrb	r2, [r3, #0]
 801d2de:	0993      	lsrs	r3, r2, #6
 801d2e0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801d2e4:	9203      	str	r2, [sp, #12]
 801d2e6:	1e5a      	subs	r2, r3, #1
 801d2e8:	2a02      	cmp	r2, #2
 801d2ea:	d815      	bhi.n	801d318 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 801d2ec:	9a01      	ldr	r2, [sp, #4]
 801d2ee:	b29b      	uxth	r3, r3
 801d2f0:	3201      	adds	r2, #1
 801d2f2:	9201      	str	r2, [sp, #4]
 801d2f4:	b1b4      	cbz	r4, 801d324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801d2f6:	429c      	cmp	r4, r3
 801d2f8:	bf91      	iteee	ls
 801d2fa:	1b1c      	subls	r4, r3, r4
 801d2fc:	1ae4      	subhi	r4, r4, r3
 801d2fe:	4666      	movhi	r6, ip
 801d300:	f04f 0800 	movhi.w	r8, #0
 801d304:	bf9b      	ittet	ls
 801d306:	fa1f f884 	uxthls.w	r8, r4
 801d30a:	2400      	movls	r4, #0
 801d30c:	b2a4      	uxthhi	r4, r4
 801d30e:	fa1f f68b 	uxthls.w	r6, fp
 801d312:	4643      	mov	r3, r8
 801d314:	46b4      	mov	ip, r6
 801d316:	e7db      	b.n	801d2d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801d318:	9a01      	ldr	r2, [sp, #4]
 801d31a:	9b01      	ldr	r3, [sp, #4]
 801d31c:	3202      	adds	r2, #2
 801d31e:	785b      	ldrb	r3, [r3, #1]
 801d320:	9201      	str	r2, [sp, #4]
 801d322:	e7e7      	b.n	801d2f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801d324:	2203      	movs	r2, #3
 801d326:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d328:	4563      	cmp	r3, ip
 801d32a:	4615      	mov	r5, r2
 801d32c:	9a03      	ldr	r2, [sp, #12]
 801d32e:	bf2c      	ite	cs
 801d330:	eba3 080c 	subcs.w	r8, r3, ip
 801d334:	ebac 0603 	subcc.w	r6, ip, r3
 801d338:	fb15 1202 	smlabb	r2, r5, r2, r1
 801d33c:	9905      	ldr	r1, [sp, #20]
 801d33e:	bf24      	itt	cs
 801d340:	fa1f f888 	uxthcs.w	r8, r8
 801d344:	46e1      	movcs	r9, ip
 801d346:	eb01 0502 	add.w	r5, r1, r2
 801d34a:	9902      	ldr	r1, [sp, #8]
 801d34c:	bf2f      	iteee	cs
 801d34e:	4626      	movcs	r6, r4
 801d350:	b2b6      	uxthcc	r6, r6
 801d352:	4699      	movcc	r9, r3
 801d354:	46a0      	movcc	r8, r4
 801d356:	29ff      	cmp	r1, #255	@ 0xff
 801d358:	d04a      	beq.n	801d3f0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801d35a:	9f06      	ldr	r7, [sp, #24]
 801d35c:	46ca      	mov	sl, r9
 801d35e:	78a9      	ldrb	r1, [r5, #2]
 801d360:	9004      	str	r0, [sp, #16]
 801d362:	4379      	muls	r1, r7
 801d364:	910a      	str	r1, [sp, #40]	@ 0x28
 801d366:	7869      	ldrb	r1, [r5, #1]
 801d368:	4379      	muls	r1, r7
 801d36a:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d36c:	9905      	ldr	r1, [sp, #20]
 801d36e:	5c8a      	ldrb	r2, [r1, r2]
 801d370:	437a      	muls	r2, r7
 801d372:	920c      	str	r2, [sp, #48]	@ 0x30
 801d374:	f1ba 0f00 	cmp.w	sl, #0
 801d378:	d03d      	beq.n	801d3f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801d37a:	9a04      	ldr	r2, [sp, #16]
 801d37c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801d380:	9f07      	ldr	r7, [sp, #28]
 801d382:	8812      	ldrh	r2, [r2, #0]
 801d384:	fa1f fa8a 	uxth.w	sl, sl
 801d388:	46be      	mov	lr, r7
 801d38a:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801d38c:	1215      	asrs	r5, r2, #8
 801d38e:	10d1      	asrs	r1, r2, #3
 801d390:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d394:	00d2      	lsls	r2, r2, #3
 801d396:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d39a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d39e:	b2d2      	uxtb	r2, r2
 801d3a0:	fb05 750e 	mla	r5, r5, lr, r7
 801d3a4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d3a8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801d3aa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d3ae:	b2ad      	uxth	r5, r5
 801d3b0:	fb01 710e 	mla	r1, r1, lr, r7
 801d3b4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801d3b6:	fb02 720e 	mla	r2, r2, lr, r7
 801d3ba:	f105 0e01 	add.w	lr, r5, #1
 801d3be:	b289      	uxth	r1, r1
 801d3c0:	b292      	uxth	r2, r2
 801d3c2:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d3c6:	f102 0e01 	add.w	lr, r2, #1
 801d3ca:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801d3ce:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801d3d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d3d6:	4315      	orrs	r5, r2
 801d3d8:	1c4a      	adds	r2, r1, #1
 801d3da:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d3de:	9a04      	ldr	r2, [sp, #16]
 801d3e0:	0949      	lsrs	r1, r1, #5
 801d3e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801d3e6:	430d      	orrs	r5, r1
 801d3e8:	f822 5b02 	strh.w	r5, [r2], #2
 801d3ec:	9204      	str	r2, [sp, #16]
 801d3ee:	e7c1      	b.n	801d374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 801d3f0:	4649      	mov	r1, r9
 801d3f2:	4686      	mov	lr, r0
 801d3f4:	b999      	cbnz	r1, 801d41e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801d3f6:	4563      	cmp	r3, ip
 801d3f8:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801d3fc:	d389      	bcc.n	801d312 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801d3fe:	fa1f f68b 	uxth.w	r6, fp
 801d402:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801d406:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d408:	1ba4      	subs	r4, r4, r6
 801d40a:	881b      	ldrh	r3, [r3, #0]
 801d40c:	b2a4      	uxth	r4, r4
 801d40e:	eba3 030b 	sub.w	r3, r3, fp
 801d412:	2c00      	cmp	r4, #0
 801d414:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d418:	bf18      	it	ne
 801d41a:	2600      	movne	r6, #0
 801d41c:	e779      	b.n	801d312 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801d41e:	78aa      	ldrb	r2, [r5, #2]
 801d420:	3901      	subs	r1, #1
 801d422:	4f0e      	ldr	r7, [pc, #56]	@ (801d45c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 801d424:	b289      	uxth	r1, r1
 801d426:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801d42a:	786a      	ldrb	r2, [r5, #1]
 801d42c:	00d2      	lsls	r2, r2, #3
 801d42e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d432:	ea4a 0202 	orr.w	r2, sl, r2
 801d436:	f895 a000 	ldrb.w	sl, [r5]
 801d43a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801d43e:	f82e 2b02 	strh.w	r2, [lr], #2
 801d442:	e7d7      	b.n	801d3f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 801d444:	4b03      	ldr	r3, [pc, #12]	@ (801d454 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801d446:	6818      	ldr	r0, [r3, #0]
 801d448:	6803      	ldr	r3, [r0, #0]
 801d44a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d44c:	4798      	blx	r3
 801d44e:	b013      	add	sp, #76	@ 0x4c
 801d450:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d454:	20003984 	.word	0x20003984
 801d458:	2000397e 	.word	0x2000397e
 801d45c:	fffff800 	.word	0xfffff800

0801d460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801d460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d464:	b09d      	sub	sp, #116	@ 0x74
 801d466:	461c      	mov	r4, r3
 801d468:	4683      	mov	fp, r0
 801d46a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801d46c:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801d470:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801d474:	920e      	str	r2, [sp, #56]	@ 0x38
 801d476:	2a00      	cmp	r2, #0
 801d478:	f000 81e4 	beq.w	801d844 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 801d47c:	6820      	ldr	r0, [r4, #0]
 801d47e:	aa18      	add	r2, sp, #96	@ 0x60
 801d480:	6861      	ldr	r1, [r4, #4]
 801d482:	c203      	stmia	r2!, {r0, r1}
 801d484:	6818      	ldr	r0, [r3, #0]
 801d486:	aa1a      	add	r2, sp, #104	@ 0x68
 801d488:	6859      	ldr	r1, [r3, #4]
 801d48a:	c203      	stmia	r2!, {r0, r1}
 801d48c:	a818      	add	r0, sp, #96	@ 0x60
 801d48e:	f7f8 fdb7 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d492:	4621      	mov	r1, r4
 801d494:	a81a      	add	r0, sp, #104	@ 0x68
 801d496:	f7f8 fddb 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d49a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801d49e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801d4a2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801d4a6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801d4aa:	bfdb      	ittet	le
 801d4ac:	b29a      	uxthle	r2, r3
 801d4ae:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801d4b2:	2201      	movgt	r2, #1
 801d4b4:	fb91 f2f2 	sdivle	r2, r1, r2
 801d4b8:	9202      	str	r2, [sp, #8]
 801d4ba:	9802      	ldr	r0, [sp, #8]
 801d4bc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801d4c0:	9902      	ldr	r1, [sp, #8]
 801d4c2:	fb92 f0f0 	sdiv	r0, r2, r0
 801d4c6:	b280      	uxth	r0, r0
 801d4c8:	440c      	add	r4, r1
 801d4ca:	900f      	str	r0, [sp, #60]	@ 0x3c
 801d4cc:	3c01      	subs	r4, #1
 801d4ce:	9802      	ldr	r0, [sp, #8]
 801d4d0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801d4d2:	fb05 2510 	mls	r5, r5, r0, r2
 801d4d6:	fb94 f4f1 	sdiv	r4, r4, r1
 801d4da:	fb15 f503 	smulbb	r5, r5, r3
 801d4de:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801d4e2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801d4e6:	3401      	adds	r4, #1
 801d4e8:	440d      	add	r5, r1
 801d4ea:	4419      	add	r1, r3
 801d4ec:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801d4f0:	b2a4      	uxth	r4, r4
 801d4f2:	441a      	add	r2, r3
 801d4f4:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801d4f8:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801d4fc:	00a4      	lsls	r4, r4, #2
 801d4fe:	9306      	str	r3, [sp, #24]
 801d500:	b2ad      	uxth	r5, r5
 801d502:	4bb3      	ldr	r3, [pc, #716]	@ (801d7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801d504:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801d508:	6818      	ldr	r0, [r3, #0]
 801d50a:	6803      	ldr	r3, [r0, #0]
 801d50c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d50e:	4798      	blx	r3
 801d510:	4bb0      	ldr	r3, [pc, #704]	@ (801d7d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 801d512:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801d516:	2d00      	cmp	r5, #0
 801d518:	881a      	ldrh	r2, [r3, #0]
 801d51a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801d51e:	fb02 f606 	mul.w	r6, r2, r6
 801d522:	fb02 7101 	mla	r1, r2, r1, r7
 801d526:	9316      	str	r3, [sp, #88]	@ 0x58
 801d528:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801d52c:	4baa      	ldr	r3, [pc, #680]	@ (801d7d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 801d52e:	bf18      	it	ne
 801d530:	2100      	movne	r1, #0
 801d532:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801d536:	eba3 030b 	sub.w	r3, r3, fp
 801d53a:	920a      	str	r2, [sp, #40]	@ 0x28
 801d53c:	f104 0204 	add.w	r2, r4, #4
 801d540:	9317      	str	r3, [sp, #92]	@ 0x5c
 801d542:	9213      	str	r2, [sp, #76]	@ 0x4c
 801d544:	9a06      	ldr	r2, [sp, #24]
 801d546:	bf08      	it	eq
 801d548:	4611      	moveq	r1, r2
 801d54a:	2200      	movs	r2, #0
 801d54c:	b289      	uxth	r1, r1
 801d54e:	920d      	str	r2, [sp, #52]	@ 0x34
 801d550:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801d552:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d554:	fa12 f383 	uxtah	r3, r2, r3
 801d558:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801d55a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d55e:	3304      	adds	r3, #4
 801d560:	9308      	str	r3, [sp, #32]
 801d562:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d564:	4543      	cmp	r3, r8
 801d566:	f240 8168 	bls.w	801d83a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 801d56a:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801d56e:	f04f 0e01 	mov.w	lr, #1
 801d572:	9a02      	ldr	r2, [sp, #8]
 801d574:	9808      	ldr	r0, [sp, #32]
 801d576:	fbb5 f3f3 	udiv	r3, r5, r3
 801d57a:	1ad3      	subs	r3, r2, r3
 801d57c:	7800      	ldrb	r0, [r0, #0]
 801d57e:	b29b      	uxth	r3, r3
 801d580:	9010      	str	r0, [sp, #64]	@ 0x40
 801d582:	3001      	adds	r0, #1
 801d584:	9314      	str	r3, [sp, #80]	@ 0x50
 801d586:	9b08      	ldr	r3, [sp, #32]
 801d588:	9007      	str	r0, [sp, #28]
 801d58a:	785a      	ldrb	r2, [r3, #1]
 801d58c:	789b      	ldrb	r3, [r3, #2]
 801d58e:	021b      	lsls	r3, r3, #8
 801d590:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d594:	9a08      	ldr	r2, [sp, #32]
 801d596:	78d2      	ldrb	r2, [r2, #3]
 801d598:	4313      	orrs	r3, r2
 801d59a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801d59c:	441a      	add	r2, r3
 801d59e:	1c50      	adds	r0, r2, #1
 801d5a0:	7852      	ldrb	r2, [r2, #1]
 801d5a2:	9005      	str	r0, [sp, #20]
 801d5a4:	0212      	lsls	r2, r2, #8
 801d5a6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801d5a8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801d5ac:	5cc3      	ldrb	r3, [r0, r3]
 801d5ae:	431a      	orrs	r2, r3
 801d5b0:	b293      	uxth	r3, r2
 801d5b2:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801d5b6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801d5b8:	2300      	movs	r3, #0
 801d5ba:	9309      	str	r3, [sp, #36]	@ 0x24
 801d5bc:	2301      	movs	r3, #1
 801d5be:	9301      	str	r3, [sp, #4]
 801d5c0:	9304      	str	r3, [sp, #16]
 801d5c2:	2300      	movs	r3, #0
 801d5c4:	9303      	str	r3, [sp, #12]
 801d5c6:	2d00      	cmp	r5, #0
 801d5c8:	d07d      	beq.n	801d6c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 801d5ca:	45ae      	cmp	lr, r5
 801d5cc:	d26c      	bcs.n	801d6a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 801d5ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d5d0:	eba5 050e 	sub.w	r5, r5, lr
 801d5d4:	460c      	mov	r4, r1
 801d5d6:	4543      	cmp	r3, r8
 801d5d8:	b2ad      	uxth	r5, r5
 801d5da:	d802      	bhi.n	801d5e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 801d5dc:	e071      	b.n	801d6c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 801d5de:	2b00      	cmp	r3, #0
 801d5e0:	d15d      	bne.n	801d69e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 801d5e2:	9b05      	ldr	r3, [sp, #20]
 801d5e4:	9a04      	ldr	r2, [sp, #16]
 801d5e6:	785b      	ldrb	r3, [r3, #1]
 801d5e8:	f1c2 0207 	rsb	r2, r2, #7
 801d5ec:	9904      	ldr	r1, [sp, #16]
 801d5ee:	4093      	lsls	r3, r2
 801d5f0:	005b      	lsls	r3, r3, #1
 801d5f2:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801d5f6:	9b05      	ldr	r3, [sp, #20]
 801d5f8:	781b      	ldrb	r3, [r3, #0]
 801d5fa:	410b      	asrs	r3, r1
 801d5fc:	3101      	adds	r1, #1
 801d5fe:	b2c9      	uxtb	r1, r1
 801d600:	b2db      	uxtb	r3, r3
 801d602:	2908      	cmp	r1, #8
 801d604:	9104      	str	r1, [sp, #16]
 801d606:	9905      	ldr	r1, [sp, #20]
 801d608:	ea43 0302 	orr.w	r3, r3, r2
 801d60c:	bf0c      	ite	eq
 801d60e:	3102      	addeq	r1, #2
 801d610:	3101      	addne	r1, #1
 801d612:	b29a      	uxth	r2, r3
 801d614:	bf05      	ittet	eq
 801d616:	9105      	streq	r1, [sp, #20]
 801d618:	2100      	moveq	r1, #0
 801d61a:	9105      	strne	r1, [sp, #20]
 801d61c:	9104      	streq	r1, [sp, #16]
 801d61e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801d620:	4291      	cmp	r1, r2
 801d622:	d30a      	bcc.n	801d63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 801d624:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801d628:	2301      	movs	r3, #1
 801d62a:	9907      	ldr	r1, [sp, #28]
 801d62c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801d630:	d30f      	bcc.n	801d652 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801d632:	2100      	movs	r1, #0
 801d634:	9301      	str	r3, [sp, #4]
 801d636:	9103      	str	r1, [sp, #12]
 801d638:	e032      	b.n	801d6a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801d63a:	9b07      	ldr	r3, [sp, #28]
 801d63c:	429a      	cmp	r2, r3
 801d63e:	d318      	bcc.n	801d672 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 801d640:	9b01      	ldr	r3, [sp, #4]
 801d642:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801d646:	445b      	add	r3, fp
 801d648:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801d64c:	9b01      	ldr	r3, [sp, #4]
 801d64e:	3301      	adds	r3, #1
 801d650:	b29b      	uxth	r3, r3
 801d652:	9907      	ldr	r1, [sp, #28]
 801d654:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801d658:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d65c:	7108      	strb	r0, [r1, #4]
 801d65e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801d660:	80c8      	strh	r0, [r1, #6]
 801d662:	9801      	ldr	r0, [sp, #4]
 801d664:	3001      	adds	r0, #1
 801d666:	7148      	strb	r0, [r1, #5]
 801d668:	9907      	ldr	r1, [sp, #28]
 801d66a:	3101      	adds	r1, #1
 801d66c:	b289      	uxth	r1, r1
 801d66e:	9107      	str	r1, [sp, #28]
 801d670:	e7df      	b.n	801d632 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801d672:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801d676:	4611      	mov	r1, r2
 801d678:	795b      	ldrb	r3, [r3, #5]
 801d67a:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801d67e:	4458      	add	r0, fp
 801d680:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801d682:	4406      	add	r6, r0
 801d684:	2e00      	cmp	r6, #0
 801d686:	dd06      	ble.n	801d696 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801d688:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801d68c:	790e      	ldrb	r6, [r1, #4]
 801d68e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801d692:	88c9      	ldrh	r1, [r1, #6]
 801d694:	e7f4      	b.n	801d680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 801d696:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801d69a:	b29b      	uxth	r3, r3
 801d69c:	e7c5      	b.n	801d62a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801d69e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801d6a0:	4621      	mov	r1, r4
 801d6a2:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d6a4:	469e      	mov	lr, r3
 801d6a6:	e78e      	b.n	801d5c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 801d6a8:	9a03      	ldr	r2, [sp, #12]
 801d6aa:	ebae 0305 	sub.w	r3, lr, r5
 801d6ae:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d6b2:	442a      	add	r2, r5
 801d6b4:	b29b      	uxth	r3, r3
 801d6b6:	b292      	uxth	r2, r2
 801d6b8:	9203      	str	r2, [sp, #12]
 801d6ba:	2500      	movs	r5, #0
 801d6bc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d6be:	4542      	cmp	r2, r8
 801d6c0:	d88d      	bhi.n	801d5de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 801d6c2:	4621      	mov	r1, r4
 801d6c4:	e74d      	b.n	801d562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 801d6c6:	458e      	cmp	lr, r1
 801d6c8:	f04f 0900 	mov.w	r9, #0
 801d6cc:	bf2b      	itete	cs
 801d6ce:	ebae 0301 	subcs.w	r3, lr, r1
 801d6d2:	eba1 040e 	subcc.w	r4, r1, lr
 801d6d6:	462c      	movcs	r4, r5
 801d6d8:	462b      	movcc	r3, r5
 801d6da:	bf27      	ittee	cs
 801d6dc:	b29b      	uxthcs	r3, r3
 801d6de:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801d6e0:	b2a4      	uxthcc	r4, r4
 801d6e2:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801d6e6:	9a03      	ldr	r2, [sp, #12]
 801d6e8:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801d6ea:	444a      	add	r2, r9
 801d6ec:	4548      	cmp	r0, r9
 801d6ee:	b292      	uxth	r2, r2
 801d6f0:	d074      	beq.n	801d7dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 801d6f2:	2004      	movs	r0, #4
 801d6f4:	445a      	add	r2, fp
 801d6f6:	4605      	mov	r5, r0
 801d6f8:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801d6fc:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d6fe:	fb15 0202 	smlabb	r2, r5, r2, r0
 801d702:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801d704:	5880      	ldr	r0, [r0, r2]
 801d706:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801d70a:	d014      	beq.n	801d736 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801d70c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d710:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801d714:	d112      	bne.n	801d73c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801d716:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d718:	2aff      	cmp	r2, #255	@ 0xff
 801d71a:	d10f      	bne.n	801d73c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801d71c:	0942      	lsrs	r2, r0, #5
 801d71e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801d722:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801d726:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d72a:	f025 0507 	bic.w	r5, r5, #7
 801d72e:	4315      	orrs	r5, r2
 801d730:	4305      	orrs	r5, r0
 801d732:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801d736:	f109 0901 	add.w	r9, r9, #1
 801d73a:	e7d4      	b.n	801d6e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 801d73c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801d740:	b2ed      	uxtb	r5, r5
 801d742:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801d746:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d74a:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801d74e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d752:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801d756:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d75a:	9215      	str	r2, [sp, #84]	@ 0x54
 801d75c:	fa5f fc8c 	uxtb.w	ip, ip
 801d760:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801d762:	b2c0      	uxtb	r0, r0
 801d764:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801d768:	fb02 fa0a 	mul.w	sl, r2, sl
 801d76c:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801d770:	f10a 0201 	add.w	r2, sl, #1
 801d774:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801d778:	1212      	asrs	r2, r2, #8
 801d77a:	fa1f fa82 	uxth.w	sl, r2
 801d77e:	43d2      	mvns	r2, r2
 801d780:	fb16 f60a 	smulbb	r6, r6, sl
 801d784:	b2d2      	uxtb	r2, r2
 801d786:	fb10 f00a 	smulbb	r0, r0, sl
 801d78a:	fb07 6702 	mla	r7, r7, r2, r6
 801d78e:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801d790:	fb0c 0002 	mla	r0, ip, r2, r0
 801d794:	fb15 f50a 	smulbb	r5, r5, sl
 801d798:	b2bf      	uxth	r7, r7
 801d79a:	b280      	uxth	r0, r0
 801d79c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801d7a0:	fb06 5602 	mla	r6, r6, r2, r5
 801d7a4:	1c7a      	adds	r2, r7, #1
 801d7a6:	1c45      	adds	r5, r0, #1
 801d7a8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801d7ac:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801d7b0:	b2b6      	uxth	r6, r6
 801d7b2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801d7b6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801d7ba:	432f      	orrs	r7, r5
 801d7bc:	1c75      	adds	r5, r6, #1
 801d7be:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801d7c2:	096d      	lsrs	r5, r5, #5
 801d7c4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d7c8:	432f      	orrs	r7, r5
 801d7ca:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801d7ce:	e7b2      	b.n	801d736 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801d7d0:	20003984 	.word	0x20003984
 801d7d4:	2000397e 	.word	0x2000397e
 801d7d8:	fffff7fb 	.word	0xfffff7fb
 801d7dc:	9203      	str	r2, [sp, #12]
 801d7de:	458e      	cmp	lr, r1
 801d7e0:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801d7e2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d7e6:	f4ff af68 	bcc.w	801d6ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801d7ea:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801d7ec:	9906      	ldr	r1, [sp, #24]
 801d7ee:	8812      	ldrh	r2, [r2, #0]
 801d7f0:	1a52      	subs	r2, r2, r1
 801d7f2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801d7f4:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801d7f8:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d7fa:	3201      	adds	r2, #1
 801d7fc:	428a      	cmp	r2, r1
 801d7fe:	9209      	str	r2, [sp, #36]	@ 0x24
 801d800:	d111      	bne.n	801d826 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 801d802:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801d806:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801d80a:	9b06      	ldr	r3, [sp, #24]
 801d80c:	eba5 0509 	sub.w	r5, r5, r9
 801d810:	b2ad      	uxth	r5, r5
 801d812:	2d00      	cmp	r5, #0
 801d814:	bf08      	it	eq
 801d816:	4619      	moveq	r1, r3
 801d818:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d81a:	bf18      	it	ne
 801d81c:	2100      	movne	r1, #0
 801d81e:	3301      	adds	r3, #1
 801d820:	b289      	uxth	r1, r1
 801d822:	930d      	str	r3, [sp, #52]	@ 0x34
 801d824:	e694      	b.n	801d550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 801d826:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801d82a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801d82e:	1b2d      	subs	r5, r5, r4
 801d830:	b2ad      	uxth	r5, r5
 801d832:	2d00      	cmp	r5, #0
 801d834:	bf18      	it	ne
 801d836:	2400      	movne	r4, #0
 801d838:	e740      	b.n	801d6bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 801d83a:	4b04      	ldr	r3, [pc, #16]	@ (801d84c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 801d83c:	6818      	ldr	r0, [r3, #0]
 801d83e:	6803      	ldr	r3, [r0, #0]
 801d840:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d842:	4798      	blx	r3
 801d844:	b01d      	add	sp, #116	@ 0x74
 801d846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d84a:	bf00      	nop
 801d84c:	20003984 	.word	0x20003984

0801d850 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801d850:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d854:	b09f      	sub	sp, #124	@ 0x7c
 801d856:	461d      	mov	r5, r3
 801d858:	4604      	mov	r4, r0
 801d85a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d85c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801d860:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801d864:	920a      	str	r2, [sp, #40]	@ 0x28
 801d866:	2a00      	cmp	r2, #0
 801d868:	f000 81fe 	beq.w	801dc68 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 801d86c:	6828      	ldr	r0, [r5, #0]
 801d86e:	aa1a      	add	r2, sp, #104	@ 0x68
 801d870:	6869      	ldr	r1, [r5, #4]
 801d872:	c203      	stmia	r2!, {r0, r1}
 801d874:	6818      	ldr	r0, [r3, #0]
 801d876:	aa1c      	add	r2, sp, #112	@ 0x70
 801d878:	6859      	ldr	r1, [r3, #4]
 801d87a:	c203      	stmia	r2!, {r0, r1}
 801d87c:	a81a      	add	r0, sp, #104	@ 0x68
 801d87e:	f7f8 fbbf 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d882:	4629      	mov	r1, r5
 801d884:	a81c      	add	r0, sp, #112	@ 0x70
 801d886:	f7f8 fbe3 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d88a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801d88e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801d892:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801d896:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801d89a:	bfdb      	ittet	le
 801d89c:	b29a      	uxthle	r2, r3
 801d89e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801d8a2:	2201      	movgt	r2, #1
 801d8a4:	fb91 f2f2 	sdivle	r2, r1, r2
 801d8a8:	9201      	str	r2, [sp, #4]
 801d8aa:	9801      	ldr	r0, [sp, #4]
 801d8ac:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801d8b0:	9901      	ldr	r1, [sp, #4]
 801d8b2:	fb92 f0f0 	sdiv	r0, r2, r0
 801d8b6:	b280      	uxth	r0, r0
 801d8b8:	440e      	add	r6, r1
 801d8ba:	9010      	str	r0, [sp, #64]	@ 0x40
 801d8bc:	3e01      	subs	r6, #1
 801d8be:	9801      	ldr	r0, [sp, #4]
 801d8c0:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801d8c2:	fb05 2510 	mls	r5, r5, r0, r2
 801d8c6:	fb96 f6f1 	sdiv	r6, r6, r1
 801d8ca:	fb15 f503 	smulbb	r5, r5, r3
 801d8ce:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801d8d2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801d8d6:	3601      	adds	r6, #1
 801d8d8:	440d      	add	r5, r1
 801d8da:	4419      	add	r1, r3
 801d8dc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801d8e0:	b2b6      	uxth	r6, r6
 801d8e2:	441a      	add	r2, r3
 801d8e4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801d8e8:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801d8ec:	b2ad      	uxth	r5, r5
 801d8ee:	9304      	str	r3, [sp, #16]
 801d8f0:	4b96      	ldr	r3, [pc, #600]	@ (801db4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801d8f2:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801d8f6:	6818      	ldr	r0, [r3, #0]
 801d8f8:	6803      	ldr	r3, [r0, #0]
 801d8fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d8fc:	4798      	blx	r3
 801d8fe:	4b94      	ldr	r3, [pc, #592]	@ (801db50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 801d900:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801d904:	2d00      	cmp	r5, #0
 801d906:	881a      	ldrh	r2, [r3, #0]
 801d908:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801d90c:	fb02 f707 	mul.w	r7, r2, r7
 801d910:	fb02 c101 	mla	r1, r2, r1, ip
 801d914:	9318      	str	r3, [sp, #96]	@ 0x60
 801d916:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801d91a:	4b8e      	ldr	r3, [pc, #568]	@ (801db54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 801d91c:	bf18      	it	ne
 801d91e:	2100      	movne	r1, #0
 801d920:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801d924:	eba3 0304 	sub.w	r3, r3, r4
 801d928:	920b      	str	r2, [sp, #44]	@ 0x2c
 801d92a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d92c:	9319      	str	r3, [sp, #100]	@ 0x64
 801d92e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801d932:	f106 0204 	add.w	r2, r6, #4
 801d936:	9206      	str	r2, [sp, #24]
 801d938:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801d93a:	ea6f 0202 	mvn.w	r2, r2
 801d93e:	b2d2      	uxtb	r2, r2
 801d940:	9215      	str	r2, [sp, #84]	@ 0x54
 801d942:	9a04      	ldr	r2, [sp, #16]
 801d944:	bf08      	it	eq
 801d946:	4611      	moveq	r1, r2
 801d948:	2200      	movs	r2, #0
 801d94a:	b289      	uxth	r1, r1
 801d94c:	920d      	str	r2, [sp, #52]	@ 0x34
 801d94e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801d950:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d952:	fa12 f383 	uxtah	r3, r2, r3
 801d956:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801d958:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801d95c:	3304      	adds	r3, #4
 801d95e:	9307      	str	r3, [sp, #28]
 801d960:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d962:	455b      	cmp	r3, fp
 801d964:	f240 817b 	bls.w	801dc5e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 801d968:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801d96c:	f04f 0801 	mov.w	r8, #1
 801d970:	9a01      	ldr	r2, [sp, #4]
 801d972:	9807      	ldr	r0, [sp, #28]
 801d974:	46c4      	mov	ip, r8
 801d976:	f8cd 8008 	str.w	r8, [sp, #8]
 801d97a:	7800      	ldrb	r0, [r0, #0]
 801d97c:	fbb5 f3f3 	udiv	r3, r5, r3
 801d980:	1ad3      	subs	r3, r2, r3
 801d982:	9011      	str	r0, [sp, #68]	@ 0x44
 801d984:	3001      	adds	r0, #1
 801d986:	b29b      	uxth	r3, r3
 801d988:	9005      	str	r0, [sp, #20]
 801d98a:	9316      	str	r3, [sp, #88]	@ 0x58
 801d98c:	9b07      	ldr	r3, [sp, #28]
 801d98e:	785a      	ldrb	r2, [r3, #1]
 801d990:	789b      	ldrb	r3, [r3, #2]
 801d992:	021b      	lsls	r3, r3, #8
 801d994:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801d998:	9a07      	ldr	r2, [sp, #28]
 801d99a:	78d2      	ldrb	r2, [r2, #3]
 801d99c:	4313      	orrs	r3, r2
 801d99e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801d9a0:	441a      	add	r2, r3
 801d9a2:	1c50      	adds	r0, r2, #1
 801d9a4:	7852      	ldrb	r2, [r2, #1]
 801d9a6:	9003      	str	r0, [sp, #12]
 801d9a8:	0212      	lsls	r2, r2, #8
 801d9aa:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801d9ac:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801d9b0:	5cc3      	ldrb	r3, [r0, r3]
 801d9b2:	431a      	orrs	r2, r3
 801d9b4:	b293      	uxth	r3, r2
 801d9b6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801d9ba:	930c      	str	r3, [sp, #48]	@ 0x30
 801d9bc:	2300      	movs	r3, #0
 801d9be:	9308      	str	r3, [sp, #32]
 801d9c0:	461a      	mov	r2, r3
 801d9c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801d9c6:	930e      	str	r3, [sp, #56]	@ 0x38
 801d9c8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801d9cc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d9ce:	2d00      	cmp	r5, #0
 801d9d0:	d07d      	beq.n	801dace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 801d9d2:	45ac      	cmp	ip, r5
 801d9d4:	d26d      	bcs.n	801dab2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 801d9d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d9d8:	eba5 050c 	sub.w	r5, r5, ip
 801d9dc:	4608      	mov	r0, r1
 801d9de:	455b      	cmp	r3, fp
 801d9e0:	b2ad      	uxth	r5, r5
 801d9e2:	d802      	bhi.n	801d9ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801d9e4:	e071      	b.n	801daca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801d9e6:	2b00      	cmp	r3, #0
 801d9e8:	d15d      	bne.n	801daa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801d9ea:	9b03      	ldr	r3, [sp, #12]
 801d9ec:	9a02      	ldr	r2, [sp, #8]
 801d9ee:	785b      	ldrb	r3, [r3, #1]
 801d9f0:	f1c2 0207 	rsb	r2, r2, #7
 801d9f4:	9902      	ldr	r1, [sp, #8]
 801d9f6:	4093      	lsls	r3, r2
 801d9f8:	005b      	lsls	r3, r3, #1
 801d9fa:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801d9fe:	9b03      	ldr	r3, [sp, #12]
 801da00:	781b      	ldrb	r3, [r3, #0]
 801da02:	410b      	asrs	r3, r1
 801da04:	3101      	adds	r1, #1
 801da06:	b2c9      	uxtb	r1, r1
 801da08:	b2db      	uxtb	r3, r3
 801da0a:	2908      	cmp	r1, #8
 801da0c:	9102      	str	r1, [sp, #8]
 801da0e:	9903      	ldr	r1, [sp, #12]
 801da10:	ea43 0302 	orr.w	r3, r3, r2
 801da14:	bf0c      	ite	eq
 801da16:	3102      	addeq	r1, #2
 801da18:	3101      	addne	r1, #1
 801da1a:	b29a      	uxth	r2, r3
 801da1c:	bf05      	ittet	eq
 801da1e:	9103      	streq	r1, [sp, #12]
 801da20:	2100      	moveq	r1, #0
 801da22:	9103      	strne	r1, [sp, #12]
 801da24:	9102      	streq	r1, [sp, #8]
 801da26:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801da28:	4291      	cmp	r1, r2
 801da2a:	d30a      	bcc.n	801da42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801da2c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801da30:	2301      	movs	r3, #1
 801da32:	9905      	ldr	r1, [sp, #20]
 801da34:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801da38:	d30f      	bcc.n	801da5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 801da3a:	2100      	movs	r1, #0
 801da3c:	4698      	mov	r8, r3
 801da3e:	9100      	str	r1, [sp, #0]
 801da40:	e032      	b.n	801daa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 801da42:	9b05      	ldr	r3, [sp, #20]
 801da44:	429a      	cmp	r2, r3
 801da46:	d318      	bcc.n	801da7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 801da48:	eb04 0308 	add.w	r3, r4, r8
 801da4c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801da50:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801da54:	f108 0301 	add.w	r3, r8, #1
 801da58:	b29b      	uxth	r3, r3
 801da5a:	9905      	ldr	r1, [sp, #20]
 801da5c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801da60:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801da64:	710e      	strb	r6, [r1, #4]
 801da66:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801da68:	80ce      	strh	r6, [r1, #6]
 801da6a:	f108 0601 	add.w	r6, r8, #1
 801da6e:	714e      	strb	r6, [r1, #5]
 801da70:	9905      	ldr	r1, [sp, #20]
 801da72:	3101      	adds	r1, #1
 801da74:	b289      	uxth	r1, r1
 801da76:	9105      	str	r1, [sp, #20]
 801da78:	e7df      	b.n	801da3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801da7a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801da7e:	4611      	mov	r1, r2
 801da80:	795b      	ldrb	r3, [r3, #5]
 801da82:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801da86:	4426      	add	r6, r4
 801da88:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801da8a:	4437      	add	r7, r6
 801da8c:	2f00      	cmp	r7, #0
 801da8e:	dd06      	ble.n	801da9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 801da90:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801da94:	790f      	ldrb	r7, [r1, #4]
 801da96:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801da9a:	88c9      	ldrh	r1, [r1, #6]
 801da9c:	e7f4      	b.n	801da88 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 801da9e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801daa2:	b29b      	uxth	r3, r3
 801daa4:	e7c5      	b.n	801da32 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801daa6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801daa8:	920c      	str	r2, [sp, #48]	@ 0x30
 801daaa:	4601      	mov	r1, r0
 801daac:	9a00      	ldr	r2, [sp, #0]
 801daae:	469c      	mov	ip, r3
 801dab0:	e78d      	b.n	801d9ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801dab2:	ebac 0305 	sub.w	r3, ip, r5
 801dab6:	1957      	adds	r7, r2, r5
 801dab8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801dabc:	b2ba      	uxth	r2, r7
 801dabe:	b29b      	uxth	r3, r3
 801dac0:	9200      	str	r2, [sp, #0]
 801dac2:	2500      	movs	r5, #0
 801dac4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801dac6:	455a      	cmp	r2, fp
 801dac8:	d88d      	bhi.n	801d9e6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801daca:	4601      	mov	r1, r0
 801dacc:	e748      	b.n	801d960 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 801dace:	458c      	cmp	ip, r1
 801dad0:	bf27      	ittee	cs
 801dad2:	ebac 0301 	subcs.w	r3, ip, r1
 801dad6:	4628      	movcs	r0, r5
 801dad8:	eba1 000c 	subcc.w	r0, r1, ip
 801dadc:	462b      	movcc	r3, r5
 801dade:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801dae0:	bf27      	ittee	cs
 801dae2:	b29b      	uxthcs	r3, r3
 801dae4:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801dae6:	b280      	uxthcc	r0, r0
 801dae8:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801daec:	2dff      	cmp	r5, #255	@ 0xff
 801daee:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801daf0:	eb02 0705 	add.w	r7, r2, r5
 801daf4:	b2bd      	uxth	r5, r7
 801daf6:	9500      	str	r5, [sp, #0]
 801daf8:	d12e      	bne.n	801db58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801dafa:	465e      	mov	r6, fp
 801dafc:	9d00      	ldr	r5, [sp, #0]
 801dafe:	42aa      	cmp	r2, r5
 801db00:	f040 8083 	bne.w	801dc0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 801db04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801db06:	458c      	cmp	ip, r1
 801db08:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801db0c:	d3d9      	bcc.n	801dac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801db0e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801db10:	9904      	ldr	r1, [sp, #16]
 801db12:	8812      	ldrh	r2, [r2, #0]
 801db14:	1a52      	subs	r2, r2, r1
 801db16:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801db18:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801db1c:	9a08      	ldr	r2, [sp, #32]
 801db1e:	3201      	adds	r2, #1
 801db20:	428a      	cmp	r2, r1
 801db22:	9208      	str	r2, [sp, #32]
 801db24:	f040 8091 	bne.w	801dc4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 801db28:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801db2c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801db30:	9b04      	ldr	r3, [sp, #16]
 801db32:	eba5 050c 	sub.w	r5, r5, ip
 801db36:	b2ad      	uxth	r5, r5
 801db38:	2d00      	cmp	r5, #0
 801db3a:	bf08      	it	eq
 801db3c:	4619      	moveq	r1, r3
 801db3e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801db40:	bf18      	it	ne
 801db42:	2100      	movne	r1, #0
 801db44:	3301      	adds	r3, #1
 801db46:	b289      	uxth	r1, r1
 801db48:	930d      	str	r3, [sp, #52]	@ 0x34
 801db4a:	e700      	b.n	801d94e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 801db4c:	20003984 	.word	0x20003984
 801db50:	2000397e 	.word	0x2000397e
 801db54:	fffff7fb 	.word	0xfffff7fb
 801db58:	46d9      	mov	r9, fp
 801db5a:	9d00      	ldr	r5, [sp, #0]
 801db5c:	42aa      	cmp	r2, r5
 801db5e:	d0d1      	beq.n	801db04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 801db60:	1c55      	adds	r5, r2, #1
 801db62:	4422      	add	r2, r4
 801db64:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801db68:	9a06      	ldr	r2, [sp, #24]
 801db6a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801db6e:	9517      	str	r5, [sp, #92]	@ 0x5c
 801db70:	4472      	add	r2, lr
 801db72:	9212      	str	r2, [sp, #72]	@ 0x48
 801db74:	f8b9 2000 	ldrh.w	r2, [r9]
 801db78:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801db7a:	1216      	asrs	r6, r2, #8
 801db7c:	f897 a002 	ldrb.w	sl, [r7, #2]
 801db80:	10d5      	asrs	r5, r2, #3
 801db82:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801db84:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801db88:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801db8c:	00d2      	lsls	r2, r2, #3
 801db8e:	fb1a fa07 	smulbb	sl, sl, r7
 801db92:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801db96:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801db98:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801db9c:	b2d2      	uxtb	r2, r2
 801db9e:	fb06 a607 	mla	r6, r6, r7, sl
 801dba2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801dba4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dba8:	f897 a001 	ldrb.w	sl, [r7, #1]
 801dbac:	b2b6      	uxth	r6, r6
 801dbae:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801dbb0:	fb1a fa07 	smulbb	sl, sl, r7
 801dbb4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801dbb6:	fb05 a507 	mla	r5, r5, r7, sl
 801dbba:	9f06      	ldr	r7, [sp, #24]
 801dbbc:	f106 0a01 	add.w	sl, r6, #1
 801dbc0:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801dbc4:	b2ad      	uxth	r5, r5
 801dbc6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801dbc8:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801dbcc:	f105 0a01 	add.w	sl, r5, #1
 801dbd0:	fb1e fe07 	smulbb	lr, lr, r7
 801dbd4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801dbd6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801dbda:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801dbde:	fb02 e207 	mla	r2, r2, r7, lr
 801dbe2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801dbe6:	b292      	uxth	r2, r2
 801dbe8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801dbec:	f102 0e01 	add.w	lr, r2, #1
 801dbf0:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801dbf4:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801dbf8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801dbfc:	ea4e 0606 	orr.w	r6, lr, r6
 801dc00:	ea46 060a 	orr.w	r6, r6, sl
 801dc04:	f829 6b02 	strh.w	r6, [r9], #2
 801dc08:	e7a7      	b.n	801db5a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801dc0a:	f102 0e01 	add.w	lr, r2, #1
 801dc0e:	4422      	add	r2, r4
 801dc10:	9f06      	ldr	r7, [sp, #24]
 801dc12:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801dc16:	9a06      	ldr	r2, [sp, #24]
 801dc18:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801dc1c:	eb02 0a05 	add.w	sl, r2, r5
 801dc20:	4a13      	ldr	r2, [pc, #76]	@ (801dc70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 801dc22:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801dc26:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801dc2a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801dc2e:	00d2      	lsls	r2, r2, #3
 801dc30:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dc34:	ea49 0202 	orr.w	r2, r9, r2
 801dc38:	f817 9005 	ldrb.w	r9, [r7, r5]
 801dc3c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801dc40:	f826 2b02 	strh.w	r2, [r6], #2
 801dc44:	fa1f f28e 	uxth.w	r2, lr
 801dc48:	e758      	b.n	801dafc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801dc4a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801dc4e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801dc52:	1a2d      	subs	r5, r5, r0
 801dc54:	b2ad      	uxth	r5, r5
 801dc56:	2d00      	cmp	r5, #0
 801dc58:	bf18      	it	ne
 801dc5a:	2000      	movne	r0, #0
 801dc5c:	e732      	b.n	801dac4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801dc5e:	4b05      	ldr	r3, [pc, #20]	@ (801dc74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 801dc60:	6818      	ldr	r0, [r3, #0]
 801dc62:	6803      	ldr	r3, [r0, #0]
 801dc64:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801dc66:	4798      	blx	r3
 801dc68:	b01f      	add	sp, #124	@ 0x7c
 801dc6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dc6e:	bf00      	nop
 801dc70:	fffff800 	.word	0xfffff800
 801dc74:	20003984 	.word	0x20003984

0801dc78 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801dc78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc7c:	b091      	sub	sp, #68	@ 0x44
 801dc7e:	469b      	mov	fp, r3
 801dc80:	4616      	mov	r6, r2
 801dc82:	f9b3 2000 	ldrsh.w	r2, [r3]
 801dc86:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801dc8a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801dc8e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801dc92:	4604      	mov	r4, r0
 801dc94:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801dc98:	4640      	mov	r0, r8
 801dc9a:	460d      	mov	r5, r1
 801dc9c:	4659      	mov	r1, fp
 801dc9e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801dca2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801dca6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801dcaa:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801dcae:	f7f4 fb45 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 801dcb2:	4631      	mov	r1, r6
 801dcb4:	4640      	mov	r0, r8
 801dcb6:	f7f4 fb41 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 801dcba:	4b74      	ldr	r3, [pc, #464]	@ (801de8c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801dcbc:	8818      	ldrh	r0, [r3, #0]
 801dcbe:	4b74      	ldr	r3, [pc, #464]	@ (801de90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801dcc0:	b202      	sxth	r2, r0
 801dcc2:	8819      	ldrh	r1, [r3, #0]
 801dcc4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801dcc8:	b20e      	sxth	r6, r1
 801dcca:	2b00      	cmp	r3, #0
 801dccc:	da07      	bge.n	801dcde <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801dcce:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801dcd2:	4463      	add	r3, ip
 801dcd4:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801dcd8:	2300      	movs	r3, #0
 801dcda:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801dcde:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801dce2:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801dce6:	1ad2      	subs	r2, r2, r3
 801dce8:	4594      	cmp	ip, r2
 801dcea:	bfc4      	itt	gt
 801dcec:	1ac2      	subgt	r2, r0, r3
 801dcee:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801dcf2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801dcf6:	2a00      	cmp	r2, #0
 801dcf8:	da07      	bge.n	801dd0a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801dcfa:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801dcfe:	4462      	add	r2, ip
 801dd00:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801dd04:	2200      	movs	r2, #0
 801dd06:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801dd0a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801dd0e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801dd12:	eba6 060a 	sub.w	r6, r6, sl
 801dd16:	42b2      	cmp	r2, r6
 801dd18:	bfc4      	itt	gt
 801dd1a:	eba1 020a 	subgt.w	r2, r1, sl
 801dd1e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801dd22:	4a5c      	ldr	r2, [pc, #368]	@ (801de94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801dd24:	7812      	ldrb	r2, [r2, #0]
 801dd26:	b9a2      	cbnz	r2, 801dd52 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801dd28:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801dd2c:	4286      	cmp	r6, r0
 801dd2e:	4640      	mov	r0, r8
 801dd30:	9303      	str	r3, [sp, #12]
 801dd32:	bf14      	ite	ne
 801dd34:	2600      	movne	r6, #0
 801dd36:	2601      	moveq	r6, #1
 801dd38:	f7f4 fb43 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dd3c:	9b03      	ldr	r3, [sp, #12]
 801dd3e:	b160      	cbz	r0, 801dd5a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801dd40:	2300      	movs	r3, #0
 801dd42:	8023      	strh	r3, [r4, #0]
 801dd44:	8063      	strh	r3, [r4, #2]
 801dd46:	80a3      	strh	r3, [r4, #4]
 801dd48:	4620      	mov	r0, r4
 801dd4a:	80e3      	strh	r3, [r4, #6]
 801dd4c:	b011      	add	sp, #68	@ 0x44
 801dd4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd52:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801dd56:	428e      	cmp	r6, r1
 801dd58:	e7e9      	b.n	801dd2e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801dd5a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801dd5e:	a90e      	add	r1, sp, #56	@ 0x38
 801dd60:	900e      	str	r0, [sp, #56]	@ 0x38
 801dd62:	a80c      	add	r0, sp, #48	@ 0x30
 801dd64:	9205      	str	r2, [sp, #20]
 801dd66:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801dd6a:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801dd6e:	9206      	str	r2, [sp, #24]
 801dd70:	f8bb 2000 	ldrh.w	r2, [fp]
 801dd74:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801dd78:	1a9b      	subs	r3, r3, r2
 801dd7a:	b21b      	sxth	r3, r3
 801dd7c:	9303      	str	r3, [sp, #12]
 801dd7e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dd82:	f8df b118 	ldr.w	fp, [pc, #280]	@ 801de9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801dd86:	ebaa 0a03 	sub.w	sl, sl, r3
 801dd8a:	fa0f f38a 	sxth.w	r3, sl
 801dd8e:	9304      	str	r3, [sp, #16]
 801dd90:	9b03      	ldr	r3, [sp, #12]
 801dd92:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801dd96:	9b04      	ldr	r3, [sp, #16]
 801dd98:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801dd9c:	9b05      	ldr	r3, [sp, #20]
 801dd9e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801dda2:	9b06      	ldr	r3, [sp, #24]
 801dda4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801dda8:	f7f8 f952 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ddac:	4640      	mov	r0, r8
 801ddae:	f7f8 f927 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddb2:	a80e      	add	r0, sp, #56	@ 0x38
 801ddb4:	f7f8 f924 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ddb8:	4b37      	ldr	r3, [pc, #220]	@ (801de98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801ddba:	4628      	mov	r0, r5
 801ddbc:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801ddc0:	881b      	ldrh	r3, [r3, #0]
 801ddc2:	9307      	str	r3, [sp, #28]
 801ddc4:	682b      	ldr	r3, [r5, #0]
 801ddc6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801ddc8:	4798      	blx	r3
 801ddca:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801ddce:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801ddd2:	4681      	mov	r9, r0
 801ddd4:	f8db 0000 	ldr.w	r0, [fp]
 801ddd8:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801dddc:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801ddde:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801dde2:	6803      	ldr	r3, [r0, #0]
 801dde4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801dde6:	4798      	blx	r3
 801dde8:	4607      	mov	r7, r0
 801ddea:	f8db 0000 	ldr.w	r0, [fp]
 801ddee:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801ddf2:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ddf6:	6803      	ldr	r3, [r0, #0]
 801ddf8:	9109      	str	r1, [sp, #36]	@ 0x24
 801ddfa:	9208      	str	r2, [sp, #32]
 801ddfc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ddfe:	4798      	blx	r3
 801de00:	f010 0f01 	tst.w	r0, #1
 801de04:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801de08:	d012      	beq.n	801de30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801de0a:	f8db 0000 	ldr.w	r0, [fp]
 801de0e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801de12:	6803      	ldr	r3, [r0, #0]
 801de14:	9200      	str	r2, [sp, #0]
 801de16:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801de18:	462b      	mov	r3, r5
 801de1a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801de1e:	47b0      	blx	r6
 801de20:	9b03      	ldr	r3, [sp, #12]
 801de22:	8023      	strh	r3, [r4, #0]
 801de24:	9b04      	ldr	r3, [sp, #16]
 801de26:	8063      	strh	r3, [r4, #2]
 801de28:	9b05      	ldr	r3, [sp, #20]
 801de2a:	80a3      	strh	r3, [r4, #4]
 801de2c:	9b06      	ldr	r3, [sp, #24]
 801de2e:	e78b      	b.n	801dd48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801de30:	fb09 f202 	mul.w	r2, r9, r2
 801de34:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801de38:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801de3c:	440f      	add	r7, r1
 801de3e:	b166      	cbz	r6, 801de5a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801de40:	9a07      	ldr	r2, [sp, #28]
 801de42:	4592      	cmp	sl, r2
 801de44:	d109      	bne.n	801de5a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801de46:	f8db 0000 	ldr.w	r0, [fp]
 801de4a:	fb09 f303 	mul.w	r3, r9, r3
 801de4e:	4629      	mov	r1, r5
 801de50:	6802      	ldr	r2, [r0, #0]
 801de52:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801de54:	463a      	mov	r2, r7
 801de56:	47b0      	blx	r6
 801de58:	e7e2      	b.n	801de20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801de5a:	fb0a f303 	mul.w	r3, sl, r3
 801de5e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801de62:	f8df b038 	ldr.w	fp, [pc, #56]	@ 801de9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801de66:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801de6a:	4545      	cmp	r5, r8
 801de6c:	d2d8      	bcs.n	801de20 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801de6e:	f8db 0000 	ldr.w	r0, [fp]
 801de72:	4629      	mov	r1, r5
 801de74:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801de78:	4435      	add	r5, r6
 801de7a:	6802      	ldr	r2, [r0, #0]
 801de7c:	005b      	lsls	r3, r3, #1
 801de7e:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801de82:	463a      	mov	r2, r7
 801de84:	47d0      	blx	sl
 801de86:	444f      	add	r7, r9
 801de88:	e7ef      	b.n	801de6a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801de8a:	bf00      	nop
 801de8c:	20003978 	.word	0x20003978
 801de90:	2000397a 	.word	0x2000397a
 801de94:	2000397c 	.word	0x2000397c
 801de98:	2000397e 	.word	0x2000397e
 801de9c:	20003984 	.word	0x20003984

0801dea0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801dea0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801dea2:	4606      	mov	r6, r0
 801dea4:	b087      	sub	sp, #28
 801dea6:	460c      	mov	r4, r1
 801dea8:	4617      	mov	r7, r2
 801deaa:	461d      	mov	r5, r3
 801deac:	b333      	cbz	r3, 801defc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801deae:	4608      	mov	r0, r1
 801deb0:	f7f4 fa87 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801deb4:	bb10      	cbnz	r0, 801defc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801deb6:	6820      	ldr	r0, [r4, #0]
 801deb8:	ab04      	add	r3, sp, #16
 801deba:	6861      	ldr	r1, [r4, #4]
 801debc:	4c1b      	ldr	r4, [pc, #108]	@ (801df2c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801debe:	c303      	stmia	r3!, {r0, r1}
 801dec0:	a804      	add	r0, sp, #16
 801dec2:	f7f8 f89d 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801dec6:	6820      	ldr	r0, [r4, #0]
 801dec8:	6803      	ldr	r3, [r0, #0]
 801deca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801decc:	4798      	blx	r3
 801dece:	2dff      	cmp	r5, #255	@ 0xff
 801ded0:	d016      	beq.n	801df00 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ded2:	f010 0f08 	tst.w	r0, #8
 801ded6:	6820      	ldr	r0, [r4, #0]
 801ded8:	d015      	beq.n	801df06 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801deda:	2400      	movs	r4, #0
 801dedc:	6801      	ldr	r1, [r0, #0]
 801dede:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801dee2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dee6:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801deea:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801deee:	9401      	str	r4, [sp, #4]
 801def0:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801def4:	9400      	str	r4, [sp, #0]
 801def6:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801def8:	4639      	mov	r1, r7
 801defa:	47a0      	blx	r4
 801defc:	b007      	add	sp, #28
 801defe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801df00:	f010 0f02 	tst.w	r0, #2
 801df04:	e7e7      	b.n	801ded6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801df06:	6803      	ldr	r3, [r0, #0]
 801df08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801df0a:	4798      	blx	r3
 801df0c:	4b08      	ldr	r3, [pc, #32]	@ (801df30 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801df0e:	4601      	mov	r1, r0
 801df10:	4630      	mov	r0, r6
 801df12:	881a      	ldrh	r2, [r3, #0]
 801df14:	6833      	ldr	r3, [r6, #0]
 801df16:	e9cd 7500 	strd	r7, r5, [sp]
 801df1a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801df1c:	ab04      	add	r3, sp, #16
 801df1e:	47a8      	blx	r5
 801df20:	6820      	ldr	r0, [r4, #0]
 801df22:	6803      	ldr	r3, [r0, #0]
 801df24:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801df26:	4798      	blx	r3
 801df28:	e7e8      	b.n	801defc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801df2a:	bf00      	nop
 801df2c:	20003984 	.word	0x20003984
 801df30:	2000397e 	.word	0x2000397e

0801df34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801df34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801df38:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801df3c:	4688      	mov	r8, r1
 801df3e:	4614      	mov	r4, r2
 801df40:	461d      	mov	r5, r3
 801df42:	9e08      	ldr	r6, [sp, #32]
 801df44:	2f00      	cmp	r7, #0
 801df46:	f000 80ab 	beq.w	801e0a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801df4a:	4618      	mov	r0, r3
 801df4c:	f7f4 fa39 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801df50:	2800      	cmp	r0, #0
 801df52:	f040 80a5 	bne.w	801e0a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801df56:	f9b5 1000 	ldrsh.w	r1, [r5]
 801df5a:	2fff      	cmp	r7, #255	@ 0xff
 801df5c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801df60:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801df64:	fb04 1303 	mla	r3, r4, r3, r1
 801df68:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801df6c:	eba4 0200 	sub.w	r2, r4, r0
 801df70:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801df74:	fb04 f505 	mul.w	r5, r4, r5
 801df78:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801df7c:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801df80:	d04a      	beq.n	801e018 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801df82:	b2bc      	uxth	r4, r7
 801df84:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801df88:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801df8c:	fa5f f788 	uxtb.w	r7, r8
 801df90:	b2f3      	uxtb	r3, r6
 801df92:	0040      	lsls	r0, r0, #1
 801df94:	fb0e fe04 	mul.w	lr, lr, r4
 801df98:	4367      	muls	r7, r4
 801df9a:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801df9e:	4363      	muls	r3, r4
 801dfa0:	fa1f fc8c 	uxth.w	ip, ip
 801dfa4:	42a9      	cmp	r1, r5
 801dfa6:	d27b      	bcs.n	801e0a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801dfa8:	eb01 0900 	add.w	r9, r1, r0
 801dfac:	4549      	cmp	r1, r9
 801dfae:	d231      	bcs.n	801e014 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801dfb0:	880a      	ldrh	r2, [r1, #0]
 801dfb2:	1214      	asrs	r4, r2, #8
 801dfb4:	10d6      	asrs	r6, r2, #3
 801dfb6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801dfba:	00d2      	lsls	r2, r2, #3
 801dfbc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801dfc0:	b2d2      	uxtb	r2, r2
 801dfc2:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dfc6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801dfca:	fb14 f40c 	smulbb	r4, r4, ip
 801dfce:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801dfd2:	fb12 f20c 	smulbb	r2, r2, ip
 801dfd6:	fb16 f60c 	smulbb	r6, r6, ip
 801dfda:	4474      	add	r4, lr
 801dfdc:	441a      	add	r2, r3
 801dfde:	b2a4      	uxth	r4, r4
 801dfe0:	443e      	add	r6, r7
 801dfe2:	b292      	uxth	r2, r2
 801dfe4:	f104 0a01 	add.w	sl, r4, #1
 801dfe8:	b2b6      	uxth	r6, r6
 801dfea:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801dfee:	f102 0a01 	add.w	sl, r2, #1
 801dff2:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801dff6:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801dffa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dffe:	4322      	orrs	r2, r4
 801e000:	1c74      	adds	r4, r6, #1
 801e002:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801e006:	0976      	lsrs	r6, r6, #5
 801e008:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801e00c:	4332      	orrs	r2, r6
 801e00e:	f821 2b02 	strh.w	r2, [r1], #2
 801e012:	e7cb      	b.n	801dfac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801e014:	4441      	add	r1, r8
 801e016:	e7c5      	b.n	801dfa4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801e018:	0973      	lsrs	r3, r6, #5
 801e01a:	4f22      	ldr	r7, [pc, #136]	@ (801e0a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801e01c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801e020:	ea08 0707 	and.w	r7, r8, r7
 801e024:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e028:	433b      	orrs	r3, r7
 801e02a:	07e7      	lsls	r7, r4, #31
 801e02c:	ea43 0306 	orr.w	r3, r3, r6
 801e030:	b29b      	uxth	r3, r3
 801e032:	d50b      	bpl.n	801e04c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801e034:	0040      	lsls	r0, r0, #1
 801e036:	0052      	lsls	r2, r2, #1
 801e038:	42a9      	cmp	r1, r5
 801e03a:	d231      	bcs.n	801e0a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801e03c:	180c      	adds	r4, r1, r0
 801e03e:	42a1      	cmp	r1, r4
 801e040:	d202      	bcs.n	801e048 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801e042:	f821 3b02 	strh.w	r3, [r1], #2
 801e046:	e7fa      	b.n	801e03e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801e048:	4411      	add	r1, r2
 801e04a:	e7f5      	b.n	801e038 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801e04c:	078e      	lsls	r6, r1, #30
 801e04e:	d008      	beq.n	801e062 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801e050:	0066      	lsls	r6, r4, #1
 801e052:	460a      	mov	r2, r1
 801e054:	42aa      	cmp	r2, r5
 801e056:	d202      	bcs.n	801e05e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801e058:	8013      	strh	r3, [r2, #0]
 801e05a:	4432      	add	r2, r6
 801e05c:	e7fa      	b.n	801e054 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801e05e:	3102      	adds	r1, #2
 801e060:	3801      	subs	r0, #1
 801e062:	07c2      	lsls	r2, r0, #31
 801e064:	d50b      	bpl.n	801e07e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801e066:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801e06a:	0066      	lsls	r6, r4, #1
 801e06c:	3a01      	subs	r2, #1
 801e06e:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801e072:	42aa      	cmp	r2, r5
 801e074:	d202      	bcs.n	801e07c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801e076:	8013      	strh	r3, [r2, #0]
 801e078:	4432      	add	r2, r6
 801e07a:	e7fa      	b.n	801e072 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801e07c:	3801      	subs	r0, #1
 801e07e:	b178      	cbz	r0, 801e0a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801e080:	1040      	asrs	r0, r0, #1
 801e082:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801e086:	0080      	lsls	r0, r0, #2
 801e088:	0064      	lsls	r4, r4, #1
 801e08a:	42a9      	cmp	r1, r5
 801e08c:	d208      	bcs.n	801e0a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801e08e:	180e      	adds	r6, r1, r0
 801e090:	460a      	mov	r2, r1
 801e092:	42b2      	cmp	r2, r6
 801e094:	d202      	bcs.n	801e09c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801e096:	f842 3b04 	str.w	r3, [r2], #4
 801e09a:	e7fa      	b.n	801e092 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801e09c:	4421      	add	r1, r4
 801e09e:	e7f4      	b.n	801e08a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801e0a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e0a4:	00fff800 	.word	0x00fff800

0801e0a8 <_ZN8touchgfx8LCD16bppC1Ev>:
 801e0a8:	2200      	movs	r2, #0
 801e0aa:	4912      	ldr	r1, [pc, #72]	@ (801e0f4 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801e0ac:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801e0b0:	6001      	str	r1, [r0, #0]
 801e0b2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801e0b6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801e0ba:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801e0be:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801e0c2:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801e0c6:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801e0ca:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801e0ce:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801e0d2:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801e0d6:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801e0da:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801e0de:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801e0e2:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801e0e6:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801e0ea:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801e0ee:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801e0f2:	4770      	bx	lr
 801e0f4:	0802b0cc 	.word	0x0802b0cc

0801e0f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801e0f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0fc:	b08d      	sub	sp, #52	@ 0x34
 801e0fe:	460d      	mov	r5, r1
 801e100:	4604      	mov	r4, r0
 801e102:	4699      	mov	r9, r3
 801e104:	6808      	ldr	r0, [r1, #0]
 801e106:	ab08      	add	r3, sp, #32
 801e108:	6849      	ldr	r1, [r1, #4]
 801e10a:	c303      	stmia	r3!, {r0, r1}
 801e10c:	6810      	ldr	r0, [r2, #0]
 801e10e:	ab0a      	add	r3, sp, #40	@ 0x28
 801e110:	6851      	ldr	r1, [r2, #4]
 801e112:	c303      	stmia	r3!, {r0, r1}
 801e114:	a808      	add	r0, sp, #32
 801e116:	f7f7 ff73 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e11a:	4629      	mov	r1, r5
 801e11c:	a80a      	add	r0, sp, #40	@ 0x28
 801e11e:	4d67      	ldr	r5, [pc, #412]	@ (801e2bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e120:	f7f7 ff96 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e124:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801e128:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801e12c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801e130:	6828      	ldr	r0, [r5, #0]
 801e132:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e136:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801e13a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801e13e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e142:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801e146:	440a      	add	r2, r1
 801e148:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801e14c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801e150:	4413      	add	r3, r2
 801e152:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801e156:	6803      	ldr	r3, [r0, #0]
 801e158:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801e15a:	4798      	blx	r3
 801e15c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e160:	d119      	bne.n	801e196 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801e162:	f010 0f20 	tst.w	r0, #32
 801e166:	6828      	ldr	r0, [r5, #0]
 801e168:	d018      	beq.n	801e19c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801e16a:	2500      	movs	r5, #0
 801e16c:	6801      	ldr	r1, [r0, #0]
 801e16e:	b2b6      	uxth	r6, r6
 801e170:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801e174:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801e178:	9601      	str	r6, [sp, #4]
 801e17a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801e17e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801e182:	9502      	str	r5, [sp, #8]
 801e184:	fa1f f588 	uxth.w	r5, r8
 801e188:	9500      	str	r5, [sp, #0]
 801e18a:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801e18c:	4621      	mov	r1, r4
 801e18e:	47a8      	blx	r5
 801e190:	b00d      	add	sp, #52	@ 0x34
 801e192:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e196:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801e19a:	e7e4      	b.n	801e166 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801e19c:	6803      	ldr	r3, [r0, #0]
 801e19e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e1a0:	4798      	blx	r3
 801e1a2:	4947      	ldr	r1, [pc, #284]	@ (801e2c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801e1a4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801e1a8:	880b      	ldrh	r3, [r1, #0]
 801e1aa:	468a      	mov	sl, r1
 801e1ac:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801e1b0:	fb03 5202 	mla	r2, r3, r2, r5
 801e1b4:	4373      	muls	r3, r6
 801e1b6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e1ba:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e1be:	9307      	str	r3, [sp, #28]
 801e1c0:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801e1c4:	9306      	str	r3, [sp, #24]
 801e1c6:	9b07      	ldr	r3, [sp, #28]
 801e1c8:	4298      	cmp	r0, r3
 801e1ca:	d270      	bcs.n	801e2ae <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801e1cc:	9b06      	ldr	r3, [sp, #24]
 801e1ce:	4621      	mov	r1, r4
 801e1d0:	eb00 0b03 	add.w	fp, r0, r3
 801e1d4:	4558      	cmp	r0, fp
 801e1d6:	d25d      	bcs.n	801e294 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801e1d8:	f851 4b04 	ldr.w	r4, [r1], #4
 801e1dc:	0e23      	lsrs	r3, r4, #24
 801e1de:	d014      	beq.n	801e20a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e1e0:	2bff      	cmp	r3, #255	@ 0xff
 801e1e2:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801e1e6:	d112      	bne.n	801e20e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e1e8:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801e1ec:	d10f      	bne.n	801e20e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801e1ee:	0963      	lsrs	r3, r4, #5
 801e1f0:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801e1f4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801e1f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e1fc:	f02c 0c07 	bic.w	ip, ip, #7
 801e200:	ea43 0c0c 	orr.w	ip, r3, ip
 801e204:	ea4c 0404 	orr.w	r4, ip, r4
 801e208:	8004      	strh	r4, [r0, #0]
 801e20a:	3002      	adds	r0, #2
 801e20c:	e7e2      	b.n	801e1d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801e20e:	fb09 f303 	mul.w	r3, r9, r3
 801e212:	8807      	ldrh	r7, [r0, #0]
 801e214:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801e218:	fa5f fc8c 	uxtb.w	ip, ip
 801e21c:	1c5a      	adds	r2, r3, #1
 801e21e:	123e      	asrs	r6, r7, #8
 801e220:	10fd      	asrs	r5, r7, #3
 801e222:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801e226:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801e22a:	00ff      	lsls	r7, r7, #3
 801e22c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e230:	1212      	asrs	r2, r2, #8
 801e232:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e236:	b293      	uxth	r3, r2
 801e238:	43d2      	mvns	r2, r2
 801e23a:	b2ff      	uxtb	r7, r7
 801e23c:	fb1e fe03 	smulbb	lr, lr, r3
 801e240:	b2d2      	uxtb	r2, r2
 801e242:	fb1c fc03 	smulbb	ip, ip, r3
 801e246:	b2e4      	uxtb	r4, r4
 801e248:	fb06 e602 	mla	r6, r6, r2, lr
 801e24c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e250:	fb14 f403 	smulbb	r4, r4, r3
 801e254:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801e258:	b2b6      	uxth	r6, r6
 801e25a:	fb05 c502 	mla	r5, r5, r2, ip
 801e25e:	fb07 4702 	mla	r7, r7, r2, r4
 801e262:	f106 0e01 	add.w	lr, r6, #1
 801e266:	b2ad      	uxth	r5, r5
 801e268:	b2bf      	uxth	r7, r7
 801e26a:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801e26e:	f105 0c01 	add.w	ip, r5, #1
 801e272:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801e276:	1c7e      	adds	r6, r7, #1
 801e278:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e27c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801e280:	096d      	lsrs	r5, r5, #5
 801e282:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801e286:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e28a:	ea46 060e 	orr.w	r6, r6, lr
 801e28e:	432e      	orrs	r6, r5
 801e290:	8006      	strh	r6, [r0, #0]
 801e292:	e7ba      	b.n	801e20a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801e294:	f8ba 3000 	ldrh.w	r3, [sl]
 801e298:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801e29c:	eba3 0308 	sub.w	r3, r3, r8
 801e2a0:	eba4 0408 	sub.w	r4, r4, r8
 801e2a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e2a8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801e2ac:	e78b      	b.n	801e1c6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801e2ae:	4b03      	ldr	r3, [pc, #12]	@ (801e2bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801e2b0:	6818      	ldr	r0, [r3, #0]
 801e2b2:	6803      	ldr	r3, [r0, #0]
 801e2b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e2b6:	4798      	blx	r3
 801e2b8:	e76a      	b.n	801e190 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801e2ba:	bf00      	nop
 801e2bc:	20003984 	.word	0x20003984
 801e2c0:	2000397e 	.word	0x2000397e

0801e2c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801e2c4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e2c8:	b085      	sub	sp, #20
 801e2ca:	6810      	ldr	r0, [r2, #0]
 801e2cc:	460c      	mov	r4, r1
 801e2ce:	6851      	ldr	r1, [r2, #4]
 801e2d0:	466d      	mov	r5, sp
 801e2d2:	4616      	mov	r6, r2
 801e2d4:	c503      	stmia	r5!, {r0, r1}
 801e2d6:	6818      	ldr	r0, [r3, #0]
 801e2d8:	6859      	ldr	r1, [r3, #4]
 801e2da:	c503      	stmia	r5!, {r0, r1}
 801e2dc:	4668      	mov	r0, sp
 801e2de:	4d2e      	ldr	r5, [pc, #184]	@ (801e398 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801e2e0:	f7f7 fe8e 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e2e4:	4631      	mov	r1, r6
 801e2e6:	a802      	add	r0, sp, #8
 801e2e8:	4e2c      	ldr	r6, [pc, #176]	@ (801e39c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801e2ea:	f7f7 feb1 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e2ee:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801e2f2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801e2f6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801e2fa:	6828      	ldr	r0, [r5, #0]
 801e2fc:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e300:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801e304:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801e308:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801e30c:	f8bd 1000 	ldrh.w	r1, [sp]
 801e310:	440a      	add	r2, r1
 801e312:	f8ad 2008 	strh.w	r2, [sp, #8]
 801e316:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801e31a:	4413      	add	r3, r2
 801e31c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801e320:	6803      	ldr	r3, [r0, #0]
 801e322:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e324:	4798      	blx	r3
 801e326:	8833      	ldrh	r3, [r6, #0]
 801e328:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801e32c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801e330:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801e334:	f8df e068 	ldr.w	lr, [pc, #104]	@ 801e3a0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801e338:	fb03 1202 	mla	r2, r3, r2, r1
 801e33c:	fb08 f303 	mul.w	r3, r8, r3
 801e340:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e344:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801e348:	4298      	cmp	r0, r3
 801e34a:	d21d      	bcs.n	801e388 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801e34c:	eb00 080c 	add.w	r8, r0, ip
 801e350:	4540      	cmp	r0, r8
 801e352:	d20f      	bcs.n	801e374 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801e354:	f854 1b04 	ldr.w	r1, [r4], #4
 801e358:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801e35c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801e360:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e364:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801e368:	ea42 0209 	orr.w	r2, r2, r9
 801e36c:	430a      	orrs	r2, r1
 801e36e:	f820 2b02 	strh.w	r2, [r0], #2
 801e372:	e7ed      	b.n	801e350 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801e374:	8832      	ldrh	r2, [r6, #0]
 801e376:	1bd2      	subs	r2, r2, r7
 801e378:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e37c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801e380:	1bd2      	subs	r2, r2, r7
 801e382:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801e386:	e7df      	b.n	801e348 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801e388:	6828      	ldr	r0, [r5, #0]
 801e38a:	6803      	ldr	r3, [r0, #0]
 801e38c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e38e:	4798      	blx	r3
 801e390:	b005      	add	sp, #20
 801e392:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e396:	bf00      	nop
 801e398:	20003984 	.word	0x20003984
 801e39c:	2000397e 	.word	0x2000397e
 801e3a0:	fffff800 	.word	0xfffff800

0801e3a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801e3a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e3a8:	b08e      	sub	sp, #56	@ 0x38
 801e3aa:	460e      	mov	r6, r1
 801e3ac:	4604      	mov	r4, r0
 801e3ae:	461d      	mov	r5, r3
 801e3b0:	6808      	ldr	r0, [r1, #0]
 801e3b2:	ab0a      	add	r3, sp, #40	@ 0x28
 801e3b4:	6849      	ldr	r1, [r1, #4]
 801e3b6:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 801e58c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801e3ba:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 801e590 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801e3be:	c303      	stmia	r3!, {r0, r1}
 801e3c0:	6810      	ldr	r0, [r2, #0]
 801e3c2:	ab0c      	add	r3, sp, #48	@ 0x30
 801e3c4:	6851      	ldr	r1, [r2, #4]
 801e3c6:	c303      	stmia	r3!, {r0, r1}
 801e3c8:	a80a      	add	r0, sp, #40	@ 0x28
 801e3ca:	f7f7 fe19 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e3ce:	4631      	mov	r1, r6
 801e3d0:	a80c      	add	r0, sp, #48	@ 0x30
 801e3d2:	f7f7 fe3d 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e3d6:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801e3da:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801e3de:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801e3e2:	f8d8 0000 	ldr.w	r0, [r8]
 801e3e6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e3ea:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801e3ee:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801e3f2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801e3f6:	440c      	add	r4, r1
 801e3f8:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801e3fc:	440a      	add	r2, r1
 801e3fe:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801e402:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801e406:	4413      	add	r3, r2
 801e408:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801e40c:	6803      	ldr	r3, [r0, #0]
 801e40e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801e410:	4798      	blx	r3
 801e412:	2dff      	cmp	r5, #255	@ 0xff
 801e414:	d124      	bne.n	801e460 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801e416:	f010 0f01 	tst.w	r0, #1
 801e41a:	f8d8 0000 	ldr.w	r0, [r8]
 801e41e:	d022      	beq.n	801e466 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801e420:	2100      	movs	r1, #0
 801e422:	f04f 0e01 	mov.w	lr, #1
 801e426:	f8d0 c000 	ldr.w	ip, [r0]
 801e42a:	b2b6      	uxth	r6, r6
 801e42c:	f8cd e018 	str.w	lr, [sp, #24]
 801e430:	b2bf      	uxth	r7, r7
 801e432:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801e436:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801e43a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801e43e:	f8b9 e000 	ldrh.w	lr, [r9]
 801e442:	9503      	str	r5, [sp, #12]
 801e444:	9601      	str	r6, [sp, #4]
 801e446:	9700      	str	r7, [sp, #0]
 801e448:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801e44c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801e450:	9102      	str	r1, [sp, #8]
 801e452:	4621      	mov	r1, r4
 801e454:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801e458:	47a8      	blx	r5
 801e45a:	b00e      	add	sp, #56	@ 0x38
 801e45c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e460:	f010 0f04 	tst.w	r0, #4
 801e464:	e7d9      	b.n	801e41a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801e466:	6803      	ldr	r3, [r0, #0]
 801e468:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e46a:	4798      	blx	r3
 801e46c:	f8b9 3000 	ldrh.w	r3, [r9]
 801e470:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801e474:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801e478:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801e47c:	435e      	muls	r6, r3
 801e47e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801e482:	2dff      	cmp	r5, #255	@ 0xff
 801e484:	fb03 1202 	mla	r2, r3, r2, r1
 801e488:	ebac 0c07 	sub.w	ip, ip, r7
 801e48c:	eba3 0707 	sub.w	r7, r3, r7
 801e490:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e494:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801e498:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801e49c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801e4a0:	d049      	beq.n	801e536 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801e4a2:	43eb      	mvns	r3, r5
 801e4a4:	fa1f f985 	uxth.w	r9, r5
 801e4a8:	b2db      	uxtb	r3, r3
 801e4aa:	42b0      	cmp	r0, r6
 801e4ac:	d266      	bcs.n	801e57c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e4ae:	eb00 0a0e 	add.w	sl, r0, lr
 801e4b2:	4550      	cmp	r0, sl
 801e4b4:	4621      	mov	r1, r4
 801e4b6:	f104 0403 	add.w	r4, r4, #3
 801e4ba:	d25b      	bcs.n	801e574 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801e4bc:	8802      	ldrh	r2, [r0, #0]
 801e4be:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e4c2:	ea4f 2822 	mov.w	r8, r2, asr #8
 801e4c6:	fb11 f109 	smulbb	r1, r1, r9
 801e4ca:	10d5      	asrs	r5, r2, #3
 801e4cc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801e4d0:	00d2      	lsls	r2, r2, #3
 801e4d2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801e4d6:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801e4da:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801e4de:	fb08 1803 	mla	r8, r8, r3, r1
 801e4e2:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801e4e6:	b2d2      	uxtb	r2, r2
 801e4e8:	fb11 f109 	smulbb	r1, r1, r9
 801e4ec:	fa1f f888 	uxth.w	r8, r8
 801e4f0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801e4f4:	fb05 1503 	mla	r5, r5, r3, r1
 801e4f8:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e4fc:	fb11 f109 	smulbb	r1, r1, r9
 801e500:	b2ad      	uxth	r5, r5
 801e502:	fb02 1203 	mla	r2, r2, r3, r1
 801e506:	f108 0101 	add.w	r1, r8, #1
 801e50a:	b292      	uxth	r2, r2
 801e50c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801e510:	1c51      	adds	r1, r2, #1
 801e512:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801e516:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e51a:	1c69      	adds	r1, r5, #1
 801e51c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801e520:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e524:	096d      	lsrs	r5, r5, #5
 801e526:	ea42 0208 	orr.w	r2, r2, r8
 801e52a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801e52e:	432a      	orrs	r2, r5
 801e530:	f820 2b02 	strh.w	r2, [r0], #2
 801e534:	e7bd      	b.n	801e4b2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801e536:	4a14      	ldr	r2, [pc, #80]	@ (801e588 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801e538:	42b0      	cmp	r0, r6
 801e53a:	d21f      	bcs.n	801e57c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801e53c:	eb00 050e 	add.w	r5, r0, lr
 801e540:	42a8      	cmp	r0, r5
 801e542:	4621      	mov	r1, r4
 801e544:	f104 0403 	add.w	r4, r4, #3
 801e548:	d210      	bcs.n	801e56c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801e54a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801e54e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801e552:	00db      	lsls	r3, r3, #3
 801e554:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801e558:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e55c:	430b      	orrs	r3, r1
 801e55e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801e562:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801e566:	f820 3b02 	strh.w	r3, [r0], #2
 801e56a:	e7e9      	b.n	801e540 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801e56c:	4438      	add	r0, r7
 801e56e:	eb01 040c 	add.w	r4, r1, ip
 801e572:	e7e1      	b.n	801e538 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801e574:	4438      	add	r0, r7
 801e576:	eb01 040c 	add.w	r4, r1, ip
 801e57a:	e796      	b.n	801e4aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801e57c:	4b03      	ldr	r3, [pc, #12]	@ (801e58c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801e57e:	6818      	ldr	r0, [r3, #0]
 801e580:	6803      	ldr	r3, [r0, #0]
 801e582:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e584:	4798      	blx	r3
 801e586:	e768      	b.n	801e45a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801e588:	fffff800 	.word	0xfffff800
 801e58c:	20003984 	.word	0x20003984
 801e590:	2000397e 	.word	0x2000397e

0801e594 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801e594:	b4f0      	push	{r4, r5, r6, r7}
 801e596:	4616      	mov	r6, r2
 801e598:	461c      	mov	r4, r3
 801e59a:	460d      	mov	r5, r1
 801e59c:	9a04      	ldr	r2, [sp, #16]
 801e59e:	2e01      	cmp	r6, #1
 801e5a0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801e5a4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801e5a8:	d012      	beq.n	801e5d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801e5aa:	d303      	bcc.n	801e5b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801e5ac:	2e02      	cmp	r6, #2
 801e5ae:	d00a      	beq.n	801e5c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801e5b0:	bcf0      	pop	{r4, r5, r6, r7}
 801e5b2:	4770      	bx	lr
 801e5b4:	6805      	ldr	r5, [r0, #0]
 801e5b6:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801e5ba:	68ed      	ldr	r5, [r5, #12]
 801e5bc:	4613      	mov	r3, r2
 801e5be:	4622      	mov	r2, r4
 801e5c0:	46ac      	mov	ip, r5
 801e5c2:	bcf0      	pop	{r4, r5, r6, r7}
 801e5c4:	4760      	bx	ip
 801e5c6:	4621      	mov	r1, r4
 801e5c8:	4628      	mov	r0, r5
 801e5ca:	bcf0      	pop	{r4, r5, r6, r7}
 801e5cc:	f7ff bd94 	b.w	801e0f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801e5d0:	4621      	mov	r1, r4
 801e5d2:	4628      	mov	r0, r5
 801e5d4:	bcf0      	pop	{r4, r5, r6, r7}
 801e5d6:	f7ff bee5 	b.w	801e3a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801e5dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801e5dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e5e0:	b093      	sub	sp, #76	@ 0x4c
 801e5e2:	4681      	mov	r9, r0
 801e5e4:	4688      	mov	r8, r1
 801e5e6:	6810      	ldr	r0, [r2, #0]
 801e5e8:	6851      	ldr	r1, [r2, #4]
 801e5ea:	ac0e      	add	r4, sp, #56	@ 0x38
 801e5ec:	4616      	mov	r6, r2
 801e5ee:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801e5f2:	4f6b      	ldr	r7, [pc, #428]	@ (801e7a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801e5f4:	c403      	stmia	r4!, {r0, r1}
 801e5f6:	6818      	ldr	r0, [r3, #0]
 801e5f8:	ac10      	add	r4, sp, #64	@ 0x40
 801e5fa:	6859      	ldr	r1, [r3, #4]
 801e5fc:	c403      	stmia	r4!, {r0, r1}
 801e5fe:	a80e      	add	r0, sp, #56	@ 0x38
 801e600:	f7f7 fcfe 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e604:	4631      	mov	r1, r6
 801e606:	a810      	add	r0, sp, #64	@ 0x40
 801e608:	4e66      	ldr	r6, [pc, #408]	@ (801e7a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e60a:	f7f7 fd21 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e60e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801e612:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801e616:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801e61a:	6830      	ldr	r0, [r6, #0]
 801e61c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e620:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801e624:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801e628:	4489      	add	r9, r1
 801e62a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801e62e:	440a      	add	r2, r1
 801e630:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801e634:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801e638:	4413      	add	r3, r2
 801e63a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801e63e:	6803      	ldr	r3, [r0, #0]
 801e640:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801e642:	4798      	blx	r3
 801e644:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801e648:	6830      	ldr	r0, [r6, #0]
 801e64a:	d01d      	beq.n	801e688 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801e64c:	2200      	movs	r2, #0
 801e64e:	6801      	ldr	r1, [r0, #0]
 801e650:	b2a4      	uxth	r4, r4
 801e652:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801e656:	b2ad      	uxth	r5, r5
 801e658:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e65c:	220b      	movs	r2, #11
 801e65e:	9207      	str	r2, [sp, #28]
 801e660:	883a      	ldrh	r2, [r7, #0]
 801e662:	9502      	str	r5, [sp, #8]
 801e664:	9206      	str	r2, [sp, #24]
 801e666:	2201      	movs	r2, #1
 801e668:	9401      	str	r4, [sp, #4]
 801e66a:	e9cd a204 	strd	sl, r2, [sp, #16]
 801e66e:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801e672:	9203      	str	r2, [sp, #12]
 801e674:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801e678:	9200      	str	r2, [sp, #0]
 801e67a:	4642      	mov	r2, r8
 801e67c:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801e67e:	4649      	mov	r1, r9
 801e680:	47a0      	blx	r4
 801e682:	b013      	add	sp, #76	@ 0x4c
 801e684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e688:	6803      	ldr	r3, [r0, #0]
 801e68a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e68c:	4798      	blx	r3
 801e68e:	883b      	ldrh	r3, [r7, #0]
 801e690:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801e694:	f04f 0e04 	mov.w	lr, #4
 801e698:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801e69c:	435d      	muls	r5, r3
 801e69e:	fb03 1202 	mla	r2, r3, r2, r1
 801e6a2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801e6a6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801e6aa:	920c      	str	r2, [sp, #48]	@ 0x30
 801e6ac:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801e6b0:	1b12      	subs	r2, r2, r4
 801e6b2:	920d      	str	r2, [sp, #52]	@ 0x34
 801e6b4:	0062      	lsls	r2, r4, #1
 801e6b6:	1b1c      	subs	r4, r3, r4
 801e6b8:	920a      	str	r2, [sp, #40]	@ 0x28
 801e6ba:	0063      	lsls	r3, r4, #1
 801e6bc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e6be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e6c0:	4298      	cmp	r0, r3
 801e6c2:	d266      	bcs.n	801e792 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801e6c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801e6c6:	eb00 0b03 	add.w	fp, r0, r3
 801e6ca:	4558      	cmp	r0, fp
 801e6cc:	d25c      	bcs.n	801e788 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801e6ce:	f819 3b01 	ldrb.w	r3, [r9], #1
 801e6d2:	fb1e e303 	smlabb	r3, lr, r3, lr
 801e6d6:	f858 2003 	ldr.w	r2, [r8, r3]
 801e6da:	0e11      	lsrs	r1, r2, #24
 801e6dc:	d012      	beq.n	801e704 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e6de:	29ff      	cmp	r1, #255	@ 0xff
 801e6e0:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801e6e4:	d110      	bne.n	801e708 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e6e6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801e6ea:	d10d      	bne.n	801e708 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801e6ec:	0953      	lsrs	r3, r2, #5
 801e6ee:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801e6f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801e6f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e6fa:	f027 0707 	bic.w	r7, r7, #7
 801e6fe:	431f      	orrs	r7, r3
 801e700:	433a      	orrs	r2, r7
 801e702:	8002      	strh	r2, [r0, #0]
 801e704:	3002      	adds	r0, #2
 801e706:	e7e0      	b.n	801e6ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801e708:	fb0a f101 	mul.w	r1, sl, r1
 801e70c:	8806      	ldrh	r6, [r0, #0]
 801e70e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801e712:	b2d2      	uxtb	r2, r2
 801e714:	1c4b      	adds	r3, r1, #1
 801e716:	1235      	asrs	r5, r6, #8
 801e718:	10f4      	asrs	r4, r6, #3
 801e71a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801e71e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e722:	00f6      	lsls	r6, r6, #3
 801e724:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801e728:	121b      	asrs	r3, r3, #8
 801e72a:	b2f6      	uxtb	r6, r6
 801e72c:	b299      	uxth	r1, r3
 801e72e:	43db      	mvns	r3, r3
 801e730:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801e734:	fb1c fc01 	smulbb	ip, ip, r1
 801e738:	b2db      	uxtb	r3, r3
 801e73a:	fb12 f201 	smulbb	r2, r2, r1
 801e73e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801e742:	fb05 c503 	mla	r5, r5, r3, ip
 801e746:	b2ff      	uxtb	r7, r7
 801e748:	fb06 2203 	mla	r2, r6, r3, r2
 801e74c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801e750:	fb17 f701 	smulbb	r7, r7, r1
 801e754:	b2ad      	uxth	r5, r5
 801e756:	b292      	uxth	r2, r2
 801e758:	fb04 7403 	mla	r4, r4, r3, r7
 801e75c:	f105 0c01 	add.w	ip, r5, #1
 801e760:	1c57      	adds	r7, r2, #1
 801e762:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e766:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801e76a:	b2a4      	uxth	r4, r4
 801e76c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e770:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801e774:	433d      	orrs	r5, r7
 801e776:	1c67      	adds	r7, r4, #1
 801e778:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801e77c:	0964      	lsrs	r4, r4, #5
 801e77e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801e782:	4325      	orrs	r5, r4
 801e784:	8005      	strh	r5, [r0, #0]
 801e786:	e7bd      	b.n	801e704 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801e788:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801e78a:	4418      	add	r0, r3
 801e78c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e78e:	4499      	add	r9, r3
 801e790:	e795      	b.n	801e6be <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801e792:	4b04      	ldr	r3, [pc, #16]	@ (801e7a4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801e794:	6818      	ldr	r0, [r3, #0]
 801e796:	6803      	ldr	r3, [r0, #0]
 801e798:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e79a:	4798      	blx	r3
 801e79c:	e771      	b.n	801e682 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801e79e:	bf00      	nop
 801e7a0:	2000397e 	.word	0x2000397e
 801e7a4:	20003984 	.word	0x20003984

0801e7a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801e7a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7ac:	b087      	sub	sp, #28
 801e7ae:	4680      	mov	r8, r0
 801e7b0:	460d      	mov	r5, r1
 801e7b2:	4614      	mov	r4, r2
 801e7b4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801e7b8:	2e00      	cmp	r6, #0
 801e7ba:	f000 80b9 	beq.w	801e930 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801e7be:	6810      	ldr	r0, [r2, #0]
 801e7c0:	af02      	add	r7, sp, #8
 801e7c2:	6851      	ldr	r1, [r2, #4]
 801e7c4:	c703      	stmia	r7!, {r0, r1}
 801e7c6:	6818      	ldr	r0, [r3, #0]
 801e7c8:	af04      	add	r7, sp, #16
 801e7ca:	6859      	ldr	r1, [r3, #4]
 801e7cc:	c703      	stmia	r7!, {r0, r1}
 801e7ce:	a802      	add	r0, sp, #8
 801e7d0:	f7f7 fc16 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e7d4:	4621      	mov	r1, r4
 801e7d6:	a804      	add	r0, sp, #16
 801e7d8:	f7f7 fc3a 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e7dc:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801e7e0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801e7e4:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801e7e8:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801e7ec:	fb14 2103 	smlabb	r1, r4, r3, r2
 801e7f0:	eb08 0401 	add.w	r4, r8, r1
 801e7f4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801e7f8:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801e7fc:	440a      	add	r2, r1
 801e7fe:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801e802:	f8ad 2010 	strh.w	r2, [sp, #16]
 801e806:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801e80a:	4413      	add	r3, r2
 801e80c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801e810:	4b49      	ldr	r3, [pc, #292]	@ (801e938 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e812:	6818      	ldr	r0, [r3, #0]
 801e814:	6803      	ldr	r3, [r0, #0]
 801e816:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801e818:	4798      	blx	r3
 801e81a:	4b48      	ldr	r3, [pc, #288]	@ (801e93c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801e81c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801e820:	2eff      	cmp	r6, #255	@ 0xff
 801e822:	881a      	ldrh	r2, [r3, #0]
 801e824:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801e828:	fb02 c101 	mla	r1, r2, r1, ip
 801e82c:	fb02 f207 	mul.w	r2, r2, r7
 801e830:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801e834:	f105 0104 	add.w	r1, r5, #4
 801e838:	461d      	mov	r5, r3
 801e83a:	d05a      	beq.n	801e8f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801e83c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801e840:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e844:	b2b6      	uxth	r6, r6
 801e846:	9301      	str	r3, [sp, #4]
 801e848:	fa1f fe8e 	uxth.w	lr, lr
 801e84c:	4282      	cmp	r2, r0
 801e84e:	d96a      	bls.n	801e926 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e850:	eb00 0b0a 	add.w	fp, r0, sl
 801e854:	4583      	cmp	fp, r0
 801e856:	d940      	bls.n	801e8da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801e858:	8805      	ldrh	r5, [r0, #0]
 801e85a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e85e:	122f      	asrs	r7, r5, #8
 801e860:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e864:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801e868:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801e86c:	00ed      	lsls	r5, r5, #3
 801e86e:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e872:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801e876:	fb17 f70e 	smulbb	r7, r7, lr
 801e87a:	b2ed      	uxtb	r5, r5
 801e87c:	fb19 f90e 	smulbb	r9, r9, lr
 801e880:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e884:	fb15 f50e 	smulbb	r5, r5, lr
 801e888:	fb0c 7c06 	mla	ip, ip, r6, r7
 801e88c:	10df      	asrs	r7, r3, #3
 801e88e:	00db      	lsls	r3, r3, #3
 801e890:	fa1f fc8c 	uxth.w	ip, ip
 801e894:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e898:	b2db      	uxtb	r3, r3
 801e89a:	fb07 9706 	mla	r7, r7, r6, r9
 801e89e:	f10c 0901 	add.w	r9, ip, #1
 801e8a2:	fb03 5306 	mla	r3, r3, r6, r5
 801e8a6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801e8aa:	b29b      	uxth	r3, r3
 801e8ac:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801e8b0:	b2bf      	uxth	r7, r7
 801e8b2:	f103 0c01 	add.w	ip, r3, #1
 801e8b6:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801e8ba:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e8be:	ea4c 0c09 	orr.w	ip, ip, r9
 801e8c2:	f107 0901 	add.w	r9, r7, #1
 801e8c6:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801e8ca:	097f      	lsrs	r7, r7, #5
 801e8cc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801e8d0:	ea4c 0c07 	orr.w	ip, ip, r7
 801e8d4:	f820 cb02 	strh.w	ip, [r0], #2
 801e8d8:	e7bc      	b.n	801e854 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801e8da:	9b01      	ldr	r3, [sp, #4]
 801e8dc:	881b      	ldrh	r3, [r3, #0]
 801e8de:	eba3 0308 	sub.w	r3, r3, r8
 801e8e2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e8e6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e8ea:	eba3 0308 	sub.w	r3, r3, r8
 801e8ee:	441c      	add	r4, r3
 801e8f0:	e7ac      	b.n	801e84c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801e8f2:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801e8f6:	4282      	cmp	r2, r0
 801e8f8:	d915      	bls.n	801e926 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801e8fa:	eb00 060a 	add.w	r6, r0, sl
 801e8fe:	4286      	cmp	r6, r0
 801e900:	d906      	bls.n	801e910 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801e902:	f814 3b01 	ldrb.w	r3, [r4], #1
 801e906:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801e90a:	f820 3b02 	strh.w	r3, [r0], #2
 801e90e:	e7f6      	b.n	801e8fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801e910:	882b      	ldrh	r3, [r5, #0]
 801e912:	eba3 0308 	sub.w	r3, r3, r8
 801e916:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801e91a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801e91e:	eba3 0308 	sub.w	r3, r3, r8
 801e922:	441c      	add	r4, r3
 801e924:	e7e7      	b.n	801e8f6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801e926:	4b04      	ldr	r3, [pc, #16]	@ (801e938 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801e928:	6818      	ldr	r0, [r3, #0]
 801e92a:	6803      	ldr	r3, [r0, #0]
 801e92c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801e92e:	4798      	blx	r3
 801e930:	b007      	add	sp, #28
 801e932:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e936:	bf00      	nop
 801e938:	20003984 	.word	0x20003984
 801e93c:	2000397e 	.word	0x2000397e

0801e940 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801e940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e944:	b091      	sub	sp, #68	@ 0x44
 801e946:	4680      	mov	r8, r0
 801e948:	460f      	mov	r7, r1
 801e94a:	4614      	mov	r4, r2
 801e94c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801e950:	2d00      	cmp	r5, #0
 801e952:	d051      	beq.n	801e9f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801e954:	6810      	ldr	r0, [r2, #0]
 801e956:	ae0c      	add	r6, sp, #48	@ 0x30
 801e958:	6851      	ldr	r1, [r2, #4]
 801e95a:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801eb5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801e95e:	c603      	stmia	r6!, {r0, r1}
 801e960:	6818      	ldr	r0, [r3, #0]
 801e962:	ae0e      	add	r6, sp, #56	@ 0x38
 801e964:	6859      	ldr	r1, [r3, #4]
 801e966:	c603      	stmia	r6!, {r0, r1}
 801e968:	a80c      	add	r0, sp, #48	@ 0x30
 801e96a:	f7f7 fb49 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801e96e:	4621      	mov	r1, r4
 801e970:	a80e      	add	r0, sp, #56	@ 0x38
 801e972:	f7f7 fb6d 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801e976:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801e97a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801e97e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801e982:	f8d9 0000 	ldr.w	r0, [r9]
 801e986:	fb11 2103 	smlabb	r1, r1, r3, r2
 801e98a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801e98e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801e992:	eb08 0401 	add.w	r4, r8, r1
 801e996:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801e99a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801eb60 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801e99e:	440a      	add	r2, r1
 801e9a0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801e9a4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801e9a8:	4413      	add	r3, r2
 801e9aa:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801e9ae:	6803      	ldr	r3, [r0, #0]
 801e9b0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801e9b2:	4798      	blx	r3
 801e9b4:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801e9b8:	f8d9 0000 	ldr.w	r0, [r9]
 801e9bc:	d01f      	beq.n	801e9fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801e9be:	2200      	movs	r2, #0
 801e9c0:	6801      	ldr	r1, [r0, #0]
 801e9c2:	b2b6      	uxth	r6, r6
 801e9c4:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801e9c8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801e9cc:	220b      	movs	r2, #11
 801e9ce:	9207      	str	r2, [sp, #28]
 801e9d0:	f8b8 2000 	ldrh.w	r2, [r8]
 801e9d4:	9601      	str	r6, [sp, #4]
 801e9d6:	9206      	str	r2, [sp, #24]
 801e9d8:	2201      	movs	r2, #1
 801e9da:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801e9de:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801e9e2:	9203      	str	r2, [sp, #12]
 801e9e4:	fa1f f28a 	uxth.w	r2, sl
 801e9e8:	9202      	str	r2, [sp, #8]
 801e9ea:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801e9ee:	9200      	str	r2, [sp, #0]
 801e9f0:	463a      	mov	r2, r7
 801e9f2:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801e9f4:	4621      	mov	r1, r4
 801e9f6:	47a8      	blx	r5
 801e9f8:	b011      	add	sp, #68	@ 0x44
 801e9fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e9fe:	6803      	ldr	r3, [r0, #0]
 801ea00:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801ea04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ea06:	4798      	blx	r3
 801ea08:	f8b8 2000 	ldrh.w	r2, [r8]
 801ea0c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801ea10:	2dff      	cmp	r5, #255	@ 0xff
 801ea12:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801ea16:	fb0a fa02 	mul.w	sl, sl, r2
 801ea1a:	fb02 1303 	mla	r3, r2, r3, r1
 801ea1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ea22:	d062      	beq.n	801eaea <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801ea24:	ea6f 0c05 	mvn.w	ip, r5
 801ea28:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801ea2c:	b2ad      	uxth	r5, r5
 801ea2e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801ea32:	fa5f fc8c 	uxtb.w	ip, ip
 801ea36:	930a      	str	r3, [sp, #40]	@ 0x28
 801ea38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ea3a:	4298      	cmp	r0, r3
 801ea3c:	f080 8085 	bcs.w	801eb4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ea40:	eb00 0b09 	add.w	fp, r0, r9
 801ea44:	4558      	cmp	r0, fp
 801ea46:	d246      	bcs.n	801ead6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801ea48:	f814 eb01 	ldrb.w	lr, [r4], #1
 801ea4c:	2303      	movs	r3, #3
 801ea4e:	2204      	movs	r2, #4
 801ea50:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801ea54:	8803      	ldrh	r3, [r0, #0]
 801ea56:	eb07 0a0e 	add.w	sl, r7, lr
 801ea5a:	1219      	asrs	r1, r3, #8
 801ea5c:	10da      	asrs	r2, r3, #3
 801ea5e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ea62:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801ea66:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea6a:	00db      	lsls	r3, r3, #3
 801ea6c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801ea70:	fb18 f805 	smulbb	r8, r8, r5
 801ea74:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801ea78:	fb1e fe05 	smulbb	lr, lr, r5
 801ea7c:	b2db      	uxtb	r3, r3
 801ea7e:	fb01 810c 	mla	r1, r1, ip, r8
 801ea82:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801ea86:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801ea8a:	fb18 f805 	smulbb	r8, r8, r5
 801ea8e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801ea92:	b289      	uxth	r1, r1
 801ea94:	fb02 820c 	mla	r2, r2, ip, r8
 801ea98:	fb03 e30c 	mla	r3, r3, ip, lr
 801ea9c:	f101 0801 	add.w	r8, r1, #1
 801eaa0:	b292      	uxth	r2, r2
 801eaa2:	b29b      	uxth	r3, r3
 801eaa4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801eaa8:	f102 0801 	add.w	r8, r2, #1
 801eaac:	f103 0e01 	add.w	lr, r3, #1
 801eab0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801eab4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801eab8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801eabc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801eac0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801eac4:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801eac8:	ea4e 0101 	orr.w	r1, lr, r1
 801eacc:	ea41 0108 	orr.w	r1, r1, r8
 801ead0:	f820 1b02 	strh.w	r1, [r0], #2
 801ead4:	e7b6      	b.n	801ea44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ead6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ead8:	881b      	ldrh	r3, [r3, #0]
 801eada:	1b9b      	subs	r3, r3, r6
 801eadc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eae0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801eae4:	1b9b      	subs	r3, r3, r6
 801eae6:	441c      	add	r4, r3
 801eae8:	e7a6      	b.n	801ea38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801eaea:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801eaee:	2203      	movs	r2, #3
 801eaf0:	2504      	movs	r5, #4
 801eaf2:	4919      	ldr	r1, [pc, #100]	@ (801eb58 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801eaf4:	4550      	cmp	r0, sl
 801eaf6:	d228      	bcs.n	801eb4a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801eaf8:	eb00 0c09 	add.w	ip, r0, r9
 801eafc:	4560      	cmp	r0, ip
 801eafe:	4623      	mov	r3, r4
 801eb00:	d219      	bcs.n	801eb36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801eb02:	f893 e000 	ldrb.w	lr, [r3]
 801eb06:	3401      	adds	r4, #1
 801eb08:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801eb0c:	eb07 0b0e 	add.w	fp, r7, lr
 801eb10:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801eb14:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801eb18:	f89b b001 	ldrb.w	fp, [fp, #1]
 801eb1c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801eb20:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801eb24:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801eb28:	ea43 030b 	orr.w	r3, r3, fp
 801eb2c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801eb30:	f820 3b02 	strh.w	r3, [r0], #2
 801eb34:	e7e2      	b.n	801eafc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801eb36:	f8b8 3000 	ldrh.w	r3, [r8]
 801eb3a:	1b9b      	subs	r3, r3, r6
 801eb3c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801eb40:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801eb44:	1b9b      	subs	r3, r3, r6
 801eb46:	441c      	add	r4, r3
 801eb48:	e7d4      	b.n	801eaf4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801eb4a:	4b04      	ldr	r3, [pc, #16]	@ (801eb5c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801eb4c:	6818      	ldr	r0, [r3, #0]
 801eb4e:	6803      	ldr	r3, [r0, #0]
 801eb50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801eb52:	4798      	blx	r3
 801eb54:	e750      	b.n	801e9f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801eb56:	bf00      	nop
 801eb58:	fffff800 	.word	0xfffff800
 801eb5c:	20003984 	.word	0x20003984
 801eb60:	2000397e 	.word	0x2000397e

0801eb64 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801eb64:	b4f0      	push	{r4, r5, r6, r7}
 801eb66:	460c      	mov	r4, r1
 801eb68:	4611      	mov	r1, r2
 801eb6a:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801eb6e:	461a      	mov	r2, r3
 801eb70:	780f      	ldrb	r7, [r1, #0]
 801eb72:	9b04      	ldr	r3, [sp, #16]
 801eb74:	2f01      	cmp	r7, #1
 801eb76:	784e      	ldrb	r6, [r1, #1]
 801eb78:	d038      	beq.n	801ebec <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801eb7a:	d31f      	bcc.n	801ebbc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801eb7c:	2f02      	cmp	r7, #2
 801eb7e:	d14d      	bne.n	801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801eb80:	2e03      	cmp	r6, #3
 801eb82:	d84b      	bhi.n	801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801eb84:	e8df f006 	tbb	[pc, r6]
 801eb88:	17140702 	.word	0x17140702
 801eb8c:	9504      	str	r5, [sp, #16]
 801eb8e:	4620      	mov	r0, r4
 801eb90:	bcf0      	pop	{r4, r5, r6, r7}
 801eb92:	f7ff be09 	b.w	801e7a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801eb96:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801eb98:	2800      	cmp	r0, #0
 801eb9a:	d03f      	beq.n	801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801eb9c:	6806      	ldr	r6, [r0, #0]
 801eb9e:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801eba2:	68b5      	ldr	r5, [r6, #8]
 801eba4:	4613      	mov	r3, r2
 801eba6:	46ac      	mov	ip, r5
 801eba8:	460a      	mov	r2, r1
 801ebaa:	4621      	mov	r1, r4
 801ebac:	bcf0      	pop	{r4, r5, r6, r7}
 801ebae:	4760      	bx	ip
 801ebb0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801ebb4:	e7f0      	b.n	801eb98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801ebb6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801ebba:	e7ed      	b.n	801eb98 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801ebbc:	2e03      	cmp	r6, #3
 801ebbe:	d82d      	bhi.n	801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801ebc0:	e8df f006 	tbb	[pc, r6]
 801ebc4:	110e0702 	.word	0x110e0702
 801ebc8:	9504      	str	r5, [sp, #16]
 801ebca:	4620      	mov	r0, r4
 801ebcc:	bcf0      	pop	{r4, r5, r6, r7}
 801ebce:	f7ff bd05 	b.w	801e5dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801ebd2:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801ebd4:	b310      	cbz	r0, 801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801ebd6:	6806      	ldr	r6, [r0, #0]
 801ebd8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ebdc:	68f5      	ldr	r5, [r6, #12]
 801ebde:	e7e1      	b.n	801eba4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ebe0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801ebe4:	e7f6      	b.n	801ebd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801ebe6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801ebea:	e7f3      	b.n	801ebd4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801ebec:	2e03      	cmp	r6, #3
 801ebee:	d815      	bhi.n	801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801ebf0:	e8df f006 	tbb	[pc, r6]
 801ebf4:	110e0702 	.word	0x110e0702
 801ebf8:	9504      	str	r5, [sp, #16]
 801ebfa:	4620      	mov	r0, r4
 801ebfc:	bcf0      	pop	{r4, r5, r6, r7}
 801ebfe:	f7ff be9f 	b.w	801e940 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801ec02:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801ec04:	b150      	cbz	r0, 801ec1c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801ec06:	6806      	ldr	r6, [r0, #0]
 801ec08:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801ec0c:	6935      	ldr	r5, [r6, #16]
 801ec0e:	e7c9      	b.n	801eba4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801ec10:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801ec14:	e7f6      	b.n	801ec04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801ec16:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801ec1a:	e7f3      	b.n	801ec04 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801ec1c:	bcf0      	pop	{r4, r5, r6, r7}
 801ec1e:	4770      	bx	lr

0801ec20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801ec20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ec24:	b087      	sub	sp, #28
 801ec26:	4604      	mov	r4, r0
 801ec28:	460e      	mov	r6, r1
 801ec2a:	6810      	ldr	r0, [r2, #0]
 801ec2c:	6851      	ldr	r1, [r2, #4]
 801ec2e:	ad02      	add	r5, sp, #8
 801ec30:	4617      	mov	r7, r2
 801ec32:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801ec36:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 801ee68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801ec3a:	c503      	stmia	r5!, {r0, r1}
 801ec3c:	6818      	ldr	r0, [r3, #0]
 801ec3e:	ad04      	add	r5, sp, #16
 801ec40:	6859      	ldr	r1, [r3, #4]
 801ec42:	c503      	stmia	r5!, {r0, r1}
 801ec44:	a802      	add	r0, sp, #8
 801ec46:	f7f7 f9db 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ec4a:	4639      	mov	r1, r7
 801ec4c:	a804      	add	r0, sp, #16
 801ec4e:	f7f7 f9ff 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ec52:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ec56:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ec5a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801ec5e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801ec62:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ec66:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801ec6a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801ec6e:	440e      	add	r6, r1
 801ec70:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ec74:	440a      	add	r2, r1
 801ec76:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ec7a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801ec7e:	4413      	add	r3, r2
 801ec80:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ec84:	4b77      	ldr	r3, [pc, #476]	@ (801ee64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ec86:	6818      	ldr	r0, [r3, #0]
 801ec88:	6803      	ldr	r3, [r0, #0]
 801ec8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ec8c:	4798      	blx	r3
 801ec8e:	f8b9 b000 	ldrh.w	fp, [r9]
 801ec92:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ec96:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ec9a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801ec9e:	fb05 f50b 	mul.w	r5, r5, fp
 801eca2:	fb0b 2303 	mla	r3, fp, r3, r2
 801eca6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ecaa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ecae:	9300      	str	r3, [sp, #0]
 801ecb0:	d069      	beq.n	801ed86 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801ecb2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801ecb6:	4558      	cmp	r0, fp
 801ecb8:	f080 80cc 	bcs.w	801ee54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ecbc:	9b00      	ldr	r3, [sp, #0]
 801ecbe:	4631      	mov	r1, r6
 801ecc0:	18c3      	adds	r3, r0, r3
 801ecc2:	9301      	str	r3, [sp, #4]
 801ecc4:	9b01      	ldr	r3, [sp, #4]
 801ecc6:	4298      	cmp	r0, r3
 801ecc8:	d24f      	bcs.n	801ed6a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801ecca:	f811 2b01 	ldrb.w	r2, [r1], #1
 801ecce:	2a00      	cmp	r2, #0
 801ecd0:	d048      	beq.n	801ed64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801ecd2:	fb0a f202 	mul.w	r2, sl, r2
 801ecd6:	1c53      	adds	r3, r2, #1
 801ecd8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ecdc:	121b      	asrs	r3, r3, #8
 801ecde:	d041      	beq.n	801ed64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801ece0:	8802      	ldrh	r2, [r0, #0]
 801ece2:	b29e      	uxth	r6, r3
 801ece4:	f8b4 c000 	ldrh.w	ip, [r4]
 801ece8:	43db      	mvns	r3, r3
 801ecea:	1215      	asrs	r5, r2, #8
 801ecec:	b2db      	uxtb	r3, r3
 801ecee:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ecf2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ecf6:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801ecfa:	fb15 f503 	smulbb	r5, r5, r3
 801ecfe:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ed02:	00d2      	lsls	r2, r2, #3
 801ed04:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ed08:	fb07 5706 	mla	r7, r7, r6, r5
 801ed0c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ed10:	b2d2      	uxtb	r2, r2
 801ed12:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ed16:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ed1a:	fb1e fe03 	smulbb	lr, lr, r3
 801ed1e:	b2bf      	uxth	r7, r7
 801ed20:	fb12 f203 	smulbb	r2, r2, r3
 801ed24:	fa5f fc8c 	uxtb.w	ip, ip
 801ed28:	fb05 e506 	mla	r5, r5, r6, lr
 801ed2c:	f107 0e01 	add.w	lr, r7, #1
 801ed30:	fb0c 2c06 	mla	ip, ip, r6, r2
 801ed34:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801ed38:	fa1f fc8c 	uxth.w	ip, ip
 801ed3c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801ed40:	b2ad      	uxth	r5, r5
 801ed42:	f10c 0701 	add.w	r7, ip, #1
 801ed46:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ed4a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ed4e:	ea47 070e 	orr.w	r7, r7, lr
 801ed52:	f105 0e01 	add.w	lr, r5, #1
 801ed56:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801ed5a:	096d      	lsrs	r5, r5, #5
 801ed5c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ed60:	432f      	orrs	r7, r5
 801ed62:	8007      	strh	r7, [r0, #0]
 801ed64:	3002      	adds	r0, #2
 801ed66:	3402      	adds	r4, #2
 801ed68:	e7ac      	b.n	801ecc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801ed6a:	f8b9 3000 	ldrh.w	r3, [r9]
 801ed6e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ed72:	eba3 0308 	sub.w	r3, r3, r8
 801ed76:	eba6 0608 	sub.w	r6, r6, r8
 801ed7a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ed7e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ed82:	440e      	add	r6, r1
 801ed84:	e797      	b.n	801ecb6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801ed86:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801ed8a:	42a8      	cmp	r0, r5
 801ed8c:	d262      	bcs.n	801ee54 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801ed8e:	9b00      	ldr	r3, [sp, #0]
 801ed90:	4631      	mov	r1, r6
 801ed92:	eb00 0b03 	add.w	fp, r0, r3
 801ed96:	4558      	cmp	r0, fp
 801ed98:	d24e      	bcs.n	801ee38 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801ed9a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ed9e:	b12b      	cbz	r3, 801edac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801eda0:	2bff      	cmp	r3, #255	@ 0xff
 801eda2:	f8b4 e000 	ldrh.w	lr, [r4]
 801eda6:	d104      	bne.n	801edb2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801eda8:	f8a0 e000 	strh.w	lr, [r0]
 801edac:	3002      	adds	r0, #2
 801edae:	3402      	adds	r4, #2
 801edb0:	e7f1      	b.n	801ed96 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801edb2:	8802      	ldrh	r2, [r0, #0]
 801edb4:	b29f      	uxth	r7, r3
 801edb6:	43db      	mvns	r3, r3
 801edb8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801edbc:	1216      	asrs	r6, r2, #8
 801edbe:	b2db      	uxtb	r3, r3
 801edc0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801edc4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801edc8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801edcc:	00d2      	lsls	r2, r2, #3
 801edce:	fb16 f603 	smulbb	r6, r6, r3
 801edd2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801edd6:	b2d2      	uxtb	r2, r2
 801edd8:	fb0c 6c07 	mla	ip, ip, r7, r6
 801eddc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ede0:	fb1a fa03 	smulbb	sl, sl, r3
 801ede4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ede8:	fa1f fc8c 	uxth.w	ip, ip
 801edec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801edf0:	fb12 f303 	smulbb	r3, r2, r3
 801edf4:	fa5f fe8e 	uxtb.w	lr, lr
 801edf8:	fb06 a607 	mla	r6, r6, r7, sl
 801edfc:	f10c 0201 	add.w	r2, ip, #1
 801ee00:	fb0e 3307 	mla	r3, lr, r7, r3
 801ee04:	b2b6      	uxth	r6, r6
 801ee06:	b29b      	uxth	r3, r3
 801ee08:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ee0c:	f106 0a01 	add.w	sl, r6, #1
 801ee10:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801ee14:	f103 0c01 	add.w	ip, r3, #1
 801ee18:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801ee1c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ee20:	0976      	lsrs	r6, r6, #5
 801ee22:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee26:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801ee2a:	ea4c 0c02 	orr.w	ip, ip, r2
 801ee2e:	ea4c 0c06 	orr.w	ip, ip, r6
 801ee32:	f8a0 c000 	strh.w	ip, [r0]
 801ee36:	e7b9      	b.n	801edac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801ee38:	f8b9 3000 	ldrh.w	r3, [r9]
 801ee3c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801ee40:	eba3 0308 	sub.w	r3, r3, r8
 801ee44:	eba6 0608 	sub.w	r6, r6, r8
 801ee48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ee4c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801ee50:	440e      	add	r6, r1
 801ee52:	e79a      	b.n	801ed8a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801ee54:	4b03      	ldr	r3, [pc, #12]	@ (801ee64 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801ee56:	6818      	ldr	r0, [r3, #0]
 801ee58:	6803      	ldr	r3, [r0, #0]
 801ee5a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ee5c:	4798      	blx	r3
 801ee5e:	b007      	add	sp, #28
 801ee60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee64:	20003984 	.word	0x20003984
 801ee68:	2000397e 	.word	0x2000397e

0801ee6c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801ee6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee70:	b089      	sub	sp, #36	@ 0x24
 801ee72:	4607      	mov	r7, r0
 801ee74:	4688      	mov	r8, r1
 801ee76:	4692      	mov	sl, r2
 801ee78:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801ee7c:	4699      	mov	r9, r3
 801ee7e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801ee80:	2e00      	cmp	r6, #0
 801ee82:	d048      	beq.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801ee84:	4608      	mov	r0, r1
 801ee86:	f7fa f81b 	bl	8018ec0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ee8a:	4605      	mov	r5, r0
 801ee8c:	4640      	mov	r0, r8
 801ee8e:	f7fa f84b 	bl	8018f28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ee92:	f8ad 000e 	strh.w	r0, [sp, #14]
 801ee96:	4640      	mov	r0, r8
 801ee98:	f8ad a008 	strh.w	sl, [sp, #8]
 801ee9c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801eea0:	f8ad 900a 	strh.w	r9, [sp, #10]
 801eea4:	f7fa f8fe 	bl	80190a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801eea8:	4605      	mov	r5, r0
 801eeaa:	4640      	mov	r0, r8
 801eeac:	f7fa f92a 	bl	8019104 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801eeb0:	4682      	mov	sl, r0
 801eeb2:	4640      	mov	r0, r8
 801eeb4:	f7fa f97a 	bl	80191ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 801eeb8:	2810      	cmp	r0, #16
 801eeba:	d82c      	bhi.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801eebc:	e8df f010 	tbh	[pc, r0, lsl #1]
 801eec0:	00ba00ca 	.word	0x00ba00ca
 801eec4:	002b0011 	.word	0x002b0011
 801eec8:	002b002b 	.word	0x002b002b
 801eecc:	002b002b 	.word	0x002b002b
 801eed0:	002b002b 	.word	0x002b002b
 801eed4:	00c1002b 	.word	0x00c1002b
 801eed8:	002b002b 	.word	0x002b002b
 801eedc:	002b0180 	.word	0x002b0180
 801eee0:	0173      	.short	0x0173
 801eee2:	4bbc      	ldr	r3, [pc, #752]	@ (801f1d4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801eee4:	6818      	ldr	r0, [r3, #0]
 801eee6:	6803      	ldr	r3, [r0, #0]
 801eee8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801eeea:	4798      	blx	r3
 801eeec:	2eff      	cmp	r6, #255	@ 0xff
 801eeee:	d101      	bne.n	801eef4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801eef0:	0683      	lsls	r3, r0, #26
 801eef2:	d506      	bpl.n	801ef02 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801eef4:	4633      	mov	r3, r6
 801eef6:	4622      	mov	r2, r4
 801eef8:	a902      	add	r1, sp, #8
 801eefa:	4628      	mov	r0, r5
 801eefc:	f7ff f8fc 	bl	801e0f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ef00:	e009      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801ef02:	4640      	mov	r0, r8
 801ef04:	f7fa f896 	bl	8019034 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801ef08:	b940      	cbnz	r0, 801ef1c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801ef0a:	4623      	mov	r3, r4
 801ef0c:	aa02      	add	r2, sp, #8
 801ef0e:	4629      	mov	r1, r5
 801ef10:	4638      	mov	r0, r7
 801ef12:	f7ff f9d7 	bl	801e2c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801ef16:	b009      	add	sp, #36	@ 0x24
 801ef18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef1c:	f10d 0918 	add.w	r9, sp, #24
 801ef20:	4641      	mov	r1, r8
 801ef22:	f10d 0810 	add.w	r8, sp, #16
 801ef26:	4648      	mov	r0, r9
 801ef28:	f7fa f832 	bl	8018f90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801ef2c:	e899 0003 	ldmia.w	r9, {r0, r1}
 801ef30:	e888 0003 	stmia.w	r8, {r0, r1}
 801ef34:	4640      	mov	r0, r8
 801ef36:	4621      	mov	r1, r4
 801ef38:	f7f3 fa00 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 801ef3c:	4640      	mov	r0, r8
 801ef3e:	f7f3 fa40 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ef42:	2800      	cmp	r0, #0
 801ef44:	d1d6      	bne.n	801eef4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801ef46:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801ef4a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801ef4e:	4293      	cmp	r3, r2
 801ef50:	dd12      	ble.n	801ef78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801ef52:	1a9b      	subs	r3, r3, r2
 801ef54:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ef58:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ef5c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ef60:	4628      	mov	r0, r5
 801ef62:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ef66:	464a      	mov	r2, r9
 801ef68:	f8ad 101c 	strh.w	r1, [sp, #28]
 801ef6c:	a902      	add	r1, sp, #8
 801ef6e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ef72:	4633      	mov	r3, r6
 801ef74:	f7ff f8c0 	bl	801e0f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ef78:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801ef7c:	f9b4 2000 	ldrsh.w	r2, [r4]
 801ef80:	4293      	cmp	r3, r2
 801ef82:	dd12      	ble.n	801efaa <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801ef84:	1a9b      	subs	r3, r3, r2
 801ef86:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801ef8a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801ef8e:	f8ad 2018 	strh.w	r2, [sp, #24]
 801ef92:	464a      	mov	r2, r9
 801ef94:	f8ad 001a 	strh.w	r0, [sp, #26]
 801ef98:	4628      	mov	r0, r5
 801ef9a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801ef9e:	23ff      	movs	r3, #255	@ 0xff
 801efa0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801efa4:	a902      	add	r1, sp, #8
 801efa6:	f7ff f8a7 	bl	801e0f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801efaa:	4643      	mov	r3, r8
 801efac:	aa02      	add	r2, sp, #8
 801efae:	4629      	mov	r1, r5
 801efb0:	4638      	mov	r0, r7
 801efb2:	f7ff f987 	bl	801e2c4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801efb6:	88a2      	ldrh	r2, [r4, #4]
 801efb8:	8823      	ldrh	r3, [r4, #0]
 801efba:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801efbe:	4413      	add	r3, r2
 801efc0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801efc4:	440a      	add	r2, r1
 801efc6:	b29b      	uxth	r3, r3
 801efc8:	b292      	uxth	r2, r2
 801efca:	b218      	sxth	r0, r3
 801efcc:	b211      	sxth	r1, r2
 801efce:	4288      	cmp	r0, r1
 801efd0:	dd12      	ble.n	801eff8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801efd2:	1a9b      	subs	r3, r3, r2
 801efd4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801efd8:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801efdc:	464a      	mov	r2, r9
 801efde:	f8ad 1018 	strh.w	r1, [sp, #24]
 801efe2:	a902      	add	r1, sp, #8
 801efe4:	f8ad 301c 	strh.w	r3, [sp, #28]
 801efe8:	23ff      	movs	r3, #255	@ 0xff
 801efea:	f8ad 001e 	strh.w	r0, [sp, #30]
 801efee:	4628      	mov	r0, r5
 801eff0:	f8ad 601a 	strh.w	r6, [sp, #26]
 801eff4:	f7ff f880 	bl	801e0f8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801eff8:	88e2      	ldrh	r2, [r4, #6]
 801effa:	8863      	ldrh	r3, [r4, #2]
 801effc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f000:	4413      	add	r3, r2
 801f002:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f006:	440a      	add	r2, r1
 801f008:	b29b      	uxth	r3, r3
 801f00a:	b292      	uxth	r2, r2
 801f00c:	b218      	sxth	r0, r3
 801f00e:	b211      	sxth	r1, r2
 801f010:	4288      	cmp	r0, r1
 801f012:	dd80      	ble.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f014:	1a9b      	subs	r3, r3, r2
 801f016:	f9b4 6000 	ldrsh.w	r6, [r4]
 801f01a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f01e:	464a      	mov	r2, r9
 801f020:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f024:	23ff      	movs	r3, #255	@ 0xff
 801f026:	f8ad 6018 	strh.w	r6, [sp, #24]
 801f02a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f02e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f032:	e761      	b.n	801eef8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801f034:	4633      	mov	r3, r6
 801f036:	4622      	mov	r2, r4
 801f038:	a902      	add	r1, sp, #8
 801f03a:	4628      	mov	r0, r5
 801f03c:	f7ff f9b2 	bl	801e3a4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801f040:	e769      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f042:	e9cd 4600 	strd	r4, r6, [sp]
 801f046:	ab02      	add	r3, sp, #8
 801f048:	4652      	mov	r2, sl
 801f04a:	4629      	mov	r1, r5
 801f04c:	4638      	mov	r0, r7
 801f04e:	f7ff fd89 	bl	801eb64 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801f052:	e760      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f054:	4640      	mov	r0, r8
 801f056:	f7f9 ffed 	bl	8019034 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801f05a:	b948      	cbnz	r0, 801f070 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801f05c:	683b      	ldr	r3, [r7, #0]
 801f05e:	aa02      	add	r2, sp, #8
 801f060:	4629      	mov	r1, r5
 801f062:	e9cd 6000 	strd	r6, r0, [sp]
 801f066:	4638      	mov	r0, r7
 801f068:	68de      	ldr	r6, [r3, #12]
 801f06a:	4623      	mov	r3, r4
 801f06c:	47b0      	blx	r6
 801f06e:	e752      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f070:	f10d 0918 	add.w	r9, sp, #24
 801f074:	4641      	mov	r1, r8
 801f076:	f10d 0810 	add.w	r8, sp, #16
 801f07a:	4648      	mov	r0, r9
 801f07c:	f7f9 ff88 	bl	8018f90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801f080:	e899 0003 	ldmia.w	r9, {r0, r1}
 801f084:	e888 0003 	stmia.w	r8, {r0, r1}
 801f088:	4640      	mov	r0, r8
 801f08a:	4621      	mov	r1, r4
 801f08c:	f7f3 f956 	bl	801233c <_ZN8touchgfx4RectaNERKS0_>
 801f090:	4640      	mov	r0, r8
 801f092:	f7f3 f996 	bl	80123c2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f096:	b138      	cbz	r0, 801f0a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801f098:	4623      	mov	r3, r4
 801f09a:	9600      	str	r6, [sp, #0]
 801f09c:	aa02      	add	r2, sp, #8
 801f09e:	4651      	mov	r1, sl
 801f0a0:	4628      	mov	r0, r5
 801f0a2:	f7ff fdbd 	bl	801ec20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f0a6:	e736      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f0a8:	683b      	ldr	r3, [r7, #0]
 801f0aa:	aa02      	add	r2, sp, #8
 801f0ac:	4629      	mov	r1, r5
 801f0ae:	e9cd 6000 	strd	r6, r0, [sp]
 801f0b2:	4638      	mov	r0, r7
 801f0b4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801f0b8:	4643      	mov	r3, r8
 801f0ba:	47d8      	blx	fp
 801f0bc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801f0c0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801f0c4:	4293      	cmp	r3, r2
 801f0c6:	dd13      	ble.n	801f0f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801f0c8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801f0cc:	1a9b      	subs	r3, r3, r2
 801f0ce:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801f0d2:	f8ad 0018 	strh.w	r0, [sp, #24]
 801f0d6:	4628      	mov	r0, r5
 801f0d8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801f0dc:	aa02      	add	r2, sp, #8
 801f0de:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f0e2:	4651      	mov	r1, sl
 801f0e4:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f0e8:	464b      	mov	r3, r9
 801f0ea:	9600      	str	r6, [sp, #0]
 801f0ec:	f7ff fd98 	bl	801ec20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f0f0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801f0f4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801f0f8:	4293      	cmp	r3, r2
 801f0fa:	dd13      	ble.n	801f124 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801f0fc:	1a9b      	subs	r3, r3, r2
 801f0fe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801f102:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801f106:	f8ad 2018 	strh.w	r2, [sp, #24]
 801f10a:	aa02      	add	r2, sp, #8
 801f10c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f110:	4628      	mov	r0, r5
 801f112:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f116:	464b      	mov	r3, r9
 801f118:	f8ad 101e 	strh.w	r1, [sp, #30]
 801f11c:	4651      	mov	r1, sl
 801f11e:	9600      	str	r6, [sp, #0]
 801f120:	f7ff fd7e 	bl	801ec20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f124:	88a2      	ldrh	r2, [r4, #4]
 801f126:	8823      	ldrh	r3, [r4, #0]
 801f128:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801f12c:	4413      	add	r3, r2
 801f12e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801f132:	440a      	add	r2, r1
 801f134:	b29b      	uxth	r3, r3
 801f136:	b292      	uxth	r2, r2
 801f138:	b218      	sxth	r0, r3
 801f13a:	b211      	sxth	r1, r2
 801f13c:	4288      	cmp	r0, r1
 801f13e:	dd13      	ble.n	801f168 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801f140:	1a9b      	subs	r3, r3, r2
 801f142:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801f146:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801f14a:	aa02      	add	r2, sp, #8
 801f14c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801f150:	4651      	mov	r1, sl
 801f152:	f8ad 301c 	strh.w	r3, [sp, #28]
 801f156:	464b      	mov	r3, r9
 801f158:	f8ad 001e 	strh.w	r0, [sp, #30]
 801f15c:	4628      	mov	r0, r5
 801f15e:	9600      	str	r6, [sp, #0]
 801f160:	f8ad 701a 	strh.w	r7, [sp, #26]
 801f164:	f7ff fd5c 	bl	801ec20 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801f168:	88e2      	ldrh	r2, [r4, #6]
 801f16a:	8863      	ldrh	r3, [r4, #2]
 801f16c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801f170:	4413      	add	r3, r2
 801f172:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801f176:	440a      	add	r2, r1
 801f178:	b29b      	uxth	r3, r3
 801f17a:	b292      	uxth	r2, r2
 801f17c:	b218      	sxth	r0, r3
 801f17e:	b211      	sxth	r1, r2
 801f180:	4288      	cmp	r0, r1
 801f182:	f77f aec8 	ble.w	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f186:	f9b4 7000 	ldrsh.w	r7, [r4]
 801f18a:	1a9b      	subs	r3, r3, r2
 801f18c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801f190:	f8ad 301e 	strh.w	r3, [sp, #30]
 801f194:	464b      	mov	r3, r9
 801f196:	f8ad 7018 	strh.w	r7, [sp, #24]
 801f19a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801f19e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801f1a2:	9600      	str	r6, [sp, #0]
 801f1a4:	e77a      	b.n	801f09c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801f1a6:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801f1aa:	2800      	cmp	r0, #0
 801f1ac:	f43f aeb3 	beq.w	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f1b0:	6803      	ldr	r3, [r0, #0]
 801f1b2:	9600      	str	r6, [sp, #0]
 801f1b4:	68de      	ldr	r6, [r3, #12]
 801f1b6:	4623      	mov	r3, r4
 801f1b8:	aa02      	add	r2, sp, #8
 801f1ba:	4629      	mov	r1, r5
 801f1bc:	47b0      	blx	r6
 801f1be:	e6aa      	b.n	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f1c0:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801f1c4:	2800      	cmp	r0, #0
 801f1c6:	f43f aea6 	beq.w	801ef16 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801f1ca:	6803      	ldr	r3, [r0, #0]
 801f1cc:	9600      	str	r6, [sp, #0]
 801f1ce:	689e      	ldr	r6, [r3, #8]
 801f1d0:	e7f1      	b.n	801f1b6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801f1d2:	bf00      	nop
 801f1d4:	20003984 	.word	0x20003984

0801f1d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801f1d8:	b180      	cbz	r0, 801f1fc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801f1da:	2903      	cmp	r1, #3
 801f1dc:	d81c      	bhi.n	801f218 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f1de:	e8df f001 	tbb	[pc, r1]
 801f1e2:	1d02      	.short	0x1d02
 801f1e4:	1f08      	.short	0x1f08
 801f1e6:	4b10      	ldr	r3, [pc, #64]	@ (801f228 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f1e8:	8818      	ldrh	r0, [r3, #0]
 801f1ea:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f1ee:	4240      	negs	r0, r0
 801f1f0:	4770      	bx	lr
 801f1f2:	4b0d      	ldr	r3, [pc, #52]	@ (801f228 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801f1f4:	8818      	ldrh	r0, [r3, #0]
 801f1f6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f1fa:	4770      	bx	lr
 801f1fc:	2903      	cmp	r1, #3
 801f1fe:	d80b      	bhi.n	801f218 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801f200:	a301      	add	r3, pc, #4	@ (adr r3, 801f208 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801f202:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f206:	bf00      	nop
 801f208:	0801f21d 	.word	0x0801f21d
 801f20c:	0801f1f3 	.word	0x0801f1f3
 801f210:	0801f221 	.word	0x0801f221
 801f214:	0801f1e7 	.word	0x0801f1e7
 801f218:	2000      	movs	r0, #0
 801f21a:	4770      	bx	lr
 801f21c:	2001      	movs	r0, #1
 801f21e:	4770      	bx	lr
 801f220:	f04f 30ff 	mov.w	r0, #4294967295
 801f224:	4770      	bx	lr
 801f226:	bf00      	nop
 801f228:	2000397e 	.word	0x2000397e

0801f22c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801f22c:	b180      	cbz	r0, 801f250 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801f22e:	2903      	cmp	r1, #3
 801f230:	d81c      	bhi.n	801f26c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f232:	e8df f001 	tbb	[pc, r1]
 801f236:	021d      	.short	0x021d
 801f238:	071f      	.short	0x071f
 801f23a:	4b10      	ldr	r3, [pc, #64]	@ (801f27c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f23c:	8818      	ldrh	r0, [r3, #0]
 801f23e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f242:	4770      	bx	lr
 801f244:	4b0d      	ldr	r3, [pc, #52]	@ (801f27c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801f246:	8818      	ldrh	r0, [r3, #0]
 801f248:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801f24c:	4240      	negs	r0, r0
 801f24e:	4770      	bx	lr
 801f250:	2903      	cmp	r1, #3
 801f252:	d80b      	bhi.n	801f26c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801f254:	a301      	add	r3, pc, #4	@ (adr r3, 801f25c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801f256:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801f25a:	bf00      	nop
 801f25c:	0801f23b 	.word	0x0801f23b
 801f260:	0801f275 	.word	0x0801f275
 801f264:	0801f245 	.word	0x0801f245
 801f268:	0801f271 	.word	0x0801f271
 801f26c:	2000      	movs	r0, #0
 801f26e:	4770      	bx	lr
 801f270:	2001      	movs	r0, #1
 801f272:	4770      	bx	lr
 801f274:	f04f 30ff 	mov.w	r0, #4294967295
 801f278:	4770      	bx	lr
 801f27a:	bf00      	nop
 801f27c:	2000397e 	.word	0x2000397e

0801f280 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801f280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f284:	b099      	sub	sp, #100	@ 0x64
 801f286:	910b      	str	r1, [sp, #44]	@ 0x2c
 801f288:	a914      	add	r1, sp, #80	@ 0x50
 801f28a:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801f28e:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801f292:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801f296:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801f29a:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801f29e:	e881 000c 	stmia.w	r1, {r2, r3}
 801f2a2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801f2a6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801f2aa:	9309      	str	r3, [sp, #36]	@ 0x24
 801f2ac:	f891 900d 	ldrb.w	r9, [r1, #13]
 801f2b0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801f2b4:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801f2b8:	9310      	str	r3, [sp, #64]	@ 0x40
 801f2ba:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801f2be:	930c      	str	r3, [sp, #48]	@ 0x30
 801f2c0:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801f2c4:	798f      	ldrb	r7, [r1, #6]
 801f2c6:	431f      	orrs	r7, r3
 801f2c8:	f000 8195 	beq.w	801f5f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f2cc:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801f2d0:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801f2d4:	f891 9007 	ldrb.w	r9, [r1, #7]
 801f2d8:	ea59 0903 	orrs.w	r9, r9, r3
 801f2dc:	f000 818b 	beq.w	801f5f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f2e0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801f2e4:	b29b      	uxth	r3, r3
 801f2e6:	2d00      	cmp	r5, #0
 801f2e8:	f000 812e 	beq.w	801f548 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801f2ec:	1aed      	subs	r5, r5, r3
 801f2ee:	b2ad      	uxth	r5, r5
 801f2f0:	042b      	lsls	r3, r5, #16
 801f2f2:	d502      	bpl.n	801f2fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f2f4:	1b64      	subs	r4, r4, r5
 801f2f6:	2500      	movs	r5, #0
 801f2f8:	b224      	sxth	r4, r4
 801f2fa:	f9b2 1000 	ldrsh.w	r1, [r2]
 801f2fe:	a814      	add	r0, sp, #80	@ 0x50
 801f300:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801f304:	428c      	cmp	r4, r1
 801f306:	b28b      	uxth	r3, r1
 801f308:	bfbf      	itttt	lt
 801f30a:	18ed      	addlt	r5, r5, r3
 801f30c:	1b2c      	sublt	r4, r5, r4
 801f30e:	b2a5      	uxthlt	r5, r4
 801f310:	460c      	movlt	r4, r1
 801f312:	8891      	ldrh	r1, [r2, #4]
 801f314:	440b      	add	r3, r1
 801f316:	4621      	mov	r1, r4
 801f318:	b21b      	sxth	r3, r3
 801f31a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f31c:	88d3      	ldrh	r3, [r2, #6]
 801f31e:	8852      	ldrh	r2, [r2, #2]
 801f320:	4413      	add	r3, r2
 801f322:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f324:	b21b      	sxth	r3, r3
 801f326:	930d      	str	r3, [sp, #52]	@ 0x34
 801f328:	4bbd      	ldr	r3, [pc, #756]	@ (801f620 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801f32a:	f893 b000 	ldrb.w	fp, [r3]
 801f32e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801f332:	f1dc 0300 	rsbs	r3, ip, #0
 801f336:	eb43 030c 	adc.w	r3, r3, ip
 801f33a:	930e      	str	r3, [sp, #56]	@ 0x38
 801f33c:	4653      	mov	r3, sl
 801f33e:	f7f6 fcd3 	bl	8015ce8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801f342:	4621      	mov	r1, r4
 801f344:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801f348:	4653      	mov	r3, sl
 801f34a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801f34c:	a814      	add	r0, sp, #80	@ 0x50
 801f34e:	f7f6 fce8 	bl	8015d22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801f352:	a918      	add	r1, sp, #96	@ 0x60
 801f354:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801f358:	a817      	add	r0, sp, #92	@ 0x5c
 801f35a:	f7f6 fe0f 	bl	8015f7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801f35e:	f1ba 0f00 	cmp.w	sl, #0
 801f362:	f040 80f4 	bne.w	801f54e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801f366:	f1bb 0f01 	cmp.w	fp, #1
 801f36a:	f040 80f8 	bne.w	801f55e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801f36e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f370:	2b00      	cmp	r3, #0
 801f372:	f040 8145 	bne.w	801f600 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801f376:	b2ba      	uxth	r2, r7
 801f378:	b905      	cbnz	r5, 801f37c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801f37a:	b16e      	cbz	r6, 801f398 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801f37c:	fb06 5302 	mla	r3, r6, r2, r5
 801f380:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801f382:	4631      	mov	r1, r6
 801f384:	fb08 f303 	mul.w	r3, r8, r3
 801f388:	f003 0607 	and.w	r6, r3, #7
 801f38c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801f390:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f392:	eba9 0301 	sub.w	r3, r9, r1
 801f396:	930a      	str	r3, [sp, #40]	@ 0x28
 801f398:	4651      	mov	r1, sl
 801f39a:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801f39c:	f7ff ff1c 	bl	801f1d8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801f3a0:	4681      	mov	r9, r0
 801f3a2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801f3a4:	f7ff ff42 	bl	801f22c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801f3a8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f3aa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801f3ac:	4683      	mov	fp, r0
 801f3ae:	eba3 0a01 	sub.w	sl, r3, r1
 801f3b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f3b4:	459a      	cmp	sl, r3
 801f3b6:	bfa8      	it	ge
 801f3b8:	469a      	movge	sl, r3
 801f3ba:	f1ba 0f00 	cmp.w	sl, #0
 801f3be:	f340 811a 	ble.w	801f5f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f3c2:	1b64      	subs	r4, r4, r5
 801f3c4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f3c6:	1b1c      	subs	r4, r3, r4
 801f3c8:	42bc      	cmp	r4, r7
 801f3ca:	bfd4      	ite	le
 801f3cc:	ebc5 0504 	rsble	r5, r5, r4
 801f3d0:	ebc5 0507 	rsbgt	r5, r5, r7
 801f3d4:	2d00      	cmp	r5, #0
 801f3d6:	f340 810e 	ble.w	801f5f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f3da:	1b52      	subs	r2, r2, r5
 801f3dc:	fb08 f302 	mul.w	r3, r8, r2
 801f3e0:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f3e2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f3e4:	2b00      	cmp	r3, #0
 801f3e6:	f040 8116 	bne.w	801f616 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801f3ea:	4b8e      	ldr	r3, [pc, #568]	@ (801f624 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801f3ec:	6818      	ldr	r0, [r3, #0]
 801f3ee:	6803      	ldr	r3, [r0, #0]
 801f3f0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801f3f2:	4798      	blx	r3
 801f3f4:	2301      	movs	r3, #1
 801f3f6:	4a8c      	ldr	r2, [pc, #560]	@ (801f628 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801f3f8:	fa03 f308 	lsl.w	r3, r3, r8
 801f3fc:	8811      	ldrh	r1, [r2, #0]
 801f3fe:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801f402:	3b01      	subs	r3, #1
 801f404:	b2db      	uxtb	r3, r3
 801f406:	930e      	str	r3, [sp, #56]	@ 0x38
 801f408:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801f40c:	fb01 2303 	mla	r3, r1, r3, r2
 801f410:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801f414:	930a      	str	r3, [sp, #40]	@ 0x28
 801f416:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f418:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801f41c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801f41e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f420:	0a19      	lsrs	r1, r3, #8
 801f422:	b2cb      	uxtb	r3, r1
 801f424:	9312      	str	r3, [sp, #72]	@ 0x48
 801f426:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f428:	b2db      	uxtb	r3, r3
 801f42a:	9311      	str	r3, [sp, #68]	@ 0x44
 801f42c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801f42e:	095a      	lsrs	r2, r3, #5
 801f430:	4b7e      	ldr	r3, [pc, #504]	@ (801f62c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801f432:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801f436:	400b      	ands	r3, r1
 801f438:	4313      	orrs	r3, r2
 801f43a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801f43c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f440:	4313      	orrs	r3, r2
 801f442:	b29b      	uxth	r3, r3
 801f444:	9310      	str	r3, [sp, #64]	@ 0x40
 801f446:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f448:	781a      	ldrb	r2, [r3, #0]
 801f44a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801f44e:	fb05 b919 	mls	r9, r5, r9, fp
 801f452:	4132      	asrs	r2, r6
 801f454:	fb03 fb05 	mul.w	fp, r3, r5
 801f458:	930d      	str	r3, [sp, #52]	@ 0x34
 801f45a:	b2d2      	uxtb	r2, r2
 801f45c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801f460:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801f464:	f0c0 80f5 	bcc.w	801f652 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801f468:	46ae      	mov	lr, r5
 801f46a:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801f46e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801f472:	f0c0 80dd 	bcc.w	801f630 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801f476:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f478:	4013      	ands	r3, r2
 801f47a:	d055      	beq.n	801f528 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801f47c:	20ff      	movs	r0, #255	@ 0xff
 801f47e:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801f480:	fb90 f1f1 	sdiv	r1, r0, r1
 801f484:	434b      	muls	r3, r1
 801f486:	2bfe      	cmp	r3, #254	@ 0xfe
 801f488:	dd03      	ble.n	801f492 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801f48a:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f48c:	4281      	cmp	r1, r0
 801f48e:	f000 80c4 	beq.w	801f61a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801f492:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f494:	f8bc 4000 	ldrh.w	r4, [ip]
 801f498:	fb11 f303 	smulbb	r3, r1, r3
 801f49c:	1220      	asrs	r0, r4, #8
 801f49e:	b29b      	uxth	r3, r3
 801f4a0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801f4a4:	1c59      	adds	r1, r3, #1
 801f4a6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801f4aa:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f4ae:	10e1      	asrs	r1, r4, #3
 801f4b0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f4b4:	00e4      	lsls	r4, r4, #3
 801f4b6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801f4ba:	b29f      	uxth	r7, r3
 801f4bc:	43db      	mvns	r3, r3
 801f4be:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801f4c2:	b2db      	uxtb	r3, r3
 801f4c4:	b2e4      	uxtb	r4, r4
 801f4c6:	9309      	str	r3, [sp, #36]	@ 0x24
 801f4c8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801f4ca:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801f4ce:	fb13 f907 	smulbb	r9, r3, r7
 801f4d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4d4:	fb00 9003 	mla	r0, r0, r3, r9
 801f4d8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f4da:	fb13 f907 	smulbb	r9, r3, r7
 801f4de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4e0:	b280      	uxth	r0, r0
 801f4e2:	fb01 9103 	mla	r1, r1, r3, r9
 801f4e6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f4e8:	fb13 f707 	smulbb	r7, r3, r7
 801f4ec:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f4ee:	b289      	uxth	r1, r1
 801f4f0:	fb04 7403 	mla	r4, r4, r3, r7
 801f4f4:	1c43      	adds	r3, r0, #1
 801f4f6:	b2a4      	uxth	r4, r4
 801f4f8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f4fc:	f104 0901 	add.w	r9, r4, #1
 801f500:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801f504:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801f508:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801f50c:	ea49 0000 	orr.w	r0, r9, r0
 801f510:	f101 0901 	add.w	r9, r1, #1
 801f514:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801f518:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801f51c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801f520:	ea40 0009 	orr.w	r0, r0, r9
 801f524:	f8ac 0000 	strh.w	r0, [ip]
 801f528:	4446      	add	r6, r8
 801f52a:	b2b6      	uxth	r6, r6
 801f52c:	2e07      	cmp	r6, #7
 801f52e:	bf89      	itett	hi
 801f530:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801f532:	fa42 f208 	asrls.w	r2, r2, r8
 801f536:	2600      	movhi	r6, #0
 801f538:	785a      	ldrbhi	r2, [r3, #1]
 801f53a:	bf8a      	itet	hi
 801f53c:	3301      	addhi	r3, #1
 801f53e:	b2d2      	uxtbls	r2, r2
 801f540:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801f542:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f544:	449c      	add	ip, r3
 801f546:	e792      	b.n	801f46e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801f548:	441c      	add	r4, r3
 801f54a:	b224      	sxth	r4, r4
 801f54c:	e6d5      	b.n	801f2fa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801f54e:	f1ba 0f01 	cmp.w	sl, #1
 801f552:	f47f af0c 	bne.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f556:	f1bb 0f01 	cmp.w	fp, #1
 801f55a:	f47f af08 	bne.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f55e:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 801f624 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801f562:	f8db 0000 	ldr.w	r0, [fp]
 801f566:	6803      	ldr	r3, [r0, #0]
 801f568:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801f56a:	4798      	blx	r3
 801f56c:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801f570:	465a      	mov	r2, fp
 801f572:	d006      	beq.n	801f582 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f574:	f1b8 0f04 	cmp.w	r8, #4
 801f578:	d140      	bne.n	801f5fc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801f57a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f57c:	3300      	adds	r3, #0
 801f57e:	bf18      	it	ne
 801f580:	2301      	movne	r3, #1
 801f582:	0580      	lsls	r0, r0, #22
 801f584:	d56e      	bpl.n	801f664 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f586:	f1b8 0f08 	cmp.w	r8, #8
 801f58a:	d16b      	bne.n	801f664 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801f58c:	2b00      	cmp	r3, #0
 801f58e:	bf0c      	ite	eq
 801f590:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801f594:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801f598:	2d00      	cmp	r5, #0
 801f59a:	f47f aee8 	bne.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f59e:	2e00      	cmp	r6, #0
 801f5a0:	f47f aee5 	bne.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f5a4:	19e3      	adds	r3, r4, r7
 801f5a6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801f5a8:	4283      	cmp	r3, r0
 801f5aa:	f73f aee0 	bgt.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f5ae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f5b0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f5b2:	444b      	add	r3, r9
 801f5b4:	4283      	cmp	r3, r0
 801f5b6:	f73f aeda 	bgt.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f5ba:	b2bf      	uxth	r7, r7
 801f5bc:	f1b8 0f08 	cmp.w	r8, #8
 801f5c0:	6810      	ldr	r0, [r2, #0]
 801f5c2:	f04f 0500 	mov.w	r5, #0
 801f5c6:	bf18      	it	ne
 801f5c8:	3701      	addne	r7, #1
 801f5ca:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801f5ce:	6804      	ldr	r4, [r0, #0]
 801f5d0:	bf18      	it	ne
 801f5d2:	f027 0701 	bicne.w	r7, r7, #1
 801f5d6:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801f5da:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f5de:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801f5e0:	bf18      	it	ne
 801f5e2:	b2bf      	uxthne	r7, r7
 801f5e4:	9104      	str	r1, [sp, #16]
 801f5e6:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801f5e8:	e9cd 7900 	strd	r7, r9, [sp]
 801f5ec:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801f5f0:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801f5f2:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801f5f4:	47a0      	blx	r4
 801f5f6:	b019      	add	sp, #100	@ 0x64
 801f5f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f5fc:	2300      	movs	r3, #0
 801f5fe:	e7c0      	b.n	801f582 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801f600:	2208      	movs	r2, #8
 801f602:	fb92 f3f8 	sdiv	r3, r2, r8
 801f606:	1e5a      	subs	r2, r3, #1
 801f608:	443a      	add	r2, r7
 801f60a:	fb92 f2f3 	sdiv	r2, r2, r3
 801f60e:	fb12 f203 	smulbb	r2, r2, r3
 801f612:	b292      	uxth	r2, r2
 801f614:	e6b0      	b.n	801f378 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801f616:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801f618:	e6ec      	b.n	801f3f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801f61a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801f61c:	e782      	b.n	801f524 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801f61e:	bf00      	nop
 801f620:	2000397c 	.word	0x2000397c
 801f624:	20003984 	.word	0x20003984
 801f628:	2000397e 	.word	0x2000397e
 801f62c:	00fff800 	.word	0x00fff800
 801f630:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f632:	b153      	cbz	r3, 801f64a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801f634:	441e      	add	r6, r3
 801f636:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801f638:	b2b6      	uxth	r6, r6
 801f63a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801f63e:	f006 0607 	and.w	r6, r6, #7
 801f642:	781a      	ldrb	r2, [r3, #0]
 801f644:	9328      	str	r3, [sp, #160]	@ 0xa0
 801f646:	4132      	asrs	r2, r6
 801f648:	b2d2      	uxtb	r2, r2
 801f64a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f64c:	445b      	add	r3, fp
 801f64e:	930a      	str	r3, [sp, #40]	@ 0x28
 801f650:	e706      	b.n	801f460 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801f652:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f654:	2b00      	cmp	r3, #0
 801f656:	d1ce      	bne.n	801f5f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f658:	4b05      	ldr	r3, [pc, #20]	@ (801f670 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801f65a:	6818      	ldr	r0, [r3, #0]
 801f65c:	6803      	ldr	r3, [r0, #0]
 801f65e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801f660:	4798      	blx	r3
 801f662:	e7c8      	b.n	801f5f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801f664:	2b00      	cmp	r3, #0
 801f666:	f43f ae82 	beq.w	801f36e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801f66a:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801f66e:	e793      	b.n	801f598 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801f670:	20003984 	.word	0x20003984

0801f674 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801f674:	b538      	push	{r3, r4, r5, lr}
 801f676:	4c15      	ldr	r4, [pc, #84]	@ (801f6cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801f678:	4605      	mov	r5, r0
 801f67a:	7823      	ldrb	r3, [r4, #0]
 801f67c:	f3bf 8f5b 	dmb	ish
 801f680:	07da      	lsls	r2, r3, #31
 801f682:	d40b      	bmi.n	801f69c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f684:	4620      	mov	r0, r4
 801f686:	f008 f9f8 	bl	8027a7a <__cxa_guard_acquire>
 801f68a:	b138      	cbz	r0, 801f69c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801f68c:	4620      	mov	r0, r4
 801f68e:	f008 fa00 	bl	8027a92 <__cxa_guard_release>
 801f692:	4a0f      	ldr	r2, [pc, #60]	@ (801f6d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f694:	490f      	ldr	r1, [pc, #60]	@ (801f6d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801f696:	4810      	ldr	r0, [pc, #64]	@ (801f6d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f698:	f008 f9e8 	bl	8027a6c <__aeabi_atexit>
 801f69c:	4c0f      	ldr	r4, [pc, #60]	@ (801f6dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801f69e:	7823      	ldrb	r3, [r4, #0]
 801f6a0:	f3bf 8f5b 	dmb	ish
 801f6a4:	07db      	lsls	r3, r3, #31
 801f6a6:	d40b      	bmi.n	801f6c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f6a8:	4620      	mov	r0, r4
 801f6aa:	f008 f9e6 	bl	8027a7a <__cxa_guard_acquire>
 801f6ae:	b138      	cbz	r0, 801f6c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801f6b0:	4620      	mov	r0, r4
 801f6b2:	f008 f9ee 	bl	8027a92 <__cxa_guard_release>
 801f6b6:	4a06      	ldr	r2, [pc, #24]	@ (801f6d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801f6b8:	4909      	ldr	r1, [pc, #36]	@ (801f6e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801f6ba:	480a      	ldr	r0, [pc, #40]	@ (801f6e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f6bc:	f008 f9d6 	bl	8027a6c <__aeabi_atexit>
 801f6c0:	4b05      	ldr	r3, [pc, #20]	@ (801f6d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801f6c2:	616b      	str	r3, [r5, #20]
 801f6c4:	4b07      	ldr	r3, [pc, #28]	@ (801f6e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801f6c6:	61ab      	str	r3, [r5, #24]
 801f6c8:	bd38      	pop	{r3, r4, r5, pc}
 801f6ca:	bf00      	nop
 801f6cc:	20003a68 	.word	0x20003a68
 801f6d0:	20000000 	.word	0x20000000
 801f6d4:	0801b823 	.word	0x0801b823
 801f6d8:	200001ec 	.word	0x200001ec
 801f6dc:	20003a6c 	.word	0x20003a6c
 801f6e0:	0801b821 	.word	0x0801b821
 801f6e4:	200001f0 	.word	0x200001f0

0801f6e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801f6e8:	b538      	push	{r3, r4, r5, lr}
 801f6ea:	4c15      	ldr	r4, [pc, #84]	@ (801f740 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801f6ec:	4605      	mov	r5, r0
 801f6ee:	7823      	ldrb	r3, [r4, #0]
 801f6f0:	f3bf 8f5b 	dmb	ish
 801f6f4:	07da      	lsls	r2, r3, #31
 801f6f6:	d40b      	bmi.n	801f710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f6f8:	4620      	mov	r0, r4
 801f6fa:	f008 f9be 	bl	8027a7a <__cxa_guard_acquire>
 801f6fe:	b138      	cbz	r0, 801f710 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801f700:	4620      	mov	r0, r4
 801f702:	f008 f9c6 	bl	8027a92 <__cxa_guard_release>
 801f706:	4a0f      	ldr	r2, [pc, #60]	@ (801f744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f708:	490f      	ldr	r1, [pc, #60]	@ (801f748 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801f70a:	4810      	ldr	r0, [pc, #64]	@ (801f74c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f70c:	f008 f9ae 	bl	8027a6c <__aeabi_atexit>
 801f710:	4c0f      	ldr	r4, [pc, #60]	@ (801f750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801f712:	7823      	ldrb	r3, [r4, #0]
 801f714:	f3bf 8f5b 	dmb	ish
 801f718:	07db      	lsls	r3, r3, #31
 801f71a:	d40b      	bmi.n	801f734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f71c:	4620      	mov	r0, r4
 801f71e:	f008 f9ac 	bl	8027a7a <__cxa_guard_acquire>
 801f722:	b138      	cbz	r0, 801f734 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801f724:	4620      	mov	r0, r4
 801f726:	f008 f9b4 	bl	8027a92 <__cxa_guard_release>
 801f72a:	4a06      	ldr	r2, [pc, #24]	@ (801f744 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801f72c:	4909      	ldr	r1, [pc, #36]	@ (801f754 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801f72e:	480a      	ldr	r0, [pc, #40]	@ (801f758 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f730:	f008 f99c 	bl	8027a6c <__aeabi_atexit>
 801f734:	4b05      	ldr	r3, [pc, #20]	@ (801f74c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801f736:	60eb      	str	r3, [r5, #12]
 801f738:	4b07      	ldr	r3, [pc, #28]	@ (801f758 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801f73a:	612b      	str	r3, [r5, #16]
 801f73c:	bd38      	pop	{r3, r4, r5, pc}
 801f73e:	bf00      	nop
 801f740:	20003a40 	.word	0x20003a40
 801f744:	20000000 	.word	0x20000000
 801f748:	0801b827 	.word	0x0801b827
 801f74c:	200001c4 	.word	0x200001c4
 801f750:	20003a44 	.word	0x20003a44
 801f754:	0801b825 	.word	0x0801b825
 801f758:	200001c8 	.word	0x200001c8

0801f75c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801f75c:	b510      	push	{r4, lr}
 801f75e:	4604      	mov	r4, r0
 801f760:	f7ff ff88 	bl	801f674 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801f764:	4620      	mov	r0, r4
 801f766:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f76a:	f7ff bfbd 	b.w	801f6e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801f770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801f770:	b538      	push	{r3, r4, r5, lr}
 801f772:	4c15      	ldr	r4, [pc, #84]	@ (801f7c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801f774:	4605      	mov	r5, r0
 801f776:	7823      	ldrb	r3, [r4, #0]
 801f778:	f3bf 8f5b 	dmb	ish
 801f77c:	07da      	lsls	r2, r3, #31
 801f77e:	d40b      	bmi.n	801f798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f780:	4620      	mov	r0, r4
 801f782:	f008 f97a 	bl	8027a7a <__cxa_guard_acquire>
 801f786:	b138      	cbz	r0, 801f798 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801f788:	4620      	mov	r0, r4
 801f78a:	f008 f982 	bl	8027a92 <__cxa_guard_release>
 801f78e:	4a0f      	ldr	r2, [pc, #60]	@ (801f7cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f790:	490f      	ldr	r1, [pc, #60]	@ (801f7d0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801f792:	4810      	ldr	r0, [pc, #64]	@ (801f7d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f794:	f008 f96a 	bl	8027a6c <__aeabi_atexit>
 801f798:	4c0f      	ldr	r4, [pc, #60]	@ (801f7d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801f79a:	7823      	ldrb	r3, [r4, #0]
 801f79c:	f3bf 8f5b 	dmb	ish
 801f7a0:	07db      	lsls	r3, r3, #31
 801f7a2:	d40b      	bmi.n	801f7bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f7a4:	4620      	mov	r0, r4
 801f7a6:	f008 f968 	bl	8027a7a <__cxa_guard_acquire>
 801f7aa:	b138      	cbz	r0, 801f7bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801f7ac:	4620      	mov	r0, r4
 801f7ae:	f008 f970 	bl	8027a92 <__cxa_guard_release>
 801f7b2:	4a06      	ldr	r2, [pc, #24]	@ (801f7cc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801f7b4:	4909      	ldr	r1, [pc, #36]	@ (801f7dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801f7b6:	480a      	ldr	r0, [pc, #40]	@ (801f7e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f7b8:	f008 f958 	bl	8027a6c <__aeabi_atexit>
 801f7bc:	4b05      	ldr	r3, [pc, #20]	@ (801f7d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801f7be:	626b      	str	r3, [r5, #36]	@ 0x24
 801f7c0:	4b07      	ldr	r3, [pc, #28]	@ (801f7e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801f7c2:	62ab      	str	r3, [r5, #40]	@ 0x28
 801f7c4:	bd38      	pop	{r3, r4, r5, pc}
 801f7c6:	bf00      	nop
 801f7c8:	20003a70 	.word	0x20003a70
 801f7cc:	20000000 	.word	0x20000000
 801f7d0:	0801b81b 	.word	0x0801b81b
 801f7d4:	200001f4 	.word	0x200001f4
 801f7d8:	20003a74 	.word	0x20003a74
 801f7dc:	0801b819 	.word	0x0801b819
 801f7e0:	200001f8 	.word	0x200001f8

0801f7e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801f7e4:	b538      	push	{r3, r4, r5, lr}
 801f7e6:	4c15      	ldr	r4, [pc, #84]	@ (801f83c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801f7e8:	4605      	mov	r5, r0
 801f7ea:	7823      	ldrb	r3, [r4, #0]
 801f7ec:	f3bf 8f5b 	dmb	ish
 801f7f0:	07da      	lsls	r2, r3, #31
 801f7f2:	d40b      	bmi.n	801f80c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f7f4:	4620      	mov	r0, r4
 801f7f6:	f008 f940 	bl	8027a7a <__cxa_guard_acquire>
 801f7fa:	b138      	cbz	r0, 801f80c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801f7fc:	4620      	mov	r0, r4
 801f7fe:	f008 f948 	bl	8027a92 <__cxa_guard_release>
 801f802:	4a0f      	ldr	r2, [pc, #60]	@ (801f840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f804:	490f      	ldr	r1, [pc, #60]	@ (801f844 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801f806:	4810      	ldr	r0, [pc, #64]	@ (801f848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f808:	f008 f930 	bl	8027a6c <__aeabi_atexit>
 801f80c:	4c0f      	ldr	r4, [pc, #60]	@ (801f84c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801f80e:	7823      	ldrb	r3, [r4, #0]
 801f810:	f3bf 8f5b 	dmb	ish
 801f814:	07db      	lsls	r3, r3, #31
 801f816:	d40b      	bmi.n	801f830 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f818:	4620      	mov	r0, r4
 801f81a:	f008 f92e 	bl	8027a7a <__cxa_guard_acquire>
 801f81e:	b138      	cbz	r0, 801f830 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801f820:	4620      	mov	r0, r4
 801f822:	f008 f936 	bl	8027a92 <__cxa_guard_release>
 801f826:	4a06      	ldr	r2, [pc, #24]	@ (801f840 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801f828:	4909      	ldr	r1, [pc, #36]	@ (801f850 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801f82a:	480a      	ldr	r0, [pc, #40]	@ (801f854 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f82c:	f008 f91e 	bl	8027a6c <__aeabi_atexit>
 801f830:	4b05      	ldr	r3, [pc, #20]	@ (801f848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801f832:	61eb      	str	r3, [r5, #28]
 801f834:	4b07      	ldr	r3, [pc, #28]	@ (801f854 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801f836:	622b      	str	r3, [r5, #32]
 801f838:	bd38      	pop	{r3, r4, r5, pc}
 801f83a:	bf00      	nop
 801f83c:	20003a48 	.word	0x20003a48
 801f840:	20000000 	.word	0x20000000
 801f844:	0801b81f 	.word	0x0801b81f
 801f848:	200001cc 	.word	0x200001cc
 801f84c:	20003a4c 	.word	0x20003a4c
 801f850:	0801b81d 	.word	0x0801b81d
 801f854:	200001d0 	.word	0x200001d0

0801f858 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801f858:	b510      	push	{r4, lr}
 801f85a:	4604      	mov	r4, r0
 801f85c:	f7ff ff88 	bl	801f770 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801f860:	4620      	mov	r0, r4
 801f862:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f866:	f7ff bfbd 	b.w	801f7e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801f86c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801f86c:	b538      	push	{r3, r4, r5, lr}
 801f86e:	4c15      	ldr	r4, [pc, #84]	@ (801f8c4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801f870:	4605      	mov	r5, r0
 801f872:	7823      	ldrb	r3, [r4, #0]
 801f874:	f3bf 8f5b 	dmb	ish
 801f878:	07da      	lsls	r2, r3, #31
 801f87a:	d40b      	bmi.n	801f894 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f87c:	4620      	mov	r0, r4
 801f87e:	f008 f8fc 	bl	8027a7a <__cxa_guard_acquire>
 801f882:	b138      	cbz	r0, 801f894 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801f884:	4620      	mov	r0, r4
 801f886:	f008 f904 	bl	8027a92 <__cxa_guard_release>
 801f88a:	4a0f      	ldr	r2, [pc, #60]	@ (801f8c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f88c:	490f      	ldr	r1, [pc, #60]	@ (801f8cc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801f88e:	4810      	ldr	r0, [pc, #64]	@ (801f8d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f890:	f008 f8ec 	bl	8027a6c <__aeabi_atexit>
 801f894:	4c0f      	ldr	r4, [pc, #60]	@ (801f8d4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801f896:	7823      	ldrb	r3, [r4, #0]
 801f898:	f3bf 8f5b 	dmb	ish
 801f89c:	07db      	lsls	r3, r3, #31
 801f89e:	d40b      	bmi.n	801f8b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f8a0:	4620      	mov	r0, r4
 801f8a2:	f008 f8ea 	bl	8027a7a <__cxa_guard_acquire>
 801f8a6:	b138      	cbz	r0, 801f8b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801f8a8:	4620      	mov	r0, r4
 801f8aa:	f008 f8f2 	bl	8027a92 <__cxa_guard_release>
 801f8ae:	4a06      	ldr	r2, [pc, #24]	@ (801f8c8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801f8b0:	4909      	ldr	r1, [pc, #36]	@ (801f8d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801f8b2:	480a      	ldr	r0, [pc, #40]	@ (801f8dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f8b4:	f008 f8da 	bl	8027a6c <__aeabi_atexit>
 801f8b8:	4b05      	ldr	r3, [pc, #20]	@ (801f8d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801f8ba:	636b      	str	r3, [r5, #52]	@ 0x34
 801f8bc:	4b07      	ldr	r3, [pc, #28]	@ (801f8dc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801f8be:	63ab      	str	r3, [r5, #56]	@ 0x38
 801f8c0:	bd38      	pop	{r3, r4, r5, pc}
 801f8c2:	bf00      	nop
 801f8c4:	20003a80 	.word	0x20003a80
 801f8c8:	20000000 	.word	0x20000000
 801f8cc:	0801b813 	.word	0x0801b813
 801f8d0:	20000204 	.word	0x20000204
 801f8d4:	20003a84 	.word	0x20003a84
 801f8d8:	0801b811 	.word	0x0801b811
 801f8dc:	20000208 	.word	0x20000208

0801f8e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801f8e0:	b538      	push	{r3, r4, r5, lr}
 801f8e2:	4c15      	ldr	r4, [pc, #84]	@ (801f938 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801f8e4:	4605      	mov	r5, r0
 801f8e6:	7823      	ldrb	r3, [r4, #0]
 801f8e8:	f3bf 8f5b 	dmb	ish
 801f8ec:	07da      	lsls	r2, r3, #31
 801f8ee:	d40b      	bmi.n	801f908 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f8f0:	4620      	mov	r0, r4
 801f8f2:	f008 f8c2 	bl	8027a7a <__cxa_guard_acquire>
 801f8f6:	b138      	cbz	r0, 801f908 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801f8f8:	4620      	mov	r0, r4
 801f8fa:	f008 f8ca 	bl	8027a92 <__cxa_guard_release>
 801f8fe:	4a0f      	ldr	r2, [pc, #60]	@ (801f93c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f900:	490f      	ldr	r1, [pc, #60]	@ (801f940 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801f902:	4810      	ldr	r0, [pc, #64]	@ (801f944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f904:	f008 f8b2 	bl	8027a6c <__aeabi_atexit>
 801f908:	4c0f      	ldr	r4, [pc, #60]	@ (801f948 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801f90a:	7823      	ldrb	r3, [r4, #0]
 801f90c:	f3bf 8f5b 	dmb	ish
 801f910:	07db      	lsls	r3, r3, #31
 801f912:	d40b      	bmi.n	801f92c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f914:	4620      	mov	r0, r4
 801f916:	f008 f8b0 	bl	8027a7a <__cxa_guard_acquire>
 801f91a:	b138      	cbz	r0, 801f92c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801f91c:	4620      	mov	r0, r4
 801f91e:	f008 f8b8 	bl	8027a92 <__cxa_guard_release>
 801f922:	4a06      	ldr	r2, [pc, #24]	@ (801f93c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801f924:	4909      	ldr	r1, [pc, #36]	@ (801f94c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801f926:	480a      	ldr	r0, [pc, #40]	@ (801f950 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f928:	f008 f8a0 	bl	8027a6c <__aeabi_atexit>
 801f92c:	4b05      	ldr	r3, [pc, #20]	@ (801f944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801f92e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801f930:	4b07      	ldr	r3, [pc, #28]	@ (801f950 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801f932:	632b      	str	r3, [r5, #48]	@ 0x30
 801f934:	bd38      	pop	{r3, r4, r5, pc}
 801f936:	bf00      	nop
 801f938:	20003a50 	.word	0x20003a50
 801f93c:	20000000 	.word	0x20000000
 801f940:	0801b817 	.word	0x0801b817
 801f944:	200001d4 	.word	0x200001d4
 801f948:	20003a54 	.word	0x20003a54
 801f94c:	0801b815 	.word	0x0801b815
 801f950:	200001d8 	.word	0x200001d8

0801f954 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801f954:	b510      	push	{r4, lr}
 801f956:	4604      	mov	r4, r0
 801f958:	f7ff ff88 	bl	801f86c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801f95c:	4620      	mov	r0, r4
 801f95e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801f962:	f7ff bfbd 	b.w	801f8e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801f968 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801f968:	b538      	push	{r3, r4, r5, lr}
 801f96a:	4c15      	ldr	r4, [pc, #84]	@ (801f9c0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801f96c:	4605      	mov	r5, r0
 801f96e:	7823      	ldrb	r3, [r4, #0]
 801f970:	f3bf 8f5b 	dmb	ish
 801f974:	07da      	lsls	r2, r3, #31
 801f976:	d40b      	bmi.n	801f990 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f978:	4620      	mov	r0, r4
 801f97a:	f008 f87e 	bl	8027a7a <__cxa_guard_acquire>
 801f97e:	b138      	cbz	r0, 801f990 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801f980:	4620      	mov	r0, r4
 801f982:	f008 f886 	bl	8027a92 <__cxa_guard_release>
 801f986:	4a0f      	ldr	r2, [pc, #60]	@ (801f9c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f988:	490f      	ldr	r1, [pc, #60]	@ (801f9c8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801f98a:	4810      	ldr	r0, [pc, #64]	@ (801f9cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f98c:	f008 f86e 	bl	8027a6c <__aeabi_atexit>
 801f990:	4c0f      	ldr	r4, [pc, #60]	@ (801f9d0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801f992:	7823      	ldrb	r3, [r4, #0]
 801f994:	f3bf 8f5b 	dmb	ish
 801f998:	07db      	lsls	r3, r3, #31
 801f99a:	d40b      	bmi.n	801f9b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f99c:	4620      	mov	r0, r4
 801f99e:	f008 f86c 	bl	8027a7a <__cxa_guard_acquire>
 801f9a2:	b138      	cbz	r0, 801f9b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801f9a4:	4620      	mov	r0, r4
 801f9a6:	f008 f874 	bl	8027a92 <__cxa_guard_release>
 801f9aa:	4a06      	ldr	r2, [pc, #24]	@ (801f9c4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801f9ac:	4909      	ldr	r1, [pc, #36]	@ (801f9d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801f9ae:	480a      	ldr	r0, [pc, #40]	@ (801f9d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f9b0:	f008 f85c 	bl	8027a6c <__aeabi_atexit>
 801f9b4:	4b05      	ldr	r3, [pc, #20]	@ (801f9cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801f9b6:	656b      	str	r3, [r5, #84]	@ 0x54
 801f9b8:	4b07      	ldr	r3, [pc, #28]	@ (801f9d8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801f9ba:	65ab      	str	r3, [r5, #88]	@ 0x58
 801f9bc:	bd38      	pop	{r3, r4, r5, pc}
 801f9be:	bf00      	nop
 801f9c0:	20003a88 	.word	0x20003a88
 801f9c4:	20000000 	.word	0x20000000
 801f9c8:	0801b803 	.word	0x0801b803
 801f9cc:	2000020c 	.word	0x2000020c
 801f9d0:	20003a8c 	.word	0x20003a8c
 801f9d4:	0801b801 	.word	0x0801b801
 801f9d8:	20000210 	.word	0x20000210

0801f9dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801f9dc:	b538      	push	{r3, r4, r5, lr}
 801f9de:	4c15      	ldr	r4, [pc, #84]	@ (801fa34 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801f9e0:	4605      	mov	r5, r0
 801f9e2:	7823      	ldrb	r3, [r4, #0]
 801f9e4:	f3bf 8f5b 	dmb	ish
 801f9e8:	07da      	lsls	r2, r3, #31
 801f9ea:	d40b      	bmi.n	801fa04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f9ec:	4620      	mov	r0, r4
 801f9ee:	f008 f844 	bl	8027a7a <__cxa_guard_acquire>
 801f9f2:	b138      	cbz	r0, 801fa04 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801f9f4:	4620      	mov	r0, r4
 801f9f6:	f008 f84c 	bl	8027a92 <__cxa_guard_release>
 801f9fa:	4a0f      	ldr	r2, [pc, #60]	@ (801fa38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801f9fc:	490f      	ldr	r1, [pc, #60]	@ (801fa3c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801f9fe:	4810      	ldr	r0, [pc, #64]	@ (801fa40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fa00:	f008 f834 	bl	8027a6c <__aeabi_atexit>
 801fa04:	4c0f      	ldr	r4, [pc, #60]	@ (801fa44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801fa06:	7823      	ldrb	r3, [r4, #0]
 801fa08:	f3bf 8f5b 	dmb	ish
 801fa0c:	07db      	lsls	r3, r3, #31
 801fa0e:	d40b      	bmi.n	801fa28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fa10:	4620      	mov	r0, r4
 801fa12:	f008 f832 	bl	8027a7a <__cxa_guard_acquire>
 801fa16:	b138      	cbz	r0, 801fa28 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801fa18:	4620      	mov	r0, r4
 801fa1a:	f008 f83a 	bl	8027a92 <__cxa_guard_release>
 801fa1e:	4a06      	ldr	r2, [pc, #24]	@ (801fa38 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801fa20:	4909      	ldr	r1, [pc, #36]	@ (801fa48 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801fa22:	480a      	ldr	r0, [pc, #40]	@ (801fa4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fa24:	f008 f822 	bl	8027a6c <__aeabi_atexit>
 801fa28:	4b05      	ldr	r3, [pc, #20]	@ (801fa40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801fa2a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801fa2c:	4b07      	ldr	r3, [pc, #28]	@ (801fa4c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801fa2e:	652b      	str	r3, [r5, #80]	@ 0x50
 801fa30:	bd38      	pop	{r3, r4, r5, pc}
 801fa32:	bf00      	nop
 801fa34:	20003a90 	.word	0x20003a90
 801fa38:	20000000 	.word	0x20000000
 801fa3c:	0801b807 	.word	0x0801b807
 801fa40:	20000214 	.word	0x20000214
 801fa44:	20003a94 	.word	0x20003a94
 801fa48:	0801b805 	.word	0x0801b805
 801fa4c:	20000218 	.word	0x20000218

0801fa50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801fa50:	b538      	push	{r3, r4, r5, lr}
 801fa52:	4c15      	ldr	r4, [pc, #84]	@ (801faa8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801fa54:	4605      	mov	r5, r0
 801fa56:	7823      	ldrb	r3, [r4, #0]
 801fa58:	f3bf 8f5b 	dmb	ish
 801fa5c:	07da      	lsls	r2, r3, #31
 801fa5e:	d40b      	bmi.n	801fa78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fa60:	4620      	mov	r0, r4
 801fa62:	f008 f80a 	bl	8027a7a <__cxa_guard_acquire>
 801fa66:	b138      	cbz	r0, 801fa78 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801fa68:	4620      	mov	r0, r4
 801fa6a:	f008 f812 	bl	8027a92 <__cxa_guard_release>
 801fa6e:	4a0f      	ldr	r2, [pc, #60]	@ (801faac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fa70:	490f      	ldr	r1, [pc, #60]	@ (801fab0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801fa72:	4810      	ldr	r0, [pc, #64]	@ (801fab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fa74:	f007 fffa 	bl	8027a6c <__aeabi_atexit>
 801fa78:	4c0f      	ldr	r4, [pc, #60]	@ (801fab8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801fa7a:	7823      	ldrb	r3, [r4, #0]
 801fa7c:	f3bf 8f5b 	dmb	ish
 801fa80:	07db      	lsls	r3, r3, #31
 801fa82:	d40b      	bmi.n	801fa9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801fa84:	4620      	mov	r0, r4
 801fa86:	f007 fff8 	bl	8027a7a <__cxa_guard_acquire>
 801fa8a:	b138      	cbz	r0, 801fa9c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801fa8c:	4620      	mov	r0, r4
 801fa8e:	f008 f800 	bl	8027a92 <__cxa_guard_release>
 801fa92:	4a06      	ldr	r2, [pc, #24]	@ (801faac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801fa94:	4909      	ldr	r1, [pc, #36]	@ (801fabc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801fa96:	480a      	ldr	r0, [pc, #40]	@ (801fac0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801fa98:	f007 ffe8 	bl	8027a6c <__aeabi_atexit>
 801fa9c:	4b05      	ldr	r3, [pc, #20]	@ (801fab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801fa9e:	646b      	str	r3, [r5, #68]	@ 0x44
 801faa0:	4b07      	ldr	r3, [pc, #28]	@ (801fac0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801faa2:	64ab      	str	r3, [r5, #72]	@ 0x48
 801faa4:	bd38      	pop	{r3, r4, r5, pc}
 801faa6:	bf00      	nop
 801faa8:	20003a58 	.word	0x20003a58
 801faac:	20000000 	.word	0x20000000
 801fab0:	0801b80b 	.word	0x0801b80b
 801fab4:	200001dc 	.word	0x200001dc
 801fab8:	20003a5c 	.word	0x20003a5c
 801fabc:	0801b809 	.word	0x0801b809
 801fac0:	200001e0 	.word	0x200001e0

0801fac4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801fac4:	b538      	push	{r3, r4, r5, lr}
 801fac6:	4c15      	ldr	r4, [pc, #84]	@ (801fb1c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801fac8:	4605      	mov	r5, r0
 801faca:	7823      	ldrb	r3, [r4, #0]
 801facc:	f3bf 8f5b 	dmb	ish
 801fad0:	07da      	lsls	r2, r3, #31
 801fad2:	d40b      	bmi.n	801faec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fad4:	4620      	mov	r0, r4
 801fad6:	f007 ffd0 	bl	8027a7a <__cxa_guard_acquire>
 801fada:	b138      	cbz	r0, 801faec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801fadc:	4620      	mov	r0, r4
 801fade:	f007 ffd8 	bl	8027a92 <__cxa_guard_release>
 801fae2:	4a0f      	ldr	r2, [pc, #60]	@ (801fb20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fae4:	490f      	ldr	r1, [pc, #60]	@ (801fb24 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801fae6:	4810      	ldr	r0, [pc, #64]	@ (801fb28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801fae8:	f007 ffc0 	bl	8027a6c <__aeabi_atexit>
 801faec:	4c0f      	ldr	r4, [pc, #60]	@ (801fb2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801faee:	7823      	ldrb	r3, [r4, #0]
 801faf0:	f3bf 8f5b 	dmb	ish
 801faf4:	07db      	lsls	r3, r3, #31
 801faf6:	d40b      	bmi.n	801fb10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801faf8:	4620      	mov	r0, r4
 801fafa:	f007 ffbe 	bl	8027a7a <__cxa_guard_acquire>
 801fafe:	b138      	cbz	r0, 801fb10 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801fb00:	4620      	mov	r0, r4
 801fb02:	f007 ffc6 	bl	8027a92 <__cxa_guard_release>
 801fb06:	4a06      	ldr	r2, [pc, #24]	@ (801fb20 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801fb08:	4909      	ldr	r1, [pc, #36]	@ (801fb30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801fb0a:	480a      	ldr	r0, [pc, #40]	@ (801fb34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fb0c:	f007 ffae 	bl	8027a6c <__aeabi_atexit>
 801fb10:	4b05      	ldr	r3, [pc, #20]	@ (801fb28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801fb12:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801fb14:	4b07      	ldr	r3, [pc, #28]	@ (801fb34 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801fb16:	642b      	str	r3, [r5, #64]	@ 0x40
 801fb18:	bd38      	pop	{r3, r4, r5, pc}
 801fb1a:	bf00      	nop
 801fb1c:	20003a78 	.word	0x20003a78
 801fb20:	20000000 	.word	0x20000000
 801fb24:	0801b80f 	.word	0x0801b80f
 801fb28:	200001fc 	.word	0x200001fc
 801fb2c:	20003a7c 	.word	0x20003a7c
 801fb30:	0801b80d 	.word	0x0801b80d
 801fb34:	20000200 	.word	0x20000200

0801fb38 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801fb38:	b510      	push	{r4, lr}
 801fb3a:	4604      	mov	r4, r0
 801fb3c:	f7ff ff14 	bl	801f968 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801fb40:	4620      	mov	r0, r4
 801fb42:	f7ff ff85 	bl	801fa50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801fb46:	4620      	mov	r0, r4
 801fb48:	f7ff ff48 	bl	801f9dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801fb4c:	4620      	mov	r0, r4
 801fb4e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fb52:	f7ff bfb7 	b.w	801fac4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801fb58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801fb58:	b538      	push	{r3, r4, r5, lr}
 801fb5a:	4c15      	ldr	r4, [pc, #84]	@ (801fbb0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801fb5c:	4605      	mov	r5, r0
 801fb5e:	7823      	ldrb	r3, [r4, #0]
 801fb60:	f3bf 8f5b 	dmb	ish
 801fb64:	07da      	lsls	r2, r3, #31
 801fb66:	d40b      	bmi.n	801fb80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801fb68:	4620      	mov	r0, r4
 801fb6a:	f007 ff86 	bl	8027a7a <__cxa_guard_acquire>
 801fb6e:	b138      	cbz	r0, 801fb80 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801fb70:	4620      	mov	r0, r4
 801fb72:	f007 ff8e 	bl	8027a92 <__cxa_guard_release>
 801fb76:	4a0f      	ldr	r2, [pc, #60]	@ (801fbb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801fb78:	490f      	ldr	r1, [pc, #60]	@ (801fbb8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801fb7a:	4810      	ldr	r0, [pc, #64]	@ (801fbbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801fb7c:	f007 ff76 	bl	8027a6c <__aeabi_atexit>
 801fb80:	4c0f      	ldr	r4, [pc, #60]	@ (801fbc0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801fb82:	7823      	ldrb	r3, [r4, #0]
 801fb84:	f3bf 8f5b 	dmb	ish
 801fb88:	07db      	lsls	r3, r3, #31
 801fb8a:	d40b      	bmi.n	801fba4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801fb8c:	4620      	mov	r0, r4
 801fb8e:	f007 ff74 	bl	8027a7a <__cxa_guard_acquire>
 801fb92:	b138      	cbz	r0, 801fba4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801fb94:	4620      	mov	r0, r4
 801fb96:	f007 ff7c 	bl	8027a92 <__cxa_guard_release>
 801fb9a:	4a06      	ldr	r2, [pc, #24]	@ (801fbb4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801fb9c:	4909      	ldr	r1, [pc, #36]	@ (801fbc4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801fb9e:	480a      	ldr	r0, [pc, #40]	@ (801fbc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801fba0:	f007 ff64 	bl	8027a6c <__aeabi_atexit>
 801fba4:	4b05      	ldr	r3, [pc, #20]	@ (801fbbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801fba6:	666b      	str	r3, [r5, #100]	@ 0x64
 801fba8:	4b07      	ldr	r3, [pc, #28]	@ (801fbc8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801fbaa:	66ab      	str	r3, [r5, #104]	@ 0x68
 801fbac:	bd38      	pop	{r3, r4, r5, pc}
 801fbae:	bf00      	nop
 801fbb0:	20003a60 	.word	0x20003a60
 801fbb4:	20000000 	.word	0x20000000
 801fbb8:	0801b7fb 	.word	0x0801b7fb
 801fbbc:	200001e4 	.word	0x200001e4
 801fbc0:	20003a64 	.word	0x20003a64
 801fbc4:	0801b7f9 	.word	0x0801b7f9
 801fbc8:	200001e8 	.word	0x200001e8

0801fbcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801fbcc:	b538      	push	{r3, r4, r5, lr}
 801fbce:	4c15      	ldr	r4, [pc, #84]	@ (801fc24 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801fbd0:	4605      	mov	r5, r0
 801fbd2:	7823      	ldrb	r3, [r4, #0]
 801fbd4:	f3bf 8f5b 	dmb	ish
 801fbd8:	07da      	lsls	r2, r3, #31
 801fbda:	d40b      	bmi.n	801fbf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801fbdc:	4620      	mov	r0, r4
 801fbde:	f007 ff4c 	bl	8027a7a <__cxa_guard_acquire>
 801fbe2:	b138      	cbz	r0, 801fbf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801fbe4:	4620      	mov	r0, r4
 801fbe6:	f007 ff54 	bl	8027a92 <__cxa_guard_release>
 801fbea:	4a0f      	ldr	r2, [pc, #60]	@ (801fc28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801fbec:	490f      	ldr	r1, [pc, #60]	@ (801fc2c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801fbee:	4810      	ldr	r0, [pc, #64]	@ (801fc30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801fbf0:	f007 ff3c 	bl	8027a6c <__aeabi_atexit>
 801fbf4:	4c0f      	ldr	r4, [pc, #60]	@ (801fc34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801fbf6:	7823      	ldrb	r3, [r4, #0]
 801fbf8:	f3bf 8f5b 	dmb	ish
 801fbfc:	07db      	lsls	r3, r3, #31
 801fbfe:	d40b      	bmi.n	801fc18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801fc00:	4620      	mov	r0, r4
 801fc02:	f007 ff3a 	bl	8027a7a <__cxa_guard_acquire>
 801fc06:	b138      	cbz	r0, 801fc18 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801fc08:	4620      	mov	r0, r4
 801fc0a:	f007 ff42 	bl	8027a92 <__cxa_guard_release>
 801fc0e:	4a06      	ldr	r2, [pc, #24]	@ (801fc28 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801fc10:	4909      	ldr	r1, [pc, #36]	@ (801fc38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801fc12:	480a      	ldr	r0, [pc, #40]	@ (801fc3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801fc14:	f007 ff2a 	bl	8027a6c <__aeabi_atexit>
 801fc18:	4b05      	ldr	r3, [pc, #20]	@ (801fc30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801fc1a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801fc1c:	4b07      	ldr	r3, [pc, #28]	@ (801fc3c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801fc1e:	662b      	str	r3, [r5, #96]	@ 0x60
 801fc20:	bd38      	pop	{r3, r4, r5, pc}
 801fc22:	bf00      	nop
 801fc24:	20003a38 	.word	0x20003a38
 801fc28:	20000000 	.word	0x20000000
 801fc2c:	0801b7ff 	.word	0x0801b7ff
 801fc30:	200001bc 	.word	0x200001bc
 801fc34:	20003a3c 	.word	0x20003a3c
 801fc38:	0801b7fd 	.word	0x0801b7fd
 801fc3c:	200001c0 	.word	0x200001c0

0801fc40 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801fc40:	b510      	push	{r4, lr}
 801fc42:	4604      	mov	r4, r0
 801fc44:	f7ff ff88 	bl	801fb58 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801fc48:	4620      	mov	r0, r4
 801fc4a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fc4e:	f7ff bfbd 	b.w	801fbcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801fc54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801fc54:	b538      	push	{r3, r4, r5, lr}
 801fc56:	4c15      	ldr	r4, [pc, #84]	@ (801fcac <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801fc58:	4605      	mov	r5, r0
 801fc5a:	7823      	ldrb	r3, [r4, #0]
 801fc5c:	f3bf 8f5b 	dmb	ish
 801fc60:	07da      	lsls	r2, r3, #31
 801fc62:	d40b      	bmi.n	801fc7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801fc64:	4620      	mov	r0, r4
 801fc66:	f007 ff08 	bl	8027a7a <__cxa_guard_acquire>
 801fc6a:	b138      	cbz	r0, 801fc7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801fc6c:	4620      	mov	r0, r4
 801fc6e:	f007 ff10 	bl	8027a92 <__cxa_guard_release>
 801fc72:	4a0f      	ldr	r2, [pc, #60]	@ (801fcb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801fc74:	490f      	ldr	r1, [pc, #60]	@ (801fcb4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801fc76:	4810      	ldr	r0, [pc, #64]	@ (801fcb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801fc78:	f007 fef8 	bl	8027a6c <__aeabi_atexit>
 801fc7c:	4c0f      	ldr	r4, [pc, #60]	@ (801fcbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801fc7e:	7823      	ldrb	r3, [r4, #0]
 801fc80:	f3bf 8f5b 	dmb	ish
 801fc84:	07db      	lsls	r3, r3, #31
 801fc86:	d40b      	bmi.n	801fca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801fc88:	4620      	mov	r0, r4
 801fc8a:	f007 fef6 	bl	8027a7a <__cxa_guard_acquire>
 801fc8e:	b138      	cbz	r0, 801fca0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801fc90:	4620      	mov	r0, r4
 801fc92:	f007 fefe 	bl	8027a92 <__cxa_guard_release>
 801fc96:	4a06      	ldr	r2, [pc, #24]	@ (801fcb0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801fc98:	4909      	ldr	r1, [pc, #36]	@ (801fcc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801fc9a:	480a      	ldr	r0, [pc, #40]	@ (801fcc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801fc9c:	f007 fee6 	bl	8027a6c <__aeabi_atexit>
 801fca0:	4b05      	ldr	r3, [pc, #20]	@ (801fcb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801fca2:	676b      	str	r3, [r5, #116]	@ 0x74
 801fca4:	4b07      	ldr	r3, [pc, #28]	@ (801fcc4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801fca6:	67ab      	str	r3, [r5, #120]	@ 0x78
 801fca8:	bd38      	pop	{r3, r4, r5, pc}
 801fcaa:	bf00      	nop
 801fcac:	20003a30 	.word	0x20003a30
 801fcb0:	20000000 	.word	0x20000000
 801fcb4:	0801b7f3 	.word	0x0801b7f3
 801fcb8:	200001b4 	.word	0x200001b4
 801fcbc:	20003a34 	.word	0x20003a34
 801fcc0:	0801b7f1 	.word	0x0801b7f1
 801fcc4:	200001b8 	.word	0x200001b8

0801fcc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801fcc8:	b538      	push	{r3, r4, r5, lr}
 801fcca:	4c15      	ldr	r4, [pc, #84]	@ (801fd20 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801fccc:	4605      	mov	r5, r0
 801fcce:	7823      	ldrb	r3, [r4, #0]
 801fcd0:	f3bf 8f5b 	dmb	ish
 801fcd4:	07da      	lsls	r2, r3, #31
 801fcd6:	d40b      	bmi.n	801fcf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801fcd8:	4620      	mov	r0, r4
 801fcda:	f007 fece 	bl	8027a7a <__cxa_guard_acquire>
 801fcde:	b138      	cbz	r0, 801fcf0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801fce0:	4620      	mov	r0, r4
 801fce2:	f007 fed6 	bl	8027a92 <__cxa_guard_release>
 801fce6:	4a0f      	ldr	r2, [pc, #60]	@ (801fd24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801fce8:	490f      	ldr	r1, [pc, #60]	@ (801fd28 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801fcea:	4810      	ldr	r0, [pc, #64]	@ (801fd2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801fcec:	f007 febe 	bl	8027a6c <__aeabi_atexit>
 801fcf0:	4c0f      	ldr	r4, [pc, #60]	@ (801fd30 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801fcf2:	7823      	ldrb	r3, [r4, #0]
 801fcf4:	f3bf 8f5b 	dmb	ish
 801fcf8:	07db      	lsls	r3, r3, #31
 801fcfa:	d40b      	bmi.n	801fd14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801fcfc:	4620      	mov	r0, r4
 801fcfe:	f007 febc 	bl	8027a7a <__cxa_guard_acquire>
 801fd02:	b138      	cbz	r0, 801fd14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801fd04:	4620      	mov	r0, r4
 801fd06:	f007 fec4 	bl	8027a92 <__cxa_guard_release>
 801fd0a:	4a06      	ldr	r2, [pc, #24]	@ (801fd24 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801fd0c:	4909      	ldr	r1, [pc, #36]	@ (801fd34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801fd0e:	480a      	ldr	r0, [pc, #40]	@ (801fd38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801fd10:	f007 feac 	bl	8027a6c <__aeabi_atexit>
 801fd14:	4b05      	ldr	r3, [pc, #20]	@ (801fd2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801fd16:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801fd18:	4b07      	ldr	r3, [pc, #28]	@ (801fd38 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801fd1a:	672b      	str	r3, [r5, #112]	@ 0x70
 801fd1c:	bd38      	pop	{r3, r4, r5, pc}
 801fd1e:	bf00      	nop
 801fd20:	20003a28 	.word	0x20003a28
 801fd24:	20000000 	.word	0x20000000
 801fd28:	0801b7f7 	.word	0x0801b7f7
 801fd2c:	200001ac 	.word	0x200001ac
 801fd30:	20003a2c 	.word	0x20003a2c
 801fd34:	0801b7f5 	.word	0x0801b7f5
 801fd38:	200001b0 	.word	0x200001b0

0801fd3c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801fd3c:	b510      	push	{r4, lr}
 801fd3e:	4604      	mov	r4, r0
 801fd40:	f7ff ff88 	bl	801fc54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801fd44:	4620      	mov	r0, r4
 801fd46:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fd4a:	f7ff bfbd 	b.w	801fcc8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801fd4e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801fd4e:	b510      	push	{r4, lr}
 801fd50:	4604      	mov	r4, r0
 801fd52:	f7ff fff3 	bl	801fd3c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801fd56:	4620      	mov	r0, r4
 801fd58:	f7ff ff72 	bl	801fc40 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801fd5c:	4620      	mov	r0, r4
 801fd5e:	f7ff fdf9 	bl	801f954 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801fd62:	4620      	mov	r0, r4
 801fd64:	f7ff fcfa 	bl	801f75c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801fd68:	4620      	mov	r0, r4
 801fd6a:	f7ff fd75 	bl	801f858 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801fd6e:	4620      	mov	r0, r4
 801fd70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fd74:	f7ff bee0 	b.w	801fb38 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801fd78 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801fd78:	b538      	push	{r3, r4, r5, lr}
 801fd7a:	4c0b      	ldr	r4, [pc, #44]	@ (801fda8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801fd7c:	4605      	mov	r5, r0
 801fd7e:	7823      	ldrb	r3, [r4, #0]
 801fd80:	f3bf 8f5b 	dmb	ish
 801fd84:	07db      	lsls	r3, r3, #31
 801fd86:	d40b      	bmi.n	801fda0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801fd88:	4620      	mov	r0, r4
 801fd8a:	f007 fe76 	bl	8027a7a <__cxa_guard_acquire>
 801fd8e:	b138      	cbz	r0, 801fda0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801fd90:	4620      	mov	r0, r4
 801fd92:	f007 fe7e 	bl	8027a92 <__cxa_guard_release>
 801fd96:	4a05      	ldr	r2, [pc, #20]	@ (801fdac <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801fd98:	4905      	ldr	r1, [pc, #20]	@ (801fdb0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801fd9a:	4806      	ldr	r0, [pc, #24]	@ (801fdb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801fd9c:	f007 fe66 	bl	8027a6c <__aeabi_atexit>
 801fda0:	4b04      	ldr	r3, [pc, #16]	@ (801fdb4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801fda2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801fda4:	bd38      	pop	{r3, r4, r5, pc}
 801fda6:	bf00      	nop
 801fda8:	20003a1c 	.word	0x20003a1c
 801fdac:	20000000 	.word	0x20000000
 801fdb0:	0801b7ef 	.word	0x0801b7ef
 801fdb4:	200001a4 	.word	0x200001a4

0801fdb8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801fdb8:	b538      	push	{r3, r4, r5, lr}
 801fdba:	4c0b      	ldr	r4, [pc, #44]	@ (801fde8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801fdbc:	4605      	mov	r5, r0
 801fdbe:	7823      	ldrb	r3, [r4, #0]
 801fdc0:	f3bf 8f5b 	dmb	ish
 801fdc4:	07db      	lsls	r3, r3, #31
 801fdc6:	d40b      	bmi.n	801fde0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801fdc8:	4620      	mov	r0, r4
 801fdca:	f007 fe56 	bl	8027a7a <__cxa_guard_acquire>
 801fdce:	b138      	cbz	r0, 801fde0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801fdd0:	4620      	mov	r0, r4
 801fdd2:	f007 fe5e 	bl	8027a92 <__cxa_guard_release>
 801fdd6:	4a05      	ldr	r2, [pc, #20]	@ (801fdec <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801fdd8:	4905      	ldr	r1, [pc, #20]	@ (801fdf0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801fdda:	4806      	ldr	r0, [pc, #24]	@ (801fdf4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801fddc:	f007 fe46 	bl	8027a6c <__aeabi_atexit>
 801fde0:	4b04      	ldr	r3, [pc, #16]	@ (801fdf4 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801fde2:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801fde6:	bd38      	pop	{r3, r4, r5, pc}
 801fde8:	20003a20 	.word	0x20003a20
 801fdec:	20000000 	.word	0x20000000
 801fdf0:	0801b7ed 	.word	0x0801b7ed
 801fdf4:	200001a8 	.word	0x200001a8

0801fdf8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801fdf8:	b570      	push	{r4, r5, r6, lr}
 801fdfa:	4d0d      	ldr	r5, [pc, #52]	@ (801fe30 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801fdfc:	4606      	mov	r6, r0
 801fdfe:	4c0d      	ldr	r4, [pc, #52]	@ (801fe34 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801fe00:	782b      	ldrb	r3, [r5, #0]
 801fe02:	f3bf 8f5b 	dmb	ish
 801fe06:	f013 0f01 	tst.w	r3, #1
 801fe0a:	d10d      	bne.n	801fe28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801fe0c:	4628      	mov	r0, r5
 801fe0e:	f007 fe34 	bl	8027a7a <__cxa_guard_acquire>
 801fe12:	b148      	cbz	r0, 801fe28 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801fe14:	4b08      	ldr	r3, [pc, #32]	@ (801fe38 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801fe16:	4628      	mov	r0, r5
 801fe18:	6023      	str	r3, [r4, #0]
 801fe1a:	f007 fe3a 	bl	8027a92 <__cxa_guard_release>
 801fe1e:	4a07      	ldr	r2, [pc, #28]	@ (801fe3c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801fe20:	4620      	mov	r0, r4
 801fe22:	4907      	ldr	r1, [pc, #28]	@ (801fe40 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801fe24:	f007 fe22 	bl	8027a6c <__aeabi_atexit>
 801fe28:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801fe2c:	bd70      	pop	{r4, r5, r6, pc}
 801fe2e:	bf00      	nop
 801fe30:	20003a24 	.word	0x20003a24
 801fe34:	20003b9c 	.word	0x20003b9c
 801fe38:	0802ae68 	.word	0x0802ae68
 801fe3c:	20000000 	.word	0x20000000
 801fe40:	0801b7eb 	.word	0x0801b7eb

0801fe44 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801fe44:	b510      	push	{r4, lr}
 801fe46:	4604      	mov	r4, r0
 801fe48:	f7ff ff96 	bl	801fd78 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801fe4c:	4620      	mov	r0, r4
 801fe4e:	f7ff ffb3 	bl	801fdb8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801fe52:	4620      	mov	r0, r4
 801fe54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801fe58:	f7ff bfce 	b.w	801fdf8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801fe5c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801fe5c:	b570      	push	{r4, r5, r6, lr}
 801fe5e:	4d0d      	ldr	r5, [pc, #52]	@ (801fe94 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801fe60:	4606      	mov	r6, r0
 801fe62:	4c0d      	ldr	r4, [pc, #52]	@ (801fe98 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801fe64:	782b      	ldrb	r3, [r5, #0]
 801fe66:	f3bf 8f5b 	dmb	ish
 801fe6a:	f013 0f01 	tst.w	r3, #1
 801fe6e:	d10d      	bne.n	801fe8c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801fe70:	4628      	mov	r0, r5
 801fe72:	f007 fe02 	bl	8027a7a <__cxa_guard_acquire>
 801fe76:	b148      	cbz	r0, 801fe8c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801fe78:	4b08      	ldr	r3, [pc, #32]	@ (801fe9c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801fe7a:	4628      	mov	r0, r5
 801fe7c:	6023      	str	r3, [r4, #0]
 801fe7e:	f007 fe08 	bl	8027a92 <__cxa_guard_release>
 801fe82:	4a07      	ldr	r2, [pc, #28]	@ (801fea0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801fe84:	4620      	mov	r0, r4
 801fe86:	4907      	ldr	r1, [pc, #28]	@ (801fea4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801fe88:	f007 fdf0 	bl	8027a6c <__aeabi_atexit>
 801fe8c:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801fe90:	bd70      	pop	{r4, r5, r6, pc}
 801fe92:	bf00      	nop
 801fe94:	20003a18 	.word	0x20003a18
 801fe98:	20003a98 	.word	0x20003a98
 801fe9c:	0802ae84 	.word	0x0802ae84
 801fea0:	20000000 	.word	0x20000000
 801fea4:	0801b7e9 	.word	0x0801b7e9

0801fea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801fea8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801feac:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801feb0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801feb4:	2d00      	cmp	r5, #0
 801feb6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801feba:	fb05 4c0e 	mla	ip, r5, lr, r4
 801febe:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801fec2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801fec6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801feca:	eb02 0a0c 	add.w	sl, r2, ip
 801fece:	8808      	ldrh	r0, [r1, #0]
 801fed0:	f2c0 80b0 	blt.w	8020034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801fed4:	45ab      	cmp	fp, r5
 801fed6:	f340 80ad 	ble.w	8020034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801feda:	2c00      	cmp	r4, #0
 801fedc:	f2c0 80a8 	blt.w	8020030 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801fee0:	45a6      	cmp	lr, r4
 801fee2:	f340 80a5 	ble.w	8020030 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801fee6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801feea:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801feee:	1c62      	adds	r2, r4, #1
 801fef0:	f100 80a3 	bmi.w	802003a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fef4:	4596      	cmp	lr, r2
 801fef6:	f340 80a0 	ble.w	802003a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801fefa:	f1b9 0f00 	cmp.w	r9, #0
 801fefe:	f000 809c 	beq.w	802003a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ff02:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ff06:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ff0a:	3501      	adds	r5, #1
 801ff0c:	f100 8099 	bmi.w	8020042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ff10:	45ab      	cmp	fp, r5
 801ff12:	f340 8096 	ble.w	8020042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ff16:	2f00      	cmp	r7, #0
 801ff18:	f000 8093 	beq.w	8020042 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ff1c:	2c00      	cmp	r4, #0
 801ff1e:	f2c0 808e 	blt.w	802003e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ff22:	45a6      	cmp	lr, r4
 801ff24:	f340 808b 	ble.w	802003e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ff28:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ff2c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ff30:	3401      	adds	r4, #1
 801ff32:	f100 8089 	bmi.w	8020048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ff36:	45a6      	cmp	lr, r4
 801ff38:	f340 8086 	ble.w	8020048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ff3c:	f1b9 0f00 	cmp.w	r9, #0
 801ff40:	f000 8082 	beq.w	8020048 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ff44:	44d6      	add	lr, sl
 801ff46:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ff4a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ff4e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ff52:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801ff56:	fb19 fe07 	smulbb	lr, r9, r7
 801ff5a:	f1c7 0210 	rsb	r2, r7, #16
 801ff5e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ff62:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ff66:	eba2 0209 	sub.w	r2, r2, r9
 801ff6a:	ea44 0808 	orr.w	r8, r4, r8
 801ff6e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ff72:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ff76:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ff7a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801ff7e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801ff82:	ea44 0c0c 	orr.w	ip, r4, ip
 801ff86:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ff8a:	fb04 f40c 	mul.w	r4, r4, ip
 801ff8e:	fb02 4808 	mla	r8, r2, r8, r4
 801ff92:	041a      	lsls	r2, r3, #16
 801ff94:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ff98:	b2b4      	uxth	r4, r6
 801ff9a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ff9e:	43f6      	mvns	r6, r6
 801ffa0:	4313      	orrs	r3, r2
 801ffa2:	042a      	lsls	r2, r5, #16
 801ffa4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ffa8:	b2f6      	uxtb	r6, r6
 801ffaa:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801ffae:	fb0e 8303 	mla	r3, lr, r3, r8
 801ffb2:	432a      	orrs	r2, r5
 801ffb4:	fb07 3202 	mla	r2, r7, r2, r3
 801ffb8:	10c7      	asrs	r7, r0, #3
 801ffba:	0d53      	lsrs	r3, r2, #21
 801ffbc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ffc0:	0952      	lsrs	r2, r2, #5
 801ffc2:	fb17 f706 	smulbb	r7, r7, r6
 801ffc6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ffca:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ffce:	431a      	orrs	r2, r3
 801ffd0:	b293      	uxth	r3, r2
 801ffd2:	1202      	asrs	r2, r0, #8
 801ffd4:	121d      	asrs	r5, r3, #8
 801ffd6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ffda:	00c0      	lsls	r0, r0, #3
 801ffdc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ffe0:	fb12 f206 	smulbb	r2, r2, r6
 801ffe4:	b2c0      	uxtb	r0, r0
 801ffe6:	fb05 2504 	mla	r5, r5, r4, r2
 801ffea:	10da      	asrs	r2, r3, #3
 801ffec:	fb10 f006 	smulbb	r0, r0, r6
 801fff0:	00db      	lsls	r3, r3, #3
 801fff2:	b2ad      	uxth	r5, r5
 801fff4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fff8:	b2db      	uxtb	r3, r3
 801fffa:	fb02 7204 	mla	r2, r2, r4, r7
 801fffe:	fb03 0004 	mla	r0, r3, r4, r0
 8020002:	1c6b      	adds	r3, r5, #1
 8020004:	b292      	uxth	r2, r2
 8020006:	b280      	uxth	r0, r0
 8020008:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802000c:	1c43      	adds	r3, r0, #1
 802000e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020012:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020016:	1c50      	adds	r0, r2, #1
 8020018:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802001c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020020:	0952      	lsrs	r2, r2, #5
 8020022:	432b      	orrs	r3, r5
 8020024:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020028:	4313      	orrs	r3, r2
 802002a:	800b      	strh	r3, [r1, #0]
 802002c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020030:	4680      	mov	r8, r0
 8020032:	e75c      	b.n	801feee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8020034:	4684      	mov	ip, r0
 8020036:	4680      	mov	r8, r0
 8020038:	e767      	b.n	801ff0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802003a:	4684      	mov	ip, r0
 802003c:	e765      	b.n	801ff0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 802003e:	4605      	mov	r5, r0
 8020040:	e776      	b.n	801ff30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8020042:	4603      	mov	r3, r0
 8020044:	4605      	mov	r5, r0
 8020046:	e782      	b.n	801ff4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8020048:	4603      	mov	r3, r0
 802004a:	e780      	b.n	801ff4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0802004c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802004c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020050:	b099      	sub	sp, #100	@ 0x64
 8020052:	9215      	str	r2, [sp, #84]	@ 0x54
 8020054:	9309      	str	r3, [sp, #36]	@ 0x24
 8020056:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 8020058:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 802005c:	9016      	str	r0, [sp, #88]	@ 0x58
 802005e:	930d      	str	r3, [sp, #52]	@ 0x34
 8020060:	6850      	ldr	r0, [r2, #4]
 8020062:	910c      	str	r1, [sp, #48]	@ 0x30
 8020064:	6812      	ldr	r2, [r2, #0]
 8020066:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 802006a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 802006e:	fb00 1303 	mla	r3, r0, r3, r1
 8020072:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8020076:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020078:	681b      	ldr	r3, [r3, #0]
 802007a:	930b      	str	r3, [sp, #44]	@ 0x2c
 802007c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802007e:	685e      	ldr	r6, [r3, #4]
 8020080:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020082:	3604      	adds	r6, #4
 8020084:	43db      	mvns	r3, r3
 8020086:	b2db      	uxtb	r3, r3
 8020088:	930a      	str	r3, [sp, #40]	@ 0x28
 802008a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802008c:	2b00      	cmp	r3, #0
 802008e:	dc03      	bgt.n	8020098 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020090:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8020092:	2b00      	cmp	r3, #0
 8020094:	f340 8225 	ble.w	80204e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8020098:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802009a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802009e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80200a2:	1e48      	subs	r0, r1, #1
 80200a4:	1e57      	subs	r7, r2, #1
 80200a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80200a8:	2b00      	cmp	r3, #0
 80200aa:	f340 80e3 	ble.w	8020274 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80200ae:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80200b2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80200b6:	d406      	bmi.n	80200c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80200b8:	4584      	cmp	ip, r0
 80200ba:	da04      	bge.n	80200c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80200bc:	2b00      	cmp	r3, #0
 80200be:	db02      	blt.n	80200c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80200c0:	42bb      	cmp	r3, r7
 80200c2:	f2c0 80d8 	blt.w	8020276 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80200c6:	f11c 0c01 	adds.w	ip, ip, #1
 80200ca:	f100 80c9 	bmi.w	8020260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80200ce:	4561      	cmp	r1, ip
 80200d0:	f2c0 80c6 	blt.w	8020260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80200d4:	3301      	adds	r3, #1
 80200d6:	f100 80c3 	bmi.w	8020260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80200da:	429a      	cmp	r2, r3
 80200dc:	f2c0 80c0 	blt.w	8020260 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80200e0:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80200e4:	4647      	mov	r7, r8
 80200e6:	f1bb 0f00 	cmp.w	fp, #0
 80200ea:	f340 80e3 	ble.w	80202b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80200ee:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 80200f0:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80200f4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80200f6:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80200fa:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80200fe:	ea5f 422a 	movs.w	r2, sl, asr #16
 8020102:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020106:	689b      	ldr	r3, [r3, #8]
 8020108:	f100 8121 	bmi.w	802034e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802010c:	f103 39ff 	add.w	r9, r3, #4294967295
 8020110:	454a      	cmp	r2, r9
 8020112:	f280 811c 	bge.w	802034e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020116:	f1bc 0f00 	cmp.w	ip, #0
 802011a:	f2c0 8118 	blt.w	802034e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 802011e:	f10e 39ff 	add.w	r9, lr, #4294967295
 8020122:	45cc      	cmp	ip, r9
 8020124:	f280 8113 	bge.w	802034e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8020128:	b21b      	sxth	r3, r3
 802012a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802012c:	fb0c 2203 	mla	r2, ip, r3, r2
 8020130:	eb04 0902 	add.w	r9, r4, r2
 8020134:	5ca2      	ldrb	r2, [r4, r2]
 8020136:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 802013a:	2800      	cmp	r0, #0
 802013c:	f000 80fe 	beq.w	802033c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8020140:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020144:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8020148:	9211      	str	r2, [sp, #68]	@ 0x44
 802014a:	b151      	cbz	r1, 8020162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802014c:	eb09 0203 	add.w	r2, r9, r3
 8020150:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020154:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020158:	930f      	str	r3, [sp, #60]	@ 0x3c
 802015a:	7853      	ldrb	r3, [r2, #1]
 802015c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8020160:	9312      	str	r3, [sp, #72]	@ 0x48
 8020162:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020164:	fb10 f201 	smulbb	r2, r0, r1
 8020168:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 802016a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802016e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020172:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8020176:	10d2      	asrs	r2, r2, #3
 8020178:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802017c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8020180:	ea4c 0c03 	orr.w	ip, ip, r3
 8020184:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020186:	041b      	lsls	r3, r3, #16
 8020188:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802018c:	4323      	orrs	r3, r4
 802018e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020190:	4353      	muls	r3, r2
 8020192:	fb09 330c 	mla	r3, r9, ip, r3
 8020196:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 802019a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802019e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80201a2:	ea4c 0e0e 	orr.w	lr, ip, lr
 80201a6:	f1c1 0c10 	rsb	ip, r1, #16
 80201aa:	ebac 0c00 	sub.w	ip, ip, r0
 80201ae:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80201b2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80201b6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80201ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80201bc:	0418      	lsls	r0, r3, #16
 80201be:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80201c2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80201c6:	4318      	orrs	r0, r3
 80201c8:	fb02 c200 	mla	r2, r2, r0, ip
 80201cc:	8838      	ldrh	r0, [r7, #0]
 80201ce:	0d53      	lsrs	r3, r2, #21
 80201d0:	0952      	lsrs	r2, r2, #5
 80201d2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80201d6:	1201      	asrs	r1, r0, #8
 80201d8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80201dc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80201e0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80201e4:	00c0      	lsls	r0, r0, #3
 80201e6:	431a      	orrs	r2, r3
 80201e8:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 80201ec:	fb11 f104 	smulbb	r1, r1, r4
 80201f0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 80201f4:	b292      	uxth	r2, r2
 80201f6:	fb1e fe04 	smulbb	lr, lr, r4
 80201fa:	b2c0      	uxtb	r0, r0
 80201fc:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8020200:	fb10 f004 	smulbb	r0, r0, r4
 8020204:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8020208:	fb0c 1c03 	mla	ip, ip, r3, r1
 802020c:	10d1      	asrs	r1, r2, #3
 802020e:	00d2      	lsls	r2, r2, #3
 8020210:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020214:	fa1f fc8c 	uxth.w	ip, ip
 8020218:	b2d2      	uxtb	r2, r2
 802021a:	fb01 e103 	mla	r1, r1, r3, lr
 802021e:	fb02 0303 	mla	r3, r2, r3, r0
 8020222:	b289      	uxth	r1, r1
 8020224:	b29a      	uxth	r2, r3
 8020226:	f10c 0301 	add.w	r3, ip, #1
 802022a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802022e:	1c53      	adds	r3, r2, #1
 8020230:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020234:	1c4a      	adds	r2, r1, #1
 8020236:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 802023a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802023e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020242:	0949      	lsrs	r1, r1, #5
 8020244:	ea43 030c 	orr.w	r3, r3, ip
 8020248:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802024c:	430b      	orrs	r3, r1
 802024e:	803b      	strh	r3, [r7, #0]
 8020250:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020252:	3702      	adds	r7, #2
 8020254:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020258:	449a      	add	sl, r3
 802025a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802025c:	441d      	add	r5, r3
 802025e:	e742      	b.n	80200e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020260:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020262:	f108 0802 	add.w	r8, r8, #2
 8020266:	449a      	add	sl, r3
 8020268:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802026a:	441d      	add	r5, r3
 802026c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802026e:	3b01      	subs	r3, #1
 8020270:	9309      	str	r3, [sp, #36]	@ 0x24
 8020272:	e718      	b.n	80200a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8020274:	d023      	beq.n	80202be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8020276:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020278:	9825      	ldr	r0, [sp, #148]	@ 0x94
 802027a:	3b01      	subs	r3, #1
 802027c:	fb00 a003 	mla	r0, r0, r3, sl
 8020280:	1400      	asrs	r0, r0, #16
 8020282:	f53f af2d 	bmi.w	80200e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020286:	3901      	subs	r1, #1
 8020288:	4288      	cmp	r0, r1
 802028a:	f6bf af29 	bge.w	80200e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802028e:	9926      	ldr	r1, [sp, #152]	@ 0x98
 8020290:	fb01 5303 	mla	r3, r1, r3, r5
 8020294:	141b      	asrs	r3, r3, #16
 8020296:	f53f af23 	bmi.w	80200e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802029a:	3a01      	subs	r2, #1
 802029c:	4293      	cmp	r3, r2
 802029e:	f6bf af1f 	bge.w	80200e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80202a2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80202a6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 80202aa:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 80202ae:	f1be 0f00 	cmp.w	lr, #0
 80202b2:	dc6c      	bgt.n	802038e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80202b4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80202b6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80202ba:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80202be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80202c0:	2b00      	cmp	r3, #0
 80202c2:	f340 810e 	ble.w	80204e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80202c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80202ca:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80202cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80202d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80202d4:	eef0 6a62 	vmov.f32	s13, s5
 80202d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80202dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80202e0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202e4:	ee16 aa90 	vmov	sl, s13
 80202e8:	eef0 6a43 	vmov.f32	s13, s6
 80202ec:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80202f0:	ee16 5a90 	vmov	r5, s13
 80202f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80202f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80202fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020300:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020304:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020308:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802030c:	ee12 2a90 	vmov	r2, s5
 8020310:	eef0 2a47 	vmov.f32	s5, s14
 8020314:	fb92 f3f3 	sdiv	r3, r2, r3
 8020318:	ee13 2a10 	vmov	r2, s6
 802031c:	9325      	str	r3, [sp, #148]	@ 0x94
 802031e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8020320:	eeb0 3a67 	vmov.f32	s6, s15
 8020324:	fb92 f3f3 	sdiv	r3, r2, r3
 8020328:	9326      	str	r3, [sp, #152]	@ 0x98
 802032a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802032c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 802032e:	3b01      	subs	r3, #1
 8020330:	930c      	str	r3, [sp, #48]	@ 0x30
 8020332:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8020334:	bf08      	it	eq
 8020336:	4613      	moveq	r3, r2
 8020338:	9309      	str	r3, [sp, #36]	@ 0x24
 802033a:	e6a6      	b.n	802008a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802033c:	2900      	cmp	r1, #0
 802033e:	f43f af10 	beq.w	8020162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020342:	f819 3003 	ldrb.w	r3, [r9, r3]
 8020346:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802034a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802034c:	e709      	b.n	8020162 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802034e:	f112 0901 	adds.w	r9, r2, #1
 8020352:	f53f af7d 	bmi.w	8020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020356:	454b      	cmp	r3, r9
 8020358:	f6ff af7a 	blt.w	8020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802035c:	f11c 0901 	adds.w	r9, ip, #1
 8020360:	f53f af76 	bmi.w	8020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8020364:	45ce      	cmp	lr, r9
 8020366:	f6ff af73 	blt.w	8020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802036a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802036c:	b21b      	sxth	r3, r3
 802036e:	9202      	str	r2, [sp, #8]
 8020370:	fa0f f28e 	sxth.w	r2, lr
 8020374:	9300      	str	r3, [sp, #0]
 8020376:	4633      	mov	r3, r6
 8020378:	9201      	str	r2, [sp, #4]
 802037a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802037c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020380:	e9cd c003 	strd	ip, r0, [sp, #12]
 8020384:	4639      	mov	r1, r7
 8020386:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8020388:	f7ff fd8e 	bl	801fea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 802038c:	e760      	b.n	8020250 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 802038e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8020390:	ea4f 422a 	mov.w	r2, sl, asr #16
 8020394:	1429      	asrs	r1, r5, #16
 8020396:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020398:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802039c:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80203a0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80203a4:	fb03 2101 	mla	r1, r3, r1, r2
 80203a8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80203aa:	440a      	add	r2, r1
 80203ac:	5c61      	ldrb	r1, [r4, r1]
 80203ae:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80203b2:	f1bc 0f00 	cmp.w	ip, #0
 80203b6:	f000 808c 	beq.w	80204d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80203ba:	7857      	ldrb	r7, [r2, #1]
 80203bc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80203c0:	9413      	str	r4, [sp, #76]	@ 0x4c
 80203c2:	b140      	cbz	r0, 80203d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80203c4:	18d7      	adds	r7, r2, r3
 80203c6:	5cd3      	ldrb	r3, [r2, r3]
 80203c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80203cc:	9310      	str	r3, [sp, #64]	@ 0x40
 80203ce:	787b      	ldrb	r3, [r7, #1]
 80203d0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80203d4:	9314      	str	r3, [sp, #80]	@ 0x50
 80203d6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80203d8:	fb1c f200 	smulbb	r2, ip, r0
 80203dc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80203de:	f10e 3eff 	add.w	lr, lr, #4294967295
 80203e2:	041f      	lsls	r7, r3, #16
 80203e4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80203e8:	10d2      	asrs	r2, r2, #3
 80203ea:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 80203ee:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 80203f2:	431f      	orrs	r7, r3
 80203f4:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80203f8:	9317      	str	r3, [sp, #92]	@ 0x5c
 80203fa:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80203fc:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 80203fe:	041b      	lsls	r3, r3, #16
 8020400:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020404:	ea43 030b 	orr.w	r3, r3, fp
 8020408:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802040c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020410:	4353      	muls	r3, r2
 8020412:	fb04 3707 	mla	r7, r4, r7, r3
 8020416:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 802041a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802041c:	ea43 0b01 	orr.w	fp, r3, r1
 8020420:	f1c0 0110 	rsb	r1, r0, #16
 8020424:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020426:	eba1 0c0c 	sub.w	ip, r1, ip
 802042a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802042e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020432:	fb0c 770b 	mla	r7, ip, fp, r7
 8020436:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802043a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 802043e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020442:	ea4c 0c0b 	orr.w	ip, ip, fp
 8020446:	fb02 770c 	mla	r7, r2, ip, r7
 802044a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802044c:	0d79      	lsrs	r1, r7, #21
 802044e:	8812      	ldrh	r2, [r2, #0]
 8020450:	097f      	lsrs	r7, r7, #5
 8020452:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020456:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802045a:	430f      	orrs	r7, r1
 802045c:	1211      	asrs	r1, r2, #8
 802045e:	b2bb      	uxth	r3, r7
 8020460:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8020464:	10d7      	asrs	r7, r2, #3
 8020466:	fb11 f104 	smulbb	r1, r1, r4
 802046a:	1218      	asrs	r0, r3, #8
 802046c:	00d2      	lsls	r2, r2, #3
 802046e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8020472:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020476:	fb17 f704 	smulbb	r7, r7, r4
 802047a:	b2d2      	uxtb	r2, r2
 802047c:	fb00 1009 	mla	r0, r0, r9, r1
 8020480:	10d9      	asrs	r1, r3, #3
 8020482:	fb12 f204 	smulbb	r2, r2, r4
 8020486:	00db      	lsls	r3, r3, #3
 8020488:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802048c:	b280      	uxth	r0, r0
 802048e:	b2db      	uxtb	r3, r3
 8020490:	fb01 7109 	mla	r1, r1, r9, r7
 8020494:	fb03 2309 	mla	r3, r3, r9, r2
 8020498:	1c42      	adds	r2, r0, #1
 802049a:	b289      	uxth	r1, r1
 802049c:	b29b      	uxth	r3, r3
 802049e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80204a2:	1c4f      	adds	r7, r1, #1
 80204a4:	1c5a      	adds	r2, r3, #1
 80204a6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80204aa:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80204ae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80204b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80204b4:	0949      	lsrs	r1, r1, #5
 80204b6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80204ba:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80204be:	4310      	orrs	r0, r2
 80204c0:	4308      	orrs	r0, r1
 80204c2:	f823 0b02 	strh.w	r0, [r3], #2
 80204c6:	930e      	str	r3, [sp, #56]	@ 0x38
 80204c8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80204ca:	449a      	add	sl, r3
 80204cc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80204ce:	441d      	add	r5, r3
 80204d0:	e6ed      	b.n	80202ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80204d2:	2800      	cmp	r0, #0
 80204d4:	f43f af7f 	beq.w	80203d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80204d8:	5cd3      	ldrb	r3, [r2, r3]
 80204da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80204de:	9310      	str	r3, [sp, #64]	@ 0x40
 80204e0:	e779      	b.n	80203d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80204e2:	b019      	add	sp, #100	@ 0x64
 80204e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080204e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80204e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80204ec:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 80204f0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80204f4:	f1b8 0f00 	cmp.w	r8, #0
 80204f8:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 80204fc:	fb08 470e 	mla	r7, r8, lr, r4
 8020500:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 8020504:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8020508:	eb02 0907 	add.w	r9, r2, r7
 802050c:	8808      	ldrh	r0, [r1, #0]
 802050e:	db67      	blt.n	80205e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020510:	45c2      	cmp	sl, r8
 8020512:	dd65      	ble.n	80205e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8020514:	2c00      	cmp	r4, #0
 8020516:	db61      	blt.n	80205dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8020518:	45a6      	cmp	lr, r4
 802051a:	dd5f      	ble.n	80205dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 802051c:	5dd2      	ldrb	r2, [r2, r7]
 802051e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8020522:	1c62      	adds	r2, r4, #1
 8020524:	d45f      	bmi.n	80205e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8020526:	4596      	cmp	lr, r2
 8020528:	dd5d      	ble.n	80205e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802052a:	2d00      	cmp	r5, #0
 802052c:	d05b      	beq.n	80205e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 802052e:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020532:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8020536:	f118 0801 	adds.w	r8, r8, #1
 802053a:	d458      	bmi.n	80205ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 802053c:	45c2      	cmp	sl, r8
 802053e:	dd56      	ble.n	80205ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020540:	2e00      	cmp	r6, #0
 8020542:	d054      	beq.n	80205ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8020544:	2c00      	cmp	r4, #0
 8020546:	db50      	blt.n	80205ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8020548:	45a6      	cmp	lr, r4
 802054a:	dd4e      	ble.n	80205ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 802054c:	f819 200e 	ldrb.w	r2, [r9, lr]
 8020550:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8020554:	3401      	adds	r4, #1
 8020556:	d407      	bmi.n	8020568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8020558:	45a6      	cmp	lr, r4
 802055a:	dd05      	ble.n	8020568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802055c:	b125      	cbz	r5, 8020568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 802055e:	44ce      	add	lr, r9
 8020560:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8020564:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8020568:	fb15 f406 	smulbb	r4, r5, r6
 802056c:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8020570:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8020574:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020578:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802057c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8020580:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8020584:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8020588:	ea43 0c0c 	orr.w	ip, r3, ip
 802058c:	f1c6 0310 	rsb	r3, r6, #16
 8020590:	ea4e 0707 	orr.w	r7, lr, r7
 8020594:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8020598:	1b5b      	subs	r3, r3, r5
 802059a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802059e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80205a2:	437d      	muls	r5, r7
 80205a4:	fb03 5c0c 	mla	ip, r3, ip, r5
 80205a8:	0403      	lsls	r3, r0, #16
 80205aa:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80205ae:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80205b2:	4318      	orrs	r0, r3
 80205b4:	0413      	lsls	r3, r2, #16
 80205b6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80205ba:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80205be:	fb04 c000 	mla	r0, r4, r0, ip
 80205c2:	4313      	orrs	r3, r2
 80205c4:	fb06 0003 	mla	r0, r6, r3, r0
 80205c8:	0d43      	lsrs	r3, r0, #21
 80205ca:	0940      	lsrs	r0, r0, #5
 80205cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80205d0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80205d4:	4318      	orrs	r0, r3
 80205d6:	8008      	strh	r0, [r1, #0]
 80205d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80205dc:	4684      	mov	ip, r0
 80205de:	e7a0      	b.n	8020522 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80205e0:	4607      	mov	r7, r0
 80205e2:	4684      	mov	ip, r0
 80205e4:	e7a7      	b.n	8020536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80205e6:	4607      	mov	r7, r0
 80205e8:	e7a5      	b.n	8020536 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80205ea:	4602      	mov	r2, r0
 80205ec:	e7b2      	b.n	8020554 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80205ee:	4602      	mov	r2, r0
 80205f0:	e7ba      	b.n	8020568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080205f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80205f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80205f6:	b093      	sub	sp, #76	@ 0x4c
 80205f8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80205fc:	920f      	str	r2, [sp, #60]	@ 0x3c
 80205fe:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020600:	9010      	str	r0, [sp, #64]	@ 0x40
 8020602:	9108      	str	r1, [sp, #32]
 8020604:	6850      	ldr	r0, [r2, #4]
 8020606:	9306      	str	r3, [sp, #24]
 8020608:	6812      	ldr	r2, [r2, #0]
 802060a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 802060e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8020612:	fb00 1303 	mla	r3, r0, r3, r1
 8020616:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802061a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802061c:	681b      	ldr	r3, [r3, #0]
 802061e:	9307      	str	r3, [sp, #28]
 8020620:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020622:	685f      	ldr	r7, [r3, #4]
 8020624:	3704      	adds	r7, #4
 8020626:	9b08      	ldr	r3, [sp, #32]
 8020628:	2b00      	cmp	r3, #0
 802062a:	dc03      	bgt.n	8020634 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802062c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802062e:	2b00      	cmp	r3, #0
 8020630:	f340 81b2 	ble.w	8020998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8020634:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020636:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802063a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802063e:	1e48      	subs	r0, r1, #1
 8020640:	f102 3cff 	add.w	ip, r2, #4294967295
 8020644:	9b06      	ldr	r3, [sp, #24]
 8020646:	2b00      	cmp	r3, #0
 8020648:	f340 80a9 	ble.w	802079e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802064c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8020650:	ea4f 4326 	mov.w	r3, r6, asr #16
 8020654:	d406      	bmi.n	8020664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8020656:	4586      	cmp	lr, r0
 8020658:	da04      	bge.n	8020664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802065a:	2b00      	cmp	r3, #0
 802065c:	db02      	blt.n	8020664 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802065e:	4563      	cmp	r3, ip
 8020660:	f2c0 809e 	blt.w	80207a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8020664:	f11e 0e01 	adds.w	lr, lr, #1
 8020668:	f100 808f 	bmi.w	802078a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802066c:	4571      	cmp	r1, lr
 802066e:	f2c0 808c 	blt.w	802078a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020672:	3301      	adds	r3, #1
 8020674:	f100 8089 	bmi.w	802078a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020678:	429a      	cmp	r2, r3
 802067a:	f2c0 8086 	blt.w	802078a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802067e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8020682:	46c8      	mov	r8, r9
 8020684:	f1bb 0f00 	cmp.w	fp, #0
 8020688:	f340 80a6 	ble.w	80207d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802068c:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 802068e:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8020692:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020694:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8020698:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802069c:	1422      	asrs	r2, r4, #16
 802069e:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80206a2:	689b      	ldr	r3, [r3, #8]
 80206a4:	f100 80e3 	bmi.w	802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80206a8:	f103 3aff 	add.w	sl, r3, #4294967295
 80206ac:	4552      	cmp	r2, sl
 80206ae:	f280 80de 	bge.w	802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80206b2:	f1bc 0f00 	cmp.w	ip, #0
 80206b6:	f2c0 80da 	blt.w	802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80206ba:	f10e 3aff 	add.w	sl, lr, #4294967295
 80206be:	45d4      	cmp	ip, sl
 80206c0:	f280 80d5 	bge.w	802086e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 80206c4:	b21b      	sxth	r3, r3
 80206c6:	9d07      	ldr	r5, [sp, #28]
 80206c8:	fb0c 2203 	mla	r2, ip, r3, r2
 80206cc:	eb05 0a02 	add.w	sl, r5, r2
 80206d0:	5caa      	ldrb	r2, [r5, r2]
 80206d2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 80206d6:	2800      	cmp	r0, #0
 80206d8:	f000 80c0 	beq.w	802085c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 80206dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80206e0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80206e4:	920b      	str	r2, [sp, #44]	@ 0x2c
 80206e6:	b151      	cbz	r1, 80206fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80206e8:	eb0a 0203 	add.w	r2, sl, r3
 80206ec:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80206f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80206f4:	9309      	str	r3, [sp, #36]	@ 0x24
 80206f6:	7853      	ldrb	r3, [r2, #1]
 80206f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80206fc:	930c      	str	r3, [sp, #48]	@ 0x30
 80206fe:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020700:	fb10 f201 	smulbb	r2, r0, r1
 8020704:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8020706:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802070a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802070e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8020712:	10d2      	asrs	r2, r2, #3
 8020714:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020718:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 802071c:	ea4c 0c03 	orr.w	ip, ip, r3
 8020720:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020722:	041b      	lsls	r3, r3, #16
 8020724:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020728:	432b      	orrs	r3, r5
 802072a:	4353      	muls	r3, r2
 802072c:	fb0a 330c 	mla	r3, sl, ip, r3
 8020730:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8020734:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020738:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 802073c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8020740:	f1c1 0c10 	rsb	ip, r1, #16
 8020744:	ebac 0c00 	sub.w	ip, ip, r0
 8020748:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 802074c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8020750:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8020754:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020756:	0418      	lsls	r0, r3, #16
 8020758:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 802075c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8020760:	4318      	orrs	r0, r3
 8020762:	fb02 c200 	mla	r2, r2, r0, ip
 8020766:	0d53      	lsrs	r3, r2, #21
 8020768:	0952      	lsrs	r2, r2, #5
 802076a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802076e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020772:	431a      	orrs	r2, r3
 8020774:	f8a8 2000 	strh.w	r2, [r8]
 8020778:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802077a:	f108 0802 	add.w	r8, r8, #2
 802077e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020782:	441c      	add	r4, r3
 8020784:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020786:	441e      	add	r6, r3
 8020788:	e77c      	b.n	8020684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802078a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802078c:	f109 0902 	add.w	r9, r9, #2
 8020790:	441c      	add	r4, r3
 8020792:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020794:	441e      	add	r6, r3
 8020796:	9b06      	ldr	r3, [sp, #24]
 8020798:	3b01      	subs	r3, #1
 802079a:	9306      	str	r3, [sp, #24]
 802079c:	e752      	b.n	8020644 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802079e:	d020      	beq.n	80207e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80207a0:	9b06      	ldr	r3, [sp, #24]
 80207a2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80207a4:	3b01      	subs	r3, #1
 80207a6:	fb00 4003 	mla	r0, r0, r3, r4
 80207aa:	1400      	asrs	r0, r0, #16
 80207ac:	f53f af67 	bmi.w	802067e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80207b0:	3901      	subs	r1, #1
 80207b2:	4288      	cmp	r0, r1
 80207b4:	f6bf af63 	bge.w	802067e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80207b8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80207ba:	fb01 6303 	mla	r3, r1, r3, r6
 80207be:	141b      	asrs	r3, r3, #16
 80207c0:	f53f af5d 	bmi.w	802067e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80207c4:	3a01      	subs	r2, #1
 80207c6:	4293      	cmp	r3, r2
 80207c8:	f6bf af59 	bge.w	802067e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80207cc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80207d0:	46ca      	mov	sl, r9
 80207d2:	f1b8 0f00 	cmp.w	r8, #0
 80207d6:	dc67      	bgt.n	80208a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80207d8:	9b06      	ldr	r3, [sp, #24]
 80207da:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80207de:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80207e2:	9b08      	ldr	r3, [sp, #32]
 80207e4:	2b00      	cmp	r3, #0
 80207e6:	f340 80d7 	ble.w	8020998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80207ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80207ee:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80207f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80207f4:	eeb0 6a62 	vmov.f32	s12, s5
 80207f8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80207fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020800:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020804:	ee16 4a10 	vmov	r4, s12
 8020808:	eeb0 6a43 	vmov.f32	s12, s6
 802080c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8020810:	ee16 6a10 	vmov	r6, s12
 8020814:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020818:	ee61 7a27 	vmul.f32	s15, s2, s15
 802081c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020820:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020824:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020828:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802082c:	ee12 2a90 	vmov	r2, s5
 8020830:	eef0 2a47 	vmov.f32	s5, s14
 8020834:	fb92 f3f3 	sdiv	r3, r2, r3
 8020838:	ee13 2a10 	vmov	r2, s6
 802083c:	931f      	str	r3, [sp, #124]	@ 0x7c
 802083e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020840:	eeb0 3a67 	vmov.f32	s6, s15
 8020844:	fb92 f3f3 	sdiv	r3, r2, r3
 8020848:	9320      	str	r3, [sp, #128]	@ 0x80
 802084a:	9b08      	ldr	r3, [sp, #32]
 802084c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802084e:	3b01      	subs	r3, #1
 8020850:	9308      	str	r3, [sp, #32]
 8020852:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8020854:	bf08      	it	eq
 8020856:	4613      	moveq	r3, r2
 8020858:	9306      	str	r3, [sp, #24]
 802085a:	e6e4      	b.n	8020626 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802085c:	2900      	cmp	r1, #0
 802085e:	f43f af4e 	beq.w	80206fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8020862:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8020866:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802086a:	9309      	str	r3, [sp, #36]	@ 0x24
 802086c:	e747      	b.n	80206fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 802086e:	f112 0a01 	adds.w	sl, r2, #1
 8020872:	d481      	bmi.n	8020778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020874:	4553      	cmp	r3, sl
 8020876:	f6ff af7f 	blt.w	8020778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802087a:	f11c 0a01 	adds.w	sl, ip, #1
 802087e:	f53f af7b 	bmi.w	8020778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020882:	45d6      	cmp	lr, sl
 8020884:	f6ff af78 	blt.w	8020778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8020888:	b21b      	sxth	r3, r3
 802088a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 802088e:	fa0f f28e 	sxth.w	r2, lr
 8020892:	9300      	str	r3, [sp, #0]
 8020894:	463b      	mov	r3, r7
 8020896:	9201      	str	r2, [sp, #4]
 8020898:	9a07      	ldr	r2, [sp, #28]
 802089a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802089e:	4641      	mov	r1, r8
 80208a0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80208a2:	f7ff fe21 	bl	80204e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80208a6:	e767      	b.n	8020778 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80208a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80208aa:	1422      	asrs	r2, r4, #16
 80208ac:	1431      	asrs	r1, r6, #16
 80208ae:	9d07      	ldr	r5, [sp, #28]
 80208b0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80208b4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 80208b8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80208bc:	fb03 2101 	mla	r1, r3, r1, r2
 80208c0:	9a07      	ldr	r2, [sp, #28]
 80208c2:	440a      	add	r2, r1
 80208c4:	5c69      	ldrb	r1, [r5, r1]
 80208c6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 80208ca:	f1be 0f00 	cmp.w	lr, #0
 80208ce:	d05c      	beq.n	802098a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80208d0:	f892 c001 	ldrb.w	ip, [r2, #1]
 80208d4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 80208d8:	950d      	str	r5, [sp, #52]	@ 0x34
 80208da:	b150      	cbz	r0, 80208f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 80208dc:	eb02 0c03 	add.w	ip, r2, r3
 80208e0:	5cd3      	ldrb	r3, [r2, r3]
 80208e2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80208e6:	930a      	str	r3, [sp, #40]	@ 0x28
 80208e8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 80208ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80208f0:	930e      	str	r3, [sp, #56]	@ 0x38
 80208f2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80208f4:	fb1e f200 	smulbb	r2, lr, r0
 80208f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80208fa:	f108 38ff 	add.w	r8, r8, #4294967295
 80208fe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8020902:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8020906:	10d2      	asrs	r2, r2, #3
 8020908:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 802090c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8020910:	ea4c 0c03 	orr.w	ip, ip, r3
 8020914:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8020918:	9311      	str	r3, [sp, #68]	@ 0x44
 802091a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802091c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802091e:	041b      	lsls	r3, r3, #16
 8020920:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8020924:	ea43 030b 	orr.w	r3, r3, fp
 8020928:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802092c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8020930:	4353      	muls	r3, r2
 8020932:	fb05 3c0c 	mla	ip, r5, ip, r3
 8020936:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 802093a:	ea43 0b01 	orr.w	fp, r3, r1
 802093e:	f1c0 0110 	rsb	r1, r0, #16
 8020942:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020944:	eba1 0e0e 	sub.w	lr, r1, lr
 8020948:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 802094c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8020950:	fb0e cc0b 	mla	ip, lr, fp, ip
 8020954:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8020958:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 802095c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8020960:	ea4b 0e0e 	orr.w	lr, fp, lr
 8020964:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020968:	ea4f 535c 	mov.w	r3, ip, lsr #21
 802096c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020970:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020974:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8020978:	ea43 0c0c 	orr.w	ip, r3, ip
 802097c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802097e:	441c      	add	r4, r3
 8020980:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020982:	f82a cb02 	strh.w	ip, [sl], #2
 8020986:	441e      	add	r6, r3
 8020988:	e723      	b.n	80207d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802098a:	2800      	cmp	r0, #0
 802098c:	d0b1      	beq.n	80208f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802098e:	5cd3      	ldrb	r3, [r2, r3]
 8020990:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8020994:	930a      	str	r3, [sp, #40]	@ 0x28
 8020996:	e7ac      	b.n	80208f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8020998:	b013      	add	sp, #76	@ 0x4c
 802099a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802099e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802099e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80209a2:	880d      	ldrh	r5, [r1, #0]
 80209a4:	b087      	sub	sp, #28
 80209a6:	10ef      	asrs	r7, r5, #3
 80209a8:	9103      	str	r1, [sp, #12]
 80209aa:	ea4f 2a25 	mov.w	sl, r5, asr #8
 80209ae:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 80209b2:	00ed      	lsls	r5, r5, #3
 80209b4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80209b8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 80209bc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 80209c0:	b2ed      	uxtb	r5, r5
 80209c2:	9701      	str	r7, [sp, #4]
 80209c4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 80209c8:	9502      	str	r5, [sp, #8]
 80209ca:	9d01      	ldr	r5, [sp, #4]
 80209cc:	9902      	ldr	r1, [sp, #8]
 80209ce:	022d      	lsls	r5, r5, #8
 80209d0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 80209d4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 80209d8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 80209dc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 80209e0:	430d      	orrs	r5, r1
 80209e2:	fb06 0709 	mla	r7, r6, r9, r0
 80209e6:	2e00      	cmp	r6, #0
 80209e8:	9505      	str	r5, [sp, #20]
 80209ea:	eb02 0c07 	add.w	ip, r2, r7
 80209ee:	f2c0 80b6 	blt.w	8020b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80209f2:	45b3      	cmp	fp, r6
 80209f4:	f340 80b3 	ble.w	8020b5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 80209f8:	2800      	cmp	r0, #0
 80209fa:	f2c0 80ae 	blt.w	8020b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 80209fe:	4581      	cmp	r9, r0
 8020a00:	f340 80ab 	ble.w	8020b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8020a04:	5dd7      	ldrb	r7, [r2, r7]
 8020a06:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020a0a:	441f      	add	r7, r3
 8020a0c:	1c42      	adds	r2, r0, #1
 8020a0e:	f100 80a9 	bmi.w	8020b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020a12:	4591      	cmp	r9, r2
 8020a14:	f340 80a6 	ble.w	8020b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020a18:	2c00      	cmp	r4, #0
 8020a1a:	f000 80a3 	beq.w	8020b64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8020a1e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020a22:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8020a26:	441d      	add	r5, r3
 8020a28:	3601      	adds	r6, #1
 8020a2a:	f100 809f 	bmi.w	8020b6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020a2e:	45b3      	cmp	fp, r6
 8020a30:	f340 809c 	ble.w	8020b6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020a34:	f1be 0f00 	cmp.w	lr, #0
 8020a38:	f000 8098 	beq.w	8020b6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8020a3c:	2800      	cmp	r0, #0
 8020a3e:	f2c0 8093 	blt.w	8020b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020a42:	4581      	cmp	r9, r0
 8020a44:	f340 8090 	ble.w	8020b68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8020a48:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8020a4c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8020a50:	441e      	add	r6, r3
 8020a52:	3001      	adds	r0, #1
 8020a54:	f100 808d 	bmi.w	8020b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020a58:	4581      	cmp	r9, r0
 8020a5a:	f340 808a 	ble.w	8020b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020a5e:	2c00      	cmp	r4, #0
 8020a60:	f000 8087 	beq.w	8020b72 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8020a64:	44e1      	add	r9, ip
 8020a66:	f899 2001 	ldrb.w	r2, [r9, #1]
 8020a6a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020a6e:	4413      	add	r3, r2
 8020a70:	b2a4      	uxth	r4, r4
 8020a72:	f897 c002 	ldrb.w	ip, [r7, #2]
 8020a76:	fa1f fe8e 	uxth.w	lr, lr
 8020a7a:	9901      	ldr	r1, [sp, #4]
 8020a7c:	fb04 fb0e 	mul.w	fp, r4, lr
 8020a80:	0124      	lsls	r4, r4, #4
 8020a82:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8020a86:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 8020a8a:	eba4 040b 	sub.w	r4, r4, fp
 8020a8e:	fa1f f08e 	uxth.w	r0, lr
 8020a92:	b2a2      	uxth	r2, r4
 8020a94:	78ac      	ldrb	r4, [r5, #2]
 8020a96:	eba9 0900 	sub.w	r9, r9, r0
 8020a9a:	fa1f fe88 	uxth.w	lr, r8
 8020a9e:	4354      	muls	r4, r2
 8020aa0:	ea6f 0808 	mvn.w	r8, r8
 8020aa4:	fa1f f989 	uxth.w	r9, r9
 8020aa8:	fa5f f888 	uxtb.w	r8, r8
 8020aac:	fb09 440c 	mla	r4, r9, ip, r4
 8020ab0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8020ab4:	fb1a fa08 	smulbb	sl, sl, r8
 8020ab8:	fb00 440c 	mla	r4, r0, ip, r4
 8020abc:	f893 c002 	ldrb.w	ip, [r3, #2]
 8020ac0:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8020ac4:	787c      	ldrb	r4, [r7, #1]
 8020ac6:	783f      	ldrb	r7, [r7, #0]
 8020ac8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020acc:	fb0c ac0e 	mla	ip, ip, lr, sl
 8020ad0:	f895 a001 	ldrb.w	sl, [r5, #1]
 8020ad4:	782d      	ldrb	r5, [r5, #0]
 8020ad6:	fb02 fa0a 	mul.w	sl, r2, sl
 8020ada:	fa1f fc8c 	uxth.w	ip, ip
 8020ade:	436a      	muls	r2, r5
 8020ae0:	7835      	ldrb	r5, [r6, #0]
 8020ae2:	fb09 aa04 	mla	sl, r9, r4, sl
 8020ae6:	7874      	ldrb	r4, [r6, #1]
 8020ae8:	fb09 2207 	mla	r2, r9, r7, r2
 8020aec:	fb00 aa04 	mla	sl, r0, r4, sl
 8020af0:	785c      	ldrb	r4, [r3, #1]
 8020af2:	fb00 2005 	mla	r0, r0, r5, r2
 8020af6:	781b      	ldrb	r3, [r3, #0]
 8020af8:	fb0b a404 	mla	r4, fp, r4, sl
 8020afc:	fb11 fa08 	smulbb	sl, r1, r8
 8020b00:	fb0b 0b03 	mla	fp, fp, r3, r0
 8020b04:	9b02      	ldr	r3, [sp, #8]
 8020b06:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8020b0a:	fb13 f808 	smulbb	r8, r3, r8
 8020b0e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8020b12:	fb04 a40e 	mla	r4, r4, lr, sl
 8020b16:	f10c 0301 	add.w	r3, ip, #1
 8020b1a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8020b1e:	b2a4      	uxth	r4, r4
 8020b20:	fa1f fe8e 	uxth.w	lr, lr
 8020b24:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8020b28:	f104 0a01 	add.w	sl, r4, #1
 8020b2c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 8020b30:	f10e 0c01 	add.w	ip, lr, #1
 8020b34:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8020b38:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020b3c:	0964      	lsrs	r4, r4, #5
 8020b3e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8020b42:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020b46:	ea4c 0c03 	orr.w	ip, ip, r3
 8020b4a:	9b03      	ldr	r3, [sp, #12]
 8020b4c:	ea4c 0c04 	orr.w	ip, ip, r4
 8020b50:	f8a3 c000 	strh.w	ip, [r3]
 8020b54:	b007      	add	sp, #28
 8020b56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020b5a:	af05      	add	r7, sp, #20
 8020b5c:	e756      	b.n	8020a0c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8020b5e:	ad05      	add	r5, sp, #20
 8020b60:	462f      	mov	r7, r5
 8020b62:	e761      	b.n	8020a28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020b64:	ad05      	add	r5, sp, #20
 8020b66:	e75f      	b.n	8020a28 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8020b68:	ae05      	add	r6, sp, #20
 8020b6a:	e772      	b.n	8020a52 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8020b6c:	ab05      	add	r3, sp, #20
 8020b6e:	461e      	mov	r6, r3
 8020b70:	e77e      	b.n	8020a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8020b72:	ab05      	add	r3, sp, #20
 8020b74:	e77c      	b.n	8020a70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08020b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020b7a:	b095      	sub	sp, #84	@ 0x54
 8020b7c:	9212      	str	r2, [sp, #72]	@ 0x48
 8020b7e:	9309      	str	r3, [sp, #36]	@ 0x24
 8020b80:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8020b82:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 8020b86:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020b88:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020b8a:	6850      	ldr	r0, [r2, #4]
 8020b8c:	910e      	str	r1, [sp, #56]	@ 0x38
 8020b8e:	6812      	ldr	r2, [r2, #0]
 8020b90:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 8020b94:	fb00 1303 	mla	r3, r0, r3, r1
 8020b98:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020b9c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020b9e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020ba0:	681b      	ldr	r3, [r3, #0]
 8020ba2:	930d      	str	r3, [sp, #52]	@ 0x34
 8020ba4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020ba6:	685c      	ldr	r4, [r3, #4]
 8020ba8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8020baa:	3404      	adds	r4, #4
 8020bac:	43db      	mvns	r3, r3
 8020bae:	b2db      	uxtb	r3, r3
 8020bb0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020bb2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020bb4:	2b00      	cmp	r3, #0
 8020bb6:	dc03      	bgt.n	8020bc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020bb8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8020bba:	2b00      	cmp	r3, #0
 8020bbc:	f340 8255 	ble.w	802106a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020bc0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8020bc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020bc6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020bca:	1e48      	subs	r0, r1, #1
 8020bcc:	1e55      	subs	r5, r2, #1
 8020bce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020bd0:	2b00      	cmp	r3, #0
 8020bd2:	f340 80f9 	ble.w	8020dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8020bd6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8020bd8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020bda:	1436      	asrs	r6, r6, #16
 8020bdc:	ea4f 4323 	mov.w	r3, r3, asr #16
 8020be0:	d406      	bmi.n	8020bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020be2:	4286      	cmp	r6, r0
 8020be4:	da04      	bge.n	8020bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020be6:	2b00      	cmp	r3, #0
 8020be8:	db02      	blt.n	8020bf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020bea:	42ab      	cmp	r3, r5
 8020bec:	f2c0 80ed 	blt.w	8020dca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8020bf0:	3601      	adds	r6, #1
 8020bf2:	f100 80da 	bmi.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020bf6:	42b1      	cmp	r1, r6
 8020bf8:	f2c0 80d7 	blt.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020bfc:	3301      	adds	r3, #1
 8020bfe:	f100 80d4 	bmi.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020c02:	429a      	cmp	r2, r3
 8020c04:	f2c0 80d1 	blt.w	8020daa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8020c08:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020c0a:	9311      	str	r3, [sp, #68]	@ 0x44
 8020c0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020c0e:	930c      	str	r3, [sp, #48]	@ 0x30
 8020c10:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020c12:	2b00      	cmp	r3, #0
 8020c14:	f340 80fa 	ble.w	8020e0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 8020c18:	9826      	ldr	r0, [sp, #152]	@ 0x98
 8020c1a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020c1c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8020c1e:	68c6      	ldr	r6, [r0, #12]
 8020c20:	141d      	asrs	r5, r3, #16
 8020c22:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8020c24:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020c28:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020c2a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8020c2c:	1400      	asrs	r0, r0, #16
 8020c2e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020c32:	6892      	ldr	r2, [r2, #8]
 8020c34:	f100 813e 	bmi.w	8020eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020c38:	1e57      	subs	r7, r2, #1
 8020c3a:	42b8      	cmp	r0, r7
 8020c3c:	f280 813a 	bge.w	8020eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020c40:	2d00      	cmp	r5, #0
 8020c42:	f2c0 8137 	blt.w	8020eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020c46:	1e77      	subs	r7, r6, #1
 8020c48:	42bd      	cmp	r5, r7
 8020c4a:	f280 8133 	bge.w	8020eb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 8020c4e:	b212      	sxth	r2, r2
 8020c50:	fb05 0002 	mla	r0, r5, r2, r0
 8020c54:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020c56:	f815 a000 	ldrb.w	sl, [r5, r0]
 8020c5a:	182e      	adds	r6, r5, r0
 8020c5c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8020c60:	eb04 050a 	add.w	r5, r4, sl
 8020c64:	2b00      	cmp	r3, #0
 8020c66:	f000 8117 	beq.w	8020e98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 8020c6a:	f896 c001 	ldrb.w	ip, [r6, #1]
 8020c6e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8020c72:	44a4      	add	ip, r4
 8020c74:	2900      	cmp	r1, #0
 8020c76:	f000 8117 	beq.w	8020ea8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 8020c7a:	18b0      	adds	r0, r6, r2
 8020c7c:	5cb2      	ldrb	r2, [r6, r2]
 8020c7e:	7840      	ldrb	r0, [r0, #1]
 8020c80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020c84:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020c88:	4422      	add	r2, r4
 8020c8a:	4420      	add	r0, r4
 8020c8c:	b29b      	uxth	r3, r3
 8020c8e:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8020c92:	b289      	uxth	r1, r1
 8020c94:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020c98:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8020c9a:	fb03 f901 	mul.w	r9, r3, r1
 8020c9e:	011b      	lsls	r3, r3, #4
 8020ca0:	f8b6 e000 	ldrh.w	lr, [r6]
 8020ca4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8020ca8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 8020cac:	eba3 0309 	sub.w	r3, r3, r9
 8020cb0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 8020cb4:	b289      	uxth	r1, r1
 8020cb6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8020cba:	b29b      	uxth	r3, r3
 8020cbc:	eba8 0801 	sub.w	r8, r8, r1
 8020cc0:	435f      	muls	r7, r3
 8020cc2:	fa1f f888 	uxth.w	r8, r8
 8020cc6:	9310      	str	r3, [sp, #64]	@ 0x40
 8020cc8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020cca:	fb08 770b 	mla	r7, r8, fp, r7
 8020cce:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020cd2:	fb01 770b 	mla	r7, r1, fp, r7
 8020cd6:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020cda:	fb09 770b 	mla	r7, r9, fp, r7
 8020cde:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8020ce2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8020ce6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020cea:	fb1b fb03 	smulbb	fp, fp, r3
 8020cee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020cf0:	fb07 b706 	mla	r7, r7, r6, fp
 8020cf4:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020cf8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8020cfc:	f89c c000 	ldrb.w	ip, [ip]
 8020d00:	b2bf      	uxth	r7, r7
 8020d02:	435d      	muls	r5, r3
 8020d04:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020d06:	fb08 550b 	mla	r5, r8, fp, r5
 8020d0a:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020d0e:	fb01 550b 	mla	r5, r1, fp, r5
 8020d12:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020d16:	fb09 550b 	mla	r5, r9, fp, r5
 8020d1a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8020d1e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8020d22:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8020d26:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020d2a:	fa5f fe8e 	uxtb.w	lr, lr
 8020d2e:	fb1b fb03 	smulbb	fp, fp, r3
 8020d32:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020d34:	fb03 f30c 	mul.w	r3, r3, ip
 8020d38:	f892 c000 	ldrb.w	ip, [r2]
 8020d3c:	fb05 b506 	mla	r5, r5, r6, fp
 8020d40:	fb08 330a 	mla	r3, r8, sl, r3
 8020d44:	b2ad      	uxth	r5, r5
 8020d46:	fb01 330c 	mla	r3, r1, ip, r3
 8020d4a:	f890 c000 	ldrb.w	ip, [r0]
 8020d4e:	f105 0b01 	add.w	fp, r5, #1
 8020d52:	fb09 3c0c 	mla	ip, r9, ip, r3
 8020d56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020d58:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8020d5c:	fb1e fe03 	smulbb	lr, lr, r3
 8020d60:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8020d64:	1c7b      	adds	r3, r7, #1
 8020d66:	096d      	lsrs	r5, r5, #5
 8020d68:	fb0c e606 	mla	r6, ip, r6, lr
 8020d6c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020d70:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020d74:	b2b6      	uxth	r6, r6
 8020d76:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 8020d7a:	1c77      	adds	r7, r6, #1
 8020d7c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8020d80:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8020d84:	431f      	orrs	r7, r3
 8020d86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020d88:	433d      	orrs	r5, r7
 8020d8a:	801d      	strh	r5, [r3, #0]
 8020d8c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020d8e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8020d90:	3302      	adds	r3, #2
 8020d92:	930c      	str	r3, [sp, #48]	@ 0x30
 8020d94:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020d96:	4413      	add	r3, r2
 8020d98:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8020d9a:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020d9c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020d9e:	4413      	add	r3, r2
 8020da0:	9320      	str	r3, [sp, #128]	@ 0x80
 8020da2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020da4:	3b01      	subs	r3, #1
 8020da6:	9311      	str	r3, [sp, #68]	@ 0x44
 8020da8:	e732      	b.n	8020c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8020daa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020dac:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8020dae:	4433      	add	r3, r6
 8020db0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8020db2:	931f      	str	r3, [sp, #124]	@ 0x7c
 8020db4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8020db6:	4433      	add	r3, r6
 8020db8:	9320      	str	r3, [sp, #128]	@ 0x80
 8020dba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020dbc:	3b01      	subs	r3, #1
 8020dbe:	9309      	str	r3, [sp, #36]	@ 0x24
 8020dc0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020dc2:	3302      	adds	r3, #2
 8020dc4:	930a      	str	r3, [sp, #40]	@ 0x28
 8020dc6:	e702      	b.n	8020bce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020dc8:	d027      	beq.n	8020e1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 8020dca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020dcc:	9821      	ldr	r0, [sp, #132]	@ 0x84
 8020dce:	3b01      	subs	r3, #1
 8020dd0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8020dd2:	fb00 5003 	mla	r0, r0, r3, r5
 8020dd6:	1400      	asrs	r0, r0, #16
 8020dd8:	f53f af16 	bmi.w	8020c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020ddc:	3901      	subs	r1, #1
 8020dde:	4288      	cmp	r0, r1
 8020de0:	f6bf af12 	bge.w	8020c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020de4:	9922      	ldr	r1, [sp, #136]	@ 0x88
 8020de6:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8020de8:	fb01 0303 	mla	r3, r1, r3, r0
 8020dec:	141b      	asrs	r3, r3, #16
 8020dee:	f53f af0b 	bmi.w	8020c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020df2:	3a01      	subs	r2, #1
 8020df4:	4293      	cmp	r3, r2
 8020df6:	f6bf af07 	bge.w	8020c08 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8020dfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020dfc:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 8020e00:	9311      	str	r3, [sp, #68]	@ 0x44
 8020e02:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020e04:	930c      	str	r3, [sp, #48]	@ 0x30
 8020e06:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020e08:	2b00      	cmp	r3, #0
 8020e0a:	dc70      	bgt.n	8020eee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8020e0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020e0e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8020e10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8020e14:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020e18:	930a      	str	r3, [sp, #40]	@ 0x28
 8020e1a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020e1c:	2b00      	cmp	r3, #0
 8020e1e:	f340 8124 	ble.w	802106a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8020e22:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020e26:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8020e28:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020e2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020e30:	eef0 6a62 	vmov.f32	s13, s5
 8020e34:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020e38:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020e3c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e40:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 8020e44:	eef0 6a43 	vmov.f32	s13, s6
 8020e48:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e4c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 8020e50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020e54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e58:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e5c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e60:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e64:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e68:	ee12 2a90 	vmov	r2, s5
 8020e6c:	eef0 2a47 	vmov.f32	s5, s14
 8020e70:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e74:	ee13 2a10 	vmov	r2, s6
 8020e78:	9321      	str	r3, [sp, #132]	@ 0x84
 8020e7a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8020e7c:	eeb0 3a67 	vmov.f32	s6, s15
 8020e80:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e84:	9322      	str	r3, [sp, #136]	@ 0x88
 8020e86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8020e88:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8020e8a:	3b01      	subs	r3, #1
 8020e8c:	930e      	str	r3, [sp, #56]	@ 0x38
 8020e8e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8020e90:	bf08      	it	eq
 8020e92:	4613      	moveq	r3, r2
 8020e94:	9309      	str	r3, [sp, #36]	@ 0x24
 8020e96:	e68c      	b.n	8020bb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020e98:	b149      	cbz	r1, 8020eae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8020e9a:	5cb2      	ldrb	r2, [r6, r2]
 8020e9c:	4628      	mov	r0, r5
 8020e9e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020ea2:	4422      	add	r2, r4
 8020ea4:	46ac      	mov	ip, r5
 8020ea6:	e6f1      	b.n	8020c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020ea8:	4628      	mov	r0, r5
 8020eaa:	462a      	mov	r2, r5
 8020eac:	e6ee      	b.n	8020c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8020eae:	4628      	mov	r0, r5
 8020eb0:	462a      	mov	r2, r5
 8020eb2:	e7f7      	b.n	8020ea4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8020eb4:	1c47      	adds	r7, r0, #1
 8020eb6:	f53f af69 	bmi.w	8020d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020eba:	42ba      	cmp	r2, r7
 8020ebc:	f6ff af66 	blt.w	8020d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ec0:	1c6f      	adds	r7, r5, #1
 8020ec2:	f53f af63 	bmi.w	8020d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ec6:	42be      	cmp	r6, r7
 8020ec8:	f6ff af60 	blt.w	8020d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020ecc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8020ece:	b236      	sxth	r6, r6
 8020ed0:	b212      	sxth	r2, r2
 8020ed2:	9002      	str	r0, [sp, #8]
 8020ed4:	9601      	str	r6, [sp, #4]
 8020ed6:	9200      	str	r2, [sp, #0]
 8020ed8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8020eda:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8020ede:	e9cd 5303 	strd	r5, r3, [sp, #12]
 8020ee2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 8020ee6:	4623      	mov	r3, r4
 8020ee8:	f7ff fd59 	bl	802099e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8020eec:	e74e      	b.n	8020d8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8020eee:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8020ef0:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8020ef2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8020ef6:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 8020ef8:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8020efa:	1400      	asrs	r0, r0, #16
 8020efc:	142d      	asrs	r5, r5, #16
 8020efe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8020f00:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8020f04:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8020f08:	fb02 5000 	mla	r0, r2, r0, r5
 8020f0c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8020f0e:	f815 9000 	ldrb.w	r9, [r5, r0]
 8020f12:	182e      	adds	r6, r5, r0
 8020f14:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 8020f18:	eb04 0509 	add.w	r5, r4, r9
 8020f1c:	2b00      	cmp	r3, #0
 8020f1e:	f000 8096 	beq.w	802104e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8020f22:	7877      	ldrb	r7, [r6, #1]
 8020f24:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8020f28:	4427      	add	r7, r4
 8020f2a:	2900      	cmp	r1, #0
 8020f2c:	f000 8097 	beq.w	802105e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 8020f30:	18b0      	adds	r0, r6, r2
 8020f32:	5cb2      	ldrb	r2, [r6, r2]
 8020f34:	7840      	ldrb	r0, [r0, #1]
 8020f36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8020f3a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8020f3e:	4422      	add	r2, r4
 8020f40:	4420      	add	r0, r4
 8020f42:	b29b      	uxth	r3, r3
 8020f44:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8020f46:	b289      	uxth	r1, r1
 8020f48:	f895 b002 	ldrb.w	fp, [r5, #2]
 8020f4c:	f8b6 c000 	ldrh.w	ip, [r6]
 8020f50:	fb03 f801 	mul.w	r8, r3, r1
 8020f54:	011b      	lsls	r3, r3, #4
 8020f56:	78be      	ldrb	r6, [r7, #2]
 8020f58:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8020f5c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 8020f60:	eba3 0308 	sub.w	r3, r3, r8
 8020f64:	f814 9009 	ldrb.w	r9, [r4, r9]
 8020f68:	b289      	uxth	r1, r1
 8020f6a:	b29b      	uxth	r3, r3
 8020f6c:	ebae 0e01 	sub.w	lr, lr, r1
 8020f70:	435e      	muls	r6, r3
 8020f72:	fa1f fe8e 	uxth.w	lr, lr
 8020f76:	9310      	str	r3, [sp, #64]	@ 0x40
 8020f78:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020f7a:	fb0e 660b 	mla	r6, lr, fp, r6
 8020f7e:	f892 b002 	ldrb.w	fp, [r2, #2]
 8020f82:	fb01 660b 	mla	r6, r1, fp, r6
 8020f86:	f890 b002 	ldrb.w	fp, [r0, #2]
 8020f8a:	fb08 660b 	mla	r6, r8, fp, r6
 8020f8e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8020f92:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 8020f96:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020f9a:	fb1b fb03 	smulbb	fp, fp, r3
 8020f9e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020fa0:	fb06 b60a 	mla	r6, r6, sl, fp
 8020fa4:	f895 b001 	ldrb.w	fp, [r5, #1]
 8020fa8:	787d      	ldrb	r5, [r7, #1]
 8020faa:	783f      	ldrb	r7, [r7, #0]
 8020fac:	b2b6      	uxth	r6, r6
 8020fae:	435d      	muls	r5, r3
 8020fb0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020fb2:	fb0e 550b 	mla	r5, lr, fp, r5
 8020fb6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8020fba:	fb01 550b 	mla	r5, r1, fp, r5
 8020fbe:	f890 b001 	ldrb.w	fp, [r0, #1]
 8020fc2:	fb08 550b 	mla	r5, r8, fp, r5
 8020fc6:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8020fca:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020fce:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8020fd2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8020fd6:	fa5f fc8c 	uxtb.w	ip, ip
 8020fda:	fb1b fb03 	smulbb	fp, fp, r3
 8020fde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8020fe0:	437b      	muls	r3, r7
 8020fe2:	7817      	ldrb	r7, [r2, #0]
 8020fe4:	fb05 b50a 	mla	r5, r5, sl, fp
 8020fe8:	fb0e 3309 	mla	r3, lr, r9, r3
 8020fec:	b2ad      	uxth	r5, r5
 8020fee:	fb01 3307 	mla	r3, r1, r7, r3
 8020ff2:	7807      	ldrb	r7, [r0, #0]
 8020ff4:	f105 0b01 	add.w	fp, r5, #1
 8020ff8:	fb08 3707 	mla	r7, r8, r7, r3
 8020ffc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8020ffe:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8021002:	fb1c fc03 	smulbb	ip, ip, r3
 8021006:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802100a:	1c73      	adds	r3, r6, #1
 802100c:	096d      	lsrs	r5, r5, #5
 802100e:	fb07 c70a 	mla	r7, r7, sl, ip
 8021012:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8021016:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802101a:	b2bf      	uxth	r7, r7
 802101c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802101e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8021022:	1c7a      	adds	r2, r7, #1
 8021024:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021028:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802102c:	4316      	orrs	r6, r2
 802102e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021030:	432e      	orrs	r6, r5
 8021032:	f823 6b02 	strh.w	r6, [r3], #2
 8021036:	930c      	str	r3, [sp, #48]	@ 0x30
 8021038:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802103a:	4413      	add	r3, r2
 802103c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802103e:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021040:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021042:	4413      	add	r3, r2
 8021044:	9320      	str	r3, [sp, #128]	@ 0x80
 8021046:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021048:	3b01      	subs	r3, #1
 802104a:	9311      	str	r3, [sp, #68]	@ 0x44
 802104c:	e6db      	b.n	8020e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 802104e:	b149      	cbz	r1, 8021064 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021050:	5cb2      	ldrb	r2, [r6, r2]
 8021052:	4628      	mov	r0, r5
 8021054:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021058:	4422      	add	r2, r4
 802105a:	462f      	mov	r7, r5
 802105c:	e771      	b.n	8020f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 802105e:	4628      	mov	r0, r5
 8021060:	462a      	mov	r2, r5
 8021062:	e76e      	b.n	8020f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8021064:	4628      	mov	r0, r5
 8021066:	462a      	mov	r2, r5
 8021068:	e7f7      	b.n	802105a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802106a:	b015      	add	sp, #84	@ 0x54
 802106c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8021070:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021074:	880f      	ldrh	r7, [r1, #0]
 8021076:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 802107a:	023c      	lsls	r4, r7, #8
 802107c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8021080:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 8021084:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 8021088:	017c      	lsls	r4, r7, #5
 802108a:	00ff      	lsls	r7, r7, #3
 802108c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8021090:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 8021094:	b2ff      	uxtb	r7, r7
 8021096:	ea4b 0404 	orr.w	r4, fp, r4
 802109a:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 802109e:	4327      	orrs	r7, r4
 80210a0:	fb05 ca0e 	mla	sl, r5, lr, ip
 80210a4:	2d00      	cmp	r5, #0
 80210a6:	9701      	str	r7, [sp, #4]
 80210a8:	eb02 080a 	add.w	r8, r2, sl
 80210ac:	db7e      	blt.n	80211ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80210ae:	45a9      	cmp	r9, r5
 80210b0:	dd7c      	ble.n	80211ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 80210b2:	f1bc 0f00 	cmp.w	ip, #0
 80210b6:	db77      	blt.n	80211a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80210b8:	45e6      	cmp	lr, ip
 80210ba:	dd75      	ble.n	80211a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 80210bc:	f812 700a 	ldrb.w	r7, [r2, sl]
 80210c0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80210c4:	441f      	add	r7, r3
 80210c6:	f11c 0201 	adds.w	r2, ip, #1
 80210ca:	d472      	bmi.n	80211b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80210cc:	4596      	cmp	lr, r2
 80210ce:	dd70      	ble.n	80211b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80210d0:	2800      	cmp	r0, #0
 80210d2:	d06e      	beq.n	80211b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 80210d4:	f898 4001 	ldrb.w	r4, [r8, #1]
 80210d8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 80210dc:	441c      	add	r4, r3
 80210de:	3501      	adds	r5, #1
 80210e0:	d46b      	bmi.n	80211ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80210e2:	45a9      	cmp	r9, r5
 80210e4:	dd69      	ble.n	80211ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80210e6:	2e00      	cmp	r6, #0
 80210e8:	d067      	beq.n	80211ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 80210ea:	f1bc 0f00 	cmp.w	ip, #0
 80210ee:	db62      	blt.n	80211b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80210f0:	45e6      	cmp	lr, ip
 80210f2:	dd60      	ble.n	80211b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 80210f4:	f818 500e 	ldrb.w	r5, [r8, lr]
 80210f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80210fc:	441d      	add	r5, r3
 80210fe:	f11c 0201 	adds.w	r2, ip, #1
 8021102:	d45d      	bmi.n	80211c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021104:	4596      	cmp	lr, r2
 8021106:	dd5b      	ble.n	80211c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8021108:	2800      	cmp	r0, #0
 802110a:	d059      	beq.n	80211c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 802110c:	44c6      	add	lr, r8
 802110e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8021112:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021116:	4413      	add	r3, r2
 8021118:	b280      	uxth	r0, r0
 802111a:	f897 e002 	ldrb.w	lr, [r7, #2]
 802111e:	b2b2      	uxth	r2, r6
 8021120:	f897 9000 	ldrb.w	r9, [r7]
 8021124:	787f      	ldrb	r7, [r7, #1]
 8021126:	fb00 f602 	mul.w	r6, r0, r2
 802112a:	0100      	lsls	r0, r0, #4
 802112c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8021130:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 8021134:	1b80      	subs	r0, r0, r6
 8021136:	fa1f fc82 	uxth.w	ip, r2
 802113a:	b282      	uxth	r2, r0
 802113c:	78a0      	ldrb	r0, [r4, #2]
 802113e:	eba8 080c 	sub.w	r8, r8, ip
 8021142:	4350      	muls	r0, r2
 8021144:	fa1f f888 	uxth.w	r8, r8
 8021148:	fb08 0e0e 	mla	lr, r8, lr, r0
 802114c:	78a8      	ldrb	r0, [r5, #2]
 802114e:	fb0c e000 	mla	r0, ip, r0, lr
 8021152:	f893 e002 	ldrb.w	lr, [r3, #2]
 8021156:	fb06 0e0e 	mla	lr, r6, lr, r0
 802115a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 802115e:	f894 e000 	ldrb.w	lr, [r4]
 8021162:	fb02 fe0e 	mul.w	lr, r2, lr
 8021166:	fb08 e909 	mla	r9, r8, r9, lr
 802116a:	f895 e000 	ldrb.w	lr, [r5]
 802116e:	fb0c 990e 	mla	r9, ip, lr, r9
 8021172:	f893 e000 	ldrb.w	lr, [r3]
 8021176:	785b      	ldrb	r3, [r3, #1]
 8021178:	fb06 9e0e 	mla	lr, r6, lr, r9
 802117c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8021180:	ea4e 0e00 	orr.w	lr, lr, r0
 8021184:	7860      	ldrb	r0, [r4, #1]
 8021186:	4350      	muls	r0, r2
 8021188:	786a      	ldrb	r2, [r5, #1]
 802118a:	fb08 0007 	mla	r0, r8, r7, r0
 802118e:	fb0c 0202 	mla	r2, ip, r2, r0
 8021192:	fb06 2303 	mla	r3, r6, r3, r2
 8021196:	095b      	lsrs	r3, r3, #5
 8021198:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802119c:	ea4e 0303 	orr.w	r3, lr, r3
 80211a0:	800b      	strh	r3, [r1, #0]
 80211a2:	b003      	add	sp, #12
 80211a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211a8:	af01      	add	r7, sp, #4
 80211aa:	e78c      	b.n	80210c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 80211ac:	ac01      	add	r4, sp, #4
 80211ae:	4627      	mov	r7, r4
 80211b0:	e795      	b.n	80210de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80211b2:	ac01      	add	r4, sp, #4
 80211b4:	e793      	b.n	80210de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 80211b6:	ad01      	add	r5, sp, #4
 80211b8:	e7a1      	b.n	80210fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 80211ba:	ab01      	add	r3, sp, #4
 80211bc:	461d      	mov	r5, r3
 80211be:	e7ab      	b.n	8021118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 80211c0:	ab01      	add	r3, sp, #4
 80211c2:	e7a9      	b.n	8021118 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

080211c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80211c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211c8:	b08f      	sub	sp, #60	@ 0x3c
 80211ca:	920c      	str	r2, [sp, #48]	@ 0x30
 80211cc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 80211ce:	900d      	str	r0, [sp, #52]	@ 0x34
 80211d0:	910a      	str	r1, [sp, #40]	@ 0x28
 80211d2:	6850      	ldr	r0, [r2, #4]
 80211d4:	9306      	str	r3, [sp, #24]
 80211d6:	6812      	ldr	r2, [r2, #0]
 80211d8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 80211dc:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 80211e0:	fb00 1303 	mla	r3, r0, r3, r1
 80211e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80211e8:	9307      	str	r3, [sp, #28]
 80211ea:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80211ec:	681b      	ldr	r3, [r3, #0]
 80211ee:	9308      	str	r3, [sp, #32]
 80211f0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80211f2:	685c      	ldr	r4, [r3, #4]
 80211f4:	3404      	adds	r4, #4
 80211f6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80211f8:	2b00      	cmp	r3, #0
 80211fa:	dc03      	bgt.n	8021204 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80211fc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80211fe:	2b00      	cmp	r3, #0
 8021200:	f340 81d5 	ble.w	80215ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021204:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021206:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802120a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802120e:	1e48      	subs	r0, r1, #1
 8021210:	1e56      	subs	r6, r2, #1
 8021212:	9b06      	ldr	r3, [sp, #24]
 8021214:	2b00      	cmp	r3, #0
 8021216:	f340 80b6 	ble.w	8021386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802121a:	ea5f 472b 	movs.w	r7, fp, asr #16
 802121e:	ea4f 4325 	mov.w	r3, r5, asr #16
 8021222:	d406      	bmi.n	8021232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021224:	4287      	cmp	r7, r0
 8021226:	da04      	bge.n	8021232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8021228:	2b00      	cmp	r3, #0
 802122a:	db02      	blt.n	8021232 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802122c:	42b3      	cmp	r3, r6
 802122e:	f2c0 80ab 	blt.w	8021388 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8021232:	3701      	adds	r7, #1
 8021234:	f100 809c 	bmi.w	8021370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8021238:	42b9      	cmp	r1, r7
 802123a:	f2c0 8099 	blt.w	8021370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802123e:	3301      	adds	r3, #1
 8021240:	f100 8096 	bmi.w	8021370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8021244:	429a      	cmp	r2, r3
 8021246:	f2c0 8093 	blt.w	8021370 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 802124a:	9b06      	ldr	r3, [sp, #24]
 802124c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802124e:	9b07      	ldr	r3, [sp, #28]
 8021250:	9309      	str	r3, [sp, #36]	@ 0x24
 8021252:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021254:	2b00      	cmp	r3, #0
 8021256:	f340 80b4 	ble.w	80213c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802125a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 802125c:	142e      	asrs	r6, r5, #16
 802125e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8021260:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8021264:	68c7      	ldr	r7, [r0, #12]
 8021266:	ea5f 402b 	movs.w	r0, fp, asr #16
 802126a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 802126e:	6892      	ldr	r2, [r2, #8]
 8021270:	f100 80fb 	bmi.w	802146a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021274:	f102 3cff 	add.w	ip, r2, #4294967295
 8021278:	4560      	cmp	r0, ip
 802127a:	f280 80f6 	bge.w	802146a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802127e:	2e00      	cmp	r6, #0
 8021280:	f2c0 80f3 	blt.w	802146a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8021284:	f107 3cff 	add.w	ip, r7, #4294967295
 8021288:	4566      	cmp	r6, ip
 802128a:	f280 80ee 	bge.w	802146a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 802128e:	b212      	sxth	r2, r2
 8021290:	fb06 0002 	mla	r0, r6, r2, r0
 8021294:	9e08      	ldr	r6, [sp, #32]
 8021296:	1837      	adds	r7, r6, r0
 8021298:	5c30      	ldrb	r0, [r6, r0]
 802129a:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 802129e:	eb04 0c08 	add.w	ip, r4, r8
 80212a2:	2b00      	cmp	r3, #0
 80212a4:	f000 80d3 	beq.w	802144e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 80212a8:	787e      	ldrb	r6, [r7, #1]
 80212aa:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80212ae:	4426      	add	r6, r4
 80212b0:	2900      	cmp	r1, #0
 80212b2:	f000 80d4 	beq.w	802145e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80212b6:	18b8      	adds	r0, r7, r2
 80212b8:	5cba      	ldrb	r2, [r7, r2]
 80212ba:	7840      	ldrb	r0, [r0, #1]
 80212bc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80212c0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80212c4:	4422      	add	r2, r4
 80212c6:	4420      	add	r0, r4
 80212c8:	b29b      	uxth	r3, r3
 80212ca:	78b7      	ldrb	r7, [r6, #2]
 80212cc:	b289      	uxth	r1, r1
 80212ce:	f89c a002 	ldrb.w	sl, [ip, #2]
 80212d2:	f89c c001 	ldrb.w	ip, [ip, #1]
 80212d6:	fb03 f901 	mul.w	r9, r3, r1
 80212da:	011b      	lsls	r3, r3, #4
 80212dc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80212e0:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 80212e4:	eba3 0309 	sub.w	r3, r3, r9
 80212e8:	b289      	uxth	r1, r1
 80212ea:	b29b      	uxth	r3, r3
 80212ec:	ebae 0e01 	sub.w	lr, lr, r1
 80212f0:	435f      	muls	r7, r3
 80212f2:	fa1f fe8e 	uxth.w	lr, lr
 80212f6:	fb0e 770a 	mla	r7, lr, sl, r7
 80212fa:	f892 a002 	ldrb.w	sl, [r2, #2]
 80212fe:	fb01 770a 	mla	r7, r1, sl, r7
 8021302:	f890 a002 	ldrb.w	sl, [r0, #2]
 8021306:	fb09 7a0a 	mla	sl, r9, sl, r7
 802130a:	f814 7008 	ldrb.w	r7, [r4, r8]
 802130e:	f896 8000 	ldrb.w	r8, [r6]
 8021312:	7876      	ldrb	r6, [r6, #1]
 8021314:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 8021318:	fb03 f808 	mul.w	r8, r3, r8
 802131c:	4373      	muls	r3, r6
 802131e:	fb0e 8807 	mla	r8, lr, r7, r8
 8021322:	7817      	ldrb	r7, [r2, #0]
 8021324:	fb0e 330c 	mla	r3, lr, ip, r3
 8021328:	fb01 8807 	mla	r8, r1, r7, r8
 802132c:	7807      	ldrb	r7, [r0, #0]
 802132e:	fb09 8707 	mla	r7, r9, r7, r8
 8021332:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021336:	ea47 070a 	orr.w	r7, r7, sl
 802133a:	f892 a001 	ldrb.w	sl, [r2, #1]
 802133e:	fb01 310a 	mla	r1, r1, sl, r3
 8021342:	f890 a001 	ldrb.w	sl, [r0, #1]
 8021346:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021348:	fb09 1a0a 	mla	sl, r9, sl, r1
 802134c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021350:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8021354:	ea47 070a 	orr.w	r7, r7, sl
 8021358:	801f      	strh	r7, [r3, #0]
 802135a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802135c:	3302      	adds	r3, #2
 802135e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021360:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021362:	449b      	add	fp, r3
 8021364:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021366:	441d      	add	r5, r3
 8021368:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802136a:	3b01      	subs	r3, #1
 802136c:	930b      	str	r3, [sp, #44]	@ 0x2c
 802136e:	e770      	b.n	8021252 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021370:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021372:	449b      	add	fp, r3
 8021374:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021376:	441d      	add	r5, r3
 8021378:	9b06      	ldr	r3, [sp, #24]
 802137a:	3b01      	subs	r3, #1
 802137c:	9306      	str	r3, [sp, #24]
 802137e:	9b07      	ldr	r3, [sp, #28]
 8021380:	3302      	adds	r3, #2
 8021382:	9307      	str	r3, [sp, #28]
 8021384:	e745      	b.n	8021212 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8021386:	d023      	beq.n	80213d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8021388:	9b06      	ldr	r3, [sp, #24]
 802138a:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802138c:	3b01      	subs	r3, #1
 802138e:	fb00 b003 	mla	r0, r0, r3, fp
 8021392:	1400      	asrs	r0, r0, #16
 8021394:	f53f af59 	bmi.w	802124a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8021398:	3901      	subs	r1, #1
 802139a:	4288      	cmp	r0, r1
 802139c:	f6bf af55 	bge.w	802124a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80213a0:	991c      	ldr	r1, [sp, #112]	@ 0x70
 80213a2:	fb01 5303 	mla	r3, r1, r3, r5
 80213a6:	141b      	asrs	r3, r3, #16
 80213a8:	f53f af4f 	bmi.w	802124a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80213ac:	3a01      	subs	r2, #1
 80213ae:	4293      	cmp	r3, r2
 80213b0:	f6bf af4b 	bge.w	802124a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80213b4:	9b06      	ldr	r3, [sp, #24]
 80213b6:	9309      	str	r3, [sp, #36]	@ 0x24
 80213b8:	9b07      	ldr	r3, [sp, #28]
 80213ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 80213bc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80213be:	2b00      	cmp	r3, #0
 80213c0:	dc70      	bgt.n	80214a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80213c2:	9b06      	ldr	r3, [sp, #24]
 80213c4:	9a07      	ldr	r2, [sp, #28]
 80213c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80213ca:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80213ce:	9307      	str	r3, [sp, #28]
 80213d0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80213d2:	2b00      	cmp	r3, #0
 80213d4:	f340 80eb 	ble.w	80215ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80213d8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80213dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80213de:	ee30 0a04 	vadd.f32	s0, s0, s8
 80213e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80213e6:	eef0 6a62 	vmov.f32	s13, s5
 80213ea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80213ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80213f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213f6:	ee16 ba90 	vmov	fp, s13
 80213fa:	eef0 6a43 	vmov.f32	s13, s6
 80213fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021402:	ee16 5a90 	vmov	r5, s13
 8021406:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802140a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802140e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021412:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021416:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802141a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802141e:	ee12 2a90 	vmov	r2, s5
 8021422:	eef0 2a47 	vmov.f32	s5, s14
 8021426:	fb92 f3f3 	sdiv	r3, r2, r3
 802142a:	ee13 2a10 	vmov	r2, s6
 802142e:	931b      	str	r3, [sp, #108]	@ 0x6c
 8021430:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021432:	eeb0 3a67 	vmov.f32	s6, s15
 8021436:	fb92 f3f3 	sdiv	r3, r2, r3
 802143a:	931c      	str	r3, [sp, #112]	@ 0x70
 802143c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802143e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8021440:	3b01      	subs	r3, #1
 8021442:	930a      	str	r3, [sp, #40]	@ 0x28
 8021444:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8021446:	bf08      	it	eq
 8021448:	4613      	moveq	r3, r2
 802144a:	9306      	str	r3, [sp, #24]
 802144c:	e6d3      	b.n	80211f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 802144e:	b149      	cbz	r1, 8021464 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8021450:	5cba      	ldrb	r2, [r7, r2]
 8021452:	4660      	mov	r0, ip
 8021454:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8021458:	4422      	add	r2, r4
 802145a:	4666      	mov	r6, ip
 802145c:	e734      	b.n	80212c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 802145e:	4660      	mov	r0, ip
 8021460:	4662      	mov	r2, ip
 8021462:	e731      	b.n	80212c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 8021464:	4660      	mov	r0, ip
 8021466:	4662      	mov	r2, ip
 8021468:	e7f7      	b.n	802145a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 802146a:	f110 0c01 	adds.w	ip, r0, #1
 802146e:	f53f af74 	bmi.w	802135a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021472:	4562      	cmp	r2, ip
 8021474:	f6ff af71 	blt.w	802135a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021478:	f116 0c01 	adds.w	ip, r6, #1
 802147c:	f53f af6d 	bmi.w	802135a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021480:	4567      	cmp	r7, ip
 8021482:	f6ff af6a 	blt.w	802135a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021486:	b23f      	sxth	r7, r7
 8021488:	b212      	sxth	r2, r2
 802148a:	9701      	str	r7, [sp, #4]
 802148c:	9200      	str	r2, [sp, #0]
 802148e:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8021492:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8021496:	4623      	mov	r3, r4
 8021498:	980d      	ldr	r0, [sp, #52]	@ 0x34
 802149a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 802149e:	f7ff fde7 	bl	8021070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 80214a2:	e75a      	b.n	802135a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80214a4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80214a6:	ea4f 462b 	mov.w	r6, fp, asr #16
 80214aa:	1428      	asrs	r0, r5, #16
 80214ac:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80214b0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80214b4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80214b8:	fb02 6000 	mla	r0, r2, r0, r6
 80214bc:	9e08      	ldr	r6, [sp, #32]
 80214be:	f816 8000 	ldrb.w	r8, [r6, r0]
 80214c2:	1837      	adds	r7, r6, r0
 80214c4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80214c8:	eb04 0c08 	add.w	ip, r4, r8
 80214cc:	2b00      	cmp	r3, #0
 80214ce:	d060      	beq.n	8021592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 80214d0:	787e      	ldrb	r6, [r7, #1]
 80214d2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80214d6:	4426      	add	r6, r4
 80214d8:	2900      	cmp	r1, #0
 80214da:	d062      	beq.n	80215a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 80214dc:	18b8      	adds	r0, r7, r2
 80214de:	5cba      	ldrb	r2, [r7, r2]
 80214e0:	7840      	ldrb	r0, [r0, #1]
 80214e2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80214e6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80214ea:	4422      	add	r2, r4
 80214ec:	4420      	add	r0, r4
 80214ee:	b29b      	uxth	r3, r3
 80214f0:	78b7      	ldrb	r7, [r6, #2]
 80214f2:	b289      	uxth	r1, r1
 80214f4:	f89c a002 	ldrb.w	sl, [ip, #2]
 80214f8:	f89c c001 	ldrb.w	ip, [ip, #1]
 80214fc:	fb03 f901 	mul.w	r9, r3, r1
 8021500:	011b      	lsls	r3, r3, #4
 8021502:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8021506:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 802150a:	eba3 0309 	sub.w	r3, r3, r9
 802150e:	b289      	uxth	r1, r1
 8021510:	b29b      	uxth	r3, r3
 8021512:	ebae 0e01 	sub.w	lr, lr, r1
 8021516:	435f      	muls	r7, r3
 8021518:	fa1f fe8e 	uxth.w	lr, lr
 802151c:	fb0e 770a 	mla	r7, lr, sl, r7
 8021520:	f892 a002 	ldrb.w	sl, [r2, #2]
 8021524:	fb01 770a 	mla	r7, r1, sl, r7
 8021528:	f890 a002 	ldrb.w	sl, [r0, #2]
 802152c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8021530:	f814 7008 	ldrb.w	r7, [r4, r8]
 8021534:	f896 8000 	ldrb.w	r8, [r6]
 8021538:	7876      	ldrb	r6, [r6, #1]
 802153a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 802153e:	fb03 f808 	mul.w	r8, r3, r8
 8021542:	4373      	muls	r3, r6
 8021544:	7856      	ldrb	r6, [r2, #1]
 8021546:	fb0e 8807 	mla	r8, lr, r7, r8
 802154a:	7817      	ldrb	r7, [r2, #0]
 802154c:	fb0e 330c 	mla	r3, lr, ip, r3
 8021550:	fb01 8807 	mla	r8, r1, r7, r8
 8021554:	7807      	ldrb	r7, [r0, #0]
 8021556:	fb01 3306 	mla	r3, r1, r6, r3
 802155a:	fb09 8707 	mla	r7, r9, r7, r8
 802155e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021562:	ea47 070a 	orr.w	r7, r7, sl
 8021566:	f890 a001 	ldrb.w	sl, [r0, #1]
 802156a:	fb09 3a0a 	mla	sl, r9, sl, r3
 802156e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8021570:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8021574:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8021578:	ea47 070a 	orr.w	r7, r7, sl
 802157c:	f823 7b02 	strh.w	r7, [r3], #2
 8021580:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021582:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8021584:	449b      	add	fp, r3
 8021586:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021588:	441d      	add	r5, r3
 802158a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802158c:	3b01      	subs	r3, #1
 802158e:	9309      	str	r3, [sp, #36]	@ 0x24
 8021590:	e714      	b.n	80213bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 8021592:	b149      	cbz	r1, 80215a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8021594:	5cba      	ldrb	r2, [r7, r2]
 8021596:	4660      	mov	r0, ip
 8021598:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802159c:	4422      	add	r2, r4
 802159e:	4666      	mov	r6, ip
 80215a0:	e7a5      	b.n	80214ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80215a2:	4660      	mov	r0, ip
 80215a4:	4662      	mov	r2, ip
 80215a6:	e7a2      	b.n	80214ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 80215a8:	4660      	mov	r0, ip
 80215aa:	4662      	mov	r2, ip
 80215ac:	e7f7      	b.n	802159e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 80215ae:	b00f      	add	sp, #60	@ 0x3c
 80215b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080215b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80215b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80215b8:	b085      	sub	sp, #20
 80215ba:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 80215be:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 80215c2:	9102      	str	r1, [sp, #8]
 80215c4:	2c00      	cmp	r4, #0
 80215c6:	fb04 710c 	mla	r1, r4, ip, r7
 80215ca:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 80215ce:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 80215d2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 80215d6:	eb02 0e01 	add.w	lr, r2, r1
 80215da:	f2c0 8122 	blt.w	8021822 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80215de:	45a0      	cmp	r8, r4
 80215e0:	f340 811f 	ble.w	8021822 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80215e4:	2f00      	cmp	r7, #0
 80215e6:	f2c0 811a 	blt.w	802181e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80215ea:	45bc      	cmp	ip, r7
 80215ec:	f340 8117 	ble.w	802181e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80215f0:	5c52      	ldrb	r2, [r2, r1]
 80215f2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80215f6:	1c7a      	adds	r2, r7, #1
 80215f8:	f100 8116 	bmi.w	8021828 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80215fc:	4594      	cmp	ip, r2
 80215fe:	f340 8113 	ble.w	8021828 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8021602:	2e00      	cmp	r6, #0
 8021604:	f000 8112 	beq.w	802182c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 8021608:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802160c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8021610:	3401      	adds	r4, #1
 8021612:	f100 810f 	bmi.w	8021834 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8021616:	45a0      	cmp	r8, r4
 8021618:	f340 810c 	ble.w	8021834 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802161c:	2800      	cmp	r0, #0
 802161e:	f000 810c 	beq.w	802183a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8021622:	2f00      	cmp	r7, #0
 8021624:	f2c0 8104 	blt.w	8021830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8021628:	45bc      	cmp	ip, r7
 802162a:	f340 8101 	ble.w	8021830 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802162e:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8021632:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8021636:	3701      	adds	r7, #1
 8021638:	f100 8102 	bmi.w	8021840 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802163c:	45bc      	cmp	ip, r7
 802163e:	f340 80ff 	ble.w	8021840 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8021642:	2e00      	cmp	r6, #0
 8021644:	f000 80fe 	beq.w	8021844 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 8021648:	44f4      	add	ip, lr
 802164a:	f89c 2001 	ldrb.w	r2, [ip, #1]
 802164e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8021652:	b2b6      	uxth	r6, r6
 8021654:	b280      	uxth	r0, r0
 8021656:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802165a:	fb00 fe06 	mul.w	lr, r0, r6
 802165e:	0136      	lsls	r6, r6, #4
 8021660:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8021664:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8021668:	eba6 070e 	sub.w	r7, r6, lr
 802166c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8021670:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8021674:	b280      	uxth	r0, r0
 8021676:	b2bf      	uxth	r7, r7
 8021678:	1a1b      	subs	r3, r3, r0
 802167a:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802167e:	fb0a f607 	mul.w	r6, sl, r7
 8021682:	b29b      	uxth	r3, r3
 8021684:	fb0b 6603 	mla	r6, fp, r3, r6
 8021688:	fb00 6609 	mla	r6, r0, r9, r6
 802168c:	fb0e 6608 	mla	r6, lr, r8, r6
 8021690:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8021694:	9600      	str	r6, [sp, #0]
 8021696:	2e00      	cmp	r6, #0
 8021698:	f000 80be 	beq.w	8021818 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802169c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80216a0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80216a4:	9e02      	ldr	r6, [sp, #8]
 80216a6:	fb0b fc0c 	mul.w	ip, fp, ip
 80216aa:	fb0b f505 	mul.w	r5, fp, r5
 80216ae:	8836      	ldrh	r6, [r6, #0]
 80216b0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80216b4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80216b8:	9501      	str	r5, [sp, #4]
 80216ba:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80216be:	44dc      	add	ip, fp
 80216c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80216c4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80216c8:	9503      	str	r5, [sp, #12]
 80216ca:	9d01      	ldr	r5, [sp, #4]
 80216cc:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80216d0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80216d4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80216d8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80216dc:	fb0a fc0c 	mul.w	ip, sl, ip
 80216e0:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80216e4:	fb0a fa01 	mul.w	sl, sl, r1
 80216e8:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80216ec:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80216f0:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80216f4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80216f8:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80216fc:	4465      	add	r5, ip
 80216fe:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021702:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8021706:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802170a:	fb09 fc0c 	mul.w	ip, r9, ip
 802170e:	0a2d      	lsrs	r5, r5, #8
 8021710:	fb09 f904 	mul.w	r9, r9, r4
 8021714:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021718:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802171c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8021720:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8021724:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8021728:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802172c:	437d      	muls	r5, r7
 802172e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8021732:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8021736:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802173a:	4461      	add	r1, ip
 802173c:	fb08 f404 	mul.w	r4, r8, r4
 8021740:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021744:	fb08 f802 	mul.w	r8, r8, r2
 8021748:	0a09      	lsrs	r1, r1, #8
 802174a:	0a22      	lsrs	r2, r4, #8
 802174c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8021750:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8021754:	fb07 f70a 	mul.w	r7, r7, sl
 8021758:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802175c:	4414      	add	r4, r2
 802175e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8021762:	0a24      	lsrs	r4, r4, #8
 8021764:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8021768:	9a03      	ldr	r2, [sp, #12]
 802176a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802176e:	fb02 5503 	mla	r5, r2, r3, r5
 8021772:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8021776:	9a00      	ldr	r2, [sp, #0]
 8021778:	fb04 540e 	mla	r4, r4, lr, r5
 802177c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8021780:	1235      	asrs	r5, r6, #8
 8021782:	fb01 4100 	mla	r1, r1, r0, r4
 8021786:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802178a:	0a09      	lsrs	r1, r1, #8
 802178c:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8021790:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8021794:	fb03 7101 	mla	r1, r3, r1, r7
 8021798:	fb0e 1e08 	mla	lr, lr, r8, r1
 802179c:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80217a0:	fb00 e101 	mla	r1, r0, r1, lr
 80217a4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80217a8:	b287      	uxth	r7, r0
 80217aa:	0a09      	lsrs	r1, r1, #8
 80217ac:	437a      	muls	r2, r7
 80217ae:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80217b2:	1c53      	adds	r3, r2, #1
 80217b4:	4321      	orrs	r1, r4
 80217b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80217ba:	0c0a      	lsrs	r2, r1, #16
 80217bc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80217c0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80217c4:	b2c8      	uxtb	r0, r1
 80217c6:	fb12 f207 	smulbb	r2, r2, r7
 80217ca:	fb14 f407 	smulbb	r4, r4, r7
 80217ce:	b2db      	uxtb	r3, r3
 80217d0:	fb10 f007 	smulbb	r0, r0, r7
 80217d4:	fb05 2503 	mla	r5, r5, r3, r2
 80217d8:	10f2      	asrs	r2, r6, #3
 80217da:	00f6      	lsls	r6, r6, #3
 80217dc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80217e0:	b2ad      	uxth	r5, r5
 80217e2:	b2f6      	uxtb	r6, r6
 80217e4:	fb02 4203 	mla	r2, r2, r3, r4
 80217e8:	fb06 0303 	mla	r3, r6, r3, r0
 80217ec:	b294      	uxth	r4, r2
 80217ee:	b299      	uxth	r1, r3
 80217f0:	1c6b      	adds	r3, r5, #1
 80217f2:	1c62      	adds	r2, r4, #1
 80217f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80217f8:	1c4b      	adds	r3, r1, #1
 80217fa:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80217fe:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021802:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021806:	0952      	lsrs	r2, r2, #5
 8021808:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802180c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021810:	432b      	orrs	r3, r5
 8021812:	4313      	orrs	r3, r2
 8021814:	9a02      	ldr	r2, [sp, #8]
 8021816:	8013      	strh	r3, [r2, #0]
 8021818:	b005      	add	sp, #20
 802181a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802181e:	2500      	movs	r5, #0
 8021820:	e6e9      	b.n	80215f6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8021822:	2100      	movs	r1, #0
 8021824:	460d      	mov	r5, r1
 8021826:	e6f3      	b.n	8021610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021828:	2100      	movs	r1, #0
 802182a:	e6f1      	b.n	8021610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802182c:	4631      	mov	r1, r6
 802182e:	e6ef      	b.n	8021610 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8021830:	2400      	movs	r4, #0
 8021832:	e700      	b.n	8021636 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8021834:	2200      	movs	r2, #0
 8021836:	4614      	mov	r4, r2
 8021838:	e70b      	b.n	8021652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802183a:	4602      	mov	r2, r0
 802183c:	4604      	mov	r4, r0
 802183e:	e708      	b.n	8021652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021840:	2200      	movs	r2, #0
 8021842:	e706      	b.n	8021652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8021844:	4632      	mov	r2, r6
 8021846:	e704      	b.n	8021652 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

08021848 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802184c:	b09f      	sub	sp, #124	@ 0x7c
 802184e:	921b      	str	r2, [sp, #108]	@ 0x6c
 8021850:	9309      	str	r3, [sp, #36]	@ 0x24
 8021852:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8021854:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 8021858:	901d      	str	r0, [sp, #116]	@ 0x74
 802185a:	931c      	str	r3, [sp, #112]	@ 0x70
 802185c:	6850      	ldr	r0, [r2, #4]
 802185e:	9119      	str	r1, [sp, #100]	@ 0x64
 8021860:	6812      	ldr	r2, [r2, #0]
 8021862:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8021864:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 8021868:	fb00 1303 	mla	r3, r0, r3, r1
 802186c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021870:	930c      	str	r3, [sp, #48]	@ 0x30
 8021872:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8021874:	681b      	ldr	r3, [r3, #0]
 8021876:	9312      	str	r3, [sp, #72]	@ 0x48
 8021878:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802187a:	685e      	ldr	r6, [r3, #4]
 802187c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 8021880:	3604      	adds	r6, #4
 8021882:	930d      	str	r3, [sp, #52]	@ 0x34
 8021884:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8021886:	2b00      	cmp	r3, #0
 8021888:	dc03      	bgt.n	8021892 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802188a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 802188c:	2b00      	cmp	r3, #0
 802188e:	f340 8387 	ble.w	8021fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8021892:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8021894:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021898:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802189c:	1e48      	subs	r0, r1, #1
 802189e:	1e57      	subs	r7, r2, #1
 80218a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80218a2:	2b00      	cmp	r3, #0
 80218a4:	f340 8194 	ble.w	8021bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 80218a8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 80218aa:	142b      	asrs	r3, r5, #16
 80218ac:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80218b0:	d406      	bmi.n	80218c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80218b2:	4584      	cmp	ip, r0
 80218b4:	da04      	bge.n	80218c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80218b6:	2b00      	cmp	r3, #0
 80218b8:	db02      	blt.n	80218c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80218ba:	42bb      	cmp	r3, r7
 80218bc:	f2c0 8189 	blt.w	8021bd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80218c0:	f11c 0c01 	adds.w	ip, ip, #1
 80218c4:	f100 8177 	bmi.w	8021bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80218c8:	4561      	cmp	r1, ip
 80218ca:	f2c0 8174 	blt.w	8021bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80218ce:	3301      	adds	r3, #1
 80218d0:	f100 8171 	bmi.w	8021bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80218d4:	429a      	cmp	r2, r3
 80218d6:	f2c0 816e 	blt.w	8021bb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 80218da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80218dc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 80218de:	931a      	str	r3, [sp, #104]	@ 0x68
 80218e0:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 80218e2:	2b00      	cmp	r3, #0
 80218e4:	f340 8193 	ble.w	8021c0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 80218e8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80218ea:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80218ee:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80218f2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80218f6:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80218f8:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80218fc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80218fe:	141b      	asrs	r3, r3, #16
 8021900:	f100 81d6 	bmi.w	8021cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8021904:	f100 38ff 	add.w	r8, r0, #4294967295
 8021908:	4543      	cmp	r3, r8
 802190a:	f280 81d1 	bge.w	8021cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 802190e:	f1bc 0f00 	cmp.w	ip, #0
 8021912:	f2c0 81cd 	blt.w	8021cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8021916:	f10e 38ff 	add.w	r8, lr, #4294967295
 802191a:	45c4      	cmp	ip, r8
 802191c:	f280 81c8 	bge.w	8021cb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 8021920:	b200      	sxth	r0, r0
 8021922:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021924:	fb0c 3300 	mla	r3, ip, r0, r3
 8021928:	eb04 0803 	add.w	r8, r4, r3
 802192c:	5ce3      	ldrb	r3, [r4, r3]
 802192e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021932:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8021936:	2a00      	cmp	r2, #0
 8021938:	f000 81af 	beq.w	8021c9a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802193c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8021940:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8021944:	940e      	str	r4, [sp, #56]	@ 0x38
 8021946:	0e24      	lsrs	r4, r4, #24
 8021948:	9415      	str	r4, [sp, #84]	@ 0x54
 802194a:	b179      	cbz	r1, 802196c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 802194c:	eb08 0c00 	add.w	ip, r8, r0
 8021950:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021954:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021958:	900a      	str	r0, [sp, #40]	@ 0x28
 802195a:	0e00      	lsrs	r0, r0, #24
 802195c:	9013      	str	r0, [sp, #76]	@ 0x4c
 802195e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8021962:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021966:	900f      	str	r0, [sp, #60]	@ 0x3c
 8021968:	0e00      	lsrs	r0, r0, #24
 802196a:	9016      	str	r0, [sp, #88]	@ 0x58
 802196c:	b292      	uxth	r2, r2
 802196e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8021970:	b289      	uxth	r1, r1
 8021972:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021974:	fb02 f901 	mul.w	r9, r2, r1
 8021978:	0112      	lsls	r2, r2, #4
 802197a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802197e:	eba2 0809 	sub.w	r8, r2, r9
 8021982:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8021986:	b289      	uxth	r1, r1
 8021988:	fa1f f888 	uxth.w	r8, r8
 802198c:	1a52      	subs	r2, r2, r1
 802198e:	fb08 f000 	mul.w	r0, r8, r0
 8021992:	b292      	uxth	r2, r2
 8021994:	fb02 000e 	mla	r0, r2, lr, r0
 8021998:	fb01 0004 	mla	r0, r1, r4, r0
 802199c:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 802199e:	fb09 0004 	mla	r0, r9, r4, r0
 80219a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80219a6:	2800      	cmp	r0, #0
 80219a8:	f000 80fa 	beq.w	8021ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80219ac:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80219b0:	d01b      	beq.n	80219ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80219b2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80219b6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80219ba:	fb0e fa0a 	mul.w	sl, lr, sl
 80219be:	fb0e fe03 	mul.w	lr, lr, r3
 80219c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80219c6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80219ca:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80219ce:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80219d2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80219d6:	4453      	add	r3, sl
 80219d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80219dc:	0a1b      	lsrs	r3, r3, #8
 80219de:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80219e2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80219e6:	ea43 030c 	orr.w	r3, r3, ip
 80219ea:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80219ec:	2cff      	cmp	r4, #255	@ 0xff
 80219ee:	d021      	beq.n	8021a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 80219f0:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80219f2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80219f6:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80219f8:	fb04 fb0b 	mul.w	fp, r4, fp
 80219fc:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80219fe:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021a02:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8021a04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021a08:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021a0c:	fb04 fa0a 	mul.w	sl, r4, sl
 8021a10:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021a14:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021a18:	44de      	add	lr, fp
 8021a1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021a1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021a22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a26:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021a2a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021a2e:	ea4e 040a 	orr.w	r4, lr, sl
 8021a32:	940e      	str	r4, [sp, #56]	@ 0x38
 8021a34:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021a36:	2cff      	cmp	r4, #255	@ 0xff
 8021a38:	d021      	beq.n	8021a7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8021a3a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021a3c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8021a40:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021a42:	fb04 fb0b 	mul.w	fp, r4, fp
 8021a46:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021a48:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021a4c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8021a4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021a52:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021a56:	fb04 fa0a 	mul.w	sl, r4, sl
 8021a5a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021a5e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021a62:	44de      	add	lr, fp
 8021a64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021a68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021a6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021a70:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021a74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021a78:	ea4e 040a 	orr.w	r4, lr, sl
 8021a7c:	940a      	str	r4, [sp, #40]	@ 0x28
 8021a7e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8021a80:	2cff      	cmp	r4, #255	@ 0xff
 8021a82:	d021      	beq.n	8021ac8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 8021a84:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021a86:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8021a8a:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8021a8c:	fb04 fb0b 	mul.w	fp, r4, fp
 8021a90:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021a92:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021a96:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8021a98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8021a9c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8021aa0:	fb04 fa0a 	mul.w	sl, r4, sl
 8021aa4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021aa8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8021aac:	44de      	add	lr, fp
 8021aae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8021ab2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ab6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021aba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8021abe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021ac2:	ea4e 040a 	orr.w	r4, lr, sl
 8021ac6:	940f      	str	r4, [sp, #60]	@ 0x3c
 8021ac8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021aca:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8021ace:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021ad2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021ad6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021ad8:	fb08 fc0c 	mul.w	ip, r8, ip
 8021adc:	fb02 cc0e 	mla	ip, r2, lr, ip
 8021ae0:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8021ae4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021ae6:	fb01 cc0e 	mla	ip, r1, lr, ip
 8021aea:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8021aee:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021af0:	fb09 cc0e 	mla	ip, r9, lr, ip
 8021af4:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8021af8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021afa:	fb08 f80e 	mul.w	r8, r8, lr
 8021afe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b02:	fb02 8303 	mla	r3, r2, r3, r8
 8021b06:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8021b08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021b0c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8021b10:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8021b12:	fb01 330a 	mla	r3, r1, sl, r3
 8021b16:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 8021b1a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8021b1c:	fb09 3901 	mla	r9, r9, r1, r3
 8021b20:	883b      	ldrh	r3, [r7, #0]
 8021b22:	4342      	muls	r2, r0
 8021b24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021b28:	1c50      	adds	r0, r2, #1
 8021b2a:	1219      	asrs	r1, r3, #8
 8021b2c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8021b30:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8021b34:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8021b38:	ea4c 0c09 	orr.w	ip, ip, r9
 8021b3c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8021b40:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8021b44:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8021b48:	b2c0      	uxtb	r0, r0
 8021b4a:	fb12 f204 	smulbb	r2, r2, r4
 8021b4e:	fa5f fc8c 	uxtb.w	ip, ip
 8021b52:	fb1e fe04 	smulbb	lr, lr, r4
 8021b56:	fb01 2100 	mla	r1, r1, r0, r2
 8021b5a:	10da      	asrs	r2, r3, #3
 8021b5c:	fb1c fc04 	smulbb	ip, ip, r4
 8021b60:	00db      	lsls	r3, r3, #3
 8021b62:	b289      	uxth	r1, r1
 8021b64:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8021b68:	b2db      	uxtb	r3, r3
 8021b6a:	fb02 e200 	mla	r2, r2, r0, lr
 8021b6e:	fb03 c300 	mla	r3, r3, r0, ip
 8021b72:	b292      	uxth	r2, r2
 8021b74:	fa1f fc83 	uxth.w	ip, r3
 8021b78:	1c4b      	adds	r3, r1, #1
 8021b7a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8021b7e:	f10c 0301 	add.w	r3, ip, #1
 8021b82:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8021b86:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8021b8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021b8e:	430b      	orrs	r3, r1
 8021b90:	1c51      	adds	r1, r2, #1
 8021b92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8021b96:	0952      	lsrs	r2, r2, #5
 8021b98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021b9c:	4313      	orrs	r3, r2
 8021b9e:	803b      	strh	r3, [r7, #0]
 8021ba0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8021ba2:	3702      	adds	r7, #2
 8021ba4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8021ba6:	441a      	add	r2, r3
 8021ba8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021baa:	441d      	add	r5, r3
 8021bac:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8021bae:	9229      	str	r2, [sp, #164]	@ 0xa4
 8021bb0:	3b01      	subs	r3, #1
 8021bb2:	931a      	str	r3, [sp, #104]	@ 0x68
 8021bb4:	e694      	b.n	80218e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8021bb6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8021bb8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8021bba:	441c      	add	r4, r3
 8021bbc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021bbe:	441d      	add	r5, r3
 8021bc0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021bc2:	9429      	str	r4, [sp, #164]	@ 0xa4
 8021bc4:	3b01      	subs	r3, #1
 8021bc6:	9309      	str	r3, [sp, #36]	@ 0x24
 8021bc8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021bca:	3302      	adds	r3, #2
 8021bcc:	930c      	str	r3, [sp, #48]	@ 0x30
 8021bce:	e667      	b.n	80218a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8021bd0:	d024      	beq.n	8021c1c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8021bd2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021bd4:	982b      	ldr	r0, [sp, #172]	@ 0xac
 8021bd6:	3b01      	subs	r3, #1
 8021bd8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8021bda:	fb00 4003 	mla	r0, r0, r3, r4
 8021bde:	1400      	asrs	r0, r0, #16
 8021be0:	f53f ae7b 	bmi.w	80218da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021be4:	3901      	subs	r1, #1
 8021be6:	4288      	cmp	r0, r1
 8021be8:	f6bf ae77 	bge.w	80218da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021bec:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8021bee:	fb01 5303 	mla	r3, r1, r3, r5
 8021bf2:	141b      	asrs	r3, r3, #16
 8021bf4:	f53f ae71 	bmi.w	80218da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021bf8:	3a01      	subs	r2, #1
 8021bfa:	4293      	cmp	r3, r2
 8021bfc:	f6bf ae6d 	bge.w	80218da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8021c00:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 8021c04:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8021c08:	f1bb 0f00 	cmp.w	fp, #0
 8021c0c:	dc70      	bgt.n	8021cf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 8021c0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021c10:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021c14:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8021c16:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021c1a:	930c      	str	r3, [sp, #48]	@ 0x30
 8021c1c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8021c1e:	2b00      	cmp	r3, #0
 8021c20:	f340 81be 	ble.w	8021fa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 8021c24:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021c28:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021c2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021c2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021c32:	eef0 6a62 	vmov.f32	s13, s5
 8021c36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021c3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021c3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c42:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 8021c46:	eef0 6a43 	vmov.f32	s13, s6
 8021c4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021c4e:	ee16 5a90 	vmov	r5, s13
 8021c52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021c56:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021c5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021c5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021c62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021c66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021c6a:	ee12 2a90 	vmov	r2, s5
 8021c6e:	eef0 2a47 	vmov.f32	s5, s14
 8021c72:	fb92 f3f3 	sdiv	r3, r2, r3
 8021c76:	ee13 2a10 	vmov	r2, s6
 8021c7a:	932b      	str	r3, [sp, #172]	@ 0xac
 8021c7c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021c7e:	eeb0 3a67 	vmov.f32	s6, s15
 8021c82:	fb92 f3f3 	sdiv	r3, r2, r3
 8021c86:	932c      	str	r3, [sp, #176]	@ 0xb0
 8021c88:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8021c8a:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8021c8c:	3b01      	subs	r3, #1
 8021c8e:	9319      	str	r3, [sp, #100]	@ 0x64
 8021c90:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021c92:	bf08      	it	eq
 8021c94:	4613      	moveq	r3, r2
 8021c96:	9309      	str	r3, [sp, #36]	@ 0x24
 8021c98:	e5f4      	b.n	8021884 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021c9a:	2900      	cmp	r1, #0
 8021c9c:	f43f ae66 	beq.w	802196c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021ca0:	f818 0000 	ldrb.w	r0, [r8, r0]
 8021ca4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8021ca8:	900a      	str	r0, [sp, #40]	@ 0x28
 8021caa:	0e00      	lsrs	r0, r0, #24
 8021cac:	9013      	str	r0, [sp, #76]	@ 0x4c
 8021cae:	e65d      	b.n	802196c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 8021cb0:	f113 0801 	adds.w	r8, r3, #1
 8021cb4:	f53f af74 	bmi.w	8021ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021cb8:	4540      	cmp	r0, r8
 8021cba:	f6ff af71 	blt.w	8021ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021cbe:	f11c 0801 	adds.w	r8, ip, #1
 8021cc2:	f53f af6d 	bmi.w	8021ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021cc6:	45c6      	cmp	lr, r8
 8021cc8:	f6ff af6a 	blt.w	8021ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021ccc:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8021cce:	b200      	sxth	r0, r0
 8021cd0:	9302      	str	r3, [sp, #8]
 8021cd2:	fa0f f38e 	sxth.w	r3, lr
 8021cd6:	9000      	str	r0, [sp, #0]
 8021cd8:	9301      	str	r3, [sp, #4]
 8021cda:	4633      	mov	r3, r6
 8021cdc:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8021cde:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8021ce2:	e9cd c203 	strd	ip, r2, [sp, #12]
 8021ce6:	4639      	mov	r1, r7
 8021ce8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8021cea:	f7ff fc63 	bl	80215b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8021cee:	e757      	b.n	8021ba0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8021cf0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8021cf2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8021cf6:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8021cf8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021cfc:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8021cfe:	1427      	asrs	r7, r4, #16
 8021d00:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021d02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021d06:	142b      	asrs	r3, r5, #16
 8021d08:	fb01 7303 	mla	r3, r1, r3, r7
 8021d0c:	18e7      	adds	r7, r4, r3
 8021d0e:	5ce3      	ldrb	r3, [r4, r3]
 8021d10:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8021d14:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8021d18:	2a00      	cmp	r2, #0
 8021d1a:	f000 8137 	beq.w	8021f8c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 8021d1e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8021d22:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8021d26:	9410      	str	r4, [sp, #64]	@ 0x40
 8021d28:	0e24      	lsrs	r4, r4, #24
 8021d2a:	9417      	str	r4, [sp, #92]	@ 0x5c
 8021d2c:	b170      	cbz	r0, 8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8021d2e:	eb07 0e01 	add.w	lr, r7, r1
 8021d32:	5c79      	ldrb	r1, [r7, r1]
 8021d34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021d38:	910b      	str	r1, [sp, #44]	@ 0x2c
 8021d3a:	0e09      	lsrs	r1, r1, #24
 8021d3c:	9114      	str	r1, [sp, #80]	@ 0x50
 8021d3e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8021d42:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021d46:	9111      	str	r1, [sp, #68]	@ 0x44
 8021d48:	0e09      	lsrs	r1, r1, #24
 8021d4a:	9118      	str	r1, [sp, #96]	@ 0x60
 8021d4c:	b292      	uxth	r2, r2
 8021d4e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8021d50:	b280      	uxth	r0, r0
 8021d52:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021d54:	fb02 f800 	mul.w	r8, r2, r0
 8021d58:	0112      	lsls	r2, r2, #4
 8021d5a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021d5e:	eba2 0e08 	sub.w	lr, r2, r8
 8021d62:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8021d66:	b280      	uxth	r0, r0
 8021d68:	fa1f fe8e 	uxth.w	lr, lr
 8021d6c:	1a12      	subs	r2, r2, r0
 8021d6e:	fb0e f101 	mul.w	r1, lr, r1
 8021d72:	b292      	uxth	r2, r2
 8021d74:	fb02 110c 	mla	r1, r2, ip, r1
 8021d78:	fb00 1104 	mla	r1, r0, r4, r1
 8021d7c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8021d7e:	fb08 1104 	mla	r1, r8, r4, r1
 8021d82:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8021d86:	2900      	cmp	r1, #0
 8021d88:	f000 80f5 	beq.w	8021f76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 8021d8c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8021d90:	d019      	beq.n	8021dc6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 8021d92:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8021d96:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021d9a:	fb0c fa0a 	mul.w	sl, ip, sl
 8021d9e:	fb0c fc03 	mul.w	ip, ip, r3
 8021da2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021da6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8021daa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8021dae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021db2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021db6:	4453      	add	r3, sl
 8021db8:	0a3f      	lsrs	r7, r7, #8
 8021dba:	0a1b      	lsrs	r3, r3, #8
 8021dbc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021dc0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021dc4:	433b      	orrs	r3, r7
 8021dc6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8021dc8:	2cff      	cmp	r4, #255	@ 0xff
 8021dca:	d020      	beq.n	8021e0e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 8021dcc:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021dce:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021dd2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8021dd4:	4367      	muls	r7, r4
 8021dd6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021dd8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021ddc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021de0:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8021de2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021de6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021dea:	fb04 fa0a 	mul.w	sl, r4, sl
 8021dee:	44bc      	add	ip, r7
 8021df0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021df4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021df8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021dfc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021e00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e04:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021e08:	ea4c 040a 	orr.w	r4, ip, sl
 8021e0c:	9410      	str	r4, [sp, #64]	@ 0x40
 8021e0e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021e10:	2cff      	cmp	r4, #255	@ 0xff
 8021e12:	d020      	beq.n	8021e56 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8021e14:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021e16:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021e1a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021e1c:	4367      	muls	r7, r4
 8021e1e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021e20:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021e24:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021e28:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021e2a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021e2e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021e32:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e36:	44bc      	add	ip, r7
 8021e38:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021e3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e40:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021e44:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021e48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021e50:	ea4c 040a 	orr.w	r4, ip, sl
 8021e54:	940b      	str	r4, [sp, #44]	@ 0x2c
 8021e56:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8021e58:	2cff      	cmp	r4, #255	@ 0xff
 8021e5a:	d020      	beq.n	8021e9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 8021e5c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021e5e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021e62:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8021e64:	4367      	muls	r7, r4
 8021e66:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021e68:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021e6c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021e70:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8021e72:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021e76:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021e7a:	fb04 fa0a 	mul.w	sl, r4, sl
 8021e7e:	44bc      	add	ip, r7
 8021e80:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021e84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021e8c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021e90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021e94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021e98:	ea4c 040a 	orr.w	r4, ip, sl
 8021e9c:	9411      	str	r4, [sp, #68]	@ 0x44
 8021e9e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021ea0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8021ea4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021ea8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021eac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021eae:	fb0e f707 	mul.w	r7, lr, r7
 8021eb2:	fb02 770c 	mla	r7, r2, ip, r7
 8021eb6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021eba:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021ebc:	fb00 770c 	mla	r7, r0, ip, r7
 8021ec0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021ec4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021ec6:	fb08 770c 	mla	r7, r8, ip, r7
 8021eca:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8021ece:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021ed0:	fb0e fe0c 	mul.w	lr, lr, ip
 8021ed4:	0a3f      	lsrs	r7, r7, #8
 8021ed6:	fb02 e303 	mla	r3, r2, r3, lr
 8021eda:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8021edc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021ee0:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8021ee4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8021ee6:	fb00 330a 	mla	r3, r0, sl, r3
 8021eea:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8021eee:	f8b9 0000 	ldrh.w	r0, [r9]
 8021ef2:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021ef6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8021ef8:	1202      	asrs	r2, r0, #8
 8021efa:	434b      	muls	r3, r1
 8021efc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021f00:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8021f04:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8021f08:	1c59      	adds	r1, r3, #1
 8021f0a:	ea47 070c 	orr.w	r7, r7, ip
 8021f0e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021f12:	0c3b      	lsrs	r3, r7, #16
 8021f14:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8021f18:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8021f1c:	b2ff      	uxtb	r7, r7
 8021f1e:	fb13 f304 	smulbb	r3, r3, r4
 8021f22:	b2c9      	uxtb	r1, r1
 8021f24:	fb1c fc04 	smulbb	ip, ip, r4
 8021f28:	fb02 3201 	mla	r2, r2, r1, r3
 8021f2c:	10c3      	asrs	r3, r0, #3
 8021f2e:	fb17 f704 	smulbb	r7, r7, r4
 8021f32:	00c0      	lsls	r0, r0, #3
 8021f34:	b292      	uxth	r2, r2
 8021f36:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021f3a:	b2c0      	uxtb	r0, r0
 8021f3c:	fb03 c301 	mla	r3, r3, r1, ip
 8021f40:	f102 0c01 	add.w	ip, r2, #1
 8021f44:	fb00 7001 	mla	r0, r0, r1, r7
 8021f48:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8021f4c:	b280      	uxth	r0, r0
 8021f4e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8021f52:	b29b      	uxth	r3, r3
 8021f54:	1c42      	adds	r2, r0, #1
 8021f56:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8021f5a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8021f5e:	ea42 020c 	orr.w	r2, r2, ip
 8021f62:	f103 0c01 	add.w	ip, r3, #1
 8021f66:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8021f6a:	095b      	lsrs	r3, r3, #5
 8021f6c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021f70:	431a      	orrs	r2, r3
 8021f72:	f8a9 2000 	strh.w	r2, [r9]
 8021f76:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8021f78:	f109 0902 	add.w	r9, r9, #2
 8021f7c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8021f7e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021f82:	441a      	add	r2, r3
 8021f84:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8021f86:	9229      	str	r2, [sp, #164]	@ 0xa4
 8021f88:	441d      	add	r5, r3
 8021f8a:	e63d      	b.n	8021c08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8021f8c:	2800      	cmp	r0, #0
 8021f8e:	f43f aedd 	beq.w	8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8021f92:	5c79      	ldrb	r1, [r7, r1]
 8021f94:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021f98:	910b      	str	r1, [sp, #44]	@ 0x2c
 8021f9a:	0e09      	lsrs	r1, r1, #24
 8021f9c:	9114      	str	r1, [sp, #80]	@ 0x50
 8021f9e:	e6d5      	b.n	8021d4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 8021fa0:	b01f      	add	sp, #124	@ 0x7c
 8021fa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021fa6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8021fa6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021faa:	b089      	sub	sp, #36	@ 0x24
 8021fac:	9101      	str	r1, [sp, #4]
 8021fae:	9801      	ldr	r0, [sp, #4]
 8021fb0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 8021fb4:	8800      	ldrh	r0, [r0, #0]
 8021fb6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8021fba:	1206      	asrs	r6, r0, #8
 8021fbc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8021fc0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8021fc4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8021fc8:	9602      	str	r6, [sp, #8]
 8021fca:	10c6      	asrs	r6, r0, #3
 8021fcc:	00c0      	lsls	r0, r0, #3
 8021fce:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8021fd2:	b2c0      	uxtb	r0, r0
 8021fd4:	9603      	str	r6, [sp, #12]
 8021fd6:	9004      	str	r0, [sp, #16]
 8021fd8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8021fdc:	fb07 100c 	mla	r0, r7, ip, r1
 8021fe0:	2f00      	cmp	r7, #0
 8021fe2:	eb02 0e00 	add.w	lr, r2, r0
 8021fe6:	f2c0 810a 	blt.w	80221fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021fea:	45b8      	cmp	r8, r7
 8021fec:	f340 8107 	ble.w	80221fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8021ff0:	2900      	cmp	r1, #0
 8021ff2:	f2c0 8102 	blt.w	80221fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021ff6:	458c      	cmp	ip, r1
 8021ff8:	f340 80ff 	ble.w	80221fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8021ffc:	5c12      	ldrb	r2, [r2, r0]
 8021ffe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8022002:	1c4a      	adds	r2, r1, #1
 8022004:	f100 80fe 	bmi.w	8022204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8022008:	4594      	cmp	ip, r2
 802200a:	f340 80fb 	ble.w	8022204 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802200e:	2d00      	cmp	r5, #0
 8022010:	f000 80fa 	beq.w	8022208 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8022014:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8022018:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 802201c:	3701      	adds	r7, #1
 802201e:	f100 80f7 	bmi.w	8022210 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022022:	45b8      	cmp	r8, r7
 8022024:	f340 80f4 	ble.w	8022210 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8022028:	2c00      	cmp	r4, #0
 802202a:	f000 80f4 	beq.w	8022216 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802202e:	2900      	cmp	r1, #0
 8022030:	eb0e 020c 	add.w	r2, lr, ip
 8022034:	f2c0 80ea 	blt.w	802220c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8022038:	458c      	cmp	ip, r1
 802203a:	f340 80e7 	ble.w	802220c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802203e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8022042:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8022046:	3101      	adds	r1, #1
 8022048:	f100 80e8 	bmi.w	802221c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802204c:	458c      	cmp	ip, r1
 802204e:	f340 80e5 	ble.w	802221c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8022052:	2d00      	cmp	r5, #0
 8022054:	f000 80e4 	beq.w	8022220 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8022058:	7852      	ldrb	r2, [r2, #1]
 802205a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802205e:	0e0b      	lsrs	r3, r1, #24
 8022060:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8022064:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8022068:	9300      	str	r3, [sp, #0]
 802206a:	b2a4      	uxth	r4, r4
 802206c:	b2ab      	uxth	r3, r5
 802206e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 8022072:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8022076:	fb03 f904 	mul.w	r9, r3, r4
 802207a:	011b      	lsls	r3, r3, #4
 802207c:	fb0a f505 	mul.w	r5, sl, r5
 8022080:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8022084:	eba3 0e09 	sub.w	lr, r3, r9
 8022088:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 802208c:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 8022090:	0a28      	lsrs	r0, r5, #8
 8022092:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8022096:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802209a:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802209e:	fb0a f303 	mul.w	r3, sl, r3
 80220a2:	fb08 f707 	mul.w	r7, r8, r7
 80220a6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80220aa:	4405      	add	r5, r0
 80220ac:	fb08 fc0c 	mul.w	ip, r8, ip
 80220b0:	b2a4      	uxth	r4, r4
 80220b2:	0a2d      	lsrs	r5, r5, #8
 80220b4:	fa1f fe8e 	uxth.w	lr, lr
 80220b8:	1b12      	subs	r2, r2, r4
 80220ba:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80220be:	b292      	uxth	r2, r2
 80220c0:	9005      	str	r0, [sp, #20]
 80220c2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 80220c6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80220ca:	ea4f 201c 	mov.w	r0, ip, lsr #8
 80220ce:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80220d2:	0a1b      	lsrs	r3, r3, #8
 80220d4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80220d8:	9306      	str	r3, [sp, #24]
 80220da:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 80220de:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80220e2:	4460      	add	r0, ip
 80220e4:	fb0b f303 	mul.w	r3, fp, r3
 80220e8:	fb0b f606 	mul.w	r6, fp, r6
 80220ec:	0a00      	lsrs	r0, r0, #8
 80220ee:	0a1d      	lsrs	r5, r3, #8
 80220f0:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 80220f4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80220f8:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80220fc:	441d      	add	r5, r3
 80220fe:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8022102:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8022106:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 802210a:	0a2d      	lsrs	r5, r5, #8
 802210c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8022110:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8022114:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022118:	0a36      	lsrs	r6, r6, #8
 802211a:	0a1b      	lsrs	r3, r3, #8
 802211c:	fb05 f50e 	mul.w	r5, r5, lr
 8022120:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8022124:	9307      	str	r3, [sp, #28]
 8022126:	0e0b      	lsrs	r3, r1, #24
 8022128:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802212c:	fb0e f606 	mul.w	r6, lr, r6
 8022130:	435f      	muls	r7, r3
 8022132:	4359      	muls	r1, r3
 8022134:	9b05      	ldr	r3, [sp, #20]
 8022136:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802213a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802213e:	fb03 5502 	mla	r5, r3, r2, r5
 8022142:	9b06      	ldr	r3, [sp, #24]
 8022144:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022148:	fb0e fe0b 	mul.w	lr, lr, fp
 802214c:	44bc      	add	ip, r7
 802214e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8022152:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022156:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802215a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802215e:	0a09      	lsrs	r1, r1, #8
 8022160:	fb0c 5509 	mla	r5, ip, r9, r5
 8022164:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022168:	fb00 5504 	mla	r5, r0, r4, r5
 802216c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 8022170:	9b07      	ldr	r3, [sp, #28]
 8022172:	fb02 6000 	mla	r0, r2, r0, r6
 8022176:	0a2d      	lsrs	r5, r5, #8
 8022178:	fb02 e20a 	mla	r2, r2, sl, lr
 802217c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022180:	fb09 0001 	mla	r0, r9, r1, r0
 8022184:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022188:	fb04 0003 	mla	r0, r4, r3, r0
 802218c:	9b00      	ldr	r3, [sp, #0]
 802218e:	fb04 2408 	mla	r4, r4, r8, r2
 8022192:	9a04      	ldr	r2, [sp, #16]
 8022194:	0a00      	lsrs	r0, r0, #8
 8022196:	fb09 4903 	mla	r9, r9, r3, r4
 802219a:	9b02      	ldr	r3, [sp, #8]
 802219c:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80221a0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80221a4:	4305      	orrs	r5, r0
 80221a6:	fa5f f989 	uxtb.w	r9, r9
 80221aa:	fb03 f109 	mul.w	r1, r3, r9
 80221ae:	9b03      	ldr	r3, [sp, #12]
 80221b0:	fb03 f309 	mul.w	r3, r3, r9
 80221b4:	fb02 f909 	mul.w	r9, r2, r9
 80221b8:	1c4a      	adds	r2, r1, #1
 80221ba:	1c58      	adds	r0, r3, #1
 80221bc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80221c0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80221c4:	0c2a      	lsrs	r2, r5, #16
 80221c6:	0a2b      	lsrs	r3, r5, #8
 80221c8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 80221cc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80221d0:	0212      	lsls	r2, r2, #8
 80221d2:	00db      	lsls	r3, r3, #3
 80221d4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80221d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80221dc:	4313      	orrs	r3, r2
 80221de:	f109 0201 	add.w	r2, r9, #1
 80221e2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 80221e6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 80221ea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80221ee:	431d      	orrs	r5, r3
 80221f0:	9b01      	ldr	r3, [sp, #4]
 80221f2:	801d      	strh	r5, [r3, #0]
 80221f4:	b009      	add	sp, #36	@ 0x24
 80221f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221fa:	2000      	movs	r0, #0
 80221fc:	e701      	b.n	8022002 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 80221fe:	2600      	movs	r6, #0
 8022200:	4630      	mov	r0, r6
 8022202:	e70b      	b.n	802201c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022204:	2600      	movs	r6, #0
 8022206:	e709      	b.n	802201c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8022208:	462e      	mov	r6, r5
 802220a:	e707      	b.n	802201c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802220c:	2700      	movs	r7, #0
 802220e:	e71a      	b.n	8022046 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8022210:	2100      	movs	r1, #0
 8022212:	460f      	mov	r7, r1
 8022214:	e723      	b.n	802205e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022216:	4621      	mov	r1, r4
 8022218:	4627      	mov	r7, r4
 802221a:	e720      	b.n	802205e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802221c:	2100      	movs	r1, #0
 802221e:	e71e      	b.n	802205e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8022220:	4629      	mov	r1, r5
 8022222:	e71c      	b.n	802205e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08022224 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022228:	b09b      	sub	sp, #108	@ 0x6c
 802222a:	9218      	str	r2, [sp, #96]	@ 0x60
 802222c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802222e:	9019      	str	r0, [sp, #100]	@ 0x64
 8022230:	9116      	str	r1, [sp, #88]	@ 0x58
 8022232:	6850      	ldr	r0, [r2, #4]
 8022234:	9307      	str	r3, [sp, #28]
 8022236:	6812      	ldr	r2, [r2, #0]
 8022238:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 802223a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802223e:	fb00 1303 	mla	r3, r0, r3, r1
 8022242:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022246:	930a      	str	r3, [sp, #40]	@ 0x28
 8022248:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802224a:	681b      	ldr	r3, [r3, #0]
 802224c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802224e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022250:	685e      	ldr	r6, [r3, #4]
 8022252:	3604      	adds	r6, #4
 8022254:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8022256:	2b00      	cmp	r3, #0
 8022258:	dc03      	bgt.n	8022262 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802225a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802225c:	2b00      	cmp	r3, #0
 802225e:	f340 8373 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8022262:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8022264:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022268:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802226c:	1e48      	subs	r0, r1, #1
 802226e:	1e57      	subs	r7, r2, #1
 8022270:	9b07      	ldr	r3, [sp, #28]
 8022272:	2b00      	cmp	r3, #0
 8022274:	f340 818f 	ble.w	8022596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8022278:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 802227a:	142b      	asrs	r3, r5, #16
 802227c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022280:	d406      	bmi.n	8022290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022282:	4584      	cmp	ip, r0
 8022284:	da04      	bge.n	8022290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022286:	2b00      	cmp	r3, #0
 8022288:	db02      	blt.n	8022290 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802228a:	42bb      	cmp	r3, r7
 802228c:	f2c0 8184 	blt.w	8022598 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8022290:	f11c 0c01 	adds.w	ip, ip, #1
 8022294:	f100 8172 	bmi.w	802257c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8022298:	4561      	cmp	r1, ip
 802229a:	f2c0 816f 	blt.w	802257c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802229e:	3301      	adds	r3, #1
 80222a0:	f100 816c 	bmi.w	802257c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80222a4:	429a      	cmp	r2, r3
 80222a6:	f2c0 8169 	blt.w	802257c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80222aa:	9b07      	ldr	r3, [sp, #28]
 80222ac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80222ae:	9317      	str	r3, [sp, #92]	@ 0x5c
 80222b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80222b2:	2b00      	cmp	r3, #0
 80222b4:	f340 818e 	ble.w	80225d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80222b8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80222ba:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80222be:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80222c2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80222c6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80222c8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80222cc:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80222ce:	141b      	asrs	r3, r3, #16
 80222d0:	f100 81d1 	bmi.w	8022676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222d4:	f101 38ff 	add.w	r8, r1, #4294967295
 80222d8:	4543      	cmp	r3, r8
 80222da:	f280 81cc 	bge.w	8022676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222de:	f1bc 0f00 	cmp.w	ip, #0
 80222e2:	f2c0 81c8 	blt.w	8022676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222e6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80222ea:	45c4      	cmp	ip, r8
 80222ec:	f280 81c3 	bge.w	8022676 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80222f0:	b209      	sxth	r1, r1
 80222f2:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80222f4:	fb0c 3301 	mla	r3, ip, r1, r3
 80222f8:	eb04 0803 	add.w	r8, r4, r3
 80222fc:	5ce3      	ldrb	r3, [r4, r3]
 80222fe:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8022302:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8022306:	2a00      	cmp	r2, #0
 8022308:	f000 81aa 	beq.w	8022660 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802230c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8022310:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8022314:	940b      	str	r4, [sp, #44]	@ 0x2c
 8022316:	0e24      	lsrs	r4, r4, #24
 8022318:	9412      	str	r4, [sp, #72]	@ 0x48
 802231a:	b178      	cbz	r0, 802233c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 802231c:	eb08 0c01 	add.w	ip, r8, r1
 8022320:	f818 1001 	ldrb.w	r1, [r8, r1]
 8022324:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022328:	9108      	str	r1, [sp, #32]
 802232a:	0e09      	lsrs	r1, r1, #24
 802232c:	9110      	str	r1, [sp, #64]	@ 0x40
 802232e:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8022332:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022336:	910c      	str	r1, [sp, #48]	@ 0x30
 8022338:	0e09      	lsrs	r1, r1, #24
 802233a:	9113      	str	r1, [sp, #76]	@ 0x4c
 802233c:	b292      	uxth	r2, r2
 802233e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8022340:	b280      	uxth	r0, r0
 8022342:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022344:	fb02 f900 	mul.w	r9, r2, r0
 8022348:	0112      	lsls	r2, r2, #4
 802234a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802234e:	eba2 0809 	sub.w	r8, r2, r9
 8022352:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8022356:	b280      	uxth	r0, r0
 8022358:	fa1f f888 	uxth.w	r8, r8
 802235c:	1a12      	subs	r2, r2, r0
 802235e:	fb08 f101 	mul.w	r1, r8, r1
 8022362:	b292      	uxth	r2, r2
 8022364:	fb02 110e 	mla	r1, r2, lr, r1
 8022368:	fb00 1104 	mla	r1, r0, r4, r1
 802236c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802236e:	fb09 1104 	mla	r1, r9, r4, r1
 8022372:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8022376:	2900      	cmp	r1, #0
 8022378:	f000 80f5 	beq.w	8022566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802237c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8022380:	d01b      	beq.n	80223ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8022382:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8022386:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802238a:	fb0e fa0a 	mul.w	sl, lr, sl
 802238e:	fb0e fe03 	mul.w	lr, lr, r3
 8022392:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8022396:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802239a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802239e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80223a2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80223a6:	4453      	add	r3, sl
 80223a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80223ac:	0a1b      	lsrs	r3, r3, #8
 80223ae:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80223b2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80223b6:	ea43 030c 	orr.w	r3, r3, ip
 80223ba:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80223bc:	2cff      	cmp	r4, #255	@ 0xff
 80223be:	d021      	beq.n	8022404 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80223c0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80223c2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80223c6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80223c8:	fb04 fb0b 	mul.w	fp, r4, fp
 80223cc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80223ce:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80223d2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80223d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80223d8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80223dc:	fb04 fa0a 	mul.w	sl, r4, sl
 80223e0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80223e4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80223e8:	44de      	add	lr, fp
 80223ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80223ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80223f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80223f6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80223fa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80223fe:	ea4e 040a 	orr.w	r4, lr, sl
 8022402:	940b      	str	r4, [sp, #44]	@ 0x2c
 8022404:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022406:	2cff      	cmp	r4, #255	@ 0xff
 8022408:	d021      	beq.n	802244e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802240a:	9c08      	ldr	r4, [sp, #32]
 802240c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8022410:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8022412:	fb04 fb0b 	mul.w	fp, r4, fp
 8022416:	9c08      	ldr	r4, [sp, #32]
 8022418:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802241c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802241e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8022422:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022426:	fb04 fa0a 	mul.w	sl, r4, sl
 802242a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802242e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8022432:	44de      	add	lr, fp
 8022434:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022438:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802243c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022440:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022444:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022448:	ea4e 040a 	orr.w	r4, lr, sl
 802244c:	9408      	str	r4, [sp, #32]
 802244e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8022450:	2cff      	cmp	r4, #255	@ 0xff
 8022452:	d021      	beq.n	8022498 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8022454:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022456:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802245a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802245c:	fb04 fb0b 	mul.w	fp, r4, fp
 8022460:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022462:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8022466:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8022468:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802246c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8022470:	fb04 fa0a 	mul.w	sl, r4, sl
 8022474:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8022478:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802247c:	44de      	add	lr, fp
 802247e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8022482:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022486:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802248a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802248e:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022492:	ea4e 040a 	orr.w	r4, lr, sl
 8022496:	940c      	str	r4, [sp, #48]	@ 0x30
 8022498:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802249a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802249e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80224a2:	43c9      	mvns	r1, r1
 80224a4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80224a8:	9c08      	ldr	r4, [sp, #32]
 80224aa:	fb08 fc0c 	mul.w	ip, r8, ip
 80224ae:	fb02 cc0e 	mla	ip, r2, lr, ip
 80224b2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80224b6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80224b8:	fb00 cc0e 	mla	ip, r0, lr, ip
 80224bc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80224c0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80224c2:	fb09 cc0e 	mla	ip, r9, lr, ip
 80224c6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 80224ca:	fb08 f80e 	mul.w	r8, r8, lr
 80224ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80224d2:	fa5f fe81 	uxtb.w	lr, r1
 80224d6:	fb02 8303 	mla	r3, r2, r3, r8
 80224da:	9a08      	ldr	r2, [sp, #32]
 80224dc:	f8b7 8000 	ldrh.w	r8, [r7]
 80224e0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80224e4:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 80224e8:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80224ea:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 80224ee:	fb00 330a 	mla	r3, r0, sl, r3
 80224f2:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 80224f6:	ea4f 2228 	mov.w	r2, r8, asr #8
 80224fa:	fb09 3900 	mla	r9, r9, r0, r3
 80224fe:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8022502:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8022506:	b2c9      	uxtb	r1, r1
 8022508:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802250c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8022510:	fb02 f20e 	mul.w	r2, r2, lr
 8022514:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8022518:	fb00 f00e 	mul.w	r0, r0, lr
 802251c:	1c53      	adds	r3, r2, #1
 802251e:	fb01 f10e 	mul.w	r1, r1, lr
 8022522:	ea4c 0c09 	orr.w	ip, ip, r9
 8022526:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802252a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802252e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022532:	4a60      	ldr	r2, [pc, #384]	@ (80226b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8022534:	b2db      	uxtb	r3, r3
 8022536:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802253a:	1c43      	adds	r3, r0, #1
 802253c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8022540:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8022544:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022548:	00db      	lsls	r3, r3, #3
 802254a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802254e:	4313      	orrs	r3, r2
 8022550:	1c4a      	adds	r2, r1, #1
 8022552:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022556:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802255a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802255e:	ea4c 0c03 	orr.w	ip, ip, r3
 8022562:	f8a7 c000 	strh.w	ip, [r7]
 8022566:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8022568:	3702      	adds	r7, #2
 802256a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 802256c:	441a      	add	r2, r3
 802256e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022570:	441d      	add	r5, r3
 8022572:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8022574:	9225      	str	r2, [sp, #148]	@ 0x94
 8022576:	3b01      	subs	r3, #1
 8022578:	9317      	str	r3, [sp, #92]	@ 0x5c
 802257a:	e699      	b.n	80222b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802257c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802257e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8022580:	441c      	add	r4, r3
 8022582:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022584:	441d      	add	r5, r3
 8022586:	9b07      	ldr	r3, [sp, #28]
 8022588:	9425      	str	r4, [sp, #148]	@ 0x94
 802258a:	3b01      	subs	r3, #1
 802258c:	9307      	str	r3, [sp, #28]
 802258e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022590:	3302      	adds	r3, #2
 8022592:	930a      	str	r3, [sp, #40]	@ 0x28
 8022594:	e66c      	b.n	8022270 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8022596:	d024      	beq.n	80225e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 8022598:	9b07      	ldr	r3, [sp, #28]
 802259a:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802259c:	3b01      	subs	r3, #1
 802259e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80225a0:	fb00 4003 	mla	r0, r0, r3, r4
 80225a4:	1400      	asrs	r0, r0, #16
 80225a6:	f53f ae80 	bmi.w	80222aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80225aa:	3901      	subs	r1, #1
 80225ac:	4288      	cmp	r0, r1
 80225ae:	f6bf ae7c 	bge.w	80222aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80225b2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80225b4:	fb01 5303 	mla	r3, r1, r3, r5
 80225b8:	141b      	asrs	r3, r3, #16
 80225ba:	f53f ae76 	bmi.w	80222aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80225be:	3a01      	subs	r2, #1
 80225c0:	4293      	cmp	r3, r2
 80225c2:	f6bf ae72 	bge.w	80222aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80225c6:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80225ca:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80225ce:	f1bb 0f00 	cmp.w	fp, #0
 80225d2:	dc71      	bgt.n	80226b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80225d4:	9b07      	ldr	r3, [sp, #28]
 80225d6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80225da:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80225dc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80225e0:	930a      	str	r3, [sp, #40]	@ 0x28
 80225e2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80225e4:	2b00      	cmp	r3, #0
 80225e6:	f340 81af 	ble.w	8022948 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80225ea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80225ee:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80225f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225f8:	eef0 6a62 	vmov.f32	s13, s5
 80225fc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022600:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022604:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022608:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 802260c:	eef0 6a43 	vmov.f32	s13, s6
 8022610:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022614:	ee16 5a90 	vmov	r5, s13
 8022618:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802261c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022620:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022624:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022628:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802262c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022630:	ee12 2a90 	vmov	r2, s5
 8022634:	eef0 2a47 	vmov.f32	s5, s14
 8022638:	fb92 f3f3 	sdiv	r3, r2, r3
 802263c:	ee13 2a10 	vmov	r2, s6
 8022640:	9327      	str	r3, [sp, #156]	@ 0x9c
 8022642:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022644:	eeb0 3a67 	vmov.f32	s6, s15
 8022648:	fb92 f3f3 	sdiv	r3, r2, r3
 802264c:	9328      	str	r3, [sp, #160]	@ 0xa0
 802264e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8022650:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8022652:	3b01      	subs	r3, #1
 8022654:	9316      	str	r3, [sp, #88]	@ 0x58
 8022656:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022658:	bf08      	it	eq
 802265a:	4613      	moveq	r3, r2
 802265c:	9307      	str	r3, [sp, #28]
 802265e:	e5f9      	b.n	8022254 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8022660:	2800      	cmp	r0, #0
 8022662:	f43f ae6b 	beq.w	802233c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8022666:	f818 1001 	ldrb.w	r1, [r8, r1]
 802266a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802266e:	9108      	str	r1, [sp, #32]
 8022670:	0e09      	lsrs	r1, r1, #24
 8022672:	9110      	str	r1, [sp, #64]	@ 0x40
 8022674:	e662      	b.n	802233c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 8022676:	f113 0801 	adds.w	r8, r3, #1
 802267a:	f53f af74 	bmi.w	8022566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802267e:	4541      	cmp	r1, r8
 8022680:	f6ff af71 	blt.w	8022566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022684:	f11c 0801 	adds.w	r8, ip, #1
 8022688:	f53f af6d 	bmi.w	8022566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 802268c:	45c6      	cmp	lr, r8
 802268e:	f6ff af6a 	blt.w	8022566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8022692:	b209      	sxth	r1, r1
 8022694:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8022698:	fa0f f38e 	sxth.w	r3, lr
 802269c:	9100      	str	r1, [sp, #0]
 802269e:	4639      	mov	r1, r7
 80226a0:	9301      	str	r3, [sp, #4]
 80226a2:	4633      	mov	r3, r6
 80226a4:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80226a8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80226aa:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80226ac:	f7ff fc7b 	bl	8021fa6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80226b0:	e759      	b.n	8022566 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80226b2:	bf00      	nop
 80226b4:	fffff800 	.word	0xfffff800
 80226b8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80226ba:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80226be:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80226c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80226c4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80226c6:	1427      	asrs	r7, r4, #16
 80226c8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80226ca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226ce:	142b      	asrs	r3, r5, #16
 80226d0:	fb01 7303 	mla	r3, r1, r3, r7
 80226d4:	18e7      	adds	r7, r4, r3
 80226d6:	5ce3      	ldrb	r3, [r4, r3]
 80226d8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80226dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80226e0:	2a00      	cmp	r2, #0
 80226e2:	f000 8127 	beq.w	8022934 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80226e6:	f897 e001 	ldrb.w	lr, [r7, #1]
 80226ea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80226ee:	940d      	str	r4, [sp, #52]	@ 0x34
 80226f0:	0e24      	lsrs	r4, r4, #24
 80226f2:	9414      	str	r4, [sp, #80]	@ 0x50
 80226f4:	b170      	cbz	r0, 8022714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80226f6:	eb07 0e01 	add.w	lr, r7, r1
 80226fa:	5c79      	ldrb	r1, [r7, r1]
 80226fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022700:	9109      	str	r1, [sp, #36]	@ 0x24
 8022702:	0e09      	lsrs	r1, r1, #24
 8022704:	9111      	str	r1, [sp, #68]	@ 0x44
 8022706:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802270a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802270e:	910e      	str	r1, [sp, #56]	@ 0x38
 8022710:	0e09      	lsrs	r1, r1, #24
 8022712:	9115      	str	r1, [sp, #84]	@ 0x54
 8022714:	b292      	uxth	r2, r2
 8022716:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8022718:	b280      	uxth	r0, r0
 802271a:	fb02 f800 	mul.w	r8, r2, r0
 802271e:	0112      	lsls	r2, r2, #4
 8022720:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8022724:	eba2 0e08 	sub.w	lr, r2, r8
 8022728:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 802272c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802272e:	b280      	uxth	r0, r0
 8022730:	fa1f fe8e 	uxth.w	lr, lr
 8022734:	1a09      	subs	r1, r1, r0
 8022736:	fb0e f202 	mul.w	r2, lr, r2
 802273a:	b289      	uxth	r1, r1
 802273c:	fb01 220c 	mla	r2, r1, ip, r2
 8022740:	fb00 2204 	mla	r2, r0, r4, r2
 8022744:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8022746:	fb08 2204 	mla	r2, r8, r4, r2
 802274a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802274e:	2a00      	cmp	r2, #0
 8022750:	f000 80e5 	beq.w	802291e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8022754:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8022758:	d019      	beq.n	802278e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802275a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802275e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022762:	fb0c fa0a 	mul.w	sl, ip, sl
 8022766:	fb0c fc03 	mul.w	ip, ip, r3
 802276a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802276e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8022772:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8022776:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802277a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802277e:	4453      	add	r3, sl
 8022780:	0a3f      	lsrs	r7, r7, #8
 8022782:	0a1b      	lsrs	r3, r3, #8
 8022784:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8022788:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802278c:	433b      	orrs	r3, r7
 802278e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8022790:	2cff      	cmp	r4, #255	@ 0xff
 8022792:	d020      	beq.n	80227d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8022794:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022796:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802279a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802279c:	4367      	muls	r7, r4
 802279e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80227a0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227a4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80227a8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80227aa:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80227ae:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80227b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80227b6:	44bc      	add	ip, r7
 80227b8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80227bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80227c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80227c4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80227c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80227cc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80227d0:	ea4c 040a 	orr.w	r4, ip, sl
 80227d4:	940d      	str	r4, [sp, #52]	@ 0x34
 80227d6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80227d8:	2cff      	cmp	r4, #255	@ 0xff
 80227da:	d020      	beq.n	802281e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80227dc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80227de:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80227e2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80227e4:	4367      	muls	r7, r4
 80227e6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80227e8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80227ec:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80227f0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80227f2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80227f6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80227fa:	fb04 fa0a 	mul.w	sl, r4, sl
 80227fe:	44bc      	add	ip, r7
 8022800:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8022804:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022808:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802280c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022810:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022814:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022818:	ea4c 040a 	orr.w	r4, ip, sl
 802281c:	9409      	str	r4, [sp, #36]	@ 0x24
 802281e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8022820:	2cff      	cmp	r4, #255	@ 0xff
 8022822:	d020      	beq.n	8022866 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8022824:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8022826:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802282a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802282c:	4367      	muls	r7, r4
 802282e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8022830:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8022834:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8022838:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802283a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802283e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022842:	fb04 fa0a 	mul.w	sl, r4, sl
 8022846:	44bc      	add	ip, r7
 8022848:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802284c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022850:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8022854:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8022858:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802285c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022860:	ea4c 040a 	orr.w	r4, ip, sl
 8022864:	940e      	str	r4, [sp, #56]	@ 0x38
 8022866:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022868:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 802286c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8022870:	43d2      	mvns	r2, r2
 8022872:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8022876:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8022878:	b2d2      	uxtb	r2, r2
 802287a:	fb0e f707 	mul.w	r7, lr, r7
 802287e:	fb01 770c 	mla	r7, r1, ip, r7
 8022882:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022886:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8022888:	fb00 770c 	mla	r7, r0, ip, r7
 802288c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022890:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022892:	fb08 770c 	mla	r7, r8, ip, r7
 8022896:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802289a:	fb0e fe0c 	mul.w	lr, lr, ip
 802289e:	0a3f      	lsrs	r7, r7, #8
 80228a0:	fb01 e303 	mla	r3, r1, r3, lr
 80228a4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80228a6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 80228aa:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80228ae:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80228b0:	fb00 330a 	mla	r3, r0, sl, r3
 80228b4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 80228b8:	fb08 3c0c 	mla	ip, r8, ip, r3
 80228bc:	f8b9 3000 	ldrh.w	r3, [r9]
 80228c0:	1218      	asrs	r0, r3, #8
 80228c2:	10d9      	asrs	r1, r3, #3
 80228c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228c8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80228cc:	00db      	lsls	r3, r3, #3
 80228ce:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80228d2:	4350      	muls	r0, r2
 80228d4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80228d8:	b2db      	uxtb	r3, r3
 80228da:	4351      	muls	r1, r2
 80228dc:	ea47 070c 	orr.w	r7, r7, ip
 80228e0:	4353      	muls	r3, r2
 80228e2:	1c42      	adds	r2, r0, #1
 80228e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80228e8:	0c3a      	lsrs	r2, r7, #16
 80228ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80228ee:	4a18      	ldr	r2, [pc, #96]	@ (8022950 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80228f0:	b2c0      	uxtb	r0, r0
 80228f2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80228f6:	1c4a      	adds	r2, r1, #1
 80228f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80228fc:	0a3a      	lsrs	r2, r7, #8
 80228fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022902:	00c9      	lsls	r1, r1, #3
 8022904:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022908:	4301      	orrs	r1, r0
 802290a:	1c58      	adds	r0, r3, #1
 802290c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8022910:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8022914:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8022918:	4308      	orrs	r0, r1
 802291a:	f8a9 0000 	strh.w	r0, [r9]
 802291e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8022920:	f109 0902 	add.w	r9, r9, #2
 8022924:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8022926:	f10b 3bff 	add.w	fp, fp, #4294967295
 802292a:	441a      	add	r2, r3
 802292c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802292e:	9225      	str	r2, [sp, #148]	@ 0x94
 8022930:	441d      	add	r5, r3
 8022932:	e64c      	b.n	80225ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8022934:	2800      	cmp	r0, #0
 8022936:	f43f aeed 	beq.w	8022714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802293a:	5c79      	ldrb	r1, [r7, r1]
 802293c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8022940:	9109      	str	r1, [sp, #36]	@ 0x24
 8022942:	0e09      	lsrs	r1, r1, #24
 8022944:	9111      	str	r1, [sp, #68]	@ 0x44
 8022946:	e6e5      	b.n	8022714 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8022948:	b01b      	add	sp, #108	@ 0x6c
 802294a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802294e:	bf00      	nop
 8022950:	fffff800 	.word	0xfffff800

08022954 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8022954:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022958:	b085      	sub	sp, #20
 802295a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 802295e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8022962:	2800      	cmp	r0, #0
 8022964:	9103      	str	r1, [sp, #12]
 8022966:	fb00 7406 	mla	r4, r0, r6, r7
 802296a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 802296e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8022972:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8022976:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802297a:	eb03 0904 	add.w	r9, r3, r4
 802297e:	9501      	str	r5, [sp, #4]
 8022980:	f2c0 8150 	blt.w	8022c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8022984:	4583      	cmp	fp, r0
 8022986:	f340 814d 	ble.w	8022c24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802298a:	2f00      	cmp	r7, #0
 802298c:	f2c0 8146 	blt.w	8022c1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022990:	42be      	cmp	r6, r7
 8022992:	f340 8143 	ble.w	8022c1c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8022996:	f813 c004 	ldrb.w	ip, [r3, r4]
 802299a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 802299e:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 80229a2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80229a6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 80229aa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80229ae:	4355      	muls	r5, r2
 80229b0:	fb0c f203 	mul.w	r2, ip, r3
 80229b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80229b8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 80229bc:	441d      	add	r5, r3
 80229be:	f102 0320 	add.w	r3, r2, #32
 80229c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80229c6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80229ca:	0a1b      	lsrs	r3, r3, #8
 80229cc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80229d0:	431c      	orrs	r4, r3
 80229d2:	1c7b      	adds	r3, r7, #1
 80229d4:	f100 812b 	bmi.w	8022c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80229d8:	429e      	cmp	r6, r3
 80229da:	f340 8128 	ble.w	8022c2e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80229de:	2900      	cmp	r1, #0
 80229e0:	f000 8128 	beq.w	8022c34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80229e4:	9a01      	ldr	r2, [sp, #4]
 80229e6:	f899 3001 	ldrb.w	r3, [r9, #1]
 80229ea:	8855      	ldrh	r5, [r2, #2]
 80229ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80229f0:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80229f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80229f8:	fb08 f802 	mul.w	r8, r8, r2
 80229fc:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8022a00:	435d      	muls	r5, r3
 8022a02:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8022a06:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022a0a:	44d0      	add	r8, sl
 8022a0c:	f105 0a20 	add.w	sl, r5, #32
 8022a10:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022a14:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8022a18:	0a2d      	lsrs	r5, r5, #8
 8022a1a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022a1e:	432a      	orrs	r2, r5
 8022a20:	3001      	adds	r0, #1
 8022a22:	f100 810d 	bmi.w	8022c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022a26:	4583      	cmp	fp, r0
 8022a28:	f340 810a 	ble.w	8022c40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8022a2c:	f1be 0f00 	cmp.w	lr, #0
 8022a30:	f000 810b 	beq.w	8022c4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8022a34:	2f00      	cmp	r7, #0
 8022a36:	f2c0 8100 	blt.w	8022c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022a3a:	42be      	cmp	r6, r7
 8022a3c:	f340 80fd 	ble.w	8022c3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8022a40:	9801      	ldr	r0, [sp, #4]
 8022a42:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8022a46:	f819 5006 	ldrb.w	r5, [r9, r6]
 8022a4a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8022a4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022a52:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8022a56:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8022a5a:	fb0a fa00 	mul.w	sl, sl, r0
 8022a5e:	fb05 f808 	mul.w	r8, r5, r8
 8022a62:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022a66:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8022a6a:	4482      	add	sl, r0
 8022a6c:	f108 0020 	add.w	r0, r8, #32
 8022a70:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022a74:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8022a78:	0a00      	lsrs	r0, r0, #8
 8022a7a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022a7e:	ea4b 0b00 	orr.w	fp, fp, r0
 8022a82:	3701      	adds	r7, #1
 8022a84:	f100 80e6 	bmi.w	8022c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022a88:	42be      	cmp	r6, r7
 8022a8a:	f340 80e3 	ble.w	8022c54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8022a8e:	2900      	cmp	r1, #0
 8022a90:	f000 80e3 	beq.w	8022c5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8022a94:	3601      	adds	r6, #1
 8022a96:	9801      	ldr	r0, [sp, #4]
 8022a98:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022a9c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022aa0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022aa4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8022aa8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022aac:	fb09 f906 	mul.w	r9, r9, r6
 8022ab0:	fb07 f800 	mul.w	r8, r7, r0
 8022ab4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8022ab8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8022abc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8022ac0:	44d1      	add	r9, sl
 8022ac2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8022ac6:	f108 0020 	add.w	r0, r8, #32
 8022aca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022ace:	0a00      	lsrs	r0, r0, #8
 8022ad0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022ad4:	4330      	orrs	r0, r6
 8022ad6:	b28e      	uxth	r6, r1
 8022ad8:	fa1f f98e 	uxth.w	r9, lr
 8022adc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8022ae0:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8022ae4:	fb06 f809 	mul.w	r8, r6, r9
 8022ae8:	0136      	lsls	r6, r6, #4
 8022aea:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022aee:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8022af2:	9601      	str	r6, [sp, #4]
 8022af4:	ea4a 0404 	orr.w	r4, sl, r4
 8022af8:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022afc:	fa1f f689 	uxth.w	r6, r9
 8022b00:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022b04:	fb11 f90e 	smulbb	r9, r1, lr
 8022b08:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022b0c:	9602      	str	r6, [sp, #8]
 8022b0e:	4626      	mov	r6, r4
 8022b10:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8022b14:	f1ce 0410 	rsb	r4, lr, #16
 8022b18:	ea4a 0202 	orr.w	r2, sl, r2
 8022b1c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022b20:	1a64      	subs	r4, r4, r1
 8022b22:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022b26:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022b2a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022b2e:	434a      	muls	r2, r1
 8022b30:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022b34:	ea4a 0000 	orr.w	r0, sl, r0
 8022b38:	9903      	ldr	r1, [sp, #12]
 8022b3a:	fb04 2406 	mla	r4, r4, r6, r2
 8022b3e:	9e02      	ldr	r6, [sp, #8]
 8022b40:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022b44:	fb09 4200 	mla	r2, r9, r0, r4
 8022b48:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022b4c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8022b50:	8808      	ldrh	r0, [r1, #0]
 8022b52:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022b56:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8022b5a:	ea44 0b0b 	orr.w	fp, r4, fp
 8022b5e:	9c01      	ldr	r4, [sp, #4]
 8022b60:	b289      	uxth	r1, r1
 8022b62:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8022b66:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022b6a:	1ba4      	subs	r4, r4, r6
 8022b6c:	9e01      	ldr	r6, [sp, #4]
 8022b6e:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022b72:	eba6 0608 	sub.w	r6, r6, r8
 8022b76:	b2a4      	uxth	r4, r4
 8022b78:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022b7c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022b80:	b2b6      	uxth	r6, r6
 8022b82:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8022b86:	4373      	muls	r3, r6
 8022b88:	ea42 0e0e 	orr.w	lr, r2, lr
 8022b8c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022b90:	9c02      	ldr	r4, [sp, #8]
 8022b92:	fa1f f28e 	uxth.w	r2, lr
 8022b96:	fb04 3505 	mla	r5, r4, r5, r3
 8022b9a:	10d4      	asrs	r4, r2, #3
 8022b9c:	fb08 5707 	mla	r7, r8, r7, r5
 8022ba0:	1215      	asrs	r5, r2, #8
 8022ba2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8022ba6:	00d2      	lsls	r2, r2, #3
 8022ba8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8022bac:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022bb0:	b2d2      	uxtb	r2, r2
 8022bb2:	434f      	muls	r7, r1
 8022bb4:	1c7b      	adds	r3, r7, #1
 8022bb6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8022bba:	1203      	asrs	r3, r0, #8
 8022bbc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8022bc0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8022bc4:	b2ff      	uxtb	r7, r7
 8022bc6:	fb13 f307 	smulbb	r3, r3, r7
 8022bca:	fb05 3501 	mla	r5, r5, r1, r3
 8022bce:	10c3      	asrs	r3, r0, #3
 8022bd0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8022bd4:	b2ad      	uxth	r5, r5
 8022bd6:	fb13 f307 	smulbb	r3, r3, r7
 8022bda:	fb04 3401 	mla	r4, r4, r1, r3
 8022bde:	00c3      	lsls	r3, r0, #3
 8022be0:	b2db      	uxtb	r3, r3
 8022be2:	b2a4      	uxth	r4, r4
 8022be4:	fb13 f307 	smulbb	r3, r3, r7
 8022be8:	fb02 3101 	mla	r1, r2, r1, r3
 8022bec:	1c6b      	adds	r3, r5, #1
 8022bee:	1c62      	adds	r2, r4, #1
 8022bf0:	b289      	uxth	r1, r1
 8022bf2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022bf6:	1c4b      	adds	r3, r1, #1
 8022bf8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8022bfc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022c00:	9a03      	ldr	r2, [sp, #12]
 8022c02:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022c06:	0964      	lsrs	r4, r4, #5
 8022c08:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022c0c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8022c10:	432b      	orrs	r3, r5
 8022c12:	4323      	orrs	r3, r4
 8022c14:	8013      	strh	r3, [r2, #0]
 8022c16:	b005      	add	sp, #20
 8022c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022c1c:	f04f 0c00 	mov.w	ip, #0
 8022c20:	4664      	mov	r4, ip
 8022c22:	e6d6      	b.n	80229d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8022c24:	2300      	movs	r3, #0
 8022c26:	469c      	mov	ip, r3
 8022c28:	461a      	mov	r2, r3
 8022c2a:	461c      	mov	r4, r3
 8022c2c:	e6f8      	b.n	8022a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022c2e:	2300      	movs	r3, #0
 8022c30:	461a      	mov	r2, r3
 8022c32:	e6f5      	b.n	8022a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022c34:	460b      	mov	r3, r1
 8022c36:	460a      	mov	r2, r1
 8022c38:	e6f2      	b.n	8022a20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8022c3a:	2500      	movs	r5, #0
 8022c3c:	46ab      	mov	fp, r5
 8022c3e:	e720      	b.n	8022a82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8022c40:	2700      	movs	r7, #0
 8022c42:	463d      	mov	r5, r7
 8022c44:	4638      	mov	r0, r7
 8022c46:	46bb      	mov	fp, r7
 8022c48:	e745      	b.n	8022ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022c4a:	4677      	mov	r7, lr
 8022c4c:	4675      	mov	r5, lr
 8022c4e:	4670      	mov	r0, lr
 8022c50:	46f3      	mov	fp, lr
 8022c52:	e740      	b.n	8022ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022c54:	2700      	movs	r7, #0
 8022c56:	4638      	mov	r0, r7
 8022c58:	e73d      	b.n	8022ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8022c5a:	460f      	mov	r7, r1
 8022c5c:	4608      	mov	r0, r1
 8022c5e:	e73a      	b.n	8022ad6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08022c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c64:	b097      	sub	sp, #92	@ 0x5c
 8022c66:	9214      	str	r2, [sp, #80]	@ 0x50
 8022c68:	9308      	str	r3, [sp, #32]
 8022c6a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8022c6c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8022c70:	9015      	str	r0, [sp, #84]	@ 0x54
 8022c72:	9312      	str	r3, [sp, #72]	@ 0x48
 8022c74:	6850      	ldr	r0, [r2, #4]
 8022c76:	9111      	str	r1, [sp, #68]	@ 0x44
 8022c78:	6812      	ldr	r2, [r2, #0]
 8022c7a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8022c7e:	fb00 1303 	mla	r3, r0, r3, r1
 8022c82:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022c86:	9309      	str	r3, [sp, #36]	@ 0x24
 8022c88:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022c8a:	681b      	ldr	r3, [r3, #0]
 8022c8c:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022c8e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022c90:	685b      	ldr	r3, [r3, #4]
 8022c92:	930c      	str	r3, [sp, #48]	@ 0x30
 8022c94:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8022c98:	930a      	str	r3, [sp, #40]	@ 0x28
 8022c9a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8022c9c:	2b00      	cmp	r3, #0
 8022c9e:	dc03      	bgt.n	8022ca8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022ca0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8022ca2:	2b00      	cmp	r3, #0
 8022ca4:	f340 83cd 	ble.w	8023442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8022ca8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022caa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022cae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022cb2:	1e48      	subs	r0, r1, #1
 8022cb4:	1e55      	subs	r5, r2, #1
 8022cb6:	9b08      	ldr	r3, [sp, #32]
 8022cb8:	2b00      	cmp	r3, #0
 8022cba:	f340 81a5 	ble.w	8023008 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8022cbe:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8022cc0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022cc2:	1436      	asrs	r6, r6, #16
 8022cc4:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022cc8:	d406      	bmi.n	8022cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022cca:	4286      	cmp	r6, r0
 8022ccc:	da04      	bge.n	8022cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022cce:	2b00      	cmp	r3, #0
 8022cd0:	db02      	blt.n	8022cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022cd2:	42ab      	cmp	r3, r5
 8022cd4:	f2c0 8199 	blt.w	802300a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8022cd8:	3601      	adds	r6, #1
 8022cda:	f100 8186 	bmi.w	8022fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022cde:	42b1      	cmp	r1, r6
 8022ce0:	f2c0 8183 	blt.w	8022fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022ce4:	3301      	adds	r3, #1
 8022ce6:	f100 8180 	bmi.w	8022fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022cea:	429a      	cmp	r2, r3
 8022cec:	f2c0 817d 	blt.w	8022fea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8022cf0:	9b08      	ldr	r3, [sp, #32]
 8022cf2:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8022cf6:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8022cf8:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022cfa:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8022cfc:	2b00      	cmp	r3, #0
 8022cfe:	f340 81a6 	ble.w	802304e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8022d02:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022d04:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8022d06:	1418      	asrs	r0, r3, #16
 8022d08:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022d0a:	142d      	asrs	r5, r5, #16
 8022d0c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8022d10:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8022d12:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022d16:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8022d18:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022d1c:	f100 81fa 	bmi.w	8023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8022d20:	f102 3eff 	add.w	lr, r2, #4294967295
 8022d24:	4575      	cmp	r5, lr
 8022d26:	f280 81f5 	bge.w	8023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8022d2a:	2800      	cmp	r0, #0
 8022d2c:	f2c0 81f2 	blt.w	8023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8022d30:	f103 3eff 	add.w	lr, r3, #4294967295
 8022d34:	4570      	cmp	r0, lr
 8022d36:	f280 81ed 	bge.w	8023114 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8022d3a:	b212      	sxth	r2, r2
 8022d3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022d3e:	fa1f fe81 	uxth.w	lr, r1
 8022d42:	fb00 5002 	mla	r0, r0, r2, r5
 8022d46:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8022d4a:	eb03 0a00 	add.w	sl, r3, r0
 8022d4e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022d52:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8022d56:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022d5a:	b29b      	uxth	r3, r3
 8022d5c:	f1bc 0f00 	cmp.w	ip, #0
 8022d60:	f000 81bb 	beq.w	80230da <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 8022d64:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022d68:	eb0a 0b02 	add.w	fp, sl, r2
 8022d6c:	fa1f fa8c 	uxth.w	sl, ip
 8022d70:	940d      	str	r4, [sp, #52]	@ 0x34
 8022d72:	fb0a fe0e 	mul.w	lr, sl, lr
 8022d76:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022d7a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022d7e:	eba5 050e 	sub.w	r5, r5, lr
 8022d82:	940e      	str	r4, [sp, #56]	@ 0x38
 8022d84:	fa1f fa8a 	uxth.w	sl, sl
 8022d88:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022d8a:	b2ad      	uxth	r5, r5
 8022d8c:	eba3 030a 	sub.w	r3, r3, sl
 8022d90:	fb08 f505 	mul.w	r5, r8, r5
 8022d94:	b29b      	uxth	r3, r3
 8022d96:	fb09 5303 	mla	r3, r9, r3, r5
 8022d9a:	fb0a 3304 	mla	r3, sl, r4, r3
 8022d9e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8022da0:	fb0e 3304 	mla	r3, lr, r4, r3
 8022da4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022da8:	2b00      	cmp	r3, #0
 8022daa:	f000 8111 	beq.w	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8022dae:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8022db0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022db4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022db8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022dbc:	f000 8192 	beq.w	80230e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8022dc0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8022dc4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022dc8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022dcc:	fb0a fe0e 	mul.w	lr, sl, lr
 8022dd0:	fb09 f000 	mul.w	r0, r9, r0
 8022dd4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022dd8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8022ddc:	f100 0b20 	add.w	fp, r0, #32
 8022de0:	44ce      	add	lr, r9
 8022de2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022de6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022dea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022dee:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022df2:	ea4e 0909 	orr.w	r9, lr, r9
 8022df6:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8022dfa:	8868      	ldrh	r0, [r5, #2]
 8022dfc:	d019      	beq.n	8022e32 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8022dfe:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8022e02:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022e06:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022e0a:	fb0a fe0e 	mul.w	lr, sl, lr
 8022e0e:	fb08 f800 	mul.w	r8, r8, r0
 8022e12:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022e16:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8022e1a:	f108 0b20 	add.w	fp, r8, #32
 8022e1e:	4486      	add	lr, r0
 8022e20:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022e24:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022e28:	0a00      	lsrs	r0, r0, #8
 8022e2a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022e2e:	ea4e 0000 	orr.w	r0, lr, r0
 8022e32:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022e36:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022e3a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022e3e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022e42:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8022e46:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022e4a:	ea4e 0909 	orr.w	r9, lr, r9
 8022e4e:	ea4a 0000 	orr.w	r0, sl, r0
 8022e52:	f1bc 0f00 	cmp.w	ip, #0
 8022e56:	f000 8147 	beq.w	80230e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 8022e5a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8022e5e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8022e60:	3a01      	subs	r2, #1
 8022e62:	2cff      	cmp	r4, #255	@ 0xff
 8022e64:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8022e68:	f102 0202 	add.w	r2, r2, #2
 8022e6c:	eb05 0e02 	add.w	lr, r5, r2
 8022e70:	5aaa      	ldrh	r2, [r5, r2]
 8022e72:	d018      	beq.n	8022ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8022e74:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8022e78:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022e7c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022e80:	fb04 fa02 	mul.w	sl, r4, r2
 8022e84:	fb08 f805 	mul.w	r8, r8, r5
 8022e88:	f10a 0520 	add.w	r5, sl, #32
 8022e8c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022e90:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022e94:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8022e98:	4442      	add	r2, r8
 8022e9a:	0a2d      	lsrs	r5, r5, #8
 8022e9c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022ea0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022ea4:	432a      	orrs	r2, r5
 8022ea6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8022ea8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022eac:	2cff      	cmp	r4, #255	@ 0xff
 8022eae:	d01a      	beq.n	8022ee6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 8022eb0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8022eb4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8022eb8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022ebc:	fb04 fa05 	mul.w	sl, r4, r5
 8022ec0:	fb08 f80e 	mul.w	r8, r8, lr
 8022ec4:	f10a 0e20 	add.w	lr, sl, #32
 8022ec8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022ecc:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022ed0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022ed4:	4445      	add	r5, r8
 8022ed6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022eda:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8022ede:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8022ee2:	ea45 050e 	orr.w	r5, r5, lr
 8022ee6:	fb1c fe01 	smulbb	lr, ip, r1
 8022eea:	f1cc 0810 	rsb	r8, ip, #16
 8022eee:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022ef2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022ef6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022efa:	eba8 0801 	sub.w	r8, r8, r1
 8022efe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022f02:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022f06:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022f0a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022f0e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8022f12:	ea4a 0202 	orr.w	r2, sl, r2
 8022f16:	4341      	muls	r1, r0
 8022f18:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022f1c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022f20:	fb09 1108 	mla	r1, r9, r8, r1
 8022f24:	ea4b 0505 	orr.w	r5, fp, r5
 8022f28:	fb0c 1102 	mla	r1, ip, r2, r1
 8022f2c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022f30:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022f34:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022f38:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022f3c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8022f40:	ea42 0e0e 	orr.w	lr, r2, lr
 8022f44:	fa1f f28e 	uxth.w	r2, lr
 8022f48:	2bff      	cmp	r3, #255	@ 0xff
 8022f4a:	d103      	bne.n	8022f54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8022f4c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8022f4e:	29ff      	cmp	r1, #255	@ 0xff
 8022f50:	f000 80de 	beq.w	8023110 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8022f54:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8022f56:	1215      	asrs	r5, r2, #8
 8022f58:	8838      	ldrh	r0, [r7, #0]
 8022f5a:	434b      	muls	r3, r1
 8022f5c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022f60:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8022f62:	f103 0c01 	add.w	ip, r3, #1
 8022f66:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8022f6a:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8022f6e:	fa5f fc83 	uxtb.w	ip, r3
 8022f72:	1203      	asrs	r3, r0, #8
 8022f74:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8022f78:	fb13 f30c 	smulbb	r3, r3, ip
 8022f7c:	fb05 3501 	mla	r5, r5, r1, r3
 8022f80:	10c3      	asrs	r3, r0, #3
 8022f82:	10d1      	asrs	r1, r2, #3
 8022f84:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8022f88:	00d2      	lsls	r2, r2, #3
 8022f8a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022f8e:	b2ad      	uxth	r5, r5
 8022f90:	fb13 f30c 	smulbb	r3, r3, ip
 8022f94:	b2d2      	uxtb	r2, r2
 8022f96:	fb01 3104 	mla	r1, r1, r4, r3
 8022f9a:	00c3      	lsls	r3, r0, #3
 8022f9c:	b2db      	uxtb	r3, r3
 8022f9e:	b289      	uxth	r1, r1
 8022fa0:	fb13 f30c 	smulbb	r3, r3, ip
 8022fa4:	fb02 3304 	mla	r3, r2, r4, r3
 8022fa8:	b29a      	uxth	r2, r3
 8022faa:	1c6b      	adds	r3, r5, #1
 8022fac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022fb0:	1c53      	adds	r3, r2, #1
 8022fb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022fb6:	1c4a      	adds	r2, r1, #1
 8022fb8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022fbc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022fc0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022fc4:	0949      	lsrs	r1, r1, #5
 8022fc6:	432b      	orrs	r3, r5
 8022fc8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022fcc:	430b      	orrs	r3, r1
 8022fce:	803b      	strh	r3, [r7, #0]
 8022fd0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022fd2:	3702      	adds	r7, #2
 8022fd4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8022fd6:	4413      	add	r3, r2
 8022fd8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8022fda:	9321      	str	r3, [sp, #132]	@ 0x84
 8022fdc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022fde:	441a      	add	r2, r3
 8022fe0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8022fe2:	3b01      	subs	r3, #1
 8022fe4:	9222      	str	r2, [sp, #136]	@ 0x88
 8022fe6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8022fe8:	e687      	b.n	8022cfa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022fea:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8022fec:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8022fee:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8022ff0:	4433      	add	r3, r6
 8022ff2:	9321      	str	r3, [sp, #132]	@ 0x84
 8022ff4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022ff6:	441c      	add	r4, r3
 8022ff8:	9b08      	ldr	r3, [sp, #32]
 8022ffa:	3b01      	subs	r3, #1
 8022ffc:	9422      	str	r4, [sp, #136]	@ 0x88
 8022ffe:	9308      	str	r3, [sp, #32]
 8023000:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023002:	3302      	adds	r3, #2
 8023004:	9309      	str	r3, [sp, #36]	@ 0x24
 8023006:	e656      	b.n	8022cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8023008:	d028      	beq.n	802305c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 802300a:	9b08      	ldr	r3, [sp, #32]
 802300c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802300e:	3b01      	subs	r3, #1
 8023010:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8023012:	fb00 5003 	mla	r0, r0, r3, r5
 8023016:	1400      	asrs	r0, r0, #16
 8023018:	f53f ae6a 	bmi.w	8022cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802301c:	3901      	subs	r1, #1
 802301e:	4288      	cmp	r0, r1
 8023020:	f6bf ae66 	bge.w	8022cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023024:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8023026:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8023028:	fb01 0303 	mla	r3, r1, r3, r0
 802302c:	141b      	asrs	r3, r3, #16
 802302e:	f53f ae5f 	bmi.w	8022cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023032:	3a01      	subs	r2, #1
 8023034:	4293      	cmp	r3, r2
 8023036:	f6bf ae5b 	bge.w	8022cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802303a:	9b08      	ldr	r3, [sp, #32]
 802303c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8023040:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8023044:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023046:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8023048:	2b00      	cmp	r3, #0
 802304a:	f300 8082 	bgt.w	8023152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 802304e:	9b08      	ldr	r3, [sp, #32]
 8023050:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023054:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023056:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802305a:	9309      	str	r3, [sp, #36]	@ 0x24
 802305c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802305e:	2b00      	cmp	r3, #0
 8023060:	f340 81ef 	ble.w	8023442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8023064:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023068:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802306a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802306e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023072:	eef0 6a62 	vmov.f32	s13, s5
 8023076:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802307a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802307e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023082:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8023086:	eef0 6a43 	vmov.f32	s13, s6
 802308a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802308e:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 8023092:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023096:	ee61 7a27 	vmul.f32	s15, s2, s15
 802309a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802309e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80230a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80230a6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80230aa:	ee12 2a90 	vmov	r2, s5
 80230ae:	eef0 2a47 	vmov.f32	s5, s14
 80230b2:	fb92 f3f3 	sdiv	r3, r2, r3
 80230b6:	ee13 2a10 	vmov	r2, s6
 80230ba:	9323      	str	r3, [sp, #140]	@ 0x8c
 80230bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80230be:	eeb0 3a67 	vmov.f32	s6, s15
 80230c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80230c6:	9324      	str	r3, [sp, #144]	@ 0x90
 80230c8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80230ca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80230cc:	3b01      	subs	r3, #1
 80230ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80230d0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80230d2:	bf08      	it	eq
 80230d4:	4613      	moveq	r3, r2
 80230d6:	9308      	str	r3, [sp, #32]
 80230d8:	e5df      	b.n	8022c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80230da:	fb08 f505 	mul.w	r5, r8, r5
 80230de:	fb09 5303 	mla	r3, r9, r3, r5
 80230e2:	e65f      	b.n	8022da4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 80230e4:	4681      	mov	r9, r0
 80230e6:	e686      	b.n	8022df6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80230e8:	f1c1 0210 	rsb	r2, r1, #16
 80230ec:	4341      	muls	r1, r0
 80230ee:	fb09 1902 	mla	r9, r9, r2, r1
 80230f2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80230f6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80230fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80230fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023102:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023106:	ea42 0909 	orr.w	r9, r2, r9
 802310a:	fa1f f289 	uxth.w	r2, r9
 802310e:	e71b      	b.n	8022f48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023110:	803a      	strh	r2, [r7, #0]
 8023112:	e75d      	b.n	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023114:	f115 0e01 	adds.w	lr, r5, #1
 8023118:	f53f af5a 	bmi.w	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802311c:	4572      	cmp	r2, lr
 802311e:	f6ff af57 	blt.w	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023122:	f110 0e01 	adds.w	lr, r0, #1
 8023126:	f53f af53 	bmi.w	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802312a:	4573      	cmp	r3, lr
 802312c:	f6ff af50 	blt.w	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023130:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8023132:	b21b      	sxth	r3, r3
 8023134:	b212      	sxth	r2, r2
 8023136:	9502      	str	r5, [sp, #8]
 8023138:	9301      	str	r3, [sp, #4]
 802313a:	9200      	str	r2, [sp, #0]
 802313c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8023140:	e9cd c405 	strd	ip, r4, [sp, #20]
 8023144:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8023148:	4639      	mov	r1, r7
 802314a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802314c:	f7ff fc02 	bl	8022954 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8023150:	e73e      	b.n	8022fd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023152:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023154:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023158:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802315a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802315e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023160:	fa1f fc82 	uxth.w	ip, r2
 8023164:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023168:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802316a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802316e:	141f      	asrs	r7, r3, #16
 8023170:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8023172:	141b      	asrs	r3, r3, #16
 8023174:	fb01 3707 	mla	r7, r1, r7, r3
 8023178:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802317a:	eb03 0a07 	add.w	sl, r3, r7
 802317e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023182:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8023186:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802318a:	b29b      	uxth	r3, r3
 802318c:	2d00      	cmp	r5, #0
 802318e:	f000 813d 	beq.w	802340c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 8023192:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023196:	eb0a 0b01 	add.w	fp, sl, r1
 802319a:	fa1f fa85 	uxth.w	sl, r5
 802319e:	940f      	str	r4, [sp, #60]	@ 0x3c
 80231a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80231a4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80231a8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80231ac:	eba0 000c 	sub.w	r0, r0, ip
 80231b0:	9410      	str	r4, [sp, #64]	@ 0x40
 80231b2:	fa1f fa8a 	uxth.w	sl, sl
 80231b6:	b280      	uxth	r0, r0
 80231b8:	eba3 030a 	sub.w	r3, r3, sl
 80231bc:	fb08 f000 	mul.w	r0, r8, r0
 80231c0:	b29b      	uxth	r3, r3
 80231c2:	fb09 0303 	mla	r3, r9, r3, r0
 80231c6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80231c8:	fb0a 3300 	mla	r3, sl, r0, r3
 80231cc:	fb0c 3304 	mla	r3, ip, r4, r3
 80231d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80231d4:	2b00      	cmp	r3, #0
 80231d6:	f000 810b 	beq.w	80233f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 80231da:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80231dc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80231e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80231e2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80231e6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80231ea:	f000 8114 	beq.w	8023416 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 80231ee:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 80231f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80231f6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80231fa:	fb0a fc0c 	mul.w	ip, sl, ip
 80231fe:	fb09 f707 	mul.w	r7, r9, r7
 8023202:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023206:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802320a:	f107 0b20 	add.w	fp, r7, #32
 802320e:	44cc      	add	ip, r9
 8023210:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023214:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023218:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802321c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023220:	ea4c 0909 	orr.w	r9, ip, r9
 8023224:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8023228:	8847      	ldrh	r7, [r0, #2]
 802322a:	d019      	beq.n	8023260 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 802322c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8023230:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023234:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023238:	fb0a fc0c 	mul.w	ip, sl, ip
 802323c:	fb08 f807 	mul.w	r8, r8, r7
 8023240:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023244:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8023248:	f108 0b20 	add.w	fp, r8, #32
 802324c:	44bc      	add	ip, r7
 802324e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023252:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023256:	0a3f      	lsrs	r7, r7, #8
 8023258:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802325c:	ea4c 0707 	orr.w	r7, ip, r7
 8023260:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023264:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023268:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802326c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8023270:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8023274:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023278:	ea4c 0909 	orr.w	r9, ip, r9
 802327c:	ea4a 0707 	orr.w	r7, sl, r7
 8023280:	2d00      	cmp	r5, #0
 8023282:	f000 80ca 	beq.w	802341a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 8023286:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802328a:	3901      	subs	r1, #1
 802328c:	0049      	lsls	r1, r1, #1
 802328e:	3102      	adds	r1, #2
 8023290:	eb00 0c01 	add.w	ip, r0, r1
 8023294:	5a41      	ldrh	r1, [r0, r1]
 8023296:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8023298:	28ff      	cmp	r0, #255	@ 0xff
 802329a:	d019      	beq.n	80232d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 802329c:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80232a0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80232a2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80232a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80232aa:	fb04 fa01 	mul.w	sl, r4, r1
 80232ae:	fb08 f800 	mul.w	r8, r8, r0
 80232b2:	f10a 0020 	add.w	r0, sl, #32
 80232b6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80232ba:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80232be:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80232c2:	4441      	add	r1, r8
 80232c4:	0a00      	lsrs	r0, r0, #8
 80232c6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80232ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80232ce:	4301      	orrs	r1, r0
 80232d0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80232d2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80232d6:	2cff      	cmp	r4, #255	@ 0xff
 80232d8:	d01a      	beq.n	8023310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 80232da:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80232de:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80232e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80232e6:	fb04 fa00 	mul.w	sl, r4, r0
 80232ea:	fb08 f80c 	mul.w	r8, r8, ip
 80232ee:	f10a 0c20 	add.w	ip, sl, #32
 80232f2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80232f6:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80232fa:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80232fe:	4440      	add	r0, r8
 8023300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023304:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023308:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802330c:	ea40 000c 	orr.w	r0, r0, ip
 8023310:	fb15 fc02 	smulbb	ip, r5, r2
 8023314:	f1c5 0810 	rsb	r8, r5, #16
 8023318:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802331c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023320:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023324:	eba8 0802 	sub.w	r8, r8, r2
 8023328:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802332c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023330:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023334:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023338:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802333c:	ea4a 0101 	orr.w	r1, sl, r1
 8023340:	437a      	muls	r2, r7
 8023342:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023346:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802334a:	fb09 2208 	mla	r2, r9, r8, r2
 802334e:	ea4b 0000 	orr.w	r0, fp, r0
 8023352:	fb05 2201 	mla	r2, r5, r1, r2
 8023356:	fb0c 2200 	mla	r2, ip, r0, r2
 802335a:	0d57      	lsrs	r7, r2, #21
 802335c:	0952      	lsrs	r2, r2, #5
 802335e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023362:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023366:	433a      	orrs	r2, r7
 8023368:	2bff      	cmp	r3, #255	@ 0xff
 802336a:	b292      	uxth	r2, r2
 802336c:	d102      	bne.n	8023374 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802336e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8023370:	29ff      	cmp	r1, #255	@ 0xff
 8023372:	d063      	beq.n	802343c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 8023374:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8023376:	1215      	asrs	r5, r2, #8
 8023378:	f8be 1000 	ldrh.w	r1, [lr]
 802337c:	4343      	muls	r3, r0
 802337e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8023380:	10cf      	asrs	r7, r1, #3
 8023382:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023386:	1c58      	adds	r0, r3, #1
 8023388:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802338c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8023390:	1208      	asrs	r0, r1, #8
 8023392:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8023396:	00c9      	lsls	r1, r1, #3
 8023398:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802339c:	b2db      	uxtb	r3, r3
 802339e:	b2c9      	uxtb	r1, r1
 80233a0:	fb10 f003 	smulbb	r0, r0, r3
 80233a4:	fb11 f103 	smulbb	r1, r1, r3
 80233a8:	fb05 0504 	mla	r5, r5, r4, r0
 80233ac:	10d0      	asrs	r0, r2, #3
 80233ae:	fb17 f703 	smulbb	r7, r7, r3
 80233b2:	00d2      	lsls	r2, r2, #3
 80233b4:	b2ad      	uxth	r5, r5
 80233b6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80233ba:	b2d2      	uxtb	r2, r2
 80233bc:	fb00 7004 	mla	r0, r0, r4, r7
 80233c0:	1c6b      	adds	r3, r5, #1
 80233c2:	fb02 1204 	mla	r2, r2, r4, r1
 80233c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80233ca:	b292      	uxth	r2, r2
 80233cc:	b280      	uxth	r0, r0
 80233ce:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80233d2:	1c57      	adds	r7, r2, #1
 80233d4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80233d8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80233dc:	433d      	orrs	r5, r7
 80233de:	1c47      	adds	r7, r0, #1
 80233e0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80233e4:	097f      	lsrs	r7, r7, #5
 80233e6:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80233ea:	433d      	orrs	r5, r7
 80233ec:	f8ae 5000 	strh.w	r5, [lr]
 80233f0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80233f2:	f10e 0e02 	add.w	lr, lr, #2
 80233f6:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80233f8:	4413      	add	r3, r2
 80233fa:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 80233fc:	9321      	str	r3, [sp, #132]	@ 0x84
 80233fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023400:	441a      	add	r2, r3
 8023402:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8023404:	3b01      	subs	r3, #1
 8023406:	9222      	str	r2, [sp, #136]	@ 0x88
 8023408:	9313      	str	r3, [sp, #76]	@ 0x4c
 802340a:	e61c      	b.n	8023046 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802340c:	fb08 f000 	mul.w	r0, r8, r0
 8023410:	fb09 0303 	mla	r3, r9, r3, r0
 8023414:	e6dc      	b.n	80231d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 8023416:	46b9      	mov	r9, r7
 8023418:	e704      	b.n	8023224 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802341a:	f1c2 0110 	rsb	r1, r2, #16
 802341e:	437a      	muls	r2, r7
 8023420:	fb09 2901 	mla	r9, r9, r1, r2
 8023424:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023428:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802342c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023430:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023434:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023438:	4302      	orrs	r2, r0
 802343a:	e795      	b.n	8023368 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 802343c:	f8ae 2000 	strh.w	r2, [lr]
 8023440:	e7d6      	b.n	80233f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 8023442:	b017      	add	sp, #92	@ 0x5c
 8023444:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8023448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802344c:	b085      	sub	sp, #20
 802344e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8023452:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8023456:	2800      	cmp	r0, #0
 8023458:	9103      	str	r1, [sp, #12]
 802345a:	fb00 7406 	mla	r4, r0, r6, r7
 802345e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8023462:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8023466:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 802346a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 802346e:	eb02 0904 	add.w	r9, r2, r4
 8023472:	9501      	str	r5, [sp, #4]
 8023474:	f2c0 8141 	blt.w	80236fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8023478:	4583      	cmp	fp, r0
 802347a:	f340 813e 	ble.w	80236fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 802347e:	2f00      	cmp	r7, #0
 8023480:	f2c0 8137 	blt.w	80236f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8023484:	42be      	cmp	r6, r7
 8023486:	f340 8134 	ble.w	80236f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 802348a:	f812 c004 	ldrb.w	ip, [r2, r4]
 802348e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8023492:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8023496:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802349a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802349e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80234a2:	4355      	muls	r5, r2
 80234a4:	fb0c f203 	mul.w	r2, ip, r3
 80234a8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80234ac:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 80234b0:	441d      	add	r5, r3
 80234b2:	f102 0320 	add.w	r3, r2, #32
 80234b6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80234ba:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80234be:	0a1b      	lsrs	r3, r3, #8
 80234c0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80234c4:	431c      	orrs	r4, r3
 80234c6:	1c7b      	adds	r3, r7, #1
 80234c8:	f100 811c 	bmi.w	8023704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80234cc:	429e      	cmp	r6, r3
 80234ce:	f340 8119 	ble.w	8023704 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 80234d2:	2900      	cmp	r1, #0
 80234d4:	f000 8119 	beq.w	802370a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 80234d8:	9a01      	ldr	r2, [sp, #4]
 80234da:	f899 3001 	ldrb.w	r3, [r9, #1]
 80234de:	8855      	ldrh	r5, [r2, #2]
 80234e0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80234e4:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 80234e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80234ec:	fb08 f802 	mul.w	r8, r8, r2
 80234f0:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 80234f4:	435d      	muls	r5, r3
 80234f6:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 80234fa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80234fe:	44d0      	add	r8, sl
 8023500:	f105 0a20 	add.w	sl, r5, #32
 8023504:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8023508:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802350c:	0a2d      	lsrs	r5, r5, #8
 802350e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023512:	432a      	orrs	r2, r5
 8023514:	3001      	adds	r0, #1
 8023516:	f100 80fe 	bmi.w	8023716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802351a:	4583      	cmp	fp, r0
 802351c:	f340 80fb 	ble.w	8023716 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8023520:	f1be 0f00 	cmp.w	lr, #0
 8023524:	f000 80fc 	beq.w	8023720 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8023528:	2f00      	cmp	r7, #0
 802352a:	f2c0 80f1 	blt.w	8023710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802352e:	42be      	cmp	r6, r7
 8023530:	f340 80ee 	ble.w	8023710 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8023534:	9801      	ldr	r0, [sp, #4]
 8023536:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802353a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802353e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8023542:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023546:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 802354a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 802354e:	fb0a fa00 	mul.w	sl, sl, r0
 8023552:	fb05 f808 	mul.w	r8, r5, r8
 8023556:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802355a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802355e:	4482      	add	sl, r0
 8023560:	f108 0020 	add.w	r0, r8, #32
 8023564:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8023568:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802356c:	0a00      	lsrs	r0, r0, #8
 802356e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023572:	ea4b 0b00 	orr.w	fp, fp, r0
 8023576:	3701      	adds	r7, #1
 8023578:	f100 80d7 	bmi.w	802372a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802357c:	42be      	cmp	r6, r7
 802357e:	f340 80d4 	ble.w	802372a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8023582:	2900      	cmp	r1, #0
 8023584:	f000 80d4 	beq.w	8023730 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8023588:	3601      	adds	r6, #1
 802358a:	9801      	ldr	r0, [sp, #4]
 802358c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8023590:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8023594:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8023598:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 802359c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80235a0:	fb09 f906 	mul.w	r9, r9, r6
 80235a4:	fb07 f800 	mul.w	r8, r7, r0
 80235a8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 80235ac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80235b0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 80235b4:	44d1      	add	r9, sl
 80235b6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80235ba:	f108 0020 	add.w	r0, r8, #32
 80235be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80235c2:	0a00      	lsrs	r0, r0, #8
 80235c4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80235c8:	4330      	orrs	r0, r6
 80235ca:	b28e      	uxth	r6, r1
 80235cc:	fa1f f98e 	uxth.w	r9, lr
 80235d0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80235d4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 80235d8:	fb06 f809 	mul.w	r8, r6, r9
 80235dc:	0136      	lsls	r6, r6, #4
 80235de:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80235e2:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80235e6:	9601      	str	r6, [sp, #4]
 80235e8:	ea4a 0404 	orr.w	r4, sl, r4
 80235ec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80235f0:	fa1f f689 	uxth.w	r6, r9
 80235f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80235f8:	fb11 f90e 	smulbb	r9, r1, lr
 80235fc:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023600:	9602      	str	r6, [sp, #8]
 8023602:	4626      	mov	r6, r4
 8023604:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8023608:	f1ce 0410 	rsb	r4, lr, #16
 802360c:	ea4a 0202 	orr.w	r2, sl, r2
 8023610:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8023614:	1a64      	subs	r4, r4, r1
 8023616:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802361a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802361e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023622:	434a      	muls	r2, r1
 8023624:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8023628:	ea4a 0000 	orr.w	r0, sl, r0
 802362c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8023630:	fb04 2406 	mla	r4, r4, r6, r2
 8023634:	9903      	ldr	r1, [sp, #12]
 8023636:	fb09 4200 	mla	r2, r9, r0, r4
 802363a:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802363e:	9801      	ldr	r0, [sp, #4]
 8023640:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8023644:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8023648:	8809      	ldrh	r1, [r1, #0]
 802364a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 802364e:	ea44 0b0b 	orr.w	fp, r4, fp
 8023652:	9c02      	ldr	r4, [sp, #8]
 8023654:	1b00      	subs	r0, r0, r4
 8023656:	9c01      	ldr	r4, [sp, #4]
 8023658:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802365c:	eba4 0608 	sub.w	r6, r4, r8
 8023660:	b280      	uxth	r0, r0
 8023662:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023666:	b2b6      	uxth	r6, r6
 8023668:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802366c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023670:	4373      	muls	r3, r6
 8023672:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8023676:	fb0c 3300 	mla	r3, ip, r0, r3
 802367a:	9802      	ldr	r0, [sp, #8]
 802367c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023680:	fb00 3505 	mla	r5, r0, r5, r3
 8023684:	120b      	asrs	r3, r1, #8
 8023686:	10c8      	asrs	r0, r1, #3
 8023688:	fb08 5707 	mla	r7, r8, r7, r5
 802368c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8023690:	00c9      	lsls	r1, r1, #3
 8023692:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023696:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802369a:	fa1f f28e 	uxth.w	r2, lr
 802369e:	b2c9      	uxtb	r1, r1
 80236a0:	b2ff      	uxtb	r7, r7
 80236a2:	437b      	muls	r3, r7
 80236a4:	4378      	muls	r0, r7
 80236a6:	434f      	muls	r7, r1
 80236a8:	1c59      	adds	r1, r3, #1
 80236aa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80236ae:	1213      	asrs	r3, r2, #8
 80236b0:	f023 0307 	bic.w	r3, r3, #7
 80236b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80236b8:	1c41      	adds	r1, r0, #1
 80236ba:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80236be:	10d1      	asrs	r1, r2, #3
 80236c0:	021b      	lsls	r3, r3, #8
 80236c2:	f021 0103 	bic.w	r1, r1, #3
 80236c6:	00d2      	lsls	r2, r2, #3
 80236c8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80236cc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80236d0:	00c9      	lsls	r1, r1, #3
 80236d2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80236d6:	430b      	orrs	r3, r1
 80236d8:	1c79      	adds	r1, r7, #1
 80236da:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80236de:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80236e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80236e6:	431a      	orrs	r2, r3
 80236e8:	9b03      	ldr	r3, [sp, #12]
 80236ea:	801a      	strh	r2, [r3, #0]
 80236ec:	b005      	add	sp, #20
 80236ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80236f2:	f04f 0c00 	mov.w	ip, #0
 80236f6:	4664      	mov	r4, ip
 80236f8:	e6e5      	b.n	80234c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80236fa:	2300      	movs	r3, #0
 80236fc:	469c      	mov	ip, r3
 80236fe:	461a      	mov	r2, r3
 8023700:	461c      	mov	r4, r3
 8023702:	e707      	b.n	8023514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023704:	2300      	movs	r3, #0
 8023706:	461a      	mov	r2, r3
 8023708:	e704      	b.n	8023514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802370a:	460b      	mov	r3, r1
 802370c:	460a      	mov	r2, r1
 802370e:	e701      	b.n	8023514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8023710:	2500      	movs	r5, #0
 8023712:	46ab      	mov	fp, r5
 8023714:	e72f      	b.n	8023576 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8023716:	2700      	movs	r7, #0
 8023718:	463d      	mov	r5, r7
 802371a:	4638      	mov	r0, r7
 802371c:	46bb      	mov	fp, r7
 802371e:	e754      	b.n	80235ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023720:	4677      	mov	r7, lr
 8023722:	4675      	mov	r5, lr
 8023724:	4670      	mov	r0, lr
 8023726:	46f3      	mov	fp, lr
 8023728:	e74f      	b.n	80235ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802372a:	2700      	movs	r7, #0
 802372c:	4638      	mov	r0, r7
 802372e:	e74c      	b.n	80235ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8023730:	460f      	mov	r7, r1
 8023732:	4608      	mov	r0, r1
 8023734:	e749      	b.n	80235ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08023738 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802373c:	b093      	sub	sp, #76	@ 0x4c
 802373e:	9210      	str	r2, [sp, #64]	@ 0x40
 8023740:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8023742:	9011      	str	r0, [sp, #68]	@ 0x44
 8023744:	910e      	str	r1, [sp, #56]	@ 0x38
 8023746:	6850      	ldr	r0, [r2, #4]
 8023748:	9306      	str	r3, [sp, #24]
 802374a:	6812      	ldr	r2, [r2, #0]
 802374c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8023750:	fb00 1303 	mla	r3, r0, r3, r1
 8023754:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023758:	9307      	str	r3, [sp, #28]
 802375a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802375c:	681b      	ldr	r3, [r3, #0]
 802375e:	9308      	str	r3, [sp, #32]
 8023760:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023762:	685b      	ldr	r3, [r3, #4]
 8023764:	9309      	str	r3, [sp, #36]	@ 0x24
 8023766:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023768:	2b00      	cmp	r3, #0
 802376a:	dc03      	bgt.n	8023774 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802376c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802376e:	2b00      	cmp	r3, #0
 8023770:	f340 83b6 	ble.w	8023ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023774:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023776:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802377a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802377e:	1e48      	subs	r0, r1, #1
 8023780:	1e55      	subs	r5, r2, #1
 8023782:	9b06      	ldr	r3, [sp, #24]
 8023784:	2b00      	cmp	r3, #0
 8023786:	f340 8165 	ble.w	8023a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802378a:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 802378c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802378e:	1436      	asrs	r6, r6, #16
 8023790:	ea4f 4323 	mov.w	r3, r3, asr #16
 8023794:	d406      	bmi.n	80237a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8023796:	4286      	cmp	r6, r0
 8023798:	da04      	bge.n	80237a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802379a:	2b00      	cmp	r3, #0
 802379c:	db02      	blt.n	80237a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802379e:	42ab      	cmp	r3, r5
 80237a0:	f2c0 8159 	blt.w	8023a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80237a4:	3601      	adds	r6, #1
 80237a6:	f100 8146 	bmi.w	8023a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80237aa:	42b1      	cmp	r1, r6
 80237ac:	f2c0 8143 	blt.w	8023a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80237b0:	3301      	adds	r3, #1
 80237b2:	f100 8140 	bmi.w	8023a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80237b6:	429a      	cmp	r2, r3
 80237b8:	f2c0 813d 	blt.w	8023a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 80237bc:	9b06      	ldr	r3, [sp, #24]
 80237be:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80237c2:	9f07      	ldr	r7, [sp, #28]
 80237c4:	930f      	str	r3, [sp, #60]	@ 0x3c
 80237c6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80237c8:	2b00      	cmp	r3, #0
 80237ca:	f340 8166 	ble.w	8023a9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80237ce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80237d0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80237d2:	1418      	asrs	r0, r3, #16
 80237d4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80237d6:	142d      	asrs	r5, r5, #16
 80237d8:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80237dc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 80237de:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80237e2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80237e4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80237e8:	f100 81f0 	bmi.w	8023bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80237ec:	f102 3eff 	add.w	lr, r2, #4294967295
 80237f0:	4575      	cmp	r5, lr
 80237f2:	f280 81eb 	bge.w	8023bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80237f6:	2800      	cmp	r0, #0
 80237f8:	f2c0 81e8 	blt.w	8023bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80237fc:	f103 3eff 	add.w	lr, r3, #4294967295
 8023800:	4570      	cmp	r0, lr
 8023802:	f280 81e3 	bge.w	8023bcc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8023806:	b212      	sxth	r2, r2
 8023808:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802380a:	fa1f fe81 	uxth.w	lr, r1
 802380e:	fb00 5002 	mla	r0, r0, r2, r5
 8023812:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8023816:	eb03 0a00 	add.w	sl, r3, r0
 802381a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802381e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8023822:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023826:	b29b      	uxth	r3, r3
 8023828:	f1bc 0f00 	cmp.w	ip, #0
 802382c:	f000 817b 	beq.w	8023b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8023830:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8023834:	eb0a 0b02 	add.w	fp, sl, r2
 8023838:	fa1f fa8c 	uxth.w	sl, ip
 802383c:	940a      	str	r4, [sp, #40]	@ 0x28
 802383e:	fb0a fe0e 	mul.w	lr, sl, lr
 8023842:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023846:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802384a:	eba5 050e 	sub.w	r5, r5, lr
 802384e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8023850:	fa1f fa8a 	uxth.w	sl, sl
 8023854:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8023856:	b2ad      	uxth	r5, r5
 8023858:	eba3 030a 	sub.w	r3, r3, sl
 802385c:	fb08 f505 	mul.w	r5, r8, r5
 8023860:	b29b      	uxth	r3, r3
 8023862:	fb09 5303 	mla	r3, r9, r3, r5
 8023866:	fb0a 3304 	mla	r3, sl, r4, r3
 802386a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802386c:	fb0e 3304 	mla	r3, lr, r4, r3
 8023870:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023874:	2b00      	cmp	r3, #0
 8023876:	f000 80d1 	beq.w	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 802387a:	9c08      	ldr	r4, [sp, #32]
 802387c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023880:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8023884:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8023888:	f000 8152 	beq.w	8023b30 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802388c:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8023890:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023894:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023898:	fb0a fe0e 	mul.w	lr, sl, lr
 802389c:	fb09 f000 	mul.w	r0, r9, r0
 80238a0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80238a4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80238a8:	f100 0b20 	add.w	fp, r0, #32
 80238ac:	44ce      	add	lr, r9
 80238ae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80238b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80238b6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80238ba:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80238be:	ea4e 0909 	orr.w	r9, lr, r9
 80238c2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 80238c6:	8868      	ldrh	r0, [r5, #2]
 80238c8:	d019      	beq.n	80238fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80238ca:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 80238ce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80238d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80238d6:	fb0a fe0e 	mul.w	lr, sl, lr
 80238da:	fb08 f800 	mul.w	r8, r8, r0
 80238de:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80238e2:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 80238e6:	f108 0b20 	add.w	fp, r8, #32
 80238ea:	4486      	add	lr, r0
 80238ec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80238f0:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80238f4:	0a00      	lsrs	r0, r0, #8
 80238f6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80238fa:	ea4e 0000 	orr.w	r0, lr, r0
 80238fe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8023902:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023906:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802390a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802390e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8023912:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023916:	ea4e 0909 	orr.w	r9, lr, r9
 802391a:	ea4a 0000 	orr.w	r0, sl, r0
 802391e:	f1bc 0f00 	cmp.w	ip, #0
 8023922:	f000 8107 	beq.w	8023b34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 8023926:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 802392a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 802392c:	3a01      	subs	r2, #1
 802392e:	2cff      	cmp	r4, #255	@ 0xff
 8023930:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8023934:	f102 0202 	add.w	r2, r2, #2
 8023938:	eb05 0e02 	add.w	lr, r5, r2
 802393c:	5aaa      	ldrh	r2, [r5, r2]
 802393e:	d018      	beq.n	8023972 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8023940:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8023944:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023948:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802394c:	fb04 fa02 	mul.w	sl, r4, r2
 8023950:	fb08 f805 	mul.w	r8, r8, r5
 8023954:	f10a 0520 	add.w	r5, sl, #32
 8023958:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802395c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023960:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8023964:	4442      	add	r2, r8
 8023966:	0a2d      	lsrs	r5, r5, #8
 8023968:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802396c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023970:	432a      	orrs	r2, r5
 8023972:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8023974:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8023978:	2cff      	cmp	r4, #255	@ 0xff
 802397a:	d01a      	beq.n	80239b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 802397c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8023980:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8023984:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023988:	fb04 fa05 	mul.w	sl, r4, r5
 802398c:	fb08 f80e 	mul.w	r8, r8, lr
 8023990:	f10a 0e20 	add.w	lr, sl, #32
 8023994:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8023998:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802399c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80239a0:	4445      	add	r5, r8
 80239a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80239a6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80239aa:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80239ae:	ea45 050e 	orr.w	r5, r5, lr
 80239b2:	fb1c fe01 	smulbb	lr, ip, r1
 80239b6:	f1cc 0810 	rsb	r8, ip, #16
 80239ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80239be:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80239c2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80239c6:	eba8 0801 	sub.w	r8, r8, r1
 80239ca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80239ce:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80239d2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80239d6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 80239da:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80239de:	ea4a 0202 	orr.w	r2, sl, r2
 80239e2:	4341      	muls	r1, r0
 80239e4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80239e8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80239ec:	fb09 1108 	mla	r1, r9, r8, r1
 80239f0:	ea4b 0505 	orr.w	r5, fp, r5
 80239f4:	fb0c 1102 	mla	r1, ip, r2, r1
 80239f8:	fb0e 1e05 	mla	lr, lr, r5, r1
 80239fc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8023a00:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8023a04:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023a08:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8023a0c:	ea42 0e0e 	orr.w	lr, r2, lr
 8023a10:	fa1f f28e 	uxth.w	r2, lr
 8023a14:	2bff      	cmp	r3, #255	@ 0xff
 8023a16:	f040 80a1 	bne.w	8023b5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8023a1a:	803a      	strh	r2, [r7, #0]
 8023a1c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8023a1e:	3702      	adds	r7, #2
 8023a20:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8023a22:	4413      	add	r3, r2
 8023a24:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8023a26:	931d      	str	r3, [sp, #116]	@ 0x74
 8023a28:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023a2a:	441a      	add	r2, r3
 8023a2c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8023a2e:	3b01      	subs	r3, #1
 8023a30:	921e      	str	r2, [sp, #120]	@ 0x78
 8023a32:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023a34:	e6c7      	b.n	80237c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a36:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8023a38:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8023a3a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8023a3c:	4433      	add	r3, r6
 8023a3e:	931d      	str	r3, [sp, #116]	@ 0x74
 8023a40:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023a42:	441c      	add	r4, r3
 8023a44:	9b06      	ldr	r3, [sp, #24]
 8023a46:	3b01      	subs	r3, #1
 8023a48:	941e      	str	r4, [sp, #120]	@ 0x78
 8023a4a:	9306      	str	r3, [sp, #24]
 8023a4c:	9b07      	ldr	r3, [sp, #28]
 8023a4e:	3302      	adds	r3, #2
 8023a50:	9307      	str	r3, [sp, #28]
 8023a52:	e696      	b.n	8023782 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023a54:	d028      	beq.n	8023aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8023a56:	9b06      	ldr	r3, [sp, #24]
 8023a58:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8023a5a:	3b01      	subs	r3, #1
 8023a5c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8023a5e:	fb00 5003 	mla	r0, r0, r3, r5
 8023a62:	1400      	asrs	r0, r0, #16
 8023a64:	f53f aeaa 	bmi.w	80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023a68:	3901      	subs	r1, #1
 8023a6a:	4288      	cmp	r0, r1
 8023a6c:	f6bf aea6 	bge.w	80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023a70:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8023a72:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8023a74:	fb01 0303 	mla	r3, r1, r3, r0
 8023a78:	141b      	asrs	r3, r3, #16
 8023a7a:	f53f ae9f 	bmi.w	80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023a7e:	3a01      	subs	r2, #1
 8023a80:	4293      	cmp	r3, r2
 8023a82:	f6bf ae9b 	bge.w	80237bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8023a86:	9b06      	ldr	r3, [sp, #24]
 8023a88:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8023a8c:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8023a90:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023a92:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8023a94:	2b00      	cmp	r3, #0
 8023a96:	f300 80b6 	bgt.w	8023c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8023a9a:	9b06      	ldr	r3, [sp, #24]
 8023a9c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8023aa0:	9b07      	ldr	r3, [sp, #28]
 8023aa2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8023aa6:	9307      	str	r3, [sp, #28]
 8023aa8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023aaa:	2b00      	cmp	r3, #0
 8023aac:	f340 8218 	ble.w	8023ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8023ab0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023ab4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023ab6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023aba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023abe:	eef0 6a62 	vmov.f32	s13, s5
 8023ac2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023ac6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023aca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ace:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8023ad2:	eef0 6a43 	vmov.f32	s13, s6
 8023ad6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023ada:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8023ade:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023ae2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023ae6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023aea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023aee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023af2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023af6:	ee12 2a90 	vmov	r2, s5
 8023afa:	eef0 2a47 	vmov.f32	s5, s14
 8023afe:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b02:	ee13 2a10 	vmov	r2, s6
 8023b06:	931f      	str	r3, [sp, #124]	@ 0x7c
 8023b08:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023b0a:	eeb0 3a67 	vmov.f32	s6, s15
 8023b0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023b12:	9320      	str	r3, [sp, #128]	@ 0x80
 8023b14:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8023b16:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8023b18:	3b01      	subs	r3, #1
 8023b1a:	930e      	str	r3, [sp, #56]	@ 0x38
 8023b1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023b1e:	bf08      	it	eq
 8023b20:	4613      	moveq	r3, r2
 8023b22:	9306      	str	r3, [sp, #24]
 8023b24:	e61f      	b.n	8023766 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8023b26:	fb08 f505 	mul.w	r5, r8, r5
 8023b2a:	fb09 5303 	mla	r3, r9, r3, r5
 8023b2e:	e69f      	b.n	8023870 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8023b30:	4681      	mov	r9, r0
 8023b32:	e6c6      	b.n	80238c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8023b34:	f1c1 0210 	rsb	r2, r1, #16
 8023b38:	4341      	muls	r1, r0
 8023b3a:	fb09 1902 	mla	r9, r9, r2, r1
 8023b3e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023b42:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8023b46:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023b4a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023b4e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023b52:	ea42 0909 	orr.w	r9, r2, r9
 8023b56:	fa1f f289 	uxth.w	r2, r9
 8023b5a:	e75b      	b.n	8023a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 8023b5c:	f8b7 c000 	ldrh.w	ip, [r7]
 8023b60:	43db      	mvns	r3, r3
 8023b62:	ea4f 202c 	mov.w	r0, ip, asr #8
 8023b66:	fa5f fe83 	uxtb.w	lr, r3
 8023b6a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8023b6e:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8023b72:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8023b76:	fb00 f00e 	mul.w	r0, r0, lr
 8023b7a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023b7e:	b2db      	uxtb	r3, r3
 8023b80:	1c41      	adds	r1, r0, #1
 8023b82:	fb05 f50e 	mul.w	r5, r5, lr
 8023b86:	fb03 f30e 	mul.w	r3, r3, lr
 8023b8a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023b8e:	1211      	asrs	r1, r2, #8
 8023b90:	f021 0107 	bic.w	r1, r1, #7
 8023b94:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8023b98:	48d3      	ldr	r0, [pc, #844]	@ (8023ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8023b9a:	b2c9      	uxtb	r1, r1
 8023b9c:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8023ba0:	1c69      	adds	r1, r5, #1
 8023ba2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8023ba6:	10d1      	asrs	r1, r2, #3
 8023ba8:	00d2      	lsls	r2, r2, #3
 8023baa:	f021 0103 	bic.w	r1, r1, #3
 8023bae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023bb2:	00c9      	lsls	r1, r1, #3
 8023bb4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8023bb8:	4301      	orrs	r1, r0
 8023bba:	1c58      	adds	r0, r3, #1
 8023bbc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8023bc0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023bc4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8023bc8:	430a      	orrs	r2, r1
 8023bca:	e726      	b.n	8023a1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8023bcc:	f115 0e01 	adds.w	lr, r5, #1
 8023bd0:	f53f af24 	bmi.w	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023bd4:	4572      	cmp	r2, lr
 8023bd6:	f6ff af21 	blt.w	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023bda:	f110 0e01 	adds.w	lr, r0, #1
 8023bde:	f53f af1d 	bmi.w	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023be2:	4573      	cmp	r3, lr
 8023be4:	f6ff af1a 	blt.w	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023be8:	b21b      	sxth	r3, r3
 8023bea:	b212      	sxth	r2, r2
 8023bec:	9301      	str	r3, [sp, #4]
 8023bee:	9200      	str	r2, [sp, #0]
 8023bf0:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8023bf4:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8023bf8:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8023bfc:	4639      	mov	r1, r7
 8023bfe:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8023c00:	f7ff fc22 	bl	8023448 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8023c04:	e70a      	b.n	8023a1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8023c06:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8023c08:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8023c0c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8023c0e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8023c12:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023c14:	fa1f fc82 	uxth.w	ip, r2
 8023c18:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023c1c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8023c1e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8023c22:	141f      	asrs	r7, r3, #16
 8023c24:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8023c26:	141b      	asrs	r3, r3, #16
 8023c28:	fb01 3707 	mla	r7, r1, r7, r3
 8023c2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8023c2e:	eb03 0a07 	add.w	sl, r3, r7
 8023c32:	f813 9007 	ldrb.w	r9, [r3, r7]
 8023c36:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8023c3a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8023c3e:	b29b      	uxth	r3, r3
 8023c40:	2d00      	cmp	r5, #0
 8023c42:	f000 80fe 	beq.w	8023e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8023c46:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8023c4a:	eb0a 0b01 	add.w	fp, sl, r1
 8023c4e:	fa1f fa85 	uxth.w	sl, r5
 8023c52:	940c      	str	r4, [sp, #48]	@ 0x30
 8023c54:	fb0a fc0c 	mul.w	ip, sl, ip
 8023c58:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8023c5c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8023c60:	eba0 000c 	sub.w	r0, r0, ip
 8023c64:	940d      	str	r4, [sp, #52]	@ 0x34
 8023c66:	fa1f fa8a 	uxth.w	sl, sl
 8023c6a:	b280      	uxth	r0, r0
 8023c6c:	eba3 030a 	sub.w	r3, r3, sl
 8023c70:	fb08 f000 	mul.w	r0, r8, r0
 8023c74:	b29b      	uxth	r3, r3
 8023c76:	fb09 0303 	mla	r3, r9, r3, r0
 8023c7a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8023c7c:	fb0a 3300 	mla	r3, sl, r0, r3
 8023c80:	fb0c 3304 	mla	r3, ip, r4, r3
 8023c84:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023c88:	2b00      	cmp	r3, #0
 8023c8a:	f000 80cc 	beq.w	8023e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8023c8e:	9808      	ldr	r0, [sp, #32]
 8023c90:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8023c94:	9c08      	ldr	r4, [sp, #32]
 8023c96:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8023c9a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8023c9e:	f000 80d5 	beq.w	8023e4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8023ca2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8023ca6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8023caa:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023cae:	fb0a fc0c 	mul.w	ip, sl, ip
 8023cb2:	fb09 f707 	mul.w	r7, r9, r7
 8023cb6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8023cba:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8023cbe:	f107 0b20 	add.w	fp, r7, #32
 8023cc2:	44cc      	add	ip, r9
 8023cc4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8023cc8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023ccc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023cd0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8023cd4:	ea4c 0909 	orr.w	r9, ip, r9
 8023cd8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8023cdc:	8847      	ldrh	r7, [r0, #2]
 8023cde:	d019      	beq.n	8023d14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 8023ce0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8023ce4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8023ce8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023cec:	fb0a fc0c 	mul.w	ip, sl, ip
 8023cf0:	fb08 f807 	mul.w	r8, r8, r7
 8023cf4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8023cf8:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8023cfc:	f108 0b20 	add.w	fp, r8, #32
 8023d00:	44bc      	add	ip, r7
 8023d02:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8023d06:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8023d0a:	0a3f      	lsrs	r7, r7, #8
 8023d0c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023d10:	ea4c 0707 	orr.w	r7, ip, r7
 8023d14:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8023d18:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8023d1c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8023d20:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8023d24:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8023d28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023d2c:	ea4c 0909 	orr.w	r9, ip, r9
 8023d30:	ea4a 0707 	orr.w	r7, sl, r7
 8023d34:	2d00      	cmp	r5, #0
 8023d36:	f000 808b 	beq.w	8023e50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 8023d3a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8023d3e:	3901      	subs	r1, #1
 8023d40:	0049      	lsls	r1, r1, #1
 8023d42:	3102      	adds	r1, #2
 8023d44:	eb00 0c01 	add.w	ip, r0, r1
 8023d48:	5a41      	ldrh	r1, [r0, r1]
 8023d4a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8023d4c:	28ff      	cmp	r0, #255	@ 0xff
 8023d4e:	d019      	beq.n	8023d84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8023d50:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8023d54:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8023d56:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8023d5a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023d5e:	fb04 fa01 	mul.w	sl, r4, r1
 8023d62:	fb08 f800 	mul.w	r8, r8, r0
 8023d66:	f10a 0020 	add.w	r0, sl, #32
 8023d6a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8023d6e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023d72:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8023d76:	4441      	add	r1, r8
 8023d78:	0a00      	lsrs	r0, r0, #8
 8023d7a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8023d7e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023d82:	4301      	orrs	r1, r0
 8023d84:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8023d86:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8023d8a:	2cff      	cmp	r4, #255	@ 0xff
 8023d8c:	d01a      	beq.n	8023dc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 8023d8e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8023d92:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023d96:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8023d9a:	fb04 fa00 	mul.w	sl, r4, r0
 8023d9e:	fb08 f80c 	mul.w	r8, r8, ip
 8023da2:	f10a 0c20 	add.w	ip, sl, #32
 8023da6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8023daa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8023dae:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8023db2:	4440      	add	r0, r8
 8023db4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023db8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8023dbc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8023dc0:	ea40 000c 	orr.w	r0, r0, ip
 8023dc4:	fb15 fc02 	smulbb	ip, r5, r2
 8023dc8:	f1c5 0810 	rsb	r8, r5, #16
 8023dcc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8023dd0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8023dd4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8023dd8:	eba8 0802 	sub.w	r8, r8, r2
 8023ddc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8023de0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8023de4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8023de8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8023dec:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8023df0:	ea4a 0101 	orr.w	r1, sl, r1
 8023df4:	437a      	muls	r2, r7
 8023df6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8023dfa:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8023dfe:	fb09 2208 	mla	r2, r9, r8, r2
 8023e02:	ea4b 0000 	orr.w	r0, fp, r0
 8023e06:	fb05 2201 	mla	r2, r5, r1, r2
 8023e0a:	fb0c 2200 	mla	r2, ip, r0, r2
 8023e0e:	0d57      	lsrs	r7, r2, #21
 8023e10:	0952      	lsrs	r2, r2, #5
 8023e12:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8023e16:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023e1a:	433a      	orrs	r2, r7
 8023e1c:	2bff      	cmp	r3, #255	@ 0xff
 8023e1e:	b292      	uxth	r2, r2
 8023e20:	d127      	bne.n	8023e72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 8023e22:	f8ae 2000 	strh.w	r2, [lr]
 8023e26:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8023e28:	f10e 0e02 	add.w	lr, lr, #2
 8023e2c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8023e2e:	4413      	add	r3, r2
 8023e30:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8023e32:	931d      	str	r3, [sp, #116]	@ 0x74
 8023e34:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8023e36:	441a      	add	r2, r3
 8023e38:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8023e3a:	3b01      	subs	r3, #1
 8023e3c:	921e      	str	r2, [sp, #120]	@ 0x78
 8023e3e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023e40:	e627      	b.n	8023a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023e42:	fb08 f000 	mul.w	r0, r8, r0
 8023e46:	fb09 0303 	mla	r3, r9, r3, r0
 8023e4a:	e71b      	b.n	8023c84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 8023e4c:	46b9      	mov	r9, r7
 8023e4e:	e743      	b.n	8023cd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 8023e50:	f1c2 0110 	rsb	r1, r2, #16
 8023e54:	437a      	muls	r2, r7
 8023e56:	fb09 2901 	mla	r9, r9, r1, r2
 8023e5a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8023e5e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8023e62:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8023e66:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023e6a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023e6e:	4302      	orrs	r2, r0
 8023e70:	e7d4      	b.n	8023e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 8023e72:	f8be 7000 	ldrh.w	r7, [lr]
 8023e76:	43db      	mvns	r3, r3
 8023e78:	4c1b      	ldr	r4, [pc, #108]	@ (8023ee8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8023e7a:	1238      	asrs	r0, r7, #8
 8023e7c:	fa5f fc83 	uxtb.w	ip, r3
 8023e80:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8023e84:	10fd      	asrs	r5, r7, #3
 8023e86:	00fb      	lsls	r3, r7, #3
 8023e88:	fb00 f00c 	mul.w	r0, r0, ip
 8023e8c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8023e90:	b2db      	uxtb	r3, r3
 8023e92:	fb05 f10c 	mul.w	r1, r5, ip
 8023e96:	1c45      	adds	r5, r0, #1
 8023e98:	fb03 f30c 	mul.w	r3, r3, ip
 8023e9c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023ea0:	1215      	asrs	r5, r2, #8
 8023ea2:	f025 0507 	bic.w	r5, r5, #7
 8023ea6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8023eaa:	1c4d      	adds	r5, r1, #1
 8023eac:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8023eb0:	10d1      	asrs	r1, r2, #3
 8023eb2:	b2c0      	uxtb	r0, r0
 8023eb4:	f021 0103 	bic.w	r1, r1, #3
 8023eb8:	00d2      	lsls	r2, r2, #3
 8023eba:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8023ebe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8023ec2:	00c9      	lsls	r1, r1, #3
 8023ec4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8023ec8:	4308      	orrs	r0, r1
 8023eca:	1c59      	adds	r1, r3, #1
 8023ecc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023ed0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8023ed4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8023ed8:	4318      	orrs	r0, r3
 8023eda:	f8ae 0000 	strh.w	r0, [lr]
 8023ede:	e7a2      	b.n	8023e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8023ee0:	b013      	add	sp, #76	@ 0x4c
 8023ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ee6:	bf00      	nop
 8023ee8:	fffff800 	.word	0xfffff800

08023eec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8023eec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023ef0:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8023ef4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8023ef8:	fb05 4c03 	mla	ip, r5, r3, r4
 8023efc:	2d00      	cmp	r5, #0
 8023efe:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8023f02:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8023f06:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8023f0a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 8023f0e:	8808      	ldrh	r0, [r1, #0]
 8023f10:	f2c0 80a7 	blt.w	8024062 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023f14:	45aa      	cmp	sl, r5
 8023f16:	f340 80a4 	ble.w	8024062 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8023f1a:	2c00      	cmp	r4, #0
 8023f1c:	f2c0 809f 	blt.w	802405e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023f20:	42a3      	cmp	r3, r4
 8023f22:	f340 809c 	ble.w	802405e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8023f26:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8023f2a:	1c62      	adds	r2, r4, #1
 8023f2c:	f100 809c 	bmi.w	8024068 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023f30:	4293      	cmp	r3, r2
 8023f32:	f340 8099 	ble.w	8024068 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023f36:	f1b9 0f00 	cmp.w	r9, #0
 8023f3a:	f000 8095 	beq.w	8024068 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8023f3e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8023f42:	3501      	adds	r5, #1
 8023f44:	f100 8094 	bmi.w	8024070 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023f48:	45aa      	cmp	sl, r5
 8023f4a:	f340 8091 	ble.w	8024070 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023f4e:	2f00      	cmp	r7, #0
 8023f50:	f000 808e 	beq.w	8024070 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8023f54:	2c00      	cmp	r4, #0
 8023f56:	f2c0 8089 	blt.w	802406c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023f5a:	42a3      	cmp	r3, r4
 8023f5c:	f340 8086 	ble.w	802406c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8023f60:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8023f64:	3401      	adds	r4, #1
 8023f66:	f100 8086 	bmi.w	8024076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023f6a:	42a3      	cmp	r3, r4
 8023f6c:	f340 8083 	ble.w	8024076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023f70:	f1b9 0f00 	cmp.w	r9, #0
 8023f74:	d07f      	beq.n	8024076 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8023f76:	3301      	adds	r3, #1
 8023f78:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8023f7c:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8023f80:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 8023f84:	fb19 fe07 	smulbb	lr, r9, r7
 8023f88:	f1c7 0210 	rsb	r2, r7, #16
 8023f8c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8023f90:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8023f94:	eba2 0209 	sub.w	r2, r2, r9
 8023f98:	ea44 0808 	orr.w	r8, r4, r8
 8023f9c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8023fa0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8023fa4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8023fa8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8023fac:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8023fb0:	ea44 0c0c 	orr.w	ip, r4, ip
 8023fb4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8023fb8:	fb04 f40c 	mul.w	r4, r4, ip
 8023fbc:	fb02 4808 	mla	r8, r2, r8, r4
 8023fc0:	041a      	lsls	r2, r3, #16
 8023fc2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8023fc6:	b2b4      	uxth	r4, r6
 8023fc8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8023fcc:	43f6      	mvns	r6, r6
 8023fce:	4313      	orrs	r3, r2
 8023fd0:	042a      	lsls	r2, r5, #16
 8023fd2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8023fd6:	b2f6      	uxtb	r6, r6
 8023fd8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8023fdc:	fb0e 8303 	mla	r3, lr, r3, r8
 8023fe0:	432a      	orrs	r2, r5
 8023fe2:	fb07 3202 	mla	r2, r7, r2, r3
 8023fe6:	10c7      	asrs	r7, r0, #3
 8023fe8:	0d53      	lsrs	r3, r2, #21
 8023fea:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8023fee:	0952      	lsrs	r2, r2, #5
 8023ff0:	fb17 f706 	smulbb	r7, r7, r6
 8023ff4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023ff8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8023ffc:	431a      	orrs	r2, r3
 8023ffe:	b293      	uxth	r3, r2
 8024000:	1202      	asrs	r2, r0, #8
 8024002:	121d      	asrs	r5, r3, #8
 8024004:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8024008:	00c0      	lsls	r0, r0, #3
 802400a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802400e:	fb12 f206 	smulbb	r2, r2, r6
 8024012:	b2c0      	uxtb	r0, r0
 8024014:	fb05 2504 	mla	r5, r5, r4, r2
 8024018:	10da      	asrs	r2, r3, #3
 802401a:	fb10 f006 	smulbb	r0, r0, r6
 802401e:	00db      	lsls	r3, r3, #3
 8024020:	b2ad      	uxth	r5, r5
 8024022:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024026:	b2db      	uxtb	r3, r3
 8024028:	fb02 7204 	mla	r2, r2, r4, r7
 802402c:	fb03 0004 	mla	r0, r3, r4, r0
 8024030:	1c6b      	adds	r3, r5, #1
 8024032:	b292      	uxth	r2, r2
 8024034:	b280      	uxth	r0, r0
 8024036:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802403a:	1c43      	adds	r3, r0, #1
 802403c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024040:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8024044:	1c50      	adds	r0, r2, #1
 8024046:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802404a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802404e:	0952      	lsrs	r2, r2, #5
 8024050:	432b      	orrs	r3, r5
 8024052:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024056:	4313      	orrs	r3, r2
 8024058:	800b      	strh	r3, [r1, #0]
 802405a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802405e:	4680      	mov	r8, r0
 8024060:	e763      	b.n	8023f2a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8024062:	4684      	mov	ip, r0
 8024064:	4680      	mov	r8, r0
 8024066:	e76c      	b.n	8023f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8024068:	4684      	mov	ip, r0
 802406a:	e76a      	b.n	8023f42 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802406c:	4605      	mov	r5, r0
 802406e:	e779      	b.n	8023f64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8024070:	4603      	mov	r3, r0
 8024072:	4605      	mov	r5, r0
 8024074:	e782      	b.n	8023f7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8024076:	4603      	mov	r3, r0
 8024078:	e780      	b.n	8023f7c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802407a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802407a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802407e:	b093      	sub	sp, #76	@ 0x4c
 8024080:	461d      	mov	r5, r3
 8024082:	9210      	str	r2, [sp, #64]	@ 0x40
 8024084:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8024086:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 802408a:	910a      	str	r1, [sp, #40]	@ 0x28
 802408c:	920b      	str	r2, [sp, #44]	@ 0x2c
 802408e:	6859      	ldr	r1, [r3, #4]
 8024090:	681b      	ldr	r3, [r3, #0]
 8024092:	9011      	str	r0, [sp, #68]	@ 0x44
 8024094:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8024098:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802409c:	fb01 2707 	mla	r7, r1, r7, r2
 80240a0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80240a4:	9307      	str	r3, [sp, #28]
 80240a6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80240a8:	681b      	ldr	r3, [r3, #0]
 80240aa:	9309      	str	r3, [sp, #36]	@ 0x24
 80240ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80240ae:	43db      	mvns	r3, r3
 80240b0:	b2db      	uxtb	r3, r3
 80240b2:	9308      	str	r3, [sp, #32]
 80240b4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80240b6:	2b00      	cmp	r3, #0
 80240b8:	dc03      	bgt.n	80240c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80240ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80240bc:	2b00      	cmp	r3, #0
 80240be:	f340 8205 	ble.w	80244cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80240c2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80240c4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80240c8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80240cc:	1e48      	subs	r0, r1, #1
 80240ce:	f102 3cff 	add.w	ip, r2, #4294967295
 80240d2:	2d00      	cmp	r5, #0
 80240d4:	f340 80da 	ble.w	802428c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80240d8:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80240dc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80240e0:	d406      	bmi.n	80240f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80240e2:	4586      	cmp	lr, r0
 80240e4:	da04      	bge.n	80240f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80240e6:	2b00      	cmp	r3, #0
 80240e8:	db02      	blt.n	80240f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80240ea:	4563      	cmp	r3, ip
 80240ec:	f2c0 80cf 	blt.w	802428e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80240f0:	f11e 0e01 	adds.w	lr, lr, #1
 80240f4:	f100 80c1 	bmi.w	802427a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80240f8:	4571      	cmp	r1, lr
 80240fa:	f2c0 80be 	blt.w	802427a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80240fe:	3301      	adds	r3, #1
 8024100:	f100 80bb 	bmi.w	802427a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8024104:	429a      	cmp	r2, r3
 8024106:	f2c0 80b8 	blt.w	802427a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802410a:	46a9      	mov	r9, r5
 802410c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8024110:	f1b9 0f00 	cmp.w	r9, #0
 8024114:	f340 80d8 	ble.w	80242c8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8024118:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802411a:	1421      	asrs	r1, r4, #16
 802411c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024120:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024124:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024128:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802412c:	f100 8112 	bmi.w	8024354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8024130:	f10e 3aff 	add.w	sl, lr, #4294967295
 8024134:	4551      	cmp	r1, sl
 8024136:	f280 810d 	bge.w	8024354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 802413a:	2800      	cmp	r0, #0
 802413c:	f2c0 810a 	blt.w	8024354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8024140:	f103 3aff 	add.w	sl, r3, #4294967295
 8024144:	4550      	cmp	r0, sl
 8024146:	f280 8105 	bge.w	8024354 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 802414a:	fa0f f38e 	sxth.w	r3, lr
 802414e:	fb00 1103 	mla	r1, r0, r3, r1
 8024152:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8024154:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8024158:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802415c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8024160:	f1bc 0f00 	cmp.w	ip, #0
 8024164:	d007      	beq.n	8024176 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8024166:	005b      	lsls	r3, r3, #1
 8024168:	eb0a 0003 	add.w	r0, sl, r3
 802416c:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8024170:	930c      	str	r3, [sp, #48]	@ 0x30
 8024172:	8843      	ldrh	r3, [r0, #2]
 8024174:	930d      	str	r3, [sp, #52]	@ 0x34
 8024176:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802417a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802417e:	fb12 f30c 	smulbb	r3, r2, ip
 8024182:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8024186:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802418a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802418e:	10db      	asrs	r3, r3, #3
 8024190:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8024194:	ea40 000e 	orr.w	r0, r0, lr
 8024198:	f1cc 0e10 	rsb	lr, ip, #16
 802419c:	ea4a 0101 	orr.w	r1, sl, r1
 80241a0:	9f08      	ldr	r7, [sp, #32]
 80241a2:	ebae 0e02 	sub.w	lr, lr, r2
 80241a6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80241aa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80241ae:	4351      	muls	r1, r2
 80241b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80241b2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80241b6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80241b8:	0410      	lsls	r0, r2, #16
 80241ba:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80241be:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80241c2:	4310      	orrs	r0, r2
 80241c4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80241c6:	0412      	lsls	r2, r2, #16
 80241c8:	fb03 e000 	mla	r0, r3, r0, lr
 80241cc:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 80241d0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80241d4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80241d8:	ea42 020e 	orr.w	r2, r2, lr
 80241dc:	fb03 0302 	mla	r3, r3, r2, r0
 80241e0:	f8b8 0000 	ldrh.w	r0, [r8]
 80241e4:	0d5a      	lsrs	r2, r3, #21
 80241e6:	095b      	lsrs	r3, r3, #5
 80241e8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80241ec:	1201      	asrs	r1, r0, #8
 80241ee:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 80241f2:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80241f6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80241fa:	00c0      	lsls	r0, r0, #3
 80241fc:	4313      	orrs	r3, r2
 80241fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8024202:	fb11 f107 	smulbb	r1, r1, r7
 8024206:	b2c0      	uxtb	r0, r0
 8024208:	b29b      	uxth	r3, r3
 802420a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 802420e:	fb10 f007 	smulbb	r0, r0, r7
 8024212:	fb1e fe07 	smulbb	lr, lr, r7
 8024216:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802421a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802421e:	fb0c 1c02 	mla	ip, ip, r2, r1
 8024222:	10d9      	asrs	r1, r3, #3
 8024224:	00db      	lsls	r3, r3, #3
 8024226:	fa1f fc8c 	uxth.w	ip, ip
 802422a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802422e:	b2db      	uxtb	r3, r3
 8024230:	fb01 e102 	mla	r1, r1, r2, lr
 8024234:	fb03 0302 	mla	r3, r3, r2, r0
 8024238:	b289      	uxth	r1, r1
 802423a:	b29a      	uxth	r2, r3
 802423c:	f10c 0301 	add.w	r3, ip, #1
 8024240:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8024244:	1c53      	adds	r3, r2, #1
 8024246:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802424a:	1c4a      	adds	r2, r1, #1
 802424c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8024250:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8024254:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024258:	0949      	lsrs	r1, r1, #5
 802425a:	ea43 030c 	orr.w	r3, r3, ip
 802425e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024262:	430b      	orrs	r3, r1
 8024264:	f8a8 3000 	strh.w	r3, [r8]
 8024268:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802426a:	f108 0802 	add.w	r8, r8, #2
 802426e:	f109 39ff 	add.w	r9, r9, #4294967295
 8024272:	441c      	add	r4, r3
 8024274:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024276:	441e      	add	r6, r3
 8024278:	e74a      	b.n	8024110 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802427a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802427c:	3d01      	subs	r5, #1
 802427e:	441c      	add	r4, r3
 8024280:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024282:	441e      	add	r6, r3
 8024284:	9b07      	ldr	r3, [sp, #28]
 8024286:	3302      	adds	r3, #2
 8024288:	9307      	str	r3, [sp, #28]
 802428a:	e722      	b.n	80240d2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802428c:	d022      	beq.n	80242d4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802428e:	1e6b      	subs	r3, r5, #1
 8024290:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8024292:	fb00 4003 	mla	r0, r0, r3, r4
 8024296:	1400      	asrs	r0, r0, #16
 8024298:	f53f af37 	bmi.w	802410a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802429c:	3901      	subs	r1, #1
 802429e:	4288      	cmp	r0, r1
 80242a0:	f6bf af33 	bge.w	802410a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80242a4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80242a6:	fb01 6303 	mla	r3, r1, r3, r6
 80242aa:	141b      	asrs	r3, r3, #16
 80242ac:	f53f af2d 	bmi.w	802410a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80242b0:	3a01      	subs	r2, #1
 80242b2:	4293      	cmp	r3, r2
 80242b4:	f6bf af29 	bge.w	802410a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80242b8:	46a8      	mov	r8, r5
 80242ba:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80242be:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 80242c2:	f1b8 0f00 	cmp.w	r8, #0
 80242c6:	dc60      	bgt.n	802438a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 80242c8:	9b07      	ldr	r3, [sp, #28]
 80242ca:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80242ce:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80242d2:	9307      	str	r3, [sp, #28]
 80242d4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80242d6:	2b00      	cmp	r3, #0
 80242d8:	f340 80f8 	ble.w	80244cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80242dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80242e0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80242e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80242e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80242ea:	eef0 6a62 	vmov.f32	s13, s5
 80242ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80242f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80242f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80242fa:	ee16 4a90 	vmov	r4, s13
 80242fe:	eef0 6a43 	vmov.f32	s13, s6
 8024302:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024306:	ee16 6a90 	vmov	r6, s13
 802430a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802430e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024312:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024316:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802431a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802431e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024322:	ee12 2a90 	vmov	r2, s5
 8024326:	eef0 2a47 	vmov.f32	s5, s14
 802432a:	fb92 f3f3 	sdiv	r3, r2, r3
 802432e:	ee13 2a10 	vmov	r2, s6
 8024332:	931f      	str	r3, [sp, #124]	@ 0x7c
 8024334:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024336:	eeb0 3a67 	vmov.f32	s6, s15
 802433a:	fb92 f3f3 	sdiv	r3, r2, r3
 802433e:	9320      	str	r3, [sp, #128]	@ 0x80
 8024340:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024342:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8024344:	3b01      	subs	r3, #1
 8024346:	930a      	str	r3, [sp, #40]	@ 0x28
 8024348:	bf08      	it	eq
 802434a:	4615      	moveq	r5, r2
 802434c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802434e:	bf18      	it	ne
 8024350:	461d      	movne	r5, r3
 8024352:	e6af      	b.n	80240b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024354:	f111 0a01 	adds.w	sl, r1, #1
 8024358:	d486      	bmi.n	8024268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802435a:	45d6      	cmp	lr, sl
 802435c:	db84      	blt.n	8024268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802435e:	f110 0a01 	adds.w	sl, r0, #1
 8024362:	d481      	bmi.n	8024268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8024364:	4553      	cmp	r3, sl
 8024366:	f6ff af7f 	blt.w	8024268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802436a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 802436c:	b21b      	sxth	r3, r3
 802436e:	9101      	str	r1, [sp, #4]
 8024370:	4641      	mov	r1, r8
 8024372:	9300      	str	r3, [sp, #0]
 8024374:	fa0f f38e 	sxth.w	r3, lr
 8024378:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802437c:	e9cd c704 	strd	ip, r7, [sp, #16]
 8024380:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8024382:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8024384:	f7ff fdb2 	bl	8023eec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8024388:	e76e      	b.n	8024268 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802438a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802438c:	1430      	asrs	r0, r6, #16
 802438e:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8024390:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024394:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024398:	1423      	asrs	r3, r4, #16
 802439a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802439e:	fb01 3000 	mla	r0, r1, r0, r3
 80243a2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80243a4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80243a8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80243ac:	8858      	ldrh	r0, [r3, #2]
 80243ae:	f1be 0f00 	cmp.w	lr, #0
 80243b2:	d00b      	beq.n	80243cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80243b4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80243b8:	3901      	subs	r1, #1
 80243ba:	0049      	lsls	r1, r1, #1
 80243bc:	3102      	adds	r1, #2
 80243be:	eb03 0b01 	add.w	fp, r3, r1
 80243c2:	5a5b      	ldrh	r3, [r3, r1]
 80243c4:	930e      	str	r3, [sp, #56]	@ 0x38
 80243c6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80243ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 80243cc:	ea4f 410c 	mov.w	r1, ip, lsl #16
 80243d0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80243d4:	fb12 f30e 	smulbb	r3, r2, lr
 80243d8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80243dc:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 80243e0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80243e4:	10db      	asrs	r3, r3, #3
 80243e6:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80243ea:	ea41 010c 	orr.w	r1, r1, ip
 80243ee:	f1ce 0c10 	rsb	ip, lr, #16
 80243f2:	ea4b 0000 	orr.w	r0, fp, r0
 80243f6:	9f08      	ldr	r7, [sp, #32]
 80243f8:	ebac 0c02 	sub.w	ip, ip, r2
 80243fc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8024400:	f108 38ff 	add.w	r8, r8, #4294967295
 8024404:	4350      	muls	r0, r2
 8024406:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802440a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802440c:	fb0c 0c01 	mla	ip, ip, r1, r0
 8024410:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8024412:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8024416:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 802441a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802441c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024420:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8024424:	0412      	lsls	r2, r2, #16
 8024426:	ea4b 0101 	orr.w	r1, fp, r1
 802442a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802442e:	fb03 c101 	mla	r1, r3, r1, ip
 8024432:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8024436:	4302      	orrs	r2, r0
 8024438:	fb03 1202 	mla	r2, r3, r2, r1
 802443c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8024440:	0952      	lsrs	r2, r2, #5
 8024442:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8024446:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 802444a:	f8b9 2000 	ldrh.w	r2, [r9]
 802444e:	ea4b 0303 	orr.w	r3, fp, r3
 8024452:	1211      	asrs	r1, r2, #8
 8024454:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8024458:	b29b      	uxth	r3, r3
 802445a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802445e:	00d2      	lsls	r2, r2, #3
 8024460:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8024464:	fb11 f107 	smulbb	r1, r1, r7
 8024468:	1218      	asrs	r0, r3, #8
 802446a:	fb1c fc07 	smulbb	ip, ip, r7
 802446e:	b2d2      	uxtb	r2, r2
 8024470:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024474:	fb12 f207 	smulbb	r2, r2, r7
 8024478:	fb00 100a 	mla	r0, r0, sl, r1
 802447c:	10d9      	asrs	r1, r3, #3
 802447e:	00db      	lsls	r3, r3, #3
 8024480:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024484:	b280      	uxth	r0, r0
 8024486:	b2db      	uxtb	r3, r3
 8024488:	fb01 c10a 	mla	r1, r1, sl, ip
 802448c:	fb03 230a 	mla	r3, r3, sl, r2
 8024490:	1c42      	adds	r2, r0, #1
 8024492:	b289      	uxth	r1, r1
 8024494:	b29b      	uxth	r3, r3
 8024496:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802449a:	f101 0c01 	add.w	ip, r1, #1
 802449e:	1c5a      	adds	r2, r3, #1
 80244a0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80244a4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80244a8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80244ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80244ae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80244b2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80244b6:	441c      	add	r4, r3
 80244b8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80244bc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80244be:	4310      	orrs	r0, r2
 80244c0:	441e      	add	r6, r3
 80244c2:	ea40 000c 	orr.w	r0, r0, ip
 80244c6:	f829 0b02 	strh.w	r0, [r9], #2
 80244ca:	e6fa      	b.n	80242c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 80244cc:	b013      	add	sp, #76	@ 0x4c
 80244ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080244d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 80244d2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80244d6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 80244da:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 80244de:	fb0e 4703 	mla	r7, lr, r3, r4
 80244e2:	f1be 0f00 	cmp.w	lr, #0
 80244e6:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 80244ea:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 80244ee:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 80244f2:	8808      	ldrh	r0, [r1, #0]
 80244f4:	db60      	blt.n	80245b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80244f6:	45f1      	cmp	r9, lr
 80244f8:	dd5e      	ble.n	80245b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 80244fa:	2c00      	cmp	r4, #0
 80244fc:	db5a      	blt.n	80245b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 80244fe:	42a3      	cmp	r3, r4
 8024500:	dd58      	ble.n	80245b4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8024502:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8024506:	1c62      	adds	r2, r4, #1
 8024508:	d459      	bmi.n	80245be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802450a:	4293      	cmp	r3, r2
 802450c:	dd57      	ble.n	80245be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802450e:	2d00      	cmp	r5, #0
 8024510:	d055      	beq.n	80245be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8024512:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8024516:	f11e 0e01 	adds.w	lr, lr, #1
 802451a:	d454      	bmi.n	80245c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802451c:	45f1      	cmp	r9, lr
 802451e:	dd52      	ble.n	80245c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024520:	2e00      	cmp	r6, #0
 8024522:	d050      	beq.n	80245c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8024524:	2c00      	cmp	r4, #0
 8024526:	db4c      	blt.n	80245c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8024528:	42a3      	cmp	r3, r4
 802452a:	dd4a      	ble.n	80245c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802452c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8024530:	3401      	adds	r4, #1
 8024532:	d405      	bmi.n	8024540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024534:	42a3      	cmp	r3, r4
 8024536:	dd03      	ble.n	8024540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8024538:	b115      	cbz	r5, 8024540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802453a:	3301      	adds	r3, #1
 802453c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8024540:	fb15 f406 	smulbb	r4, r5, r6
 8024544:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8024548:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802454c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8024550:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8024554:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8024558:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802455c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8024560:	ea43 0c0c 	orr.w	ip, r3, ip
 8024564:	f1c6 0310 	rsb	r3, r6, #16
 8024568:	ea4e 0707 	orr.w	r7, lr, r7
 802456c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8024570:	1b5b      	subs	r3, r3, r5
 8024572:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8024576:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802457a:	437d      	muls	r5, r7
 802457c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8024580:	0403      	lsls	r3, r0, #16
 8024582:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8024586:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 802458a:	4318      	orrs	r0, r3
 802458c:	0413      	lsls	r3, r2, #16
 802458e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8024592:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8024596:	fb04 c000 	mla	r0, r4, r0, ip
 802459a:	4313      	orrs	r3, r2
 802459c:	fb06 0003 	mla	r0, r6, r3, r0
 80245a0:	0d43      	lsrs	r3, r0, #21
 80245a2:	0940      	lsrs	r0, r0, #5
 80245a4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80245a8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80245ac:	4318      	orrs	r0, r3
 80245ae:	8008      	strh	r0, [r1, #0]
 80245b0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80245b4:	4684      	mov	ip, r0
 80245b6:	e7a6      	b.n	8024506 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80245b8:	4607      	mov	r7, r0
 80245ba:	4684      	mov	ip, r0
 80245bc:	e7ab      	b.n	8024516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80245be:	4607      	mov	r7, r0
 80245c0:	e7a9      	b.n	8024516 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80245c2:	4602      	mov	r2, r0
 80245c4:	e7b4      	b.n	8024530 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80245c6:	4602      	mov	r2, r0
 80245c8:	e7ba      	b.n	8024540 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080245ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80245ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245ce:	b08f      	sub	sp, #60	@ 0x3c
 80245d0:	461d      	mov	r5, r3
 80245d2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80245d4:	9107      	str	r1, [sp, #28]
 80245d6:	920c      	str	r2, [sp, #48]	@ 0x30
 80245d8:	6859      	ldr	r1, [r3, #4]
 80245da:	681b      	ldr	r3, [r3, #0]
 80245dc:	900d      	str	r0, [sp, #52]	@ 0x34
 80245de:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 80245e2:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 80245e6:	fb01 2707 	mla	r7, r1, r7, r2
 80245ea:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80245ee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80245f0:	f8d3 8000 	ldr.w	r8, [r3]
 80245f4:	9b07      	ldr	r3, [sp, #28]
 80245f6:	2b00      	cmp	r3, #0
 80245f8:	dc03      	bgt.n	8024602 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80245fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80245fc:	2b00      	cmp	r3, #0
 80245fe:	f340 8182 	ble.w	8024906 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8024602:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024604:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024608:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802460c:	1e48      	subs	r0, r1, #1
 802460e:	f102 3cff 	add.w	ip, r2, #4294967295
 8024612:	2d00      	cmp	r5, #0
 8024614:	f340 809b 	ble.w	802474e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8024618:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802461c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024620:	d406      	bmi.n	8024630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024622:	4586      	cmp	lr, r0
 8024624:	da04      	bge.n	8024630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8024626:	2b00      	cmp	r3, #0
 8024628:	db02      	blt.n	8024630 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802462a:	4563      	cmp	r3, ip
 802462c:	f2c0 8090 	blt.w	8024750 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024630:	f11e 0e01 	adds.w	lr, lr, #1
 8024634:	f100 8084 	bmi.w	8024740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024638:	4571      	cmp	r1, lr
 802463a:	f2c0 8081 	blt.w	8024740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802463e:	3301      	adds	r3, #1
 8024640:	d47e      	bmi.n	8024740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024642:	429a      	cmp	r2, r3
 8024644:	db7c      	blt.n	8024740 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8024646:	46aa      	mov	sl, r5
 8024648:	46b9      	mov	r9, r7
 802464a:	f1ba 0f00 	cmp.w	sl, #0
 802464e:	f340 8099 	ble.w	8024784 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8024652:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024654:	1421      	asrs	r1, r4, #16
 8024656:	ea4f 4026 	mov.w	r0, r6, asr #16
 802465a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802465e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024662:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8024666:	f100 80d1 	bmi.w	802480c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802466a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802466e:	4559      	cmp	r1, fp
 8024670:	f280 80cc 	bge.w	802480c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8024674:	2800      	cmp	r0, #0
 8024676:	f2c0 80c9 	blt.w	802480c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 802467a:	f103 3bff 	add.w	fp, r3, #4294967295
 802467e:	4558      	cmp	r0, fp
 8024680:	f280 80c4 	bge.w	802480c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8024684:	fa0f fe8e 	sxth.w	lr, lr
 8024688:	fb00 110e 	mla	r1, r0, lr, r1
 802468c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024690:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8024694:	8841      	ldrh	r1, [r0, #2]
 8024696:	f1bc 0f00 	cmp.w	ip, #0
 802469a:	d00b      	beq.n	80246b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802469c:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 80246a0:	3b01      	subs	r3, #1
 80246a2:	005b      	lsls	r3, r3, #1
 80246a4:	3302      	adds	r3, #2
 80246a6:	eb00 0e03 	add.w	lr, r0, r3
 80246aa:	5ac3      	ldrh	r3, [r0, r3]
 80246ac:	9308      	str	r3, [sp, #32]
 80246ae:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80246b2:	9309      	str	r3, [sp, #36]	@ 0x24
 80246b4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80246b8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80246bc:	fb12 f30c 	smulbb	r3, r2, ip
 80246c0:	f1cc 0e10 	rsb	lr, ip, #16
 80246c4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80246c8:	10db      	asrs	r3, r3, #3
 80246ca:	ebae 0e02 	sub.w	lr, lr, r2
 80246ce:	ea40 000b 	orr.w	r0, r0, fp
 80246d2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80246d6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80246da:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80246de:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80246e2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80246e6:	ea4b 0101 	orr.w	r1, fp, r1
 80246ea:	4351      	muls	r1, r2
 80246ec:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80246ee:	fb0e 1e00 	mla	lr, lr, r0, r1
 80246f2:	0410      	lsls	r0, r2, #16
 80246f4:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80246f8:	9908      	ldr	r1, [sp, #32]
 80246fa:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80246fe:	4310      	orrs	r0, r2
 8024700:	9a08      	ldr	r2, [sp, #32]
 8024702:	0412      	lsls	r2, r2, #16
 8024704:	fb03 e000 	mla	r0, r3, r0, lr
 8024708:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 802470c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8024710:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8024714:	ea42 020e 	orr.w	r2, r2, lr
 8024718:	fb03 0302 	mla	r3, r3, r2, r0
 802471c:	0d5a      	lsrs	r2, r3, #21
 802471e:	095b      	lsrs	r3, r3, #5
 8024720:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024724:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8024728:	4313      	orrs	r3, r2
 802472a:	f8a9 3000 	strh.w	r3, [r9]
 802472e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8024730:	f109 0902 	add.w	r9, r9, #2
 8024734:	f10a 3aff 	add.w	sl, sl, #4294967295
 8024738:	441c      	add	r4, r3
 802473a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802473c:	441e      	add	r6, r3
 802473e:	e784      	b.n	802464a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024740:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8024742:	3d01      	subs	r5, #1
 8024744:	3702      	adds	r7, #2
 8024746:	441c      	add	r4, r3
 8024748:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802474a:	441e      	add	r6, r3
 802474c:	e761      	b.n	8024612 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802474e:	d01d      	beq.n	802478c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024750:	1e6b      	subs	r3, r5, #1
 8024752:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8024754:	fb00 4003 	mla	r0, r0, r3, r4
 8024758:	1400      	asrs	r0, r0, #16
 802475a:	f53f af74 	bmi.w	8024646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802475e:	3901      	subs	r1, #1
 8024760:	4288      	cmp	r0, r1
 8024762:	f6bf af70 	bge.w	8024646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024766:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8024768:	fb01 6303 	mla	r3, r1, r3, r6
 802476c:	141b      	asrs	r3, r3, #16
 802476e:	f53f af6a 	bmi.w	8024646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8024772:	3a01      	subs	r2, #1
 8024774:	4293      	cmp	r3, r2
 8024776:	f6bf af66 	bge.w	8024646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802477a:	46a9      	mov	r9, r5
 802477c:	46ba      	mov	sl, r7
 802477e:	f1b9 0f00 	cmp.w	r9, #0
 8024782:	dc5b      	bgt.n	802483c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8024784:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024788:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802478c:	9b07      	ldr	r3, [sp, #28]
 802478e:	2b00      	cmp	r3, #0
 8024790:	f340 80b9 	ble.w	8024906 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8024794:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024798:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802479a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802479e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80247a2:	eef0 6a62 	vmov.f32	s13, s5
 80247a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80247aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80247ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247b2:	ee16 4a90 	vmov	r4, s13
 80247b6:	eef0 6a43 	vmov.f32	s13, s6
 80247ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80247be:	ee16 6a90 	vmov	r6, s13
 80247c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80247c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80247ca:	ee77 2a62 	vsub.f32	s5, s14, s5
 80247ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80247d2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80247d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80247da:	ee12 2a90 	vmov	r2, s5
 80247de:	eef0 2a47 	vmov.f32	s5, s14
 80247e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80247e6:	ee13 2a10 	vmov	r2, s6
 80247ea:	931b      	str	r3, [sp, #108]	@ 0x6c
 80247ec:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80247ee:	eeb0 3a67 	vmov.f32	s6, s15
 80247f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80247f6:	931c      	str	r3, [sp, #112]	@ 0x70
 80247f8:	9b07      	ldr	r3, [sp, #28]
 80247fa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80247fc:	3b01      	subs	r3, #1
 80247fe:	9307      	str	r3, [sp, #28]
 8024800:	bf08      	it	eq
 8024802:	4615      	moveq	r5, r2
 8024804:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8024806:	bf18      	it	ne
 8024808:	461d      	movne	r5, r3
 802480a:	e6f3      	b.n	80245f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802480c:	f111 0b01 	adds.w	fp, r1, #1
 8024810:	d48d      	bmi.n	802472e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024812:	45de      	cmp	lr, fp
 8024814:	db8b      	blt.n	802472e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024816:	f110 0b01 	adds.w	fp, r0, #1
 802481a:	d488      	bmi.n	802472e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802481c:	455b      	cmp	r3, fp
 802481e:	db86      	blt.n	802472e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8024820:	b21b      	sxth	r3, r3
 8024822:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8024826:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802482a:	9300      	str	r3, [sp, #0]
 802482c:	4642      	mov	r2, r8
 802482e:	fa0f f38e 	sxth.w	r3, lr
 8024832:	4649      	mov	r1, r9
 8024834:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024836:	f7ff fe4c 	bl	80244d2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802483a:	e778      	b.n	802472e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802483c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802483e:	1420      	asrs	r0, r4, #16
 8024840:	1431      	asrs	r1, r6, #16
 8024842:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8024846:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802484a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802484e:	fb03 0101 	mla	r1, r3, r1, r0
 8024852:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8024856:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802485a:	8841      	ldrh	r1, [r0, #2]
 802485c:	f1be 0f00 	cmp.w	lr, #0
 8024860:	d00b      	beq.n	802487a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8024862:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8024866:	3b01      	subs	r3, #1
 8024868:	005b      	lsls	r3, r3, #1
 802486a:	3302      	adds	r3, #2
 802486c:	eb00 0b03 	add.w	fp, r0, r3
 8024870:	5ac3      	ldrh	r3, [r0, r3]
 8024872:	930a      	str	r3, [sp, #40]	@ 0x28
 8024874:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024878:	930b      	str	r3, [sp, #44]	@ 0x2c
 802487a:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802487e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8024882:	fb12 f30e 	smulbb	r3, r2, lr
 8024886:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802488a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 802488e:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8024892:	10db      	asrs	r3, r3, #3
 8024894:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8024898:	ea40 000c 	orr.w	r0, r0, ip
 802489c:	f1ce 0c10 	rsb	ip, lr, #16
 80248a0:	ea4b 0101 	orr.w	r1, fp, r1
 80248a4:	f109 39ff 	add.w	r9, r9, #4294967295
 80248a8:	ebac 0c02 	sub.w	ip, ip, r2
 80248ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80248b0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80248b4:	4351      	muls	r1, r2
 80248b6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80248b8:	fb0c 1c00 	mla	ip, ip, r0, r1
 80248bc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80248be:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80248c2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 80248c6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80248c8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 80248cc:	0412      	lsls	r2, r2, #16
 80248ce:	ea4b 0000 	orr.w	r0, fp, r0
 80248d2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 80248d6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 80248da:	fb03 c000 	mla	r0, r3, r0, ip
 80248de:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80248e2:	ea42 0b0b 	orr.w	fp, r2, fp
 80248e6:	fb03 000b 	mla	r0, r3, fp, r0
 80248ea:	0d43      	lsrs	r3, r0, #21
 80248ec:	0940      	lsrs	r0, r0, #5
 80248ee:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80248f2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80248f6:	4318      	orrs	r0, r3
 80248f8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80248fa:	441c      	add	r4, r3
 80248fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80248fe:	f82a 0b02 	strh.w	r0, [sl], #2
 8024902:	441e      	add	r6, r3
 8024904:	e73b      	b.n	802477e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8024906:	b00f      	add	sp, #60	@ 0x3c
 8024908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802490c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802490c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024910:	b085      	sub	sp, #20
 8024912:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8024916:	9102      	str	r1, [sp, #8]
 8024918:	2c00      	cmp	r4, #0
 802491a:	fb04 7103 	mla	r1, r4, r3, r7
 802491e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8024922:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8024926:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802492a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 802492e:	f2c0 811b 	blt.w	8024b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024932:	45a6      	cmp	lr, r4
 8024934:	f340 8118 	ble.w	8024b68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8024938:	2f00      	cmp	r7, #0
 802493a:	f2c0 8113 	blt.w	8024b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802493e:	42bb      	cmp	r3, r7
 8024940:	f340 8110 	ble.w	8024b64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8024944:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8024948:	1c7a      	adds	r2, r7, #1
 802494a:	f100 8110 	bmi.w	8024b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802494e:	4293      	cmp	r3, r2
 8024950:	f340 810d 	ble.w	8024b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8024954:	2e00      	cmp	r6, #0
 8024956:	f000 810c 	beq.w	8024b72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802495a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802495e:	3401      	adds	r4, #1
 8024960:	f100 810b 	bmi.w	8024b7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8024964:	45a6      	cmp	lr, r4
 8024966:	f340 8108 	ble.w	8024b7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802496a:	2800      	cmp	r0, #0
 802496c:	f000 8108 	beq.w	8024b80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8024970:	2f00      	cmp	r7, #0
 8024972:	f2c0 8100 	blt.w	8024b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8024976:	42bb      	cmp	r3, r7
 8024978:	f340 80fd 	ble.w	8024b76 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802497c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8024980:	3701      	adds	r7, #1
 8024982:	f100 8100 	bmi.w	8024b86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8024986:	42bb      	cmp	r3, r7
 8024988:	f340 80fd 	ble.w	8024b86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802498c:	2e00      	cmp	r6, #0
 802498e:	f000 80fc 	beq.w	8024b8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8024992:	3301      	adds	r3, #1
 8024994:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8024998:	b2b6      	uxth	r6, r6
 802499a:	b280      	uxth	r0, r0
 802499c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80249a0:	fb00 fe06 	mul.w	lr, r0, r6
 80249a4:	0136      	lsls	r6, r6, #4
 80249a6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80249aa:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80249ae:	eba6 070e 	sub.w	r7, r6, lr
 80249b2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80249b6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80249ba:	b280      	uxth	r0, r0
 80249bc:	b2bf      	uxth	r7, r7
 80249be:	1a1b      	subs	r3, r3, r0
 80249c0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80249c4:	fb0a f607 	mul.w	r6, sl, r7
 80249c8:	b29b      	uxth	r3, r3
 80249ca:	fb0b 6603 	mla	r6, fp, r3, r6
 80249ce:	fb00 6609 	mla	r6, r0, r9, r6
 80249d2:	fb0e 6608 	mla	r6, lr, r8, r6
 80249d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80249da:	9600      	str	r6, [sp, #0]
 80249dc:	2e00      	cmp	r6, #0
 80249de:	f000 80be 	beq.w	8024b5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80249e2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80249e6:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80249ea:	9e02      	ldr	r6, [sp, #8]
 80249ec:	fb0b fc0c 	mul.w	ip, fp, ip
 80249f0:	fb0b f505 	mul.w	r5, fp, r5
 80249f4:	8836      	ldrh	r6, [r6, #0]
 80249f6:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80249fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80249fe:	9501      	str	r5, [sp, #4]
 8024a00:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8024a04:	44dc      	add	ip, fp
 8024a06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024a0a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8024a0e:	9503      	str	r5, [sp, #12]
 8024a10:	9d01      	ldr	r5, [sp, #4]
 8024a12:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8024a16:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024a1a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8024a1e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024a22:	fb0a fc0c 	mul.w	ip, sl, ip
 8024a26:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8024a2a:	fb0a fa01 	mul.w	sl, sl, r1
 8024a2e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8024a32:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8024a36:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8024a3a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8024a3e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8024a42:	4465      	add	r5, ip
 8024a44:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8024a48:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8024a4c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024a50:	fb09 fc0c 	mul.w	ip, r9, ip
 8024a54:	0a2d      	lsrs	r5, r5, #8
 8024a56:	fb09 f904 	mul.w	r9, r9, r4
 8024a5a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024a5e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8024a62:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8024a66:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8024a6a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8024a6e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024a72:	437d      	muls	r5, r7
 8024a74:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8024a78:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8024a7c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024a80:	4461      	add	r1, ip
 8024a82:	fb08 f404 	mul.w	r4, r8, r4
 8024a86:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024a8a:	fb08 f802 	mul.w	r8, r8, r2
 8024a8e:	0a09      	lsrs	r1, r1, #8
 8024a90:	0a22      	lsrs	r2, r4, #8
 8024a92:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8024a96:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8024a9a:	fb07 f70a 	mul.w	r7, r7, sl
 8024a9e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8024aa2:	4414      	add	r4, r2
 8024aa4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8024aa8:	0a24      	lsrs	r4, r4, #8
 8024aaa:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8024aae:	9a03      	ldr	r2, [sp, #12]
 8024ab0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8024ab4:	fb02 5503 	mla	r5, r2, r3, r5
 8024ab8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8024abc:	9a00      	ldr	r2, [sp, #0]
 8024abe:	fb04 540e 	mla	r4, r4, lr, r5
 8024ac2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8024ac6:	1235      	asrs	r5, r6, #8
 8024ac8:	fb01 4100 	mla	r1, r1, r0, r4
 8024acc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8024ad0:	0a09      	lsrs	r1, r1, #8
 8024ad2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8024ad6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8024ada:	fb03 7101 	mla	r1, r3, r1, r7
 8024ade:	fb0e 1e08 	mla	lr, lr, r8, r1
 8024ae2:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8024ae6:	fb00 e101 	mla	r1, r0, r1, lr
 8024aea:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8024aee:	b287      	uxth	r7, r0
 8024af0:	0a09      	lsrs	r1, r1, #8
 8024af2:	437a      	muls	r2, r7
 8024af4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8024af8:	1c53      	adds	r3, r2, #1
 8024afa:	4321      	orrs	r1, r4
 8024afc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024b00:	0c0a      	lsrs	r2, r1, #16
 8024b02:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8024b06:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8024b0a:	b2c8      	uxtb	r0, r1
 8024b0c:	fb12 f207 	smulbb	r2, r2, r7
 8024b10:	fb14 f407 	smulbb	r4, r4, r7
 8024b14:	b2db      	uxtb	r3, r3
 8024b16:	fb10 f007 	smulbb	r0, r0, r7
 8024b1a:	fb05 2503 	mla	r5, r5, r3, r2
 8024b1e:	10f2      	asrs	r2, r6, #3
 8024b20:	00f6      	lsls	r6, r6, #3
 8024b22:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024b26:	b2ad      	uxth	r5, r5
 8024b28:	b2f6      	uxtb	r6, r6
 8024b2a:	fb02 4203 	mla	r2, r2, r3, r4
 8024b2e:	fb06 0303 	mla	r3, r6, r3, r0
 8024b32:	b294      	uxth	r4, r2
 8024b34:	b299      	uxth	r1, r3
 8024b36:	1c6b      	adds	r3, r5, #1
 8024b38:	1c62      	adds	r2, r4, #1
 8024b3a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8024b3e:	1c4b      	adds	r3, r1, #1
 8024b40:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8024b44:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8024b48:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8024b4c:	0952      	lsrs	r2, r2, #5
 8024b4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024b52:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024b56:	432b      	orrs	r3, r5
 8024b58:	4313      	orrs	r3, r2
 8024b5a:	9a02      	ldr	r2, [sp, #8]
 8024b5c:	8013      	strh	r3, [r2, #0]
 8024b5e:	b005      	add	sp, #20
 8024b60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024b64:	2500      	movs	r5, #0
 8024b66:	e6ef      	b.n	8024948 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8024b68:	2100      	movs	r1, #0
 8024b6a:	460d      	mov	r5, r1
 8024b6c:	e6f7      	b.n	802495e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024b6e:	2100      	movs	r1, #0
 8024b70:	e6f5      	b.n	802495e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024b72:	4631      	mov	r1, r6
 8024b74:	e6f3      	b.n	802495e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8024b76:	2400      	movs	r4, #0
 8024b78:	e702      	b.n	8024980 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8024b7a:	2200      	movs	r2, #0
 8024b7c:	4614      	mov	r4, r2
 8024b7e:	e70b      	b.n	8024998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024b80:	4602      	mov	r2, r0
 8024b82:	4604      	mov	r4, r0
 8024b84:	e708      	b.n	8024998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024b86:	2200      	movs	r2, #0
 8024b88:	e706      	b.n	8024998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8024b8a:	4632      	mov	r2, r6
 8024b8c:	e704      	b.n	8024998 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08024b8e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024b8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024b92:	b09d      	sub	sp, #116	@ 0x74
 8024b94:	9219      	str	r2, [sp, #100]	@ 0x64
 8024b96:	9307      	str	r3, [sp, #28]
 8024b98:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8024b9a:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8024b9e:	901b      	str	r0, [sp, #108]	@ 0x6c
 8024ba0:	931a      	str	r3, [sp, #104]	@ 0x68
 8024ba2:	6850      	ldr	r0, [r2, #4]
 8024ba4:	9117      	str	r1, [sp, #92]	@ 0x5c
 8024ba6:	6812      	ldr	r2, [r2, #0]
 8024ba8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8024bac:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8024bb0:	fb00 1303 	mla	r3, r0, r3, r1
 8024bb4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024bb8:	930a      	str	r3, [sp, #40]	@ 0x28
 8024bba:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8024bbc:	681b      	ldr	r3, [r3, #0]
 8024bbe:	9310      	str	r3, [sp, #64]	@ 0x40
 8024bc0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8024bc4:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024bc6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8024bc8:	2b00      	cmp	r3, #0
 8024bca:	dc03      	bgt.n	8024bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8024bcc:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8024bce:	2b00      	cmp	r3, #0
 8024bd0:	f340 8375 	ble.w	80252be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024bd4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8024bd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024bda:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024bde:	1e48      	subs	r0, r1, #1
 8024be0:	1e57      	subs	r7, r2, #1
 8024be2:	9b07      	ldr	r3, [sp, #28]
 8024be4:	2b00      	cmp	r3, #0
 8024be6:	f340 818e 	ble.w	8024f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8024bea:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024bee:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024bf2:	d406      	bmi.n	8024c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024bf4:	4584      	cmp	ip, r0
 8024bf6:	da04      	bge.n	8024c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024bf8:	2b00      	cmp	r3, #0
 8024bfa:	db02      	blt.n	8024c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8024bfc:	42bb      	cmp	r3, r7
 8024bfe:	f2c0 8183 	blt.w	8024f08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8024c02:	f11c 0c01 	adds.w	ip, ip, #1
 8024c06:	f100 8173 	bmi.w	8024ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024c0a:	4561      	cmp	r1, ip
 8024c0c:	f2c0 8170 	blt.w	8024ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024c10:	3301      	adds	r3, #1
 8024c12:	f100 816d 	bmi.w	8024ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024c16:	429a      	cmp	r2, r3
 8024c18:	f2c0 816a 	blt.w	8024ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8024c1c:	9b07      	ldr	r3, [sp, #28]
 8024c1e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8024c20:	9318      	str	r3, [sp, #96]	@ 0x60
 8024c22:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8024c24:	2b00      	cmp	r3, #0
 8024c26:	f340 818c 	ble.w	8024f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8024c2a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8024c2c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8024c30:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8024c32:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024c36:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8024c3a:	1422      	asrs	r2, r4, #16
 8024c3c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024c40:	689b      	ldr	r3, [r3, #8]
 8024c42:	f100 81cd 	bmi.w	8024fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024c46:	f103 38ff 	add.w	r8, r3, #4294967295
 8024c4a:	4542      	cmp	r2, r8
 8024c4c:	f280 81c8 	bge.w	8024fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024c50:	f1bc 0f00 	cmp.w	ip, #0
 8024c54:	f2c0 81c4 	blt.w	8024fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024c58:	f10e 38ff 	add.w	r8, lr, #4294967295
 8024c5c:	45c4      	cmp	ip, r8
 8024c5e:	f280 81bf 	bge.w	8024fe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8024c62:	b21b      	sxth	r3, r3
 8024c64:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8024c66:	fb0c 2203 	mla	r2, ip, r3, r2
 8024c6a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8024c6e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8024c72:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8024c76:	2800      	cmp	r0, #0
 8024c78:	f000 81a9 	beq.w	8024fce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8024c7c:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024c80:	950c      	str	r5, [sp, #48]	@ 0x30
 8024c82:	0e2d      	lsrs	r5, r5, #24
 8024c84:	9513      	str	r5, [sp, #76]	@ 0x4c
 8024c86:	b181      	cbz	r1, 8024caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024c88:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8024c8c:	3b01      	subs	r3, #1
 8024c8e:	009b      	lsls	r3, r3, #2
 8024c90:	3304      	adds	r3, #4
 8024c92:	eb08 0c03 	add.w	ip, r8, r3
 8024c96:	f858 3003 	ldr.w	r3, [r8, r3]
 8024c9a:	9308      	str	r3, [sp, #32]
 8024c9c:	0e1b      	lsrs	r3, r3, #24
 8024c9e:	9311      	str	r3, [sp, #68]	@ 0x44
 8024ca0:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8024ca4:	930d      	str	r3, [sp, #52]	@ 0x34
 8024ca6:	0e1b      	lsrs	r3, r3, #24
 8024ca8:	9314      	str	r3, [sp, #80]	@ 0x50
 8024caa:	b280      	uxth	r0, r0
 8024cac:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024cae:	b289      	uxth	r1, r1
 8024cb0:	fb00 f901 	mul.w	r9, r0, r1
 8024cb4:	0100      	lsls	r0, r0, #4
 8024cb6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8024cba:	eba0 0809 	sub.w	r8, r0, r9
 8024cbe:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8024cc2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8024cc4:	b289      	uxth	r1, r1
 8024cc6:	fa1f f888 	uxth.w	r8, r8
 8024cca:	1a5b      	subs	r3, r3, r1
 8024ccc:	fb08 f000 	mul.w	r0, r8, r0
 8024cd0:	b29b      	uxth	r3, r3
 8024cd2:	fb03 000e 	mla	r0, r3, lr, r0
 8024cd6:	fb01 0005 	mla	r0, r1, r5, r0
 8024cda:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024cdc:	fb09 0005 	mla	r0, r9, r5, r0
 8024ce0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8024ce4:	2800      	cmp	r0, #0
 8024ce6:	f000 80fa 	beq.w	8024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024cea:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8024cee:	d01b      	beq.n	8024d28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8024cf0:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8024cf4:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024cf8:	fb0e fa0a 	mul.w	sl, lr, sl
 8024cfc:	fb0e fe02 	mul.w	lr, lr, r2
 8024d00:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8024d04:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8024d08:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8024d0c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8024d10:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8024d14:	4452      	add	r2, sl
 8024d16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024d1a:	0a12      	lsrs	r2, r2, #8
 8024d1c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024d20:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8024d24:	ea42 020c 	orr.w	r2, r2, ip
 8024d28:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8024d2a:	2dff      	cmp	r5, #255	@ 0xff
 8024d2c:	d021      	beq.n	8024d72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8024d2e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024d30:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8024d34:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8024d36:	fb05 fb0b 	mul.w	fp, r5, fp
 8024d3a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024d3c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024d40:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8024d42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024d46:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024d4a:	fb05 fa0a 	mul.w	sl, r5, sl
 8024d4e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024d52:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8024d56:	44de      	add	lr, fp
 8024d58:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024d5c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024d60:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024d64:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024d68:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024d6c:	ea4e 050a 	orr.w	r5, lr, sl
 8024d70:	950c      	str	r5, [sp, #48]	@ 0x30
 8024d72:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024d74:	2dff      	cmp	r5, #255	@ 0xff
 8024d76:	d021      	beq.n	8024dbc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8024d78:	9d08      	ldr	r5, [sp, #32]
 8024d7a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8024d7e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024d80:	fb05 fb0b 	mul.w	fp, r5, fp
 8024d84:	9d08      	ldr	r5, [sp, #32]
 8024d86:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024d8a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024d8c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024d90:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024d94:	fb05 fa0a 	mul.w	sl, r5, sl
 8024d98:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024d9c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8024da0:	44de      	add	lr, fp
 8024da2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024da6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024daa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024dae:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024db2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024db6:	ea4e 050a 	orr.w	r5, lr, sl
 8024dba:	9508      	str	r5, [sp, #32]
 8024dbc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024dbe:	2dff      	cmp	r5, #255	@ 0xff
 8024dc0:	d021      	beq.n	8024e06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8024dc2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024dc4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8024dc8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024dca:	fb05 fb0b 	mul.w	fp, r5, fp
 8024dce:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024dd0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024dd4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024dd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024dda:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8024dde:	fb05 fa0a 	mul.w	sl, r5, sl
 8024de2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024de6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8024dea:	44de      	add	lr, fp
 8024dec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024df0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024df4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024df8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8024dfc:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024e00:	ea4e 050a 	orr.w	r5, lr, sl
 8024e04:	950d      	str	r5, [sp, #52]	@ 0x34
 8024e06:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024e08:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8024e0c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024e10:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024e14:	9d08      	ldr	r5, [sp, #32]
 8024e16:	fb08 fc0c 	mul.w	ip, r8, ip
 8024e1a:	fb03 cc0e 	mla	ip, r3, lr, ip
 8024e1e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8024e22:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024e24:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024e28:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8024e2c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8024e2e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024e32:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8024e36:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024e38:	fb08 f80e 	mul.w	r8, r8, lr
 8024e3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024e40:	fb03 8202 	mla	r2, r3, r2, r8
 8024e44:	9b08      	ldr	r3, [sp, #32]
 8024e46:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024e4a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 8024e4e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024e50:	fb01 220a 	mla	r2, r1, sl, r2
 8024e54:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8024e58:	883b      	ldrh	r3, [r7, #0]
 8024e5a:	fb09 2901 	mla	r9, r9, r1, r2
 8024e5e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024e60:	1219      	asrs	r1, r3, #8
 8024e62:	4342      	muls	r2, r0
 8024e64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024e68:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024e6c:	1c50      	adds	r0, r2, #1
 8024e6e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8024e72:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8024e76:	ea4c 0c09 	orr.w	ip, ip, r9
 8024e7a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8024e7e:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8024e82:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8024e86:	fa5f fc8c 	uxtb.w	ip, ip
 8024e8a:	fb12 f205 	smulbb	r2, r2, r5
 8024e8e:	b2c0      	uxtb	r0, r0
 8024e90:	fb1c fc05 	smulbb	ip, ip, r5
 8024e94:	fb01 2100 	mla	r1, r1, r0, r2
 8024e98:	10da      	asrs	r2, r3, #3
 8024e9a:	fb1e fe05 	smulbb	lr, lr, r5
 8024e9e:	00db      	lsls	r3, r3, #3
 8024ea0:	b289      	uxth	r1, r1
 8024ea2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024ea6:	b2db      	uxtb	r3, r3
 8024ea8:	fb02 e200 	mla	r2, r2, r0, lr
 8024eac:	fb03 c300 	mla	r3, r3, r0, ip
 8024eb0:	b292      	uxth	r2, r2
 8024eb2:	fa1f fc83 	uxth.w	ip, r3
 8024eb6:	1c4b      	adds	r3, r1, #1
 8024eb8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024ebc:	f10c 0301 	add.w	r3, ip, #1
 8024ec0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8024ec4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024ec8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024ecc:	430b      	orrs	r3, r1
 8024ece:	1c51      	adds	r1, r2, #1
 8024ed0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8024ed4:	0952      	lsrs	r2, r2, #5
 8024ed6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024eda:	4313      	orrs	r3, r2
 8024edc:	803b      	strh	r3, [r7, #0]
 8024ede:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8024ee0:	3702      	adds	r7, #2
 8024ee2:	441c      	add	r4, r3
 8024ee4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8024ee6:	441e      	add	r6, r3
 8024ee8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8024eea:	3b01      	subs	r3, #1
 8024eec:	9318      	str	r3, [sp, #96]	@ 0x60
 8024eee:	e698      	b.n	8024c22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8024ef0:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8024ef2:	441c      	add	r4, r3
 8024ef4:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8024ef6:	441e      	add	r6, r3
 8024ef8:	9b07      	ldr	r3, [sp, #28]
 8024efa:	3b01      	subs	r3, #1
 8024efc:	9307      	str	r3, [sp, #28]
 8024efe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024f00:	3302      	adds	r3, #2
 8024f02:	930a      	str	r3, [sp, #40]	@ 0x28
 8024f04:	e66d      	b.n	8024be2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8024f06:	d023      	beq.n	8024f50 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8024f08:	9b07      	ldr	r3, [sp, #28]
 8024f0a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8024f0c:	3b01      	subs	r3, #1
 8024f0e:	fb00 4003 	mla	r0, r0, r3, r4
 8024f12:	1400      	asrs	r0, r0, #16
 8024f14:	f53f ae82 	bmi.w	8024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024f18:	3901      	subs	r1, #1
 8024f1a:	4288      	cmp	r0, r1
 8024f1c:	f6bf ae7e 	bge.w	8024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024f20:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8024f22:	fb01 6303 	mla	r3, r1, r3, r6
 8024f26:	141b      	asrs	r3, r3, #16
 8024f28:	f53f ae78 	bmi.w	8024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024f2c:	3a01      	subs	r2, #1
 8024f2e:	4293      	cmp	r3, r2
 8024f30:	f6bf ae74 	bge.w	8024c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8024f34:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8024f38:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8024f3c:	f1bb 0f00 	cmp.w	fp, #0
 8024f40:	dc6c      	bgt.n	802501c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8024f42:	9b07      	ldr	r3, [sp, #28]
 8024f44:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024f48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8024f4a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024f4e:	930a      	str	r3, [sp, #40]	@ 0x28
 8024f50:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8024f52:	2b00      	cmp	r3, #0
 8024f54:	f340 81b3 	ble.w	80252be <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8024f58:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024f5c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8024f5e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024f62:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024f66:	eef0 6a62 	vmov.f32	s13, s5
 8024f6a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024f6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024f72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f76:	ee16 4a90 	vmov	r4, s13
 8024f7a:	eef0 6a43 	vmov.f32	s13, s6
 8024f7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024f82:	ee16 6a90 	vmov	r6, s13
 8024f86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024f8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024f8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024f92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024f96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024f9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024f9e:	ee12 2a90 	vmov	r2, s5
 8024fa2:	eef0 2a47 	vmov.f32	s5, s14
 8024fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024faa:	ee13 2a10 	vmov	r2, s6
 8024fae:	9329      	str	r3, [sp, #164]	@ 0xa4
 8024fb0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8024fb2:	eeb0 3a67 	vmov.f32	s6, s15
 8024fb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8024fba:	932a      	str	r3, [sp, #168]	@ 0xa8
 8024fbc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8024fbe:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8024fc0:	3b01      	subs	r3, #1
 8024fc2:	9317      	str	r3, [sp, #92]	@ 0x5c
 8024fc4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8024fc6:	bf08      	it	eq
 8024fc8:	4613      	moveq	r3, r2
 8024fca:	9307      	str	r3, [sp, #28]
 8024fcc:	e5fb      	b.n	8024bc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8024fce:	2900      	cmp	r1, #0
 8024fd0:	f43f ae6b 	beq.w	8024caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024fd4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024fd8:	9308      	str	r3, [sp, #32]
 8024fda:	0e1b      	lsrs	r3, r3, #24
 8024fdc:	9311      	str	r3, [sp, #68]	@ 0x44
 8024fde:	e664      	b.n	8024caa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8024fe0:	f112 0801 	adds.w	r8, r2, #1
 8024fe4:	f53f af7b 	bmi.w	8024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024fe8:	4543      	cmp	r3, r8
 8024fea:	f6ff af78 	blt.w	8024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024fee:	f11c 0801 	adds.w	r8, ip, #1
 8024ff2:	f53f af74 	bmi.w	8024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024ff6:	45c6      	cmp	lr, r8
 8024ff8:	f6ff af71 	blt.w	8024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8024ffc:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8024ffe:	b21b      	sxth	r3, r3
 8025000:	9201      	str	r2, [sp, #4]
 8025002:	fa0f f28e 	sxth.w	r2, lr
 8025006:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802500a:	e9cd c002 	strd	ip, r0, [sp, #8]
 802500e:	9200      	str	r2, [sp, #0]
 8025010:	4639      	mov	r1, r7
 8025012:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8025014:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8025016:	f7ff fc79 	bl	802490c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802501a:	e760      	b.n	8024ede <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802501c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802501e:	1427      	asrs	r7, r4, #16
 8025020:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025022:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025026:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802502a:	1433      	asrs	r3, r6, #16
 802502c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8025030:	fb01 7303 	mla	r3, r1, r3, r7
 8025034:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8025038:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802503c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8025040:	2a00      	cmp	r2, #0
 8025042:	f000 8133 	beq.w	80252ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8025046:	687d      	ldr	r5, [r7, #4]
 8025048:	950e      	str	r5, [sp, #56]	@ 0x38
 802504a:	0e2d      	lsrs	r5, r5, #24
 802504c:	9515      	str	r5, [sp, #84]	@ 0x54
 802504e:	b178      	cbz	r0, 8025070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8025050:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8025054:	3901      	subs	r1, #1
 8025056:	0089      	lsls	r1, r1, #2
 8025058:	3104      	adds	r1, #4
 802505a:	eb07 0e01 	add.w	lr, r7, r1
 802505e:	5879      	ldr	r1, [r7, r1]
 8025060:	9109      	str	r1, [sp, #36]	@ 0x24
 8025062:	0e09      	lsrs	r1, r1, #24
 8025064:	9112      	str	r1, [sp, #72]	@ 0x48
 8025066:	f8de 1004 	ldr.w	r1, [lr, #4]
 802506a:	910f      	str	r1, [sp, #60]	@ 0x3c
 802506c:	0e09      	lsrs	r1, r1, #24
 802506e:	9116      	str	r1, [sp, #88]	@ 0x58
 8025070:	b292      	uxth	r2, r2
 8025072:	9915      	ldr	r1, [sp, #84]	@ 0x54
 8025074:	b280      	uxth	r0, r0
 8025076:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025078:	fb02 f800 	mul.w	r8, r2, r0
 802507c:	0112      	lsls	r2, r2, #4
 802507e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8025082:	eba2 0e08 	sub.w	lr, r2, r8
 8025086:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 802508a:	b280      	uxth	r0, r0
 802508c:	fa1f fe8e 	uxth.w	lr, lr
 8025090:	1a12      	subs	r2, r2, r0
 8025092:	fb0e f101 	mul.w	r1, lr, r1
 8025096:	b292      	uxth	r2, r2
 8025098:	fb02 110c 	mla	r1, r2, ip, r1
 802509c:	fb00 1105 	mla	r1, r0, r5, r1
 80250a0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80250a2:	fb08 1105 	mla	r1, r8, r5, r1
 80250a6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80250aa:	2900      	cmp	r1, #0
 80250ac:	f000 80f5 	beq.w	802529a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80250b0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80250b4:	d019      	beq.n	80250ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80250b6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80250ba:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80250be:	fb0c fa0a 	mul.w	sl, ip, sl
 80250c2:	fb0c fc03 	mul.w	ip, ip, r3
 80250c6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80250ca:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80250ce:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80250d2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80250d6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80250da:	4453      	add	r3, sl
 80250dc:	0a3f      	lsrs	r7, r7, #8
 80250de:	0a1b      	lsrs	r3, r3, #8
 80250e0:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80250e4:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80250e8:	433b      	orrs	r3, r7
 80250ea:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80250ec:	2dff      	cmp	r5, #255	@ 0xff
 80250ee:	d020      	beq.n	8025132 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 80250f0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80250f2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80250f6:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80250f8:	436f      	muls	r7, r5
 80250fa:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80250fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025100:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025104:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025106:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802510a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802510e:	fb05 fa0a 	mul.w	sl, r5, sl
 8025112:	44bc      	add	ip, r7
 8025114:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025118:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802511c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025120:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025124:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025128:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802512c:	ea4c 050a 	orr.w	r5, ip, sl
 8025130:	950e      	str	r5, [sp, #56]	@ 0x38
 8025132:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025134:	2dff      	cmp	r5, #255	@ 0xff
 8025136:	d020      	beq.n	802517a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8025138:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802513a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802513e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8025140:	436f      	muls	r7, r5
 8025142:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025144:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025148:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802514c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802514e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025152:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025156:	fb05 fa0a 	mul.w	sl, r5, sl
 802515a:	44bc      	add	ip, r7
 802515c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025160:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025164:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025168:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802516c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025170:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025174:	ea4c 050a 	orr.w	r5, ip, sl
 8025178:	9509      	str	r5, [sp, #36]	@ 0x24
 802517a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802517c:	2dff      	cmp	r5, #255	@ 0xff
 802517e:	d020      	beq.n	80251c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8025180:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8025182:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025186:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025188:	436f      	muls	r7, r5
 802518a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 802518c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025190:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025194:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8025196:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802519a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802519e:	fb05 fa0a 	mul.w	sl, r5, sl
 80251a2:	44bc      	add	ip, r7
 80251a4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80251a8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80251ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80251b0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80251b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80251b8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80251bc:	ea4c 050a 	orr.w	r5, ip, sl
 80251c0:	950f      	str	r5, [sp, #60]	@ 0x3c
 80251c2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80251c4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80251c8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80251cc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80251d0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80251d2:	fb0e f707 	mul.w	r7, lr, r7
 80251d6:	fb02 770c 	mla	r7, r2, ip, r7
 80251da:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80251de:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80251e0:	fb00 770c 	mla	r7, r0, ip, r7
 80251e4:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80251e8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80251ea:	fb08 770c 	mla	r7, r8, ip, r7
 80251ee:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80251f2:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80251f4:	fb0e fe0c 	mul.w	lr, lr, ip
 80251f8:	0a3f      	lsrs	r7, r7, #8
 80251fa:	fb02 e303 	mla	r3, r2, r3, lr
 80251fe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025200:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8025204:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8025208:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802520a:	fb00 330a 	mla	r3, r0, sl, r3
 802520e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8025212:	f8b9 0000 	ldrh.w	r0, [r9]
 8025216:	fb08 3c0c 	mla	ip, r8, ip, r3
 802521a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802521c:	1202      	asrs	r2, r0, #8
 802521e:	4359      	muls	r1, r3
 8025220:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025224:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8025228:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802522c:	1c4b      	adds	r3, r1, #1
 802522e:	ea47 070c 	orr.w	r7, r7, ip
 8025232:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025236:	0c3b      	lsrs	r3, r7, #16
 8025238:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802523c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8025240:	b2ff      	uxtb	r7, r7
 8025242:	fb13 f305 	smulbb	r3, r3, r5
 8025246:	b2c9      	uxtb	r1, r1
 8025248:	fb17 f705 	smulbb	r7, r7, r5
 802524c:	fb02 3201 	mla	r2, r2, r1, r3
 8025250:	10c3      	asrs	r3, r0, #3
 8025252:	fb1c fc05 	smulbb	ip, ip, r5
 8025256:	00c0      	lsls	r0, r0, #3
 8025258:	b292      	uxth	r2, r2
 802525a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802525e:	b2c0      	uxtb	r0, r0
 8025260:	fb03 c301 	mla	r3, r3, r1, ip
 8025264:	fb00 7001 	mla	r0, r0, r1, r7
 8025268:	1c51      	adds	r1, r2, #1
 802526a:	b29b      	uxth	r3, r3
 802526c:	b280      	uxth	r0, r0
 802526e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025272:	f100 0c01 	add.w	ip, r0, #1
 8025276:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 802527a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802527e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025282:	ea4c 0202 	orr.w	r2, ip, r2
 8025286:	f103 0c01 	add.w	ip, r3, #1
 802528a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802528e:	095b      	lsrs	r3, r3, #5
 8025290:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025294:	431a      	orrs	r2, r3
 8025296:	f8a9 2000 	strh.w	r2, [r9]
 802529a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802529c:	f109 0902 	add.w	r9, r9, #2
 80252a0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80252a4:	441c      	add	r4, r3
 80252a6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80252a8:	441e      	add	r6, r3
 80252aa:	e647      	b.n	8024f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80252ac:	2800      	cmp	r0, #0
 80252ae:	f43f aedf 	beq.w	8025070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80252b2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80252b6:	9109      	str	r1, [sp, #36]	@ 0x24
 80252b8:	0e09      	lsrs	r1, r1, #24
 80252ba:	9112      	str	r1, [sp, #72]	@ 0x48
 80252bc:	e6d8      	b.n	8025070 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80252be:	b01d      	add	sp, #116	@ 0x74
 80252c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080252c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80252c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252c8:	b085      	sub	sp, #20
 80252ca:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 80252ce:	9102      	str	r1, [sp, #8]
 80252d0:	2c00      	cmp	r4, #0
 80252d2:	fb04 7103 	mla	r1, r4, r3, r7
 80252d6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 80252da:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 80252de:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 80252e2:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 80252e6:	f2c0 810c 	blt.w	8025502 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80252ea:	45a6      	cmp	lr, r4
 80252ec:	f340 8109 	ble.w	8025502 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 80252f0:	2f00      	cmp	r7, #0
 80252f2:	f2c0 8104 	blt.w	80254fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80252f6:	42bb      	cmp	r3, r7
 80252f8:	f340 8101 	ble.w	80254fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 80252fc:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8025300:	1c7a      	adds	r2, r7, #1
 8025302:	f100 8101 	bmi.w	8025508 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8025306:	4293      	cmp	r3, r2
 8025308:	f340 80fe 	ble.w	8025508 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802530c:	2e00      	cmp	r6, #0
 802530e:	f000 80fd 	beq.w	802550c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8025312:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8025316:	3401      	adds	r4, #1
 8025318:	f100 80fc 	bmi.w	8025514 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802531c:	45a6      	cmp	lr, r4
 802531e:	f340 80f9 	ble.w	8025514 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8025322:	2800      	cmp	r0, #0
 8025324:	f000 80f9 	beq.w	802551a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8025328:	2f00      	cmp	r7, #0
 802532a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802532e:	f2c0 80ef 	blt.w	8025510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025332:	42bb      	cmp	r3, r7
 8025334:	f340 80ec 	ble.w	8025510 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8025338:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802533c:	3701      	adds	r7, #1
 802533e:	f100 80ef 	bmi.w	8025520 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025342:	42bb      	cmp	r3, r7
 8025344:	f340 80ec 	ble.w	8025520 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8025348:	2e00      	cmp	r6, #0
 802534a:	f000 80eb 	beq.w	8025524 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802534e:	6852      	ldr	r2, [r2, #4]
 8025350:	b2b6      	uxth	r6, r6
 8025352:	b280      	uxth	r0, r0
 8025354:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8025358:	fb00 fe06 	mul.w	lr, r0, r6
 802535c:	0136      	lsls	r6, r6, #4
 802535e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8025362:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8025366:	eba6 070e 	sub.w	r7, r6, lr
 802536a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802536e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8025372:	b280      	uxth	r0, r0
 8025374:	b2bf      	uxth	r7, r7
 8025376:	1a1b      	subs	r3, r3, r0
 8025378:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802537c:	fb07 f60a 	mul.w	r6, r7, sl
 8025380:	b29b      	uxth	r3, r3
 8025382:	fb0b 6603 	mla	r6, fp, r3, r6
 8025386:	fb00 6609 	mla	r6, r0, r9, r6
 802538a:	fb0e 6608 	mla	r6, lr, r8, r6
 802538e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8025392:	9600      	str	r6, [sp, #0]
 8025394:	2e00      	cmp	r6, #0
 8025396:	f000 80af 	beq.w	80254f8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802539a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802539e:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80253a2:	9e02      	ldr	r6, [sp, #8]
 80253a4:	fb0b fc0c 	mul.w	ip, fp, ip
 80253a8:	fb0b f505 	mul.w	r5, fp, r5
 80253ac:	8836      	ldrh	r6, [r6, #0]
 80253ae:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80253b2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80253b6:	9501      	str	r5, [sp, #4]
 80253b8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80253bc:	44dc      	add	ip, fp
 80253be:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80253c2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 80253c6:	9503      	str	r5, [sp, #12]
 80253c8:	9d01      	ldr	r5, [sp, #4]
 80253ca:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 80253ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80253d2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 80253d6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80253da:	fb0a fc0c 	mul.w	ip, sl, ip
 80253de:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80253e2:	fb0a fa01 	mul.w	sl, sl, r1
 80253e6:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80253ea:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80253ee:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80253f2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80253f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80253fa:	4465      	add	r5, ip
 80253fc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8025400:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8025404:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025408:	fb09 fc0c 	mul.w	ip, r9, ip
 802540c:	0a2d      	lsrs	r5, r5, #8
 802540e:	fb09 f904 	mul.w	r9, r9, r4
 8025412:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025416:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802541a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802541e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8025422:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8025426:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802542a:	437d      	muls	r5, r7
 802542c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8025430:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8025434:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8025438:	4461      	add	r1, ip
 802543a:	fb08 f404 	mul.w	r4, r8, r4
 802543e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8025442:	fb08 f802 	mul.w	r8, r8, r2
 8025446:	0a09      	lsrs	r1, r1, #8
 8025448:	0a22      	lsrs	r2, r4, #8
 802544a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802544e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8025452:	fb07 f70a 	mul.w	r7, r7, sl
 8025456:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802545a:	4414      	add	r4, r2
 802545c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8025460:	0a24      	lsrs	r4, r4, #8
 8025462:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8025466:	9a03      	ldr	r2, [sp, #12]
 8025468:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802546c:	fb02 5503 	mla	r5, r2, r3, r5
 8025470:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8025474:	fb04 540e 	mla	r4, r4, lr, r5
 8025478:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 802547c:	fb01 4100 	mla	r1, r1, r0, r4
 8025480:	0a09      	lsrs	r1, r1, #8
 8025482:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8025486:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 802548a:	fb03 7101 	mla	r1, r3, r1, r7
 802548e:	9b00      	ldr	r3, [sp, #0]
 8025490:	fb0e 1e08 	mla	lr, lr, r8, r1
 8025494:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8025498:	43da      	mvns	r2, r3
 802549a:	1233      	asrs	r3, r6, #8
 802549c:	fb00 e101 	mla	r1, r0, r1, lr
 80254a0:	10f0      	asrs	r0, r6, #3
 80254a2:	b2d2      	uxtb	r2, r2
 80254a4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80254a8:	0a09      	lsrs	r1, r1, #8
 80254aa:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80254ae:	00f6      	lsls	r6, r6, #3
 80254b0:	4353      	muls	r3, r2
 80254b2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80254b6:	4350      	muls	r0, r2
 80254b8:	b2f6      	uxtb	r6, r6
 80254ba:	4321      	orrs	r1, r4
 80254bc:	4356      	muls	r6, r2
 80254be:	1c5a      	adds	r2, r3, #1
 80254c0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80254c4:	0c0b      	lsrs	r3, r1, #16
 80254c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80254ca:	1c42      	adds	r2, r0, #1
 80254cc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80254d0:	0a0a      	lsrs	r2, r1, #8
 80254d2:	021b      	lsls	r3, r3, #8
 80254d4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80254d8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 80254dc:	00d2      	lsls	r2, r2, #3
 80254de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80254e2:	4313      	orrs	r3, r2
 80254e4:	1c72      	adds	r2, r6, #1
 80254e6:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80254ea:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 80254ee:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80254f2:	4319      	orrs	r1, r3
 80254f4:	9b02      	ldr	r3, [sp, #8]
 80254f6:	8019      	strh	r1, [r3, #0]
 80254f8:	b005      	add	sp, #20
 80254fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80254fe:	2500      	movs	r5, #0
 8025500:	e6fe      	b.n	8025300 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8025502:	2100      	movs	r1, #0
 8025504:	460d      	mov	r5, r1
 8025506:	e706      	b.n	8025316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025508:	2100      	movs	r1, #0
 802550a:	e704      	b.n	8025316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802550c:	4631      	mov	r1, r6
 802550e:	e702      	b.n	8025316 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8025510:	2400      	movs	r4, #0
 8025512:	e713      	b.n	802533c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8025514:	2200      	movs	r2, #0
 8025516:	4614      	mov	r4, r2
 8025518:	e71a      	b.n	8025350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802551a:	4602      	mov	r2, r0
 802551c:	4604      	mov	r4, r0
 802551e:	e717      	b.n	8025350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025520:	2200      	movs	r2, #0
 8025522:	e715      	b.n	8025350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8025524:	4632      	mov	r2, r6
 8025526:	e713      	b.n	8025350 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

08025528 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802552c:	b09b      	sub	sp, #108	@ 0x6c
 802552e:	9218      	str	r2, [sp, #96]	@ 0x60
 8025530:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8025532:	9019      	str	r0, [sp, #100]	@ 0x64
 8025534:	9116      	str	r1, [sp, #88]	@ 0x58
 8025536:	6850      	ldr	r0, [r2, #4]
 8025538:	9307      	str	r3, [sp, #28]
 802553a:	6812      	ldr	r2, [r2, #0]
 802553c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8025540:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8025544:	fb00 1303 	mla	r3, r0, r3, r1
 8025548:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802554c:	930a      	str	r3, [sp, #40]	@ 0x28
 802554e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8025550:	681b      	ldr	r3, [r3, #0]
 8025552:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025554:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025556:	2b00      	cmp	r3, #0
 8025558:	dc03      	bgt.n	8025562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802555a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802555c:	2b00      	cmp	r3, #0
 802555e:	f340 8387 	ble.w	8025c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8025562:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8025564:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025568:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802556c:	1e48      	subs	r0, r1, #1
 802556e:	1e57      	subs	r7, r2, #1
 8025570:	9b07      	ldr	r3, [sp, #28]
 8025572:	2b00      	cmp	r3, #0
 8025574:	f340 8166 	ble.w	8025844 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8025578:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802557c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025580:	d406      	bmi.n	8025590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025582:	4584      	cmp	ip, r0
 8025584:	da04      	bge.n	8025590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8025586:	2b00      	cmp	r3, #0
 8025588:	db02      	blt.n	8025590 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802558a:	42bb      	cmp	r3, r7
 802558c:	f2c0 815b 	blt.w	8025846 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8025590:	f11c 0c01 	adds.w	ip, ip, #1
 8025594:	f100 814b 	bmi.w	802582e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8025598:	4561      	cmp	r1, ip
 802559a:	f2c0 8148 	blt.w	802582e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802559e:	3301      	adds	r3, #1
 80255a0:	f100 8145 	bmi.w	802582e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80255a4:	429a      	cmp	r2, r3
 80255a6:	f2c0 8142 	blt.w	802582e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80255aa:	9b07      	ldr	r3, [sp, #28]
 80255ac:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80255ae:	9317      	str	r3, [sp, #92]	@ 0x5c
 80255b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80255b2:	2b00      	cmp	r3, #0
 80255b4:	f340 8165 	ble.w	8025882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80255b8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 80255ba:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80255be:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80255c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80255c4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80255c8:	1422      	asrs	r2, r4, #16
 80255ca:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80255ce:	689b      	ldr	r3, [r3, #8]
 80255d0:	f100 81d5 	bmi.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80255d4:	f103 38ff 	add.w	r8, r3, #4294967295
 80255d8:	4542      	cmp	r2, r8
 80255da:	f280 81d0 	bge.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80255de:	f1bc 0f00 	cmp.w	ip, #0
 80255e2:	f2c0 81cc 	blt.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80255e6:	f10e 38ff 	add.w	r8, lr, #4294967295
 80255ea:	45c4      	cmp	ip, r8
 80255ec:	f280 81c7 	bge.w	802597e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80255f0:	b21b      	sxth	r3, r3
 80255f2:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80255f4:	fb0c 2203 	mla	r2, ip, r3, r2
 80255f8:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80255fc:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8025600:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8025604:	2900      	cmp	r1, #0
 8025606:	f000 8182 	beq.w	802590e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802560a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802560e:	950b      	str	r5, [sp, #44]	@ 0x2c
 8025610:	0e2d      	lsrs	r5, r5, #24
 8025612:	9512      	str	r5, [sp, #72]	@ 0x48
 8025614:	b180      	cbz	r0, 8025638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025616:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802561a:	3b01      	subs	r3, #1
 802561c:	009b      	lsls	r3, r3, #2
 802561e:	3304      	adds	r3, #4
 8025620:	eb08 0c03 	add.w	ip, r8, r3
 8025624:	f858 3003 	ldr.w	r3, [r8, r3]
 8025628:	9308      	str	r3, [sp, #32]
 802562a:	0e1b      	lsrs	r3, r3, #24
 802562c:	9310      	str	r3, [sp, #64]	@ 0x40
 802562e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8025632:	930c      	str	r3, [sp, #48]	@ 0x30
 8025634:	0e1b      	lsrs	r3, r3, #24
 8025636:	9313      	str	r3, [sp, #76]	@ 0x4c
 8025638:	b289      	uxth	r1, r1
 802563a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802563c:	b280      	uxth	r0, r0
 802563e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025640:	fb01 f900 	mul.w	r9, r1, r0
 8025644:	0109      	lsls	r1, r1, #4
 8025646:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802564a:	eba1 0809 	sub.w	r8, r1, r9
 802564e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8025652:	b280      	uxth	r0, r0
 8025654:	fa1f f888 	uxth.w	r8, r8
 8025658:	1a09      	subs	r1, r1, r0
 802565a:	fb08 f303 	mul.w	r3, r8, r3
 802565e:	b289      	uxth	r1, r1
 8025660:	fb01 330e 	mla	r3, r1, lr, r3
 8025664:	fb00 3305 	mla	r3, r0, r5, r3
 8025668:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802566a:	fb09 3305 	mla	r3, r9, r5, r3
 802566e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025672:	2b00      	cmp	r3, #0
 8025674:	f000 80d2 	beq.w	802581c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025678:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802567c:	d01b      	beq.n	80256b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802567e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8025682:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8025686:	fb0e fa0a 	mul.w	sl, lr, sl
 802568a:	fb0e fe02 	mul.w	lr, lr, r2
 802568e:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8025692:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8025696:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802569a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802569e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80256a2:	4452      	add	r2, sl
 80256a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80256a8:	0a12      	lsrs	r2, r2, #8
 80256aa:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80256ae:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80256b2:	ea42 020c 	orr.w	r2, r2, ip
 80256b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80256b8:	2dff      	cmp	r5, #255	@ 0xff
 80256ba:	d021      	beq.n	8025700 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80256bc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80256be:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80256c2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80256c4:	fb05 fb0b 	mul.w	fp, r5, fp
 80256c8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80256ca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80256ce:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80256d0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80256d4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80256d8:	fb05 fa0a 	mul.w	sl, r5, sl
 80256dc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80256e0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80256e4:	44de      	add	lr, fp
 80256e6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80256ea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80256ee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80256f2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80256f6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80256fa:	ea4e 050a 	orr.w	r5, lr, sl
 80256fe:	950b      	str	r5, [sp, #44]	@ 0x2c
 8025700:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025702:	2dff      	cmp	r5, #255	@ 0xff
 8025704:	d021      	beq.n	802574a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8025706:	9d08      	ldr	r5, [sp, #32]
 8025708:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802570c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802570e:	fb05 fb0b 	mul.w	fp, r5, fp
 8025712:	9d08      	ldr	r5, [sp, #32]
 8025714:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8025718:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802571a:	fb05 fa0e 	mul.w	sl, r5, lr
 802571e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025722:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8025726:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802572a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802572e:	44de      	add	lr, fp
 8025730:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8025734:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025738:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802573c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025740:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025744:	ea4e 050a 	orr.w	r5, lr, sl
 8025748:	9508      	str	r5, [sp, #32]
 802574a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802574c:	2dff      	cmp	r5, #255	@ 0xff
 802574e:	d021      	beq.n	8025794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8025750:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8025752:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8025756:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8025758:	fb05 fb0b 	mul.w	fp, r5, fp
 802575c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802575e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025762:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8025764:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8025768:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802576c:	fb05 fa0a 	mul.w	sl, r5, sl
 8025770:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8025774:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8025778:	44de      	add	lr, fp
 802577a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802577e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8025782:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025786:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802578a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802578e:	ea4e 050a 	orr.w	r5, lr, sl
 8025792:	950c      	str	r5, [sp, #48]	@ 0x30
 8025794:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8025796:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802579a:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 802579e:	2bff      	cmp	r3, #255	@ 0xff
 80257a0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80257a4:	9d08      	ldr	r5, [sp, #32]
 80257a6:	fb08 fc0c 	mul.w	ip, r8, ip
 80257aa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80257ae:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80257b2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80257b4:	fb00 cc0e 	mla	ip, r0, lr, ip
 80257b8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 80257bc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80257be:	fb09 cc0e 	mla	ip, r9, lr, ip
 80257c2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 80257c6:	fb08 f80e 	mul.w	r8, r8, lr
 80257ca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80257ce:	fb01 8202 	mla	r2, r1, r2, r8
 80257d2:	9908      	ldr	r1, [sp, #32]
 80257d4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80257d8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 80257dc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80257de:	fb00 220a 	mla	r2, r0, sl, r2
 80257e2:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 80257e6:	fb09 2900 	mla	r9, r9, r0, r2
 80257ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80257ee:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80257f2:	ea4c 0c09 	orr.w	ip, ip, r9
 80257f6:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80257fa:	f040 8091 	bne.w	8025920 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80257fe:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8025802:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8025806:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802580a:	f022 0207 	bic.w	r2, r2, #7
 802580e:	431a      	orrs	r2, r3
 8025810:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8025814:	ea4c 0c02 	orr.w	ip, ip, r2
 8025818:	f8a7 c000 	strh.w	ip, [r7]
 802581c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802581e:	3702      	adds	r7, #2
 8025820:	441c      	add	r4, r3
 8025822:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025824:	441e      	add	r6, r3
 8025826:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8025828:	3b01      	subs	r3, #1
 802582a:	9317      	str	r3, [sp, #92]	@ 0x5c
 802582c:	e6c0      	b.n	80255b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802582e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8025830:	441c      	add	r4, r3
 8025832:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025834:	441e      	add	r6, r3
 8025836:	9b07      	ldr	r3, [sp, #28]
 8025838:	3b01      	subs	r3, #1
 802583a:	9307      	str	r3, [sp, #28]
 802583c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802583e:	3302      	adds	r3, #2
 8025840:	930a      	str	r3, [sp, #40]	@ 0x28
 8025842:	e695      	b.n	8025570 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025844:	d024      	beq.n	8025890 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8025846:	9b07      	ldr	r3, [sp, #28]
 8025848:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 802584a:	3b01      	subs	r3, #1
 802584c:	fb00 4003 	mla	r0, r0, r3, r4
 8025850:	1400      	asrs	r0, r0, #16
 8025852:	f53f aeaa 	bmi.w	80255aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025856:	3901      	subs	r1, #1
 8025858:	4288      	cmp	r0, r1
 802585a:	f6bf aea6 	bge.w	80255aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802585e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8025860:	fb01 6303 	mla	r3, r1, r3, r6
 8025864:	141b      	asrs	r3, r3, #16
 8025866:	f53f aea0 	bmi.w	80255aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802586a:	3a01      	subs	r2, #1
 802586c:	4293      	cmp	r3, r2
 802586e:	f6bf ae9c 	bge.w	80255aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8025872:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8025876:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 802587a:	f1bb 0f00 	cmp.w	fp, #0
 802587e:	f300 809a 	bgt.w	80259b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8025882:	9b07      	ldr	r3, [sp, #28]
 8025884:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8025888:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802588a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802588e:	930a      	str	r3, [sp, #40]	@ 0x28
 8025890:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025892:	2b00      	cmp	r3, #0
 8025894:	f340 81ec 	ble.w	8025c70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8025898:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802589c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802589e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80258a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80258a6:	eef0 6a62 	vmov.f32	s13, s5
 80258aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80258ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80258b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80258b6:	ee16 4a90 	vmov	r4, s13
 80258ba:	eef0 6a43 	vmov.f32	s13, s6
 80258be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80258c2:	ee16 6a90 	vmov	r6, s13
 80258c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80258ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80258ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80258d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80258d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80258da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80258de:	ee12 2a90 	vmov	r2, s5
 80258e2:	eef0 2a47 	vmov.f32	s5, s14
 80258e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80258ea:	ee13 2a10 	vmov	r2, s6
 80258ee:	9327      	str	r3, [sp, #156]	@ 0x9c
 80258f0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80258f2:	eeb0 3a67 	vmov.f32	s6, s15
 80258f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80258fa:	9328      	str	r3, [sp, #160]	@ 0xa0
 80258fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80258fe:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8025900:	3b01      	subs	r3, #1
 8025902:	9316      	str	r3, [sp, #88]	@ 0x58
 8025904:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8025906:	bf08      	it	eq
 8025908:	4613      	moveq	r3, r2
 802590a:	9307      	str	r3, [sp, #28]
 802590c:	e622      	b.n	8025554 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802590e:	2800      	cmp	r0, #0
 8025910:	f43f ae92 	beq.w	8025638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025914:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8025918:	9308      	str	r3, [sp, #32]
 802591a:	0e1b      	lsrs	r3, r3, #24
 802591c:	9310      	str	r3, [sp, #64]	@ 0x40
 802591e:	e68b      	b.n	8025638 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8025920:	8839      	ldrh	r1, [r7, #0]
 8025922:	43db      	mvns	r3, r3
 8025924:	4dd4      	ldr	r5, [pc, #848]	@ (8025c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8025926:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802592a:	fa5f f883 	uxtb.w	r8, r3
 802592e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8025932:	10c8      	asrs	r0, r1, #3
 8025934:	00cb      	lsls	r3, r1, #3
 8025936:	fb0e fe08 	mul.w	lr, lr, r8
 802593a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802593e:	b2db      	uxtb	r3, r3
 8025940:	f10e 0101 	add.w	r1, lr, #1
 8025944:	fb00 f008 	mul.w	r0, r0, r8
 8025948:	fb03 f308 	mul.w	r3, r3, r8
 802594c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8025950:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8025954:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8025958:	f100 0e01 	add.w	lr, r0, #1
 802595c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8025960:	b2c9      	uxtb	r1, r1
 8025962:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8025966:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802596a:	00d2      	lsls	r2, r2, #3
 802596c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025970:	430a      	orrs	r2, r1
 8025972:	1c59      	adds	r1, r3, #1
 8025974:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8025978:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802597c:	e748      	b.n	8025810 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802597e:	f112 0801 	adds.w	r8, r2, #1
 8025982:	f53f af4b 	bmi.w	802581c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025986:	4543      	cmp	r3, r8
 8025988:	f6ff af48 	blt.w	802581c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802598c:	f11c 0801 	adds.w	r8, ip, #1
 8025990:	f53f af44 	bmi.w	802581c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8025994:	45c6      	cmp	lr, r8
 8025996:	f6ff af41 	blt.w	802581c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802599a:	b21b      	sxth	r3, r3
 802599c:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80259a0:	fa0f f28e 	sxth.w	r2, lr
 80259a4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80259a8:	9200      	str	r2, [sp, #0]
 80259aa:	4639      	mov	r1, r7
 80259ac:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80259ae:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80259b0:	f7ff fc88 	bl	80252c4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80259b4:	e732      	b.n	802581c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80259b6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80259b8:	1421      	asrs	r1, r4, #16
 80259ba:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80259bc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80259c0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80259c4:	1433      	asrs	r3, r6, #16
 80259c6:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80259ca:	fb07 1303 	mla	r3, r7, r3, r1
 80259ce:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80259d0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80259d4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80259d8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80259dc:	2a00      	cmp	r2, #0
 80259de:	f000 8108 	beq.w	8025bf2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 80259e2:	684d      	ldr	r5, [r1, #4]
 80259e4:	950d      	str	r5, [sp, #52]	@ 0x34
 80259e6:	0e2d      	lsrs	r5, r5, #24
 80259e8:	9514      	str	r5, [sp, #80]	@ 0x50
 80259ea:	b178      	cbz	r0, 8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80259ec:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 80259f0:	3f01      	subs	r7, #1
 80259f2:	00bf      	lsls	r7, r7, #2
 80259f4:	3704      	adds	r7, #4
 80259f6:	eb01 0e07 	add.w	lr, r1, r7
 80259fa:	59c9      	ldr	r1, [r1, r7]
 80259fc:	9109      	str	r1, [sp, #36]	@ 0x24
 80259fe:	0e09      	lsrs	r1, r1, #24
 8025a00:	9111      	str	r1, [sp, #68]	@ 0x44
 8025a02:	f8de 1004 	ldr.w	r1, [lr, #4]
 8025a06:	910e      	str	r1, [sp, #56]	@ 0x38
 8025a08:	0e09      	lsrs	r1, r1, #24
 8025a0a:	9115      	str	r1, [sp, #84]	@ 0x54
 8025a0c:	b292      	uxth	r2, r2
 8025a0e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025a10:	b280      	uxth	r0, r0
 8025a12:	fb02 f900 	mul.w	r9, r2, r0
 8025a16:	0112      	lsls	r2, r2, #4
 8025a18:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8025a1c:	eba2 0e09 	sub.w	lr, r2, r9
 8025a20:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8025a24:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8025a26:	b280      	uxth	r0, r0
 8025a28:	fa1f fe8e 	uxth.w	lr, lr
 8025a2c:	1a09      	subs	r1, r1, r0
 8025a2e:	fb0e f202 	mul.w	r2, lr, r2
 8025a32:	b289      	uxth	r1, r1
 8025a34:	fb01 220c 	mla	r2, r1, ip, r2
 8025a38:	fb00 2205 	mla	r2, r0, r5, r2
 8025a3c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025a3e:	fb09 2205 	mla	r2, r9, r5, r2
 8025a42:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8025a46:	2a00      	cmp	r2, #0
 8025a48:	f000 80ca 	beq.w	8025be0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8025a4c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8025a50:	d019      	beq.n	8025a86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8025a52:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8025a56:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025a5a:	fb0c fa0a 	mul.w	sl, ip, sl
 8025a5e:	fb0c fc03 	mul.w	ip, ip, r3
 8025a62:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8025a66:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8025a6a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8025a6e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8025a72:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8025a76:	4453      	add	r3, sl
 8025a78:	0a3f      	lsrs	r7, r7, #8
 8025a7a:	0a1b      	lsrs	r3, r3, #8
 8025a7c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8025a80:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8025a84:	433b      	orrs	r3, r7
 8025a86:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025a88:	2dff      	cmp	r5, #255	@ 0xff
 8025a8a:	d020      	beq.n	8025ace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8025a8c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025a8e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025a92:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025a94:	436f      	muls	r7, r5
 8025a96:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025a98:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025a9c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025aa0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8025aa2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025aa6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025aaa:	fb05 fa0a 	mul.w	sl, r5, sl
 8025aae:	44bc      	add	ip, r7
 8025ab0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025ab4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025ab8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025abc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025ac0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025ac4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025ac8:	ea4c 050a 	orr.w	r5, ip, sl
 8025acc:	950d      	str	r5, [sp, #52]	@ 0x34
 8025ace:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025ad0:	2dff      	cmp	r5, #255	@ 0xff
 8025ad2:	d020      	beq.n	8025b16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8025ad4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025ad6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025ada:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025adc:	436f      	muls	r7, r5
 8025ade:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025ae0:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8025ae4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8025ae6:	fb05 fa0c 	mul.w	sl, r5, ip
 8025aea:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025aee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025af2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025af6:	44bc      	add	ip, r7
 8025af8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025afc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b04:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025b0c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025b10:	ea4c 050a 	orr.w	r5, ip, sl
 8025b14:	9509      	str	r5, [sp, #36]	@ 0x24
 8025b16:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025b18:	2dff      	cmp	r5, #255	@ 0xff
 8025b1a:	d020      	beq.n	8025b5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8025b1c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025b1e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025b22:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025b24:	436f      	muls	r7, r5
 8025b26:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025b28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8025b2c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8025b30:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8025b32:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8025b36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025b3a:	fb05 fa0a 	mul.w	sl, r5, sl
 8025b3e:	44bc      	add	ip, r7
 8025b40:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8025b44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025b48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8025b4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8025b50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8025b54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8025b58:	ea4c 050a 	orr.w	r5, ip, sl
 8025b5c:	950e      	str	r5, [sp, #56]	@ 0x38
 8025b5e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025b60:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8025b64:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8025b68:	2aff      	cmp	r2, #255	@ 0xff
 8025b6a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8025b6e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8025b70:	fb0e f707 	mul.w	r7, lr, r7
 8025b74:	fb01 770c 	mla	r7, r1, ip, r7
 8025b78:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8025b7c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8025b7e:	fb00 770c 	mla	r7, r0, ip, r7
 8025b82:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8025b86:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8025b88:	fb09 770c 	mla	r7, r9, ip, r7
 8025b8c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8025b90:	fb0e fe0c 	mul.w	lr, lr, ip
 8025b94:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8025b98:	fb01 e303 	mla	r3, r1, r3, lr
 8025b9c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8025b9e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8025ba2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8025ba6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8025ba8:	fb00 330a 	mla	r3, r0, sl, r3
 8025bac:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8025bb0:	fb09 3c0c 	mla	ip, r9, ip, r3
 8025bb4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8025bb8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8025bbc:	ea47 070c 	orr.w	r7, r7, ip
 8025bc0:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8025bc4:	d11e      	bne.n	8025c04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8025bc6:	097a      	lsrs	r2, r7, #5
 8025bc8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8025bcc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025bd0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025bd4:	f023 0307 	bic.w	r3, r3, #7
 8025bd8:	4313      	orrs	r3, r2
 8025bda:	431f      	orrs	r7, r3
 8025bdc:	f8a8 7000 	strh.w	r7, [r8]
 8025be0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8025be2:	f108 0802 	add.w	r8, r8, #2
 8025be6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8025bea:	441c      	add	r4, r3
 8025bec:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025bee:	441e      	add	r6, r3
 8025bf0:	e643      	b.n	802587a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8025bf2:	2800      	cmp	r0, #0
 8025bf4:	f43f af0a 	beq.w	8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025bf8:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8025bfc:	9109      	str	r1, [sp, #36]	@ 0x24
 8025bfe:	0e09      	lsrs	r1, r1, #24
 8025c00:	9111      	str	r1, [sp, #68]	@ 0x44
 8025c02:	e703      	b.n	8025a0c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8025c04:	f8b8 1000 	ldrh.w	r1, [r8]
 8025c08:	43d2      	mvns	r2, r2
 8025c0a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8025c0e:	fa5f fe82 	uxtb.w	lr, r2
 8025c12:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8025c16:	10c8      	asrs	r0, r1, #3
 8025c18:	00ca      	lsls	r2, r1, #3
 8025c1a:	fb0c fc0e 	mul.w	ip, ip, lr
 8025c1e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8025c22:	b2d2      	uxtb	r2, r2
 8025c24:	f10c 0101 	add.w	r1, ip, #1
 8025c28:	fb00 f00e 	mul.w	r0, r0, lr
 8025c2c:	fb02 f20e 	mul.w	r2, r2, lr
 8025c30:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025c34:	0c39      	lsrs	r1, r7, #16
 8025c36:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8025c3a:	490f      	ldr	r1, [pc, #60]	@ (8025c78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8025c3c:	fa5f fc8c 	uxtb.w	ip, ip
 8025c40:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8025c44:	1c41      	adds	r1, r0, #1
 8025c46:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8025c4a:	1c51      	adds	r1, r2, #1
 8025c4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8025c50:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8025c54:	00c0      	lsls	r0, r0, #3
 8025c56:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8025c5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025c5e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8025c62:	ea4c 0c00 	orr.w	ip, ip, r0
 8025c66:	ea47 0c0c 	orr.w	ip, r7, ip
 8025c6a:	f8a8 c000 	strh.w	ip, [r8]
 8025c6e:	e7b7      	b.n	8025be0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8025c70:	b01b      	add	sp, #108	@ 0x6c
 8025c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025c76:	bf00      	nop
 8025c78:	fffff800 	.word	0xfffff800

08025c7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8025c7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025c80:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8025c84:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8025c88:	2d00      	cmp	r5, #0
 8025c8a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8025c8e:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8025c92:	fb05 0e03 	mla	lr, r5, r3, r0
 8025c96:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8025c9a:	f2c0 808c 	blt.w	8025db6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025c9e:	45a9      	cmp	r9, r5
 8025ca0:	f340 8089 	ble.w	8025db6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8025ca4:	2800      	cmp	r0, #0
 8025ca6:	f2c0 8084 	blt.w	8025db2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025caa:	4580      	cmp	r8, r0
 8025cac:	f340 8081 	ble.w	8025db2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8025cb0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8025cb4:	f01e 0f01 	tst.w	lr, #1
 8025cb8:	5d16      	ldrb	r6, [r2, r4]
 8025cba:	bf0c      	ite	eq
 8025cbc:	f006 060f 	andeq.w	r6, r6, #15
 8025cc0:	1136      	asrne	r6, r6, #4
 8025cc2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8025cc6:	b2f6      	uxtb	r6, r6
 8025cc8:	1c44      	adds	r4, r0, #1
 8025cca:	d477      	bmi.n	8025dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025ccc:	45a0      	cmp	r8, r4
 8025cce:	dd75      	ble.n	8025dbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8025cd0:	2f00      	cmp	r7, #0
 8025cd2:	d075      	beq.n	8025dc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8025cd4:	f10e 0a01 	add.w	sl, lr, #1
 8025cd8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8025cdc:	f01a 0f01 	tst.w	sl, #1
 8025ce0:	5d14      	ldrb	r4, [r2, r4]
 8025ce2:	bf0c      	ite	eq
 8025ce4:	f004 040f 	andeq.w	r4, r4, #15
 8025ce8:	1124      	asrne	r4, r4, #4
 8025cea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8025cee:	b2e4      	uxtb	r4, r4
 8025cf0:	3501      	adds	r5, #1
 8025cf2:	d469      	bmi.n	8025dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025cf4:	45a9      	cmp	r9, r5
 8025cf6:	dd67      	ble.n	8025dc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8025cf8:	f1bc 0f00 	cmp.w	ip, #0
 8025cfc:	d067      	beq.n	8025dce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8025cfe:	2800      	cmp	r0, #0
 8025d00:	db60      	blt.n	8025dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025d02:	4580      	cmp	r8, r0
 8025d04:	dd5e      	ble.n	8025dc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8025d06:	eb03 090e 	add.w	r9, r3, lr
 8025d0a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8025d0e:	f019 0f01 	tst.w	r9, #1
 8025d12:	5d55      	ldrb	r5, [r2, r5]
 8025d14:	bf0c      	ite	eq
 8025d16:	f005 050f 	andeq.w	r5, r5, #15
 8025d1a:	112d      	asrne	r5, r5, #4
 8025d1c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8025d20:	b2ed      	uxtb	r5, r5
 8025d22:	3001      	adds	r0, #1
 8025d24:	d456      	bmi.n	8025dd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025d26:	4580      	cmp	r8, r0
 8025d28:	dd54      	ble.n	8025dd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8025d2a:	2f00      	cmp	r7, #0
 8025d2c:	d054      	beq.n	8025dd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8025d2e:	3301      	adds	r3, #1
 8025d30:	449e      	add	lr, r3
 8025d32:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8025d36:	f01e 0f01 	tst.w	lr, #1
 8025d3a:	5cd0      	ldrb	r0, [r2, r3]
 8025d3c:	bf0c      	ite	eq
 8025d3e:	f000 000f 	andeq.w	r0, r0, #15
 8025d42:	1100      	asrne	r0, r0, #4
 8025d44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025d48:	b2c3      	uxtb	r3, r0
 8025d4a:	b2ba      	uxth	r2, r7
 8025d4c:	fa1f fc8c 	uxth.w	ip, ip
 8025d50:	fb02 f00c 	mul.w	r0, r2, ip
 8025d54:	0112      	lsls	r2, r2, #4
 8025d56:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8025d5a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8025d5e:	1a12      	subs	r2, r2, r0
 8025d60:	fa1f fc8c 	uxth.w	ip, ip
 8025d64:	b292      	uxth	r2, r2
 8025d66:	eba7 070c 	sub.w	r7, r7, ip
 8025d6a:	4362      	muls	r2, r4
 8025d6c:	b2bf      	uxth	r7, r7
 8025d6e:	fb06 2207 	mla	r2, r6, r7, r2
 8025d72:	fb0c 2505 	mla	r5, ip, r5, r2
 8025d76:	fb00 5303 	mla	r3, r0, r3, r5
 8025d7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025d7e:	b1b3      	cbz	r3, 8025dae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025d80:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 8025d84:	435a      	muls	r2, r3
 8025d86:	1c53      	adds	r3, r2, #1
 8025d88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025d8c:	4a2d      	ldr	r2, [pc, #180]	@ (8025e44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8025d8e:	121b      	asrs	r3, r3, #8
 8025d90:	6812      	ldr	r2, [r2, #0]
 8025d92:	2bff      	cmp	r3, #255	@ 0xff
 8025d94:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8025d98:	d120      	bne.n	8025ddc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8025d9a:	0950      	lsrs	r0, r2, #5
 8025d9c:	4b2a      	ldr	r3, [pc, #168]	@ (8025e48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8025d9e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025da2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025da6:	4033      	ands	r3, r6
 8025da8:	4318      	orrs	r0, r3
 8025daa:	4302      	orrs	r2, r0
 8025dac:	800a      	strh	r2, [r1, #0]
 8025dae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025db2:	2600      	movs	r6, #0
 8025db4:	e788      	b.n	8025cc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 8025db6:	2400      	movs	r4, #0
 8025db8:	4626      	mov	r6, r4
 8025dba:	e799      	b.n	8025cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025dbc:	2400      	movs	r4, #0
 8025dbe:	e797      	b.n	8025cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025dc0:	463c      	mov	r4, r7
 8025dc2:	e795      	b.n	8025cf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8025dc4:	2500      	movs	r5, #0
 8025dc6:	e7ac      	b.n	8025d22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8025dc8:	2300      	movs	r3, #0
 8025dca:	461d      	mov	r5, r3
 8025dcc:	e7bd      	b.n	8025d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025dce:	4663      	mov	r3, ip
 8025dd0:	4665      	mov	r5, ip
 8025dd2:	e7ba      	b.n	8025d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025dd4:	2300      	movs	r3, #0
 8025dd6:	e7b8      	b.n	8025d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025dd8:	463b      	mov	r3, r7
 8025dda:	e7b6      	b.n	8025d4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8025ddc:	880d      	ldrh	r5, [r1, #0]
 8025dde:	b29f      	uxth	r7, r3
 8025de0:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8025de4:	43db      	mvns	r3, r3
 8025de6:	122c      	asrs	r4, r5, #8
 8025de8:	fb10 f007 	smulbb	r0, r0, r7
 8025dec:	b2db      	uxtb	r3, r3
 8025dee:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025df2:	b2f6      	uxtb	r6, r6
 8025df4:	b2d2      	uxtb	r2, r2
 8025df6:	fb04 0403 	mla	r4, r4, r3, r0
 8025dfa:	10e8      	asrs	r0, r5, #3
 8025dfc:	fb12 f207 	smulbb	r2, r2, r7
 8025e00:	00ed      	lsls	r5, r5, #3
 8025e02:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8025e06:	b2a4      	uxth	r4, r4
 8025e08:	fb16 f607 	smulbb	r6, r6, r7
 8025e0c:	b2ed      	uxtb	r5, r5
 8025e0e:	fb00 6603 	mla	r6, r0, r3, r6
 8025e12:	fb05 2303 	mla	r3, r5, r3, r2
 8025e16:	b2b0      	uxth	r0, r6
 8025e18:	b29a      	uxth	r2, r3
 8025e1a:	1c63      	adds	r3, r4, #1
 8025e1c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8025e20:	1c53      	adds	r3, r2, #1
 8025e22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8025e26:	1c42      	adds	r2, r0, #1
 8025e28:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8025e2c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025e30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8025e34:	0940      	lsrs	r0, r0, #5
 8025e36:	4323      	orrs	r3, r4
 8025e38:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025e3c:	4303      	orrs	r3, r0
 8025e3e:	800b      	strh	r3, [r1, #0]
 8025e40:	e7b5      	b.n	8025dae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8025e42:	bf00      	nop
 8025e44:	20003994 	.word	0x20003994
 8025e48:	00fff800 	.word	0x00fff800

08025e4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025e4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e50:	b097      	sub	sp, #92	@ 0x5c
 8025e52:	9214      	str	r2, [sp, #80]	@ 0x50
 8025e54:	9309      	str	r3, [sp, #36]	@ 0x24
 8025e56:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8025e58:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8025e5c:	9015      	str	r0, [sp, #84]	@ 0x54
 8025e5e:	910d      	str	r1, [sp, #52]	@ 0x34
 8025e60:	6850      	ldr	r0, [r2, #4]
 8025e62:	930f      	str	r3, [sp, #60]	@ 0x3c
 8025e64:	6812      	ldr	r2, [r2, #0]
 8025e66:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8025e6a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 8025e6e:	fb00 1303 	mla	r3, r0, r3, r1
 8025e72:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025e76:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025e78:	689b      	ldr	r3, [r3, #8]
 8025e7a:	3301      	adds	r3, #1
 8025e7c:	f023 0301 	bic.w	r3, r3, #1
 8025e80:	930a      	str	r3, [sp, #40]	@ 0x28
 8025e82:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025e84:	681f      	ldr	r7, [r3, #0]
 8025e86:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8025e88:	2b00      	cmp	r3, #0
 8025e8a:	dc03      	bgt.n	8025e94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8025e8c:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8025e8e:	2b00      	cmp	r3, #0
 8025e90:	f340 8289 	ble.w	80263a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 8025e94:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025e96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025e9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025e9e:	1e48      	subs	r0, r1, #1
 8025ea0:	f102 3cff 	add.w	ip, r2, #4294967295
 8025ea4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025ea6:	2b00      	cmp	r3, #0
 8025ea8:	f340 80c5 	ble.w	8026036 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8025eac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8025eb0:	ea4f 4326 	mov.w	r3, r6, asr #16
 8025eb4:	d406      	bmi.n	8025ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025eb6:	4586      	cmp	lr, r0
 8025eb8:	da04      	bge.n	8025ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025eba:	2b00      	cmp	r3, #0
 8025ebc:	db02      	blt.n	8025ec4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8025ebe:	4563      	cmp	r3, ip
 8025ec0:	f2c0 80ba 	blt.w	8026038 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8025ec4:	f11e 0e01 	adds.w	lr, lr, #1
 8025ec8:	f100 80ab 	bmi.w	8026022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8025ecc:	4571      	cmp	r1, lr
 8025ece:	f2c0 80a8 	blt.w	8026022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8025ed2:	3301      	adds	r3, #1
 8025ed4:	f100 80a5 	bmi.w	8026022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8025ed8:	429a      	cmp	r2, r3
 8025eda:	f2c0 80a2 	blt.w	8026022 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8025ede:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8025ee0:	46c8      	mov	r8, r9
 8025ee2:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8025ee6:	930e      	str	r3, [sp, #56]	@ 0x38
 8025ee8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8025eea:	2b00      	cmp	r3, #0
 8025eec:	f340 80c4 	ble.w	8026078 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8025ef0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8025ef2:	1430      	asrs	r0, r6, #16
 8025ef4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8025ef8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8025efc:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8025f00:	1423      	asrs	r3, r4, #16
 8025f02:	f100 814f 	bmi.w	80261a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025f06:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025f0a:	455b      	cmp	r3, fp
 8025f0c:	f280 814a 	bge.w	80261a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025f10:	2800      	cmp	r0, #0
 8025f12:	f2c0 8147 	blt.w	80261a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025f16:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025f1a:	4558      	cmp	r0, fp
 8025f1c:	f280 8142 	bge.w	80261a4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8025f20:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8025f22:	fb00 3305 	mla	r3, r0, r5, r3
 8025f26:	0858      	lsrs	r0, r3, #1
 8025f28:	07dd      	lsls	r5, r3, #31
 8025f2a:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025f2e:	bf54      	ite	pl
 8025f30:	f00c 0c0f 	andpl.w	ip, ip, #15
 8025f34:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025f38:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025f3c:	fa5f fc8c 	uxtb.w	ip, ip
 8025f40:	2a00      	cmp	r2, #0
 8025f42:	f000 80dd 	beq.w	8026100 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8025f46:	1c58      	adds	r0, r3, #1
 8025f48:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025f4c:	07c0      	lsls	r0, r0, #31
 8025f4e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8025f52:	bf54      	ite	pl
 8025f54:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025f58:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025f5c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025f60:	fa5f f08e 	uxtb.w	r0, lr
 8025f64:	9010      	str	r0, [sp, #64]	@ 0x40
 8025f66:	b1d9      	cbz	r1, 8025fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8025f68:	4453      	add	r3, sl
 8025f6a:	0858      	lsrs	r0, r3, #1
 8025f6c:	07dd      	lsls	r5, r3, #31
 8025f6e:	f103 0301 	add.w	r3, r3, #1
 8025f72:	5c38      	ldrb	r0, [r7, r0]
 8025f74:	bf54      	ite	pl
 8025f76:	f000 000f 	andpl.w	r0, r0, #15
 8025f7a:	1100      	asrmi	r0, r0, #4
 8025f7c:	07dd      	lsls	r5, r3, #31
 8025f7e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025f82:	b2c0      	uxtb	r0, r0
 8025f84:	900b      	str	r0, [sp, #44]	@ 0x2c
 8025f86:	ea4f 0053 	mov.w	r0, r3, lsr #1
 8025f8a:	f817 e000 	ldrb.w	lr, [r7, r0]
 8025f8e:	bf54      	ite	pl
 8025f90:	f00e 030f 	andpl.w	r3, lr, #15
 8025f94:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8025f98:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025f9c:	b2db      	uxtb	r3, r3
 8025f9e:	9311      	str	r3, [sp, #68]	@ 0x44
 8025fa0:	b292      	uxth	r2, r2
 8025fa2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8025fa4:	b289      	uxth	r1, r1
 8025fa6:	fb02 f301 	mul.w	r3, r2, r1
 8025faa:	0112      	lsls	r2, r2, #4
 8025fac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8025fb0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8025fb4:	1ad2      	subs	r2, r2, r3
 8025fb6:	b289      	uxth	r1, r1
 8025fb8:	b292      	uxth	r2, r2
 8025fba:	1a40      	subs	r0, r0, r1
 8025fbc:	436a      	muls	r2, r5
 8025fbe:	b280      	uxth	r0, r0
 8025fc0:	fb0c 2c00 	mla	ip, ip, r0, r2
 8025fc4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8025fc6:	fb01 c102 	mla	r1, r1, r2, ip
 8025fca:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8025fcc:	fb03 1302 	mla	r3, r3, r2, r1
 8025fd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025fd4:	b1db      	cbz	r3, 802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8025fd6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8025fd8:	4353      	muls	r3, r2
 8025fda:	1c5a      	adds	r2, r3, #1
 8025fdc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8025fe0:	4ac6      	ldr	r2, [pc, #792]	@ (80262fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8025fe2:	121b      	asrs	r3, r3, #8
 8025fe4:	6812      	ldr	r2, [r2, #0]
 8025fe6:	2bff      	cmp	r3, #255	@ 0xff
 8025fe8:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8025fec:	f040 8099 	bne.w	8026122 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8025ff0:	0953      	lsrs	r3, r2, #5
 8025ff2:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8025ff6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025ffa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8025ffe:	f02c 0c07 	bic.w	ip, ip, #7
 8026002:	ea43 0c0c 	orr.w	ip, r3, ip
 8026006:	ea4c 0202 	orr.w	r2, ip, r2
 802600a:	f8a8 2000 	strh.w	r2, [r8]
 802600e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8026010:	f108 0802 	add.w	r8, r8, #2
 8026014:	441c      	add	r4, r3
 8026016:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026018:	441e      	add	r6, r3
 802601a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802601c:	3b01      	subs	r3, #1
 802601e:	930e      	str	r3, [sp, #56]	@ 0x38
 8026020:	e762      	b.n	8025ee8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8026022:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8026024:	f109 0902 	add.w	r9, r9, #2
 8026028:	441c      	add	r4, r3
 802602a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802602c:	441e      	add	r6, r3
 802602e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026030:	3b01      	subs	r3, #1
 8026032:	9309      	str	r3, [sp, #36]	@ 0x24
 8026034:	e736      	b.n	8025ea4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8026036:	d024      	beq.n	8026082 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8026038:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802603a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802603c:	3b01      	subs	r3, #1
 802603e:	fb00 4003 	mla	r0, r0, r3, r4
 8026042:	1400      	asrs	r0, r0, #16
 8026044:	f53f af4b 	bmi.w	8025ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026048:	3901      	subs	r1, #1
 802604a:	4288      	cmp	r0, r1
 802604c:	f6bf af47 	bge.w	8025ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026050:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8026052:	fb01 6303 	mla	r3, r1, r3, r6
 8026056:	141b      	asrs	r3, r3, #16
 8026058:	f53f af41 	bmi.w	8025ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802605c:	3a01      	subs	r2, #1
 802605e:	4293      	cmp	r3, r2
 8026060:	f6bf af3d 	bge.w	8025ede <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8026064:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 8026068:	46c8      	mov	r8, r9
 802606a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802606e:	930e      	str	r3, [sp, #56]	@ 0x38
 8026070:	f1bb 0f00 	cmp.w	fp, #0
 8026074:	f300 80b7 	bgt.w	80261e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 8026078:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802607a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802607e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026082:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8026084:	2b00      	cmp	r3, #0
 8026086:	f340 818e 	ble.w	80263a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 802608a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802608e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026090:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026094:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026098:	eef0 6a62 	vmov.f32	s13, s5
 802609c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80260a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80260a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80260a8:	ee16 4a90 	vmov	r4, s13
 80260ac:	eef0 6a43 	vmov.f32	s13, s6
 80260b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80260b4:	ee16 6a90 	vmov	r6, s13
 80260b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80260bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80260c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80260c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80260c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80260cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80260d0:	ee12 2a90 	vmov	r2, s5
 80260d4:	eef0 2a47 	vmov.f32	s5, s14
 80260d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80260dc:	ee13 2a10 	vmov	r2, s6
 80260e0:	9323      	str	r3, [sp, #140]	@ 0x8c
 80260e2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80260e4:	eeb0 3a67 	vmov.f32	s6, s15
 80260e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80260ec:	9324      	str	r3, [sp, #144]	@ 0x90
 80260ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80260f0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80260f2:	3b01      	subs	r3, #1
 80260f4:	930d      	str	r3, [sp, #52]	@ 0x34
 80260f6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80260f8:	bf08      	it	eq
 80260fa:	4613      	moveq	r3, r2
 80260fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80260fe:	e6c2      	b.n	8025e86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8026100:	2900      	cmp	r1, #0
 8026102:	f43f af4d 	beq.w	8025fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8026106:	eb0a 0003 	add.w	r0, sl, r3
 802610a:	0843      	lsrs	r3, r0, #1
 802610c:	07c0      	lsls	r0, r0, #31
 802610e:	5cfb      	ldrb	r3, [r7, r3]
 8026110:	bf54      	ite	pl
 8026112:	f003 030f 	andpl.w	r3, r3, #15
 8026116:	111b      	asrmi	r3, r3, #4
 8026118:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802611c:	b2db      	uxtb	r3, r3
 802611e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8026120:	e73e      	b.n	8025fa0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8026122:	f8b8 e000 	ldrh.w	lr, [r8]
 8026126:	fa1f fb83 	uxth.w	fp, r3
 802612a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802612e:	43db      	mvns	r3, r3
 8026130:	ea4f 202e 	mov.w	r0, lr, asr #8
 8026134:	fb11 f10b 	smulbb	r1, r1, fp
 8026138:	b2db      	uxtb	r3, r3
 802613a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802613e:	fa5f fc8c 	uxtb.w	ip, ip
 8026142:	b2d2      	uxtb	r2, r2
 8026144:	fb00 1003 	mla	r0, r0, r3, r1
 8026148:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802614c:	fb1c fc0b 	smulbb	ip, ip, fp
 8026150:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8026154:	b280      	uxth	r0, r0
 8026156:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802615a:	fb12 fb0b 	smulbb	fp, r2, fp
 802615e:	fa5f fe8e 	uxtb.w	lr, lr
 8026162:	fb01 cc03 	mla	ip, r1, r3, ip
 8026166:	fb0e bb03 	mla	fp, lr, r3, fp
 802616a:	1c43      	adds	r3, r0, #1
 802616c:	fa1f fc8c 	uxth.w	ip, ip
 8026170:	fa1f fb8b 	uxth.w	fp, fp
 8026174:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026178:	f10c 0101 	add.w	r1, ip, #1
 802617c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 8026180:	f10b 0001 	add.w	r0, fp, #1
 8026184:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026188:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802618c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026190:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026194:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8026198:	4318      	orrs	r0, r3
 802619a:	ea40 000c 	orr.w	r0, r0, ip
 802619e:	f8a8 0000 	strh.w	r0, [r8]
 80261a2:	e734      	b.n	802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80261a4:	f113 0b01 	adds.w	fp, r3, #1
 80261a8:	f53f af31 	bmi.w	802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80261ac:	45dc      	cmp	ip, fp
 80261ae:	f6ff af2e 	blt.w	802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80261b2:	f110 0b01 	adds.w	fp, r0, #1
 80261b6:	f53f af2a 	bmi.w	802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80261ba:	45de      	cmp	lr, fp
 80261bc:	f6ff af27 	blt.w	802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80261c0:	9302      	str	r3, [sp, #8]
 80261c2:	fa0f f38e 	sxth.w	r3, lr
 80261c6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80261c8:	9301      	str	r3, [sp, #4]
 80261ca:	fa0f f38c 	sxth.w	r3, ip
 80261ce:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80261d2:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80261d6:	9300      	str	r3, [sp, #0]
 80261d8:	463a      	mov	r2, r7
 80261da:	4653      	mov	r3, sl
 80261dc:	4641      	mov	r1, r8
 80261de:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80261e0:	f7ff fd4c 	bl	8025c7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80261e4:	e713      	b.n	802600e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80261e6:	1422      	asrs	r2, r4, #16
 80261e8:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 80261ea:	1433      	asrs	r3, r6, #16
 80261ec:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80261f0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80261f4:	fb05 2303 	mla	r3, r5, r3, r2
 80261f8:	085a      	lsrs	r2, r3, #1
 80261fa:	07dd      	lsls	r5, r3, #31
 80261fc:	5cba      	ldrb	r2, [r7, r2]
 80261fe:	bf54      	ite	pl
 8026200:	f002 020f 	andpl.w	r2, r2, #15
 8026204:	1112      	asrmi	r2, r2, #4
 8026206:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802620a:	b2d2      	uxtb	r2, r2
 802620c:	2900      	cmp	r1, #0
 802620e:	d077      	beq.n	8026300 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8026210:	f103 0e01 	add.w	lr, r3, #1
 8026214:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8026218:	f01e 0f01 	tst.w	lr, #1
 802621c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026220:	bf0c      	ite	eq
 8026222:	f00c 0c0f 	andeq.w	ip, ip, #15
 8026226:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802622a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802622e:	fa5f f58c 	uxtb.w	r5, ip
 8026232:	9512      	str	r5, [sp, #72]	@ 0x48
 8026234:	b308      	cbz	r0, 802627a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8026236:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026238:	442b      	add	r3, r5
 802623a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802623e:	07dd      	lsls	r5, r3, #31
 8026240:	f103 0301 	add.w	r3, r3, #1
 8026244:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026248:	bf54      	ite	pl
 802624a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802624e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026252:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026256:	fa5f f58c 	uxtb.w	r5, ip
 802625a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802625e:	950c      	str	r5, [sp, #48]	@ 0x30
 8026260:	07dd      	lsls	r5, r3, #31
 8026262:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026266:	bf54      	ite	pl
 8026268:	f00c 0c0f 	andpl.w	ip, ip, #15
 802626c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8026270:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026274:	fa5f f38c 	uxtb.w	r3, ip
 8026278:	9313      	str	r3, [sp, #76]	@ 0x4c
 802627a:	b289      	uxth	r1, r1
 802627c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802627e:	b280      	uxth	r0, r0
 8026280:	fb01 f300 	mul.w	r3, r1, r0
 8026284:	0109      	lsls	r1, r1, #4
 8026286:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802628a:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 802628e:	1ac9      	subs	r1, r1, r3
 8026290:	b280      	uxth	r0, r0
 8026292:	b289      	uxth	r1, r1
 8026294:	ebac 0c00 	sub.w	ip, ip, r0
 8026298:	4369      	muls	r1, r5
 802629a:	fa1f fc8c 	uxth.w	ip, ip
 802629e:	fb02 120c 	mla	r2, r2, ip, r1
 80262a2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80262a4:	fb00 2001 	mla	r0, r0, r1, r2
 80262a8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80262aa:	fb03 0302 	mla	r3, r3, r2, r0
 80262ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80262b2:	b1d3      	cbz	r3, 80262ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80262b4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80262b6:	4353      	muls	r3, r2
 80262b8:	1c5a      	adds	r2, r3, #1
 80262ba:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80262be:	4a0f      	ldr	r2, [pc, #60]	@ (80262fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 80262c0:	121b      	asrs	r3, r3, #8
 80262c2:	6812      	ldr	r2, [r2, #0]
 80262c4:	2bff      	cmp	r3, #255	@ 0xff
 80262c6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80262ca:	d12d      	bne.n	8026328 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 80262cc:	0953      	lsrs	r3, r2, #5
 80262ce:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 80262d2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80262d6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80262da:	f02c 0c07 	bic.w	ip, ip, #7
 80262de:	ea43 0c0c 	orr.w	ip, r3, ip
 80262e2:	ea4c 0202 	orr.w	r2, ip, r2
 80262e6:	f8a8 2000 	strh.w	r2, [r8]
 80262ea:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80262ec:	f108 0802 	add.w	r8, r8, #2
 80262f0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80262f4:	441c      	add	r4, r3
 80262f6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80262f8:	441e      	add	r6, r3
 80262fa:	e6b9      	b.n	8026070 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80262fc:	20003994 	.word	0x20003994
 8026300:	2800      	cmp	r0, #0
 8026302:	d0ba      	beq.n	802627a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8026304:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8026306:	442b      	add	r3, r5
 8026308:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802630c:	07db      	lsls	r3, r3, #31
 802630e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8026312:	bf54      	ite	pl
 8026314:	f00c 0c0f 	andpl.w	ip, ip, #15
 8026318:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802631c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026320:	fa5f f38c 	uxtb.w	r3, ip
 8026324:	930c      	str	r3, [sp, #48]	@ 0x30
 8026326:	e7a8      	b.n	802627a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8026328:	f8b8 e000 	ldrh.w	lr, [r8]
 802632c:	fa1f fa83 	uxth.w	sl, r3
 8026330:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8026334:	43db      	mvns	r3, r3
 8026336:	ea4f 202e 	mov.w	r0, lr, asr #8
 802633a:	fb11 f10a 	smulbb	r1, r1, sl
 802633e:	b2db      	uxtb	r3, r3
 8026340:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8026344:	b2d2      	uxtb	r2, r2
 8026346:	fa5f fc8c 	uxtb.w	ip, ip
 802634a:	fb00 1003 	mla	r0, r0, r3, r1
 802634e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8026352:	fb12 f20a 	smulbb	r2, r2, sl
 8026356:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802635a:	b280      	uxth	r0, r0
 802635c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8026360:	fb1c fc0a 	smulbb	ip, ip, sl
 8026364:	fa5f fe8e 	uxtb.w	lr, lr
 8026368:	fb0e 2203 	mla	r2, lr, r3, r2
 802636c:	fb01 cc03 	mla	ip, r1, r3, ip
 8026370:	1c43      	adds	r3, r0, #1
 8026372:	b292      	uxth	r2, r2
 8026374:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8026378:	1c51      	adds	r1, r2, #1
 802637a:	fa1f fc8c 	uxth.w	ip, ip
 802637e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8026382:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8026386:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802638a:	4308      	orrs	r0, r1
 802638c:	f10c 0101 	add.w	r1, ip, #1
 8026390:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8026394:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8026398:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802639c:	ea40 000c 	orr.w	r0, r0, ip
 80263a0:	f8a8 0000 	strh.w	r0, [r8]
 80263a4:	e7a1      	b.n	80262ea <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80263a6:	b017      	add	sp, #92	@ 0x5c
 80263a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080263ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80263ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80263b0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80263b4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80263b8:	2d00      	cmp	r5, #0
 80263ba:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80263be:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80263c2:	fb05 0e03 	mla	lr, r5, r3, r0
 80263c6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80263ca:	f2c0 80b0 	blt.w	802652e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80263ce:	45a9      	cmp	r9, r5
 80263d0:	f340 80ad 	ble.w	802652e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80263d4:	2800      	cmp	r0, #0
 80263d6:	f2c0 80a8 	blt.w	802652a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80263da:	4580      	cmp	r8, r0
 80263dc:	f340 80a5 	ble.w	802652a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80263e0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80263e4:	f01e 0f01 	tst.w	lr, #1
 80263e8:	5d16      	ldrb	r6, [r2, r4]
 80263ea:	bf0c      	ite	eq
 80263ec:	f006 060f 	andeq.w	r6, r6, #15
 80263f0:	1136      	asrne	r6, r6, #4
 80263f2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80263f6:	b2f6      	uxtb	r6, r6
 80263f8:	1c44      	adds	r4, r0, #1
 80263fa:	f100 809b 	bmi.w	8026534 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80263fe:	45a0      	cmp	r8, r4
 8026400:	f340 8098 	ble.w	8026534 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8026404:	2f00      	cmp	r7, #0
 8026406:	f000 8097 	beq.w	8026538 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802640a:	f10e 0a01 	add.w	sl, lr, #1
 802640e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8026412:	f01a 0f01 	tst.w	sl, #1
 8026416:	5d14      	ldrb	r4, [r2, r4]
 8026418:	bf0c      	ite	eq
 802641a:	f004 040f 	andeq.w	r4, r4, #15
 802641e:	1124      	asrne	r4, r4, #4
 8026420:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8026424:	b2e4      	uxtb	r4, r4
 8026426:	3501      	adds	r5, #1
 8026428:	f100 808a 	bmi.w	8026540 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802642c:	45a9      	cmp	r9, r5
 802642e:	f340 8087 	ble.w	8026540 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8026432:	f1bc 0f00 	cmp.w	ip, #0
 8026436:	f000 8086 	beq.w	8026546 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802643a:	2800      	cmp	r0, #0
 802643c:	db7e      	blt.n	802653c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802643e:	4580      	cmp	r8, r0
 8026440:	dd7c      	ble.n	802653c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8026442:	eb03 090e 	add.w	r9, r3, lr
 8026446:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802644a:	f019 0f01 	tst.w	r9, #1
 802644e:	5d55      	ldrb	r5, [r2, r5]
 8026450:	bf0c      	ite	eq
 8026452:	f005 050f 	andeq.w	r5, r5, #15
 8026456:	112d      	asrne	r5, r5, #4
 8026458:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802645c:	b2ed      	uxtb	r5, r5
 802645e:	3001      	adds	r0, #1
 8026460:	d474      	bmi.n	802654c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026462:	4580      	cmp	r8, r0
 8026464:	dd72      	ble.n	802654c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8026466:	2f00      	cmp	r7, #0
 8026468:	d072      	beq.n	8026550 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802646a:	3301      	adds	r3, #1
 802646c:	449e      	add	lr, r3
 802646e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8026472:	f01e 0f01 	tst.w	lr, #1
 8026476:	5cd0      	ldrb	r0, [r2, r3]
 8026478:	bf0c      	ite	eq
 802647a:	f000 000f 	andeq.w	r0, r0, #15
 802647e:	1100      	asrne	r0, r0, #4
 8026480:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026484:	b2c3      	uxtb	r3, r0
 8026486:	b2ba      	uxth	r2, r7
 8026488:	fa1f fc8c 	uxth.w	ip, ip
 802648c:	fb02 f00c 	mul.w	r0, r2, ip
 8026490:	0112      	lsls	r2, r2, #4
 8026492:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8026496:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802649a:	1a12      	subs	r2, r2, r0
 802649c:	fa1f fc8c 	uxth.w	ip, ip
 80264a0:	b292      	uxth	r2, r2
 80264a2:	eba7 070c 	sub.w	r7, r7, ip
 80264a6:	4362      	muls	r2, r4
 80264a8:	b2bf      	uxth	r7, r7
 80264aa:	fb06 2207 	mla	r2, r6, r7, r2
 80264ae:	fb0c 2505 	mla	r5, ip, r5, r2
 80264b2:	fb00 5303 	mla	r3, r0, r3, r5
 80264b6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80264ba:	b3a3      	cbz	r3, 8026526 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80264bc:	4a25      	ldr	r2, [pc, #148]	@ (8026554 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80264be:	880e      	ldrh	r6, [r1, #0]
 80264c0:	6815      	ldr	r5, [r2, #0]
 80264c2:	b29a      	uxth	r2, r3
 80264c4:	1234      	asrs	r4, r6, #8
 80264c6:	43db      	mvns	r3, r3
 80264c8:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80264cc:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80264d0:	b2db      	uxtb	r3, r3
 80264d2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80264d6:	fb10 f002 	smulbb	r0, r0, r2
 80264da:	b2ed      	uxtb	r5, r5
 80264dc:	fb17 f702 	smulbb	r7, r7, r2
 80264e0:	fb04 0403 	mla	r4, r4, r3, r0
 80264e4:	10f0      	asrs	r0, r6, #3
 80264e6:	fb15 f202 	smulbb	r2, r5, r2
 80264ea:	00f6      	lsls	r6, r6, #3
 80264ec:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80264f0:	b2a4      	uxth	r4, r4
 80264f2:	b2f6      	uxtb	r6, r6
 80264f4:	fb00 7003 	mla	r0, r0, r3, r7
 80264f8:	fb06 2303 	mla	r3, r6, r3, r2
 80264fc:	b280      	uxth	r0, r0
 80264fe:	b29a      	uxth	r2, r3
 8026500:	1c63      	adds	r3, r4, #1
 8026502:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8026506:	1c53      	adds	r3, r2, #1
 8026508:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802650c:	1c42      	adds	r2, r0, #1
 802650e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8026512:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026516:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802651a:	0940      	lsrs	r0, r0, #5
 802651c:	4323      	orrs	r3, r4
 802651e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8026522:	4303      	orrs	r3, r0
 8026524:	800b      	strh	r3, [r1, #0]
 8026526:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802652a:	2600      	movs	r6, #0
 802652c:	e764      	b.n	80263f8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802652e:	2400      	movs	r4, #0
 8026530:	4626      	mov	r6, r4
 8026532:	e778      	b.n	8026426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026534:	2400      	movs	r4, #0
 8026536:	e776      	b.n	8026426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8026538:	463c      	mov	r4, r7
 802653a:	e774      	b.n	8026426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802653c:	2500      	movs	r5, #0
 802653e:	e78e      	b.n	802645e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8026540:	2300      	movs	r3, #0
 8026542:	461d      	mov	r5, r3
 8026544:	e79f      	b.n	8026486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026546:	4663      	mov	r3, ip
 8026548:	4665      	mov	r5, ip
 802654a:	e79c      	b.n	8026486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802654c:	2300      	movs	r3, #0
 802654e:	e79a      	b.n	8026486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026550:	463b      	mov	r3, r7
 8026552:	e798      	b.n	8026486 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8026554:	20003994 	.word	0x20003994

08026558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802655c:	b093      	sub	sp, #76	@ 0x4c
 802655e:	461d      	mov	r5, r3
 8026560:	920c      	str	r2, [sp, #48]	@ 0x30
 8026562:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8026564:	9011      	str	r0, [sp, #68]	@ 0x44
 8026566:	9107      	str	r1, [sp, #28]
 8026568:	6850      	ldr	r0, [r2, #4]
 802656a:	6812      	ldr	r2, [r2, #0]
 802656c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8026570:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8026574:	fb00 1303 	mla	r3, r0, r3, r1
 8026578:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802657c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802657e:	689b      	ldr	r3, [r3, #8]
 8026580:	3301      	adds	r3, #1
 8026582:	f023 0301 	bic.w	r3, r3, #1
 8026586:	9306      	str	r3, [sp, #24]
 8026588:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802658a:	681f      	ldr	r7, [r3, #0]
 802658c:	9b07      	ldr	r3, [sp, #28]
 802658e:	2b00      	cmp	r3, #0
 8026590:	dc03      	bgt.n	802659a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8026592:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8026594:	2b00      	cmp	r3, #0
 8026596:	f340 8267 	ble.w	8026a68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802659a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802659c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80265a0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80265a4:	1e48      	subs	r0, r1, #1
 80265a6:	f102 3cff 	add.w	ip, r2, #4294967295
 80265aa:	2d00      	cmp	r5, #0
 80265ac:	f340 80b7 	ble.w	802671e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80265b0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80265b4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80265b8:	d406      	bmi.n	80265c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80265ba:	4586      	cmp	lr, r0
 80265bc:	da04      	bge.n	80265c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80265be:	2b00      	cmp	r3, #0
 80265c0:	db02      	blt.n	80265c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80265c2:	4563      	cmp	r3, ip
 80265c4:	f2c0 80ac 	blt.w	8026720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80265c8:	f11e 0e01 	adds.w	lr, lr, #1
 80265cc:	f100 809f 	bmi.w	802670e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80265d0:	4571      	cmp	r1, lr
 80265d2:	f2c0 809c 	blt.w	802670e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80265d6:	3301      	adds	r3, #1
 80265d8:	f100 8099 	bmi.w	802670e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80265dc:	429a      	cmp	r2, r3
 80265de:	f2c0 8096 	blt.w	802670e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 80265e2:	46c8      	mov	r8, r9
 80265e4:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80265e8:	9509      	str	r5, [sp, #36]	@ 0x24
 80265ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80265ec:	2b00      	cmp	r3, #0
 80265ee:	f340 80b5 	ble.w	802675c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80265f2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80265f6:	1430      	asrs	r0, r6, #16
 80265f8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80265fc:	9308      	str	r3, [sp, #32]
 80265fe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8026600:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8026604:	1423      	asrs	r3, r4, #16
 8026606:	f100 813f 	bmi.w	8026888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802660a:	f10c 3bff 	add.w	fp, ip, #4294967295
 802660e:	455b      	cmp	r3, fp
 8026610:	f280 813a 	bge.w	8026888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026614:	2800      	cmp	r0, #0
 8026616:	f2c0 8137 	blt.w	8026888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802661a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802661e:	4558      	cmp	r0, fp
 8026620:	f280 8132 	bge.w	8026888 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8026624:	9a06      	ldr	r2, [sp, #24]
 8026626:	fb00 3302 	mla	r3, r0, r2, r3
 802662a:	0858      	lsrs	r0, r3, #1
 802662c:	07da      	lsls	r2, r3, #31
 802662e:	9a08      	ldr	r2, [sp, #32]
 8026630:	f817 c000 	ldrb.w	ip, [r7, r0]
 8026634:	bf54      	ite	pl
 8026636:	f00c 0c0f 	andpl.w	ip, ip, #15
 802663a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802663e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8026642:	fa5f fc8c 	uxtb.w	ip, ip
 8026646:	2a00      	cmp	r2, #0
 8026648:	f000 80cc 	beq.w	80267e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802664c:	1c58      	adds	r0, r3, #1
 802664e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8026652:	07c0      	lsls	r0, r0, #31
 8026654:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8026658:	bf54      	ite	pl
 802665a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802665e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8026662:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8026666:	fa5f fe8e 	uxtb.w	lr, lr
 802666a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 802666e:	b1b9      	cbz	r1, 80266a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8026670:	4453      	add	r3, sl
 8026672:	0858      	lsrs	r0, r3, #1
 8026674:	07da      	lsls	r2, r3, #31
 8026676:	5c38      	ldrb	r0, [r7, r0]
 8026678:	bf54      	ite	pl
 802667a:	f000 000f 	andpl.w	r0, r0, #15
 802667e:	1100      	asrmi	r0, r0, #4
 8026680:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8026684:	b2c0      	uxtb	r0, r0
 8026686:	900a      	str	r0, [sp, #40]	@ 0x28
 8026688:	1c58      	adds	r0, r3, #1
 802668a:	0843      	lsrs	r3, r0, #1
 802668c:	07c2      	lsls	r2, r0, #31
 802668e:	5cfb      	ldrb	r3, [r7, r3]
 8026690:	bf54      	ite	pl
 8026692:	f003 030f 	andpl.w	r3, r3, #15
 8026696:	111b      	asrmi	r3, r3, #4
 8026698:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802669c:	b2db      	uxtb	r3, r3
 802669e:	930e      	str	r3, [sp, #56]	@ 0x38
 80266a0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80266a4:	b289      	uxth	r1, r1
 80266a6:	fb02 f301 	mul.w	r3, r2, r1
 80266aa:	0112      	lsls	r2, r2, #4
 80266ac:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80266b0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80266b4:	1ad2      	subs	r2, r2, r3
 80266b6:	b289      	uxth	r1, r1
 80266b8:	b292      	uxth	r2, r2
 80266ba:	1a40      	subs	r0, r0, r1
 80266bc:	fa1f fe80 	uxth.w	lr, r0
 80266c0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80266c2:	4342      	muls	r2, r0
 80266c4:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80266c8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80266ca:	fb01 c102 	mla	r1, r1, r2, ip
 80266ce:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80266d0:	fb03 1302 	mla	r3, r3, r2, r1
 80266d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80266d8:	2bff      	cmp	r3, #255	@ 0xff
 80266da:	f040 8094 	bne.w	8026806 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80266de:	4bbf      	ldr	r3, [pc, #764]	@ (80269dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80266e0:	681a      	ldr	r2, [r3, #0]
 80266e2:	4bbf      	ldr	r3, [pc, #764]	@ (80269e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80266e4:	0951      	lsrs	r1, r2, #5
 80266e6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80266ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80266ee:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80266f2:	430b      	orrs	r3, r1
 80266f4:	4313      	orrs	r3, r2
 80266f6:	f8a8 3000 	strh.w	r3, [r8]
 80266fa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80266fc:	f108 0802 	add.w	r8, r8, #2
 8026700:	441c      	add	r4, r3
 8026702:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8026704:	441e      	add	r6, r3
 8026706:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026708:	3b01      	subs	r3, #1
 802670a:	9309      	str	r3, [sp, #36]	@ 0x24
 802670c:	e76d      	b.n	80265ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802670e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8026710:	3d01      	subs	r5, #1
 8026712:	f109 0902 	add.w	r9, r9, #2
 8026716:	441c      	add	r4, r3
 8026718:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802671a:	441e      	add	r6, r3
 802671c:	e745      	b.n	80265aa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802671e:	d021      	beq.n	8026764 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8026720:	1e6b      	subs	r3, r5, #1
 8026722:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8026724:	fb00 4003 	mla	r0, r0, r3, r4
 8026728:	1400      	asrs	r0, r0, #16
 802672a:	f53f af5a 	bmi.w	80265e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802672e:	3901      	subs	r1, #1
 8026730:	4288      	cmp	r0, r1
 8026732:	f6bf af56 	bge.w	80265e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026736:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8026738:	fb01 6303 	mla	r3, r1, r3, r6
 802673c:	141b      	asrs	r3, r3, #16
 802673e:	f53f af50 	bmi.w	80265e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8026742:	3a01      	subs	r2, #1
 8026744:	4293      	cmp	r3, r2
 8026746:	f6bf af4c 	bge.w	80265e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802674a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802674e:	46a8      	mov	r8, r5
 8026750:	46ce      	mov	lr, r9
 8026752:	9308      	str	r3, [sp, #32]
 8026754:	f1b8 0f00 	cmp.w	r8, #0
 8026758:	f300 80b6 	bgt.w	80268c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802675c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8026760:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8026764:	9b07      	ldr	r3, [sp, #28]
 8026766:	2b00      	cmp	r3, #0
 8026768:	f340 817e 	ble.w	8026a68 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802676c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8026770:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8026772:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026776:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802677a:	eef0 6a62 	vmov.f32	s13, s5
 802677e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026782:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026786:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802678a:	ee16 4a90 	vmov	r4, s13
 802678e:	eef0 6a43 	vmov.f32	s13, s6
 8026792:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026796:	ee16 6a90 	vmov	r6, s13
 802679a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802679e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80267a2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80267a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80267aa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80267ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80267b2:	ee12 2a90 	vmov	r2, s5
 80267b6:	eef0 2a47 	vmov.f32	s5, s14
 80267ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80267be:	ee13 2a10 	vmov	r2, s6
 80267c2:	931f      	str	r3, [sp, #124]	@ 0x7c
 80267c4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80267c6:	eeb0 3a67 	vmov.f32	s6, s15
 80267ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80267ce:	9320      	str	r3, [sp, #128]	@ 0x80
 80267d0:	9b07      	ldr	r3, [sp, #28]
 80267d2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80267d4:	3b01      	subs	r3, #1
 80267d6:	9307      	str	r3, [sp, #28]
 80267d8:	bf08      	it	eq
 80267da:	4615      	moveq	r5, r2
 80267dc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 80267de:	bf18      	it	ne
 80267e0:	461d      	movne	r5, r3
 80267e2:	e6d3      	b.n	802658c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80267e4:	2900      	cmp	r1, #0
 80267e6:	f43f af5b 	beq.w	80266a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80267ea:	eb0a 0003 	add.w	r0, sl, r3
 80267ee:	0843      	lsrs	r3, r0, #1
 80267f0:	07c0      	lsls	r0, r0, #31
 80267f2:	5cfb      	ldrb	r3, [r7, r3]
 80267f4:	bf54      	ite	pl
 80267f6:	f003 030f 	andpl.w	r3, r3, #15
 80267fa:	111b      	asrmi	r3, r3, #4
 80267fc:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8026800:	b2db      	uxtb	r3, r3
 8026802:	930a      	str	r3, [sp, #40]	@ 0x28
 8026804:	e74c      	b.n	80266a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8026806:	2b00      	cmp	r3, #0
 8026808:	f43f af77 	beq.w	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802680c:	4a73      	ldr	r2, [pc, #460]	@ (80269dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802680e:	fa1f fe83 	uxth.w	lr, r3
 8026812:	f8b8 c000 	ldrh.w	ip, [r8]
 8026816:	43db      	mvns	r3, r3
 8026818:	6810      	ldr	r0, [r2, #0]
 802681a:	ea4f 212c 	mov.w	r1, ip, asr #8
 802681e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8026822:	b2db      	uxtb	r3, r3
 8026824:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8026828:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802682c:	fb12 f20e 	smulbb	r2, r2, lr
 8026830:	b2c0      	uxtb	r0, r0
 8026832:	fb1b fb0e 	smulbb	fp, fp, lr
 8026836:	fb01 2103 	mla	r1, r1, r3, r2
 802683a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802683e:	fb10 fe0e 	smulbb	lr, r0, lr
 8026842:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026846:	b289      	uxth	r1, r1
 8026848:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802684c:	fa5f fc8c 	uxtb.w	ip, ip
 8026850:	fb02 b203 	mla	r2, r2, r3, fp
 8026854:	1c48      	adds	r0, r1, #1
 8026856:	fb0c e303 	mla	r3, ip, r3, lr
 802685a:	b292      	uxth	r2, r2
 802685c:	b29b      	uxth	r3, r3
 802685e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8026862:	f102 0b01 	add.w	fp, r2, #1
 8026866:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 802686a:	1c59      	adds	r1, r3, #1
 802686c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026870:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8026874:	0952      	lsrs	r2, r2, #5
 8026876:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802687a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802687e:	4301      	orrs	r1, r0
 8026880:	4311      	orrs	r1, r2
 8026882:	f8a8 1000 	strh.w	r1, [r8]
 8026886:	e738      	b.n	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8026888:	f113 0b01 	adds.w	fp, r3, #1
 802688c:	f53f af35 	bmi.w	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8026890:	45dc      	cmp	ip, fp
 8026892:	f6ff af32 	blt.w	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8026896:	f110 0b01 	adds.w	fp, r0, #1
 802689a:	f53f af2e 	bmi.w	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 802689e:	45de      	cmp	lr, fp
 80268a0:	f6ff af2b 	blt.w	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80268a4:	9302      	str	r3, [sp, #8]
 80268a6:	fa0f f38e 	sxth.w	r3, lr
 80268aa:	9a08      	ldr	r2, [sp, #32]
 80268ac:	9301      	str	r3, [sp, #4]
 80268ae:	fa0f f38c 	sxth.w	r3, ip
 80268b2:	9105      	str	r1, [sp, #20]
 80268b4:	4641      	mov	r1, r8
 80268b6:	9300      	str	r3, [sp, #0]
 80268b8:	4653      	mov	r3, sl
 80268ba:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80268be:	463a      	mov	r2, r7
 80268c0:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80268c2:	f7ff fd73 	bl	80263ac <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80268c6:	e718      	b.n	80266fa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 80268c8:	1422      	asrs	r2, r4, #16
 80268ca:	9906      	ldr	r1, [sp, #24]
 80268cc:	1433      	asrs	r3, r6, #16
 80268ce:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80268d2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80268d6:	fb01 2303 	mla	r3, r1, r3, r2
 80268da:	085a      	lsrs	r2, r3, #1
 80268dc:	07d9      	lsls	r1, r3, #31
 80268de:	5cba      	ldrb	r2, [r7, r2]
 80268e0:	bf54      	ite	pl
 80268e2:	f002 020f 	andpl.w	r2, r2, #15
 80268e6:	1112      	asrmi	r2, r2, #4
 80268e8:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80268ec:	b2d2      	uxtb	r2, r2
 80268ee:	2800      	cmp	r0, #0
 80268f0:	d063      	beq.n	80269ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 80268f2:	f103 0a01 	add.w	sl, r3, #1
 80268f6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80268fa:	f01a 0f01 	tst.w	sl, #1
 80268fe:	5c79      	ldrb	r1, [r7, r1]
 8026900:	bf0c      	ite	eq
 8026902:	f001 010f 	andeq.w	r1, r1, #15
 8026906:	1109      	asrne	r1, r1, #4
 8026908:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802690c:	b2c9      	uxtb	r1, r1
 802690e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8026910:	f1bc 0f00 	cmp.w	ip, #0
 8026914:	d01a      	beq.n	802694c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8026916:	9908      	ldr	r1, [sp, #32]
 8026918:	440b      	add	r3, r1
 802691a:	0859      	lsrs	r1, r3, #1
 802691c:	f013 0f01 	tst.w	r3, #1
 8026920:	f103 0301 	add.w	r3, r3, #1
 8026924:	5c79      	ldrb	r1, [r7, r1]
 8026926:	bf0c      	ite	eq
 8026928:	f001 010f 	andeq.w	r1, r1, #15
 802692c:	1109      	asrne	r1, r1, #4
 802692e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026932:	b2c9      	uxtb	r1, r1
 8026934:	910b      	str	r1, [sp, #44]	@ 0x2c
 8026936:	0859      	lsrs	r1, r3, #1
 8026938:	07db      	lsls	r3, r3, #31
 802693a:	5c79      	ldrb	r1, [r7, r1]
 802693c:	bf54      	ite	pl
 802693e:	f001 010f 	andpl.w	r1, r1, #15
 8026942:	1109      	asrmi	r1, r1, #4
 8026944:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8026948:	b2c9      	uxtb	r1, r1
 802694a:	9110      	str	r1, [sp, #64]	@ 0x40
 802694c:	b280      	uxth	r0, r0
 802694e:	fa1f fc8c 	uxth.w	ip, ip
 8026952:	fb00 f30c 	mul.w	r3, r0, ip
 8026956:	0100      	lsls	r0, r0, #4
 8026958:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802695c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8026960:	1ac0      	subs	r0, r0, r3
 8026962:	fa1f fc8c 	uxth.w	ip, ip
 8026966:	b280      	uxth	r0, r0
 8026968:	eba1 010c 	sub.w	r1, r1, ip
 802696c:	fa1f fa81 	uxth.w	sl, r1
 8026970:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8026972:	4348      	muls	r0, r1
 8026974:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8026976:	fb02 020a 	mla	r2, r2, sl, r0
 802697a:	fb0c 2c01 	mla	ip, ip, r1, r2
 802697e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8026980:	fb03 c302 	mla	r3, r3, r2, ip
 8026984:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026988:	2bff      	cmp	r3, #255	@ 0xff
 802698a:	d12b      	bne.n	80269e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802698c:	4b13      	ldr	r3, [pc, #76]	@ (80269dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802698e:	681a      	ldr	r2, [r3, #0]
 8026990:	4b13      	ldr	r3, [pc, #76]	@ (80269e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8026992:	0951      	lsrs	r1, r2, #5
 8026994:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8026998:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802699c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80269a0:	430b      	orrs	r3, r1
 80269a2:	4313      	orrs	r3, r2
 80269a4:	f8ae 3000 	strh.w	r3, [lr]
 80269a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80269aa:	f10e 0e02 	add.w	lr, lr, #2
 80269ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80269b2:	441c      	add	r4, r3
 80269b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80269b6:	441e      	add	r6, r3
 80269b8:	e6cc      	b.n	8026754 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80269ba:	f1bc 0f00 	cmp.w	ip, #0
 80269be:	d0c5      	beq.n	802694c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80269c0:	9908      	ldr	r1, [sp, #32]
 80269c2:	440b      	add	r3, r1
 80269c4:	0859      	lsrs	r1, r3, #1
 80269c6:	07db      	lsls	r3, r3, #31
 80269c8:	5c79      	ldrb	r1, [r7, r1]
 80269ca:	bf54      	ite	pl
 80269cc:	f001 010f 	andpl.w	r1, r1, #15
 80269d0:	1109      	asrmi	r1, r1, #4
 80269d2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80269d6:	b2c9      	uxtb	r1, r1
 80269d8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80269da:	e7b7      	b.n	802694c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80269dc:	20003994 	.word	0x20003994
 80269e0:	fffff800 	.word	0xfffff800
 80269e4:	2b00      	cmp	r3, #0
 80269e6:	d0df      	beq.n	80269a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 80269e8:	4a21      	ldr	r2, [pc, #132]	@ (8026a70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80269ea:	fa1f fa83 	uxth.w	sl, r3
 80269ee:	f8be c000 	ldrh.w	ip, [lr]
 80269f2:	43db      	mvns	r3, r3
 80269f4:	6810      	ldr	r0, [r2, #0]
 80269f6:	ea4f 212c 	mov.w	r1, ip, asr #8
 80269fa:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80269fe:	b2db      	uxtb	r3, r3
 8026a00:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8026a04:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8026a08:	fb12 f20a 	smulbb	r2, r2, sl
 8026a0c:	b2c0      	uxtb	r0, r0
 8026a0e:	fb1b fb0a 	smulbb	fp, fp, sl
 8026a12:	fb01 2103 	mla	r1, r1, r3, r2
 8026a16:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8026a1a:	fb10 f00a 	smulbb	r0, r0, sl
 8026a1e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8026a22:	b289      	uxth	r1, r1
 8026a24:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8026a28:	fa5f fc8c 	uxtb.w	ip, ip
 8026a2c:	fb02 b203 	mla	r2, r2, r3, fp
 8026a30:	fb0c 0003 	mla	r0, ip, r3, r0
 8026a34:	1c4b      	adds	r3, r1, #1
 8026a36:	b292      	uxth	r2, r2
 8026a38:	b280      	uxth	r0, r0
 8026a3a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8026a3e:	f100 0b01 	add.w	fp, r0, #1
 8026a42:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8026a46:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8026a4a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8026a4e:	ea4b 0101 	orr.w	r1, fp, r1
 8026a52:	f102 0b01 	add.w	fp, r2, #1
 8026a56:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8026a5a:	0952      	lsrs	r2, r2, #5
 8026a5c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8026a60:	4311      	orrs	r1, r2
 8026a62:	f8ae 1000 	strh.w	r1, [lr]
 8026a66:	e79f      	b.n	80269a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8026a68:	b013      	add	sp, #76	@ 0x4c
 8026a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026a6e:	bf00      	nop
 8026a70:	20003994 	.word	0x20003994

08026a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8026a74:	b570      	push	{r4, r5, r6, lr}
 8026a76:	1208      	asrs	r0, r1, #8
 8026a78:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8026a7c:	b29e      	uxth	r6, r3
 8026a7e:	1213      	asrs	r3, r2, #8
 8026a80:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8026a84:	10cc      	asrs	r4, r1, #3
 8026a86:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8026a8a:	00c9      	lsls	r1, r1, #3
 8026a8c:	fb10 f006 	smulbb	r0, r0, r6
 8026a90:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8026a94:	fb13 f305 	smulbb	r3, r3, r5
 8026a98:	fb14 f406 	smulbb	r4, r4, r6
 8026a9c:	4418      	add	r0, r3
 8026a9e:	10d3      	asrs	r3, r2, #3
 8026aa0:	00d2      	lsls	r2, r2, #3
 8026aa2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8026aa6:	b280      	uxth	r0, r0
 8026aa8:	b2d2      	uxtb	r2, r2
 8026aaa:	fb13 f305 	smulbb	r3, r3, r5
 8026aae:	fb12 f205 	smulbb	r2, r2, r5
 8026ab2:	441c      	add	r4, r3
 8026ab4:	b2cb      	uxtb	r3, r1
 8026ab6:	fb13 f306 	smulbb	r3, r3, r6
 8026aba:	b2a4      	uxth	r4, r4
 8026abc:	4413      	add	r3, r2
 8026abe:	1c42      	adds	r2, r0, #1
 8026ac0:	b29b      	uxth	r3, r3
 8026ac2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026ac6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8026aca:	1c58      	adds	r0, r3, #1
 8026acc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026ad0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026ad4:	4310      	orrs	r0, r2
 8026ad6:	1c62      	adds	r2, r4, #1
 8026ad8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026adc:	0964      	lsrs	r4, r4, #5
 8026ade:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8026ae2:	4320      	orrs	r0, r4
 8026ae4:	bd70      	pop	{r4, r5, r6, pc}
	...

08026ae8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8026ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026aec:	b08f      	sub	sp, #60	@ 0x3c
 8026aee:	461c      	mov	r4, r3
 8026af0:	460d      	mov	r5, r1
 8026af2:	4616      	mov	r6, r2
 8026af4:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8026af8:	9004      	str	r0, [sp, #16]
 8026afa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026afc:	2f00      	cmp	r7, #0
 8026afe:	f000 80f6 	beq.w	8026cee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8026b02:	6820      	ldr	r0, [r4, #0]
 8026b04:	aa0a      	add	r2, sp, #40	@ 0x28
 8026b06:	6861      	ldr	r1, [r4, #4]
 8026b08:	f04f 0802 	mov.w	r8, #2
 8026b0c:	3604      	adds	r6, #4
 8026b0e:	c203      	stmia	r2!, {r0, r1}
 8026b10:	6818      	ldr	r0, [r3, #0]
 8026b12:	aa0c      	add	r2, sp, #48	@ 0x30
 8026b14:	6859      	ldr	r1, [r3, #4]
 8026b16:	c203      	stmia	r2!, {r0, r1}
 8026b18:	a80a      	add	r0, sp, #40	@ 0x28
 8026b1a:	f7ef fa71 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026b1e:	4621      	mov	r1, r4
 8026b20:	a80c      	add	r0, sp, #48	@ 0x30
 8026b22:	f7ef fa95 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026b26:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8026b2a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8026b2e:	f002 0301 	and.w	r3, r2, #1
 8026b32:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8026b36:	9306      	str	r3, [sp, #24]
 8026b38:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026b3c:	f003 0101 	and.w	r1, r3, #1
 8026b40:	9105      	str	r1, [sp, #20]
 8026b42:	9805      	ldr	r0, [sp, #20]
 8026b44:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8026b48:	4403      	add	r3, r0
 8026b4a:	fb01 2303 	mla	r3, r1, r3, r2
 8026b4e:	fb93 f3f8 	sdiv	r3, r3, r8
 8026b52:	441d      	add	r5, r3
 8026b54:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026b58:	441a      	add	r2, r3
 8026b5a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8026b5e:	4419      	add	r1, r3
 8026b60:	4b64      	ldr	r3, [pc, #400]	@ (8026cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026b62:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8026b66:	6818      	ldr	r0, [r3, #0]
 8026b68:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8026b6c:	6803      	ldr	r3, [r0, #0]
 8026b6e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026b70:	4798      	blx	r3
 8026b72:	4a61      	ldr	r2, [pc, #388]	@ (8026cf8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8026b74:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8026b78:	2fff      	cmp	r7, #255	@ 0xff
 8026b7a:	8813      	ldrh	r3, [r2, #0]
 8026b7c:	4611      	mov	r1, r2
 8026b7e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8026b82:	fb03 fb0b 	mul.w	fp, r3, fp
 8026b86:	fb03 a404 	mla	r4, r3, r4, sl
 8026b8a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026b8e:	d06b      	beq.n	8026c68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8026b90:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8026b94:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8026b98:	9303      	str	r3, [sp, #12]
 8026b9a:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8026b9e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8026ba2:	9b07      	ldr	r3, [sp, #28]
 8026ba4:	42a3      	cmp	r3, r4
 8026ba6:	f240 809d 	bls.w	8026ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026baa:	9b06      	ldr	r3, [sp, #24]
 8026bac:	2b00      	cmp	r3, #0
 8026bae:	d039      	beq.n	8026c24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8026bb0:	782b      	ldrb	r3, [r5, #0]
 8026bb2:	f105 0801 	add.w	r8, r5, #1
 8026bb6:	f109 3bff 	add.w	fp, r9, #4294967295
 8026bba:	8822      	ldrh	r2, [r4, #0]
 8026bbc:	f003 030f 	and.w	r3, r3, #15
 8026bc0:	9804      	ldr	r0, [sp, #16]
 8026bc2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026bc6:	9b03      	ldr	r3, [sp, #12]
 8026bc8:	9300      	str	r3, [sp, #0]
 8026bca:	463b      	mov	r3, r7
 8026bcc:	f7ff ff52 	bl	8026a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026bd0:	f824 0b02 	strh.w	r0, [r4], #2
 8026bd4:	f1bb 0f01 	cmp.w	fp, #1
 8026bd8:	46a2      	mov	sl, r4
 8026bda:	f104 0404 	add.w	r4, r4, #4
 8026bde:	dd24      	ble.n	8026c2a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8026be0:	f898 3000 	ldrb.w	r3, [r8]
 8026be4:	f1ab 0b02 	sub.w	fp, fp, #2
 8026be8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8026bec:	091b      	lsrs	r3, r3, #4
 8026bee:	9804      	ldr	r0, [sp, #16]
 8026bf0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026bf4:	9b03      	ldr	r3, [sp, #12]
 8026bf6:	9300      	str	r3, [sp, #0]
 8026bf8:	463b      	mov	r3, r7
 8026bfa:	f7ff ff3b 	bl	8026a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026bfe:	f824 0c04 	strh.w	r0, [r4, #-4]
 8026c02:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026c06:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8026c0a:	f003 030f 	and.w	r3, r3, #15
 8026c0e:	9804      	ldr	r0, [sp, #16]
 8026c10:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026c14:	9b03      	ldr	r3, [sp, #12]
 8026c16:	9300      	str	r3, [sp, #0]
 8026c18:	463b      	mov	r3, r7
 8026c1a:	f7ff ff2b 	bl	8026a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026c1e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8026c22:	e7d7      	b.n	8026bd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8026c24:	46a8      	mov	r8, r5
 8026c26:	46cb      	mov	fp, r9
 8026c28:	e7d4      	b.n	8026bd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8026c2a:	d10e      	bne.n	8026c4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8026c2c:	f898 3000 	ldrb.w	r3, [r8]
 8026c30:	f8ba 2000 	ldrh.w	r2, [sl]
 8026c34:	091b      	lsrs	r3, r3, #4
 8026c36:	9804      	ldr	r0, [sp, #16]
 8026c38:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8026c3c:	9b03      	ldr	r3, [sp, #12]
 8026c3e:	9300      	str	r3, [sp, #0]
 8026c40:	463b      	mov	r3, r7
 8026c42:	f7ff ff17 	bl	8026a74 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8026c46:	f82a 0b02 	strh.w	r0, [sl], #2
 8026c4a:	9b08      	ldr	r3, [sp, #32]
 8026c4c:	9a05      	ldr	r2, [sp, #20]
 8026c4e:	881c      	ldrh	r4, [r3, #0]
 8026c50:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026c54:	eba4 0409 	sub.w	r4, r4, r9
 8026c58:	4413      	add	r3, r2
 8026c5a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026c5c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8026c60:	fb93 f3f2 	sdiv	r3, r3, r2
 8026c64:	441d      	add	r5, r3
 8026c66:	e79c      	b.n	8026ba2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8026c68:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8026c6c:	45a3      	cmp	fp, r4
 8026c6e:	d939      	bls.n	8026ce4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8026c70:	9b06      	ldr	r3, [sp, #24]
 8026c72:	b1fb      	cbz	r3, 8026cb4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8026c74:	782b      	ldrb	r3, [r5, #0]
 8026c76:	1c6a      	adds	r2, r5, #1
 8026c78:	f109 30ff 	add.w	r0, r9, #4294967295
 8026c7c:	3402      	adds	r4, #2
 8026c7e:	f003 030f 	and.w	r3, r3, #15
 8026c82:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026c86:	f824 3c02 	strh.w	r3, [r4, #-2]
 8026c8a:	2801      	cmp	r0, #1
 8026c8c:	4623      	mov	r3, r4
 8026c8e:	f104 0404 	add.w	r4, r4, #4
 8026c92:	dd12      	ble.n	8026cba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8026c94:	7813      	ldrb	r3, [r2, #0]
 8026c96:	3802      	subs	r0, #2
 8026c98:	091b      	lsrs	r3, r3, #4
 8026c9a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026c9e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8026ca2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8026ca6:	f003 030f 	and.w	r3, r3, #15
 8026caa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026cae:	f824 3c02 	strh.w	r3, [r4, #-2]
 8026cb2:	e7ea      	b.n	8026c8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026cb4:	462a      	mov	r2, r5
 8026cb6:	4648      	mov	r0, r9
 8026cb8:	e7e7      	b.n	8026c8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8026cba:	d106      	bne.n	8026cca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8026cbc:	7812      	ldrb	r2, [r2, #0]
 8026cbe:	3302      	adds	r3, #2
 8026cc0:	0912      	lsrs	r2, r2, #4
 8026cc2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8026cc6:	f823 2c02 	strh.w	r2, [r3, #-2]
 8026cca:	880c      	ldrh	r4, [r1, #0]
 8026ccc:	9a05      	ldr	r2, [sp, #20]
 8026cce:	eba4 0409 	sub.w	r4, r4, r9
 8026cd2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8026cd6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026cda:	4413      	add	r3, r2
 8026cdc:	fb93 f3f8 	sdiv	r3, r3, r8
 8026ce0:	441d      	add	r5, r3
 8026ce2:	e7c3      	b.n	8026c6c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8026ce4:	4b03      	ldr	r3, [pc, #12]	@ (8026cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8026ce6:	6818      	ldr	r0, [r3, #0]
 8026ce8:	6803      	ldr	r3, [r0, #0]
 8026cea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026cec:	4798      	blx	r3
 8026cee:	b00f      	add	sp, #60	@ 0x3c
 8026cf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026cf4:	20003984 	.word	0x20003984
 8026cf8:	2000397e 	.word	0x2000397e

08026cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8026cfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8026cfe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8026d02:	0a0f      	lsrs	r7, r1, #8
 8026d04:	2dff      	cmp	r5, #255	@ 0xff
 8026d06:	d10c      	bne.n	8026d22 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8026d08:	2bff      	cmp	r3, #255	@ 0xff
 8026d0a:	d10a      	bne.n	8026d22 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8026d0c:	0948      	lsrs	r0, r1, #5
 8026d0e:	4b25      	ldr	r3, [pc, #148]	@ (8026da4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8026d10:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8026d14:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8026d18:	403b      	ands	r3, r7
 8026d1a:	4318      	orrs	r0, r3
 8026d1c:	4308      	orrs	r0, r1
 8026d1e:	b280      	uxth	r0, r0
 8026d20:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026d22:	fb15 f503 	smulbb	r5, r5, r3
 8026d26:	1214      	asrs	r4, r2, #8
 8026d28:	10d6      	asrs	r6, r2, #3
 8026d2a:	b2ab      	uxth	r3, r5
 8026d2c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026d30:	00d0      	lsls	r0, r2, #3
 8026d32:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8026d36:	1c5d      	adds	r5, r3, #1
 8026d38:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026d3c:	b2c0      	uxtb	r0, r0
 8026d3e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8026d42:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8026d46:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8026d4a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8026d4e:	fa1f fc85 	uxth.w	ip, r5
 8026d52:	43ed      	mvns	r5, r5
 8026d54:	fb12 f20c 	smulbb	r2, r2, ip
 8026d58:	b2eb      	uxtb	r3, r5
 8026d5a:	b2fd      	uxtb	r5, r7
 8026d5c:	fb04 2403 	mla	r4, r4, r3, r2
 8026d60:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 8026d64:	fb15 f50c 	smulbb	r5, r5, ip
 8026d68:	b2c8      	uxtb	r0, r1
 8026d6a:	b2a4      	uxth	r4, r4
 8026d6c:	fb10 f00c 	smulbb	r0, r0, ip
 8026d70:	fb06 5503 	mla	r5, r6, r3, r5
 8026d74:	fb02 0003 	mla	r0, r2, r3, r0
 8026d78:	b2ad      	uxth	r5, r5
 8026d7a:	b283      	uxth	r3, r0
 8026d7c:	1c60      	adds	r0, r4, #1
 8026d7e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8026d82:	1c58      	adds	r0, r3, #1
 8026d84:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026d88:	1c6b      	adds	r3, r5, #1
 8026d8a:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8026d8e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026d92:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026d96:	096d      	lsrs	r5, r5, #5
 8026d98:	4320      	orrs	r0, r4
 8026d9a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8026d9e:	4328      	orrs	r0, r5
 8026da0:	e7be      	b.n	8026d20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 8026da2:	bf00      	nop
 8026da4:	00fff800 	.word	0x00fff800

08026da8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8026da8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026dac:	461c      	mov	r4, r3
 8026dae:	b08d      	sub	sp, #52	@ 0x34
 8026db0:	460d      	mov	r5, r1
 8026db2:	4616      	mov	r6, r2
 8026db4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8026db6:	4680      	mov	r8, r0
 8026db8:	6861      	ldr	r1, [r4, #4]
 8026dba:	aa08      	add	r2, sp, #32
 8026dbc:	6820      	ldr	r0, [r4, #0]
 8026dbe:	f04f 0a02 	mov.w	sl, #2
 8026dc2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8026dc6:	3604      	adds	r6, #4
 8026dc8:	c203      	stmia	r2!, {r0, r1}
 8026dca:	6818      	ldr	r0, [r3, #0]
 8026dcc:	aa0a      	add	r2, sp, #40	@ 0x28
 8026dce:	6859      	ldr	r1, [r3, #4]
 8026dd0:	c203      	stmia	r2!, {r0, r1}
 8026dd2:	a808      	add	r0, sp, #32
 8026dd4:	f7ef f914 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026dd8:	4621      	mov	r1, r4
 8026dda:	a80a      	add	r0, sp, #40	@ 0x28
 8026ddc:	f7ef f938 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026de0:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8026de4:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8026de8:	f002 0301 	and.w	r3, r2, #1
 8026dec:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8026df0:	9303      	str	r3, [sp, #12]
 8026df2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026df6:	f003 0101 	and.w	r1, r3, #1
 8026dfa:	9102      	str	r1, [sp, #8]
 8026dfc:	9802      	ldr	r0, [sp, #8]
 8026dfe:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8026e02:	4403      	add	r3, r0
 8026e04:	fb01 2303 	mla	r3, r1, r3, r2
 8026e08:	fb93 f3fa 	sdiv	r3, r3, sl
 8026e0c:	441d      	add	r5, r3
 8026e0e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8026e12:	441a      	add	r2, r3
 8026e14:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8026e18:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8026e1c:	4419      	add	r1, r3
 8026e1e:	4a3e      	ldr	r2, [pc, #248]	@ (8026f18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8026e20:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8026e24:	6810      	ldr	r0, [r2, #0]
 8026e26:	9205      	str	r2, [sp, #20]
 8026e28:	6803      	ldr	r3, [r0, #0]
 8026e2a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8026e2c:	4798      	blx	r3
 8026e2e:	4b3b      	ldr	r3, [pc, #236]	@ (8026f1c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8026e30:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8026e34:	8819      	ldrh	r1, [r3, #0]
 8026e36:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 8026e3a:	434f      	muls	r7, r1
 8026e3c:	fb01 c404 	mla	r4, r1, r4, ip
 8026e40:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8026e44:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8026e48:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8026e4c:	9204      	str	r2, [sp, #16]
 8026e4e:	9b04      	ldr	r3, [sp, #16]
 8026e50:	429c      	cmp	r4, r3
 8026e52:	d258      	bcs.n	8026f06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8026e54:	9b03      	ldr	r3, [sp, #12]
 8026e56:	2b00      	cmp	r3, #0
 8026e58:	d034      	beq.n	8026ec4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 8026e5a:	782b      	ldrb	r3, [r5, #0]
 8026e5c:	1c6f      	adds	r7, r5, #1
 8026e5e:	f003 030f 	and.w	r3, r3, #15
 8026e62:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026e66:	0e0b      	lsrs	r3, r1, #24
 8026e68:	d006      	beq.n	8026e78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 8026e6a:	8822      	ldrh	r2, [r4, #0]
 8026e6c:	4640      	mov	r0, r8
 8026e6e:	9300      	str	r3, [sp, #0]
 8026e70:	464b      	mov	r3, r9
 8026e72:	f7ff ff43 	bl	8026cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026e76:	8020      	strh	r0, [r4, #0]
 8026e78:	3402      	adds	r4, #2
 8026e7a:	f10b 3aff 	add.w	sl, fp, #4294967295
 8026e7e:	f1ba 0f01 	cmp.w	sl, #1
 8026e82:	dd22      	ble.n	8026eca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8026e84:	783b      	ldrb	r3, [r7, #0]
 8026e86:	091b      	lsrs	r3, r3, #4
 8026e88:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026e8c:	0e0b      	lsrs	r3, r1, #24
 8026e8e:	d006      	beq.n	8026e9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8026e90:	8822      	ldrh	r2, [r4, #0]
 8026e92:	4640      	mov	r0, r8
 8026e94:	9300      	str	r3, [sp, #0]
 8026e96:	464b      	mov	r3, r9
 8026e98:	f7ff ff30 	bl	8026cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026e9c:	8020      	strh	r0, [r4, #0]
 8026e9e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8026ea2:	f003 030f 	and.w	r3, r3, #15
 8026ea6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026eaa:	0e0b      	lsrs	r3, r1, #24
 8026eac:	d006      	beq.n	8026ebc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8026eae:	8862      	ldrh	r2, [r4, #2]
 8026eb0:	4640      	mov	r0, r8
 8026eb2:	9300      	str	r3, [sp, #0]
 8026eb4:	464b      	mov	r3, r9
 8026eb6:	f7ff ff21 	bl	8026cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026eba:	8060      	strh	r0, [r4, #2]
 8026ebc:	3404      	adds	r4, #4
 8026ebe:	f1aa 0a02 	sub.w	sl, sl, #2
 8026ec2:	e7dc      	b.n	8026e7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026ec4:	462f      	mov	r7, r5
 8026ec6:	46da      	mov	sl, fp
 8026ec8:	e7d9      	b.n	8026e7e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8026eca:	d10d      	bne.n	8026ee8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8026ecc:	783b      	ldrb	r3, [r7, #0]
 8026ece:	091b      	lsrs	r3, r3, #4
 8026ed0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8026ed4:	0e0b      	lsrs	r3, r1, #24
 8026ed6:	d006      	beq.n	8026ee6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8026ed8:	8822      	ldrh	r2, [r4, #0]
 8026eda:	4640      	mov	r0, r8
 8026edc:	9300      	str	r3, [sp, #0]
 8026ede:	464b      	mov	r3, r9
 8026ee0:	f7ff ff0c 	bl	8026cfc <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8026ee4:	8020      	strh	r0, [r4, #0]
 8026ee6:	3402      	adds	r4, #2
 8026ee8:	9b06      	ldr	r3, [sp, #24]
 8026eea:	9a02      	ldr	r2, [sp, #8]
 8026eec:	881b      	ldrh	r3, [r3, #0]
 8026eee:	eba3 030b 	sub.w	r3, r3, fp
 8026ef2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8026ef6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8026efa:	4413      	add	r3, r2
 8026efc:	9a07      	ldr	r2, [sp, #28]
 8026efe:	fb93 f3f2 	sdiv	r3, r3, r2
 8026f02:	441d      	add	r5, r3
 8026f04:	e7a3      	b.n	8026e4e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8026f06:	9b05      	ldr	r3, [sp, #20]
 8026f08:	6818      	ldr	r0, [r3, #0]
 8026f0a:	6803      	ldr	r3, [r0, #0]
 8026f0c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8026f0e:	4798      	blx	r3
 8026f10:	b00d      	add	sp, #52	@ 0x34
 8026f12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026f16:	bf00      	nop
 8026f18:	20003984 	.word	0x20003984
 8026f1c:	2000397e 	.word	0x2000397e

08026f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8026f20:	b570      	push	{r4, r5, r6, lr}
 8026f22:	1214      	asrs	r4, r2, #8
 8026f24:	788d      	ldrb	r5, [r1, #2]
 8026f26:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8026f2a:	10d0      	asrs	r0, r2, #3
 8026f2c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8026f30:	00d2      	lsls	r2, r2, #3
 8026f32:	fb15 f503 	smulbb	r5, r5, r3
 8026f36:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8026f3a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8026f3e:	b2d2      	uxtb	r2, r2
 8026f40:	fb04 5506 	mla	r5, r4, r6, r5
 8026f44:	784c      	ldrb	r4, [r1, #1]
 8026f46:	7809      	ldrb	r1, [r1, #0]
 8026f48:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8026f4c:	fb14 f403 	smulbb	r4, r4, r3
 8026f50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8026f54:	fb11 f303 	smulbb	r3, r1, r3
 8026f58:	b2ad      	uxth	r5, r5
 8026f5a:	fb00 4406 	mla	r4, r0, r6, r4
 8026f5e:	fb02 3306 	mla	r3, r2, r6, r3
 8026f62:	1c68      	adds	r0, r5, #1
 8026f64:	b2a4      	uxth	r4, r4
 8026f66:	b29b      	uxth	r3, r3
 8026f68:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8026f6c:	1c62      	adds	r2, r4, #1
 8026f6e:	1c58      	adds	r0, r3, #1
 8026f70:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8026f74:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8026f78:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8026f7c:	0964      	lsrs	r4, r4, #5
 8026f7e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8026f82:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8026f86:	4328      	orrs	r0, r5
 8026f88:	4320      	orrs	r0, r4
 8026f8a:	bd70      	pop	{r4, r5, r6, pc}

08026f8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8026f8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026f90:	b08f      	sub	sp, #60	@ 0x3c
 8026f92:	461c      	mov	r4, r3
 8026f94:	4682      	mov	sl, r0
 8026f96:	460e      	mov	r6, r1
 8026f98:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8026f9c:	4615      	mov	r5, r2
 8026f9e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8026fa0:	2f00      	cmp	r7, #0
 8026fa2:	f000 8141 	beq.w	8027228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 8026fa6:	6820      	ldr	r0, [r4, #0]
 8026fa8:	aa0a      	add	r2, sp, #40	@ 0x28
 8026faa:	6861      	ldr	r1, [r4, #4]
 8026fac:	f04f 0802 	mov.w	r8, #2
 8026fb0:	3504      	adds	r5, #4
 8026fb2:	c203      	stmia	r2!, {r0, r1}
 8026fb4:	6818      	ldr	r0, [r3, #0]
 8026fb6:	aa0c      	add	r2, sp, #48	@ 0x30
 8026fb8:	6859      	ldr	r1, [r3, #4]
 8026fba:	c203      	stmia	r2!, {r0, r1}
 8026fbc:	a80a      	add	r0, sp, #40	@ 0x28
 8026fbe:	f7ef f81f 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8026fc2:	4621      	mov	r1, r4
 8026fc4:	a80c      	add	r0, sp, #48	@ 0x30
 8026fc6:	f7ef f843 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8026fca:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8026fce:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8026fd2:	f002 0301 	and.w	r3, r2, #1
 8026fd6:	9306      	str	r3, [sp, #24]
 8026fd8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8026fdc:	f003 0101 	and.w	r1, r3, #1
 8026fe0:	9105      	str	r1, [sp, #20]
 8026fe2:	9805      	ldr	r0, [sp, #20]
 8026fe4:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8026fe8:	4403      	add	r3, r0
 8026fea:	fb01 2303 	mla	r3, r1, r3, r2
 8026fee:	fb93 f3f8 	sdiv	r3, r3, r8
 8026ff2:	441e      	add	r6, r3
 8026ff4:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8026ff8:	441a      	add	r2, r3
 8026ffa:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8026ffe:	4419      	add	r1, r3
 8027000:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8027004:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8027008:	9303      	str	r3, [sp, #12]
 802700a:	4b89      	ldr	r3, [pc, #548]	@ (8027230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802700c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8027010:	6818      	ldr	r0, [r3, #0]
 8027012:	6803      	ldr	r3, [r0, #0]
 8027014:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8027016:	4798      	blx	r3
 8027018:	4a86      	ldr	r2, [pc, #536]	@ (8027234 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802701a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802701e:	2fff      	cmp	r7, #255	@ 0xff
 8027020:	8813      	ldrh	r3, [r2, #0]
 8027022:	4694      	mov	ip, r2
 8027024:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8027028:	fb03 9404 	mla	r4, r3, r4, r9
 802702c:	fb03 f30b 	mul.w	r3, r3, fp
 8027030:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027034:	d071      	beq.n	802711a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8027036:	43f9      	mvns	r1, r7
 8027038:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802703c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8027040:	b2c9      	uxtb	r1, r1
 8027042:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8027046:	9104      	str	r1, [sp, #16]
 8027048:	9b07      	ldr	r3, [sp, #28]
 802704a:	42a3      	cmp	r3, r4
 802704c:	f240 80e7 	bls.w	802721e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8027050:	9b06      	ldr	r3, [sp, #24]
 8027052:	2b00      	cmp	r3, #0
 8027054:	d03d      	beq.n	80270d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8027056:	7831      	ldrb	r1, [r6, #0]
 8027058:	4650      	mov	r0, sl
 802705a:	9b04      	ldr	r3, [sp, #16]
 802705c:	f106 0801 	add.w	r8, r6, #1
 8027060:	f001 010f 	and.w	r1, r1, #15
 8027064:	8822      	ldrh	r2, [r4, #0]
 8027066:	9300      	str	r3, [sp, #0]
 8027068:	463b      	mov	r3, r7
 802706a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 802706e:	4429      	add	r1, r5
 8027070:	f7ff ff56 	bl	8026f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8027074:	9b03      	ldr	r3, [sp, #12]
 8027076:	f824 0b02 	strh.w	r0, [r4], #2
 802707a:	f103 3bff 	add.w	fp, r3, #4294967295
 802707e:	f1bb 0f01 	cmp.w	fp, #1
 8027082:	46a1      	mov	r9, r4
 8027084:	f104 0404 	add.w	r4, r4, #4
 8027088:	dd27      	ble.n	80270da <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 802708a:	f898 1000 	ldrb.w	r1, [r8]
 802708e:	4650      	mov	r0, sl
 8027090:	9b04      	ldr	r3, [sp, #16]
 8027092:	f1ab 0b02 	sub.w	fp, fp, #2
 8027096:	0909      	lsrs	r1, r1, #4
 8027098:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802709c:	9300      	str	r3, [sp, #0]
 802709e:	463b      	mov	r3, r7
 80270a0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80270a4:	4429      	add	r1, r5
 80270a6:	f7ff ff3b 	bl	8026f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80270aa:	f824 0c04 	strh.w	r0, [r4, #-4]
 80270ae:	f818 1b01 	ldrb.w	r1, [r8], #1
 80270b2:	4650      	mov	r0, sl
 80270b4:	9b04      	ldr	r3, [sp, #16]
 80270b6:	f001 010f 	and.w	r1, r1, #15
 80270ba:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80270be:	9300      	str	r3, [sp, #0]
 80270c0:	463b      	mov	r3, r7
 80270c2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80270c6:	4429      	add	r1, r5
 80270c8:	f7ff ff2a 	bl	8026f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80270cc:	f824 0c02 	strh.w	r0, [r4, #-2]
 80270d0:	e7d5      	b.n	802707e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80270d2:	46b0      	mov	r8, r6
 80270d4:	f8dd b00c 	ldr.w	fp, [sp, #12]
 80270d8:	e7d1      	b.n	802707e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 80270da:	d10f      	bne.n	80270fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 80270dc:	f898 1000 	ldrb.w	r1, [r8]
 80270e0:	4650      	mov	r0, sl
 80270e2:	9b04      	ldr	r3, [sp, #16]
 80270e4:	0909      	lsrs	r1, r1, #4
 80270e6:	f8b9 2000 	ldrh.w	r2, [r9]
 80270ea:	9300      	str	r3, [sp, #0]
 80270ec:	463b      	mov	r3, r7
 80270ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80270f2:	4429      	add	r1, r5
 80270f4:	f7ff ff14 	bl	8026f20 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80270f8:	f829 0b02 	strh.w	r0, [r9], #2
 80270fc:	9b08      	ldr	r3, [sp, #32]
 80270fe:	9a05      	ldr	r2, [sp, #20]
 8027100:	881c      	ldrh	r4, [r3, #0]
 8027102:	9b03      	ldr	r3, [sp, #12]
 8027104:	1ae4      	subs	r4, r4, r3
 8027106:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802710a:	4413      	add	r3, r2
 802710c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802710e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8027112:	fb93 f3f2 	sdiv	r3, r3, r2
 8027116:	441e      	add	r6, r3
 8027118:	e796      	b.n	8027048 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802711a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802711e:	4f46      	ldr	r7, [pc, #280]	@ (8027238 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8027120:	42a3      	cmp	r3, r4
 8027122:	d97c      	bls.n	802721e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8027124:	9a06      	ldr	r2, [sp, #24]
 8027126:	2a00      	cmp	r2, #0
 8027128:	d054      	beq.n	80271d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 802712a:	7830      	ldrb	r0, [r6, #0]
 802712c:	1c71      	adds	r1, r6, #1
 802712e:	f000 000f 	and.w	r0, r0, #15
 8027132:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027136:	eb05 0e00 	add.w	lr, r5, r0
 802713a:	5c28      	ldrb	r0, [r5, r0]
 802713c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8027140:	f89e e001 	ldrb.w	lr, [lr, #1]
 8027144:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8027148:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802714c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8027150:	ea42 020e 	orr.w	r2, r2, lr
 8027154:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8027158:	f824 2b02 	strh.w	r2, [r4], #2
 802715c:	9a03      	ldr	r2, [sp, #12]
 802715e:	f102 3eff 	add.w	lr, r2, #4294967295
 8027162:	f1be 0f01 	cmp.w	lr, #1
 8027166:	4620      	mov	r0, r4
 8027168:	f104 0404 	add.w	r4, r4, #4
 802716c:	dd36      	ble.n	80271dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 802716e:	7808      	ldrb	r0, [r1, #0]
 8027170:	f1ae 0e02 	sub.w	lr, lr, #2
 8027174:	0900      	lsrs	r0, r0, #4
 8027176:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802717a:	eb05 0a00 	add.w	sl, r5, r0
 802717e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027182:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8027186:	00d2      	lsls	r2, r2, #3
 8027188:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 802718c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8027190:	ea49 0202 	orr.w	r2, r9, r2
 8027194:	f815 9000 	ldrb.w	r9, [r5, r0]
 8027198:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802719c:	f824 2c04 	strh.w	r2, [r4, #-4]
 80271a0:	f811 0b01 	ldrb.w	r0, [r1], #1
 80271a4:	f000 000f 	and.w	r0, r0, #15
 80271a8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80271ac:	eb05 0a00 	add.w	sl, r5, r0
 80271b0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80271b4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80271b8:	00d2      	lsls	r2, r2, #3
 80271ba:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80271be:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80271c2:	ea49 0202 	orr.w	r2, r9, r2
 80271c6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80271ca:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80271ce:	f824 2c02 	strh.w	r2, [r4, #-2]
 80271d2:	e7c6      	b.n	8027162 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80271d4:	4631      	mov	r1, r6
 80271d6:	f8dd e00c 	ldr.w	lr, [sp, #12]
 80271da:	e7c2      	b.n	8027162 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 80271dc:	d111      	bne.n	8027202 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 80271de:	7809      	ldrb	r1, [r1, #0]
 80271e0:	0909      	lsrs	r1, r1, #4
 80271e2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80271e6:	186c      	adds	r4, r5, r1
 80271e8:	5c69      	ldrb	r1, [r5, r1]
 80271ea:	78a2      	ldrb	r2, [r4, #2]
 80271ec:	7864      	ldrb	r4, [r4, #1]
 80271ee:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80271f2:	00e4      	lsls	r4, r4, #3
 80271f4:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80271f8:	4322      	orrs	r2, r4
 80271fa:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80271fe:	f820 2b02 	strh.w	r2, [r0], #2
 8027202:	9a03      	ldr	r2, [sp, #12]
 8027204:	f8bc 4000 	ldrh.w	r4, [ip]
 8027208:	9905      	ldr	r1, [sp, #20]
 802720a:	1aa4      	subs	r4, r4, r2
 802720c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8027210:	440a      	add	r2, r1
 8027212:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8027216:	fb92 f2f8 	sdiv	r2, r2, r8
 802721a:	4416      	add	r6, r2
 802721c:	e780      	b.n	8027120 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 802721e:	4b04      	ldr	r3, [pc, #16]	@ (8027230 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8027220:	6818      	ldr	r0, [r3, #0]
 8027222:	6803      	ldr	r3, [r0, #0]
 8027224:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027226:	4798      	blx	r3
 8027228:	b00f      	add	sp, #60	@ 0x3c
 802722a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802722e:	bf00      	nop
 8027230:	20003984 	.word	0x20003984
 8027234:	2000397e 	.word	0x2000397e
 8027238:	fffff800 	.word	0xfffff800

0802723c <CRC_Lock>:
 802723c:	4a2d      	ldr	r2, [pc, #180]	@ (80272f4 <CRC_Lock+0xb8>)
 802723e:	b530      	push	{r4, r5, lr}
 8027240:	6813      	ldr	r3, [r2, #0]
 8027242:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8027246:	f023 0301 	bic.w	r3, r3, #1
 802724a:	6013      	str	r3, [r2, #0]
 802724c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8027250:	4b29      	ldr	r3, [pc, #164]	@ (80272f8 <CRC_Lock+0xbc>)
 8027252:	681c      	ldr	r4, [r3, #0]
 8027254:	4014      	ands	r4, r2
 8027256:	42ac      	cmp	r4, r5
 8027258:	d005      	beq.n	8027266 <CRC_Lock+0x2a>
 802725a:	681c      	ldr	r4, [r3, #0]
 802725c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8027260:	4014      	ands	r4, r2
 8027262:	42ac      	cmp	r4, r5
 8027264:	d125      	bne.n	80272b2 <CRC_Lock+0x76>
 8027266:	4b25      	ldr	r3, [pc, #148]	@ (80272fc <CRC_Lock+0xc0>)
 8027268:	681b      	ldr	r3, [r3, #0]
 802726a:	2b00      	cmp	r3, #0
 802726c:	d139      	bne.n	80272e2 <CRC_Lock+0xa6>
 802726e:	4b24      	ldr	r3, [pc, #144]	@ (8027300 <CRC_Lock+0xc4>)
 8027270:	681a      	ldr	r2, [r3, #0]
 8027272:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027276:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 802727a:	d00d      	beq.n	8027298 <CRC_Lock+0x5c>
 802727c:	681a      	ldr	r2, [r3, #0]
 802727e:	f240 4483 	movw	r4, #1155	@ 0x483
 8027282:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8027286:	42a2      	cmp	r2, r4
 8027288:	d006      	beq.n	8027298 <CRC_Lock+0x5c>
 802728a:	681b      	ldr	r3, [r3, #0]
 802728c:	f240 4285 	movw	r2, #1157	@ 0x485
 8027290:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8027294:	4293      	cmp	r3, r2
 8027296:	d124      	bne.n	80272e2 <CRC_Lock+0xa6>
 8027298:	4b1a      	ldr	r3, [pc, #104]	@ (8027304 <CRC_Lock+0xc8>)
 802729a:	2201      	movs	r2, #1
 802729c:	601a      	str	r2, [r3, #0]
 802729e:	681a      	ldr	r2, [r3, #0]
 80272a0:	2a00      	cmp	r2, #0
 80272a2:	d1fc      	bne.n	802729e <CRC_Lock+0x62>
 80272a4:	4b18      	ldr	r3, [pc, #96]	@ (8027308 <CRC_Lock+0xcc>)
 80272a6:	6018      	str	r0, [r3, #0]
 80272a8:	6818      	ldr	r0, [r3, #0]
 80272aa:	1a43      	subs	r3, r0, r1
 80272ac:	4258      	negs	r0, r3
 80272ae:	4158      	adcs	r0, r3
 80272b0:	e00e      	b.n	80272d0 <CRC_Lock+0x94>
 80272b2:	681b      	ldr	r3, [r3, #0]
 80272b4:	4013      	ands	r3, r2
 80272b6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80272ba:	4293      	cmp	r3, r2
 80272bc:	d111      	bne.n	80272e2 <CRC_Lock+0xa6>
 80272be:	4b13      	ldr	r3, [pc, #76]	@ (802730c <CRC_Lock+0xd0>)
 80272c0:	f240 4286 	movw	r2, #1158	@ 0x486
 80272c4:	681b      	ldr	r3, [r3, #0]
 80272c6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80272ca:	4293      	cmp	r3, r2
 80272cc:	d001      	beq.n	80272d2 <CRC_Lock+0x96>
 80272ce:	2000      	movs	r0, #0
 80272d0:	bd30      	pop	{r4, r5, pc}
 80272d2:	4b0f      	ldr	r3, [pc, #60]	@ (8027310 <CRC_Lock+0xd4>)
 80272d4:	2201      	movs	r2, #1
 80272d6:	601a      	str	r2, [r3, #0]
 80272d8:	681a      	ldr	r2, [r3, #0]
 80272da:	2a00      	cmp	r2, #0
 80272dc:	d1fc      	bne.n	80272d8 <CRC_Lock+0x9c>
 80272de:	4b0d      	ldr	r3, [pc, #52]	@ (8027314 <CRC_Lock+0xd8>)
 80272e0:	e7e1      	b.n	80272a6 <CRC_Lock+0x6a>
 80272e2:	4b0d      	ldr	r3, [pc, #52]	@ (8027318 <CRC_Lock+0xdc>)
 80272e4:	2201      	movs	r2, #1
 80272e6:	601a      	str	r2, [r3, #0]
 80272e8:	681a      	ldr	r2, [r3, #0]
 80272ea:	2a00      	cmp	r2, #0
 80272ec:	d1fc      	bne.n	80272e8 <CRC_Lock+0xac>
 80272ee:	4b0b      	ldr	r3, [pc, #44]	@ (802731c <CRC_Lock+0xe0>)
 80272f0:	e7d9      	b.n	80272a6 <CRC_Lock+0x6a>
 80272f2:	bf00      	nop
 80272f4:	e0002000 	.word	0xe0002000
 80272f8:	e000ed00 	.word	0xe000ed00
 80272fc:	e0042000 	.word	0xe0042000
 8027300:	5c001000 	.word	0x5c001000
 8027304:	58024c08 	.word	0x58024c08
 8027308:	58024c00 	.word	0x58024c00
 802730c:	46008ff0 	.word	0x46008ff0
 8027310:	46024c08 	.word	0x46024c08
 8027314:	46024c00 	.word	0x46024c00
 8027318:	40023008 	.word	0x40023008
 802731c:	40023000 	.word	0x40023000

08027320 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8027320:	6101      	str	r1, [r0, #16]
 8027322:	4770      	bx	lr

08027324 <_ZN8touchgfx8Gestures4tickEv>:
 8027324:	7b83      	ldrb	r3, [r0, #14]
 8027326:	b14b      	cbz	r3, 802733c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8027328:	8903      	ldrh	r3, [r0, #8]
 802732a:	3301      	adds	r3, #1
 802732c:	b29b      	uxth	r3, r3
 802732e:	2b07      	cmp	r3, #7
 8027330:	8103      	strh	r3, [r0, #8]
 8027332:	bf81      	itttt	hi
 8027334:	2300      	movhi	r3, #0
 8027336:	8143      	strhhi	r3, [r0, #10]
 8027338:	8183      	strhhi	r3, [r0, #12]
 802733a:	7383      	strbhi	r3, [r0, #14]
 802733c:	4770      	bx	lr
	...

08027340 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8027340:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8027344:	4698      	mov	r8, r3
 8027346:	8883      	ldrh	r3, [r0, #4]
 8027348:	4604      	mov	r4, r0
 802734a:	4617      	mov	r7, r2
 802734c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8027350:	eba8 0303 	sub.w	r3, r8, r3
 8027354:	4a19      	ldr	r2, [pc, #100]	@ (80273bc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8027356:	460e      	mov	r6, r1
 8027358:	b21b      	sxth	r3, r3
 802735a:	88c1      	ldrh	r1, [r0, #6]
 802735c:	9200      	str	r2, [sp, #0]
 802735e:	2000      	movs	r0, #0
 8027360:	2b00      	cmp	r3, #0
 8027362:	8aa2      	ldrh	r2, [r4, #20]
 8027364:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8027368:	bfb8      	it	lt
 802736a:	425b      	neglt	r3, r3
 802736c:	f88d 0004 	strb.w	r0, [sp, #4]
 8027370:	f8ad 1008 	strh.w	r1, [sp, #8]
 8027374:	b21b      	sxth	r3, r3
 8027376:	f8ad 800a 	strh.w	r8, [sp, #10]
 802737a:	f8ad 500c 	strh.w	r5, [sp, #12]
 802737e:	4293      	cmp	r3, r2
 8027380:	dc07      	bgt.n	8027392 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 8027382:	1a69      	subs	r1, r5, r1
 8027384:	b209      	sxth	r1, r1
 8027386:	2900      	cmp	r1, #0
 8027388:	bfb8      	it	lt
 802738a:	4249      	neglt	r1, r1
 802738c:	b209      	sxth	r1, r1
 802738e:	428a      	cmp	r2, r1
 8027390:	da10      	bge.n	80273b4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 8027392:	6920      	ldr	r0, [r4, #16]
 8027394:	4669      	mov	r1, sp
 8027396:	eba8 0606 	sub.w	r6, r8, r6
 802739a:	1bef      	subs	r7, r5, r7
 802739c:	6803      	ldr	r3, [r0, #0]
 802739e:	685b      	ldr	r3, [r3, #4]
 80273a0:	4798      	blx	r3
 80273a2:	2300      	movs	r3, #0
 80273a4:	2001      	movs	r0, #1
 80273a6:	8166      	strh	r6, [r4, #10]
 80273a8:	8123      	strh	r3, [r4, #8]
 80273aa:	81a7      	strh	r7, [r4, #12]
 80273ac:	f8a4 8004 	strh.w	r8, [r4, #4]
 80273b0:	80e5      	strh	r5, [r4, #6]
 80273b2:	73a0      	strb	r0, [r4, #14]
 80273b4:	b004      	add	sp, #16
 80273b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80273ba:	bf00      	nop
 80273bc:	0802add4 	.word	0x0802add4

080273c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80273c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80273c2:	461e      	mov	r6, r3
 80273c4:	1e4b      	subs	r3, r1, #1
 80273c6:	b085      	sub	sp, #20
 80273c8:	4604      	mov	r4, r0
 80273ca:	2b01      	cmp	r3, #1
 80273cc:	460d      	mov	r5, r1
 80273ce:	4617      	mov	r7, r2
 80273d0:	d84b      	bhi.n	802746a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80273d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80273d6:	1cd3      	adds	r3, r2, #3
 80273d8:	b29b      	uxth	r3, r3
 80273da:	2b06      	cmp	r3, #6
 80273dc:	d916      	bls.n	802740c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80273de:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8027480 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80273e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80273e6:	f8cd c004 	str.w	ip, [sp, #4]
 80273ea:	f04f 0c00 	mov.w	ip, #0
 80273ee:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80273f2:	6900      	ldr	r0, [r0, #16]
 80273f4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80273f8:	a901      	add	r1, sp, #4
 80273fa:	f88d c008 	strb.w	ip, [sp, #8]
 80273fe:	f8ad 200a 	strh.w	r2, [sp, #10]
 8027402:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027406:	6803      	ldr	r3, [r0, #0]
 8027408:	689b      	ldr	r3, [r3, #8]
 802740a:	4798      	blx	r3
 802740c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027410:	1cd3      	adds	r3, r2, #3
 8027412:	b29b      	uxth	r3, r3
 8027414:	2b06      	cmp	r3, #6
 8027416:	d916      	bls.n	8027446 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8027418:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8027480 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802741c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8027420:	f8cd c004 	str.w	ip, [sp, #4]
 8027424:	f04f 0c01 	mov.w	ip, #1
 8027428:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802742c:	6920      	ldr	r0, [r4, #16]
 802742e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8027432:	a901      	add	r1, sp, #4
 8027434:	f88d c008 	strb.w	ip, [sp, #8]
 8027438:	f8ad 200a 	strh.w	r2, [sp, #10]
 802743c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027440:	6803      	ldr	r3, [r0, #0]
 8027442:	689b      	ldr	r3, [r3, #8]
 8027444:	4798      	blx	r3
 8027446:	4b0d      	ldr	r3, [pc, #52]	@ (802747c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8027448:	a901      	add	r1, sp, #4
 802744a:	6920      	ldr	r0, [r4, #16]
 802744c:	9301      	str	r3, [sp, #4]
 802744e:	2300      	movs	r3, #0
 8027450:	f88d 5008 	strb.w	r5, [sp, #8]
 8027454:	f8ad 700a 	strh.w	r7, [sp, #10]
 8027458:	f8ad 600c 	strh.w	r6, [sp, #12]
 802745c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8027460:	6803      	ldr	r3, [r0, #0]
 8027462:	681b      	ldr	r3, [r3, #0]
 8027464:	4798      	blx	r3
 8027466:	b005      	add	sp, #20
 8027468:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802746a:	2900      	cmp	r1, #0
 802746c:	d1eb      	bne.n	8027446 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802746e:	80a2      	strh	r2, [r4, #4]
 8027470:	80c6      	strh	r6, [r0, #6]
 8027472:	60a1      	str	r1, [r4, #8]
 8027474:	81a1      	strh	r1, [r4, #12]
 8027476:	73a1      	strb	r1, [r4, #14]
 8027478:	e7e5      	b.n	8027446 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802747a:	bf00      	nop
 802747c:	0802adc0 	.word	0x0802adc0
 8027480:	0802ade8 	.word	0x0802ade8

08027484 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
 8027484:	10c9      	asrs	r1, r1, #3
 8027486:	2900      	cmp	r1, #0
 8027488:	bfb8      	it	lt
 802748a:	4249      	neglt	r1, r1
 802748c:	2801      	cmp	r0, #1
 802748e:	d108      	bne.n	80274a2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 8027490:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8027494:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
 8027498:	4601      	mov	r1, r0
 802749a:	dd02      	ble.n	80274a2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
 802749c:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
 80274a0:	4770      	bx	lr
 80274a2:	29ff      	cmp	r1, #255	@ 0xff
 80274a4:	bfa8      	it	ge
 80274a6:	21ff      	movge	r1, #255	@ 0xff
 80274a8:	4608      	mov	r0, r1
 80274aa:	4770      	bx	lr

080274ac <_ZN8touchgfx10Rasterizer6lineToEii>:
 80274ac:	b410      	push	{r4}
 80274ae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80274b2:	429c      	cmp	r4, r3
 80274b4:	d803      	bhi.n	80274be <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80274b6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80274ba:	f7ed bd3f 	b.w	8014f3c <_ZN8touchgfx7Outline6lineToEii>
 80274be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80274c2:	4770      	bx	lr

080274c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80274c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80274c8:	b08b      	sub	sp, #44	@ 0x2c
 80274ca:	4606      	mov	r6, r0
 80274cc:	468a      	mov	sl, r1
 80274ce:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80274d2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80274d6:	9308      	str	r3, [sp, #32]
 80274d8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80274dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80274de:	f7ed fe98 	bl	8015212 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80274e2:	68b5      	ldr	r5, [r6, #8]
 80274e4:	4604      	mov	r4, r0
 80274e6:	2d00      	cmp	r5, #0
 80274e8:	d044      	beq.n	8027574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80274ea:	6873      	ldr	r3, [r6, #4]
 80274ec:	42ab      	cmp	r3, r5
 80274ee:	d33d      	bcc.n	802756c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80274f0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80274f4:	f04f 0800 	mov.w	r8, #0
 80274f8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
 80274fc:	eb02 0b03 	add.w	fp, r2, r3
 8027500:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8027504:	fb02 1203 	mla	r2, r2, r3, r1
 8027508:	9205      	str	r2, [sp, #20]
 802750a:	1e6a      	subs	r2, r5, #1
 802750c:	9204      	str	r2, [sp, #16]
 802750e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8027512:	f9b4 7000 	ldrsh.w	r7, [r4]
 8027516:	454b      	cmp	r3, r9
 8027518:	463a      	mov	r2, r7
 802751a:	d008      	beq.n	802752e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802751c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
 8027520:	eb03 0b09 	add.w	fp, r3, r9
 8027524:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8027528:	fb03 1309 	mla	r3, r3, r9, r1
 802752c:	9305      	str	r3, [sp, #20]
 802752e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8027532:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8027536:	4498      	add	r8, r3
 8027538:	9b04      	ldr	r3, [sp, #16]
 802753a:	3b01      	subs	r3, #1
 802753c:	9304      	str	r3, [sp, #16]
 802753e:	9b04      	ldr	r3, [sp, #16]
 8027540:	3301      	adds	r3, #1
 8027542:	d015      	beq.n	8027570 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8027544:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8027548:	42bb      	cmp	r3, r7
 802754a:	d117      	bne.n	802757c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802754c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8027550:	9b04      	ldr	r3, [sp, #16]
 8027552:	4548      	cmp	r0, r9
 8027554:	f103 33ff 	add.w	r3, r3, #4294967295
 8027558:	d17d      	bne.n	8027656 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
 802755a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802755e:	4401      	add	r1, r0
 8027560:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8027564:	4480      	add	r8, r0
 8027566:	e7e9      	b.n	802753c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8027568:	461f      	mov	r7, r3
 802756a:	e042      	b.n	80275f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
 802756c:	2000      	movs	r0, #0
 802756e:	e002      	b.n	8027576 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8027570:	2900      	cmp	r1, #0
 8027572:	d16d      	bne.n	8027650 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8027574:	2001      	movs	r0, #1
 8027576:	b00b      	add	sp, #44	@ 0x2c
 8027578:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802757c:	b379      	cbz	r1, 80275de <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
 802757e:	2f00      	cmp	r7, #0
 8027580:	db29      	blt.n	80275d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 8027582:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 8027586:	42bb      	cmp	r3, r7
 8027588:	dd25      	ble.n	80275d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 802758a:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802758e:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 8027592:	f7ff ff77 	bl	8027484 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 8027596:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027598:	fb10 f003 	smulbb	r0, r0, r3
 802759c:	b280      	uxth	r0, r0
 802759e:	1c41      	adds	r1, r0, #1
 80275a0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80275a4:	1209      	asrs	r1, r1, #8
 80275a6:	f011 0fff 	tst.w	r1, #255	@ 0xff
 80275aa:	d014      	beq.n	80275d6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
 80275ac:	b2c9      	uxtb	r1, r1
 80275ae:	9808      	ldr	r0, [sp, #32]
 80275b0:	b2ba      	uxth	r2, r7
 80275b2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 80275b4:	9102      	str	r1, [sp, #8]
 80275b6:	2101      	movs	r1, #1
 80275b8:	4413      	add	r3, r2
 80275ba:	4402      	add	r2, r0
 80275bc:	9101      	str	r1, [sp, #4]
 80275be:	fa0f f18b 	sxth.w	r1, fp
 80275c2:	f8da 0000 	ldr.w	r0, [sl]
 80275c6:	b21b      	sxth	r3, r3
 80275c8:	9100      	str	r1, [sp, #0]
 80275ca:	b212      	sxth	r2, r2
 80275cc:	6941      	ldr	r1, [r0, #20]
 80275ce:	4650      	mov	r0, sl
 80275d0:	460d      	mov	r5, r1
 80275d2:	9905      	ldr	r1, [sp, #20]
 80275d4:	47a8      	blx	r5
 80275d6:	9b04      	ldr	r3, [sp, #16]
 80275d8:	1c7a      	adds	r2, r7, #1
 80275da:	3301      	adds	r3, #1
 80275dc:	d0ca      	beq.n	8027574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80275de:	f9b4 7000 	ldrsh.w	r7, [r4]
 80275e2:	1abb      	subs	r3, r7, r2
 80275e4:	2b00      	cmp	r3, #0
 80275e6:	dd31      	ble.n	802764c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80275e8:	2a00      	cmp	r2, #0
 80275ea:	dabd      	bge.n	8027568 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80275ec:	2f00      	cmp	r7, #0
 80275ee:	dd2d      	ble.n	802764c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 80275f0:	2200      	movs	r2, #0
 80275f2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
 80275f6:	19d1      	adds	r1, r2, r7
 80275f8:	4299      	cmp	r1, r3
 80275fa:	db02      	blt.n	8027602 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
 80275fc:	1a9f      	subs	r7, r3, r2
 80275fe:	2f00      	cmp	r7, #0
 8027600:	dd24      	ble.n	802764c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8027602:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8027606:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
 802760a:	f7ff ff3b 	bl	8027484 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
 802760e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8027610:	fb10 f003 	smulbb	r0, r0, r3
 8027614:	b280      	uxth	r0, r0
 8027616:	1c41      	adds	r1, r0, #1
 8027618:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802761c:	1209      	asrs	r1, r1, #8
 802761e:	f011 0fff 	tst.w	r1, #255	@ 0xff
 8027622:	d013      	beq.n	802764c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 8027624:	b292      	uxth	r2, r2
 8027626:	9808      	ldr	r0, [sp, #32]
 8027628:	b2c9      	uxtb	r1, r1
 802762a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
 802762c:	b23f      	sxth	r7, r7
 802762e:	4413      	add	r3, r2
 8027630:	9102      	str	r1, [sp, #8]
 8027632:	4402      	add	r2, r0
 8027634:	fa0f f18b 	sxth.w	r1, fp
 8027638:	f8da 0000 	ldr.w	r0, [sl]
 802763c:	b21b      	sxth	r3, r3
 802763e:	9100      	str	r1, [sp, #0]
 8027640:	b212      	sxth	r2, r2
 8027642:	9701      	str	r7, [sp, #4]
 8027644:	9905      	ldr	r1, [sp, #20]
 8027646:	6947      	ldr	r7, [r0, #20]
 8027648:	4650      	mov	r0, sl
 802764a:	47b8      	blx	r7
 802764c:	464b      	mov	r3, r9
 802764e:	e75e      	b.n	802750e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8027650:	2f00      	cmp	r7, #0
 8027652:	da96      	bge.n	8027582 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
 8027654:	e78e      	b.n	8027574 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8027656:	2900      	cmp	r1, #0
 8027658:	d0f8      	beq.n	802764c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
 802765a:	e790      	b.n	802757e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

0802765c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
 802765c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027660:	461e      	mov	r6, r3
 8027662:	4b36      	ldr	r3, [pc, #216]	@ (802773c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
 8027664:	2500      	movs	r5, #0
 8027666:	f100 0814 	add.w	r8, r0, #20
 802766a:	4604      	mov	r4, r0
 802766c:	4617      	mov	r7, r2
 802766e:	e9c0 3100 	strd	r3, r1, [r0]
 8027672:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8027676:	8185      	strh	r5, [r0, #12]
 8027678:	8103      	strh	r3, [r0, #8]
 802767a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 802767e:	81c5      	strh	r5, [r0, #14]
 8027680:	7283      	strb	r3, [r0, #10]
 8027682:	8205      	strh	r5, [r0, #16]
 8027684:	8245      	strh	r5, [r0, #18]
 8027686:	4640      	mov	r0, r8
 8027688:	f7ec ff9e 	bl	80145c8 <_ZN8touchgfx7OutlineC1Ev>
 802768c:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
 8027690:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
 8027694:	466b      	mov	r3, sp
 8027696:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
 802769a:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
 802769e:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
 80276a2:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
 80276a6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
 80276aa:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
 80276ae:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
 80276b2:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
 80276b6:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
 80276ba:	6830      	ldr	r0, [r6, #0]
 80276bc:	6871      	ldr	r1, [r6, #4]
 80276be:	8872      	ldrh	r2, [r6, #2]
 80276c0:	8835      	ldrh	r5, [r6, #0]
 80276c2:	c303      	stmia	r3!, {r0, r1}
 80276c4:	887b      	ldrh	r3, [r7, #2]
 80276c6:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
 80276ca:	4413      	add	r3, r2
 80276cc:	883a      	ldrh	r2, [r7, #0]
 80276ce:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
 80276d2:	442a      	add	r2, r5
 80276d4:	81e3      	strh	r3, [r4, #14]
 80276d6:	8220      	strh	r0, [r4, #16]
 80276d8:	4668      	mov	r0, sp
 80276da:	81a2      	strh	r2, [r4, #12]
 80276dc:	8261      	strh	r1, [r4, #18]
 80276de:	4639      	mov	r1, r7
 80276e0:	f7ee fcb6 	bl	8016050 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80276e4:	f104 000c 	add.w	r0, r4, #12
 80276e8:	f7ee fc8a 	bl	8016000 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80276ec:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80276f0:	f8bd 2000 	ldrh.w	r2, [sp]
 80276f4:	4640      	mov	r0, r8
 80276f6:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
 80276fa:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
 80276fe:	f7ec ff47 	bl	8014590 <_ZN8touchgfx7Outline5resetEv>
 8027702:	f9bd 3000 	ldrsh.w	r3, [sp]
 8027706:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
 802770a:	4620      	mov	r0, r4
 802770c:	015b      	lsls	r3, r3, #5
 802770e:	64e3      	str	r3, [r4, #76]	@ 0x4c
 8027710:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8027714:	015b      	lsls	r3, r3, #5
 8027716:	6523      	str	r3, [r4, #80]	@ 0x50
 8027718:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802771c:	015b      	lsls	r3, r3, #5
 802771e:	6563      	str	r3, [r4, #84]	@ 0x54
 8027720:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8027724:	015b      	lsls	r3, r3, #5
 8027726:	65a3      	str	r3, [r4, #88]	@ 0x58
 8027728:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
 802772c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
 8027730:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
 8027734:	b002      	add	sp, #8
 8027736:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802773a:	bf00      	nop
 802773c:	0802b124 	.word	0x0802b124

08027740 <_ZN8touchgfx6Canvas5closeEv>:
 8027740:	b538      	push	{r3, r4, r5, lr}
 8027742:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 8027746:	4604      	mov	r4, r0
 8027748:	b193      	cbz	r3, 8027770 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802774a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
 802774e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
 8027752:	4213      	tst	r3, r2
 8027754:	d10c      	bne.n	8027770 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8027756:	f100 0514 	add.w	r5, r0, #20
 802775a:	b123      	cbz	r3, 8027766 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802775c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
 8027760:	4628      	mov	r0, r5
 8027762:	f7ff fea3 	bl	80274ac <_ZN8touchgfx10Rasterizer6lineToEii>
 8027766:	4628      	mov	r0, r5
 8027768:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
 802776c:	f7ff fe9e 	bl	80274ac <_ZN8touchgfx10Rasterizer6lineToEii>
 8027770:	2300      	movs	r3, #0
 8027772:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8027776:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
 802777a:	4298      	cmp	r0, r3
 802777c:	bf34      	ite	cc
 802777e:	2000      	movcc	r0, #0
 8027780:	2001      	movcs	r0, #1
 8027782:	bd38      	pop	{r3, r4, r5, pc}

08027784 <_ZN8touchgfx6Canvas6renderEh>:
 8027784:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8027788:	7a85      	ldrb	r5, [r0, #10]
 802778a:	4604      	mov	r4, r0
 802778c:	4369      	muls	r1, r5
 802778e:	1c4d      	adds	r5, r1, #1
 8027790:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8027794:	122d      	asrs	r5, r5, #8
 8027796:	f000 8098 	beq.w	80278ca <_ZN8touchgfx6Canvas6renderEh+0x146>
 802779a:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
 802779e:	2b00      	cmp	r3, #0
 80277a0:	f000 8093 	beq.w	80278ca <_ZN8touchgfx6Canvas6renderEh+0x146>
 80277a4:	f7ff ffcc 	bl	8027740 <_ZN8touchgfx6Canvas5closeEv>
 80277a8:	4607      	mov	r7, r0
 80277aa:	2800      	cmp	r0, #0
 80277ac:	d045      	beq.n	802783a <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80277ae:	6860      	ldr	r0, [r4, #4]
 80277b0:	4e47      	ldr	r6, [pc, #284]	@ (80278d0 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
 80277b2:	6803      	ldr	r3, [r0, #0]
 80277b4:	6837      	ldr	r7, [r6, #0]
 80277b6:	689b      	ldr	r3, [r3, #8]
 80277b8:	4798      	blx	r3
 80277ba:	4601      	mov	r1, r0
 80277bc:	4638      	mov	r0, r7
 80277be:	f7eb fcbb 	bl	8013138 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80277c2:	4607      	mov	r7, r0
 80277c4:	f7e3 ffc2 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 80277c8:	6803      	ldr	r3, [r0, #0]
 80277ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80277cc:	4798      	blx	r3
 80277ce:	4680      	mov	r8, r0
 80277d0:	f7e3 ffbc 	bl	800b74c <_ZN8touchgfx3HAL3lcdEv>
 80277d4:	6803      	ldr	r3, [r0, #0]
 80277d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80277d8:	4798      	blx	r3
 80277da:	280b      	cmp	r0, #11
 80277dc:	d85a      	bhi.n	8027894 <_ZN8touchgfx6Canvas6renderEh+0x110>
 80277de:	e8df f000 	tbb	[pc, r0]
 80277e2:	5b50      	.short	0x5b50
 80277e4:	3059066b 	.word	0x3059066b
 80277e8:	64646440 	.word	0x64646440
 80277ec:	6464      	.short	0x6464
 80277ee:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80277f2:	2208      	movs	r2, #8
 80277f4:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80277f8:	fb91 f2f2 	sdiv	r2, r1, r2
 80277fc:	fb08 2303 	mla	r3, r8, r3, r2
 8027800:	441f      	add	r7, r3
 8027802:	424b      	negs	r3, r1
 8027804:	f001 0107 	and.w	r1, r1, #7
 8027808:	f003 0307 	and.w	r3, r3, #7
 802780c:	bf58      	it	pl
 802780e:	4259      	negpl	r1, r3
 8027810:	b2c9      	uxtb	r1, r1
 8027812:	b2ed      	uxtb	r5, r5
 8027814:	463a      	mov	r2, r7
 8027816:	fa0f f388 	sxth.w	r3, r8
 802781a:	f104 0014 	add.w	r0, r4, #20
 802781e:	e9cd 1500 	strd	r1, r5, [sp]
 8027822:	6861      	ldr	r1, [r4, #4]
 8027824:	f7ff fe4e 	bl	80274c4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8027828:	4607      	mov	r7, r0
 802782a:	6860      	ldr	r0, [r4, #4]
 802782c:	6803      	ldr	r3, [r0, #0]
 802782e:	691b      	ldr	r3, [r3, #16]
 8027830:	4798      	blx	r3
 8027832:	6830      	ldr	r0, [r6, #0]
 8027834:	6803      	ldr	r3, [r0, #0]
 8027836:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8027838:	4798      	blx	r3
 802783a:	4638      	mov	r0, r7
 802783c:	b002      	add	sp, #8
 802783e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027842:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8027846:	2204      	movs	r2, #4
 8027848:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802784c:	fb91 f2f2 	sdiv	r2, r1, r2
 8027850:	fb08 2303 	mla	r3, r8, r3, r2
 8027854:	441f      	add	r7, r3
 8027856:	424b      	negs	r3, r1
 8027858:	f001 0103 	and.w	r1, r1, #3
 802785c:	f003 0303 	and.w	r3, r3, #3
 8027860:	e7d4      	b.n	802780c <_ZN8touchgfx6Canvas6renderEh+0x88>
 8027862:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8027866:	2202      	movs	r2, #2
 8027868:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802786c:	2900      	cmp	r1, #0
 802786e:	fb91 f2f2 	sdiv	r2, r1, r2
 8027872:	f001 0101 	and.w	r1, r1, #1
 8027876:	fb08 2303 	mla	r3, r8, r3, r2
 802787a:	bfb8      	it	lt
 802787c:	4249      	neglt	r1, r1
 802787e:	441f      	add	r7, r3
 8027880:	e7c6      	b.n	8027810 <_ZN8touchgfx6Canvas6renderEh+0x8c>
 8027882:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 8027886:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802788a:	fb08 f303 	mul.w	r3, r8, r3
 802788e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8027892:	441f      	add	r7, r3
 8027894:	2100      	movs	r1, #0
 8027896:	e7bc      	b.n	8027812 <_ZN8touchgfx6Canvas6renderEh+0x8e>
 8027898:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 802789c:	2103      	movs	r1, #3
 802789e:	fb08 f203 	mul.w	r2, r8, r3
 80278a2:	89a3      	ldrh	r3, [r4, #12]
 80278a4:	fb13 2301 	smlabb	r3, r3, r1, r2
 80278a8:	e7f3      	b.n	8027892 <_ZN8touchgfx6Canvas6renderEh+0x10e>
 80278aa:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80278ae:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80278b2:	fb08 2303 	mla	r3, r8, r3, r2
 80278b6:	e7ec      	b.n	8027892 <_ZN8touchgfx6Canvas6renderEh+0x10e>
 80278b8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
 80278bc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80278c0:	fb08 f303 	mul.w	r3, r8, r3
 80278c4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80278c8:	e7e3      	b.n	8027892 <_ZN8touchgfx6Canvas6renderEh+0x10e>
 80278ca:	2701      	movs	r7, #1
 80278cc:	e7b5      	b.n	802783a <_ZN8touchgfx6Canvas6renderEh+0xb6>
 80278ce:	bf00      	nop
 80278d0:	20003984 	.word	0x20003984

080278d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80278d4:	4b06      	ldr	r3, [pc, #24]	@ (80278f0 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
 80278d6:	b510      	push	{r4, lr}
 80278d8:	781b      	ldrb	r3, [r3, #0]
 80278da:	2b01      	cmp	r3, #1
 80278dc:	d107      	bne.n	80278ee <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
 80278de:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 80278e2:	680b      	ldr	r3, [r1, #0]
 80278e4:	6814      	ldr	r4, [r2, #0]
 80278e6:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80278ea:	6013      	str	r3, [r2, #0]
 80278ec:	600c      	str	r4, [r1, #0]
 80278ee:	bd10      	pop	{r4, pc}
 80278f0:	2000397c 	.word	0x2000397c

080278f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80278f4:	b513      	push	{r0, r1, r4, lr}
 80278f6:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
 80278fa:	4604      	mov	r4, r0
 80278fc:	e9cd 2100 	strd	r2, r1, [sp]
 8027900:	b9a3      	cbnz	r3, 802792c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8027902:	466a      	mov	r2, sp
 8027904:	a901      	add	r1, sp, #4
 8027906:	4620      	mov	r0, r4
 8027908:	f7ff ffe4 	bl	80278d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802790c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 802790e:	9901      	ldr	r1, [sp, #4]
 8027910:	9a00      	ldr	r2, [sp, #0]
 8027912:	1ac9      	subs	r1, r1, r3
 8027914:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 8027916:	1ad2      	subs	r2, r2, r3
 8027918:	9101      	str	r1, [sp, #4]
 802791a:	2a00      	cmp	r2, #0
 802791c:	9200      	str	r2, [sp, #0]
 802791e:	da0b      	bge.n	8027938 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8027920:	2301      	movs	r3, #1
 8027922:	2900      	cmp	r1, #0
 8027924:	da0e      	bge.n	8027944 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8027926:	f043 0304 	orr.w	r3, r3, #4
 802792a:	e013      	b.n	8027954 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802792c:	f7ff ff08 	bl	8027740 <_ZN8touchgfx6Canvas5closeEv>
 8027930:	2800      	cmp	r0, #0
 8027932:	d1e6      	bne.n	8027902 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8027934:	b002      	add	sp, #8
 8027936:	bd10      	pop	{r4, pc}
 8027938:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 802793a:	429a      	cmp	r2, r3
 802793c:	bfac      	ite	ge
 802793e:	2302      	movge	r3, #2
 8027940:	2300      	movlt	r3, #0
 8027942:	e7ee      	b.n	8027922 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8027944:	6d60      	ldr	r0, [r4, #84]	@ 0x54
 8027946:	4281      	cmp	r1, r0
 8027948:	bfac      	ite	ge
 802794a:	2008      	movge	r0, #8
 802794c:	2000      	movlt	r0, #0
 802794e:	4318      	orrs	r0, r3
 8027950:	b2c3      	uxtb	r3, r0
 8027952:	b158      	cbz	r0, 802796c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8027954:	2200      	movs	r2, #0
 8027956:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
 802795a:	9901      	ldr	r1, [sp, #4]
 802795c:	9a00      	ldr	r2, [sp, #0]
 802795e:	66e1      	str	r1, [r4, #108]	@ 0x6c
 8027960:	6722      	str	r2, [r4, #112]	@ 0x70
 8027962:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
 8027966:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
 802796a:	e7e3      	b.n	8027934 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802796c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8027970:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8027974:	4298      	cmp	r0, r3
 8027976:	d803      	bhi.n	8027980 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8027978:	f104 0014 	add.w	r0, r4, #20
 802797c:	f7ed faf8 	bl	8014f70 <_ZN8touchgfx7Outline6moveToEii>
 8027980:	2301      	movs	r3, #1
 8027982:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8027986:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 802798a:	2300      	movs	r3, #0
 802798c:	e7e5      	b.n	802795a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802798e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802798e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027990:	ab02      	add	r3, sp, #8
 8027992:	4604      	mov	r4, r0
 8027994:	9101      	str	r1, [sp, #4]
 8027996:	a901      	add	r1, sp, #4
 8027998:	f843 2d08 	str.w	r2, [r3, #-8]!
 802799c:	461a      	mov	r2, r3
 802799e:	f7ff ff99 	bl	80278d4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80279a2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80279a4:	9901      	ldr	r1, [sp, #4]
 80279a6:	9a00      	ldr	r2, [sp, #0]
 80279a8:	1ac9      	subs	r1, r1, r3
 80279aa:	6d23      	ldr	r3, [r4, #80]	@ 0x50
 80279ac:	1ad2      	subs	r2, r2, r3
 80279ae:	9101      	str	r1, [sp, #4]
 80279b0:	2a00      	cmp	r2, #0
 80279b2:	9200      	str	r2, [sp, #0]
 80279b4:	db1c      	blt.n	80279f0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80279b6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 80279b8:	429a      	cmp	r2, r3
 80279ba:	bfac      	ite	ge
 80279bc:	2002      	movge	r0, #2
 80279be:	2000      	movlt	r0, #0
 80279c0:	2900      	cmp	r1, #0
 80279c2:	db17      	blt.n	80279f4 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80279c4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 80279c6:	4299      	cmp	r1, r3
 80279c8:	bfac      	ite	ge
 80279ca:	2308      	movge	r3, #8
 80279cc:	2300      	movlt	r3, #0
 80279ce:	4303      	orrs	r3, r0
 80279d0:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
 80279d4:	b2dd      	uxtb	r5, r3
 80279d6:	b978      	cbnz	r0, 80279f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80279d8:	f104 0014 	add.w	r0, r4, #20
 80279dc:	f7ff fd66 	bl	80274ac <_ZN8touchgfx10Rasterizer6lineToEii>
 80279e0:	9b01      	ldr	r3, [sp, #4]
 80279e2:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
 80279e6:	6623      	str	r3, [r4, #96]	@ 0x60
 80279e8:	9b00      	ldr	r3, [sp, #0]
 80279ea:	6663      	str	r3, [r4, #100]	@ 0x64
 80279ec:	b002      	add	sp, #8
 80279ee:	bd70      	pop	{r4, r5, r6, pc}
 80279f0:	2001      	movs	r0, #1
 80279f2:	e7e5      	b.n	80279c0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 80279f4:	2304      	movs	r3, #4
 80279f6:	e7ea      	b.n	80279ce <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 80279f8:	b113      	cbz	r3, 8027a00 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 80279fa:	ea10 0305 	ands.w	r3, r0, r5
 80279fe:	d11c      	bne.n	8027a3a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8027a00:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
 8027a04:	f104 0614 	add.w	r6, r4, #20
 8027a08:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
 8027a0c:	b98b      	cbnz	r3, 8027a32 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8027a0e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
 8027a12:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
 8027a16:	4298      	cmp	r0, r3
 8027a18:	d802      	bhi.n	8027a20 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8027a1a:	4630      	mov	r0, r6
 8027a1c:	f7ed faa8 	bl	8014f70 <_ZN8touchgfx7Outline6moveToEii>
 8027a20:	2301      	movs	r3, #1
 8027a22:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
 8027a26:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
 8027a2a:	4630      	mov	r0, r6
 8027a2c:	e9dd 2100 	ldrd	r2, r1, [sp]
 8027a30:	e7d4      	b.n	80279dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8027a32:	4630      	mov	r0, r6
 8027a34:	f7ff fd3a 	bl	80274ac <_ZN8touchgfx10Rasterizer6lineToEii>
 8027a38:	e7f7      	b.n	8027a2a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8027a3a:	461d      	mov	r5, r3
 8027a3c:	e7d0      	b.n	80279e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08027a40 <_ZN8touchgfx6CanvasD1Ev>:
 8027a40:	4b04      	ldr	r3, [pc, #16]	@ (8027a54 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8027a42:	b510      	push	{r4, lr}
 8027a44:	4604      	mov	r4, r0
 8027a46:	f840 3b14 	str.w	r3, [r0], #20
 8027a4a:	f7ec fd99 	bl	8014580 <_ZN8touchgfx7OutlineD1Ev>
 8027a4e:	4620      	mov	r0, r4
 8027a50:	bd10      	pop	{r4, pc}
 8027a52:	bf00      	nop
 8027a54:	0802b124 	.word	0x0802b124

08027a58 <_ZN8touchgfx6CanvasD0Ev>:
 8027a58:	b510      	push	{r4, lr}
 8027a5a:	4604      	mov	r4, r0
 8027a5c:	f7ff fff0 	bl	8027a40 <_ZN8touchgfx6CanvasD1Ev>
 8027a60:	2174      	movs	r1, #116	@ 0x74
 8027a62:	4620      	mov	r0, r4
 8027a64:	f000 f807 	bl	8027a76 <_ZdlPvj>
 8027a68:	4620      	mov	r0, r4
 8027a6a:	bd10      	pop	{r4, pc}

08027a6c <__aeabi_atexit>:
 8027a6c:	460b      	mov	r3, r1
 8027a6e:	4601      	mov	r1, r0
 8027a70:	4618      	mov	r0, r3
 8027a72:	f000 b911 	b.w	8027c98 <__cxa_atexit>

08027a76 <_ZdlPvj>:
 8027a76:	f000 b812 	b.w	8027a9e <_ZdlPv>

08027a7a <__cxa_guard_acquire>:
 8027a7a:	6802      	ldr	r2, [r0, #0]
 8027a7c:	07d2      	lsls	r2, r2, #31
 8027a7e:	4603      	mov	r3, r0
 8027a80:	d405      	bmi.n	8027a8e <__cxa_guard_acquire+0x14>
 8027a82:	7842      	ldrb	r2, [r0, #1]
 8027a84:	b102      	cbz	r2, 8027a88 <__cxa_guard_acquire+0xe>
 8027a86:	deff      	udf	#255	@ 0xff
 8027a88:	2001      	movs	r0, #1
 8027a8a:	7058      	strb	r0, [r3, #1]
 8027a8c:	4770      	bx	lr
 8027a8e:	2000      	movs	r0, #0
 8027a90:	4770      	bx	lr

08027a92 <__cxa_guard_release>:
 8027a92:	2301      	movs	r3, #1
 8027a94:	6003      	str	r3, [r0, #0]
 8027a96:	4770      	bx	lr

08027a98 <__cxa_pure_virtual>:
 8027a98:	b508      	push	{r3, lr}
 8027a9a:	f000 f80f 	bl	8027abc <_ZSt9terminatev>

08027a9e <_ZdlPv>:
 8027a9e:	f000 b845 	b.w	8027b2c <free>

08027aa2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8027aa2:	b508      	push	{r3, lr}
 8027aa4:	4780      	blx	r0
 8027aa6:	f000 f80e 	bl	8027ac6 <abort>
	...

08027aac <_ZSt13get_terminatev>:
 8027aac:	4b02      	ldr	r3, [pc, #8]	@ (8027ab8 <_ZSt13get_terminatev+0xc>)
 8027aae:	6818      	ldr	r0, [r3, #0]
 8027ab0:	f3bf 8f5b 	dmb	ish
 8027ab4:	4770      	bx	lr
 8027ab6:	bf00      	nop
 8027ab8:	2000021c 	.word	0x2000021c

08027abc <_ZSt9terminatev>:
 8027abc:	b508      	push	{r3, lr}
 8027abe:	f7ff fff5 	bl	8027aac <_ZSt13get_terminatev>
 8027ac2:	f7ff ffee 	bl	8027aa2 <_ZN10__cxxabiv111__terminateEPFvvE>

08027ac6 <abort>:
 8027ac6:	b508      	push	{r3, lr}
 8027ac8:	2006      	movs	r0, #6
 8027aca:	f000 fa3b 	bl	8027f44 <raise>
 8027ace:	2001      	movs	r0, #1
 8027ad0:	f7d9 fe0c 	bl	80016ec <_exit>

08027ad4 <__assert_func>:
 8027ad4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8027ad6:	4614      	mov	r4, r2
 8027ad8:	461a      	mov	r2, r3
 8027ada:	4b09      	ldr	r3, [pc, #36]	@ (8027b00 <__assert_func+0x2c>)
 8027adc:	681b      	ldr	r3, [r3, #0]
 8027ade:	4605      	mov	r5, r0
 8027ae0:	68d8      	ldr	r0, [r3, #12]
 8027ae2:	b954      	cbnz	r4, 8027afa <__assert_func+0x26>
 8027ae4:	4b07      	ldr	r3, [pc, #28]	@ (8027b04 <__assert_func+0x30>)
 8027ae6:	461c      	mov	r4, r3
 8027ae8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8027aec:	9100      	str	r1, [sp, #0]
 8027aee:	462b      	mov	r3, r5
 8027af0:	4905      	ldr	r1, [pc, #20]	@ (8027b08 <__assert_func+0x34>)
 8027af2:	f000 f983 	bl	8027dfc <fiprintf>
 8027af6:	f7ff ffe6 	bl	8027ac6 <abort>
 8027afa:	4b04      	ldr	r3, [pc, #16]	@ (8027b0c <__assert_func+0x38>)
 8027afc:	e7f4      	b.n	8027ae8 <__assert_func+0x14>
 8027afe:	bf00      	nop
 8027b00:	2000022c 	.word	0x2000022c
 8027b04:	0802b16b 	.word	0x0802b16b
 8027b08:	0802b13d 	.word	0x0802b13d
 8027b0c:	0802b130 	.word	0x0802b130

08027b10 <atexit>:
 8027b10:	2300      	movs	r3, #0
 8027b12:	4601      	mov	r1, r0
 8027b14:	461a      	mov	r2, r3
 8027b16:	4618      	mov	r0, r3
 8027b18:	f000 bac2 	b.w	80280a0 <__register_exitproc>

08027b1c <malloc>:
 8027b1c:	4b02      	ldr	r3, [pc, #8]	@ (8027b28 <malloc+0xc>)
 8027b1e:	4601      	mov	r1, r0
 8027b20:	6818      	ldr	r0, [r3, #0]
 8027b22:	f000 b82d 	b.w	8027b80 <_malloc_r>
 8027b26:	bf00      	nop
 8027b28:	2000022c 	.word	0x2000022c

08027b2c <free>:
 8027b2c:	4b02      	ldr	r3, [pc, #8]	@ (8027b38 <free+0xc>)
 8027b2e:	4601      	mov	r1, r0
 8027b30:	6818      	ldr	r0, [r3, #0]
 8027b32:	f000 bb11 	b.w	8028158 <_free_r>
 8027b36:	bf00      	nop
 8027b38:	2000022c 	.word	0x2000022c

08027b3c <sbrk_aligned>:
 8027b3c:	b570      	push	{r4, r5, r6, lr}
 8027b3e:	4e0f      	ldr	r6, [pc, #60]	@ (8027b7c <sbrk_aligned+0x40>)
 8027b40:	460c      	mov	r4, r1
 8027b42:	6831      	ldr	r1, [r6, #0]
 8027b44:	4605      	mov	r5, r0
 8027b46:	b911      	cbnz	r1, 8027b4e <sbrk_aligned+0x12>
 8027b48:	f000 fa4c 	bl	8027fe4 <_sbrk_r>
 8027b4c:	6030      	str	r0, [r6, #0]
 8027b4e:	4621      	mov	r1, r4
 8027b50:	4628      	mov	r0, r5
 8027b52:	f000 fa47 	bl	8027fe4 <_sbrk_r>
 8027b56:	1c43      	adds	r3, r0, #1
 8027b58:	d103      	bne.n	8027b62 <sbrk_aligned+0x26>
 8027b5a:	f04f 34ff 	mov.w	r4, #4294967295
 8027b5e:	4620      	mov	r0, r4
 8027b60:	bd70      	pop	{r4, r5, r6, pc}
 8027b62:	1cc4      	adds	r4, r0, #3
 8027b64:	f024 0403 	bic.w	r4, r4, #3
 8027b68:	42a0      	cmp	r0, r4
 8027b6a:	d0f8      	beq.n	8027b5e <sbrk_aligned+0x22>
 8027b6c:	1a21      	subs	r1, r4, r0
 8027b6e:	4628      	mov	r0, r5
 8027b70:	f000 fa38 	bl	8027fe4 <_sbrk_r>
 8027b74:	3001      	adds	r0, #1
 8027b76:	d1f2      	bne.n	8027b5e <sbrk_aligned+0x22>
 8027b78:	e7ef      	b.n	8027b5a <sbrk_aligned+0x1e>
 8027b7a:	bf00      	nop
 8027b7c:	200043e0 	.word	0x200043e0

08027b80 <_malloc_r>:
 8027b80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027b84:	1ccd      	adds	r5, r1, #3
 8027b86:	f025 0503 	bic.w	r5, r5, #3
 8027b8a:	3508      	adds	r5, #8
 8027b8c:	2d0c      	cmp	r5, #12
 8027b8e:	bf38      	it	cc
 8027b90:	250c      	movcc	r5, #12
 8027b92:	2d00      	cmp	r5, #0
 8027b94:	4606      	mov	r6, r0
 8027b96:	db01      	blt.n	8027b9c <_malloc_r+0x1c>
 8027b98:	42a9      	cmp	r1, r5
 8027b9a:	d904      	bls.n	8027ba6 <_malloc_r+0x26>
 8027b9c:	230c      	movs	r3, #12
 8027b9e:	6033      	str	r3, [r6, #0]
 8027ba0:	2000      	movs	r0, #0
 8027ba2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027ba6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8027c7c <_malloc_r+0xfc>
 8027baa:	f000 f869 	bl	8027c80 <__malloc_lock>
 8027bae:	f8d8 3000 	ldr.w	r3, [r8]
 8027bb2:	461c      	mov	r4, r3
 8027bb4:	bb44      	cbnz	r4, 8027c08 <_malloc_r+0x88>
 8027bb6:	4629      	mov	r1, r5
 8027bb8:	4630      	mov	r0, r6
 8027bba:	f7ff ffbf 	bl	8027b3c <sbrk_aligned>
 8027bbe:	1c43      	adds	r3, r0, #1
 8027bc0:	4604      	mov	r4, r0
 8027bc2:	d158      	bne.n	8027c76 <_malloc_r+0xf6>
 8027bc4:	f8d8 4000 	ldr.w	r4, [r8]
 8027bc8:	4627      	mov	r7, r4
 8027bca:	2f00      	cmp	r7, #0
 8027bcc:	d143      	bne.n	8027c56 <_malloc_r+0xd6>
 8027bce:	2c00      	cmp	r4, #0
 8027bd0:	d04b      	beq.n	8027c6a <_malloc_r+0xea>
 8027bd2:	6823      	ldr	r3, [r4, #0]
 8027bd4:	4639      	mov	r1, r7
 8027bd6:	4630      	mov	r0, r6
 8027bd8:	eb04 0903 	add.w	r9, r4, r3
 8027bdc:	f000 fa02 	bl	8027fe4 <_sbrk_r>
 8027be0:	4581      	cmp	r9, r0
 8027be2:	d142      	bne.n	8027c6a <_malloc_r+0xea>
 8027be4:	6821      	ldr	r1, [r4, #0]
 8027be6:	1a6d      	subs	r5, r5, r1
 8027be8:	4629      	mov	r1, r5
 8027bea:	4630      	mov	r0, r6
 8027bec:	f7ff ffa6 	bl	8027b3c <sbrk_aligned>
 8027bf0:	3001      	adds	r0, #1
 8027bf2:	d03a      	beq.n	8027c6a <_malloc_r+0xea>
 8027bf4:	6823      	ldr	r3, [r4, #0]
 8027bf6:	442b      	add	r3, r5
 8027bf8:	6023      	str	r3, [r4, #0]
 8027bfa:	f8d8 3000 	ldr.w	r3, [r8]
 8027bfe:	685a      	ldr	r2, [r3, #4]
 8027c00:	bb62      	cbnz	r2, 8027c5c <_malloc_r+0xdc>
 8027c02:	f8c8 7000 	str.w	r7, [r8]
 8027c06:	e00f      	b.n	8027c28 <_malloc_r+0xa8>
 8027c08:	6822      	ldr	r2, [r4, #0]
 8027c0a:	1b52      	subs	r2, r2, r5
 8027c0c:	d420      	bmi.n	8027c50 <_malloc_r+0xd0>
 8027c0e:	2a0b      	cmp	r2, #11
 8027c10:	d917      	bls.n	8027c42 <_malloc_r+0xc2>
 8027c12:	1961      	adds	r1, r4, r5
 8027c14:	42a3      	cmp	r3, r4
 8027c16:	6025      	str	r5, [r4, #0]
 8027c18:	bf18      	it	ne
 8027c1a:	6059      	strne	r1, [r3, #4]
 8027c1c:	6863      	ldr	r3, [r4, #4]
 8027c1e:	bf08      	it	eq
 8027c20:	f8c8 1000 	streq.w	r1, [r8]
 8027c24:	5162      	str	r2, [r4, r5]
 8027c26:	604b      	str	r3, [r1, #4]
 8027c28:	4630      	mov	r0, r6
 8027c2a:	f000 f82f 	bl	8027c8c <__malloc_unlock>
 8027c2e:	f104 000b 	add.w	r0, r4, #11
 8027c32:	1d23      	adds	r3, r4, #4
 8027c34:	f020 0007 	bic.w	r0, r0, #7
 8027c38:	1ac2      	subs	r2, r0, r3
 8027c3a:	bf1c      	itt	ne
 8027c3c:	1a1b      	subne	r3, r3, r0
 8027c3e:	50a3      	strne	r3, [r4, r2]
 8027c40:	e7af      	b.n	8027ba2 <_malloc_r+0x22>
 8027c42:	6862      	ldr	r2, [r4, #4]
 8027c44:	42a3      	cmp	r3, r4
 8027c46:	bf0c      	ite	eq
 8027c48:	f8c8 2000 	streq.w	r2, [r8]
 8027c4c:	605a      	strne	r2, [r3, #4]
 8027c4e:	e7eb      	b.n	8027c28 <_malloc_r+0xa8>
 8027c50:	4623      	mov	r3, r4
 8027c52:	6864      	ldr	r4, [r4, #4]
 8027c54:	e7ae      	b.n	8027bb4 <_malloc_r+0x34>
 8027c56:	463c      	mov	r4, r7
 8027c58:	687f      	ldr	r7, [r7, #4]
 8027c5a:	e7b6      	b.n	8027bca <_malloc_r+0x4a>
 8027c5c:	461a      	mov	r2, r3
 8027c5e:	685b      	ldr	r3, [r3, #4]
 8027c60:	42a3      	cmp	r3, r4
 8027c62:	d1fb      	bne.n	8027c5c <_malloc_r+0xdc>
 8027c64:	2300      	movs	r3, #0
 8027c66:	6053      	str	r3, [r2, #4]
 8027c68:	e7de      	b.n	8027c28 <_malloc_r+0xa8>
 8027c6a:	230c      	movs	r3, #12
 8027c6c:	6033      	str	r3, [r6, #0]
 8027c6e:	4630      	mov	r0, r6
 8027c70:	f000 f80c 	bl	8027c8c <__malloc_unlock>
 8027c74:	e794      	b.n	8027ba0 <_malloc_r+0x20>
 8027c76:	6005      	str	r5, [r0, #0]
 8027c78:	e7d6      	b.n	8027c28 <_malloc_r+0xa8>
 8027c7a:	bf00      	nop
 8027c7c:	200043e4 	.word	0x200043e4

08027c80 <__malloc_lock>:
 8027c80:	4801      	ldr	r0, [pc, #4]	@ (8027c88 <__malloc_lock+0x8>)
 8027c82:	f000 b9fc 	b.w	802807e <__retarget_lock_acquire_recursive>
 8027c86:	bf00      	nop
 8027c88:	20004528 	.word	0x20004528

08027c8c <__malloc_unlock>:
 8027c8c:	4801      	ldr	r0, [pc, #4]	@ (8027c94 <__malloc_unlock+0x8>)
 8027c8e:	f000 b9f7 	b.w	8028080 <__retarget_lock_release_recursive>
 8027c92:	bf00      	nop
 8027c94:	20004528 	.word	0x20004528

08027c98 <__cxa_atexit>:
 8027c98:	b510      	push	{r4, lr}
 8027c9a:	4604      	mov	r4, r0
 8027c9c:	4804      	ldr	r0, [pc, #16]	@ (8027cb0 <__cxa_atexit+0x18>)
 8027c9e:	4613      	mov	r3, r2
 8027ca0:	b120      	cbz	r0, 8027cac <__cxa_atexit+0x14>
 8027ca2:	460a      	mov	r2, r1
 8027ca4:	2002      	movs	r0, #2
 8027ca6:	4621      	mov	r1, r4
 8027ca8:	f000 f9fa 	bl	80280a0 <__register_exitproc>
 8027cac:	bd10      	pop	{r4, pc}
 8027cae:	bf00      	nop
 8027cb0:	080280a1 	.word	0x080280a1

08027cb4 <std>:
 8027cb4:	2300      	movs	r3, #0
 8027cb6:	b510      	push	{r4, lr}
 8027cb8:	4604      	mov	r4, r0
 8027cba:	e9c0 3300 	strd	r3, r3, [r0]
 8027cbe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8027cc2:	6083      	str	r3, [r0, #8]
 8027cc4:	8181      	strh	r1, [r0, #12]
 8027cc6:	6643      	str	r3, [r0, #100]	@ 0x64
 8027cc8:	81c2      	strh	r2, [r0, #14]
 8027cca:	6183      	str	r3, [r0, #24]
 8027ccc:	4619      	mov	r1, r3
 8027cce:	2208      	movs	r2, #8
 8027cd0:	305c      	adds	r0, #92	@ 0x5c
 8027cd2:	f000 f906 	bl	8027ee2 <memset>
 8027cd6:	4b0d      	ldr	r3, [pc, #52]	@ (8027d0c <std+0x58>)
 8027cd8:	6263      	str	r3, [r4, #36]	@ 0x24
 8027cda:	4b0d      	ldr	r3, [pc, #52]	@ (8027d10 <std+0x5c>)
 8027cdc:	62a3      	str	r3, [r4, #40]	@ 0x28
 8027cde:	4b0d      	ldr	r3, [pc, #52]	@ (8027d14 <std+0x60>)
 8027ce0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8027ce2:	4b0d      	ldr	r3, [pc, #52]	@ (8027d18 <std+0x64>)
 8027ce4:	6323      	str	r3, [r4, #48]	@ 0x30
 8027ce6:	4b0d      	ldr	r3, [pc, #52]	@ (8027d1c <std+0x68>)
 8027ce8:	6224      	str	r4, [r4, #32]
 8027cea:	429c      	cmp	r4, r3
 8027cec:	d006      	beq.n	8027cfc <std+0x48>
 8027cee:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8027cf2:	4294      	cmp	r4, r2
 8027cf4:	d002      	beq.n	8027cfc <std+0x48>
 8027cf6:	33d0      	adds	r3, #208	@ 0xd0
 8027cf8:	429c      	cmp	r4, r3
 8027cfa:	d105      	bne.n	8027d08 <std+0x54>
 8027cfc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8027d00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027d04:	f000 b9ba 	b.w	802807c <__retarget_lock_init_recursive>
 8027d08:	bd10      	pop	{r4, pc}
 8027d0a:	bf00      	nop
 8027d0c:	08027e5d 	.word	0x08027e5d
 8027d10:	08027e7f 	.word	0x08027e7f
 8027d14:	08027eb7 	.word	0x08027eb7
 8027d18:	08027edb 	.word	0x08027edb
 8027d1c:	200043e8 	.word	0x200043e8

08027d20 <stdio_exit_handler>:
 8027d20:	4a02      	ldr	r2, [pc, #8]	@ (8027d2c <stdio_exit_handler+0xc>)
 8027d22:	4903      	ldr	r1, [pc, #12]	@ (8027d30 <stdio_exit_handler+0x10>)
 8027d24:	4803      	ldr	r0, [pc, #12]	@ (8027d34 <stdio_exit_handler+0x14>)
 8027d26:	f000 b87b 	b.w	8027e20 <_fwalk_sglue>
 8027d2a:	bf00      	nop
 8027d2c:	20000220 	.word	0x20000220
 8027d30:	08028895 	.word	0x08028895
 8027d34:	20000230 	.word	0x20000230

08027d38 <cleanup_stdio>:
 8027d38:	6841      	ldr	r1, [r0, #4]
 8027d3a:	4b0c      	ldr	r3, [pc, #48]	@ (8027d6c <cleanup_stdio+0x34>)
 8027d3c:	4299      	cmp	r1, r3
 8027d3e:	b510      	push	{r4, lr}
 8027d40:	4604      	mov	r4, r0
 8027d42:	d001      	beq.n	8027d48 <cleanup_stdio+0x10>
 8027d44:	f000 fda6 	bl	8028894 <_fflush_r>
 8027d48:	68a1      	ldr	r1, [r4, #8]
 8027d4a:	4b09      	ldr	r3, [pc, #36]	@ (8027d70 <cleanup_stdio+0x38>)
 8027d4c:	4299      	cmp	r1, r3
 8027d4e:	d002      	beq.n	8027d56 <cleanup_stdio+0x1e>
 8027d50:	4620      	mov	r0, r4
 8027d52:	f000 fd9f 	bl	8028894 <_fflush_r>
 8027d56:	68e1      	ldr	r1, [r4, #12]
 8027d58:	4b06      	ldr	r3, [pc, #24]	@ (8027d74 <cleanup_stdio+0x3c>)
 8027d5a:	4299      	cmp	r1, r3
 8027d5c:	d004      	beq.n	8027d68 <cleanup_stdio+0x30>
 8027d5e:	4620      	mov	r0, r4
 8027d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027d64:	f000 bd96 	b.w	8028894 <_fflush_r>
 8027d68:	bd10      	pop	{r4, pc}
 8027d6a:	bf00      	nop
 8027d6c:	200043e8 	.word	0x200043e8
 8027d70:	20004450 	.word	0x20004450
 8027d74:	200044b8 	.word	0x200044b8

08027d78 <global_stdio_init.part.0>:
 8027d78:	b510      	push	{r4, lr}
 8027d7a:	4b0b      	ldr	r3, [pc, #44]	@ (8027da8 <global_stdio_init.part.0+0x30>)
 8027d7c:	4c0b      	ldr	r4, [pc, #44]	@ (8027dac <global_stdio_init.part.0+0x34>)
 8027d7e:	4a0c      	ldr	r2, [pc, #48]	@ (8027db0 <global_stdio_init.part.0+0x38>)
 8027d80:	601a      	str	r2, [r3, #0]
 8027d82:	4620      	mov	r0, r4
 8027d84:	2200      	movs	r2, #0
 8027d86:	2104      	movs	r1, #4
 8027d88:	f7ff ff94 	bl	8027cb4 <std>
 8027d8c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8027d90:	2201      	movs	r2, #1
 8027d92:	2109      	movs	r1, #9
 8027d94:	f7ff ff8e 	bl	8027cb4 <std>
 8027d98:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8027d9c:	2202      	movs	r2, #2
 8027d9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027da2:	2112      	movs	r1, #18
 8027da4:	f7ff bf86 	b.w	8027cb4 <std>
 8027da8:	20004520 	.word	0x20004520
 8027dac:	200043e8 	.word	0x200043e8
 8027db0:	08027d21 	.word	0x08027d21

08027db4 <__sfp_lock_acquire>:
 8027db4:	4801      	ldr	r0, [pc, #4]	@ (8027dbc <__sfp_lock_acquire+0x8>)
 8027db6:	f000 b962 	b.w	802807e <__retarget_lock_acquire_recursive>
 8027dba:	bf00      	nop
 8027dbc:	2000452a 	.word	0x2000452a

08027dc0 <__sfp_lock_release>:
 8027dc0:	4801      	ldr	r0, [pc, #4]	@ (8027dc8 <__sfp_lock_release+0x8>)
 8027dc2:	f000 b95d 	b.w	8028080 <__retarget_lock_release_recursive>
 8027dc6:	bf00      	nop
 8027dc8:	2000452a 	.word	0x2000452a

08027dcc <__sinit>:
 8027dcc:	b510      	push	{r4, lr}
 8027dce:	4604      	mov	r4, r0
 8027dd0:	f7ff fff0 	bl	8027db4 <__sfp_lock_acquire>
 8027dd4:	6a23      	ldr	r3, [r4, #32]
 8027dd6:	b11b      	cbz	r3, 8027de0 <__sinit+0x14>
 8027dd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027ddc:	f7ff bff0 	b.w	8027dc0 <__sfp_lock_release>
 8027de0:	4b04      	ldr	r3, [pc, #16]	@ (8027df4 <__sinit+0x28>)
 8027de2:	6223      	str	r3, [r4, #32]
 8027de4:	4b04      	ldr	r3, [pc, #16]	@ (8027df8 <__sinit+0x2c>)
 8027de6:	681b      	ldr	r3, [r3, #0]
 8027de8:	2b00      	cmp	r3, #0
 8027dea:	d1f5      	bne.n	8027dd8 <__sinit+0xc>
 8027dec:	f7ff ffc4 	bl	8027d78 <global_stdio_init.part.0>
 8027df0:	e7f2      	b.n	8027dd8 <__sinit+0xc>
 8027df2:	bf00      	nop
 8027df4:	08027d39 	.word	0x08027d39
 8027df8:	20004520 	.word	0x20004520

08027dfc <fiprintf>:
 8027dfc:	b40e      	push	{r1, r2, r3}
 8027dfe:	b503      	push	{r0, r1, lr}
 8027e00:	4601      	mov	r1, r0
 8027e02:	ab03      	add	r3, sp, #12
 8027e04:	4805      	ldr	r0, [pc, #20]	@ (8027e1c <fiprintf+0x20>)
 8027e06:	f853 2b04 	ldr.w	r2, [r3], #4
 8027e0a:	6800      	ldr	r0, [r0, #0]
 8027e0c:	9301      	str	r3, [sp, #4]
 8027e0e:	f000 fa17 	bl	8028240 <_vfiprintf_r>
 8027e12:	b002      	add	sp, #8
 8027e14:	f85d eb04 	ldr.w	lr, [sp], #4
 8027e18:	b003      	add	sp, #12
 8027e1a:	4770      	bx	lr
 8027e1c:	2000022c 	.word	0x2000022c

08027e20 <_fwalk_sglue>:
 8027e20:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027e24:	4607      	mov	r7, r0
 8027e26:	4688      	mov	r8, r1
 8027e28:	4614      	mov	r4, r2
 8027e2a:	2600      	movs	r6, #0
 8027e2c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027e30:	f1b9 0901 	subs.w	r9, r9, #1
 8027e34:	d505      	bpl.n	8027e42 <_fwalk_sglue+0x22>
 8027e36:	6824      	ldr	r4, [r4, #0]
 8027e38:	2c00      	cmp	r4, #0
 8027e3a:	d1f7      	bne.n	8027e2c <_fwalk_sglue+0xc>
 8027e3c:	4630      	mov	r0, r6
 8027e3e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027e42:	89ab      	ldrh	r3, [r5, #12]
 8027e44:	2b01      	cmp	r3, #1
 8027e46:	d907      	bls.n	8027e58 <_fwalk_sglue+0x38>
 8027e48:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027e4c:	3301      	adds	r3, #1
 8027e4e:	d003      	beq.n	8027e58 <_fwalk_sglue+0x38>
 8027e50:	4629      	mov	r1, r5
 8027e52:	4638      	mov	r0, r7
 8027e54:	47c0      	blx	r8
 8027e56:	4306      	orrs	r6, r0
 8027e58:	3568      	adds	r5, #104	@ 0x68
 8027e5a:	e7e9      	b.n	8027e30 <_fwalk_sglue+0x10>

08027e5c <__sread>:
 8027e5c:	b510      	push	{r4, lr}
 8027e5e:	460c      	mov	r4, r1
 8027e60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027e64:	f000 f898 	bl	8027f98 <_read_r>
 8027e68:	2800      	cmp	r0, #0
 8027e6a:	bfab      	itete	ge
 8027e6c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8027e6e:	89a3      	ldrhlt	r3, [r4, #12]
 8027e70:	181b      	addge	r3, r3, r0
 8027e72:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8027e76:	bfac      	ite	ge
 8027e78:	6563      	strge	r3, [r4, #84]	@ 0x54
 8027e7a:	81a3      	strhlt	r3, [r4, #12]
 8027e7c:	bd10      	pop	{r4, pc}

08027e7e <__swrite>:
 8027e7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027e82:	461f      	mov	r7, r3
 8027e84:	898b      	ldrh	r3, [r1, #12]
 8027e86:	05db      	lsls	r3, r3, #23
 8027e88:	4605      	mov	r5, r0
 8027e8a:	460c      	mov	r4, r1
 8027e8c:	4616      	mov	r6, r2
 8027e8e:	d505      	bpl.n	8027e9c <__swrite+0x1e>
 8027e90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027e94:	2302      	movs	r3, #2
 8027e96:	2200      	movs	r2, #0
 8027e98:	f000 f86c 	bl	8027f74 <_lseek_r>
 8027e9c:	89a3      	ldrh	r3, [r4, #12]
 8027e9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027ea2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8027ea6:	81a3      	strh	r3, [r4, #12]
 8027ea8:	4632      	mov	r2, r6
 8027eaa:	463b      	mov	r3, r7
 8027eac:	4628      	mov	r0, r5
 8027eae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027eb2:	f000 b8a7 	b.w	8028004 <_write_r>

08027eb6 <__sseek>:
 8027eb6:	b510      	push	{r4, lr}
 8027eb8:	460c      	mov	r4, r1
 8027eba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027ebe:	f000 f859 	bl	8027f74 <_lseek_r>
 8027ec2:	1c43      	adds	r3, r0, #1
 8027ec4:	89a3      	ldrh	r3, [r4, #12]
 8027ec6:	bf15      	itete	ne
 8027ec8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8027eca:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8027ece:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8027ed2:	81a3      	strheq	r3, [r4, #12]
 8027ed4:	bf18      	it	ne
 8027ed6:	81a3      	strhne	r3, [r4, #12]
 8027ed8:	bd10      	pop	{r4, pc}

08027eda <__sclose>:
 8027eda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027ede:	f000 b839 	b.w	8027f54 <_close_r>

08027ee2 <memset>:
 8027ee2:	4402      	add	r2, r0
 8027ee4:	4603      	mov	r3, r0
 8027ee6:	4293      	cmp	r3, r2
 8027ee8:	d100      	bne.n	8027eec <memset+0xa>
 8027eea:	4770      	bx	lr
 8027eec:	f803 1b01 	strb.w	r1, [r3], #1
 8027ef0:	e7f9      	b.n	8027ee6 <memset+0x4>

08027ef2 <_raise_r>:
 8027ef2:	291f      	cmp	r1, #31
 8027ef4:	b538      	push	{r3, r4, r5, lr}
 8027ef6:	4605      	mov	r5, r0
 8027ef8:	460c      	mov	r4, r1
 8027efa:	d904      	bls.n	8027f06 <_raise_r+0x14>
 8027efc:	2316      	movs	r3, #22
 8027efe:	6003      	str	r3, [r0, #0]
 8027f00:	f04f 30ff 	mov.w	r0, #4294967295
 8027f04:	bd38      	pop	{r3, r4, r5, pc}
 8027f06:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8027f08:	b112      	cbz	r2, 8027f10 <_raise_r+0x1e>
 8027f0a:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8027f0e:	b94b      	cbnz	r3, 8027f24 <_raise_r+0x32>
 8027f10:	4628      	mov	r0, r5
 8027f12:	f000 f865 	bl	8027fe0 <_getpid_r>
 8027f16:	4622      	mov	r2, r4
 8027f18:	4601      	mov	r1, r0
 8027f1a:	4628      	mov	r0, r5
 8027f1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8027f20:	f000 b84c 	b.w	8027fbc <_kill_r>
 8027f24:	2b01      	cmp	r3, #1
 8027f26:	d00a      	beq.n	8027f3e <_raise_r+0x4c>
 8027f28:	1c59      	adds	r1, r3, #1
 8027f2a:	d103      	bne.n	8027f34 <_raise_r+0x42>
 8027f2c:	2316      	movs	r3, #22
 8027f2e:	6003      	str	r3, [r0, #0]
 8027f30:	2001      	movs	r0, #1
 8027f32:	e7e7      	b.n	8027f04 <_raise_r+0x12>
 8027f34:	2100      	movs	r1, #0
 8027f36:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8027f3a:	4620      	mov	r0, r4
 8027f3c:	4798      	blx	r3
 8027f3e:	2000      	movs	r0, #0
 8027f40:	e7e0      	b.n	8027f04 <_raise_r+0x12>
	...

08027f44 <raise>:
 8027f44:	4b02      	ldr	r3, [pc, #8]	@ (8027f50 <raise+0xc>)
 8027f46:	4601      	mov	r1, r0
 8027f48:	6818      	ldr	r0, [r3, #0]
 8027f4a:	f7ff bfd2 	b.w	8027ef2 <_raise_r>
 8027f4e:	bf00      	nop
 8027f50:	2000022c 	.word	0x2000022c

08027f54 <_close_r>:
 8027f54:	b538      	push	{r3, r4, r5, lr}
 8027f56:	4d06      	ldr	r5, [pc, #24]	@ (8027f70 <_close_r+0x1c>)
 8027f58:	2300      	movs	r3, #0
 8027f5a:	4604      	mov	r4, r0
 8027f5c:	4608      	mov	r0, r1
 8027f5e:	602b      	str	r3, [r5, #0]
 8027f60:	f7d9 fc08 	bl	8001774 <_close>
 8027f64:	1c43      	adds	r3, r0, #1
 8027f66:	d102      	bne.n	8027f6e <_close_r+0x1a>
 8027f68:	682b      	ldr	r3, [r5, #0]
 8027f6a:	b103      	cbz	r3, 8027f6e <_close_r+0x1a>
 8027f6c:	6023      	str	r3, [r4, #0]
 8027f6e:	bd38      	pop	{r3, r4, r5, pc}
 8027f70:	20004524 	.word	0x20004524

08027f74 <_lseek_r>:
 8027f74:	b538      	push	{r3, r4, r5, lr}
 8027f76:	4d07      	ldr	r5, [pc, #28]	@ (8027f94 <_lseek_r+0x20>)
 8027f78:	4604      	mov	r4, r0
 8027f7a:	4608      	mov	r0, r1
 8027f7c:	4611      	mov	r1, r2
 8027f7e:	2200      	movs	r2, #0
 8027f80:	602a      	str	r2, [r5, #0]
 8027f82:	461a      	mov	r2, r3
 8027f84:	f7d9 fc1d 	bl	80017c2 <_lseek>
 8027f88:	1c43      	adds	r3, r0, #1
 8027f8a:	d102      	bne.n	8027f92 <_lseek_r+0x1e>
 8027f8c:	682b      	ldr	r3, [r5, #0]
 8027f8e:	b103      	cbz	r3, 8027f92 <_lseek_r+0x1e>
 8027f90:	6023      	str	r3, [r4, #0]
 8027f92:	bd38      	pop	{r3, r4, r5, pc}
 8027f94:	20004524 	.word	0x20004524

08027f98 <_read_r>:
 8027f98:	b538      	push	{r3, r4, r5, lr}
 8027f9a:	4d07      	ldr	r5, [pc, #28]	@ (8027fb8 <_read_r+0x20>)
 8027f9c:	4604      	mov	r4, r0
 8027f9e:	4608      	mov	r0, r1
 8027fa0:	4611      	mov	r1, r2
 8027fa2:	2200      	movs	r2, #0
 8027fa4:	602a      	str	r2, [r5, #0]
 8027fa6:	461a      	mov	r2, r3
 8027fa8:	f7d9 fbab 	bl	8001702 <_read>
 8027fac:	1c43      	adds	r3, r0, #1
 8027fae:	d102      	bne.n	8027fb6 <_read_r+0x1e>
 8027fb0:	682b      	ldr	r3, [r5, #0]
 8027fb2:	b103      	cbz	r3, 8027fb6 <_read_r+0x1e>
 8027fb4:	6023      	str	r3, [r4, #0]
 8027fb6:	bd38      	pop	{r3, r4, r5, pc}
 8027fb8:	20004524 	.word	0x20004524

08027fbc <_kill_r>:
 8027fbc:	b538      	push	{r3, r4, r5, lr}
 8027fbe:	4d07      	ldr	r5, [pc, #28]	@ (8027fdc <_kill_r+0x20>)
 8027fc0:	2300      	movs	r3, #0
 8027fc2:	4604      	mov	r4, r0
 8027fc4:	4608      	mov	r0, r1
 8027fc6:	4611      	mov	r1, r2
 8027fc8:	602b      	str	r3, [r5, #0]
 8027fca:	f7d9 fb7f 	bl	80016cc <_kill>
 8027fce:	1c43      	adds	r3, r0, #1
 8027fd0:	d102      	bne.n	8027fd8 <_kill_r+0x1c>
 8027fd2:	682b      	ldr	r3, [r5, #0]
 8027fd4:	b103      	cbz	r3, 8027fd8 <_kill_r+0x1c>
 8027fd6:	6023      	str	r3, [r4, #0]
 8027fd8:	bd38      	pop	{r3, r4, r5, pc}
 8027fda:	bf00      	nop
 8027fdc:	20004524 	.word	0x20004524

08027fe0 <_getpid_r>:
 8027fe0:	f7d9 bb6c 	b.w	80016bc <_getpid>

08027fe4 <_sbrk_r>:
 8027fe4:	b538      	push	{r3, r4, r5, lr}
 8027fe6:	4d06      	ldr	r5, [pc, #24]	@ (8028000 <_sbrk_r+0x1c>)
 8027fe8:	2300      	movs	r3, #0
 8027fea:	4604      	mov	r4, r0
 8027fec:	4608      	mov	r0, r1
 8027fee:	602b      	str	r3, [r5, #0]
 8027ff0:	f7d9 fbf4 	bl	80017dc <_sbrk>
 8027ff4:	1c43      	adds	r3, r0, #1
 8027ff6:	d102      	bne.n	8027ffe <_sbrk_r+0x1a>
 8027ff8:	682b      	ldr	r3, [r5, #0]
 8027ffa:	b103      	cbz	r3, 8027ffe <_sbrk_r+0x1a>
 8027ffc:	6023      	str	r3, [r4, #0]
 8027ffe:	bd38      	pop	{r3, r4, r5, pc}
 8028000:	20004524 	.word	0x20004524

08028004 <_write_r>:
 8028004:	b538      	push	{r3, r4, r5, lr}
 8028006:	4d07      	ldr	r5, [pc, #28]	@ (8028024 <_write_r+0x20>)
 8028008:	4604      	mov	r4, r0
 802800a:	4608      	mov	r0, r1
 802800c:	4611      	mov	r1, r2
 802800e:	2200      	movs	r2, #0
 8028010:	602a      	str	r2, [r5, #0]
 8028012:	461a      	mov	r2, r3
 8028014:	f7d9 fb92 	bl	800173c <_write>
 8028018:	1c43      	adds	r3, r0, #1
 802801a:	d102      	bne.n	8028022 <_write_r+0x1e>
 802801c:	682b      	ldr	r3, [r5, #0]
 802801e:	b103      	cbz	r3, 8028022 <_write_r+0x1e>
 8028020:	6023      	str	r3, [r4, #0]
 8028022:	bd38      	pop	{r3, r4, r5, pc}
 8028024:	20004524 	.word	0x20004524

08028028 <__errno>:
 8028028:	4b01      	ldr	r3, [pc, #4]	@ (8028030 <__errno+0x8>)
 802802a:	6818      	ldr	r0, [r3, #0]
 802802c:	4770      	bx	lr
 802802e:	bf00      	nop
 8028030:	2000022c 	.word	0x2000022c

08028034 <__libc_init_array>:
 8028034:	b570      	push	{r4, r5, r6, lr}
 8028036:	4d0d      	ldr	r5, [pc, #52]	@ (802806c <__libc_init_array+0x38>)
 8028038:	4c0d      	ldr	r4, [pc, #52]	@ (8028070 <__libc_init_array+0x3c>)
 802803a:	1b64      	subs	r4, r4, r5
 802803c:	10a4      	asrs	r4, r4, #2
 802803e:	2600      	movs	r6, #0
 8028040:	42a6      	cmp	r6, r4
 8028042:	d109      	bne.n	8028058 <__libc_init_array+0x24>
 8028044:	4d0b      	ldr	r5, [pc, #44]	@ (8028074 <__libc_init_array+0x40>)
 8028046:	4c0c      	ldr	r4, [pc, #48]	@ (8028078 <__libc_init_array+0x44>)
 8028048:	f000 fd64 	bl	8028b14 <_init>
 802804c:	1b64      	subs	r4, r4, r5
 802804e:	10a4      	asrs	r4, r4, #2
 8028050:	2600      	movs	r6, #0
 8028052:	42a6      	cmp	r6, r4
 8028054:	d105      	bne.n	8028062 <__libc_init_array+0x2e>
 8028056:	bd70      	pop	{r4, r5, r6, pc}
 8028058:	f855 3b04 	ldr.w	r3, [r5], #4
 802805c:	4798      	blx	r3
 802805e:	3601      	adds	r6, #1
 8028060:	e7ee      	b.n	8028040 <__libc_init_array+0xc>
 8028062:	f855 3b04 	ldr.w	r3, [r5], #4
 8028066:	4798      	blx	r3
 8028068:	3601      	adds	r6, #1
 802806a:	e7f2      	b.n	8028052 <__libc_init_array+0x1e>
 802806c:	0802b37c 	.word	0x0802b37c
 8028070:	0802b37c 	.word	0x0802b37c
 8028074:	0802b37c 	.word	0x0802b37c
 8028078:	0802b390 	.word	0x0802b390

0802807c <__retarget_lock_init_recursive>:
 802807c:	4770      	bx	lr

0802807e <__retarget_lock_acquire_recursive>:
 802807e:	4770      	bx	lr

08028080 <__retarget_lock_release_recursive>:
 8028080:	4770      	bx	lr

08028082 <memcpy>:
 8028082:	440a      	add	r2, r1
 8028084:	4291      	cmp	r1, r2
 8028086:	f100 33ff 	add.w	r3, r0, #4294967295
 802808a:	d100      	bne.n	802808e <memcpy+0xc>
 802808c:	4770      	bx	lr
 802808e:	b510      	push	{r4, lr}
 8028090:	f811 4b01 	ldrb.w	r4, [r1], #1
 8028094:	f803 4f01 	strb.w	r4, [r3, #1]!
 8028098:	4291      	cmp	r1, r2
 802809a:	d1f9      	bne.n	8028090 <memcpy+0xe>
 802809c:	bd10      	pop	{r4, pc}
	...

080280a0 <__register_exitproc>:
 80280a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80280a4:	4d27      	ldr	r5, [pc, #156]	@ (8028144 <__register_exitproc+0xa4>)
 80280a6:	4607      	mov	r7, r0
 80280a8:	6828      	ldr	r0, [r5, #0]
 80280aa:	4691      	mov	r9, r2
 80280ac:	460e      	mov	r6, r1
 80280ae:	4698      	mov	r8, r3
 80280b0:	f7ff ffe5 	bl	802807e <__retarget_lock_acquire_recursive>
 80280b4:	4a24      	ldr	r2, [pc, #144]	@ (8028148 <__register_exitproc+0xa8>)
 80280b6:	6814      	ldr	r4, [r2, #0]
 80280b8:	b93c      	cbnz	r4, 80280ca <__register_exitproc+0x2a>
 80280ba:	4b24      	ldr	r3, [pc, #144]	@ (802814c <__register_exitproc+0xac>)
 80280bc:	6013      	str	r3, [r2, #0]
 80280be:	4a24      	ldr	r2, [pc, #144]	@ (8028150 <__register_exitproc+0xb0>)
 80280c0:	b112      	cbz	r2, 80280c8 <__register_exitproc+0x28>
 80280c2:	6812      	ldr	r2, [r2, #0]
 80280c4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80280c8:	4c20      	ldr	r4, [pc, #128]	@ (802814c <__register_exitproc+0xac>)
 80280ca:	6863      	ldr	r3, [r4, #4]
 80280cc:	2b1f      	cmp	r3, #31
 80280ce:	dd06      	ble.n	80280de <__register_exitproc+0x3e>
 80280d0:	6828      	ldr	r0, [r5, #0]
 80280d2:	f7ff ffd5 	bl	8028080 <__retarget_lock_release_recursive>
 80280d6:	f04f 30ff 	mov.w	r0, #4294967295
 80280da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80280de:	b32f      	cbz	r7, 802812c <__register_exitproc+0x8c>
 80280e0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 80280e4:	b968      	cbnz	r0, 8028102 <__register_exitproc+0x62>
 80280e6:	4b1b      	ldr	r3, [pc, #108]	@ (8028154 <__register_exitproc+0xb4>)
 80280e8:	2b00      	cmp	r3, #0
 80280ea:	d0f1      	beq.n	80280d0 <__register_exitproc+0x30>
 80280ec:	f44f 7084 	mov.w	r0, #264	@ 0x108
 80280f0:	f7ff fd14 	bl	8027b1c <malloc>
 80280f4:	2800      	cmp	r0, #0
 80280f6:	d0eb      	beq.n	80280d0 <__register_exitproc+0x30>
 80280f8:	2300      	movs	r3, #0
 80280fa:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 80280fe:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8028102:	6863      	ldr	r3, [r4, #4]
 8028104:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8028108:	2201      	movs	r2, #1
 802810a:	409a      	lsls	r2, r3
 802810c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8028110:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8028114:	4313      	orrs	r3, r2
 8028116:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802811a:	2f02      	cmp	r7, #2
 802811c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8028120:	bf02      	ittt	eq
 8028122:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8028126:	4313      	orreq	r3, r2
 8028128:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802812c:	6863      	ldr	r3, [r4, #4]
 802812e:	6828      	ldr	r0, [r5, #0]
 8028130:	1c5a      	adds	r2, r3, #1
 8028132:	3302      	adds	r3, #2
 8028134:	6062      	str	r2, [r4, #4]
 8028136:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802813a:	f7ff ffa1 	bl	8028080 <__retarget_lock_release_recursive>
 802813e:	2000      	movs	r0, #0
 8028140:	e7cb      	b.n	80280da <__register_exitproc+0x3a>
 8028142:	bf00      	nop
 8028144:	2000027c 	.word	0x2000027c
 8028148:	200045b8 	.word	0x200045b8
 802814c:	2000452c 	.word	0x2000452c
 8028150:	0802b16c 	.word	0x0802b16c
 8028154:	08027b1d 	.word	0x08027b1d

08028158 <_free_r>:
 8028158:	b538      	push	{r3, r4, r5, lr}
 802815a:	4605      	mov	r5, r0
 802815c:	2900      	cmp	r1, #0
 802815e:	d041      	beq.n	80281e4 <_free_r+0x8c>
 8028160:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8028164:	1f0c      	subs	r4, r1, #4
 8028166:	2b00      	cmp	r3, #0
 8028168:	bfb8      	it	lt
 802816a:	18e4      	addlt	r4, r4, r3
 802816c:	f7ff fd88 	bl	8027c80 <__malloc_lock>
 8028170:	4a1d      	ldr	r2, [pc, #116]	@ (80281e8 <_free_r+0x90>)
 8028172:	6813      	ldr	r3, [r2, #0]
 8028174:	b933      	cbnz	r3, 8028184 <_free_r+0x2c>
 8028176:	6063      	str	r3, [r4, #4]
 8028178:	6014      	str	r4, [r2, #0]
 802817a:	4628      	mov	r0, r5
 802817c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8028180:	f7ff bd84 	b.w	8027c8c <__malloc_unlock>
 8028184:	42a3      	cmp	r3, r4
 8028186:	d908      	bls.n	802819a <_free_r+0x42>
 8028188:	6820      	ldr	r0, [r4, #0]
 802818a:	1821      	adds	r1, r4, r0
 802818c:	428b      	cmp	r3, r1
 802818e:	bf01      	itttt	eq
 8028190:	6819      	ldreq	r1, [r3, #0]
 8028192:	685b      	ldreq	r3, [r3, #4]
 8028194:	1809      	addeq	r1, r1, r0
 8028196:	6021      	streq	r1, [r4, #0]
 8028198:	e7ed      	b.n	8028176 <_free_r+0x1e>
 802819a:	461a      	mov	r2, r3
 802819c:	685b      	ldr	r3, [r3, #4]
 802819e:	b10b      	cbz	r3, 80281a4 <_free_r+0x4c>
 80281a0:	42a3      	cmp	r3, r4
 80281a2:	d9fa      	bls.n	802819a <_free_r+0x42>
 80281a4:	6811      	ldr	r1, [r2, #0]
 80281a6:	1850      	adds	r0, r2, r1
 80281a8:	42a0      	cmp	r0, r4
 80281aa:	d10b      	bne.n	80281c4 <_free_r+0x6c>
 80281ac:	6820      	ldr	r0, [r4, #0]
 80281ae:	4401      	add	r1, r0
 80281b0:	1850      	adds	r0, r2, r1
 80281b2:	4283      	cmp	r3, r0
 80281b4:	6011      	str	r1, [r2, #0]
 80281b6:	d1e0      	bne.n	802817a <_free_r+0x22>
 80281b8:	6818      	ldr	r0, [r3, #0]
 80281ba:	685b      	ldr	r3, [r3, #4]
 80281bc:	6053      	str	r3, [r2, #4]
 80281be:	4408      	add	r0, r1
 80281c0:	6010      	str	r0, [r2, #0]
 80281c2:	e7da      	b.n	802817a <_free_r+0x22>
 80281c4:	d902      	bls.n	80281cc <_free_r+0x74>
 80281c6:	230c      	movs	r3, #12
 80281c8:	602b      	str	r3, [r5, #0]
 80281ca:	e7d6      	b.n	802817a <_free_r+0x22>
 80281cc:	6820      	ldr	r0, [r4, #0]
 80281ce:	1821      	adds	r1, r4, r0
 80281d0:	428b      	cmp	r3, r1
 80281d2:	bf04      	itt	eq
 80281d4:	6819      	ldreq	r1, [r3, #0]
 80281d6:	685b      	ldreq	r3, [r3, #4]
 80281d8:	6063      	str	r3, [r4, #4]
 80281da:	bf04      	itt	eq
 80281dc:	1809      	addeq	r1, r1, r0
 80281de:	6021      	streq	r1, [r4, #0]
 80281e0:	6054      	str	r4, [r2, #4]
 80281e2:	e7ca      	b.n	802817a <_free_r+0x22>
 80281e4:	bd38      	pop	{r3, r4, r5, pc}
 80281e6:	bf00      	nop
 80281e8:	200043e4 	.word	0x200043e4

080281ec <__sfputc_r>:
 80281ec:	6893      	ldr	r3, [r2, #8]
 80281ee:	3b01      	subs	r3, #1
 80281f0:	2b00      	cmp	r3, #0
 80281f2:	b410      	push	{r4}
 80281f4:	6093      	str	r3, [r2, #8]
 80281f6:	da08      	bge.n	802820a <__sfputc_r+0x1e>
 80281f8:	6994      	ldr	r4, [r2, #24]
 80281fa:	42a3      	cmp	r3, r4
 80281fc:	db01      	blt.n	8028202 <__sfputc_r+0x16>
 80281fe:	290a      	cmp	r1, #10
 8028200:	d103      	bne.n	802820a <__sfputc_r+0x1e>
 8028202:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028206:	f000 bb6d 	b.w	80288e4 <__swbuf_r>
 802820a:	6813      	ldr	r3, [r2, #0]
 802820c:	1c58      	adds	r0, r3, #1
 802820e:	6010      	str	r0, [r2, #0]
 8028210:	7019      	strb	r1, [r3, #0]
 8028212:	4608      	mov	r0, r1
 8028214:	f85d 4b04 	ldr.w	r4, [sp], #4
 8028218:	4770      	bx	lr

0802821a <__sfputs_r>:
 802821a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802821c:	4606      	mov	r6, r0
 802821e:	460f      	mov	r7, r1
 8028220:	4614      	mov	r4, r2
 8028222:	18d5      	adds	r5, r2, r3
 8028224:	42ac      	cmp	r4, r5
 8028226:	d101      	bne.n	802822c <__sfputs_r+0x12>
 8028228:	2000      	movs	r0, #0
 802822a:	e007      	b.n	802823c <__sfputs_r+0x22>
 802822c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8028230:	463a      	mov	r2, r7
 8028232:	4630      	mov	r0, r6
 8028234:	f7ff ffda 	bl	80281ec <__sfputc_r>
 8028238:	1c43      	adds	r3, r0, #1
 802823a:	d1f3      	bne.n	8028224 <__sfputs_r+0xa>
 802823c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08028240 <_vfiprintf_r>:
 8028240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028244:	460d      	mov	r5, r1
 8028246:	b09d      	sub	sp, #116	@ 0x74
 8028248:	4614      	mov	r4, r2
 802824a:	4698      	mov	r8, r3
 802824c:	4606      	mov	r6, r0
 802824e:	b118      	cbz	r0, 8028258 <_vfiprintf_r+0x18>
 8028250:	6a03      	ldr	r3, [r0, #32]
 8028252:	b90b      	cbnz	r3, 8028258 <_vfiprintf_r+0x18>
 8028254:	f7ff fdba 	bl	8027dcc <__sinit>
 8028258:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802825a:	07d9      	lsls	r1, r3, #31
 802825c:	d405      	bmi.n	802826a <_vfiprintf_r+0x2a>
 802825e:	89ab      	ldrh	r3, [r5, #12]
 8028260:	059a      	lsls	r2, r3, #22
 8028262:	d402      	bmi.n	802826a <_vfiprintf_r+0x2a>
 8028264:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028266:	f7ff ff0a 	bl	802807e <__retarget_lock_acquire_recursive>
 802826a:	89ab      	ldrh	r3, [r5, #12]
 802826c:	071b      	lsls	r3, r3, #28
 802826e:	d501      	bpl.n	8028274 <_vfiprintf_r+0x34>
 8028270:	692b      	ldr	r3, [r5, #16]
 8028272:	b99b      	cbnz	r3, 802829c <_vfiprintf_r+0x5c>
 8028274:	4629      	mov	r1, r5
 8028276:	4630      	mov	r0, r6
 8028278:	f000 fb72 	bl	8028960 <__swsetup_r>
 802827c:	b170      	cbz	r0, 802829c <_vfiprintf_r+0x5c>
 802827e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8028280:	07dc      	lsls	r4, r3, #31
 8028282:	d504      	bpl.n	802828e <_vfiprintf_r+0x4e>
 8028284:	f04f 30ff 	mov.w	r0, #4294967295
 8028288:	b01d      	add	sp, #116	@ 0x74
 802828a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802828e:	89ab      	ldrh	r3, [r5, #12]
 8028290:	0598      	lsls	r0, r3, #22
 8028292:	d4f7      	bmi.n	8028284 <_vfiprintf_r+0x44>
 8028294:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8028296:	f7ff fef3 	bl	8028080 <__retarget_lock_release_recursive>
 802829a:	e7f3      	b.n	8028284 <_vfiprintf_r+0x44>
 802829c:	2300      	movs	r3, #0
 802829e:	9309      	str	r3, [sp, #36]	@ 0x24
 80282a0:	2320      	movs	r3, #32
 80282a2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80282a6:	f8cd 800c 	str.w	r8, [sp, #12]
 80282aa:	2330      	movs	r3, #48	@ 0x30
 80282ac:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 802845c <_vfiprintf_r+0x21c>
 80282b0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80282b4:	f04f 0901 	mov.w	r9, #1
 80282b8:	4623      	mov	r3, r4
 80282ba:	469a      	mov	sl, r3
 80282bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80282c0:	b10a      	cbz	r2, 80282c6 <_vfiprintf_r+0x86>
 80282c2:	2a25      	cmp	r2, #37	@ 0x25
 80282c4:	d1f9      	bne.n	80282ba <_vfiprintf_r+0x7a>
 80282c6:	ebba 0b04 	subs.w	fp, sl, r4
 80282ca:	d00b      	beq.n	80282e4 <_vfiprintf_r+0xa4>
 80282cc:	465b      	mov	r3, fp
 80282ce:	4622      	mov	r2, r4
 80282d0:	4629      	mov	r1, r5
 80282d2:	4630      	mov	r0, r6
 80282d4:	f7ff ffa1 	bl	802821a <__sfputs_r>
 80282d8:	3001      	adds	r0, #1
 80282da:	f000 80a7 	beq.w	802842c <_vfiprintf_r+0x1ec>
 80282de:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80282e0:	445a      	add	r2, fp
 80282e2:	9209      	str	r2, [sp, #36]	@ 0x24
 80282e4:	f89a 3000 	ldrb.w	r3, [sl]
 80282e8:	2b00      	cmp	r3, #0
 80282ea:	f000 809f 	beq.w	802842c <_vfiprintf_r+0x1ec>
 80282ee:	2300      	movs	r3, #0
 80282f0:	f04f 32ff 	mov.w	r2, #4294967295
 80282f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80282f8:	f10a 0a01 	add.w	sl, sl, #1
 80282fc:	9304      	str	r3, [sp, #16]
 80282fe:	9307      	str	r3, [sp, #28]
 8028300:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8028304:	931a      	str	r3, [sp, #104]	@ 0x68
 8028306:	4654      	mov	r4, sl
 8028308:	2205      	movs	r2, #5
 802830a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802830e:	4853      	ldr	r0, [pc, #332]	@ (802845c <_vfiprintf_r+0x21c>)
 8028310:	f7d7 ff7e 	bl	8000210 <memchr>
 8028314:	9a04      	ldr	r2, [sp, #16]
 8028316:	b9d8      	cbnz	r0, 8028350 <_vfiprintf_r+0x110>
 8028318:	06d1      	lsls	r1, r2, #27
 802831a:	bf44      	itt	mi
 802831c:	2320      	movmi	r3, #32
 802831e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8028322:	0713      	lsls	r3, r2, #28
 8028324:	bf44      	itt	mi
 8028326:	232b      	movmi	r3, #43	@ 0x2b
 8028328:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802832c:	f89a 3000 	ldrb.w	r3, [sl]
 8028330:	2b2a      	cmp	r3, #42	@ 0x2a
 8028332:	d015      	beq.n	8028360 <_vfiprintf_r+0x120>
 8028334:	9a07      	ldr	r2, [sp, #28]
 8028336:	4654      	mov	r4, sl
 8028338:	2000      	movs	r0, #0
 802833a:	f04f 0c0a 	mov.w	ip, #10
 802833e:	4621      	mov	r1, r4
 8028340:	f811 3b01 	ldrb.w	r3, [r1], #1
 8028344:	3b30      	subs	r3, #48	@ 0x30
 8028346:	2b09      	cmp	r3, #9
 8028348:	d94b      	bls.n	80283e2 <_vfiprintf_r+0x1a2>
 802834a:	b1b0      	cbz	r0, 802837a <_vfiprintf_r+0x13a>
 802834c:	9207      	str	r2, [sp, #28]
 802834e:	e014      	b.n	802837a <_vfiprintf_r+0x13a>
 8028350:	eba0 0308 	sub.w	r3, r0, r8
 8028354:	fa09 f303 	lsl.w	r3, r9, r3
 8028358:	4313      	orrs	r3, r2
 802835a:	9304      	str	r3, [sp, #16]
 802835c:	46a2      	mov	sl, r4
 802835e:	e7d2      	b.n	8028306 <_vfiprintf_r+0xc6>
 8028360:	9b03      	ldr	r3, [sp, #12]
 8028362:	1d19      	adds	r1, r3, #4
 8028364:	681b      	ldr	r3, [r3, #0]
 8028366:	9103      	str	r1, [sp, #12]
 8028368:	2b00      	cmp	r3, #0
 802836a:	bfbb      	ittet	lt
 802836c:	425b      	neglt	r3, r3
 802836e:	f042 0202 	orrlt.w	r2, r2, #2
 8028372:	9307      	strge	r3, [sp, #28]
 8028374:	9307      	strlt	r3, [sp, #28]
 8028376:	bfb8      	it	lt
 8028378:	9204      	strlt	r2, [sp, #16]
 802837a:	7823      	ldrb	r3, [r4, #0]
 802837c:	2b2e      	cmp	r3, #46	@ 0x2e
 802837e:	d10a      	bne.n	8028396 <_vfiprintf_r+0x156>
 8028380:	7863      	ldrb	r3, [r4, #1]
 8028382:	2b2a      	cmp	r3, #42	@ 0x2a
 8028384:	d132      	bne.n	80283ec <_vfiprintf_r+0x1ac>
 8028386:	9b03      	ldr	r3, [sp, #12]
 8028388:	1d1a      	adds	r2, r3, #4
 802838a:	681b      	ldr	r3, [r3, #0]
 802838c:	9203      	str	r2, [sp, #12]
 802838e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8028392:	3402      	adds	r4, #2
 8028394:	9305      	str	r3, [sp, #20]
 8028396:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 802846c <_vfiprintf_r+0x22c>
 802839a:	7821      	ldrb	r1, [r4, #0]
 802839c:	2203      	movs	r2, #3
 802839e:	4650      	mov	r0, sl
 80283a0:	f7d7 ff36 	bl	8000210 <memchr>
 80283a4:	b138      	cbz	r0, 80283b6 <_vfiprintf_r+0x176>
 80283a6:	9b04      	ldr	r3, [sp, #16]
 80283a8:	eba0 000a 	sub.w	r0, r0, sl
 80283ac:	2240      	movs	r2, #64	@ 0x40
 80283ae:	4082      	lsls	r2, r0
 80283b0:	4313      	orrs	r3, r2
 80283b2:	3401      	adds	r4, #1
 80283b4:	9304      	str	r3, [sp, #16]
 80283b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80283ba:	4829      	ldr	r0, [pc, #164]	@ (8028460 <_vfiprintf_r+0x220>)
 80283bc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80283c0:	2206      	movs	r2, #6
 80283c2:	f7d7 ff25 	bl	8000210 <memchr>
 80283c6:	2800      	cmp	r0, #0
 80283c8:	d03f      	beq.n	802844a <_vfiprintf_r+0x20a>
 80283ca:	4b26      	ldr	r3, [pc, #152]	@ (8028464 <_vfiprintf_r+0x224>)
 80283cc:	bb1b      	cbnz	r3, 8028416 <_vfiprintf_r+0x1d6>
 80283ce:	9b03      	ldr	r3, [sp, #12]
 80283d0:	3307      	adds	r3, #7
 80283d2:	f023 0307 	bic.w	r3, r3, #7
 80283d6:	3308      	adds	r3, #8
 80283d8:	9303      	str	r3, [sp, #12]
 80283da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80283dc:	443b      	add	r3, r7
 80283de:	9309      	str	r3, [sp, #36]	@ 0x24
 80283e0:	e76a      	b.n	80282b8 <_vfiprintf_r+0x78>
 80283e2:	fb0c 3202 	mla	r2, ip, r2, r3
 80283e6:	460c      	mov	r4, r1
 80283e8:	2001      	movs	r0, #1
 80283ea:	e7a8      	b.n	802833e <_vfiprintf_r+0xfe>
 80283ec:	2300      	movs	r3, #0
 80283ee:	3401      	adds	r4, #1
 80283f0:	9305      	str	r3, [sp, #20]
 80283f2:	4619      	mov	r1, r3
 80283f4:	f04f 0c0a 	mov.w	ip, #10
 80283f8:	4620      	mov	r0, r4
 80283fa:	f810 2b01 	ldrb.w	r2, [r0], #1
 80283fe:	3a30      	subs	r2, #48	@ 0x30
 8028400:	2a09      	cmp	r2, #9
 8028402:	d903      	bls.n	802840c <_vfiprintf_r+0x1cc>
 8028404:	2b00      	cmp	r3, #0
 8028406:	d0c6      	beq.n	8028396 <_vfiprintf_r+0x156>
 8028408:	9105      	str	r1, [sp, #20]
 802840a:	e7c4      	b.n	8028396 <_vfiprintf_r+0x156>
 802840c:	fb0c 2101 	mla	r1, ip, r1, r2
 8028410:	4604      	mov	r4, r0
 8028412:	2301      	movs	r3, #1
 8028414:	e7f0      	b.n	80283f8 <_vfiprintf_r+0x1b8>
 8028416:	ab03      	add	r3, sp, #12
 8028418:	9300      	str	r3, [sp, #0]
 802841a:	462a      	mov	r2, r5
 802841c:	4b12      	ldr	r3, [pc, #72]	@ (8028468 <_vfiprintf_r+0x228>)
 802841e:	a904      	add	r1, sp, #16
 8028420:	4630      	mov	r0, r6
 8028422:	f3af 8000 	nop.w
 8028426:	4607      	mov	r7, r0
 8028428:	1c78      	adds	r0, r7, #1
 802842a:	d1d6      	bne.n	80283da <_vfiprintf_r+0x19a>
 802842c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802842e:	07d9      	lsls	r1, r3, #31
 8028430:	d405      	bmi.n	802843e <_vfiprintf_r+0x1fe>
 8028432:	89ab      	ldrh	r3, [r5, #12]
 8028434:	059a      	lsls	r2, r3, #22
 8028436:	d402      	bmi.n	802843e <_vfiprintf_r+0x1fe>
 8028438:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802843a:	f7ff fe21 	bl	8028080 <__retarget_lock_release_recursive>
 802843e:	89ab      	ldrh	r3, [r5, #12]
 8028440:	065b      	lsls	r3, r3, #25
 8028442:	f53f af1f 	bmi.w	8028284 <_vfiprintf_r+0x44>
 8028446:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8028448:	e71e      	b.n	8028288 <_vfiprintf_r+0x48>
 802844a:	ab03      	add	r3, sp, #12
 802844c:	9300      	str	r3, [sp, #0]
 802844e:	462a      	mov	r2, r5
 8028450:	4b05      	ldr	r3, [pc, #20]	@ (8028468 <_vfiprintf_r+0x228>)
 8028452:	a904      	add	r1, sp, #16
 8028454:	4630      	mov	r0, r6
 8028456:	f000 f879 	bl	802854c <_printf_i>
 802845a:	e7e4      	b.n	8028426 <_vfiprintf_r+0x1e6>
 802845c:	0802b170 	.word	0x0802b170
 8028460:	0802b17a 	.word	0x0802b17a
 8028464:	00000000 	.word	0x00000000
 8028468:	0802821b 	.word	0x0802821b
 802846c:	0802b176 	.word	0x0802b176

08028470 <_printf_common>:
 8028470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8028474:	4616      	mov	r6, r2
 8028476:	4698      	mov	r8, r3
 8028478:	688a      	ldr	r2, [r1, #8]
 802847a:	690b      	ldr	r3, [r1, #16]
 802847c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8028480:	4293      	cmp	r3, r2
 8028482:	bfb8      	it	lt
 8028484:	4613      	movlt	r3, r2
 8028486:	6033      	str	r3, [r6, #0]
 8028488:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 802848c:	4607      	mov	r7, r0
 802848e:	460c      	mov	r4, r1
 8028490:	b10a      	cbz	r2, 8028496 <_printf_common+0x26>
 8028492:	3301      	adds	r3, #1
 8028494:	6033      	str	r3, [r6, #0]
 8028496:	6823      	ldr	r3, [r4, #0]
 8028498:	0699      	lsls	r1, r3, #26
 802849a:	bf42      	ittt	mi
 802849c:	6833      	ldrmi	r3, [r6, #0]
 802849e:	3302      	addmi	r3, #2
 80284a0:	6033      	strmi	r3, [r6, #0]
 80284a2:	6825      	ldr	r5, [r4, #0]
 80284a4:	f015 0506 	ands.w	r5, r5, #6
 80284a8:	d106      	bne.n	80284b8 <_printf_common+0x48>
 80284aa:	f104 0a19 	add.w	sl, r4, #25
 80284ae:	68e3      	ldr	r3, [r4, #12]
 80284b0:	6832      	ldr	r2, [r6, #0]
 80284b2:	1a9b      	subs	r3, r3, r2
 80284b4:	42ab      	cmp	r3, r5
 80284b6:	dc26      	bgt.n	8028506 <_printf_common+0x96>
 80284b8:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80284bc:	6822      	ldr	r2, [r4, #0]
 80284be:	3b00      	subs	r3, #0
 80284c0:	bf18      	it	ne
 80284c2:	2301      	movne	r3, #1
 80284c4:	0692      	lsls	r2, r2, #26
 80284c6:	d42b      	bmi.n	8028520 <_printf_common+0xb0>
 80284c8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80284cc:	4641      	mov	r1, r8
 80284ce:	4638      	mov	r0, r7
 80284d0:	47c8      	blx	r9
 80284d2:	3001      	adds	r0, #1
 80284d4:	d01e      	beq.n	8028514 <_printf_common+0xa4>
 80284d6:	6823      	ldr	r3, [r4, #0]
 80284d8:	6922      	ldr	r2, [r4, #16]
 80284da:	f003 0306 	and.w	r3, r3, #6
 80284de:	2b04      	cmp	r3, #4
 80284e0:	bf02      	ittt	eq
 80284e2:	68e5      	ldreq	r5, [r4, #12]
 80284e4:	6833      	ldreq	r3, [r6, #0]
 80284e6:	1aed      	subeq	r5, r5, r3
 80284e8:	68a3      	ldr	r3, [r4, #8]
 80284ea:	bf0c      	ite	eq
 80284ec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80284f0:	2500      	movne	r5, #0
 80284f2:	4293      	cmp	r3, r2
 80284f4:	bfc4      	itt	gt
 80284f6:	1a9b      	subgt	r3, r3, r2
 80284f8:	18ed      	addgt	r5, r5, r3
 80284fa:	2600      	movs	r6, #0
 80284fc:	341a      	adds	r4, #26
 80284fe:	42b5      	cmp	r5, r6
 8028500:	d11a      	bne.n	8028538 <_printf_common+0xc8>
 8028502:	2000      	movs	r0, #0
 8028504:	e008      	b.n	8028518 <_printf_common+0xa8>
 8028506:	2301      	movs	r3, #1
 8028508:	4652      	mov	r2, sl
 802850a:	4641      	mov	r1, r8
 802850c:	4638      	mov	r0, r7
 802850e:	47c8      	blx	r9
 8028510:	3001      	adds	r0, #1
 8028512:	d103      	bne.n	802851c <_printf_common+0xac>
 8028514:	f04f 30ff 	mov.w	r0, #4294967295
 8028518:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802851c:	3501      	adds	r5, #1
 802851e:	e7c6      	b.n	80284ae <_printf_common+0x3e>
 8028520:	18e1      	adds	r1, r4, r3
 8028522:	1c5a      	adds	r2, r3, #1
 8028524:	2030      	movs	r0, #48	@ 0x30
 8028526:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802852a:	4422      	add	r2, r4
 802852c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8028530:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8028534:	3302      	adds	r3, #2
 8028536:	e7c7      	b.n	80284c8 <_printf_common+0x58>
 8028538:	2301      	movs	r3, #1
 802853a:	4622      	mov	r2, r4
 802853c:	4641      	mov	r1, r8
 802853e:	4638      	mov	r0, r7
 8028540:	47c8      	blx	r9
 8028542:	3001      	adds	r0, #1
 8028544:	d0e6      	beq.n	8028514 <_printf_common+0xa4>
 8028546:	3601      	adds	r6, #1
 8028548:	e7d9      	b.n	80284fe <_printf_common+0x8e>
	...

0802854c <_printf_i>:
 802854c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8028550:	7e0f      	ldrb	r7, [r1, #24]
 8028552:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8028554:	2f78      	cmp	r7, #120	@ 0x78
 8028556:	4691      	mov	r9, r2
 8028558:	4680      	mov	r8, r0
 802855a:	460c      	mov	r4, r1
 802855c:	469a      	mov	sl, r3
 802855e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8028562:	d807      	bhi.n	8028574 <_printf_i+0x28>
 8028564:	2f62      	cmp	r7, #98	@ 0x62
 8028566:	d80a      	bhi.n	802857e <_printf_i+0x32>
 8028568:	2f00      	cmp	r7, #0
 802856a:	f000 80d2 	beq.w	8028712 <_printf_i+0x1c6>
 802856e:	2f58      	cmp	r7, #88	@ 0x58
 8028570:	f000 80b9 	beq.w	80286e6 <_printf_i+0x19a>
 8028574:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8028578:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 802857c:	e03a      	b.n	80285f4 <_printf_i+0xa8>
 802857e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8028582:	2b15      	cmp	r3, #21
 8028584:	d8f6      	bhi.n	8028574 <_printf_i+0x28>
 8028586:	a101      	add	r1, pc, #4	@ (adr r1, 802858c <_printf_i+0x40>)
 8028588:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802858c:	080285e5 	.word	0x080285e5
 8028590:	080285f9 	.word	0x080285f9
 8028594:	08028575 	.word	0x08028575
 8028598:	08028575 	.word	0x08028575
 802859c:	08028575 	.word	0x08028575
 80285a0:	08028575 	.word	0x08028575
 80285a4:	080285f9 	.word	0x080285f9
 80285a8:	08028575 	.word	0x08028575
 80285ac:	08028575 	.word	0x08028575
 80285b0:	08028575 	.word	0x08028575
 80285b4:	08028575 	.word	0x08028575
 80285b8:	080286f9 	.word	0x080286f9
 80285bc:	08028623 	.word	0x08028623
 80285c0:	080286b3 	.word	0x080286b3
 80285c4:	08028575 	.word	0x08028575
 80285c8:	08028575 	.word	0x08028575
 80285cc:	0802871b 	.word	0x0802871b
 80285d0:	08028575 	.word	0x08028575
 80285d4:	08028623 	.word	0x08028623
 80285d8:	08028575 	.word	0x08028575
 80285dc:	08028575 	.word	0x08028575
 80285e0:	080286bb 	.word	0x080286bb
 80285e4:	6833      	ldr	r3, [r6, #0]
 80285e6:	1d1a      	adds	r2, r3, #4
 80285e8:	681b      	ldr	r3, [r3, #0]
 80285ea:	6032      	str	r2, [r6, #0]
 80285ec:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80285f0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80285f4:	2301      	movs	r3, #1
 80285f6:	e09d      	b.n	8028734 <_printf_i+0x1e8>
 80285f8:	6833      	ldr	r3, [r6, #0]
 80285fa:	6820      	ldr	r0, [r4, #0]
 80285fc:	1d19      	adds	r1, r3, #4
 80285fe:	6031      	str	r1, [r6, #0]
 8028600:	0606      	lsls	r6, r0, #24
 8028602:	d501      	bpl.n	8028608 <_printf_i+0xbc>
 8028604:	681d      	ldr	r5, [r3, #0]
 8028606:	e003      	b.n	8028610 <_printf_i+0xc4>
 8028608:	0645      	lsls	r5, r0, #25
 802860a:	d5fb      	bpl.n	8028604 <_printf_i+0xb8>
 802860c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8028610:	2d00      	cmp	r5, #0
 8028612:	da03      	bge.n	802861c <_printf_i+0xd0>
 8028614:	232d      	movs	r3, #45	@ 0x2d
 8028616:	426d      	negs	r5, r5
 8028618:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802861c:	4859      	ldr	r0, [pc, #356]	@ (8028784 <_printf_i+0x238>)
 802861e:	230a      	movs	r3, #10
 8028620:	e011      	b.n	8028646 <_printf_i+0xfa>
 8028622:	6821      	ldr	r1, [r4, #0]
 8028624:	6833      	ldr	r3, [r6, #0]
 8028626:	0608      	lsls	r0, r1, #24
 8028628:	f853 5b04 	ldr.w	r5, [r3], #4
 802862c:	d402      	bmi.n	8028634 <_printf_i+0xe8>
 802862e:	0649      	lsls	r1, r1, #25
 8028630:	bf48      	it	mi
 8028632:	b2ad      	uxthmi	r5, r5
 8028634:	2f6f      	cmp	r7, #111	@ 0x6f
 8028636:	4853      	ldr	r0, [pc, #332]	@ (8028784 <_printf_i+0x238>)
 8028638:	6033      	str	r3, [r6, #0]
 802863a:	bf14      	ite	ne
 802863c:	230a      	movne	r3, #10
 802863e:	2308      	moveq	r3, #8
 8028640:	2100      	movs	r1, #0
 8028642:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8028646:	6866      	ldr	r6, [r4, #4]
 8028648:	60a6      	str	r6, [r4, #8]
 802864a:	2e00      	cmp	r6, #0
 802864c:	bfa2      	ittt	ge
 802864e:	6821      	ldrge	r1, [r4, #0]
 8028650:	f021 0104 	bicge.w	r1, r1, #4
 8028654:	6021      	strge	r1, [r4, #0]
 8028656:	b90d      	cbnz	r5, 802865c <_printf_i+0x110>
 8028658:	2e00      	cmp	r6, #0
 802865a:	d04b      	beq.n	80286f4 <_printf_i+0x1a8>
 802865c:	4616      	mov	r6, r2
 802865e:	fbb5 f1f3 	udiv	r1, r5, r3
 8028662:	fb03 5711 	mls	r7, r3, r1, r5
 8028666:	5dc7      	ldrb	r7, [r0, r7]
 8028668:	f806 7d01 	strb.w	r7, [r6, #-1]!
 802866c:	462f      	mov	r7, r5
 802866e:	42bb      	cmp	r3, r7
 8028670:	460d      	mov	r5, r1
 8028672:	d9f4      	bls.n	802865e <_printf_i+0x112>
 8028674:	2b08      	cmp	r3, #8
 8028676:	d10b      	bne.n	8028690 <_printf_i+0x144>
 8028678:	6823      	ldr	r3, [r4, #0]
 802867a:	07df      	lsls	r7, r3, #31
 802867c:	d508      	bpl.n	8028690 <_printf_i+0x144>
 802867e:	6923      	ldr	r3, [r4, #16]
 8028680:	6861      	ldr	r1, [r4, #4]
 8028682:	4299      	cmp	r1, r3
 8028684:	bfde      	ittt	le
 8028686:	2330      	movle	r3, #48	@ 0x30
 8028688:	f806 3c01 	strble.w	r3, [r6, #-1]
 802868c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8028690:	1b92      	subs	r2, r2, r6
 8028692:	6122      	str	r2, [r4, #16]
 8028694:	f8cd a000 	str.w	sl, [sp]
 8028698:	464b      	mov	r3, r9
 802869a:	aa03      	add	r2, sp, #12
 802869c:	4621      	mov	r1, r4
 802869e:	4640      	mov	r0, r8
 80286a0:	f7ff fee6 	bl	8028470 <_printf_common>
 80286a4:	3001      	adds	r0, #1
 80286a6:	d14a      	bne.n	802873e <_printf_i+0x1f2>
 80286a8:	f04f 30ff 	mov.w	r0, #4294967295
 80286ac:	b004      	add	sp, #16
 80286ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80286b2:	6823      	ldr	r3, [r4, #0]
 80286b4:	f043 0320 	orr.w	r3, r3, #32
 80286b8:	6023      	str	r3, [r4, #0]
 80286ba:	4833      	ldr	r0, [pc, #204]	@ (8028788 <_printf_i+0x23c>)
 80286bc:	2778      	movs	r7, #120	@ 0x78
 80286be:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80286c2:	6823      	ldr	r3, [r4, #0]
 80286c4:	6831      	ldr	r1, [r6, #0]
 80286c6:	061f      	lsls	r7, r3, #24
 80286c8:	f851 5b04 	ldr.w	r5, [r1], #4
 80286cc:	d402      	bmi.n	80286d4 <_printf_i+0x188>
 80286ce:	065f      	lsls	r7, r3, #25
 80286d0:	bf48      	it	mi
 80286d2:	b2ad      	uxthmi	r5, r5
 80286d4:	6031      	str	r1, [r6, #0]
 80286d6:	07d9      	lsls	r1, r3, #31
 80286d8:	bf44      	itt	mi
 80286da:	f043 0320 	orrmi.w	r3, r3, #32
 80286de:	6023      	strmi	r3, [r4, #0]
 80286e0:	b11d      	cbz	r5, 80286ea <_printf_i+0x19e>
 80286e2:	2310      	movs	r3, #16
 80286e4:	e7ac      	b.n	8028640 <_printf_i+0xf4>
 80286e6:	4827      	ldr	r0, [pc, #156]	@ (8028784 <_printf_i+0x238>)
 80286e8:	e7e9      	b.n	80286be <_printf_i+0x172>
 80286ea:	6823      	ldr	r3, [r4, #0]
 80286ec:	f023 0320 	bic.w	r3, r3, #32
 80286f0:	6023      	str	r3, [r4, #0]
 80286f2:	e7f6      	b.n	80286e2 <_printf_i+0x196>
 80286f4:	4616      	mov	r6, r2
 80286f6:	e7bd      	b.n	8028674 <_printf_i+0x128>
 80286f8:	6833      	ldr	r3, [r6, #0]
 80286fa:	6825      	ldr	r5, [r4, #0]
 80286fc:	6961      	ldr	r1, [r4, #20]
 80286fe:	1d18      	adds	r0, r3, #4
 8028700:	6030      	str	r0, [r6, #0]
 8028702:	062e      	lsls	r6, r5, #24
 8028704:	681b      	ldr	r3, [r3, #0]
 8028706:	d501      	bpl.n	802870c <_printf_i+0x1c0>
 8028708:	6019      	str	r1, [r3, #0]
 802870a:	e002      	b.n	8028712 <_printf_i+0x1c6>
 802870c:	0668      	lsls	r0, r5, #25
 802870e:	d5fb      	bpl.n	8028708 <_printf_i+0x1bc>
 8028710:	8019      	strh	r1, [r3, #0]
 8028712:	2300      	movs	r3, #0
 8028714:	6123      	str	r3, [r4, #16]
 8028716:	4616      	mov	r6, r2
 8028718:	e7bc      	b.n	8028694 <_printf_i+0x148>
 802871a:	6833      	ldr	r3, [r6, #0]
 802871c:	1d1a      	adds	r2, r3, #4
 802871e:	6032      	str	r2, [r6, #0]
 8028720:	681e      	ldr	r6, [r3, #0]
 8028722:	6862      	ldr	r2, [r4, #4]
 8028724:	2100      	movs	r1, #0
 8028726:	4630      	mov	r0, r6
 8028728:	f7d7 fd72 	bl	8000210 <memchr>
 802872c:	b108      	cbz	r0, 8028732 <_printf_i+0x1e6>
 802872e:	1b80      	subs	r0, r0, r6
 8028730:	6060      	str	r0, [r4, #4]
 8028732:	6863      	ldr	r3, [r4, #4]
 8028734:	6123      	str	r3, [r4, #16]
 8028736:	2300      	movs	r3, #0
 8028738:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802873c:	e7aa      	b.n	8028694 <_printf_i+0x148>
 802873e:	6923      	ldr	r3, [r4, #16]
 8028740:	4632      	mov	r2, r6
 8028742:	4649      	mov	r1, r9
 8028744:	4640      	mov	r0, r8
 8028746:	47d0      	blx	sl
 8028748:	3001      	adds	r0, #1
 802874a:	d0ad      	beq.n	80286a8 <_printf_i+0x15c>
 802874c:	6823      	ldr	r3, [r4, #0]
 802874e:	079b      	lsls	r3, r3, #30
 8028750:	d413      	bmi.n	802877a <_printf_i+0x22e>
 8028752:	68e0      	ldr	r0, [r4, #12]
 8028754:	9b03      	ldr	r3, [sp, #12]
 8028756:	4298      	cmp	r0, r3
 8028758:	bfb8      	it	lt
 802875a:	4618      	movlt	r0, r3
 802875c:	e7a6      	b.n	80286ac <_printf_i+0x160>
 802875e:	2301      	movs	r3, #1
 8028760:	4632      	mov	r2, r6
 8028762:	4649      	mov	r1, r9
 8028764:	4640      	mov	r0, r8
 8028766:	47d0      	blx	sl
 8028768:	3001      	adds	r0, #1
 802876a:	d09d      	beq.n	80286a8 <_printf_i+0x15c>
 802876c:	3501      	adds	r5, #1
 802876e:	68e3      	ldr	r3, [r4, #12]
 8028770:	9903      	ldr	r1, [sp, #12]
 8028772:	1a5b      	subs	r3, r3, r1
 8028774:	42ab      	cmp	r3, r5
 8028776:	dcf2      	bgt.n	802875e <_printf_i+0x212>
 8028778:	e7eb      	b.n	8028752 <_printf_i+0x206>
 802877a:	2500      	movs	r5, #0
 802877c:	f104 0619 	add.w	r6, r4, #25
 8028780:	e7f5      	b.n	802876e <_printf_i+0x222>
 8028782:	bf00      	nop
 8028784:	0802b181 	.word	0x0802b181
 8028788:	0802b192 	.word	0x0802b192

0802878c <__sflush_r>:
 802878c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8028790:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8028794:	0716      	lsls	r6, r2, #28
 8028796:	4605      	mov	r5, r0
 8028798:	460c      	mov	r4, r1
 802879a:	d454      	bmi.n	8028846 <__sflush_r+0xba>
 802879c:	684b      	ldr	r3, [r1, #4]
 802879e:	2b00      	cmp	r3, #0
 80287a0:	dc02      	bgt.n	80287a8 <__sflush_r+0x1c>
 80287a2:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80287a4:	2b00      	cmp	r3, #0
 80287a6:	dd48      	ble.n	802883a <__sflush_r+0xae>
 80287a8:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80287aa:	2e00      	cmp	r6, #0
 80287ac:	d045      	beq.n	802883a <__sflush_r+0xae>
 80287ae:	2300      	movs	r3, #0
 80287b0:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80287b4:	682f      	ldr	r7, [r5, #0]
 80287b6:	6a21      	ldr	r1, [r4, #32]
 80287b8:	602b      	str	r3, [r5, #0]
 80287ba:	d030      	beq.n	802881e <__sflush_r+0x92>
 80287bc:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80287be:	89a3      	ldrh	r3, [r4, #12]
 80287c0:	0759      	lsls	r1, r3, #29
 80287c2:	d505      	bpl.n	80287d0 <__sflush_r+0x44>
 80287c4:	6863      	ldr	r3, [r4, #4]
 80287c6:	1ad2      	subs	r2, r2, r3
 80287c8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80287ca:	b10b      	cbz	r3, 80287d0 <__sflush_r+0x44>
 80287cc:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80287ce:	1ad2      	subs	r2, r2, r3
 80287d0:	2300      	movs	r3, #0
 80287d2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80287d4:	6a21      	ldr	r1, [r4, #32]
 80287d6:	4628      	mov	r0, r5
 80287d8:	47b0      	blx	r6
 80287da:	1c43      	adds	r3, r0, #1
 80287dc:	89a3      	ldrh	r3, [r4, #12]
 80287de:	d106      	bne.n	80287ee <__sflush_r+0x62>
 80287e0:	6829      	ldr	r1, [r5, #0]
 80287e2:	291d      	cmp	r1, #29
 80287e4:	d82b      	bhi.n	802883e <__sflush_r+0xb2>
 80287e6:	4a2a      	ldr	r2, [pc, #168]	@ (8028890 <__sflush_r+0x104>)
 80287e8:	410a      	asrs	r2, r1
 80287ea:	07d6      	lsls	r6, r2, #31
 80287ec:	d427      	bmi.n	802883e <__sflush_r+0xb2>
 80287ee:	2200      	movs	r2, #0
 80287f0:	6062      	str	r2, [r4, #4]
 80287f2:	04d9      	lsls	r1, r3, #19
 80287f4:	6922      	ldr	r2, [r4, #16]
 80287f6:	6022      	str	r2, [r4, #0]
 80287f8:	d504      	bpl.n	8028804 <__sflush_r+0x78>
 80287fa:	1c42      	adds	r2, r0, #1
 80287fc:	d101      	bne.n	8028802 <__sflush_r+0x76>
 80287fe:	682b      	ldr	r3, [r5, #0]
 8028800:	b903      	cbnz	r3, 8028804 <__sflush_r+0x78>
 8028802:	6560      	str	r0, [r4, #84]	@ 0x54
 8028804:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8028806:	602f      	str	r7, [r5, #0]
 8028808:	b1b9      	cbz	r1, 802883a <__sflush_r+0xae>
 802880a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802880e:	4299      	cmp	r1, r3
 8028810:	d002      	beq.n	8028818 <__sflush_r+0x8c>
 8028812:	4628      	mov	r0, r5
 8028814:	f7ff fca0 	bl	8028158 <_free_r>
 8028818:	2300      	movs	r3, #0
 802881a:	6363      	str	r3, [r4, #52]	@ 0x34
 802881c:	e00d      	b.n	802883a <__sflush_r+0xae>
 802881e:	2301      	movs	r3, #1
 8028820:	4628      	mov	r0, r5
 8028822:	47b0      	blx	r6
 8028824:	4602      	mov	r2, r0
 8028826:	1c50      	adds	r0, r2, #1
 8028828:	d1c9      	bne.n	80287be <__sflush_r+0x32>
 802882a:	682b      	ldr	r3, [r5, #0]
 802882c:	2b00      	cmp	r3, #0
 802882e:	d0c6      	beq.n	80287be <__sflush_r+0x32>
 8028830:	2b1d      	cmp	r3, #29
 8028832:	d001      	beq.n	8028838 <__sflush_r+0xac>
 8028834:	2b16      	cmp	r3, #22
 8028836:	d11e      	bne.n	8028876 <__sflush_r+0xea>
 8028838:	602f      	str	r7, [r5, #0]
 802883a:	2000      	movs	r0, #0
 802883c:	e022      	b.n	8028884 <__sflush_r+0xf8>
 802883e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028842:	b21b      	sxth	r3, r3
 8028844:	e01b      	b.n	802887e <__sflush_r+0xf2>
 8028846:	690f      	ldr	r7, [r1, #16]
 8028848:	2f00      	cmp	r7, #0
 802884a:	d0f6      	beq.n	802883a <__sflush_r+0xae>
 802884c:	0793      	lsls	r3, r2, #30
 802884e:	680e      	ldr	r6, [r1, #0]
 8028850:	bf08      	it	eq
 8028852:	694b      	ldreq	r3, [r1, #20]
 8028854:	600f      	str	r7, [r1, #0]
 8028856:	bf18      	it	ne
 8028858:	2300      	movne	r3, #0
 802885a:	eba6 0807 	sub.w	r8, r6, r7
 802885e:	608b      	str	r3, [r1, #8]
 8028860:	f1b8 0f00 	cmp.w	r8, #0
 8028864:	dde9      	ble.n	802883a <__sflush_r+0xae>
 8028866:	6a21      	ldr	r1, [r4, #32]
 8028868:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 802886a:	4643      	mov	r3, r8
 802886c:	463a      	mov	r2, r7
 802886e:	4628      	mov	r0, r5
 8028870:	47b0      	blx	r6
 8028872:	2800      	cmp	r0, #0
 8028874:	dc08      	bgt.n	8028888 <__sflush_r+0xfc>
 8028876:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802887a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 802887e:	81a3      	strh	r3, [r4, #12]
 8028880:	f04f 30ff 	mov.w	r0, #4294967295
 8028884:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8028888:	4407      	add	r7, r0
 802888a:	eba8 0800 	sub.w	r8, r8, r0
 802888e:	e7e7      	b.n	8028860 <__sflush_r+0xd4>
 8028890:	dfbffffe 	.word	0xdfbffffe

08028894 <_fflush_r>:
 8028894:	b538      	push	{r3, r4, r5, lr}
 8028896:	690b      	ldr	r3, [r1, #16]
 8028898:	4605      	mov	r5, r0
 802889a:	460c      	mov	r4, r1
 802889c:	b913      	cbnz	r3, 80288a4 <_fflush_r+0x10>
 802889e:	2500      	movs	r5, #0
 80288a0:	4628      	mov	r0, r5
 80288a2:	bd38      	pop	{r3, r4, r5, pc}
 80288a4:	b118      	cbz	r0, 80288ae <_fflush_r+0x1a>
 80288a6:	6a03      	ldr	r3, [r0, #32]
 80288a8:	b90b      	cbnz	r3, 80288ae <_fflush_r+0x1a>
 80288aa:	f7ff fa8f 	bl	8027dcc <__sinit>
 80288ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80288b2:	2b00      	cmp	r3, #0
 80288b4:	d0f3      	beq.n	802889e <_fflush_r+0xa>
 80288b6:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80288b8:	07d0      	lsls	r0, r2, #31
 80288ba:	d404      	bmi.n	80288c6 <_fflush_r+0x32>
 80288bc:	0599      	lsls	r1, r3, #22
 80288be:	d402      	bmi.n	80288c6 <_fflush_r+0x32>
 80288c0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80288c2:	f7ff fbdc 	bl	802807e <__retarget_lock_acquire_recursive>
 80288c6:	4628      	mov	r0, r5
 80288c8:	4621      	mov	r1, r4
 80288ca:	f7ff ff5f 	bl	802878c <__sflush_r>
 80288ce:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80288d0:	07da      	lsls	r2, r3, #31
 80288d2:	4605      	mov	r5, r0
 80288d4:	d4e4      	bmi.n	80288a0 <_fflush_r+0xc>
 80288d6:	89a3      	ldrh	r3, [r4, #12]
 80288d8:	059b      	lsls	r3, r3, #22
 80288da:	d4e1      	bmi.n	80288a0 <_fflush_r+0xc>
 80288dc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80288de:	f7ff fbcf 	bl	8028080 <__retarget_lock_release_recursive>
 80288e2:	e7dd      	b.n	80288a0 <_fflush_r+0xc>

080288e4 <__swbuf_r>:
 80288e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80288e6:	460e      	mov	r6, r1
 80288e8:	4614      	mov	r4, r2
 80288ea:	4605      	mov	r5, r0
 80288ec:	b118      	cbz	r0, 80288f6 <__swbuf_r+0x12>
 80288ee:	6a03      	ldr	r3, [r0, #32]
 80288f0:	b90b      	cbnz	r3, 80288f6 <__swbuf_r+0x12>
 80288f2:	f7ff fa6b 	bl	8027dcc <__sinit>
 80288f6:	69a3      	ldr	r3, [r4, #24]
 80288f8:	60a3      	str	r3, [r4, #8]
 80288fa:	89a3      	ldrh	r3, [r4, #12]
 80288fc:	071a      	lsls	r2, r3, #28
 80288fe:	d501      	bpl.n	8028904 <__swbuf_r+0x20>
 8028900:	6923      	ldr	r3, [r4, #16]
 8028902:	b943      	cbnz	r3, 8028916 <__swbuf_r+0x32>
 8028904:	4621      	mov	r1, r4
 8028906:	4628      	mov	r0, r5
 8028908:	f000 f82a 	bl	8028960 <__swsetup_r>
 802890c:	b118      	cbz	r0, 8028916 <__swbuf_r+0x32>
 802890e:	f04f 37ff 	mov.w	r7, #4294967295
 8028912:	4638      	mov	r0, r7
 8028914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8028916:	6823      	ldr	r3, [r4, #0]
 8028918:	6922      	ldr	r2, [r4, #16]
 802891a:	1a98      	subs	r0, r3, r2
 802891c:	6963      	ldr	r3, [r4, #20]
 802891e:	b2f6      	uxtb	r6, r6
 8028920:	4283      	cmp	r3, r0
 8028922:	4637      	mov	r7, r6
 8028924:	dc05      	bgt.n	8028932 <__swbuf_r+0x4e>
 8028926:	4621      	mov	r1, r4
 8028928:	4628      	mov	r0, r5
 802892a:	f7ff ffb3 	bl	8028894 <_fflush_r>
 802892e:	2800      	cmp	r0, #0
 8028930:	d1ed      	bne.n	802890e <__swbuf_r+0x2a>
 8028932:	68a3      	ldr	r3, [r4, #8]
 8028934:	3b01      	subs	r3, #1
 8028936:	60a3      	str	r3, [r4, #8]
 8028938:	6823      	ldr	r3, [r4, #0]
 802893a:	1c5a      	adds	r2, r3, #1
 802893c:	6022      	str	r2, [r4, #0]
 802893e:	701e      	strb	r6, [r3, #0]
 8028940:	6962      	ldr	r2, [r4, #20]
 8028942:	1c43      	adds	r3, r0, #1
 8028944:	429a      	cmp	r2, r3
 8028946:	d004      	beq.n	8028952 <__swbuf_r+0x6e>
 8028948:	89a3      	ldrh	r3, [r4, #12]
 802894a:	07db      	lsls	r3, r3, #31
 802894c:	d5e1      	bpl.n	8028912 <__swbuf_r+0x2e>
 802894e:	2e0a      	cmp	r6, #10
 8028950:	d1df      	bne.n	8028912 <__swbuf_r+0x2e>
 8028952:	4621      	mov	r1, r4
 8028954:	4628      	mov	r0, r5
 8028956:	f7ff ff9d 	bl	8028894 <_fflush_r>
 802895a:	2800      	cmp	r0, #0
 802895c:	d0d9      	beq.n	8028912 <__swbuf_r+0x2e>
 802895e:	e7d6      	b.n	802890e <__swbuf_r+0x2a>

08028960 <__swsetup_r>:
 8028960:	b538      	push	{r3, r4, r5, lr}
 8028962:	4b29      	ldr	r3, [pc, #164]	@ (8028a08 <__swsetup_r+0xa8>)
 8028964:	4605      	mov	r5, r0
 8028966:	6818      	ldr	r0, [r3, #0]
 8028968:	460c      	mov	r4, r1
 802896a:	b118      	cbz	r0, 8028974 <__swsetup_r+0x14>
 802896c:	6a03      	ldr	r3, [r0, #32]
 802896e:	b90b      	cbnz	r3, 8028974 <__swsetup_r+0x14>
 8028970:	f7ff fa2c 	bl	8027dcc <__sinit>
 8028974:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028978:	0719      	lsls	r1, r3, #28
 802897a:	d422      	bmi.n	80289c2 <__swsetup_r+0x62>
 802897c:	06da      	lsls	r2, r3, #27
 802897e:	d407      	bmi.n	8028990 <__swsetup_r+0x30>
 8028980:	2209      	movs	r2, #9
 8028982:	602a      	str	r2, [r5, #0]
 8028984:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8028988:	81a3      	strh	r3, [r4, #12]
 802898a:	f04f 30ff 	mov.w	r0, #4294967295
 802898e:	e033      	b.n	80289f8 <__swsetup_r+0x98>
 8028990:	0758      	lsls	r0, r3, #29
 8028992:	d512      	bpl.n	80289ba <__swsetup_r+0x5a>
 8028994:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8028996:	b141      	cbz	r1, 80289aa <__swsetup_r+0x4a>
 8028998:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802899c:	4299      	cmp	r1, r3
 802899e:	d002      	beq.n	80289a6 <__swsetup_r+0x46>
 80289a0:	4628      	mov	r0, r5
 80289a2:	f7ff fbd9 	bl	8028158 <_free_r>
 80289a6:	2300      	movs	r3, #0
 80289a8:	6363      	str	r3, [r4, #52]	@ 0x34
 80289aa:	89a3      	ldrh	r3, [r4, #12]
 80289ac:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80289b0:	81a3      	strh	r3, [r4, #12]
 80289b2:	2300      	movs	r3, #0
 80289b4:	6063      	str	r3, [r4, #4]
 80289b6:	6923      	ldr	r3, [r4, #16]
 80289b8:	6023      	str	r3, [r4, #0]
 80289ba:	89a3      	ldrh	r3, [r4, #12]
 80289bc:	f043 0308 	orr.w	r3, r3, #8
 80289c0:	81a3      	strh	r3, [r4, #12]
 80289c2:	6923      	ldr	r3, [r4, #16]
 80289c4:	b94b      	cbnz	r3, 80289da <__swsetup_r+0x7a>
 80289c6:	89a3      	ldrh	r3, [r4, #12]
 80289c8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80289cc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80289d0:	d003      	beq.n	80289da <__swsetup_r+0x7a>
 80289d2:	4621      	mov	r1, r4
 80289d4:	4628      	mov	r0, r5
 80289d6:	f000 f83f 	bl	8028a58 <__smakebuf_r>
 80289da:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80289de:	f013 0201 	ands.w	r2, r3, #1
 80289e2:	d00a      	beq.n	80289fa <__swsetup_r+0x9a>
 80289e4:	2200      	movs	r2, #0
 80289e6:	60a2      	str	r2, [r4, #8]
 80289e8:	6962      	ldr	r2, [r4, #20]
 80289ea:	4252      	negs	r2, r2
 80289ec:	61a2      	str	r2, [r4, #24]
 80289ee:	6922      	ldr	r2, [r4, #16]
 80289f0:	b942      	cbnz	r2, 8028a04 <__swsetup_r+0xa4>
 80289f2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80289f6:	d1c5      	bne.n	8028984 <__swsetup_r+0x24>
 80289f8:	bd38      	pop	{r3, r4, r5, pc}
 80289fa:	0799      	lsls	r1, r3, #30
 80289fc:	bf58      	it	pl
 80289fe:	6962      	ldrpl	r2, [r4, #20]
 8028a00:	60a2      	str	r2, [r4, #8]
 8028a02:	e7f4      	b.n	80289ee <__swsetup_r+0x8e>
 8028a04:	2000      	movs	r0, #0
 8028a06:	e7f7      	b.n	80289f8 <__swsetup_r+0x98>
 8028a08:	2000022c 	.word	0x2000022c

08028a0c <__swhatbuf_r>:
 8028a0c:	b570      	push	{r4, r5, r6, lr}
 8028a0e:	460c      	mov	r4, r1
 8028a10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8028a14:	2900      	cmp	r1, #0
 8028a16:	b096      	sub	sp, #88	@ 0x58
 8028a18:	4615      	mov	r5, r2
 8028a1a:	461e      	mov	r6, r3
 8028a1c:	da0d      	bge.n	8028a3a <__swhatbuf_r+0x2e>
 8028a1e:	89a3      	ldrh	r3, [r4, #12]
 8028a20:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8028a24:	f04f 0100 	mov.w	r1, #0
 8028a28:	bf14      	ite	ne
 8028a2a:	2340      	movne	r3, #64	@ 0x40
 8028a2c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8028a30:	2000      	movs	r0, #0
 8028a32:	6031      	str	r1, [r6, #0]
 8028a34:	602b      	str	r3, [r5, #0]
 8028a36:	b016      	add	sp, #88	@ 0x58
 8028a38:	bd70      	pop	{r4, r5, r6, pc}
 8028a3a:	466a      	mov	r2, sp
 8028a3c:	f000 f848 	bl	8028ad0 <_fstat_r>
 8028a40:	2800      	cmp	r0, #0
 8028a42:	dbec      	blt.n	8028a1e <__swhatbuf_r+0x12>
 8028a44:	9901      	ldr	r1, [sp, #4]
 8028a46:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8028a4a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8028a4e:	4259      	negs	r1, r3
 8028a50:	4159      	adcs	r1, r3
 8028a52:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8028a56:	e7eb      	b.n	8028a30 <__swhatbuf_r+0x24>

08028a58 <__smakebuf_r>:
 8028a58:	898b      	ldrh	r3, [r1, #12]
 8028a5a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8028a5c:	079d      	lsls	r5, r3, #30
 8028a5e:	4606      	mov	r6, r0
 8028a60:	460c      	mov	r4, r1
 8028a62:	d507      	bpl.n	8028a74 <__smakebuf_r+0x1c>
 8028a64:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8028a68:	6023      	str	r3, [r4, #0]
 8028a6a:	6123      	str	r3, [r4, #16]
 8028a6c:	2301      	movs	r3, #1
 8028a6e:	6163      	str	r3, [r4, #20]
 8028a70:	b003      	add	sp, #12
 8028a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8028a74:	ab01      	add	r3, sp, #4
 8028a76:	466a      	mov	r2, sp
 8028a78:	f7ff ffc8 	bl	8028a0c <__swhatbuf_r>
 8028a7c:	9f00      	ldr	r7, [sp, #0]
 8028a7e:	4605      	mov	r5, r0
 8028a80:	4639      	mov	r1, r7
 8028a82:	4630      	mov	r0, r6
 8028a84:	f7ff f87c 	bl	8027b80 <_malloc_r>
 8028a88:	b948      	cbnz	r0, 8028a9e <__smakebuf_r+0x46>
 8028a8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8028a8e:	059a      	lsls	r2, r3, #22
 8028a90:	d4ee      	bmi.n	8028a70 <__smakebuf_r+0x18>
 8028a92:	f023 0303 	bic.w	r3, r3, #3
 8028a96:	f043 0302 	orr.w	r3, r3, #2
 8028a9a:	81a3      	strh	r3, [r4, #12]
 8028a9c:	e7e2      	b.n	8028a64 <__smakebuf_r+0xc>
 8028a9e:	89a3      	ldrh	r3, [r4, #12]
 8028aa0:	6020      	str	r0, [r4, #0]
 8028aa2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8028aa6:	81a3      	strh	r3, [r4, #12]
 8028aa8:	9b01      	ldr	r3, [sp, #4]
 8028aaa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8028aae:	b15b      	cbz	r3, 8028ac8 <__smakebuf_r+0x70>
 8028ab0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8028ab4:	4630      	mov	r0, r6
 8028ab6:	f000 f81d 	bl	8028af4 <_isatty_r>
 8028aba:	b128      	cbz	r0, 8028ac8 <__smakebuf_r+0x70>
 8028abc:	89a3      	ldrh	r3, [r4, #12]
 8028abe:	f023 0303 	bic.w	r3, r3, #3
 8028ac2:	f043 0301 	orr.w	r3, r3, #1
 8028ac6:	81a3      	strh	r3, [r4, #12]
 8028ac8:	89a3      	ldrh	r3, [r4, #12]
 8028aca:	431d      	orrs	r5, r3
 8028acc:	81a5      	strh	r5, [r4, #12]
 8028ace:	e7cf      	b.n	8028a70 <__smakebuf_r+0x18>

08028ad0 <_fstat_r>:
 8028ad0:	b538      	push	{r3, r4, r5, lr}
 8028ad2:	4d07      	ldr	r5, [pc, #28]	@ (8028af0 <_fstat_r+0x20>)
 8028ad4:	2300      	movs	r3, #0
 8028ad6:	4604      	mov	r4, r0
 8028ad8:	4608      	mov	r0, r1
 8028ada:	4611      	mov	r1, r2
 8028adc:	602b      	str	r3, [r5, #0]
 8028ade:	f7d8 fe55 	bl	800178c <_fstat>
 8028ae2:	1c43      	adds	r3, r0, #1
 8028ae4:	d102      	bne.n	8028aec <_fstat_r+0x1c>
 8028ae6:	682b      	ldr	r3, [r5, #0]
 8028ae8:	b103      	cbz	r3, 8028aec <_fstat_r+0x1c>
 8028aea:	6023      	str	r3, [r4, #0]
 8028aec:	bd38      	pop	{r3, r4, r5, pc}
 8028aee:	bf00      	nop
 8028af0:	20004524 	.word	0x20004524

08028af4 <_isatty_r>:
 8028af4:	b538      	push	{r3, r4, r5, lr}
 8028af6:	4d06      	ldr	r5, [pc, #24]	@ (8028b10 <_isatty_r+0x1c>)
 8028af8:	2300      	movs	r3, #0
 8028afa:	4604      	mov	r4, r0
 8028afc:	4608      	mov	r0, r1
 8028afe:	602b      	str	r3, [r5, #0]
 8028b00:	f7d8 fe54 	bl	80017ac <_isatty>
 8028b04:	1c43      	adds	r3, r0, #1
 8028b06:	d102      	bne.n	8028b0e <_isatty_r+0x1a>
 8028b08:	682b      	ldr	r3, [r5, #0]
 8028b0a:	b103      	cbz	r3, 8028b0e <_isatty_r+0x1a>
 8028b0c:	6023      	str	r3, [r4, #0]
 8028b0e:	bd38      	pop	{r3, r4, r5, pc}
 8028b10:	20004524 	.word	0x20004524

08028b14 <_init>:
 8028b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028b16:	bf00      	nop
 8028b18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028b1a:	bc08      	pop	{r3}
 8028b1c:	469e      	mov	lr, r3
 8028b1e:	4770      	bx	lr

08028b20 <_fini>:
 8028b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8028b22:	bf00      	nop
 8028b24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8028b26:	bc08      	pop	{r3}
 8028b28:	469e      	mov	lr, r3
 8028b2a:	4770      	bx	lr

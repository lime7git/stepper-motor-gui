/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/initial_screen/InitialViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>

InitialViewBase::InitialViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X272_PUZZLE_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);
    tiledImage1.setAlpha(0);
    add(tiledImage1);

    circleProgress1.setXY(185, 156);
    circleProgress1.setProgressIndicatorPosition(0, 0, 110, 110);
    circleProgress1.setRange(0, 100, 50, 0);
    circleProgress1.setCenter(55, 55);
    circleProgress1.setRadius(50);
    circleProgress1.setLineWidth(10);
    circleProgress1.setStartEndAngle(-90, 270);
    circleProgress1.setCapPrecision(10);
    circleProgress1.setBackground(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_CIRCLEPROGRESS_BACKGROUNDS_SMALL_ID));
    circleProgress1Painter.setColor(touchgfx::Color::getColorFromRGB(8, 9, 9));
    circleProgress1.setPainter(circleProgress1Painter);
    circleProgress1.setValue(0);
    circleProgress1.setAlpha(0);
    add(circleProgress1);
}

InitialViewBase::~InitialViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void InitialViewBase::setupScreen()
{
    transitionBegins();
}

void InitialViewBase::handleTickEvent()
{
    //handleTickEvent1
    //When every N tick call virtual function
    //Call handleTickEvent1
    handleTickEvent1();
}

void InitialViewBase::changeToScreen1()
{
    //Interaction1
    //When changeToScreen1 is called change screen to Screen1
    //Go to Screen1 with block transition
    application().gotoScreen1ScreenBlockTransition();
}

void InitialViewBase::transitionBegins()
{
    //Interaction2
    //When screen transition begins fade circleProgress1
    //Fade circleProgress1 to alpha:255 with LinearIn easing in 500 ms (30 Ticks)
    circleProgress1.clearFadeAnimationEndedAction();
    circleProgress1.startFadeAnimation(255, 30, touchgfx::EasingEquations::linearEaseIn);

    //Interaction3
    //When screen transition begins fade tiledImage1
    //Fade tiledImage1 to alpha:255 with LinearIn easing in 500 ms (30 Ticks)
    tiledImage1.clearFadeAnimationEndedAction();
    tiledImage1.startFadeAnimation(255, 30, touchgfx::EasingEquations::linearEaseIn);
}
